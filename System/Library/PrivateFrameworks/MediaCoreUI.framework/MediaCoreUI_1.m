double sub_241351A68@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  _OWORD v27[2];
  char v28;

  v3 = *(_OWORD *)(v1 + 16);
  v27[0] = *(_OWORD *)v1;
  v27[1] = v3;
  v28 = *(_BYTE *)(v1 + 32);
  v4 = sub_2414B4A44();
  v6 = v5;
  sub_241351870((uint64_t)v27, (uint64_t)&v17);
  v7 = v20;
  result = v21;
  v9 = v22;
  v10 = v25;
  v11 = v26;
  v12 = v23;
  v13 = v24;
  v15 = v18;
  v14 = v19;
  v16 = v17;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v7;
  *(double *)(a1 + 56) = result;
  *(_QWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = v12;
  *(_OWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 104) = v10;
  *(_BYTE *)(a1 + 112) = v11;
  return result;
}

double sub_241351B08@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  float v3;
  float v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(float *)v1;
  v4 = 1.0;
  if (*(float *)v1 <= 1.0)
    v4 = *(float *)v1;
  v5 = *(double *)(v1 + 16) * 0.5;
  v6 = v4;
  sub_2414B304C();
  sub_2414B4B64();
  v8 = v7;
  v10 = v9;
  v11 = sub_2414B4AB0();
  *(double *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v13;
  result = v14;
  *(double *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = 0xBFF921FB54442D18;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(float *)(a1 + 96) = v3;
  return result;
}

uint64_t initializeWithCopy for CircularProgressView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView(uint64_t a1, int *a2)
{
  int v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CircularProgressView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CircularProgressView()
{
  return &type metadata for CircularProgressView;
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.LineStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241351DA0 + 4 * byte_2414BBDF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241351DD4 + 4 * byte_2414BBDF0[v4]))();
}

uint64_t sub_241351DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241351DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241351DE4);
  return result;
}

uint64_t sub_241351DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241351DF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241351DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241351E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.LineStyle()
{
  return &type metadata for CircularProgressView.LineStyle;
}

unint64_t sub_241351E24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123298;
  if (!qword_257123298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123268);
    v2[0] = sub_241351728();
    v2[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123298);
  }
  return result;
}

uint64_t _s11MediaCoreUI20CircularProgressViewVwxx_0()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for CircularProgressView.CircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberTooltipContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberTooltipContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.CircleView()
{
  return &type metadata for CircularProgressView.CircleView;
}

uint64_t sub_241352080()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241352090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571232B8;
  if (!qword_2571232B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571232A8);
    v2[0] = sub_241352114();
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571232B8);
  }
  return result;
}

unint64_t sub_241352114()
{
  unint64_t result;

  result = qword_2571232C0;
  if (!qword_2571232C0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBF64, &type metadata for CircularProgressView.ProgressCircleView);
    atomic_store(result, (unint64_t *)&qword_2571232C0);
  }
  return result;
}

unint64_t sub_241352158()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571232C8;
  if (!qword_2571232C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571232B0);
    v2[0] = sub_241352114();
    v2[1] = sub_2412C8FC4(&qword_2571232D0, &qword_2571232D8, MEMORY[0x24BDF1110]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571232C8);
  }
  return result;
}

uint64_t sub_2413521DC()
{
  swift_retain();
  return swift_retain();
}

uint64_t sub_241352208()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for CircularProgressView.ProgressCircleView(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.ProgressCircleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.ProgressCircleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.ProgressCircleView()
{
  return &type metadata for CircularProgressView.ProgressCircleView;
}

uint64_t sub_2413523B0()
{
  return sub_2412C8FC4(&qword_2571232E0, &qword_2571232E8, MEMORY[0x24BDF4750]);
}

uint64_t sub_2413523DC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413523F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571232F0;
  if (!qword_2571232F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571232F8);
    v2[0] = sub_241352474();
    v2[1] = sub_2412C8FC4(&qword_257123320, &qword_257123328, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571232F0);
  }
  return result;
}

unint64_t sub_241352474()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123300;
  if (!qword_257123300)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123308);
    v2[0] = sub_2412C8FC4(&qword_257123310, &qword_257123318, MEMORY[0x24BDEC4C0]);
    v2[1] = MEMORY[0x24BDED5D8];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123300);
  }
  return result;
}

uint64_t FittedTextVStack.init(totalLineLimit:alignment:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  if (a1 <= 1)
    v10 = 1;
  else
    v10 = a1;
  v11 = type metadata accessor for FittedTextVStack(0, a5, a6, a4);
  *(_QWORD *)(a7 + *(int *)(v11 + 36)) = v10;
  *(_QWORD *)(a7 + *(int *)(v11 + 40)) = a2;
  return a3();
}

uint64_t type metadata accessor for FittedTextVStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FittedTextVStack);
}

uint64_t FittedTextVStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v20 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254382800);
  v4 = *(_QWORD *)(a1 + 16);
  sub_2413527CC(&qword_2543827F0, MEMORY[0x24BDEB998]);
  v5 = sub_2414B3304();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - v10;
  v12 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  v13 = *(_QWORD *)(v2 + *(int *)(a1 + 40));
  v14 = *(_QWORD *)(a1 + 24);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v4;
  v15[3] = v14;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = 0x4010000000000000;
  v22 = v4;
  v23 = v14;
  v24 = v2;
  v25[2] = v12;
  v25[3] = v13;
  v25[4] = 0x4010000000000000;
  v16 = sub_241352DFC();
  sub_2413A6270((uint64_t)sub_2413527C0, (uint64_t)v21, (uint64_t)&type metadata for FittedTextVStackLayout, v4, v16, v14, (uint64_t)v8);
  swift_release();
  v25[0] = sub_2413527CC(&qword_2543827F8, MEMORY[0x24BDEB9A8]);
  v25[1] = v14;
  MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v5, v25);
  sub_2412FBF34((uint64_t)v8, v5, (uint64_t)v11);
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, v5);
  sub_2412EEA1C((uint64_t)v11, v5, v20);
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
}

uint64_t sub_241352730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412FBF34(v8, v9, (uint64_t)v7);
  sub_2412EEA1C((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_2413527C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241352730(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2413527CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254382800);
    result = MEMORY[0x242695AE8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241352810()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241352848()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2413528C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_24135298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413529F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_241352A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_241352AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_241352B3C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_241352BB4 + 4 * byte_2414BBFC0[v8]))();
}

void sub_241352C0C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_241352CFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_241352D04(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241352D0CLL);
}

void sub_241352D28()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_241352D30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_241352D38(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x241352D40);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t sub_241352D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254382800);
  sub_2413527CC(&qword_2543827F0, MEMORY[0x24BDEB998]);
  v2 = sub_2414B3304();
  v4[0] = sub_2413527CC(&qword_2543827F8, MEMORY[0x24BDEB9A8]);
  v4[1] = v1;
  return MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v2, v4);
}

uint64_t sub_241352DEC()
{
  return swift_deallocObject();
}

unint64_t sub_241352DFC()
{
  unint64_t result;

  result = qword_254382708;
  if (!qword_254382708)
  {
    result = MEMORY[0x242695AE8](&unk_2414CD0E8, &type metadata for FittedTextVStackLayout);
    atomic_store(result, (unint64_t *)&qword_254382708);
  }
  return result;
}

uint64_t sub_241352E40()
{
  sub_24131A02C();
  return sub_2414B3838();
}

uint64_t sub_241352E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_2412DC3FC(a1, (uint64_t)&v9 - v6, &qword_2543844C0);
  sub_2412DC3FC((uint64_t)v7, (uint64_t)v4, &qword_2543844C0);
  sub_24131A02C();
  sub_2414B3844();
  return sub_2412CBE78((uint64_t)v7, &qword_2543844C0);
}

uint64_t sub_241352F50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24131A070();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241352F9C()
{
  sub_24131A070();
  return sub_2414B3844();
}

uint64_t sub_241352FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a1;
  v2 = type metadata accessor for MotionPlayerView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  v42 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v44 = v4;
  v46 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for MotionPlayerViewRepresentable(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123968);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123970);
  MEMORY[0x24BDAC7A8](v40);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123978);
  MEMORY[0x24BDAC7A8](v43);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123980);
  v15 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  v48 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v45 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  v17 = v1;
  sub_2414B4AF8();
  v18 = v50;
  swift_getKeyPath();
  v50 = v18;
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  swift_release();
  v19 = *(_BYTE *)(v18 + 17);
  swift_release();
  if ((v19 & 1) != 0)
  {
    v20 = 1;
    v21 = v49;
    v22 = v47;
  }
  else
  {
    sub_2414B4AF8();
    *(_QWORD *)v7 = v50;
    type metadata accessor for MaterialMotionContentObserver(0);
    sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
    *((_QWORD *)v7 + 1) = sub_2414B2FE0();
    v7[16] = v23 & 1;
    *((_QWORD *)v7 + 3) = swift_getKeyPath();
    v7[32] = 0;
    *((_QWORD *)v7 + 5) = swift_getKeyPath();
    *((_QWORD *)v7 + 6) = 0;
    v7[56] = 0;
    v24 = (uint64_t *)&v7[v5[8]];
    *v24 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    swift_storeEnumTagMultiPayload();
    v25 = &v7[v5[9]];
    *(_QWORD *)v25 = swift_getKeyPath();
    v25[8] = 0;
    v26 = &v7[v5[10]];
    *(_QWORD *)v26 = swift_getKeyPath();
    v26[8] = 0;
    v27 = &v7[v5[11]];
    *(_QWORD *)v27 = swift_getKeyPath();
    v27[8] = 0;
    sub_241345460((uint64_t)&v9[*(int *)(v39 + 52)]);
    sub_2412DC3B8((uint64_t)v7, (uint64_t)v9, type metadata accessor for MotionPlayerViewRepresentable);
    v28 = v46;
    sub_241359B84(v17, v46);
    v29 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v30 = swift_allocObject();
    sub_2412DC3B8(v28, v30 + v29, type metadata accessor for MotionPlayerView);
    sub_2412DC3FC((uint64_t)v9, (uint64_t)v11, &qword_257123968);
    v31 = (uint64_t (**)())&v11[*(int *)(v40 + 36)];
    *v31 = sub_241359BCC;
    v31[1] = (uint64_t (*)())v30;
    v31[2] = 0;
    v31[3] = 0;
    sub_2412CBE78((uint64_t)v9, &qword_257123968);
    sub_241359B84(v17, v28);
    v32 = swift_allocObject();
    sub_2412DC3B8(v28, v32 + v29, type metadata accessor for MotionPlayerView);
    sub_2412DC3FC((uint64_t)v11, (uint64_t)v13, &qword_257123970);
    v33 = &v13[*(int *)(v43 + 36)];
    *(_QWORD *)v33 = 0;
    *((_QWORD *)v33 + 1) = 0;
    *((_QWORD *)v33 + 2) = sub_241359BDC;
    *((_QWORD *)v33 + 3) = v32;
    sub_2412CBE78((uint64_t)v11, &qword_257123970);
    v34 = v45;
    sub_2412DC3FC((uint64_t)v13, v45, &qword_257123978);
    v35 = v47;
    v36 = v34 + *(int *)(v47 + 36);
    *(_QWORD *)v36 = sub_241302314;
    *(_QWORD *)(v36 + 8) = 0;
    *(_BYTE *)(v36 + 16) = 0;
    sub_2412CBE78((uint64_t)v13, &qword_257123978);
    v37 = v49;
    sub_241359C24(v34, v49);
    v20 = 0;
    v21 = v37;
    v22 = v35;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v21, v20, 1, v22);
}

uint64_t sub_2413534E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _QWORD v15[2];
  uint64_t v16[2];

  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25437D278 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = a1 + *(int *)(type metadata accessor for MotionPlayerView(0) + 24);
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_BYTE *)(v7 + 16);
  sub_2412C72E4(*(_QWORD *)v7, v9, v10);
  sub_241345494(v8, v9, v10, v16);
  sub_2412C822C(v8, v9, v10);
  v12 = v16[0];
  v11 = v16[1];
  v13 = sub_2414B5194();
  v15[0] = v12;
  v15[1] = v11;
  sub_2413E6A30(v13, 0x726165707061, 0xE600000000000000, (uint64_t)v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  sub_2414B4AF8();
  *(_BYTE *)(v16[0] + 128) = 1;
  return swift_release();
}

uint64_t sub_241353654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  char v15;
  int v16;
  _QWORD v18[2];
  uint64_t v19[2];

  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25437D278 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = a1 + *(int *)(type metadata accessor for MotionPlayerView(0) + 24);
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_BYTE *)(v7 + 16);
  sub_2412C72E4(*(_QWORD *)v7, v9, v10);
  sub_241345494(v8, v9, v10, v19);
  sub_2412C822C(v8, v9, v10);
  v12 = v19[0];
  v11 = v19[1];
  v13 = sub_2414B5194();
  v18[0] = v12;
  v18[1] = v11;
  sub_2413E6A30(v13, 0x6165707061736964, 0xE900000000000072, (uint64_t)v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  sub_2414B4AF8();
  v14 = v19[0];
  v15 = *(_BYTE *)(v19[0] + 128);
  *(_BYTE *)(v19[0] + 128) = 0;
  if ((v15 & 1) != 0)
  {
    sub_241358484(0, 0, 0);
    v16 = *(unsigned __int8 *)(v14 + 104);
    *(_BYTE *)(v14 + 104) = 0;
    if (v16 == 1)
    {
      LOBYTE(v19[0]) = 0;
      sub_2414B2DAC();
    }
  }
  return swift_release();
}

char *sub_24135380C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char *v24;
  void *v25;
  char *v26;
  id v27;
  objc_class *v28;
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  id v38;
  objc_super v40;
  objc_super v41;
  _QWORD v42[2];
  __int128 v43;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25437D278 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  sub_2412C72E4(v7, v8, v9);
  sub_241345494(v7, v8, v9, (uint64_t *)&v43);
  sub_2412C822C(v7, v8, v9);
  v10 = *((_QWORD *)&v43 + 1);
  v11 = v43;
  v12 = sub_2414B51B8();
  v42[0] = v11;
  v42[1] = v10;
  sub_2413E6A30(v12, 0xD000000000000028, 0x80000002414CF790, (uint64_t)v42);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = *(unsigned __int8 *)(v1 + 32);
  sub_2412C6F44(v13, v14);
  LOBYTE(v10) = sub_2412F9C24(v13, v14);
  sub_2412C8228(v13, v14);
  if ((v10 & 1) != 0)
  {
    v15 = (char *)objc_allocWithZone((Class)type metadata accessor for PlayerView());
    swift_weakInit();
    v16 = &v15[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    swift_unknownObjectWeakInit();
    swift_retain();
    v17 = v15;
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2414B56C8())
      v18 = sub_241389508(MEMORY[0x24BEE4AF8]);
    else
      v18 = MEMORY[0x24BEE4B08];
    *(_QWORD *)&v17[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v18;
    swift_weakAssign();

    v19 = (objc_class *)type metadata accessor for GeometryTrackingView();
    v40.receiver = v17;
    v40.super_class = v19;
    v20 = objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    v21 = *(_QWORD *)(v1 + 40);
    v22 = *(_QWORD *)(v1 + 48);
    v23 = *(_BYTE *)(v1 + 56);
    v24 = (char *)v20;
    sub_2412C72E4(v21, v22, v23);
    sub_241345494(v21, v22, v23, (uint64_t *)&v43);
    sub_2412C822C(v21, v22, v23);
    *(_OWORD *)&v24[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext] = v43;

    swift_bridgeObjectRelease();
    v25 = (void *)objc_opt_self();
    v26 = v24;
    v27 = objc_msgSend(v25, sel_clearColor);
    objc_msgSend(v26, sel_setBackgroundColor_, v27);

  }
  else
  {
    v28 = (objc_class *)type metadata accessor for GeometryTrackingView();
    v29 = (char *)objc_allocWithZone(v28);
    swift_weakInit();
    v30 = &v29[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    swift_unknownObjectWeakInit();
    swift_retain();
    v31 = v29;
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2414B56C8())
      v32 = sub_241389508(MEMORY[0x24BEE4AF8]);
    else
      v32 = MEMORY[0x24BEE4B08];
    *(_QWORD *)&v31[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v32;
    swift_weakAssign();

    v41.receiver = v31;
    v41.super_class = v28;
    v33 = (char *)objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    v34 = *(_QWORD *)(v1 + 40);
    v35 = *(_QWORD *)(v1 + 48);
    v36 = *(_BYTE *)(v1 + 56);
    sub_2412C72E4(v34, v35, v36);
    sub_241345494(v34, v35, v36, (uint64_t *)&v43);
    sub_2412C822C(v34, v35, v36);
    *(_OWORD *)&v33[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext] = v43;
    swift_bridgeObjectRelease();
    v37 = (void *)objc_opt_self();
    v26 = v33;
    v38 = objc_msgSend(v37, sel_clearColor);
    objc_msgSend(v26, sel_setBackgroundColor_, v38);

    objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123B80);
  sub_2414B3CDC();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v26;
}

void sub_241353CFC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  os_log_type_t v27;
  uint64_t v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t *v47;
  __int128 v48;
  id v49;
  uint64_t v50;
  void *v51;
  char *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void *v65;
  char *v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  id v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79[4];

  v3 = v2;
  v76 = a1;
  v77 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123A00);
  MEMORY[0x24BDAC7A8](v4);
  v75 = (uint64_t *)((char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v70 - v7;
  v8 = sub_2414B382C();
  v73 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v71 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v70 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v70 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v70 - v16;
  v18 = sub_2414B2CA4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25437D278 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v18, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  v23 = *(_QWORD *)(v3 + 40);
  v24 = *(_QWORD *)(v3 + 48);
  v25 = *(_BYTE *)(v3 + 56);
  sub_2412C72E4(v23, v24, v25);
  sub_241345494(v23, v24, v25, v79);
  sub_2412C822C(v23, v24, v25);
  v26 = *(_OWORD *)v79;
  v27 = sub_2414B5194();
  v78[0] = v26;
  sub_2413E6A30(v27, 0xD00000000000002ALL, 0x80000002414CF730, (uint64_t)v78);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123B80);
  sub_2414B3CDC();
  v28 = v79[0];
  sub_2414B3CE8();
  sub_2414B36AC();
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v73 + 8);
  v31(v17, v8);
  sub_24135654C(v30);
  v32 = *(_QWORD *)(v3 + 8);
  v33 = *(_BYTE *)(v3 + 16);
  j__swift_retain();
  v34 = sub_241345680(v32, v33);
  j__swift_release();
  sub_241359E54(v34);
  swift_release();
  sub_2414B3CE8();
  sub_24135B864();
  sub_2414B3838();
  v31(v17, v8);
  v78[0] = *(_OWORD *)v79;
  sub_24135748C(v78);
  sub_2414B3CE8();
  sub_24135B8A8();
  sub_2414B3838();
  v31(v14, v8);
  v35 = LOBYTE(v79[0]);
  v36 = *(unsigned __int8 *)(v28
                           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy);
  *(_BYTE *)(v28
           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy) = v79[0];
  v37 = v8;
  if (v35 == 2)
  {
    if (v36 != 2)
      goto LABEL_11;
  }
  else
  {
    if (v35 == 3)
    {
      if (v36 == 3)
        goto LABEL_12;
LABEL_11:
      sub_241357368();
      goto LABEL_12;
    }
    if ((v36 & 0xFE) == 2 || ((v35 & 1) == 0) == (v36 & 1))
      goto LABEL_11;
  }
LABEL_12:
  v38 = *(_QWORD *)(v28
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator);
  v39 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  v73 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  swift_retain();
  sub_2414B3CE8();
  sub_24131A0B4();
  sub_2414B3838();
  v40 = v79[0];
  v31(v17, v37);
  *(_BYTE *)(v38 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) = v40;
  swift_release();
  v41 = *(_QWORD *)(v28 + v39);
  swift_retain();
  sub_2414B3CE8();
  sub_24131A0F8();
  sub_2414B3838();
  v42 = v79[0];
  v31(v17, v37);
  *(_BYTE *)(v41 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) = v42;
  swift_release();
  sub_2414B3CE8();
  v43 = (uint64_t)v74;
  sub_2414B3670();
  v31(v17, v37);
  v44 = sub_2414B2F44();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
  v45 = v28
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  v46 = (void (*)(_QWORD, _QWORD))v75;
  sub_2412DC3FC(v45, (uint64_t)v75, &qword_257123A00);
  swift_beginAccess();
  sub_24135B8EC(v43, v45);
  swift_endAccess();
  sub_2413565D4((uint64_t)v46);
  sub_2412CBE78(v43, &qword_257123A00);
  sub_2412CBE78((uint64_t)v46, &qword_257123A00);
  sub_2414B3CE8();
  sub_24135B934();
  sub_2414B3838();
  v31(v17, v37);
  *(_BYTE *)(v28
           + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy) = v78[0];
  sub_2414B3CE8();
  sub_24135B978();
  sub_2414B3838();
  v47 = (uint64_t *)v31;
  v48 = v78[0];
  v31(v17, v37);
  *(_OWORD *)(*(_QWORD *)(v28 + v73) + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID) = v48;
  swift_bridgeObjectRelease();
  type metadata accessor for PlayerView();
  v49 = v76;
  v50 = swift_dynamicCastClass();
  if (!v50)
  {
LABEL_21:
    swift_release();
    return;
  }
  v51 = (void *)v50;
  v76 = v49;
  v52 = v72;
  sub_2414B3CE8();
  v74 = (char *)sub_24135B9BC();
  sub_2414B3838();
  v73 = v37;
  v75 = v47;
  ((void (*)(char *, uint64_t))v47)(v52, v37);
  v53 = (void *)*MEMORY[0x24BDB1C78];
  v54 = (void *)*MEMORY[0x24BDB1C80];
  if (LOBYTE(v78[0]))
    v55 = (void *)*MEMORY[0x24BDB1C80];
  else
    v55 = (void *)*MEMORY[0x24BDB1C78];
  v56 = v55;
  v57 = objc_msgSend(v51, sel_layer);
  objc_opt_self();
  v58 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_videoGravity);

  v59 = v56;
  v60 = sub_2414B4D68();
  v62 = v61;
  if (v60 == sub_2414B4D68() && v62 == v63)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v64 = sub_2414B57D0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v64 & 1) != 0)
  {

    goto LABEL_21;
  }
  v65 = (void *)objc_opt_self();
  objc_msgSend(v65, sel_begin);
  objc_msgSend(v65, sel_setDisableActions_, 1);
  v66 = v71;
  sub_2414B3CE8();
  sub_2414B3838();
  ((void (*)(char *, uint64_t))v75)(v66, v73);
  if (LOBYTE(v78[0]))
    v67 = v54;
  else
    v67 = v53;
  v68 = v67;
  v69 = objc_msgSend(v51, sel_layer);
  objc_opt_self();
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setVideoGravity_, v68);

  objc_msgSend(v65, sel_commit);
  swift_release();

}

_BYTE *sub_2413545DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  _BYTE *result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for MotionPlayerViewRepresentable(0);
  sub_241345460((uint64_t)v4);
  v6 = sub_2414B2A88();
  result = (_BYTE *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = (uint64_t *)(v0 + v5[9]);
    v9 = *v8;
    v10 = *((unsigned __int8 *)v8 + 8);
    sub_2412C6F44(*v8, v10);
    sub_2413456A4(v9, v10, &v28);
    sub_2412C8228(v9, v10);
    v11 = (uint64_t *)(v1 + v5[10]);
    v12 = *v11;
    v13 = *((unsigned __int8 *)v11 + 8);
    sub_2412C6F44(*v11, v13);
    sub_2413456D0(v12, v13, &v27);
    sub_2412C8228(v12, v13);
    v26 = v27;
    v14 = *(_QWORD *)v1;
    v15 = v1 + v5[11];
    v16 = *(_QWORD *)v15;
    v17 = *(unsigned __int8 *)(v15 + 8);
    swift_retain();
    sub_2412C6F44(v16, v17);
    v18 = sub_2413456FC(v16, v17);
    sub_2412C8228(v16, v17);
    v19 = *(_QWORD *)(v1 + 8);
    LOBYTE(v17) = *(_BYTE *)(v1 + 16);
    j__swift_retain();
    v20 = sub_241345680(v19, v17);
    j__swift_release();
    v21 = *(_QWORD *)(v1 + 40);
    v22 = *(_QWORD *)(v1 + 48);
    v23 = *(_BYTE *)(v1 + 56);
    sub_2412C72E4(v21, v22, v23);
    sub_241345494(v21, v22, v23, (uint64_t *)&v25);
    sub_2412C822C(v21, v22, v23);
    v24 = v25;
    type metadata accessor for MotionPlayerViewRepresentable.Coordinator(0);
    swift_allocObject();
    return sub_241354AC4((uint64_t)v4, &v28, &v26, v14, v20, (uint64_t *)&v24, v18);
  }
  return result;
}

uint64_t sub_241354804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  return swift_task_switch();
}

uint64_t sub_241354824()
{
  if (qword_257120B60 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_241354884()
{
  if (qword_257120B68 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_2413548E0()
{
  return swift_task_switch();
}

uint64_t sub_2413548F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = qword_257137258;
  return swift_task_switch();
}

uint64_t sub_241354918()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_241354938()
{
  uint64_t v0;

  sub_24149991C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), (unint64_t *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241354980(uint64_t a1, uint64_t *a2)
{
  return sub_24135A4E4(*a2);
}

_BYTE *sub_241354988@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *result;

  result = sub_2413545DC();
  *a1 = result;
  return result;
}

uint64_t sub_2413549B8()
{
  sub_2412C8030(&qword_257123BA0, type metadata accessor for MotionPlayerViewRepresentable, (uint64_t)&unk_2414BC528);
  return sub_2414B3A54();
}

uint64_t sub_241354A20()
{
  sub_2412C8030(&qword_257123BA0, type metadata accessor for MotionPlayerViewRepresentable, (uint64_t)&unk_2414BC528);
  return sub_2414B3A00();
}

void sub_241354A88()
{
  sub_2412C8030(&qword_257123BA0, type metadata accessor for MotionPlayerViewRepresentable, (uint64_t)&unk_2414BC528);
  sub_2414B3A48();
  __break(1u);
}

_BYTE *sub_241354AC4(uint64_t a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t *a6, double a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  os_log_type_t v49;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  id v76;

  v8 = v7;
  v71 = a4;
  v72 = a5;
  v70 = a1;
  v13 = sub_2414B2CA4();
  v65 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B00);
  v58 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B08);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B10);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a2;
  v23 = *a3;
  v25 = *a6;
  v24 = a6[1];
  v26 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  type metadata accessor for LooperConfigurator(0);
  swift_allocObject();
  *(_QWORD *)&v8[v26] = sub_24138EEB4();
  swift_unknownObjectWeakInit();
  v66 = v13;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2414B56C8())
    v27 = sub_241389508(MEMORY[0x24BEE4AF8]);
  else
    v27 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_subscriptions] = v27;
  *(_QWORD *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver] = 0;
  v28 = &v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase];
  v29 = sub_2414B2F44();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand] = 4;
  v30 = &v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url];
  v31 = sub_2414B2A88();
  v60 = *(_QWORD *)(v31 - 8);
  v61 = v31;
  (*(void (**)(char *, uint64_t))(v60 + 16))(v30, v70);
  v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy] = v22;
  v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy] = v23;
  v32 = v72;
  *(_QWORD *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState] = v71;
  *(double *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale] = a7;
  *(_QWORD *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver] = v32;
  swift_retain();
  swift_retain();
  swift_release();
  v33 = (uint64_t *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext];
  *v33 = v25;
  v33[1] = v24;
  v69 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator;
  v34 = (uint64_t *)(*(_QWORD *)&v8[OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator]
                  + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  v57 = v25;
  *v34 = v25;
  v34[1] = v24;
  v59 = v24;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v74 = sub_24135832C();
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v76 = (id)sub_2414B5230();
  v73 = sub_2414B520C();
  v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
  v68(v19, 1, 1, v73);
  v51[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B18);
  v51[1] = sub_2412C8FC4(&qword_257123B20, &qword_257123B18, MEMORY[0x24BDB9AF8]);
  v67 = sub_241300004();
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v19, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v51[0] = sub_2412C8FC4(&qword_257123B28, &qword_257123B10, MEMORY[0x24BDB9A08]);
  v35 = v53;
  sub_2414B2EB4();
  swift_release();
  v52 = *(_QWORD *)(v52 + 8);
  ((void (*)(char *, uint64_t))v52)(v21, v35);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v74 = sub_2413585B4();
  v76 = (id)sub_2414B5230();
  v36 = v73;
  v37 = v68;
  v68(v19, 1, 1, v73);
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v19, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2414B2EB4();
  swift_release();
  ((void (*)(char *, uint64_t))v52)(v21, v35);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v74 = sub_24138FAB4();
  v76 = (id)sub_2414B5230();
  v37(v19, 1, 1, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123B30);
  sub_2412C8FC4(&qword_257123B38, &qword_257123B30, MEMORY[0x24BDB9AF8]);
  v38 = v54;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v19, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_257123B40, &qword_257123B08, MEMORY[0x24BDB9A08]);
  v39 = v56;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v74 = sub_241358658();
  v76 = (id)sub_2414B5230();
  v37(v19, 1, 1, v73);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B48);
  sub_2412C8FC4(&qword_257123B50, &qword_257123B48, MEMORY[0x24BDB9AF8]);
  v40 = v62;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v19, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_257123B58, &qword_257123B00, MEMORY[0x24BDB9A08]);
  v41 = v63;
  sub_2414B2EB4();
  swift_release();
  v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  v42(v40, v41);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v74 = sub_24138FEE4();
  v76 = (id)sub_2414B5230();
  v68(v19, 1, 1, v73);
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v19, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2414B2EB4();
  swift_release();
  v42(v40, v41);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  if (qword_25437D278 != -1)
    swift_once();
  v43 = v66;
  v44 = __swift_project_value_buffer(v66, (uint64_t)qword_25438E7D0);
  v46 = v64;
  v45 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v44, v43);
  v74 = 0;
  v75 = 0xE000000000000000;
  sub_2414B5578();
  sub_2414B4DF8();
  v76 = v8;
  sub_2414B565C();
  sub_2414B4DF8();
  v47 = v74;
  v48 = v75;
  v49 = sub_2414B5194();
  v74 = v57;
  v75 = v59;
  sub_2413E6A30(v49, v47, v48, (uint64_t)&v74);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v70, v61);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v43);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_241355618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  _QWORD v17[3];
  unint64_t v18;
  unint64_t v19;

  v0 = sub_2414B2CA4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (qword_25437D278 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v0, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000021;
    v19 = 0x80000002414CF700;
    v17[1] = 540702524;
    v17[2] = 0xE400000000000000;
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v7 = v18;
    v8 = v19;
    v10 = *(_QWORD *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    v9 = *(_QWORD *)(v5
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                   + 8);
    swift_bridgeObjectRetain();
    v11 = sub_2414B5194();
    v18 = v10;
    v19 = v9;
    sub_2413E6A30(v11, v7, v8, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v12 = *(_QWORD *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    if ((*(_BYTE *)(v12 + 40) & 1) == 0)
    {
      v14 = *(double *)(v12 + 24);
      v13 = *(double *)(v12 + 32);
      if (v14 != 0.0 || v13 != 0.0)
      {
        v15 = *(double *)(v5
                        + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale);
        v16 = *(_QWORD *)(v5
                        + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
            + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
        *(double *)v16 = v14 * v15;
        *(double *)(v16 + 8) = v13 * v15;
        *(_BYTE *)(v16 + 16) = 0;
        sub_241394310();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_241355888()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_BYTE *)(result
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy) == 2)
    {
      sub_241357368();
      sub_241356E34();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2413558F4(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  uint64_t KeyPath;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char v32;
  id v33;
  id v34;
  id v35;
  _QWORD v36[3];
  unint64_t v37;
  unint64_t v38;

  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if (qword_25437D278 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    v37 = 0;
    v38 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v37 = 0xD000000000000023;
    v38 = 0x80000002414CF6D0;
    v36[2] = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257123B60);
    sub_2414B4D8C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v11 = v37;
    v12 = v38;
    v14 = *(_QWORD *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    v13 = *(_QWORD *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    v15 = sub_2414B5194();
    v37 = v14;
    v38 = v13;
    sub_2413E6A30(v15, v11, v12, (uint64_t)&v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      v16 = *(_QWORD *)(v8
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver);
      if (v16)
      {
        swift_getKeyPath();
        v37 = v16;
        sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
        v17 = v10;
        swift_retain();
        sub_2414B2B84();
        swift_release();
        v18 = *(void **)(v16 + 16);
        if (v18)
        {
          sub_2412CC884(0, &qword_257123B68);
          v19 = v17;
          v20 = v18;
          v21 = sub_2414B532C();

          if ((v21 & 1) != 0)
          {

            swift_release();
            goto LABEL_11;
          }
        }
        else
        {

        }
        KeyPath = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](KeyPath);
        v36[-2] = v16;
        v36[-1] = v6;
        v37 = v16;
        v23 = v17;
        sub_2414B2B78();
        swift_release();
        swift_release();

      }
    }
LABEL_11:
    v24 = MEMORY[0x242695CC8](v8+ OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_view);
    if (!v24)
    {
LABEL_22:
      sub_241357368();
      return swift_release();
    }
    v25 = (void *)v24;
    type metadata accessor for PlayerView();
    v26 = (void *)swift_dynamicCastClass();
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend(v26, sel_layer);
      objc_opt_self();
      v29 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_player);

      if (v29)
      {
        if (v6)
        {
          sub_2412CC884(0, &qword_257123B68);
          v30 = v10;
          v31 = v29;
          v32 = sub_2414B532C();

          if ((v32 & 1) != 0)
            goto LABEL_21;
        }
        else
        {

        }
        goto LABEL_20;
      }
      if (v6)
      {
LABEL_20:
        v34 = v10;
        v35 = objc_msgSend(v27, sel_layer);
        objc_opt_self();
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setPlayer_, v34);

        v25 = v34;
        goto LABEL_21;
      }
      v33 = v10;
    }
LABEL_21:

    goto LABEL_22;
  }
  return result;
}

uint64_t sub_241355D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v0 = sub_2414B2CA4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (qword_25437D278 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v0, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000027;
    v14 = 0x80000002414CF6A0;
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v7 = v13;
    v8 = v14;
    v10 = *(_QWORD *)(v5
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    v9 = *(_QWORD *)(v5
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                   + 8);
    swift_bridgeObjectRetain();
    v11 = sub_2414B5194();
    v13 = v10;
    v14 = v9;
    sub_2413E6A30(v11, v7, v8, (uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_241357368();
    sub_241356E34();
    return swift_release();
  }
  return result;
}

uint64_t sub_241355F60(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  os_log_type_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if (qword_25437D278 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000022;
    v19 = 0x80000002414CF670;
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v10 = v18;
    v11 = v19;
    v13 = *(_QWORD *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    v12 = *(_QWORD *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    v14 = sub_2414B5194();
    v18 = v13;
    v19 = v12;
    sub_2413E6A30(v14, v10, v11, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v15 = *(_QWORD *)(v8
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v17 - 2) = v15;
    *((_BYTE *)&v17 - 8) = v6;
    v18 = v15;
    sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
    swift_retain();
    sub_2414B2B78();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413561E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  unint64_t v17;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25437D278 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_2414B5578();
  sub_2414B4DF8();
  v15[1] = v0;
  sub_2414B565C();
  sub_2414B4DF8();
  v7 = v16;
  v8 = v17;
  v10 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v9 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  swift_bridgeObjectRetain();
  v11 = sub_2414B5194();
  v16 = v10;
  v17 = v9;
  sub_2413E6A30(v11, v7, v8, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = v1
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  v13 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2412CBE78(v1+ OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase, &qword_257123A00);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24135640C()
{
  sub_2413561E4();
  return swift_deallocClassInstance();
}

uint64_t sub_24135642C()
{
  return type metadata accessor for MotionPlayerViewRepresentable.Coordinator(0);
}

uint64_t type metadata accessor for MotionPlayerViewRepresentable.Coordinator(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_2571233B8);
}

void sub_241356448()
{
  unint64_t v0;
  unint64_t v1;

  sub_2414B2A88();
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, qword_2571233C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_24135654C(double a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;

  v2 = *(double *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale);
  *(double *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayScale) = a1;
  if (v2 != a1)
  {
    v3 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
    if ((*(_BYTE *)(v3 + 40) & 1) == 0)
    {
      v5 = *(double *)(v3 + 24);
      v4 = *(double *)(v3 + 32);
      if (v5 != 0.0 || v4 != 0.0)
      {
        v6 = *(_QWORD *)(v1
                       + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
           + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
        *(double *)v6 = v5 * a1;
        *(double *)(v6 + 8) = v4 * a1;
        *(_BYTE *)(v6 + 16) = 0;
        sub_241394310();
      }
    }
  }
}

uint64_t sub_2413565D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_type_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;

  v60 = a1;
  v2 = sub_2414B2CA4();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123B98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123A00);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v52 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - v13;
  v15 = sub_2414B2F44();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v56 = (char *)&v52 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v52 - v21;
  v57 = v1;
  v23 = v1
      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  sub_2412DC3FC(v23, (uint64_t)v14, &qword_257123A00);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v24(v14, 1, v15) == 1)
    return sub_2412CBE78((uint64_t)v14, &qword_257123A00);
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v26(v22, v14, v15);
  v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v52 = v22;
  v28 = v22;
  v29 = v27;
  v27(v11, v28, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
  v30 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v6, &qword_257123A00);
  v31 = v60;
  sub_2412DC3FC(v60, v30, &qword_257123A00);
  if (v24(v6, 1, v15) == 1)
  {
    sub_2412CBE78((uint64_t)v11, &qword_257123A00);
    if (v24((char *)v30, 1, v15) == 1)
    {
      sub_2412CBE78((uint64_t)v6, &qword_257123A00);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v52, v15);
    }
    goto LABEL_8;
  }
  v32 = v58;
  sub_2412DC3FC((uint64_t)v6, v58, &qword_257123A00);
  if (v24((char *)v30, 1, v15) == 1)
  {
    sub_2412CBE78((uint64_t)v11, &qword_257123A00);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
LABEL_8:
    sub_2412CBE78((uint64_t)v6, &qword_257123B98);
    goto LABEL_9;
  }
  v47 = v32;
  v48 = v56;
  v26(v56, (char *)v30, v15);
  sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  v49 = sub_2414B4CE4();
  v50 = *(void (**)(char *, uint64_t))(v16 + 8);
  v50(v48, v15);
  sub_2412CBE78((uint64_t)v11, &qword_257123A00);
  v51 = v47;
  v31 = v60;
  v50((char *)v51, v15);
  sub_2412CBE78((uint64_t)v6, &qword_257123A00);
  if ((v49 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v50)(v52, v15);
LABEL_9:
  v33 = v59;
  v34 = v52;
  v29(v59, v52, v15);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v33, v15);
  if (v35 == *MEMORY[0x24BDEB1D0] || v35 == *MEMORY[0x24BDEB1E8])
  {
    if (v24((char *)v31, 1, v15) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v34, v15);
LABEL_16:
    sub_241357368();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v34, v15);
  }
  if (v35 == *MEMORY[0x24BDEB1E0])
    goto LABEL_16;
  v36 = v29;
  if (qword_25437D278 != -1)
    swift_once();
  v37 = v55;
  v38 = __swift_project_value_buffer(v55, (uint64_t)qword_25438E7D0);
  v39 = v53;
  v40 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v38, v37);
  v61 = 0;
  v62 = 0xE000000000000000;
  sub_2414B5578();
  swift_bridgeObjectRelease();
  v61 = 0xD00000000000002ALL;
  v62 = 0x80000002414CF760;
  v36(v56, v34, v15);
  sub_2414B4D8C();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v41 = v61;
  v42 = v62;
  v43 = *(_QWORD *)(v57
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v44 = *(_QWORD *)(v57
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  swift_bridgeObjectRetain();
  v45 = sub_2414B51AC();
  v61 = v43;
  v62 = v44;
  sub_2413E6A30(v45, v41, v42, (uint64_t)&v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v37);
  v46 = *(void (**)(char *, uint64_t))(v16 + 8);
  v46(v34, v15);
  return ((uint64_t (*)(char *, uint64_t))v46)(v59, v15);
}

void sub_241356B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand;
  v9 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand);
  if (v9 == 4)
  {
    if (a1 == 4)
      return;
  }
  else if (a1 != 4 && v9 == a1)
  {
LABEL_9:
    if ((*(_BYTE *)(*(_QWORD *)(v2
                               + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState)
                   + 40) & 1) == 0)
    {
      v16 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator);
      v17 = v2
          + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
      v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
      v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID + 8);
      v20 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
      v21 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                      + 8);
      v24 = v20;
      v25 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_241393AA0(a1, v17, v18, v19, &v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return;
  }
  if (qword_25437D278 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_2414B5578();
  swift_bridgeObjectRelease();
  v24 = 0xD00000000000001ELL;
  v25 = 0x80000002414CF5A0;
  v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123A08);
  sub_2414B4D8C();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  v23 = *(_BYTE *)(v1 + v8);
  sub_2414B4D8C();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v11 = v24;
  v12 = v25;
  v14 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v13 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  swift_bridgeObjectRetain();
  v15 = sub_2414B5194();
  v24 = v14;
  v25 = v13;
  sub_2413E6A30(v15, v11, v12, (uint64_t)&v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a1 = *(unsigned __int8 *)(v2 + v8);
  if ((_DWORD)a1 != 4)
    goto LABEL_9;
}

void sub_241356E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v15[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_cacheDownloadPolicy) == 1
    && (*(_BYTE *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState)
                 + 104) & 1) == 0)
  {
    if (qword_25437D278 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v5, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
    v11 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
    v10 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                    + 8);
    swift_bridgeObjectRetain();
    v12 = sub_2414B5194();
    v15[0] = v11;
    v15[1] = v10;
    sub_2413E6A30(v12, 0xD000000000000019, 0x80000002414CF5E0, (uint64_t)v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v1;
    swift_retain();
    sub_24135F590((uint64_t)v4, (uint64_t)&unk_257123A18, (uint64_t)v14);
    swift_release();
    sub_2412CBE78((uint64_t)v4, (uint64_t *)&unk_254384360);
  }
}

uint64_t sub_241357020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch();
}

uint64_t sub_241357038()
{
  if (qword_257120B60 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_241357098()
{
  if (qword_257120B68 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_2413570F4()
{
  return swift_task_switch();
}

uint64_t sub_24135710C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = qword_257137258;
  return swift_task_switch();
}

uint64_t sub_24135712C()
{
  _QWORD *v0;

  v0[6] = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  v0[7] = sub_2414B4FC0();
  v0[8] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413571A4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  swift_release();
  v2 = (_QWORD *)(*(_QWORD *)(v1
                            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  v0[9] = *v2;
  v0[10] = v2[1];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_241357214()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241357274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  v4 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v3 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_24135730C;
  return sub_241499E84(v2 + v1, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), (_OWORD *)(v0 + 16));
}

uint64_t sub_24135730C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_241357368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9[2];
  unsigned __int8 v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123A00);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0
     + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_scenePhase;
  swift_beginAccess();
  sub_2412DC3FC(v4, (uint64_t)v3, &qword_257123A00);
  v5 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand;
  LODWORD(v4) = *(unsigned __int8 *)(v0
                                   + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackCommand);
  v10 = *(_BYTE *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_playbackPolicy);
  v6 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
  v7 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                 + 8);
  v9[0] = *(_QWORD *)(v0
                    + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v9[1] = v7;
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_241359F78((uint64_t)v3, v4, &v10, v6, v9);
  swift_bridgeObjectRelease();
  sub_2412CBE78((uint64_t)v3, &qword_257123A00);
  v8 = *(unsigned __int8 *)(v0 + v5);
  *(_BYTE *)(v0 + v5) = v4;
  sub_241356B8C(v8);
}

uint64_t sub_24135748C(_OWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  *(_OWORD *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext) = *a1;
  swift_bridgeObjectRelease();
  v3 = v2[1];
  v4 = (_QWORD *)(*(_QWORD *)(v1
                            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  *v4 = *v2;
  v4[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_displayState);
  v6 = v2[1];
  *(_QWORD *)(v5 + 136) = *v2;
  *(_QWORD *)(v5 + 144) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_241357544()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double Width;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double v23;
  double height;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  uint64_t Strong;
  int v30;
  int v31;
  double v32;
  double v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_window);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, sel_frame);
    objc_msgSend(v0, sel_convertRect_toCoordinateSpace_, v3);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v12 = (void *)MEMORY[0x242695CC8](&v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_scrollView]);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_contentOffset);
      v15 = v14;
      objc_msgSend(v13, sel_contentOffset);
      v17 = v16;
      objc_msgSend(v13, sel_bounds);
      Width = CGRectGetWidth(v34);
      objc_msgSend(v13, sel_bounds);
      objc_msgSend(v13, sel_convertRect_toCoordinateSpace_, v3, v15, v17, Width, CGRectGetHeight(v35));
      v40.origin.x = v19;
      v40.origin.y = v20;
      v40.size.width = v21;
      v40.size.height = v22;
      v36.origin.x = v5;
      v36.origin.y = v7;
      v36.size.width = v9;
      v36.size.height = v11;
      v37 = CGRectIntersection(v36, v40);
      v23 = v37.size.width;
      height = v37.size.height;

    }
    else
    {
      objc_msgSend(v3, sel_frame);
      v41.origin.x = v25;
      v41.origin.y = v26;
      v41.size.width = v27;
      v41.size.height = v28;
      v38.origin.x = v5;
      v38.origin.y = v7;
      v38.size.width = v9;
      v38.size.height = v11;
      v39 = CGRectIntersection(v38, v41);
      v23 = v39.size.width;
      height = v39.size.height;
    }
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v30 = v23 != 0.0;
      if (height != 0.0)
        v30 = 1;
      v31 = *(unsigned __int8 *)(Strong + 104);
      *(_BYTE *)(Strong + 104) = v30;
      if (v30 != v31)
        sub_2414B2DAC();
      swift_release();
      if (swift_weakLoadStrong())
      {
        objc_msgSend(v1, sel_frame);
        sub_2413588B4(v32, v33, v23, height);
        swift_release();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_241357770()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  objc_class *v11;
  unint64_t v12;
  unint64_t *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  _BYTE v30[4];
  unsigned int v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  id v41;
  objc_super v42;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v1);
  v38 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = sub_2414B4BA0();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571239D0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571239D8);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (objc_class *)type metadata accessor for GeometryTrackingView();
  v42.receiver = v0;
  v42.super_class = v11;
  objc_msgSendSuper2(&v42, sel_didMoveToWindow);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2414B56C8())
    v12 = sub_241389508(MEMORY[0x24BEE4AF8]);
  else
    v12 = MEMORY[0x24BEE4B08];
  v13 = (unint64_t *)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions];
  swift_beginAccess();
  v32 = v13;
  *v13 = v12;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v0, sel_window);

  if (v14)
  {
    v40 = v0;
    v15 = objc_msgSend(v0, sel_superview);
    if (v15)
    {
      v16 = v15;
      v17 = 0;
      v31 = *MEMORY[0x24BEE5488];
      do
      {
        objc_opt_self();
        v28 = swift_dynamicCastObjCClass();
        if (v28)
        {
          v18 = (void *)v28;
          swift_getKeyPath();
          v19 = v16;
          sub_2414B29E0();
          swift_release();
          sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
          v20 = v37;
          v21 = v39;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v37 + 104))(v4, v31, v39);
          v22 = (void *)sub_2414B5248();
          (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v4, v21);
          v41 = v22;
          v23 = sub_2414B520C();
          v24 = (uint64_t)v38;
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v38, 1, 1, v23);
          sub_2412C8FC4(&qword_2571239E0, &qword_2571239D0, MEMORY[0x24BDD0230]);
          sub_241300004();
          v25 = v36;
          sub_2414B2E84();
          sub_2412CBE78(v24, (uint64_t *)&unk_2543842B0);

          (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v7, v25);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          sub_2412C8FC4(&qword_2571239E8, &qword_2571239D8, MEMORY[0x24BDB9A08]);
          v26 = v34;
          sub_2414B2EB4();
          swift_release();
          (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v10, v26);
          swift_beginAccess();
          sub_2414B2D70();
          swift_endAccess();
          swift_release();

          v17 = v18;
        }
        else
        {
          v29 = v16;
        }
        v27 = objc_msgSend(v16, sel_superview);

        v16 = v27;
      }
      while (v27);
    }
    else
    {
      v17 = 0;
    }
    swift_unknownObjectWeakAssign();
    sub_241357544();

  }
}

uint64_t sub_241357BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_2414B4FC0();
  swift_retain();
  v7 = sub_2414B4FB4();
  v8 = (_QWORD *)swift_allocObject();
  v9 = MEMORY[0x24BEE6930];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = a2;
  sub_2413EE460((uint64_t)v5, (uint64_t)&unk_2571239F8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_241357CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  sub_2414B4FC0();
  v4[7] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241357D2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_beginAccess();
  v2 = (void *)MEMORY[0x242695CC8](v1 + 16);
  if (v2)
  {
    sub_241357544();

  }
  **(_BYTE **)(v0 + 40) = v2 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_241357E00()
{
  return sub_241357F04((uint64_t (*)(_QWORD))type metadata accessor for GeometryTrackingView);
}

uint64_t type metadata accessor for GeometryTrackingView()
{
  return objc_opt_self();
}

id sub_241357EF8()
{
  return sub_241357F04((uint64_t (*)(_QWORD))type metadata accessor for PlayerView);
}

id sub_241357F04(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for PlayerView()
{
  return objc_opt_self();
}

uint64_t sub_241357F5C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_241357FE0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_24135806C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_241358114()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_241358198@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_241358224()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413582CC(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  double v4;
  double v5;
  char v6;
  BOOL v7;

  v4 = *(double *)(v3 + 24);
  v5 = *(double *)(v3 + 32);
  v6 = *(_BYTE *)(v3 + 40);
  *(double *)(v3 + 24) = *(double *)&result;
  *(double *)(v3 + 32) = *(double *)&a2;
  *(_BYTE *)(v3 + 40) = a3 & 1;
  if ((a3 & 1) == 0)
  {
    if ((v6 & 1) != 0 || (v4 == *(double *)&result ? (v7 = v5 == *(double *)&a2) : (v7 = 0), !v7))
      *(double *)&result = COERCE_DOUBLE(sub_2414B2DAC());
  }
  return result;
}

uint64_t sub_24135832C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571239A8);
    sub_2412C8FC4(&qword_2571239B0, &qword_2571239A8, MEMORY[0x24BDB9CB0]);
    v1 = sub_2414B2E60();
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2413583D0(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(double *)(v6 + 72) = a2;
  *(double *)(v6 + 80) = a3;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a6;
  return swift_task_switch();
}

uint64_t sub_2413583EC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    swift_retain();
    swift_release();
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v2;
    sub_2414B2DAC();
    swift_release();
  }
  **(_BYTE **)(v0 + 56) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_241358484(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(double *)(v3 + 64);
  v12 = *(double *)(v3 + 72);
  v13 = *(_BYTE *)(v3 + 80);
  *(double *)(v3 + 64) = *(double *)&a1;
  *(double *)(v3 + 72) = *(double *)&a2;
  *(_BYTE *)(v3 + 80) = v7;
  if ((a3 & 1) == 0)
  {
    if ((v13 & 1) != 0 || (v11 == *(double *)&a1 ? (v14 = v12 == *(double *)&a2) : (v14 = 0), !v14))
    {
      v15 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
      v16 = swift_allocObject();
      swift_weakInit();
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      *(_QWORD *)(v17 + 32) = v16;
      *(double *)(v17 + 40) = *(double *)&a1;
      *(double *)(v17 + 48) = *(double *)&a2;
      sub_24135F720((uint64_t)v10, (uint64_t)&unk_2571239C0, v17);
      swift_release();
      sub_2412CBE78((uint64_t)v10, (uint64_t *)&unk_254384360);
    }
  }
}

uint64_t sub_2413585B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571239A8);
    sub_2412C8FC4(&qword_2571239B0, &qword_2571239A8, MEMORY[0x24BDB9CB0]);
    v1 = sub_2414B2E60();
    *(_QWORD *)(v2 + 96) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_241358658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 120))
  {
    v1 = *(_QWORD *)(v0 + 120);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257123998);
    sub_2412C8FC4(&qword_2571239A0, &qword_257123998, MEMORY[0x24BDB9CB0]);
    v1 = sub_2414B2E60();
    *(_QWORD *)(v2 + 120) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2413586FC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 129);
}

uint64_t sub_241358780@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 129);
  return result;
}

uint64_t sub_24135880C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B78();
  return swift_release();
}

void sub_2413588B4(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t KeyPath;

  if ((*(_BYTE *)(v4 + 40) & 1) != 0
    || *(double *)(v4 + 24) != a1
    || *(double *)(v4 + 32) != a2
    || (*(_BYTE *)(v4 + 80) & 1) != 0
    || *(double *)(v4 + 64) != a3
    || *(double *)(v4 + 72) != a4)
  {
    swift_getKeyPath();
    sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
    sub_2414B2B84();
    swift_release();
    if ((*(_BYTE *)(v4 + 16) & 1) == 0)
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      sub_2414B2B78();
      swift_release();
    }
    sub_2413582CC(*(uint64_t *)&a1, *(uint64_t *)&a2, 0);
    sub_241358484(*(uint64_t *)&a3, *(uint64_t *)&a4, 0);
  }
}

uint64_t sub_241358A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI22MotionViewDisplayState___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_241358ABC()
{
  sub_241358A40();
  return swift_deallocClassInstance();
}

uint64_t sub_241358AE0()
{
  return type metadata accessor for MotionViewDisplayState(0);
}

uint64_t type metadata accessor for MotionViewDisplayState(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257123648);
}

uint64_t sub_241358AFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_241358BAC()
{
  uint64_t v0;

  *(_WORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571239A8);
  swift_allocObject();
  *(_QWORD *)(v0 + 48) = sub_2414B2DB8();
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  swift_allocObject();
  *(_QWORD *)(v0 + 88) = sub_2414B2DB8();
  *(_QWORD *)(v0 + 96) = 0;
  *(_BYTE *)(v0 + 104) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123998);
  swift_allocObject();
  *(_QWORD *)(v0 + 112) = sub_2414B2DB8();
  *(_QWORD *)(v0 + 120) = 0;
  *(_WORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  sub_2414B2BA8();
  return v0;
}

void *sub_241358C70()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void sub_241358CFC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2;
  v3 = a2;

}

void *sub_241358D2C()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void sub_241358DB8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2;
  v3 = a2;

}

uint64_t sub_241358DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI29MaterialMotionContentObserver___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_241358E48()
{
  return type metadata accessor for MaterialMotionContentObserver(0);
}

uint64_t type metadata accessor for MaterialMotionContentObserver(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_254382780);
}

uint64_t sub_241358E64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_241358EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2A88();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 24);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    v21 = v18[16];
    sub_2412C72E4(*(_QWORD *)v18, v20, v21);
    *(_QWORD *)v17 = v19;
    *((_QWORD *)v17 + 1) = v20;
    v17[16] = v21;
  }
  return a1;
}

uint64_t sub_241359088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B2A88();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return sub_2412C822C(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
}

uint64_t sub_24135916C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2A88();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_BYTE *)(v16 + 16);
  sub_2412C72E4(*(_QWORD *)v16, v18, v19);
  *(_QWORD *)v15 = v17;
  *(_QWORD *)(v15 + 8) = v18;
  *(_BYTE *)(v15 + 16) = v19;
  return a1;
}

uint64_t sub_2413592EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_2412CBE78(a1 + v8, &qword_257121D30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B2A88();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_BYTE *)(v16 + 16);
  sub_2412C72E4(*(_QWORD *)v16, v18, v19);
  v20 = *(_QWORD *)v15;
  v21 = *(_QWORD *)(v15 + 8);
  v22 = *(_BYTE *)(v15 + 16);
  *(_QWORD *)v15 = v17;
  *(_QWORD *)(v15 + 8) = v18;
  *(_BYTE *)(v15 + 16) = v19;
  sub_2412C822C(v20, v21, v22);
  return a1;
}

uint64_t sub_24135949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = *(int *)(a3 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B2A88();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  return a1;
}

uint64_t sub_241359604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_2412CBE78(a1 + v8, &qword_257121D30);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2A88();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 16);
  v19 = *(_QWORD *)v16;
  v20 = *(_QWORD *)(v16 + 8);
  v21 = *(_BYTE *)(v16 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = v18;
  sub_2412C822C(v19, v20, v21);
  return a1;
}

uint64_t sub_241359798()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413597A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_241359854()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241359860(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 16) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for MotionPlayerView(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_257123918);
}

void sub_241359924()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, &qword_257123928, type metadata accessor for MotionViewDisplayState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF51D0]);
  if (v0 <= 0x3F)
  {
    sub_2413599C8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2413599C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257123930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844C0);
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257123930);
  }
}

uint64_t sub_241359A20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for MotionPlayerViewRepresentable(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257123A78);
}

uint64_t sub_241359A4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24131A070();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241359A98()
{
  sub_24131A070();
  return sub_2414B3844();
}

uint64_t sub_241359AE8()
{
  sub_24131A02C();
  return sub_2414B3838();
}

uint64_t sub_241359B38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B36AC();
  *a1 = v3;
  return result;
}

uint64_t sub_241359B60()
{
  return sub_2414B36B8();
}

uint64_t sub_241359B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MotionPlayerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241359BCC()
{
  return sub_241359BE8(sub_2413534E4);
}

uint64_t sub_241359BDC()
{
  return sub_241359BE8(sub_241353654);
}

uint64_t sub_241359BE8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MotionPlayerView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_241359C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241359C6C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 17) = *(_BYTE *)(v0 + 24);
}

void sub_241359C94()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) = *(_BYTE *)(v0 + 24);
}

void sub_241359CAC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 129) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_241359CBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241359CE0()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241359CE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = a1;
  v7[8] = v4;
  return swift_task_switch();
}

char *keypath_get_selector_contentOffset()
{
  return sel_contentOffset;
}

id sub_241359D70@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_contentOffset);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_241359DA0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentOffset_, *a1, a1[1]);
}

uint64_t sub_241359DB4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241359DD8(uint64_t a1)
{
  uint64_t v1;

  return sub_241357BE4(a1, v1);
}

uint64_t sub_241359DE0()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241359DE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310430;
  return sub_241357CC0(a1, v4, v5, v6);
}

void sub_241359E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  id v5;

  v2 = OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver;
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_contentObserver) = a1;
  swift_retain();
  swift_release();
  if (*(_QWORD *)(v1 + v2))
  {
    v3 = *(void **)(*(_QWORD *)(v1
                              + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                  + 16);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
    swift_retain();
    v5 = v3;
    sub_2414B2B78();
    swift_release();
    swift_release();

  }
}

uint64_t sub_241359F78(uint64_t a1, unsigned int a2, unsigned __int8 *a3, unint64_t a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t result;
  void (*v28)(char *, char *, uint64_t);
  int v29;
  unint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  os_log_type_t v37;
  void (*v38)(char *, uint64_t);
  double v39;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t v49;

  v44 = a4;
  v47 = a2;
  v8 = sub_2414B2CA4();
  v9 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  v46 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123A00);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B2F44();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v41 - v22;
  v24 = *a3;
  v25 = *a5;
  v26 = a5[1];
  v42 = v25;
  sub_2412DC3FC(a1, (uint64_t)v13, &qword_257123A00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2412CBE78((uint64_t)v13, &qword_257123A00);
    return v47;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v13, v14);
  v28 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v28(v20, v23, v14);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v20, v14);
  if (v29 == *MEMORY[0x24BDEB1D0])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    return 3;
  }
  if (v29 == *MEMORY[0x24BDEB1E8])
    goto LABEL_7;
  if (v29 != *MEMORY[0x24BDEB1E0])
  {
    v44 = v26;
    if (qword_25437D278 != -1)
      swift_once();
    v32 = v45;
    v33 = __swift_project_value_buffer(v45, (uint64_t)qword_25438E7D0);
    v34 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v43, v33, v32);
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v48 = 0xD00000000000001FLL;
    v49 = 0x80000002414CF5C0;
    v28(v17, v23, v14);
    sub_2414B4D8C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v35 = v48;
    v36 = v49;
    v37 = sub_2414B51AC();
    v48 = v42;
    v49 = v44;
    sub_2413E6A30(v37, v35, v36, (uint64_t)&v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v32);
    v38 = *(void (**)(char *, uint64_t))(v15 + 8);
    v38(v23, v14);
    v38(v20, v14);
    return v47;
  }
  swift_getKeyPath();
  v30 = v44;
  v48 = v44;
  sub_2412C8030(&qword_257123988, type metadata accessor for MotionViewDisplayState, (uint64_t)&unk_2414BC290);
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v30 + 129) == 1)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v41 - 2) = v30;
    *((_BYTE *)&v41 - 8) = 0;
    v48 = v30;
    sub_2414B2B78();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    return 0;
  }
  if (v24 == 2)
  {
    if ((*(_BYTE *)(v30 + 40) & 1) != 0 || (*(_BYTE *)(v30 + 80) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      return v47;
    }
    if (*(_BYTE *)(v30 + 104) == 1)
    {
      v39 = *(double *)(v30 + 72) * *(double *)(v30 + 64) / (*(double *)(v30 + 32) * *(double *)(v30 + 24));
      if (v39 >= COERCE_DOUBLE(1) && v39 < 0.6)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        return 1;
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      if (v39 < 0.6)
        return 3;
      else
        return 2;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      result = v47;
      if ((_BYTE)v47)
        return 3;
    }
  }
  else
  {
    if (v24 == 3)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      if ((*(_BYTE *)(v30 + 104) & 1) != 0)
        return 2;
      if (v47 != 4)
        return v47 != 0;
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    if ((v24 & 1) != 0)
      return 2;
    else
      return 1;
  }
  return result;
}

uint64_t sub_24135A4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_2414B2A88();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1
     + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_url;
  v10 = (uint64_t *)(*(_QWORD *)(a1
                              + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_configurator)
                  + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  v11 = *v10;
  v12 = v10[1];
  v13 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext);
  v14 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCV11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC29MotionPlayerViewRepresentable11Coordinator_loggingContext
                  + 8);
  v22 = v13;
  v23 = v11;
  v15 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v17 = (v4 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v16, v5, v2);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = v23;
  v19[1] = v12;
  v20 = (_QWORD *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v20 = v22;
  v20[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24135F590((uint64_t)v8, (uint64_t)&unk_257123B78, v18);
  swift_release();
  return sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_254384360);
}

void sub_24135A6B0()
{
  char *v0;
  char *v1;
  unint64_t v2;

  swift_weakInit();
  v1 = &v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_loggingContext];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2414B56C8())
    v2 = sub_241389508(MEMORY[0x24BEE4AF8]);
  else
    v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_5C0FCAEC7E121FD01840555B36210BDC20GeometryTrackingView_subscriptions] = v2;

  sub_2414B5674();
  __break(1u);
}

uint64_t sub_24135A788()
{
  return objectdestroy_49Tm_0();
}

uint64_t objectdestroy_49Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24135A7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310C28;
  v3[4] = v2;
  return swift_task_switch();
}

uint64_t sub_24135A828(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned __int8 v35;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    swift_retain();
    j__swift_retain();
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = a2[3];
    v11 = *((_BYTE *)a2 + 32);
    sub_2412C6F44(v10, v11);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v12 = a2[5];
    v13 = a2[6];
    v14 = *((_BYTE *)a2 + 56);
    sub_2412C72E4(v12, v13, v14);
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = v14;
    v15 = a3[8];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2414B2A88();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v21 = a3[9];
    v22 = a1 + v21;
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = *v23;
    v25 = *((_BYTE *)v23 + 8);
    sub_2412C6F44(*v23, v25);
    *(_QWORD *)v22 = v24;
    *(_BYTE *)(v22 + 8) = v25;
    v26 = a3[10];
    v27 = a1 + v26;
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = *v28;
    v30 = *((_BYTE *)v28 + 8);
    sub_2412C6F44(*v28, v30);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v30;
    v31 = a3[11];
    v32 = a1 + v31;
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = *v33;
    v35 = *((_BYTE *)v33 + 8);
    sub_2412C6F44(*v33, v35);
    *(_QWORD *)v32 = v34;
    *(_BYTE *)(v32 + 8) = v35;
  }
  return a1;
}

uint64_t sub_24135AA3C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  j__swift_release();
  sub_2412C8228(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  sub_2412C822C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2A88();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_2412C8228(*(_QWORD *)(a1 + a2[9]), *(unsigned __int8 *)(a1 + a2[9] + 8));
  sub_2412C8228(*(_QWORD *)(a1 + a2[10]), *(unsigned __int8 *)(a1 + a2[10] + 8));
  return sub_2412C8228(*(_QWORD *)(a1 + a2[11]), *(unsigned __int8 *)(a1 + a2[11] + 8));
}

uint64_t sub_24135AB3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unsigned __int8 v33;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 16);
  swift_retain();
  j__swift_retain();
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  sub_2412C6F44(v8, v9);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_2412C72E4(v10, v11, v12);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2414B2A88();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  v23 = *((_BYTE *)v21 + 8);
  sub_2412C6F44(*v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = (uint64_t *)(a2 + v24);
  v27 = *v26;
  v28 = *((_BYTE *)v26 + 8);
  sub_2412C6F44(*v26, v28);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v28;
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = (uint64_t *)(a2 + v29);
  v32 = *v31;
  v33 = *((_BYTE *)v31 + 8);
  sub_2412C6F44(*v31, v33);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = v33;
  return a1;
}

uint64_t sub_24135AD28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  j__swift_retain();
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  j__swift_release();
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  sub_2412C6F44(v8, v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  sub_2412C8228(v10, v11);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_BYTE *)(a2 + 56);
  sub_2412C72E4(v12, v13, v14);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v13;
  *(_BYTE *)(a1 + 56) = v14;
  sub_2412C822C(v15, v16, v17);
  if (a1 != a2)
  {
    v18 = a3[8];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_2412CBE78(a1 + v18, &qword_257121D30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2414B2A88();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v24 = a3[9];
  v25 = (uint64_t *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v27 = *v26;
  v28 = *((_BYTE *)v26 + 8);
  sub_2412C6F44(*v26, v28);
  v29 = *v25;
  v30 = *((unsigned __int8 *)v25 + 8);
  *v25 = v27;
  *((_BYTE *)v25 + 8) = v28;
  sub_2412C8228(v29, v30);
  v31 = a3[10];
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = *((_BYTE *)v33 + 8);
  sub_2412C6F44(*v33, v35);
  v36 = *v32;
  v37 = *((unsigned __int8 *)v32 + 8);
  *v32 = v34;
  *((_BYTE *)v32 + 8) = v35;
  sub_2412C8228(v36, v37);
  v38 = a3[11];
  v39 = (uint64_t *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v41 = *v40;
  v42 = *((_BYTE *)v40 + 8);
  sub_2412C6F44(*v40, v42);
  v43 = *v39;
  v44 = *((unsigned __int8 *)v39 + 8);
  *v39 = v41;
  *((_BYTE *)v39 + 8) = v42;
  sub_2412C8228(v43, v44);
  return a1;
}

uint64_t sub_24135AF84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 40) = v7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B2A88();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = a3[9];
  v16 = a3[10];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[11];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  return a1;
}

uint64_t sub_24135B114(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v6;
  j__swift_release();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2412C8228(v8, v9);
  v10 = *(_BYTE *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v10;
  sub_2412C822C(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = a3[8];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    sub_2412CBE78(a1 + v14, &qword_257121D30);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2414B2A88();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  v21 = a3[9];
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *v22;
  v26 = *((unsigned __int8 *)v22 + 8);
  *v22 = v24;
  *((_BYTE *)v22 + 8) = (_BYTE)v23;
  sub_2412C8228(v25, v26);
  v27 = a3[10];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  LOBYTE(v29) = *((_BYTE *)v29 + 8);
  v31 = *v28;
  v32 = *((unsigned __int8 *)v28 + 8);
  *v28 = v30;
  *((_BYTE *)v28 + 8) = (_BYTE)v29;
  sub_2412C8228(v31, v32);
  v33 = a3[11];
  v34 = (uint64_t *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  LOBYTE(v35) = *((_BYTE *)v35 + 8);
  v37 = *v34;
  v38 = *((unsigned __int8 *)v34 + 8);
  *v34 = v36;
  *((_BYTE *)v34 + 8) = (_BYTE)v35;
  sub_2412C8228(v37, v38);
  return a1;
}

uint64_t sub_24135B318()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24135B324(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_24135B3A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24135B3B0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_24135B428()
{
  unint64_t v0;

  sub_2413599C8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_24135B4BC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_257123AC8;
  if (!qword_257123AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123AD0);
    v2 = sub_24135B520();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257123AC8);
  }
  return result;
}

unint64_t sub_24135B520()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123AD8;
  if (!qword_257123AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123980);
    v2[0] = sub_24135B58C();
    v2[1] = sub_2413022D0();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123AD8);
  }
  return result;
}

unint64_t sub_24135B58C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123AE0;
  if (!qword_257123AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123978);
    v2[0] = sub_24135B5F8();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123AE0);
  }
  return result;
}

unint64_t sub_24135B5F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123AE8;
  if (!qword_257123AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123970);
    v2[0] = sub_2412C8FC4(&qword_257123AF0, &qword_257123968, MEMORY[0x24BDF44C8]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123AE8);
  }
  return result;
}

uint64_t sub_24135B67C()
{
  return sub_2412C8030(&qword_257123AF8, type metadata accessor for MotionPlayerViewRepresentable, (uint64_t)&unk_2414BC4D8);
}

uint64_t sub_24135B6A8()
{
  return sub_241355618();
}

uint64_t sub_24135B6B0()
{
  return sub_241355888();
}

uint64_t sub_24135B6B8(void **a1)
{
  return sub_2413558F4(a1);
}

uint64_t sub_24135B6C0()
{
  return sub_241355D94();
}

uint64_t sub_24135B6C8(char *a1)
{
  return sub_241355F60(a1);
}

void sub_24135B6D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  v4 = v2;

}

uint64_t sub_24135B704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2A88();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24135B7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_2414B2A88() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = (uint64_t *)(v0 + v4);
  v8 = *v7;
  v9 = v7[1];
  v10 = v0 + v5;
  v11 = *(_QWORD *)(v0 + v5);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_241310C28;
  v13[7] = v11;
  v13[8] = v12;
  v13[5] = v8;
  v13[6] = v9;
  v13[4] = v6;
  return swift_task_switch();
}

unint64_t sub_24135B864()
{
  unint64_t result;

  result = qword_254382848;
  if (!qword_254382848)
  {
    result = MEMORY[0x242695AE8](&unk_2414C25A4, &_s17LoggingContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_254382848);
  }
  return result;
}

unint64_t sub_24135B8A8()
{
  unint64_t result;

  result = qword_254382790;
  if (!qword_254382790)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE194, &type metadata for MotionPlaybackPolicyEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_254382790);
  }
  return result;
}

uint64_t sub_24135B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_24135B934()
{
  unint64_t result;

  result = qword_257123B88;
  if (!qword_257123B88)
  {
    result = MEMORY[0x242695AE8](&unk_2414BD978, &type metadata for MotionCacheDownloadPolicyEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_257123B88);
  }
  return result;
}

unint64_t sub_24135B978()
{
  unint64_t result;

  result = qword_254382698;
  if (!qword_254382698)
  {
    result = MEMORY[0x242695AE8](&unk_2414C4B38, &type metadata for MotionCacheBucketKey);
    atomic_store(result, (unint64_t *)&qword_254382698);
  }
  return result;
}

unint64_t sub_24135B9BC()
{
  unint64_t result;

  result = qword_257123B90;
  if (!qword_257123B90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C0C54, &_s10GravityKeyVN);
    atomic_store(result, (unint64_t *)&qword_257123B90);
  }
  return result;
}

void sub_24135BA04()
{
  sub_241359C94();
}

void sub_24135BA18()
{
  sub_241359CAC();
}

void sub_24135BA2C()
{
  sub_241359C6C();
}

void sub_24135BA40()
{
  sub_24135B6D0();
}

uint64_t storeEnumTagSinglePayload for MetalTextureProviderDisplayMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24135BAA0 + 4 * byte_2414BC5C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24135BAD4 + 4 * byte_2414BC5C0[v4]))();
}

uint64_t sub_24135BAD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24135BADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24135BAE4);
  return result;
}

uint64_t sub_24135BAF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24135BAF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24135BAFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24135BB04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureProviderDisplayMode()
{
  return &type metadata for MetalTextureProviderDisplayMode;
}

unint64_t sub_24135BB24()
{
  unint64_t result;

  result = qword_257123BA8;
  if (!qword_257123BA8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BC610, &type metadata for MetalTextureProviderDisplayMode);
    atomic_store(result, (unint64_t *)&qword_257123BA8);
  }
  return result;
}

uint64_t sub_24135BB68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MotionCacheIndexDestination(uint64_t a1)
{
  return sub_24135BBA8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_24135BBA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24135BB68(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24135BB68(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_24135BBA8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for MotionCacheIndexDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_24135BBA8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for MotionCacheIndexDestination()
{
  return &type metadata for MotionCacheIndexDestination;
}

uint64_t sub_24135BD04()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257123BB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257123BB0);
  return sub_2414B2C98();
}

_QWORD *sub_24135BD84(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  unint64_t v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *buf;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  unint64_t v53;

  if (!a1)
  {
    sub_24135C638();
    swift_allocError();
    *(_QWORD *)v35 = 0;
    goto LABEL_27;
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v3 = sub_2412CD2DC(0xD000000000000016, 0x80000002414CF7C0);
    if ((v4 & 1) != 0)
    {
      sub_2412E4960(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)&v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257123BD8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v5 = v47;
        v45 = *(_QWORD *)(v47 + 16);
        if (v45)
        {
          v6 = MEMORY[0x24BEE4AF8];
          v1 = (_QWORD *)sub_241311E24(MEMORY[0x24BEE4AF8]);
          v7 = sub_241311F44(v6);
          v8 = 0;
          v53 = v7;
          do
          {
            v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
            v10 = *(_QWORD *)(v9 + 16);
            swift_bridgeObjectRetain();
            if (!v10
              || (v11 = sub_2412CD2DC(25705, 0xE200000000000000), (v12 & 1) == 0)
              || (sub_2412E4960(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v51), (swift_dynamicCast() & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_24135C638();
              swift_allocError();
              *(_QWORD *)v37 = v9;
              *(_BYTE *)(v37 + 8) = 0;
LABEL_32:
              swift_willThrow();
              swift_bridgeObjectRelease();
              return v1;
            }
            if (!*(_QWORD *)(v9 + 16)
              || (v13 = sub_2412CD2DC(0x657A695378616DLL, 0xE700000000000000), (v14 & 1) == 0)
              || (sub_2412E4960(*(_QWORD *)(v9 + 56) + 32 * v13, (uint64_t)&v51), (swift_dynamicCast() & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_24135C638();
              swift_allocError();
              *(_QWORD *)v38 = v9;
              *(_BYTE *)(v38 + 8) = 1;
              goto LABEL_32;
            }
            ++v8;
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257123BD0);
            v15 = (_QWORD *)swift_allocObject();
            swift_bridgeObjectRetain();
            v16 = sub_241311E18(MEMORY[0x24BEE4AF8]);
            v15[3] = 0;
            v15[4] = 0;
            v15[2] = v16;
            v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
            v15[7] = 0;
            v15[8] = 0;
            v15[5] = v17;
            v15[6] = v47;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v51 = v1;
            sub_24143CD08((uint64_t)v15, v47, v48, isUniquelyReferenced_nonNull_native);
            v1 = (_QWORD *)v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v19 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v51 = v7;
            sub_24143CBB8(v47, v47, v48, v19);
            v7 = v51;
            v53 = v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v5 = v47;
          }
          while (v45 != v8);
          swift_bridgeObjectRelease();
          if (qword_257120720 != -1)
            swift_once();
          v20 = sub_2414B2CA4();
          __swift_project_value_buffer(v20, (uint64_t)qword_257123BB0);
          v21 = sub_2414B2C8C();
          v22 = sub_2414B51B8();
          if (os_log_type_enabled(v21, v22))
          {
            v23 = (uint8_t *)swift_slowAlloc();
            v46 = swift_slowAlloc();
            *(_QWORD *)&v51 = v46;
            *(_DWORD *)v23 = 136315138;
            buf = v23;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v24 = sub_2414B4C18();
            v26 = v25;
            swift_bridgeObjectRelease();
            v49 = sub_2412E4890(v24, v26, (uint64_t *)&v51);
            sub_2414B541C();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2412C1000, v21, v22, "Client defined cache buckets (IDs and maxSizes): %s.", buf, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x242695BD8](v46, -1, -1);
            MEMORY[0x242695BD8](buf, -1, -1);
          }

          if (*(_QWORD *)(a1 + 16) && (v27 = sub_2412CD2DC(0xD000000000000018, 0x80000002414CF7E0), (v28 & 1) != 0))
          {
            sub_2412E4960(*(_QWORD *)(a1 + 56) + 32 * v27, (uint64_t)&v51);
          }
          else
          {
            v51 = 0u;
            v52 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v52 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              swift_bridgeObjectRetain_n();
              v39 = sub_2414B2C8C();
              v40 = sub_2414B51B8();
              if (os_log_type_enabled(v39, v40))
              {
                v41 = (uint8_t *)swift_slowAlloc();
                v42 = swift_slowAlloc();
                *(_QWORD *)&v51 = v42;
                *(_DWORD *)v41 = 136315138;
                swift_bridgeObjectRetain();
                sub_2412E4890(v49, v50, (uint64_t *)&v51);
                sub_2414B541C();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_2412C1000, v39, v40, "Client defined default cache bucket: %s.", v41, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x242695BD8](v42, -1, -1);
                MEMORY[0x242695BD8](v41, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              swift_bridgeObjectRelease();
              return v1;
            }
          }
          else
          {
            sub_24135C67C((uint64_t)&v51);
          }
          swift_bridgeObjectRelease();
          sub_24135C638();
          swift_allocError();
          *(_QWORD *)v43 = 2;
          *(_BYTE *)(v43 + 8) = 2;
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24135C638();
        swift_allocError();
        *(_QWORD *)v35 = 1;
LABEL_27:
        *(_BYTE *)(v35 + 8) = 2;
        swift_willThrow();
        return v1;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_257120720 != -1)
    swift_once();
  v29 = sub_2414B2CA4();
  __swift_project_value_buffer(v29, (uint64_t)qword_257123BB0);
  v30 = sub_2414B2C8C();
  v31 = sub_2414B51B8();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v32 = 134217984;
    *(_QWORD *)&v51 = 20;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v30, v31, "Client did not define cache buckets. Will use default indices with capacity = %ld.", v32, 0xCu);
    MEMORY[0x242695BD8](v32, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_257123BD0);
  v1 = (_QWORD *)swift_allocObject();
  v33 = sub_241311E18(MEMORY[0x24BEE4AF8]);
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v33;
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v1[7] = 0;
  v1[8] = 0;
  v1[5] = v34;
  v1[6] = 20;
  return v1;
}

unint64_t sub_24135C638()
{
  unint64_t result;

  result = qword_257123BC8;
  if (!qword_257123BC8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BC6BC, &type metadata for MotionCacheInfoDictError);
    atomic_store(result, (unint64_t *)&qword_257123BC8);
  }
  return result;
}

uint64_t sub_24135C67C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437D280);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24135C700(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_24135C700(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for MotionCacheInfoDictError(uint64_t a1)
{
  return sub_24135C724(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_24135C724(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t assignWithCopy for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24135C700(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_24135C724(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for MotionCacheInfoDictError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_24135C724(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MotionCacheInfoDictError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionCacheInfoDictError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24135C864(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_24135C87C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheInfoDictError()
{
  return &type metadata for MotionCacheInfoDictError;
}

uint64_t sub_24135C8A8()
{
  uint64_t result;

  result = sub_2414B4A80();
  qword_257136E28 = result;
  return result;
}

uint64_t sub_24135C8E0()
{
  uint64_t result;

  result = sub_2414B4A80();
  qword_257136E30 = result;
  return result;
}

void sub_24135C91C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

void sub_24135CA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  *(_QWORD *)(v6 - 128) = a1;
  v7 = _s18PlayerControlsViewV14FlexibleSpacerVMa(255, v5, v4, a4);
  *(_QWORD *)(v6 - 120) = v7;
  _s21TransportControlsViewVMa(255, v5, v4, v8);
  *(_QWORD *)(v6 - 112) = sub_2414B3514();
  *(_QWORD *)(v6 - 104) = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 160) = v5;
  *(_QWORD *)(v6 - 152) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = AssociatedConformanceWitness;
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

uint64_t sub_24135CAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  _BYTE v31[32];

  *(_QWORD *)(v3 - 96) = a1;
  swift_getTupleTypeMetadata();
  v4 = sub_2414B4B1C();
  *(_QWORD *)(v3 - 368) = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  *(_QWORD *)(v3 - 352) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v31[-v6];
  v8 = sub_2414B3514();
  *(_QWORD *)(v3 - 344) = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v31[-v9];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v11 = sub_2414B3514();
  *(_QWORD *)(v3 - 328) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v31[-v12];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381390);
  v14 = sub_2414B3514();
  *(_QWORD *)(v3 - 320) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v3 - 360) = &v31[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v3 - 336) = &v31[-v17];
  sub_2414B3868();
  *(_QWORD *)(v3 - 256) = v2;
  *(_QWORD *)(v3 - 248) = v1;
  v18 = *(_QWORD *)(v3 - 280);
  *(_QWORD *)(v3 - 240) = *(_QWORD *)(v3 - 312);
  *(_QWORD *)(v3 - 232) = v18;
  v19 = *(_QWORD *)(v3 - 296);
  *(_QWORD *)(v3 - 224) = *(_QWORD *)(v3 - 304);
  *(_QWORD *)(v3 - 216) = v19;
  sub_2414B47F8();
  sub_2414B4A44();
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  sub_2414B44B0();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 352) + 8))(v7, v5);
  sub_2414B46C0();
  v20 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v3 - 176) = v30;
  *(_QWORD *)(v3 - 168) = v20;
  v21 = MEMORY[0x24BDED308];
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v3 - 176);
  sub_2414B4180();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 344) + 8))(v10, v8);
  swift_beginAccess();
  v23 = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v3 - 192) = v22;
  *(_QWORD *)(v3 - 184) = v23;
  v24 = MEMORY[0x242695AE8](v21, v11, v3 - 192);
  v25 = *(_QWORD *)(v3 - 360);
  sub_2414B4534();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 328) + 8))(v13, v11);
  v26 = sub_2412C8FC4(&qword_254381388, &qword_254381390, MEMORY[0x24BDF1248]);
  *(_QWORD *)(v3 - 208) = v24;
  *(_QWORD *)(v3 - 200) = v26;
  MEMORY[0x242695AE8](v21, v14, v3 - 208);
  v27 = *(_QWORD *)(v3 - 336);
  sub_2412FBF34(v25, v14, v27);
  v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 8);
  v28(v25, v14);
  sub_2412EEA1C(v27, v14, *(_QWORD *)(v3 - 288));
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v27, v14);
}

void sub_24135CF04(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[20];
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v12[11] = a3;
  v12[12] = a1;
  v18 = a2;
  v17 = a6;
  swift_getAssociatedTypeWitness();
  v12[17] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)v12 - v9;
  v10 = swift_checkMetadataState();
  v15 = *(_QWORD *)(v10 - 8);
  v12[18] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12[16] = (char *)v12 - v11;
  v14 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = a4;
  v20 = AssociatedTypeWitness;
  v21 = a5;
  v22 = AssociatedConformanceWitness;
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

void sub_24135D068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;

  v9[19] = a1;
  v9[24] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[14] = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v9[31] = (char *)&a9 - v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9[28] = (char *)&a9 - v17;
  v18 = swift_checkMetadataState();
  v9[27] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[15] = AssociatedConformanceWitness;
  *(_QWORD *)(v12 - 240) = v10;
  *(_QWORD *)(v12 - 232) = AssociatedTypeWitness;
  *(_QWORD *)(v12 - 224) = v11;
  *(_QWORD *)(v12 - 216) = AssociatedConformanceWitness;
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

void sub_24135D1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  v9[26] = a1;
  v9[29] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[33] = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v9[30] = (char *)&a9 - v17;
  v9[10] = *(_QWORD *)(v13 + 8);
  sub_2412C84FC(v9[32]);
  v18 = *(void (**)(uint64_t, uint64_t))(v13 + 312);
  swift_unknownObjectRetain();
  v18(v14, v13);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v12, v10);
  (*(void (**)(uint64_t, uint64_t))(v9[27] + 8))(v11, v12);
  sub_24135D8E4();
}

void sub_24135D2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;

  v6 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 104) = MEMORY[0x242695AE8](&unk_2414BC920, v6);
  sub_2412FBF34(v1, v6, v2);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
  *(_QWORD *)(v0 + 120) = v7;
  v7(v1, v6);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v5 - 240) = KeyPath;
  *(_BYTE *)(v5 - 232) = 0;
  v10 = _s18PlayerControlsViewV14FlexibleSpacerVMa(0, v4, v3, v9);
  *(_QWORD *)(v0 + 216) = v10;
  *(_QWORD *)(v0 + 224) = MEMORY[0x242695AE8](&unk_2414BC8D0, v10);
  sub_2412FBF34(v5 - 240, v10, v0 + 736);
  sub_2412C821C(KeyPath, 0);
  swift_retain();
  v11 = v4;
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v3;
  v12 = v3;
  sub_2413967C4(v0 + 1040);
  v13 = *(_QWORD *)(v0 + 1040);
  v14 = *(_QWORD *)(v0 + 1048);
  v15 = *(_QWORD *)(v0 + 1072);
  *(_QWORD *)(v0 + 96) = v15;
  v16 = *(_QWORD *)(v0 + 1080);
  *(_QWORD *)(v0 + 72) = v16;
  v17 = *(_QWORD *)(v0 + 1088);
  v18 = *(_QWORD *)(v0 + 1096);
  *(_QWORD *)(v0 + 40) = v18;
  *(_QWORD *)(v0 + 48) = v17;
  v19 = *(_QWORD *)(v0 + 1104);
  v20 = *(_QWORD *)(v0 + 1112);
  v21 = *(_QWORD *)(v0 + 1120);
  v22 = *(_QWORD *)(v0 + 1128);
  *(_QWORD *)(v0 + 24) = v22;
  *(_QWORD *)(v0 + 32) = v19;
  v23 = *(_QWORD *)(v0 + 1136);
  v24 = *(_BYTE *)(v0 + 1144);
  v25 = *(_BYTE *)(v0 + 1145);
  *(_QWORD *)(v0 + 896) = v13;
  *(_QWORD *)(v0 + 904) = v14;
  v26 = *(_OWORD *)(v0 + 1056);
  *(_OWORD *)v0 = v26;
  *(_OWORD *)(v0 + 912) = v26;
  *(_QWORD *)(v0 + 928) = v15;
  *(_QWORD *)(v0 + 936) = v16;
  *(_QWORD *)(v0 + 944) = v17;
  *(_QWORD *)(v0 + 952) = v18;
  *(_QWORD *)(v0 + 960) = v19;
  *(_QWORD *)(v0 + 968) = v20;
  *(_QWORD *)(v0 + 976) = v21;
  *(_QWORD *)(v0 + 984) = v22;
  *(_QWORD *)(v0 + 992) = v23;
  *(_BYTE *)(v0 + 1000) = v24;
  *(_BYTE *)(v0 + 1001) = v25;
  v27 = sub_2414B3868();
  v29 = _s21TransportControlsViewVMa(0, v11, v12, v28);
  v30 = MEMORY[0x242695AE8](&unk_2414C06E0, v29);
  v31 = v27;
  v32 = v30;
  MEMORY[0x242693B14](v31, sub_24135D8B8, 0, v29);
  swift_release();
  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 32), v20, v21, *(_QWORD *)(v0 + 24), v23, v24, v25);
  v33 = *(_OWORD *)(v5 - 128);
  v34 = *(_OWORD *)(v5 - 144);
  v35 = v33;
  *(_OWORD *)(v0 + 848) = v34;
  *(_OWORD *)(v0 + 864) = v33;
  v36 = *(_OWORD *)(v5 - 192);
  v37 = *(_OWORD *)(v5 - 208);
  v38 = v36;
  *(_OWORD *)(v0 + 784) = v37;
  *(_OWORD *)(v0 + 800) = v36;
  v39 = *(_OWORD *)(v5 - 160);
  v41 = *(_OWORD *)(v5 - 176);
  v40 = v39;
  *(_OWORD *)(v0 + 816) = v41;
  *(_OWORD *)(v0 + 832) = v39;
  v42 = *(_OWORD *)(v5 - 224);
  v43 = *(_OWORD *)(v5 - 240);
  *(_OWORD *)(v0 + 752) = v43;
  *(_OWORD *)(v0 + 768) = v42;
  *(_OWORD *)(v0 + 1136) = v34;
  *(_OWORD *)(v0 + 1152) = v35;
  *(_OWORD *)(v0 + 1072) = v37;
  *(_OWORD *)(v0 + 1088) = v38;
  *(_OWORD *)(v0 + 1120) = v40;
  *(_OWORD *)(v0 + 1104) = v41;
  v44 = *(_QWORD *)(v5 - 112);
  *(_QWORD *)(v0 + 880) = v44;
  *(_QWORD *)(v0 + 1168) = v44;
  *(_OWORD *)(v0 + 1056) = v42;
  *(_OWORD *)(v0 + 1040) = v43;
  v45 = sub_2414B3514();
  *(_QWORD *)(v0 + 72) = v45;
  v46 = sub_24135E51C();
  *(_QWORD *)(v0 + 584) = v32;
  *(_QWORD *)(v0 + 592) = v46;
  *(_QWORD *)(v0 + 96) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v45, v0 + 584);
  sub_2412FBF34(v0 + 1040, v45, v0 + 600);
  sub_24135E560(v0 + 752);
  v47 = swift_getKeyPath();
  *(_QWORD *)(v5 - 240) = v47;
  *(_BYTE *)(v5 - 232) = 0;
  sub_2412FBF34(v5 - 240, *(_QWORD *)(v0 + 216), v0 + 568);
  sub_2412C821C(v47, 0);
  v48 = *(_QWORD *)(v0 + 56);
  sub_2412C84FC(*(_QWORD *)(v0 + 256));
  v49 = *(_QWORD *)(v0 + 64);
  v50 = *(void (**)(uint64_t, uint64_t))(v49 + 320);
  swift_unknownObjectRetain();
  v51 = *(_QWORD *)(v0 + 128);
  v50(v48, v49);
  swift_unknownObjectRelease();
  v52 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 136) + 32))(v52);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v51, v52);
  sub_24135D8E4();
}

uint64_t sub_24135D644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  void (*v37)(_QWORD, uint64_t);
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 184) = MEMORY[0x242695AE8](&unk_2414BC920, v3);
  sub_2412FBF34(v1, v3, *(_QWORD *)(v0 + 248));
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 256) = v5;
  v5(v1, v3);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 208);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 232) + 16))(v6, *(_QWORD *)(v0 + 240), v7);
  v8 = *(_OWORD *)(v0 + 680);
  v10 = *(_OWORD *)(v0 + 696);
  v9 = *(_OWORD *)(v0 + 712);
  *(_OWORD *)(v0 + 992) = v10;
  *(_OWORD *)(v0 + 1008) = v9;
  v11 = *(_OWORD *)(v0 + 616);
  v13 = *(_OWORD *)(v0 + 632);
  v12 = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v0 + 928) = v13;
  *(_OWORD *)(v0 + 944) = v12;
  v14 = *(_OWORD *)(v0 + 648);
  v16 = *(_OWORD *)(v0 + 664);
  v15 = *(_OWORD *)(v0 + 680);
  *(_OWORD *)(v0 + 960) = v16;
  *(_OWORD *)(v0 + 976) = v15;
  v17 = *(_OWORD *)(v0 + 616);
  v18 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 896) = v18;
  *(_OWORD *)(v0 + 912) = v17;
  v19 = *(_OWORD *)(v0 + 712);
  *(_OWORD *)(v0 + 464) = v10;
  *(_OWORD *)(v0 + 480) = v19;
  *(_OWORD *)(v0 + 400) = v13;
  *(_OWORD *)(v0 + 416) = v14;
  *(_OWORD *)(v0 + 432) = v16;
  *(_OWORD *)(v0 + 448) = v8;
  v20 = *(_QWORD *)(v0 + 736);
  v21 = *(_BYTE *)(v0 + 744);
  *(_QWORD *)(v0 + 512) = v20;
  *(_BYTE *)(v0 + 520) = v21;
  *(_QWORD *)(v0 + 528) = v6;
  *(_QWORD *)(v0 + 536) = v0 + 512;
  v22 = *(_QWORD *)(v0 + 728);
  *(_QWORD *)(v0 + 1024) = v22;
  *(_QWORD *)(v0 + 496) = v22;
  *(_OWORD *)(v0 + 368) = v18;
  *(_OWORD *)(v0 + 384) = v11;
  v23 = *(_QWORD *)(v0 + 568);
  v24 = *(_BYTE *)(v0 + 576);
  *(_QWORD *)(v0 + 352) = v23;
  *(_BYTE *)(v0 + 360) = v24;
  *(_QWORD *)(v0 + 544) = v0 + 368;
  *(_QWORD *)(v0 + 552) = v0 + 352;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v26 = v1;
  v27 = v1;
  v28 = *(_QWORD *)(v0 + 248);
  v25(v27, v28, v3);
  *(_QWORD *)(v0 + 560) = v26;
  sub_2412C7080(v20, v21);
  sub_24135E61C(v0 + 896);
  sub_2412C7080(v23, v24);
  v29 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 312) = v7;
  *(_QWORD *)(v0 + 320) = v29;
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 336) = v29;
  *(_QWORD *)(v0 + 344) = v3;
  v30 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 280) = v31;
  *(_QWORD *)(v0 + 288) = v30;
  *(_QWORD *)(v0 + 296) = v31;
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 184);
  sub_2412F68CC((uint64_t *)(v0 + 528), 5uLL, v0 + 312);
  v32 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v32(v28, v3);
  sub_2412C821C(*(_QWORD *)(v0 + 568), *(_BYTE *)(v0 + 576));
  v33 = *(_OWORD *)(v0 + 712);
  *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 696);
  *(_OWORD *)(v0 + 1152) = v33;
  *(_QWORD *)(v0 + 1168) = *(_QWORD *)(v0 + 728);
  v34 = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v0 + 1088) = v34;
  v35 = *(_OWORD *)(v0 + 664);
  *(_OWORD *)(v0 + 1120) = *(_OWORD *)(v0 + 680);
  *(_OWORD *)(v0 + 1104) = v35;
  v36 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 1056) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 1040) = v36;
  sub_24135E560(v0 + 1040);
  sub_2412C821C(*(_QWORD *)(v0 + 736), *(_BYTE *)(v0 + 744));
  v37 = *(void (**)(_QWORD, uint64_t))(v0 + 120);
  v37(*(_QWORD *)(v0 + 240), v7);
  v32(v26, v3);
  sub_2412C821C(*(_QWORD *)(v0 + 352), *(_BYTE *)(v0 + 360));
  v38 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v2 - 144) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v2 - 128) = v38;
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v0 + 496);
  v39 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v2 - 208) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v2 - 192) = v39;
  v40 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v2 - 176) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v2 - 160) = v40;
  v41 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v2 - 240) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v2 - 224) = v41;
  sub_24135E560(v2 - 240);
  sub_2412C821C(*(_QWORD *)(v0 + 512), *(_BYTE *)(v0 + 520));
  return ((uint64_t (*)(_QWORD, uint64_t))v37)(*(_QWORD *)(v0 + 264), v7);
}

double sub_24135D8B8()
{
  uint64_t v0;

  v0 = sub_2414B3868();
  return MEMORY[0x242692CBC](v0) + -4.0;
}

void sub_24135D8E4()
{
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

uint64_t sub_24135D92C(int *a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;

  v8 = v6 + a1[15];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  v9 = *(_QWORD *)(v2 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v5, v2);
  v11 = (_QWORD *)(v6 + a1[13]);
  *v11 = v4;
  v11[1] = v3;
  v12 = v1(v10);
  v13 = sub_2414B3868();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v5, v2);
  v15 = (uint64_t *)(v6 + a1[14]);
  *v15 = v12;
  v15[1] = v13;
  return result;
}

void sub_24135D9B8()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 18) && (*(_BYTE *)(v0 + 16) & 1) != 0)
    __break(1u);
}

uint64_t sub_24135D9F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];

  v55 = a2;
  v54 = sub_2414B346C();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v50 = a1[3];
  v4 = sub_2414B3514();
  v5 = sub_2414B3514();
  v68[0] = a1[5];
  v6 = v68[0];
  v68[1] = MEMORY[0x24BDECC60];
  v7 = MEMORY[0x24BDED308];
  v67[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v68);
  v67[1] = MEMORY[0x24BDEC438];
  v45 = v5;
  v46 = MEMORY[0x242695AE8](v7, v5, v67);
  v8 = sub_2414B3604();
  v9 = sub_2414B3514();
  v48 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)v36 - v10;
  v11 = sub_2414B3514();
  v47 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v42 = (char *)v36 - v12;
  sub_2414B3DB4();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v38 = v11;
  v14 = sub_2414B3514();
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (char *)v36 - v15;
  v16 = sub_2412FDEC4((unint64_t *)&qword_254380D20, &qword_254380D28, MEMORY[0x24BDF3E20], MEMORY[0x24BDEEC40]);
  v36[1] = v16;
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v8);
  v66[0] = v16;
  v66[1] = v17;
  v37 = MEMORY[0x242695AE8](v7, v9, v66);
  v65[0] = v37;
  v65[1] = MEMORY[0x24BDEBEE0];
  v18 = MEMORY[0x242695AE8](v7, v11, v65);
  v36[2] = v18;
  v19 = sub_2412C8030((unint64_t *)&qword_2543844B0, v13, MEMORY[0x24BDF1078]);
  v64[0] = v18;
  v64[1] = v19;
  v39 = MEMORY[0x242695AE8](v7, v14, v64);
  v61 = v14;
  v62 = v39;
  v20 = MEMORY[0x242695A94](0, &v61, MEMORY[0x24BDF27E8], 0);
  v40 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v36 - v24;
  v61 = sub_2414B4648();
  v62 = 0x3FF0000000000000;
  v63 = 0;
  v56 = a1[2];
  v57 = v50;
  v58 = a1[4];
  v59 = v6;
  v60 = v51;
  v26 = v43;
  sub_2414B4504();
  swift_release();
  sub_2414B4A44();
  v27 = v42;
  sub_2414B44A4();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v9);
  v28 = v41;
  v29 = v38;
  sub_2412F6DCC();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v29);
  v30 = v53;
  v31 = v52;
  v32 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, *MEMORY[0x24BDECF00], v54);
  v33 = v39;
  sub_2414B42AC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v14);
  v61 = v14;
  v62 = v33;
  swift_getOpaqueTypeConformance2();
  sub_2412FBF34((uint64_t)v22, v20, (uint64_t)v25);
  v34 = *(void (**)(char *, uint64_t))(v40 + 8);
  v34(v22, v20);
  sub_2412EEA1C((uint64_t)v25, v20, v55);
  return ((uint64_t (*)(char *, uint64_t))v34)(v25, v20);
}

void sub_24135DF88(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[12];

  v13[3] = a5;
  v9 = sub_2414B3514();
  v13[1] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_2414B3514();
  v13[2] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v13[0] = (char *)v13 - v12;
  v13[8] = a1;
  v13[9] = a2;
  v13[10] = a3;
  v13[11] = a4;
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

uint64_t sub_24135E084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v8 = v1 + *(int *)(a1 + 60);
  v9 = *(_QWORD *)v8;
  v10 = *(_BYTE *)(v8 + 8);
  sub_2412C7080(*(_QWORD *)v8, v10);
  sub_2413456FC(v9, v10);
  sub_2412C821C(v9, v10);
  sub_2414B4510();
  sub_2414B3970();
  sub_2414B3868();
  sub_2414B4A20();
  sub_2412C7080(v9, v10);
  sub_2413456FC(v9, v10);
  sub_2412C821C(v9, v10);
  v11 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v7 - 144) = v4;
  *(_QWORD *)(v7 - 136) = v11;
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v7 - 144);
  sub_2414B44C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 184) + 8))(v6, v3);
  v14 = MEMORY[0x24BDEC438];
  *(_QWORD *)(v7 - 160) = v13;
  *(_QWORD *)(v7 - 152) = v14;
  MEMORY[0x242695AE8](v12, v2, v7 - 160);
  v15 = *(_QWORD *)(v7 - 192);
  sub_2412FBF34(v5, v2, v15);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 176) + 8);
  v16(v5, v2);
  sub_2412EEA1C(v15, v2, *(_QWORD *)(v7 - 168));
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v15, v2);
}

double sub_24135E224@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  __int128 v14;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  sub_2412C7080(v3, v4);
  sub_2412FA328(v3, v4, &v10);
  sub_2412C821C(v3, v4);
  sub_2414B4A44();
  sub_2414B31B4();
  v5 = v10;
  v6 = v11;
  v7 = v12;
  v8 = v13;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  result = *(double *)&v14;
  *(_OWORD *)(a1 + 48) = v14;
  return result;
}

uint64_t sub_24135E2F8()
{
  uint64_t v0;

  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  v0 = sub_2414B33C4();
  sub_2414B3658();
  return v0;
}

uint64_t sub_24135E380()
{
  swift_release();
  return swift_unknownObjectRelease();
}

_QWORD *sub_24135E3A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_24135E3E4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t sub_24135E450(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t _s18PlayerControlsViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18PlayerControlsViewVMn);
}

uint64_t sub_24135E4A8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24135E4E0()
{
  sub_24135C91C();
}

void _s18PlayerControlsViewV15AccessoryButtonVMa()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t _s18PlayerControlsViewV14FlexibleSpacerVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18PlayerControlsViewV14FlexibleSpacerVMn);
}

void sub_24135E50C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_24135CF04(v1[5], v1[6], v1[7], v1[2], v1[3], a1);
}

unint64_t sub_24135E51C()
{
  unint64_t result;

  result = qword_257123BE0;
  if (!qword_257123BE0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF08D8], MEMORY[0x24BDF08E8]);
    atomic_store(result, (unint64_t *)&qword_257123BE0);
  }
  return result;
}

uint64_t sub_24135E560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 105);
  v11 = *(_QWORD *)(a1 + 48);
  swift_release();
  swift_unknownObjectRelease();
  sub_2412C823C(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  swift_release();
  return a1;
}

uint64_t sub_24135E61C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 105);
  v11 = *(_QWORD *)(a1 + 48);
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C6F48(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  swift_retain();
  return a1;
}

uint64_t sub_24135E6E4@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  double v2;

  if (*(_BYTE *)(result + 18))
    goto LABEL_4;
  if ((*(_BYTE *)(result + 16) & 1) == 0)
  {
    v2 = 5.0;
    if (*(double *)result < 375.0)
    {
LABEL_5:
      *a2 = v2;
      return result;
    }
LABEL_4:
    v2 = 10.0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryStandardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithCopy for LibraryStandardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_2412C821C(v5, v6);
  return a1;
}

uint64_t assignWithTake for LibraryStandardButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_2412C821C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryStandardButtonStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryStandardButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24135E88C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24135E914(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    swift_bridgeObjectRetain();
    sub_2412C7080(v16, v17);
    *(_QWORD *)v14 = v16;
    *(_BYTE *)(v14 + 8) = v17;
  }
  return v4;
}

uint64_t sub_24135EA20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return sub_2412C821C(*(_QWORD *)((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24135EA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v5) = *(_BYTE *)(v12 + 8);
  swift_bridgeObjectRetain();
  sub_2412C7080(v13, v5);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v5;
  return a1;
}

uint64_t sub_24135EB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v7) = *(_BYTE *)(v12 + 8);
  sub_2412C7080(*(_QWORD *)v12, (char)v7);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = (_BYTE)v7;
  sub_2412C821C(v14, v15);
  return a1;
}

uint64_t sub_24135EBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  return a1;
}

uint64_t sub_24135EC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = *(_BYTE *)(v12 + 8);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v12;
  sub_2412C821C(v14, v15);
  return a1;
}

uint64_t sub_24135ED28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((((v7 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24135EDC0 + 4 * byte_2414BC700[v12]))();
  }
}

void sub_24135EE54(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_24135EF80()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24135EFF8);
}

void sub_24135EF88(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24135EF90);
  JUMPOUT(0x24135EFF8);
}

void sub_24135EFD4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24135EFF8);
}

void sub_24135EFDC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24135EFF8);
}

uint64_t sub_24135EFE4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x24135EFF0);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x24135EFF8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

void sub_24135F010()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

void sub_24135F0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s18PlayerControlsViewV14FlexibleSpacerVMa(255, v5, v4, a4);
  _s21TransportControlsViewVMa(255, v5, v4, v6);
  sub_2414B3514();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s18PlayerControlsViewV15AccessoryButtonVMa();
}

uint64_t sub_24135F1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[23];

  v10[10] = a1;
  swift_getTupleTypeMetadata();
  v1 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v1);
  v2 = sub_2414B4804();
  v3 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v4 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381390);
  v5 = sub_2414B3514();
  v10[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v2);
  v10[1] = MEMORY[0x24BDEDBB8];
  v6 = MEMORY[0x24BDED308];
  v9[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v10);
  v9[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
  v8[0] = MEMORY[0x242695AE8](v6, v4, v9);
  v8[1] = sub_2412C8FC4(&qword_254381388, &qword_254381390, MEMORY[0x24BDF1248]);
  return MEMORY[0x242695AE8](v6, v5, v8);
}

uint64_t sub_24135F30C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24135F340()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24135F374(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_24135DF88(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24135F384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];

  v1 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v2 = sub_2414B3514();
  v3 = sub_2414B3514();
  v15[0] = v1;
  v15[1] = MEMORY[0x24BDECC60];
  v4 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v15);
  v14[1] = MEMORY[0x24BDEC438];
  MEMORY[0x242695AE8](v4, v3, v14);
  v5 = sub_2414B3604();
  v6 = sub_2414B3514();
  v7 = sub_2414B3514();
  sub_2414B3DB4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v9 = sub_2414B3514();
  v13[0] = sub_2412FDEC4((unint64_t *)&qword_254380D20, &qword_254380D28, MEMORY[0x24BDF3E20], MEMORY[0x24BDEEC40]);
  v13[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v5);
  v12[0] = MEMORY[0x242695AE8](v4, v6, v13);
  v12[1] = MEMORY[0x24BDEBEE0];
  v11[0] = MEMORY[0x242695AE8](v4, v7, v12);
  v11[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, v8, MEMORY[0x24BDF1078]);
  MEMORY[0x242695AE8](v4, v9, v11);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24135F558()
{
  return sub_2412FDEC4((unint64_t *)&qword_254383EF8, &qword_254383F00, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
}

uint64_t sub_24135F590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412D78D4(a1, (uint64_t)v8);
  v9 = sub_2414B4FE4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_254384360);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_2414B4F90();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_24135F720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412D78D4(a1, (uint64_t)v8);
  v9 = sub_2414B4FE4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_254384360);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_2414B4F90();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126680);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_24135F8B8(void *a1, void *a2, objc_class *a3, float a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  objc_class *ObjectType;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  id v78;
  objc_super v79;

  v65 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v8);
  v77 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123FC0);
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123FC8);
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v67 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123FD0);
  v72 = *(_QWORD *)(v14 - 8);
  v73 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v71 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257123FD8);
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v74 = (char *)&ObjectType - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&ObjectType - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef] = 0;
  v21 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats;
  v22 = qword_257120740;
  v23 = v4;
  if (v22 != -1)
    swift_once();
  v24 = qword_257123BF0;
  *(_QWORD *)&v4[v21] = qword_257123BF0;
  v25 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver;
  v26 = objc_allocWithZone((Class)type metadata accessor for MetalVideoTextureProvider.OutputObserver());
  swift_retain();
  *(_QWORD *)&v23[v25] = objc_msgSend(v26, sel_init);
  v27 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLinkTarget;
  type metadata accessor for MetalVideoTextureProvider.DisplayLinkTarget();
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v28 + 24) = v24;
  *(_QWORD *)&v23[v27] = v28;
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_playerTimeControlStatusObserver] = 0;
  v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] = 0;
  v29 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayModeSubject;
  LOBYTE(v78) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123FA8);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v23[v29] = sub_2414B2DD0();
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask] = 0;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context] = a3;
  *(float *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_preferredFramesPerSecond] = a4;
  v30 = (void *)objc_opt_self();
  swift_retain();
  v31 = objc_msgSend(v30, sel_displayLinkWithTarget_selector_, v28, sel_frame_);
  v32 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink;
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink] = v31;
  v33 = v31;
  LOBYTE(v78) = 1;
  sub_2414B51D0();
  objc_msgSend(v33, sel_setPreferredFrameRateRange_);

  v34 = *(void **)&v23[v32];
  objc_msgSend(v34, sel_setPaused_, 1);
  v35 = (void *)objc_opt_self();
  v36 = v34;
  v37 = objc_msgSend(v35, sel_mainRunLoop);
  objc_msgSend(v36, sel_addToRunLoop_forMode_, v37, *MEMORY[0x24BDBCB80]);

  v79.receiver = v23;
  v79.super_class = ObjectType;
  v38 = objc_msgSendSuper2(&v79, sel_init);
  swift_unknownObjectWeakAssign();
  v39 = (char *)v38;
  ObjectType = a3;
  v40 = v65;
  if (v65)
  {
    v41 = v65;
    sub_2413600CC(v41);

  }
  v42 = *(void **)&v39[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver];
  swift_unknownObjectWeakAssign();
  v43 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v20, 1, 1, v43);
  v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = 0;
  v45[3] = 0;
  v45[4] = v44;
  v45[5] = a1;
  v46 = v42;
  v47 = a1;
  sub_24135F590((uint64_t)v20, (uint64_t)&unk_257123FF0, (uint64_t)v45);
  swift_release();
  sub_2412CBE78((uint64_t)v20, (uint64_t *)&unk_254384360);

  swift_getKeyPath();
  sub_2414B29E0();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v47;
  sub_2412C8FC4(&qword_257123FF8, &qword_257123FC0, MEMORY[0x24BDD0230]);
  v48 = v47;
  v50 = v67;
  v49 = v68;
  sub_2414B2E6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v49);
  sub_2412C8FC4((unint64_t *)&unk_257124000, &qword_257123FC8, MEMORY[0x24BDB94C8]);
  v51 = v70;
  v52 = v71;
  sub_2414B2EA8();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v51);
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v78 = (id)sub_2414B5230();
  v53 = sub_2414B520C();
  v54 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
  sub_2412C8FC4((unint64_t *)&unk_257124010, &qword_257123FD0, MEMORY[0x24BDB9658]);
  sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v55 = v73;
  v56 = v74;
  sub_2414B2E84();
  sub_2412CBE78(v54, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v52, v55);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2412C8FC4((unint64_t *)&unk_257124020, (uint64_t *)&unk_257123FD8, MEMORY[0x24BDB9A08]);
  v57 = v76;
  v58 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v57);
  *(_QWORD *)&v39[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_playerTimeControlStatusObserver] = v58;

  swift_release();
  result = swift_release();
  v60 = *(_QWORD *)&v39[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
  v61 = *(_QWORD *)(v60 + 24);
  v62 = __OFADD__(v61, 1);
  v63 = v61 + 1;
  if (v62)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v60 + 24) = v63;
    return (uint64_t)v39;
  }
  return result;
}

uint64_t sub_2413600CC(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[6];

  v3 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context) + 40);
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  v5 = v3;
  v6 = objc_msgSend(a1, sel_CGImage);
  if (v6)
  {
    v7 = v6;
    if (qword_257120A68 != -1)
      swift_once();
    type metadata accessor for Option(0);
    sub_2412C8030((unint64_t *)&qword_254384FD0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B8714);
    v8 = (void *)sub_2414B4C00();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_241363488;
    *(_QWORD *)(v9 + 24) = v4;
    v12[4] = sub_2413634B8;
    v12[5] = v9;
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 1107296256;
    v12[2] = sub_2414523F8;
    v12[3] = &block_descriptor_2;
    v10 = _Block_copy(v12);
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_newTextureWithCGImage_options_completionHandler_, v7, v8, v10);
    _Block_release(v10);
    swift_release_n();

  }
  else
  {
    sub_241360AB8((void *)1, 1, v4);
    swift_release_n();
  }

  return swift_release();
}

id sub_2413602BC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  void *v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  id v9;
  objc_super v10;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink];
  result = objc_msgSend(v3, sel_invalidate);
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
  v6 = *(_QWORD *)(v5 + 24);
  v7 = __OFSUB__(v6, 1);
  v8 = v6 - 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 24) = v8;
    swift_retain();
    v9 = v3;
    sub_2413631A4(v9);
    swift_release();

    v10.receiver = v1;
    v10.super_class = ObjectType;
    return objc_msgSendSuper2(&v10, sel_dealloc);
  }
  return result;
}

uint64_t sub_24136046C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  double v5;
  id v7;

  v3 = MEMORY[0x242695CC8](v1 + 16);
  if (v3)
  {
    v4 = (void *)v3;
    objc_msgSend(a1, sel_targetTimestamp);
    sub_241360518(v5);

  }
  swift_beginAccess();
  swift_retain();
  sub_24141D6B8(&v7, a1);
  swift_endAccess();

  sub_241362838();
  return swift_release();
}

void sub_241360518(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B2B30();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - v12;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - v16;
  v18 = (void *)MEMORY[0x242695CC8](*(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_outputObserver)+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output, v15);
  if (v18)
  {
    v37 = v18;
    objc_msgSend(v18, sel_itemTimeForHostTime_, a1);
    v19 = v38;
    v20 = v39;
    v35 = v41;
    v36 = v40;
    if ((sub_2414B52CC() & 1) != 0)
    {

    }
    else
    {
      sub_2414B2B24();
      v33 = v20;
      v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v31(v10, v17, v7);
      v32 = v19;
      swift_beginAccess();
      swift_retain();
      sub_24141D45C((uint64_t)v13, v10);
      v34 = *(void (**)(char *, uint64_t))(v8 + 8);
      v34(v13, v7);
      swift_endAccess();
      swift_release();
      v21 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
      v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v23 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_context) + 56);
      v31(v13, v17, v7);
      v24 = (*(unsigned __int8 *)(v8 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = 0;
      *(_QWORD *)(v25 + 24) = 0;
      *(_QWORD *)(v25 + 32) = v22;
      v26 = v32;
      *(_QWORD *)(v25 + 40) = v37;
      *(_QWORD *)(v25 + 48) = v26;
      LODWORD(v26) = v36;
      *(_DWORD *)(v25 + 56) = v33;
      *(_DWORD *)(v25 + 60) = v26;
      *(_QWORD *)(v25 + 64) = v35;
      *(_QWORD *)(v25 + 72) = v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v24, v13, v7);
      v27 = v23;
      v28 = v37;
      v29 = sub_24135F590((uint64_t)v6, (uint64_t)&unk_257124148, v25);
      sub_2412CBE78((uint64_t)v6, (uint64_t *)&unk_254384360);
      v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_loadTextureTask) = v29;
      swift_retain();
      if (v30)
      {
        sub_2414B5050();
        swift_release();
      }

      swift_release();
      v34(v17, v7);
    }
  }
}

uint64_t sub_2413608D4()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_241360900(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayLink);
    objc_msgSend(v6, sel_setPaused_, v2 ^ 1u);
    if ((v2 & 1) != 0)
    {
      swift_beginAccess();
      v7 = v6;
      swift_retain();
      sub_24141D6B8(&v8, v7);
      swift_endAccess();

      sub_241362838();
    }
    else
    {
      swift_retain();
      sub_2413631A4(v6);
    }

    swift_release();
  }
}

uint64_t sub_241360A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider____lazy_storage___displayModePublisher);
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257123FA8);
    sub_2412C8FC4((unint64_t *)&qword_257123FB0, &qword_257123FA8, MEMORY[0x24BDB9D10]);
    v2 = sub_2414B2E60();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_241360AB8(void *a1, char a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = (char *)MEMORY[0x242695CC8](v5);
  if (v6)
  {
    v7 = v6;
    v8 = OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode;
    if (v6[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] == 2)
    {

    }
    else if ((a2 & 1) != 0)
    {
      sub_2413634C0(a1);
      if (qword_2571209B0 != -1)
        swift_once();
      v9 = sub_2414B2CA4();
      __swift_project_value_buffer(v9, (uint64_t)qword_257137100);
      sub_2413634C0(a1);
      sub_2413634C0(a1);
      v10 = sub_2414B2C8C();
      v11 = sub_2414B51A0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v12 = 138543362;
        sub_2413636B4();
        swift_allocError();
        *v14 = a1;
        sub_2413634C0(a1);
        v15 = _swift_stdlib_bridgeErrorToNSError();
        sub_2414B541C();
        *v13 = v15;
        sub_2413634D0(a1, 1);
        sub_2413634D0(a1, 1);
        _os_log_impl(&dword_2412C1000, v10, v11, "MetalImageTextureProvider failed to load texture: %{public}@", v12, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25712B570);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v13, -1, -1);
        MEMORY[0x242695BD8](v12, -1, -1);

        sub_2413634D0(a1, 1);
      }
      else
      {

        sub_2413634D0(a1, 1);
        sub_2413634D0(a1, 1);
        sub_2413634DC(a1);

      }
    }
    else
    {
      *(_QWORD *)&v6[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = a1;
      sub_2413636F8(a1, 0);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *((_BYTE *)v7 + v8) = 1;
      sub_2414B2DC4();

      sub_2413634D0(a1, 0);
    }
  }
}

uint64_t sub_241360D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[21] = v12;
  v8[22] = v13;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v9 = sub_2414B2B30();
  v8[23] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[24] = v10;
  v8[25] = *(_QWORD *)(v10 + 64);
  v8[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241360E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __CVMetalTextureCache *v21;
  const __CFAllocator *v22;
  size_t Width;
  size_t Height;
  CVReturn TextureFromImage;
  id v26;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v46[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 128) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if ((sub_2414B5074() & 1) != 0)
      goto LABEL_17;
    v5 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v6 = *(void **)(v0 + 136);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 48) = v5;
    *(_QWORD *)(v0 + 56) = v4;
    if (!objc_msgSend(v6, sel_hasNewPixelBufferForItemTime_, v0 + 40) || (sub_2414B5074() & 1) != 0)
      goto LABEL_17;
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
    v9 = *(void **)(v0 + 136);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 72) = v8;
    *(_QWORD *)(v0 + 80) = v7;
    v10 = objc_msgSend(v9, sel_copyPixelBufferForItemTime_itemTimeForDisplay_, v0 + 64, 0);
    if (!v10)
    {
      if (qword_2571209B0 != -1)
        swift_once();
      v12 = sub_2414B2CA4();
      __swift_project_value_buffer(v12, (uint64_t)qword_257137100);
      v13 = sub_2414B2C8C();
      v14 = sub_2414B51A0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = *(_QWORD *)(v0 + 152);
        v43 = *(_QWORD *)(v0 + 160);
        v16 = *(_QWORD *)(v0 + 144);
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        *(_DWORD *)v17 = 136315138;
        v46[0] = v18;
        *(_QWORD *)(v0 + 88) = v16;
        *(_QWORD *)(v0 + 96) = v15;
        *(_QWORD *)(v0 + 104) = v43;
        type metadata accessor for CMTime(0);
        v19 = sub_2414B4D8C();
        *(_QWORD *)(v0 + 112) = sub_2412E4890(v19, v20, v46);
        sub_2414B541C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2412C1000, v13, v14, "Expected pixel buffer for item time: %s but got none", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v18, -1, -1);
        MEMORY[0x242695BD8](v17, -1, -1);

        goto LABEL_18;
      }

LABEL_17:
      goto LABEL_18;
    }
    v11 = v10;
    if ((sub_2414B5074() & 1) != 0)
    {

      goto LABEL_18;
    }
    v21 = *(__CVMetalTextureCache **)(v0 + 168);
    *(_QWORD *)(v0 + 120) = 0;
    v22 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    Width = CVPixelBufferGetWidth((CVPixelBufferRef)v11);
    Height = CVPixelBufferGetHeight((CVPixelBufferRef)v11);
    TextureFromImage = CVMetalTextureCacheCreateTextureFromImage(v22, v21, (CVImageBufferRef)v11, 0, MTLPixelFormatBGRA8Unorm, Width, Height, 0, (CVMetalTextureRef *)(v0 + 120));
    v26 = *(id *)(v0 + 120);
    if (!TextureFromImage && (sub_2414B5074() & 1) == 0)
    {
      if (!v26)
        goto LABEL_15;
      v26 = v26;
      v28 = CVMetalTextureGetTexture((CVMetalTextureRef)v26);
      if (v28)
      {
        v29 = v28;
        v31 = *(_QWORD *)(v0 + 208);
        v30 = *(_QWORD *)(v0 + 216);
        v32 = *(_QWORD *)(v0 + 192);
        v45 = v30;
        v33 = *(_QWORD *)(v0 + 184);
        v42 = v33;
        v44 = v31;
        v41 = *(_QWORD *)(v0 + 176);
        v34 = sub_2414B4FE4();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v30, 1, 1, v34);
        v35 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v41, v33);
        sub_2414B4FC0();
        v36 = v26;
        swift_retain();
        swift_unknownObjectRetain();
        v37 = sub_2414B4FB4();
        v38 = (*(unsigned __int8 *)(v32 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        v39 = (char *)swift_allocObject();
        v40 = MEMORY[0x24BEE6930];
        *((_QWORD *)v39 + 2) = v37;
        *((_QWORD *)v39 + 3) = v40;
        *((_QWORD *)v39 + 4) = v35;
        *((_QWORD *)v39 + 5) = v36;
        *((_QWORD *)v39 + 6) = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v39[v38], v44, v42);
        swift_release();
        sub_2413EE440(v45, (uint64_t)&unk_257124158, (uint64_t)v39);

        swift_release();
        swift_unknownObjectRelease();

        goto LABEL_18;
      }

    }
LABEL_15:

    goto LABEL_17;
  }
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413612B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  sub_2414B4FC0();
  v7[12] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241361324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1 + 16);
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (char *)v2;
  if ((sub_2414B5074() & 1) != 0)
  {
LABEL_7:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(void **)(v0 + 72);
  v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_displayMode] = 2;
  *(_BYTE *)(v0 + 40) = 2;
  sub_2414B2DC4();
  v7 = *(void **)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTextureRef] = v6;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_currentTexture] = v5;
  v8 = v6;
  swift_unknownObjectRelease();
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI25MetalVideoTextureProvider_stats];
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_241473188(v4, v10);
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_6:
    swift_release();
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(v9 + 48);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v9 + 48) = v14;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MetalVideoTextureProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MetalVideoTextureProvider.DisplayLinkTarget()
{
  return objc_opt_self();
}

uint64_t sub_2413614E4()
{
  return swift_unknownObjectRetain();
}

void sub_2413614F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v15 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)MEMORY[0x242695CC8](v1+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output, v3);
  swift_unknownObjectWeakAssign();
  v7 = (void *)MEMORY[0x242695CC8](v1+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_previousPlayerItem);
  if (v6)
  {
    if (v7)
    {
      v14 = v7;
      v8 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v6;
      v9[5] = v14;
      v10 = v6;
      v11 = v14;
      v12 = v10;
      v13 = v11;
      sub_24135F590((uint64_t)v5, (uint64_t)&unk_257124120, (uint64_t)v9);

      swift_release();
      sub_2412CBE78((uint64_t)v5, (uint64_t *)&unk_254384360);

    }
    else
    {

    }
  }
  else
  {
    v14 = v7;

  }
}

uint64_t sub_241361684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[6] = a4;
  v5[7] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v5[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  v5[9] = swift_task_alloc();
  v6 = sub_2414B4BA0();
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124050);
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124058);
  v5[16] = v8;
  v5[17] = *(_QWORD *)(v8 - 8);
  v5[18] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124060);
  v5[19] = v9;
  v5[20] = *(_QWORD *)(v9 - 8);
  v5[21] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124068);
  v5[22] = v10;
  v5[23] = *(_QWORD *)(v10 - 8);
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2413617DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1);
  if (v2)
  {
    v29 = *(_QWORD *)(v0 + 184);
    v27 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 64);
    v26 = (void *)v2;
    swift_getKeyPath();
    sub_2414B29E0();
    swift_release();
    sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, *MEMORY[0x24BEE5488], v8);
    v10 = sub_2414B5248();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    *(_QWORD *)(v0 + 40) = v10;
    v11 = sub_2414B520C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_2412C8FC4(&qword_257124070, &qword_257124050, MEMORY[0x24BDD0230]);
    sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    sub_2414B2E84();
    sub_2412CBE78(v9, (uint64_t *)&unk_2543842B0);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v5);
    sub_2412CC884(0, (unint64_t *)&qword_257124078);
    sub_2412C8FC4(&qword_257124080, &qword_257124058, MEMORY[0x24BDB9A08]);
    sub_2414B2E6C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v20);
    sub_2412C8FC4(&qword_257124088, &qword_257124060, MEMORY[0x24BDB94C8]);
    sub_241363A3C(&qword_257124090, (unint64_t *)&qword_257124078, 0x24BDB2618, MEMORY[0x24BEE5BE0]);
    sub_2414B2EA8();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v23);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2412C8FC4(&qword_257124098, &qword_257124068, MEMORY[0x24BDB9658]);
    v12 = sub_2414B2EB4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v24, v27);
    v13 = sub_2414B4FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v28, 1, 1, v13);
    v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2414B4FC0();
    swift_retain();
    swift_retain();
    v15 = sub_2414B4FB4();
    v16 = (_QWORD *)swift_allocObject();
    v17 = MEMORY[0x24BEE6930];
    v16[2] = v15;
    v16[3] = v17;
    v16[4] = v14;
    v16[5] = v12;
    swift_release();
    sub_2413EE440(v28, (uint64_t)&unk_2571240A8, (uint64_t)v16);

    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_241361C60@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_currentItem);
  *a2 = result;
  return result;
}

id sub_241361C98@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_241361CA4(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t result;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  swift_beginAccess();
  result = MEMORY[0x242695CC8](a2 + 16);
  if (result)
  {
    v9 = (void *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571240B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2414B9400;
    *(_QWORD *)(inited + 32) = sub_2414B4D68();
    *(_QWORD *)(inited + 40) = v11;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE44F0];
    *(_DWORD *)(inited + 48) = 1111970369;
    *(_QWORD *)(inited + 80) = sub_2414B4D68();
    *(_QWORD *)(inited + 88) = v12;
    *(_QWORD *)(inited + 120) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 96) = 1;
    sub_241312070(inited);
    v13 = objc_allocWithZone(MEMORY[0x24BDB2640]);
    v14 = (void *)sub_2414B4C00();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithPixelBufferAttributes_, v14);

    if (v15)
    {
      sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
      v16 = v15;
      v17 = v9;
      v18 = (void *)sub_2414B5230();
      objc_msgSend(v16, sel_setDelegate_queue_, v17, v18);

      objc_msgSend(v16, sel_requestNotificationOfMediaDataChangeAsSoonAsPossible);
      objc_msgSend(v7, sel_addOutput_, v16);

      v19 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
      v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_2414B4FC0();
      swift_retain();
      v21 = v7;
      v22 = sub_2414B4FB4();
      v23 = (_QWORD *)swift_allocObject();
      v24 = MEMORY[0x24BEE6930];
      v23[2] = v22;
      v23[3] = v24;
      v23[4] = v20;
      v23[5] = v21;
      swift_release();
      v25 = &unk_2571240C8;
      v26 = (uint64_t)v6;
      v27 = (uint64_t)v23;
    }
    else
    {
      if (qword_2571209B0 != -1)
        swift_once();
      v28 = sub_2414B2CA4();
      __swift_project_value_buffer(v28, (uint64_t)qword_257137100);
      v29 = sub_2414B2C8C();
      v30 = sub_2414B51AC();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        v40 = v32;
        *(_DWORD *)v31 = 136315138;
        v39 = sub_2412E4890(0xD000000000000013, 0x80000002414CFBF0, &v40);
        sub_2414B541C();
        _os_log_impl(&dword_2412C1000, v29, v30, "MetalVideoTextureProvider.OutputObserver.%s: AVPlayerItemVideoOutput failed to initialize", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v32, -1, -1);
        MEMORY[0x242695BD8](v31, -1, -1);
      }

      v33 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
      v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_2414B4FC0();
      v35 = v7;
      swift_retain();
      v36 = sub_2414B4FB4();
      v37 = (_QWORD *)swift_allocObject();
      v38 = MEMORY[0x24BEE6930];
      v37[2] = v36;
      v37[3] = v38;
      v37[4] = v34;
      v37[5] = v35;
      swift_release();
      v25 = &unk_2571240C0;
      v26 = (uint64_t)v6;
      v27 = (uint64_t)v37;
    }
    sub_2413EE440(v26, (uint64_t)v25, v27);

    return swift_release();
  }
  return result;
}

uint64_t sub_241362158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  sub_2414B4FC0();
  v5[7] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413621C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1 + 16);
  if (v2)
  {
    v3 = (void *)v2;
    *(_QWORD *)(v2
              + OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_playerCurrentItemPublisher) = *(_QWORD *)(v0 + 48);
    swift_retain();
    swift_release();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241362248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_2414B4FC0();
  v5[4] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413622B4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  swift_release();
  v2 = v1;
  sub_2413614F8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241362420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_241362438()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_setDelegate_queue_, 0, 0);
  sub_2414B4FC0();
  *(_QWORD *)(v0 + 32) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413624B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  objc_msgSend(v1, sel_removeOutput_, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_241362500()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  objc_class *v13;
  objc_super v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (id)MEMORY[0x242695CC8](&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_output], v2);
  v6 = (void *)MEMORY[0x242695CC8](&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_currentPlayerItem]);
  v7 = v6;
  if (v5)
  {
    if (v6)
    {
      v8 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v5;
      v9[5] = v7;
      v10 = v5;
      v11 = v7;
      v5 = v10;
      v12 = v11;
      sub_24135F590((uint64_t)v4, (uint64_t)&unk_257124138, (uint64_t)v9);
      swift_release();

      sub_2412CBE78((uint64_t)v4, (uint64_t *)&unk_254384360);
    }

  }
  else
  {

  }
  v13 = (objc_class *)type metadata accessor for MetalVideoTextureProvider.OutputObserver();
  v15.receiver = v0;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, sel_dealloc);
}

id sub_2413626F4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_playerCurrentItemPublisher] = 0;
  v1 = OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_itemForOutput;
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_2413121A4(MEMORY[0x24BEE4AF8]);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MetalVideoTextureProvider.OutputObserver();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for MetalVideoTextureProvider.OutputObserver()
{
  return objc_opt_self();
}

_QWORD *sub_2413627F8()
{
  _QWORD *result;
  uint64_t v1;

  type metadata accessor for MetalVideoTextureProvider.FrameStatsRecorder();
  result = (_QWORD *)swift_allocObject();
  v1 = MEMORY[0x24BEE4B08];
  result[2] = 0;
  result[3] = 0;
  result[4] = v1;
  result[5] = v1;
  result[6] = 0;
  qword_257123BF0 = (uint64_t)result;
  return result;
}

void sub_241362838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571240D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571240E0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v0 + 16))
  {
    v24 = v9;
    if (qword_2571209B0 != -1)
      swift_once();
    v12 = sub_2414B2CA4();
    __swift_project_value_buffer(v12, (uint64_t)qword_257137100);
    v13 = sub_2414B2C8C();
    v14 = sub_2414B51B8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_2412C1000, v13, v14, "Setting up video frame stats timer", v15, 2u);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2412CC884(0, &qword_2571240E8);
    v16 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    v17 = sub_2414B5374();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
    v18 = sub_2414B52F0();

    sub_2412CBE78((uint64_t)v7, &qword_2571240D8);
    v26 = v18;
    sub_2414B52E4();
    sub_2412C8030(&qword_2571240F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
    v19 = sub_2414B2DDC();
    swift_release();
    v26 = v19;
    sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
    v25 = (id)sub_2414B5230();
    v20 = sub_2414B520C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571240F8);
    sub_2412C8FC4(&qword_257124100, &qword_2571240F8, MEMORY[0x24BDB9510]);
    sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    sub_2414B2E84();
    sub_2412CBE78((uint64_t)v4, (uint64_t *)&unk_2543842B0);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_2412C8FC4((unint64_t *)&unk_257124108, &qword_2571240E0, MEMORY[0x24BDB9A08]);
    v21 = sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v8);
    v22 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v21;
    swift_retain();
    if (v22)
    {
      sub_2414B2D7C();
      swift_release();
    }
    swift_release();
  }
}

uint64_t sub_241362C58()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (qword_2571209B0 != -1)
      swift_once();
    v2 = sub_2414B2CA4();
    __swift_project_value_buffer(v2, (uint64_t)qword_257137100);
    swift_retain_n();
    v3 = sub_2414B2C8C();
    v4 = sub_2414B51B8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v13[0] = v6;
      *(_DWORD *)v5 = 136446722;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254385050);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_2414B72B0;
      swift_beginAccess();
      v8 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16);
      if (v8)
        v9 = (float)((float)*(uint64_t *)(v1 + 48) / (float)v8) * 100.0;
      else
        v9 = 0.0;
      v10 = MEMORY[0x24BEE1568];
      *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE14E8];
      *(_QWORD *)(v7 + 64) = v10;
      *(float *)(v7 + 32) = v9;
      v11 = sub_2414B4D74();
      sub_2412E4890(v11, v12, v13);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2048;
      swift_release();
      sub_2414B541C();
      swift_release();
      *(_WORD *)(v5 + 22) = 2048;
      sub_241362F58();
      swift_release();
      sub_2414B541C();
      swift_release();
      _os_log_impl(&dword_2412C1000, v3, v4, "Video texture generation rate: %{public}s%%, %ld providers, running display links: %ld", (uint8_t *)v5, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v6, -1, -1);
      MEMORY[0x242695BD8](v5, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *(_QWORD *)(v1 + 48) = 0;
    swift_beginAccess();
    *(_QWORD *)(v1 + 40) = MEMORY[0x24BEE4B08];
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241362F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  swift_beginAccess();
  if ((*(_QWORD *)(v0 + 32) & 0xC000000000000001) != 0)
  {
    v1 = MEMORY[0x24BEE4B08];
    v16 = MEMORY[0x24BEE4B08];
    swift_bridgeObjectRetain();
    sub_2414B5494();
    if (sub_2414B54E8())
    {
      sub_2412CC884(0, (unint64_t *)&qword_2571240D0);
      do
      {
        swift_dynamicCast();
        if ((objc_msgSend(v15, sel_isPaused) & 1) != 0)
        {

        }
        else
        {
          v2 = v16;
          if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
          {
            sub_24141C018();
            v2 = v16;
          }
          result = sub_2414B5320();
          v4 = v2 + 56;
          v5 = -1 << *(_BYTE *)(v2 + 32);
          v6 = result & ~v5;
          v7 = v6 >> 6;
          if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
          {
            v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v9 = 0;
            v10 = (unint64_t)(63 - v5) >> 6;
            do
            {
              if (++v7 == v10 && (v9 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v11 = v7 == v10;
              if (v7 == v10)
                v7 = 0;
              v9 |= v11;
              v12 = *(_QWORD *)(v4 + 8 * v7);
            }
            while (v12 == -1);
            v8 = __clz(__rbit64(~v12)) + (v7 << 6);
          }
          *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
          *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v15;
          ++*(_QWORD *)(v2 + 16);
        }
      }
      while (sub_2414B54E8());
      v1 = v16;
    }
    swift_release();
    if ((v1 & 0xC000000000000001) != 0)
      goto LABEL_24;
  }
  else
  {
    v13 = swift_bridgeObjectRetain();
    v1 = sub_241363704(v13);
    if ((v1 & 0xC000000000000001) != 0)
    {
LABEL_24:
      v14 = sub_2414B54C4();
      goto LABEL_25;
    }
  }
  v14 = *(_QWORD *)(v1 + 16);
LABEL_25:
  swift_release();
  return v14;
}

void sub_2413631A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v2 = v1;
  swift_beginAccess();
  v4 = (void *)sub_241420918(a1);
  swift_endAccess();

  if (*(_QWORD *)(v2 + 16) && !sub_241362F58())
  {
    v5 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v5)
    {
      sub_2414B2D7C();
      swift_release();
    }
    if (qword_2571209B0 != -1)
      swift_once();
    v6 = sub_2414B2CA4();
    __swift_project_value_buffer(v6, (uint64_t)qword_257137100);
    v7 = sub_2414B2C8C();
    v8 = sub_2414B51B8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_2412C1000, v7, v8, "No active display links, cancelling frame stats timer", v9, 2u);
      MEMORY[0x242695BD8](v9, -1, -1);
    }

  }
}

uint64_t sub_2413632E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalVideoTextureProvider.FrameStatsRecorder()
{
  return objc_opt_self();
}

uint64_t sub_241363334()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24136335C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_241310C28;
  return sub_241361684(a1, v4, v5, v7, v6);
}

char *keypath_get_selector_timeControlStatus()
{
  return sel_timeControlStatus;
}

id sub_2413633E0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_timeControlStatus);
  *a2 = result;
  return result;
}

uint64_t sub_241363410()
{
  uint64_t v0;

  return swift_deallocObject();
}

_QWORD *sub_241363434@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  float v4;
  BOOL v5;

  if (*result == 2)
  {
    result = objc_msgSend(*(id *)(v2 + 16), sel_rate);
    v5 = v4 > 0.0;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_241363480(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_241360900(a1, v1);
}

void sub_241363488(void *a1, char a2)
{
  uint64_t v2;

  sub_241360AB8(a1, a2 & 1, v2);
}

uint64_t sub_241363494()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413634B8(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_241452AA4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

id sub_2413634C0(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_2413634D0(id a1, char a2)
{
  if ((a2 & 1) != 0)
    sub_2413634DC(a1);
  else
    swift_unknownObjectRelease();
}

void sub_2413634DC(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_2413634EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  sub_2414B4FC0();
  v5[7] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241363558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1 + 16);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)MEMORY[0x242695CC8](v2+ OBJC_IVAR____TtCC11MediaCoreUI25MetalVideoTextureProviderP33_2925FC67195227C5017294884B212F2E14OutputObserver_currentPlayerItem);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectWeakAssign();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241363604(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_241363668;
  return v6(a1);
}

uint64_t sub_241363668()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_2413636B4()
{
  unint64_t result;

  result = qword_257124030;
  if (!qword_257124030)
  {
    result = MEMORY[0x242695AE8](&unk_2414C8620, &type metadata for MetalImageTextureProvider.Error);
    atomic_store(result, (unint64_t *)&qword_257124030);
  }
  return result;
}

id sub_2413636F8(id result, char a2)
{
  if ((a2 & 1) != 0)
    return sub_2413634C0(result);
  else
    return (id)swift_unknownObjectRetain();
}

uint64_t sub_241363704(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_241363860((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_241363860((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x242695BD8](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_241363860(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = (unint64_t *)result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_isPaused);
    if ((result & 1) == 0)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_2414A2470(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *keypath_get_selector_currentItem()
{
  return sel_currentItem;
}

id sub_241363A04@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_currentItem);
  *a2 = result;
  return result;
}

uint64_t sub_241363A3C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_2412CC884(255, a2);
    result = MEMORY[0x242695AE8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241363A7C(void **a1)
{
  uint64_t v1;

  return sub_241361CA4(a1, v1);
}

uint64_t sub_241363A84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241363AB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_241310C28;
  return sub_241362158(a1, v4, v5, v7, v6);
}

uint64_t sub_241363B34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_241310C28;
  return sub_2413634EC(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_241363BE4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241363C08()
{
  return sub_241362C58();
}

uint64_t sub_241363C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_241310C28;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_241363C78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_241310C28;
  return sub_241362248(a1, v4, v5, v7, v6);
}

uint64_t sub_241363CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2B30();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_241363D80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_2414B2B30();
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_241310430;
  return sub_241360D68(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_241363E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2B30();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_241363EC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B2B30() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_241310C28;
  return sub_2413612B4(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_241363F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_241310430;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257127880 + dword_257127880))(a1, v4);
}

uint64_t sub_241363FEC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_241364130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_2413641F4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24136423C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_241364298()
{
  sub_2412C8684();
  return sub_2414B3844();
}

__int128 *sub_2413642E0(__int128 *result, unsigned __int8 *a2, uint64_t a3)
{
  int v3;
  __int128 v4;

  if (*(_QWORD *)(*(_QWORD *)(a3 + 16) + 104))
  {
    v3 = *a2;
    v4 = *result;
    swift_retain();
    sub_2412D6BD4((uint64_t *)&v4, v3);
    return (__int128 *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241364334(uint64_t a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (qword_2543809C0 != -1)
    swift_once();
  v2 = sub_2414B2CA4();
  __swift_project_value_buffer(v2, (uint64_t)qword_25438E7B8);
  sub_2412EE350(a1);
  sub_2412EE350(a1);
  oslog = sub_2414B2C8C();
  v3 = sub_2414B51B8();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136446210;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC38);
    sub_2414B47A4();
    v6 = sub_2414B4D8C();
    sub_2412E4890(v6, v7, &v9);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    sub_241364B04(a1);
    sub_241364B04(a1);
    _os_log_impl(&dword_2412C1000, oslog, v3, "[NowPlayingEnvironmentModifier] changed player style: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v5, -1, -1);
    MEMORY[0x242695BD8](v4, -1, -1);

  }
  else
  {
    sub_241364B04(a1);
    sub_241364B04(a1);

  }
}

uint64_t sub_241364538@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C8684();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241364584()
{
  sub_2412C8684();
  return sub_2414B3844();
}

__n128 sub_2413645D4@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  v4 = *(_QWORD *)(v3 + 80);
  v5 = *(_BYTE *)(v3 + 88);
  v6 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 16) = v6;
  result = *(__n128 *)(v3 + 48);
  v8 = *(_OWORD *)(v3 + 64);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 64) = v4;
  *(_BYTE *)(a2 + 72) = v5;
  return result;
}

uint64_t sub_241364678(uint64_t a1)
{
  _BYTE v2[80];

  sub_2413043D8(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B78();
  return swift_release();
}

__n128 sub_241364728@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  result = *(__n128 *)(v3 + 104);
  v5 = *(_OWORD *)(v3 + 120);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_2413647B8()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B78();
  return swift_release();
}

double sub_241364878@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2413648F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2412C7310(v1, v2);
  swift_retain();
  return sub_2414B2E48();
}

double sub_2413649B0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_2412C86C8();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

__int128 *sub_241364A04(__int128 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_2413642E0(a1, a2, v2 + 32);
}

uint64_t sub_241364A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_2412C8B18();
  result = sub_2414B3838();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_241364AA4()
{
  sub_2412C8B18();
  return sub_2414B3844();
}

void sub_241364AF8()
{
  uint64_t v0;

  sub_241364334(v0 + 32);
}

uint64_t sub_241364B04(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_241364BB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[2];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  uint64_t v77;
  ValueMetadata *v78;
  uint64_t v79;
  uint64_t v80;

  v2 = *a1;
  v1 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384330);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380A80);
  v6 = type metadata accessor for NowPlayingEnvironmentModifier(255, v2, v1, v5);
  MEMORY[0x242695AE8](&unk_2414BCB18, v6);
  v7 = sub_2414B3B08();
  v8 = MEMORY[0x24BDB9EE8];
  v77 = v4;
  v78 = (ValueMetadata *)v7;
  v79 = sub_2412C8FC4(&qword_254380A78, &qword_254380A80, MEMORY[0x24BDB9EE8]);
  v80 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v7);
  v9 = sub_2414B35E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811B0);
  v10 = sub_2414B3514();
  v11 = sub_2412C8FC4(&qword_254384328, &qword_254384330, v8);
  v76[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v9);
  v76[1] = sub_2412C8FC4(&qword_2543811A8, &qword_2543811B0, MEMORY[0x24BDF1028]);
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v76);
  v77 = v3;
  v78 = (ValueMetadata *)v10;
  v79 = v11;
  v80 = v13;
  v14 = sub_2414B35E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v15 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381380);
  v16 = sub_2414B3514();
  sub_2414B53B0();
  v17 = sub_2414B3DA8();
  v18 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381230);
  v36 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D0F8);
  v37 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811D0);
  v38 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381220);
  v39 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381270);
  v40 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811C0);
  v41 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBE0);
  v44 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811E0);
  v47 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381210);
  v42 = sub_2414B3514();
  type metadata accessor for NowPlayingViewControllerProxy(255, v2, v1, v19);
  sub_2414B53B0();
  v45 = sub_2414B3DA8();
  v43 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBD0);
  v46 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBF8);
  v48 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DC08);
  v49 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811F0);
  v50 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381200);
  v20 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381250);
  v21 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381190);
  v51 = sub_2414B3514();
  v52 = type metadata accessor for WindowProperties();
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v14);
  v23 = MEMORY[0x24BDF1028];
  v75[0] = v22;
  v75[1] = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v74[0] = MEMORY[0x242695AE8](v12, v15, v75);
  v74[1] = sub_2412C8FC4(&qword_254381378, &qword_254381380, v23);
  v73[0] = MEMORY[0x242695AE8](v12, v16, v74);
  v73[1] = MEMORY[0x242695AE8](v23, v17);
  v72[0] = MEMORY[0x242695AE8](v12, v18, v73);
  v72[1] = sub_2412C8FC4(&qword_254381228, &qword_254381230, v23);
  v71[0] = MEMORY[0x242695AE8](v12, v36, v72);
  v71[1] = sub_2412C8FC4(&qword_25437DBE8, &qword_25437D0F8, v23);
  v70[0] = MEMORY[0x242695AE8](v12, v37, v71);
  v70[1] = sub_2412C8FC4(&qword_2543811C8, &qword_2543811D0, v23);
  v69[0] = MEMORY[0x242695AE8](v12, v38, v70);
  v69[1] = sub_2412C8FC4(&qword_254381218, &qword_254381220, v23);
  v68[0] = MEMORY[0x242695AE8](v12, v39, v69);
  v68[1] = sub_2412C8FC4(&qword_254381268, &qword_254381270, v23);
  v67[0] = MEMORY[0x242695AE8](v12, v40, v68);
  v67[1] = sub_2412C8FC4(&qword_2543811B8, &qword_2543811C0, v23);
  v66[0] = MEMORY[0x242695AE8](v12, v41, v67);
  v66[1] = sub_2412C8FC4(&qword_25437DBD8, &qword_25437DBE0, v23);
  v65[0] = MEMORY[0x242695AE8](v12, v44, v66);
  v65[1] = sub_2412C8FC4(&qword_2543811D8, &qword_2543811E0, v23);
  v64[0] = MEMORY[0x242695AE8](v12, v47, v65);
  v64[1] = sub_2412C8FC4(&qword_254381208, &qword_254381210, v23);
  v63[0] = MEMORY[0x242695AE8](v12, v42, v64);
  v63[1] = MEMORY[0x242695AE8](v23, v45);
  v62[0] = MEMORY[0x242695AE8](v12, v43, v63);
  v62[1] = sub_2412C8FC4(&qword_25437DBC8, &qword_25437DBD0, v23);
  v61[0] = MEMORY[0x242695AE8](v12, v46, v62);
  v61[1] = sub_2412C8FC4(&qword_25437DBF0, &qword_25437DBF8, v23);
  v60[0] = MEMORY[0x242695AE8](v12, v48, v61);
  v60[1] = sub_2412C8FC4(&qword_25437DC00, &qword_25437DC08, v23);
  v59[0] = MEMORY[0x242695AE8](v12, v49, v60);
  v59[1] = sub_2412C8FC4(&qword_2543811E8, &qword_2543811F0, v23);
  v58[0] = MEMORY[0x242695AE8](v12, v50, v59);
  v58[1] = sub_2412C8FC4(&qword_2543811F8, &qword_254381200, v23);
  v57[0] = MEMORY[0x242695AE8](v12, v20, v58);
  v57[1] = sub_2412C8FC4(&qword_254381248, &qword_254381250, v23);
  v56[0] = MEMORY[0x242695AE8](v12, v21, v57);
  v56[1] = sub_2412C8FC4(&qword_254381188, &qword_254381190, v23);
  v24 = MEMORY[0x242695AE8](v12, v51, v56);
  v25 = sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  v77 = v51;
  v78 = (ValueMetadata *)v52;
  v79 = v24;
  v80 = v25;
  MEMORY[0x242695A94](255, &v77, MEMORY[0x24BDF2358], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381170);
  v26 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812A0);
  v27 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381290);
  v28 = sub_2414B3514();
  v29 = type metadata accessor for NowPlayingViewModel.Metrics();
  v77 = v51;
  v78 = (ValueMetadata *)v52;
  v79 = v24;
  v80 = v25;
  v55[0] = swift_getOpaqueTypeConformance2();
  v55[1] = sub_2412C8FC4(&qword_254381168, &qword_254381170, v23);
  v54[0] = MEMORY[0x242695AE8](v12, v26, v55);
  v54[1] = sub_2412C8FC4(&qword_254381298, &qword_2543812A0, v23);
  v53[0] = MEMORY[0x242695AE8](v12, v27, v54);
  v53[1] = sub_2412C8FC4(&qword_254381288, &qword_254381290, v23);
  v30 = MEMORY[0x242695AE8](v12, v28, v53);
  v31 = sub_2412C8030(&qword_25437D0B8, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Metrics, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.Metrics);
  v77 = v28;
  v78 = (ValueMetadata *)v29;
  v79 = v30;
  v80 = v31;
  v32 = MEMORY[0x242695A94](255, &v77, MEMORY[0x24BDF2358], 0);
  v77 = v28;
  v78 = (ValueMetadata *)v29;
  v79 = v30;
  v80 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = sub_2412F837C();
  v77 = v32;
  v78 = &type metadata for NowPlayingViewModel.PlayerStyle;
  v79 = OpaqueTypeConformance2;
  v80 = v34;
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MCUIText()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MCUIText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MCUIText(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MCUIText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MCUIText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MCUIText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MCUIText()
{
  return &type metadata for MCUIText;
}

uint64_t sub_2413657E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413657F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = qword_2543846C8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = (id)qword_25438E910;
  result = sub_2414B40E4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_2413658D0()
{
  return MEMORY[0x24BDF1F80];
}

void static UIContentSizeCategory.default.setter(uint64_t a1)
{
  void *v2;

  if (qword_25437CE68 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_25437D290;
  qword_25437D290 = a1;

}

uint64_t (*static UIContentSizeCategory.default.modify())()
{
  if (qword_25437CE68 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id static UIFont.emphasizedPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_2412E209C(a1, 1024);
}

id static UIFont.font(forTextStyle:symbolicTraits:contentSizeCategory:minimumContentSizeCategory:maximumContentSizeCategory:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v10 = sub_2414B4D68();
  v12 = v11;
  if (v10 == sub_2414B4D68() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    v16 = sub_2414B4D68();
    v18 = v17;
    if (v16 == sub_2414B4D68() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        if ((sub_2414B529C() & 1) != 0)
          a4 = a5;
        else
          a4 = a3;
        goto LABEL_19;
      }
    }
    a4 = a3;
    goto LABEL_19;
  }
  v15 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0 || (sub_2414B52A8() & 1) == 0)
    goto LABEL_9;
LABEL_19:
  v22 = a4;
  v23 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v22);

  v24 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, a1, v23);
  v25 = objc_msgSend(v24, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v25)
  {
    v26 = v25;

    v24 = v26;
  }
  v27 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v24, 0.0);

  return v27;
}

double UIFontMetrics.scaledValue(for:to:noSmallerThan:noLargerThan:where:)(void *a1, void *a2, void *a3, uint64_t (*a4)(void), double a5)
{
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  id v26;
  id v27;
  double v28;

  v6 = v5;
  if ((a4() & 1) != 0)
  {
    v11 = sub_2414B4D68();
    v13 = v12;
    if (v11 == sub_2414B4D68() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      v17 = a1;
    }
    else
    {
      v16 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = a1;
      if ((v16 & 1) == 0)
      {
        if ((sub_2414B52B4() & 1) != 0)
          v17 = a1;
        else
          v17 = a2;
      }
    }
    v18 = v17;
    v19 = sub_2414B4D68();
    v21 = v20;
    if (v19 == sub_2414B4D68() && v21 == v22)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        if ((sub_2414B52A8() & 1) != 0)
          v25 = a1;
        else
          v25 = a3;
        v26 = v25;

        v18 = v26;
      }
    }
    v27 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v18);
    objc_msgSend(v6, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, a5);
    a5 = v28;

  }
  return a5;
}

ValueMetadata *type metadata accessor for LineLimit()
{
  return &type metadata for LineLimit;
}

uint64_t sub_241365DB4()
{
  uint64_t result;

  type metadata accessor for WaveformAudioSampler();
  swift_allocObject();
  result = sub_241365F10();
  qword_25438E830 = result;
  return result;
}

uint64_t sub_241365DEC()
{
  return swift_task_switch();
}

uint64_t sub_241365E00()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_2543826A0 != -1)
    swift_once();
  v1 = qword_25438E830;
  *(_QWORD *)(v0 + 16) = qword_25438E830;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_241365E78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 112);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_241365EBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(uint64_t *)(v0 + 32) < 1 || (*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    sub_241367464();
  }
  else if (!*(_QWORD *)(v1 + 24))
  {
    sub_24136695C();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241365F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  type metadata accessor for WaveformState.SamplingMode.ValueProvider();
  v1 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543827A0);
  sub_2414B2E0C();
  swift_endAccess();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  type metadata accessor for Counter();
  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication, 0, 0, 0, 0, 0);
  v4 = objc_msgSend(v3, sel_applicationState);

  *(_BYTE *)(v0 + 72) = v4 == (id)2;
  sub_241366024();
  sub_24136625C();
  return v0;
}

uint64_t sub_241366024()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  void *v20;
  _QWORD *v21;

  v15 = *v0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  v3 = *MEMORY[0x24BDB1608];
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_mainQueue);
  v20 = sub_2413687D8;
  v21 = v0;
  aBlock = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_2412CBF8C;
  v19 = &block_descriptor_12_0;
  v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v7 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, v5, v6);
  _Block_release(v6);

  v0[5] = v7;
  swift_unknownObjectRelease();
  v8 = objc_msgSend(v1, sel_defaultCenter);
  v9 = *MEMORY[0x24BDB1610];
  v10 = objc_msgSend(v4, sel_mainQueue);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v0;
  *(_QWORD *)(v11 + 24) = v15;
  v20 = sub_241368804;
  v21 = (_QWORD *)v11;
  aBlock = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_2412CBF8C;
  v19 = &block_descriptor_18_0;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v13 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v12);
  _Block_release(v12);

  v0[6] = v13;
  return swift_unknownObjectRelease();
}

uint64_t sub_24136625C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  v3 = *MEMORY[0x24BEBE008];
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_mainQueue);
  v19 = sub_24136874C;
  v20 = v0;
  v6 = MEMORY[0x24BDAC760];
  v15 = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_2412CBF8C;
  v18 = &block_descriptor_3;
  v7 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  v8 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, v5, v7);
  _Block_release(v7);

  *(_QWORD *)(v0 + 64) = v8;
  swift_unknownObjectRelease();
  v9 = objc_msgSend(v1, sel_defaultCenter);
  v10 = *MEMORY[0x24BEBDF98];
  v11 = objc_msgSend(v4, sel_mainQueue);
  v19 = sub_241368754;
  v20 = v0;
  v15 = v6;
  v16 = 1107296256;
  v17 = sub_2412CBF8C;
  v18 = &block_descriptor_3;
  v12 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  v13 = objc_msgSend(v9, sel_addObserverForName_object_queue_usingBlock_, v10, 0, v11, v12);
  _Block_release(v12);

  *(_QWORD *)(v0 + 56) = v13;
  return swift_unknownObjectRelease();
}

uint64_t sub_241366468()
{
  return sub_241366648((uint64_t)&unk_25116D7D0, (uint64_t)&unk_25116D7F8, (uint64_t)&unk_2571241C8);
}

uint64_t sub_24136648C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2413664A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2413664EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    sub_2413681A8();
    swift_release();
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_241366544()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_24136658C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2413665D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(uint64_t *)(v0 + 40) < 1 || (*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    sub_241367464();
  }
  else if (!*(_QWORD *)(v1 + 24))
  {
    sub_24136695C();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241366624()
{
  return sub_241366648((uint64_t)&unk_25116D780, (uint64_t)&unk_25116D7A8, (uint64_t)&unk_2571241B8);
}

uint64_t sub_241366648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v5 = v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B4FE4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v5;
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if (v12 == 1)
  {
    sub_2412D7894((uint64_t)v8);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_2414B4F90();
      v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v11;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_241366818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_241366830()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_241366878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = v2 < 1;
  v4 = v2 - 1;
  if (!v3)
  {
    *(_QWORD *)(v1 + 112) = v4;
    sub_2413681A8();
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2413668D0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_241366918()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24136695C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543827B0 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_2414B2C8C();
  v11 = sub_2414B51B8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_2412C1000, v10, v11, "WaveformAudioSampler created sampling task", v12, 2u);
    MEMORY[0x242695BD8](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v1;
  swift_retain();
  *(_QWORD *)(v1 + 24) = sub_2413EE440((uint64_t)v4, (uint64_t)&unk_2571241A8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_241366B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[35] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828D8);
  v4[36] = v5;
  v4[37] = *(_QWORD *)(v5 - 8);
  v4[38] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828F0);
  v4[39] = v6;
  v4[40] = *(_QWORD *)(v6 - 8);
  v4[41] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828E8);
  v4[42] = v7;
  v4[43] = *(_QWORD *)(v7 - 8);
  v4[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241366BF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = v0[41];
  v16 = v0[40];
  v3 = v0[38];
  v2 = v0[39];
  v5 = v0[36];
  v4 = v0[37];
  v6 = sub_24131050C(0x100000000, 15.0);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  type metadata accessor for AudioTapSampleTransformer();
  v0[45] = swift_initStackObject();
  v0[46] = sub_2413CADD0(v12);
  v13 = swift_task_alloc();
  *(_DWORD *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v8;
  *(_QWORD *)(v13 + 32) = v10;
  *(_QWORD *)(v13 + 40) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543828C8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BEE6A10], v5);
  sub_2414B502C();
  swift_task_dealloc();
  sub_2414B5014();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v2);
  v0[47] = 0;
  v14 = (_QWORD *)swift_task_alloc();
  v0[48] = v14;
  *v14 = v0;
  v14[1] = sub_241366D80;
  return sub_2414B5020();
}

uint64_t sub_241366D80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241366DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  char *v12;
  char v13;
  int32x2_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  float v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 216);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
LABEL_15:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 368);
  if (*(_QWORD *)(v1 + 16) <= 2uLL)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_beginAccess();
  v3 = *(char **)(v2 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 24) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v40 = *(_QWORD *)(v0 + 368);
    v3 = sub_241497A98((uint64_t)v3);
    *(_QWORD *)(v40 + 24) = v3;
  }
  v5 = *(_QWORD *)(v0 + 368);
  swift_beginAccess();
  v6 = *(char **)(v5 + 32);
  v7 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + 32) = v6;
  if ((v7 & 1) == 0)
  {
    v41 = *(_QWORD *)(v0 + 368);
    v6 = sub_241497A98((uint64_t)v6);
    *(_QWORD *)(v41 + 32) = v6;
  }
  v8 = *(_QWORD *)(v0 + 368);
  swift_beginAccess();
  v9 = *(char **)(v8 + 40);
  v10 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v8 + 40) = v9;
  if ((v10 & 1) == 0)
  {
    v42 = *(_QWORD *)(v0 + 368);
    v9 = sub_241497A98((uint64_t)v9);
    *(_QWORD *)(v42 + 40) = v9;
  }
  v11 = *(_QWORD *)(v0 + 368);
  swift_beginAccess();
  v12 = *(char **)(v11 + 48);
  v13 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v11 + 48) = v12;
  if ((v13 & 1) == 0)
  {
    v43 = *(_QWORD *)(v0 + 368);
    v12 = sub_241497A98((uint64_t)v12);
    *(_QWORD *)(v43 + 48) = v12;
  }
  v15 = *(_QWORD *)(v0 + 376);
  sub_2413CB0B8((float *)v3 + 8, (float *)v6 + 8, (float *)v9 + 8, (float *)v12 + 8, v1, *(_QWORD *)(v0 + 368), (char **)(v0 + 224), v14);
  if (v15)
  {
    swift_endAccess();
    swift_endAccess();
    swift_endAccess();
    return swift_endAccess();
  }
  else
  {
    v17 = *(_QWORD **)(v0 + 368);
    v17[6] = v12;
    swift_endAccess();
    v17[5] = v9;
    swift_endAccess();
    v17[4] = v6;
    swift_endAccess();
    v17[3] = v3;
    swift_endAccess();
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_241368C0C(v18, (uint64_t)&unk_251163168);
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_241368508(v19, v23, v21);
    v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = sub_241368B04(v25, (uint64_t)&unk_2511631A0);
    *(_QWORD *)(v0 + 248) = v25;
    *(_QWORD *)(v0 + 256) = v26;
    v27 = *(_QWORD *)(v25 + 16);
    v28 = swift_task_alloc();
    *(_QWORD *)(v28 + 16) = v0 + 248;
    *(_QWORD *)(v28 + 24) = v0 + 256;
    v29 = sub_24136897C(v27, (uint64_t (*)(_QWORD *, uint64_t *))sub_241368ED0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 264) = v29;
    v30 = *(_QWORD *)(v29 + 16);
    v31 = swift_task_alloc();
    *(_QWORD *)(v31 + 16) = v0 + 264;
    *(_QWORD *)(v31 + 24) = 0x3F80000000000000;
    v32 = sub_24136897C(v30, (uint64_t (*)(_QWORD *, uint64_t *))sub_241368F1C);
    *(_QWORD *)(v0 + 392) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = (uint64_t *)(v0 + 272);
      *(_QWORD *)(v0 + 272) = MEMORY[0x24BEE4AF8];
      sub_2413BEE8C(0, v33, 0);
      v35 = 0;
      v36 = *(_QWORD *)(v0 + 272);
      v37 = *(_QWORD *)(v36 + 16);
      do
      {
        v38 = *(float *)(v32 + 4 * v35 + 32);
        *v34 = v36;
        v39 = *(_QWORD *)(v36 + 24);
        if (v37 >= v39 >> 1)
        {
          sub_2413BEE8C(v39 > 1, v37 + 1, 1);
          v36 = *v34;
        }
        ++v35;
        *(_QWORD *)(v36 + 16) = v37 + 1;
        *(double *)(v36 + 8 * v37++ + 32) = v38;
      }
      while (v33 != v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v36 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v0 + 400) = v36;
    sub_2414B4FC0();
    *(_QWORD *)(v0 + 408) = sub_2414B4FB4();
    sub_2414B4F90();
    return swift_task_switch();
  }
}

uint64_t sub_2413672BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[50];
  v2 = v0[49];
  v3 = v0[35];
  swift_release();
  sub_24136738C(v3, v1);
  v0[52] = v2;
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_241367320()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[47] = v0[52];
  v1 = (_QWORD *)swift_task_alloc();
  v0[48] = v1;
  *v1 = v0;
  v1[1] = sub_241366D80;
  return sub_2414B5020();
}

uint64_t sub_24136738C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v2 == 3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v2 >= 5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_2414B2E48();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_241367464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 24))
  {
    v9 = qword_2543827B0;
    swift_retain();
    if (v9 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v5, (uint64_t)qword_25438E848);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    v11 = sub_2414B2C8C();
    v12 = sub_2414B51B8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_2412C1000, v11, v12, "WaveformAudioSampler cancelled sampling task", v13, 2u);
      MEMORY[0x242695BD8](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_2414B5050();
    swift_release();
    *(_QWORD *)(v1 + 24) = 0;
    swift_release();
  }
  v14 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_2414B4FC0();
  swift_retain();
  v15 = sub_2414B4FB4();
  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v1;
  sub_2413EE440((uint64_t)v4, (uint64_t)&unk_257124198, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_2413676A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  sub_2414B4FC0();
  *(_QWORD *)(v4 + 64) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24136770C()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  swift_retain();
  sub_2414B2E48();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_241367798()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  sub_241367464();
  v1 = v0[5];
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);

    swift_unknownObjectRelease();
  }
  v4 = v0[6];
  if (v4)
  {
    v5 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v6 = objc_msgSend(v5, sel_defaultCenter);
    objc_msgSend(v6, sel_removeObserver_, v4);

    swift_unknownObjectRelease();
  }
  v7 = v0[7];
  if (v7)
  {
    v8 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v9 = objc_msgSend(v8, sel_defaultCenter);
    objc_msgSend(v9, sel_removeObserver_, v7);

    swift_unknownObjectRelease();
  }
  v10 = v0[8];
  if (v10)
  {
    v11 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v12 = objc_msgSend(v11, sel_defaultCenter);
    objc_msgSend(v12, sel_removeObserver_, v10);

    swift_unknownObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_24136793C()
{
  sub_241367798();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WaveformAudioSampler()
{
  return objc_opt_self();
}

uint64_t sub_24136797C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = *a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B2CA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543827B0 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_2412C1000, v12, v13, "WaveformAudioSampler received UIApplication.willEnterForegroundNotification", v14, 2u);
    MEMORY[0x242695BD8](v14, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = *((unsigned __int8 *)a2 + 72);
  *((_BYTE *)a2 + 72) = 0;
  if (v16 == 1)
  {
    v17 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    sub_2413EE440((uint64_t)v6, (uint64_t)&unk_257124178, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_241367B60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = *a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B2CA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543827B0 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_2412C1000, v12, v13, "WaveformAudioSampler received UIApplication.didEnterBackgroundNotification", v14, 2u);
    MEMORY[0x242695BD8](v14, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = *((_BYTE *)a2 + 72);
  *((_BYTE *)a2 + 72) = 1;
  if ((v16 & 1) == 0)
  {
    v17 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    sub_2413EE440((uint64_t)v6, (uint64_t)&unk_257124170, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_241367D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = sub_2414B2CA4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543827B0 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  v5 = sub_2414B2C8C();
  v6 = sub_2414B51B8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2412C1000, v5, v6, "WaveformAudioSampler received mediaServicesWereLostNotification", v7, 2u);
    MEMORY[0x242695BD8](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_241367464();
}

uint64_t sub_241367E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v9[5] = a3;
  swift_retain();
  sub_2413EE440((uint64_t)v7, (uint64_t)&unk_257124188, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_241367F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_2414B2CA4();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241367FAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_2543827B0 != -1)
    swift_once();
  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_25438E848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = sub_2414B2C8C();
  v6 = sub_2414B51B8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2412C1000, v5, v6, "WaveformAudioSampler received mediaServicesWereResetNotification", v7, 2u);
    MEMORY[0x242695BD8](v7, -1, -1);
  }
  v9 = v0[4];
  v8 = v0[5];
  v10 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  if (qword_2543826A0 != -1)
    swift_once();
  v11 = v0[2];
  sub_241367464();
  v0[6] = *(_QWORD *)(v11 + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_241368108()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 112);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24136814C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(uint64_t *)(v0 + 56) < 1 || (*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    sub_241367464();
  }
  else if (!*(_QWORD *)(v1 + 24))
  {
    sub_24136695C();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413681A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v11[2];

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543827B0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  v7 = sub_2414B2C8C();
  v8 = sub_2414B51B8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134349056;
    v11[1] = *(_QWORD *)(v1 + 112);
    sub_2414B541C();
    swift_release();
    _os_log_impl(&dword_2412C1000, v7, v8, "WaveformAudioSampler subscribers count: %{public}ld", v9, 0xCu);
    MEMORY[0x242695BD8](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_241368330()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for Counter()
{
  return objc_opt_self();
}

uint64_t sub_24136836C()
{
  uint64_t v0;

  return v0;
}

void sub_241368378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  vDSP_Length v3;

  v3 = *(_QWORD *)(a3 + 8);
  if (*(_QWORD *)(a1 + 16) != v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) != v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)a3)
  {
    vDSP_vmul((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, *(float **)a3, 1, v3);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2413683C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char **a6)
{
  char **v6;
  char *v7;
  vDSP_Length v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = a6;
  v7 = *a6;
  v8 = *((_QWORD *)*a6 + 2);
  if ((a4 >> 1) - a3 != v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = a5;
  if (*(_QWORD *)(a5 + 16) != v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = a3;
  v11 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_9:
    v7 = sub_241497A98((uint64_t)v7);
  vDSP_vmul((const float *)(v11 + 4 * v10), 1, (const float *)(v9 + 32), 1, (float *)v7 + 8, 1, v8);
  *v6 = v7;
}

void sub_24136846C(uint64_t a1, uint64_t a2, char **a3)
{
  char **v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  vDSP_Length v7;

  v6 = *a3;
  v7 = *((_QWORD *)*a3 + 2);
  if (*(_QWORD *)(a1 + 16) != v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2;
  if (*(_QWORD *)(a2 + 16) != v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = a3;
  v5 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_7:
    v6 = sub_241497A98((uint64_t)v6);
  vDSP_vmul((const float *)(v5 + 32), 1, (const float *)(v4 + 32), 1, (float *)v6 + 8, 1, v7);
  *v3 = v6;
}

void sub_241368508(uint64_t a1, uint64_t a2, float a3)
{
  float v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  float v10;
  uint64_t v11;
  float v12;
  float v14;
  unint64_t v15;
  float v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4AF8];
  sub_2413BEE70(0, 0, 0);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
    v6 = *(float *)(a2 + 32);
  else
    v6 = 0.0;
  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v21)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v8 = 0;
  v9 = 0;
  v10 = a3 / (float)((float)v7 + (float)v7);
  v20 = a1 + 32;
  v11 = a1 + 40;
  while (1)
  {
    v12 = *(float *)(a2 + 32 + 8 * v9 + 4);
    if (v6 >= v12 || v8 == v7)
    {
      v14 = 0.0;
      goto LABEL_25;
    }
    if (v8 >= v7)
      break;
    v15 = v8 + 1;
    v14 = *(float *)(v20 + 4 * v8) + 0.0;
    v6 = v10 + v6;
    if (v6 >= v12 || v15 == v7)
    {
      ++v8;
    }
    else
    {
      if (v15 >= v7)
        goto LABEL_30;
      v14 = v14 + *(float *)(v20 + 4 * v15);
      v6 = v10 + v6;
      if (v6 >= v12)
      {
LABEL_23:
        v8 += 2;
      }
      else
      {
        while (v7 - 2 != v8)
        {
          v14 = v14 + *(float *)(v11 + 4 * v8);
          v6 = v10 + v6;
          ++v8;
          if (v6 >= v12)
            goto LABEL_23;
        }
        v8 = v7;
      }
    }
LABEL_25:
    v17 = powf(v14 * 0.6, 0.4);
    v19 = *(_QWORD *)(v22 + 16);
    v18 = *(_QWORD *)(v22 + 24);
    if (v19 >= v18 >> 1)
      sub_2413BEE70(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v22 + 16) = v19 + 1;
    *(float *)(v22 + 4 * v19 + 32) = (float)((float)((float)v9++ * -0.15) + 1.0) * v17;
    if (v9 == v21)
      goto LABEL_28;
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_24136874C(uint64_t a1)
{
  uint64_t *v1;

  return sub_24136797C(a1, v1);
}

uint64_t sub_241368754(uint64_t a1)
{
  uint64_t *v1;

  return sub_241367B60(a1, v1);
}

uint64_t sub_24136875C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241368780()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return swift_task_switch();
}

uint64_t sub_2413687D8()
{
  return sub_241367D44();
}

uint64_t sub_2413687E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241368804(uint64_t a1)
{
  uint64_t v1;

  return sub_241367E84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24136880C()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241368814(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_241367F4C(a1, v4, v5, v6);
}

uint64_t sub_24136888C()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241368894(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_2413676A0(a1, v4, v5, v6);
}

uint64_t sub_241368908()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241368910(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_241366B3C(a1, v4, v5, v6);
}

uint64_t sub_24136897C(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = sub_2414B4F0C();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = v5 + 32;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 32;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(_QWORD *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(_QWORD *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_241368A74(uint64_t a1, uint64_t a2, float a3, float a4)
{
  vDSP_Length v4;
  float v5;
  float __B;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) != v4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v5 = a4;
  __B = a3;
  if (!*(_QWORD *)a2)
    goto LABEL_5;
  vDSP_vclip((const float *)(a1 + 32), 1, &__B, &v5, *(float **)a2, 1, v4);
}

uint64_t sub_241368AF4(uint64_t a1)
{
  uint64_t v1;

  return sub_24130F9E8(a1, *(_DWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(double *)(v1 + 24));
}

uint64_t sub_241368B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  int *i;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v13;
  int v14;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2413BEE70(0, v4, 0);
    v5 = v15;
    for (i = (int *)(a1 + 32); ; ++i)
    {
      v13 = *i;
      sub_2413E46BC((float *)&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      v9 = v14;
      v15 = v5;
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2413BEE70(v10 > 1, v11 + 1, 1);
        v5 = v15;
      }
      *(_QWORD *)(v5 + 16) = v11 + 1;
      *(_DWORD *)(v5 + 4 * v11 + 32) = v9;
      if (!--v4)
        return v5;
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_241368C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v5;
  int64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  int *v19;
  uint64_t i;
  int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  v5 = *(_DWORD *)(a2 + 32);
  v6 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  v7 = 2 * v6;
  v8 = __OFADD__(v6, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
    goto LABEL_42;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v11 = v9;
    if (v7 <= v9[3] >> 1)
    {
      if (v9[2])
        goto LABEL_9;
LABEL_23:
      if (!v6)
        goto LABEL_24;
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  if (v6 <= v7)
    v18 = 2 * v6;
  else
    v18 = v6;
  v11 = sub_24146D1D8(isUniquelyReferenced_nonNull_native, v18, 1, MEMORY[0x24BEE4AF8]);
  if (!v9[2])
    goto LABEL_23;
LABEL_9:
  v12 = v11[2];
  if ((v11[3] >> 1) - v12 < v6)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v13 = &v11[v12 + 4];
  if (&v13[v6] > v9 + 4 && v13 < &v9[v6 + 4])
    goto LABEL_44;
  memcpy(v13, v9 + 4, 8 * v6);
  if (!v6)
    goto LABEL_24;
  v15 = v11[2];
  v16 = __OFADD__(v15, v6);
  v17 = v15 + v6;
  if (!v16)
  {
    v11[2] = v17;
LABEL_24:
    swift_bridgeObjectRelease_n();
    if (v3 != 1)
    {
      v19 = (int *)(a2 + 36);
      for (i = v3 - 2; ; --i)
      {
        v21 = v5;
        v5 = *v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254382958);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_2414B72B0;
        *(_DWORD *)(v22 + 32) = v21;
        *(_DWORD *)(v22 + 36) = v5;
        v23 = v11[2];
        swift_bridgeObjectRetain();
        v24 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)v24 || (v25 = v11, v23 >= v11[3] >> 1))
          v25 = sub_24146D1D8(v24, v23 + 1, 1, v11);
        if (!*(_QWORD *)(v22 + 16))
          break;
        v26 = v25[2];
        if (v26 >= v25[3] >> 1)
          goto LABEL_40;
        v27 = &v25[v26 + 4];
        if (v22 + 32 < (unint64_t)(v27 + 1) && (unint64_t)v27 < v22 + 40)
          goto LABEL_44;
        *v27 = *(_QWORD *)(v22 + 32);
        ++v25[2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!i)
          goto LABEL_38;
        ++v19;
        v11 = v25;
      }
      goto LABEL_41;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

void sub_241368ED0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;

  v4 = *(uint64_t **)(v2 + 24);
  v5 = **(_QWORD **)(v2 + 16);
  sub_241368378(v5, *v4, a1);
  *a2 = *(_QWORD *)(v5 + 16);
}

void sub_241368F1C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  float v4;
  float v5;
  uint64_t v6;

  v4 = *(float *)(v2 + 24);
  v5 = *(float *)(v2 + 28);
  v6 = **(_QWORD **)(v2 + 16);
  sub_241368A74(v6, a1, v4, v5);
  *a2 = *(_QWORD *)(v6 + 16);
}

uint64_t sub_241368F68()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241368F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310C28;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_241368FD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241368FF4()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241368FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310430;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_241369080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  unsigned int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char v81;

  v3 = v2;
  v63 = a1;
  v76 = a2;
  v69 = sub_2414B3934();
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v65 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)&v59 - v6;
  v7 = sub_2414B4AE0();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for VolumeSliderWrapper();
  MEMORY[0x24BDAC7A8](v60);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571241E0);
  MEMORY[0x24BDAC7A8](v61);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571241E8);
  MEMORY[0x24BDAC7A8](v67);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571241F0);
  MEMORY[0x24BDAC7A8](v72);
  v75 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571241F8);
  MEMORY[0x24BDAC7A8](v73);
  v74 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *((_QWORD *)v2 + 1);
  v77 = *v2;
  v78 = v17;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47BC();
  if (!*((_QWORD *)v2 + 2))
  {
    type metadata accessor for NowPlayingRouteObserver();
    sub_2412C8030(&qword_25437FFB0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
    result = sub_2414B364C();
    __break(1u);
    return result;
  }
  v19 = v79;
  v18 = v80;
  v20 = v81;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  swift_release();
  v21 = v79;
  if (!v79)
    goto LABEL_5;
  objc_opt_self();
  v22 = swift_dynamicCastObjCClass();
  if (!v22)
  {

LABEL_5:
    v22 = 0;
  }
  v23 = (uint64_t)v75;
  *(_QWORD *)v10 = v19;
  *((_QWORD *)v10 + 1) = v18;
  v10[16] = v20;
  *((_QWORD *)v10 + 3) = v22;
  v24 = v60;
  v25 = (uint64_t *)&v10[*(int *)(v60 + 24)];
  *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v26 = (uint64_t *)&v10[*(int *)(v24 + 28)];
  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  *v26 = sub_2414B3658();
  v26[1] = v27;
  v28 = v64;
  sub_2412C8A04(v64);
  v30 = v65;
  v29 = v66;
  v31 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x24BDEEDE8], v69);
  LOBYTE(v24) = sub_2414B2F80();
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v30, v31);
  v32((char *)v28, v31);
  v33 = (unsigned int *)MEMORY[0x24BDF5098];
  v34 = v70;
  if ((v24 & 1) == 0)
    v33 = (unsigned int *)MEMORY[0x24BDF50D0];
  v35 = v68;
  v36 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v68, *v33, v71);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v12[*(int *)(v61 + 36)], v35, v36);
  sub_24136B124((uint64_t)v10, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_24136B168((uint64_t)v10);
  v37 = *((_QWORD *)v3 + 1);
  LOBYTE(v79) = *v3;
  v80 = v37;
  sub_2414B47A4();
  if (v77)
    v38 = 1.05;
  else
    v38 = 1.0;
  sub_2414B4B64();
  v40 = v39;
  v42 = v41;
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_2571241E0);
  v43 = &v14[*(int *)(v67 + 36)];
  *(double *)v43 = v38;
  *((double *)v43 + 1) = v38;
  *((_QWORD *)v43 + 2) = v40;
  *((_QWORD *)v43 + 3) = v42;
  sub_2412CBE78((uint64_t)v12, &qword_2571241E0);
  v44 = sub_2414B4AC8();
  v45 = *((_QWORD *)v3 + 1);
  LOBYTE(v79) = *v3;
  v80 = v45;
  sub_2414B47A4();
  v46 = v77;
  sub_2412DC3FC((uint64_t)v14, v23, &qword_2571241E8);
  v47 = v23 + *(int *)(v72 + 36);
  *(_QWORD *)v47 = v44;
  *(_BYTE *)(v47 + 8) = v46;
  sub_2412CBE78((uint64_t)v14, &qword_2571241E8);
  LOBYTE(v44) = sub_2414B3E8C();
  sub_2414B2F20();
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v74;
  sub_2412DC3FC(v23, v74, &qword_2571241F0);
  v57 = v56 + *(int *)(v73 + 36);
  *(_BYTE *)v57 = v44;
  *(_QWORD *)(v57 + 8) = v49;
  *(_QWORD *)(v57 + 16) = v51;
  *(_QWORD *)(v57 + 24) = v53;
  *(_QWORD *)(v57 + 32) = v55;
  *(_BYTE *)(v57 + 40) = 0;
  sub_2412CBE78(v23, &qword_2571241F0);
  return sub_24136B1A4(v56, v76);
}

uint64_t sub_241369684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v10;
  uint64_t v11;

  sub_2414B4798();
  *(_BYTE *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v11;
  type metadata accessor for NowPlayingRouteObserver();
  sub_2412C8030(&qword_25437FFB0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
  *(_QWORD *)(a3 + 16) = sub_2414B3658();
  *(_QWORD *)(a3 + 24) = v6;
  v8 = (uint64_t *)(a3 + *(int *)(_s17VolumeControlViewVMa(0, a1, a2, v7) + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

id sub_241369760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _QWORD v32[2];

  v0 = sub_2414B3934();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v32 - v5;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDCCF0]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384130);
  sub_2414B3CDC();
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v32[0], sel_onTouchDown_, 1);
  swift_release();
  sub_2414B3CDC();
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v32[0], sel_onTouchUpInside_, 64);
  swift_release();
  objc_msgSend(v7, sel_setExpansionFactor_, 2.28571429);
  objc_msgSend(v7, sel_setHitRectInsets_, -10.0, 0.0, -10.0, 0.0);
  type metadata accessor for VolumeSliderWrapper();
  sub_2412C8A04((uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDEEDE8], v0);
  v8 = sub_2414B2F80();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  if ((v8 & 1) != 0)
  {
    if (qword_254383D48 != -1)
      swift_once();
    v10 = &qword_25438E8A8;
  }
  else
  {
    if (qword_257120758 != -1)
      swift_once();
    v10 = &qword_257136E50;
  }
  v11 = (void *)v10[1];
  v12 = (void *)v10[2];
  v13 = (id)*v10;
  v14 = v11;
  v15 = v12;
  objc_msgSend(v7, sel_setTintColor_, v13);
  objc_msgSend(v7, sel_setMinimumTrackTintColor_, v14);
  objc_msgSend(v7, sel_setMaximumTrackTintColor_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v17 = sub_2412F6E9C();
  v19 = v18;

  v32[0] = v17;
  v32[1] = v19;
  sub_2414B4DF8();
  sub_2414B4DF8();
  v20 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v20);

  v21 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 14.0);
  v22 = v7;
  v23 = v21;
  v24 = (void *)sub_2414B4D44();
  v25 = (void *)objc_opt_self();
  v26 = objc_msgSend(v25, sel_systemImageNamed_withConfiguration_, v24, v23);

  objc_msgSend(v22, sel_setMinimumValueImage_, v26);
  v27 = v22;
  v28 = v23;
  v29 = (void *)sub_2414B4D44();
  v30 = objc_msgSend(v25, sel_systemImageNamed_withConfiguration_, v29, v28);

  objc_msgSend(v27, sel_setMaximumValueImage_, v30);
  return v27;
}

void sub_241369BD4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t *v31;
  void *v32;
  void *v33;
  void *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;

  v3 = v2;
  v43 = a2;
  v5 = type metadata accessor for VolumeSliderWrapper();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B382C();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124220);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B3934();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setGroupRoute_, *(_QWORD *)(v3 + 24), v16);
  v40 = v5;
  sub_2412C8A04((uint64_t)v18);
  v19 = *(_QWORD *)(v3 + 8);
  v20 = *(_BYTE *)(v3 + 16);
  v44 = *(_QWORD *)v3;
  v45 = v19;
  v46 = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v47, v21);
  LOBYTE(v5) = v47;
  v22 = *(int *)(v11 + 48);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v18, v14);
  v13[v22] = v5;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v13, v14);
  v24 = *MEMORY[0x24BDEEDE8];
  if ((v5 & 1) != 0)
  {
    if (v23 == v24)
    {
      if (qword_257120750 != -1)
        swift_once();
      v25 = &qword_257136E38;
LABEL_10:
      v26 = (void *)v25[1];
      v27 = (void *)v25[2];
      v28 = (id)*v25;
      v29 = v26;
      v30 = v27;
      goto LABEL_18;
    }
    if (qword_257120760 != -1)
      swift_once();
    v31 = &qword_257136E68;
  }
  else
  {
    if (v23 == v24)
    {
      if (qword_254383D48 != -1)
        swift_once();
      v25 = &qword_25438E8A8;
      goto LABEL_10;
    }
    if (qword_257120758 != -1)
      swift_once();
    v31 = &qword_257136E50;
  }
  v32 = (void *)*v31;
  v33 = (void *)v31[1];
  v34 = (void *)v31[2];
  v39 = *(void (**)(char *, uint64_t))(v15 + 8);
  v28 = v32;
  v29 = v33;
  v30 = v34;
  v39(v13, v14);
LABEL_18:
  objc_msgSend(a1, sel_setTintColor_, v28);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v29);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384130);
  sub_2414B3CE8();
  sub_2412D42A4();
  sub_2414B3838();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
  v35 = v44;
  sub_24136B124(v3, (uint64_t)v7);
  if (v35 != 1)
  {
    v37 = 1;
    goto LABEL_22;
  }
  v36 = *(_QWORD *)&v7[*(int *)(v40 + 28)];
  if (v36)
  {
    swift_beginAccess();
    v37 = *(unsigned __int8 *)(v36 + 58);
LABEL_22:
    sub_24136B168((uint64_t)v7);
    objc_msgSend(a1, sel__setIsOffScreen_, v37);

    return;
  }
  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  sub_2414B364C();
  __break(1u);
}

uint64_t sub_24136A000(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD aBlock[6];
  char v8;

  v8 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  sub_2414B48D0();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (void *)objc_opt_self();
  aBlock[4] = sub_24136AA3C;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_6;
  v4 = _Block_copy(aBlock);
  v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_, 2, v4, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
  _Block_release(v4);
  return swift_release();
}

void sub_24136A140(void *a1)
{
  id v2;
  id v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v3 = objc_msgSend(v2, sel_accessibilityContrast);

  if (v3)
  {
    if (qword_257120760 != -1)
      swift_once();
    v4 = &qword_257136E68;
  }
  else
  {
    if (qword_257120750 != -1)
      swift_once();
    v4 = &qword_257136E38;
  }
  v5 = (void *)v4[1];
  v6 = (void *)v4[2];
  v9 = (id)*v4;
  v7 = v5;
  v8 = v6;
  objc_msgSend(a1, sel_setTintColor_, v9);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v7);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v8);

}

uint64_t sub_24136A280(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  sub_2414B48D0();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (void *)objc_opt_self();
  aBlock[4] = sub_24136A5BC;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_4;
  v4 = _Block_copy(aBlock);
  v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_, 2, v4, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
  _Block_release(v4);
  return swift_release();
}

void sub_24136A3BC(void *a1)
{
  id v2;
  id v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v3 = objc_msgSend(v2, sel_accessibilityContrast);

  if (v3)
  {
    if (qword_257120758 != -1)
      swift_once();
    v4 = &qword_257136E50;
  }
  else
  {
    if (qword_254383D48 != -1)
      swift_once();
    v4 = &qword_25438E8A8;
  }
  v5 = (void *)v4[1];
  v6 = (void *)v4[2];
  v9 = (id)*v4;
  v7 = v5;
  v8 = v6;
  objc_msgSend(a1, sel_setTintColor_, v9);
  objc_msgSend(a1, sel_setMinimumTrackTintColor_, v7);
  objc_msgSend(a1, sel_setMaximumTrackTintColor_, v8);

}

uint64_t sub_24136A4FC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5;

  v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_24136A544()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VolumeSliderWrapper.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_24136A598()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24136A5BC()
{
  uint64_t v0;

  sub_24136A3BC(*(void **)(v0 + 16));
}

uint64_t sub_24136A5D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  type metadata accessor for VolumeSliderWrapper.Coordinator();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v5;
  *a1 = v6;
  swift_retain();
  return swift_retain();
}

uint64_t sub_24136A628(uint64_t a1, char a2, int a3, int a4, id a5)
{
  objc_msgSend(a5, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
  objc_msgSend(a5, sel_hitRectInsets);
  if ((a2 & 1) != 0)
    return 0x4024000000000000;
  else
    return a1;
}

uint64_t sub_24136A6A8()
{
  sub_2412C8030(&qword_254383C60, (uint64_t (*)(uint64_t))type metadata accessor for VolumeSliderWrapper, (uint64_t)&unk_2414BD188);
  return sub_2414B3A54();
}

uint64_t sub_24136A710()
{
  sub_2412C8030(&qword_254383C60, (uint64_t (*)(uint64_t))type metadata accessor for VolumeSliderWrapper, (uint64_t)&unk_2414BD188);
  return sub_2414B3A00();
}

void sub_24136A778()
{
  sub_2412C8030(&qword_254383C60, (uint64_t (*)(uint64_t))type metadata accessor for VolumeSliderWrapper, (uint64_t)&unk_2414BD188);
  sub_2414B3A48();
  __break(1u);
}

uint64_t sub_24136A7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_24136AA00();
  if (qword_2571207C8 != -1)
    swift_once();
  swift_retain();
  v0 = sub_2414B52FC();
  swift_retain();
  v1 = sub_2414B52FC();
  if (qword_2571207D0 != -1)
    swift_once();
  swift_retain();
  result = sub_2414B52FC();
  qword_25438E8A8 = v0;
  qword_25438E8B0 = v1;
  qword_25438E8B8 = result;
  return result;
}

uint64_t sub_24136A878()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_labelColor);
  v2 = objc_msgSend(v0, sel_whiteColor);
  sub_24136AA00();
  if (qword_2571207D0 != -1)
    swift_once();
  swift_retain();
  result = sub_2414B52FC();
  qword_257136E38 = (uint64_t)v1;
  qword_257136E40 = (uint64_t)v2;
  qword_257136E48 = result;
  return result;
}

id sub_24136A930(uint64_t a1)
{
  return sub_24136A968(a1, (SEL *)&selRef_systemGrayColor, &qword_257136E50, &qword_257136E58, &qword_257136E60);
}

id sub_24136A94C(uint64_t a1)
{
  return sub_24136A968(a1, (SEL *)&selRef_labelColor, &qword_257136E68, &qword_257136E70, &qword_257136E78);
}

id sub_24136A968(uint64_t a1, SEL *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  void *v9;
  id v10;
  id v11;
  id result;

  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, *a2);
  v11 = objc_msgSend(v9, *a2);
  result = objc_msgSend(v9, sel_systemFillColor);
  *a3 = v10;
  *a4 = v11;
  *a5 = result;
  return result;
}

unint64_t sub_24136AA00()
{
  unint64_t result;

  result = qword_2571241D8;
  if (!qword_2571241D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571241D8);
  }
  return result;
}

void sub_24136AA3C()
{
  uint64_t v0;

  sub_24136A140(*(void **)(v0 + 16));
}

uint64_t _s17VolumeControlViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17VolumeControlViewVMn);
}

void sub_24136AA54()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_24136AAC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    a1[3] = a2[3];
    v6 = *(int *)(a3 + 40);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_24136ABBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24136AC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(int *)(a3 + 40);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24136ACFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 40);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_24136ADF8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 40);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24136AEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 40);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_25437DAA0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24136AF90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24136AF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t sub_24136B028()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24136B034(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24136B0AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for VolumeSliderWrapper()
{
  uint64_t result;

  result = qword_254383C70;
  if (!qword_254383C70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24136B124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VolumeSliderWrapper();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24136B168(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VolumeSliderWrapper();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24136B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571241F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24136B1EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = (void *)a2[3];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = *v16;
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24136B308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();

  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24136B3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  swift_retain();
  swift_retain();
  v11 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  *v14 = v16;
  v14[1] = v17;
  swift_retain();
  return a1;
}

uint64_t sub_24136B494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v7;

  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_2412CBE78(a1 + v9, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_retain();
  swift_release();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  return a1;
}

uint64_t sub_24136B5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24136B6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_2412CBE78(a1 + v7, &qword_25437DAA0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = (_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = *v14;
  swift_release();
  *(_QWORD *)(v13 + 8) = v14[1];
  return a1;
}

uint64_t sub_24136B7C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24136B7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24136B854()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24136B860(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_24136B8D8()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24136B95C()
{
  return sub_2412DC484(&qword_257124200, &qword_2571241F8, (uint64_t (*)(void))sub_24136B990, MEMORY[0x24BDECC60]);
}

unint64_t sub_24136B990()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124208;
  if (!qword_257124208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571241F0);
    v2[0] = sub_2412DC484(&qword_257124210, &qword_2571241E8, (uint64_t (*)(void))sub_24136BA1C, MEMORY[0x24BDEBF50]);
    v2[1] = sub_24136BAA0();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124208);
  }
  return result;
}

unint64_t sub_24136BA1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124218;
  if (!qword_257124218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571241E0);
    v2[0] = sub_2412C8030(&qword_254383C68, (uint64_t (*)(uint64_t))type metadata accessor for VolumeSliderWrapper, (uint64_t)&unk_2414BD138);
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124218);
  }
  return result;
}

unint64_t sub_24136BAA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254380FC0;
  if (!qword_254380FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEEC10], v1);
    atomic_store(result, (unint64_t *)&qword_254380FC0);
  }
  return result;
}

uint64_t sub_24136BAEC()
{
  return sub_2412C8030(&qword_254383C68, (uint64_t (*)(uint64_t))type metadata accessor for VolumeSliderWrapper, (uint64_t)&unk_2414BD138);
}

uint64_t sub_24136BB24()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4708();
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  v3 = sub_2414B4D80();
  v5 = v4;
  result = sub_2414B40FC();
  qword_2543824F0 = v3;
  *(_QWORD *)algn_2543824F8 = v5;
  qword_254382500 = result;
  unk_254382508 = v7;
  byte_254382510 = v8 & 1;
  qword_254382518 = v9;
  return result;
}

uint64_t static TrailingBadge.explicit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_254381778 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_2543824F8;
  v3 = qword_254382500;
  v4 = unk_254382508;
  v5 = byte_254382510;
  v6 = qword_254382518;
  *(_QWORD *)a1 = qword_2543824F0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24136BD1C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4708();
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  v3 = sub_2414B4D80();
  v5 = v4;
  result = sub_2414B40FC();
  qword_257124228 = v3;
  unk_257124230 = v5;
  qword_257124238 = result;
  unk_257124240 = v7;
  byte_257124248 = v8 & 1;
  qword_257124250 = v9;
  return result;
}

uint64_t static TrailingBadge.koreaAgeRestricted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_257120770 != -1)
    swift_once();
  v2 = unk_257124230;
  v3 = qword_257124238;
  v4 = unk_257124240;
  v5 = byte_257124248;
  v6 = qword_257124250;
  *(_QWORD *)a1 = qword_257124228;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24136BF20()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B4744();
  sub_2414B4CF0();
  v3 = v2;
  sub_2414B2B3C();
  v4 = sub_2414B4D80();
  v6 = v5;
  result = sub_2414B40FC();
  qword_257124258 = v4;
  unk_257124260 = v6;
  qword_257124268 = result;
  unk_257124270 = v8;
  byte_257124278 = v9 & 1;
  qword_257124280 = v10;
  return result;
}

uint64_t static TrailingBadge.dolby.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_257120778 != -1)
    swift_once();
  v2 = unk_257124260;
  v3 = qword_257124268;
  v4 = unk_257124270;
  v5 = byte_257124278;
  v6 = qword_257124280;
  *(_QWORD *)a1 = qword_257124258;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24136C124()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B4744();
  sub_2414B4CF0();
  v3 = v2;
  sub_2414B2B3C();
  v4 = sub_2414B4D80();
  v6 = v5;
  result = sub_2414B40FC();
  qword_257124288 = v4;
  unk_257124290 = v6;
  qword_257124298 = result;
  unk_2571242A0 = v8;
  byte_2571242A8 = v9 & 1;
  qword_2571242B0 = v10;
  return result;
}

uint64_t static TrailingBadge.lossless.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_257120780 != -1)
    swift_once();
  v2 = unk_257124290;
  v3 = qword_257124298;
  v4 = unk_2571242A0;
  v5 = byte_2571242A8;
  v6 = qword_2571242B0;
  *(_QWORD *)a1 = qword_257124288;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24136C334()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4708();
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  v3 = sub_2414B4D80();
  v5 = v4;
  result = sub_2414B40FC();
  qword_2571242B8 = v3;
  unk_2571242C0 = v5;
  qword_2571242C8 = result;
  unk_2571242D0 = v7;
  byte_2571242D8 = v8 & 1;
  qword_2571242E0 = v9;
  return result;
}

uint64_t static TrailingBadge.favorite.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_257120788 != -1)
    swift_once();
  v2 = unk_2571242C0;
  v3 = qword_2571242C8;
  v4 = unk_2571242D0;
  v5 = byte_2571242D8;
  v6 = qword_2571242E0;
  *(_QWORD *)a1 = qword_2571242B8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24136C524()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B4744();
  sub_2414B4CF0();
  v3 = v2;
  sub_2414B2B3C();
  v4 = sub_2414B4D80();
  v6 = v5;
  result = sub_2414B40FC();
  qword_2571242E8 = v4;
  unk_2571242F0 = v6;
  qword_2571242F8 = result;
  unk_257124300 = v8;
  byte_257124308 = v9 & 1;
  qword_257124310 = v10;
  return result;
}

uint64_t static TrailingBadge.immersive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_257120790 != -1)
    swift_once();
  v2 = unk_2571242F0;
  v3 = qword_2571242F8;
  v4 = unk_257124300;
  v5 = byte_257124308;
  v6 = qword_257124310;
  *(_QWORD *)a1 = qword_2571242E8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_241307638(v3, v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t static TrailingBadge.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] || (sub_2414B57D0() & 1) != 0)
    return sub_2414B406C();
  else
    return 0;
}

uint64_t sub_24136C7F0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] || (sub_2414B57D0() & 1) != 0)
    return sub_2414B406C();
  else
    return 0;
}

uint64_t TrailingBadge.customized(_:)@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = v2[1];
  v17 = *v2;
  v6 = v2[2];
  v7 = v2[3];
  v8 = *((unsigned __int8 *)v2 + 32);
  v9 = v2[5];
  swift_bridgeObjectRetain();
  sub_241307638(v6, v7, v8);
  swift_bridgeObjectRetain();
  v10 = a1(v6, v7, v8, v9);
  v12 = v11;
  LOBYTE(a1) = v13;
  v15 = v14;
  sub_2412F6D78(v6, v7, v8);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = a1 & 1;
  *(_QWORD *)(a2 + 40) = v15;
  return result;
}

uint64_t TrailingBadgesView.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = swift_bridgeObjectRetain();
  v5 = sub_24136CA08(v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_24136CC9C(a1);
  v14 = v13;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = a1;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v9 & 1;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_24136CA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 64);
  v6 = v1 - 1;
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    sub_241307638(v3, v4, v5);
  }
  else
  {
    sub_241307638(*(_QWORD *)(a1 + 48), v4, v5);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_241307638(v3, v4, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_241307638(v3, v4, v5);
    swift_bridgeObjectRetain();
    v25 = v4;
    v7 = a1 + 120;
    v26 = v3;
    v8 = v3;
    v9 = v5;
    do
    {
      v31 = v6;
      v29 = v8;
      v30 = v4;
      v10 = *(_QWORD *)(v7 - 24);
      v11 = *(_QWORD *)(v7 - 16);
      v12 = *(_BYTE *)(v7 - 8);
      v7 += 48;
      swift_bridgeObjectRetain();
      sub_241307638(v10, v11, v12);
      swift_bridgeObjectRetain();
      v28 = v9 & 1;
      v13 = sub_2414B4060();
      v15 = v14;
      v17 = v16 & 1;
      v18 = sub_2414B4060();
      v27 = v19;
      v21 = v20 & 1;
      v22 = v15;
      v8 = v18;
      v23 = v17;
      v9 = v21;
      sub_2412F6D78(v13, v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v27;
      sub_2412F6D78(v10, v11, v12);
      swift_bridgeObjectRelease();
      sub_2412F6D78(v29, v30, v28);
      swift_bridgeObjectRelease();
      v6 = v31 - 1;
    }
    while (v31 != 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2412F6D78(v26, v25, v5);
    swift_bridgeObjectRelease();
    sub_2412F6D78(v26, v25, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  return v3;
}

uint64_t sub_24136CC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  v7 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v13 = v5;
    v14 = v4;
    sub_241307638(v4, v5, v6);
    swift_bridgeObjectRetain();
    v8 = a1 + 120;
    do
    {
      v9 = *(_QWORD *)(v8 - 24);
      v10 = *(_QWORD *)(v8 - 16);
      v11 = *(_BYTE *)(v8 - 8);
      v8 += 48;
      swift_bridgeObjectRetain();
      sub_241307638(v9, v10, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2414B4DF8();
      swift_bridgeObjectRetain();
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2412F6D78(v9, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2412F6D78(v14, v13, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t TrailingBadgesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382898);
  MEMORY[0x24BDAC7A8](v21);
  v3 = (uint64_t *)((char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_2414B472C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124318);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124320);
  v10 = MEMORY[0x24BDAC7A8](v25);
  v22 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v14 = *(_BYTE *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v15 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 48);
  v24 = v15;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v7, *MEMORY[0x24BDF40B0], v4, v10);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v21 + 28), v7, v4);
  *v3 = KeyPath;
  sub_24136D678((uint64_t)v3, (uint64_t)&v9[*(int *)(v27 + 36)]);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v13;
  v9[16] = v14;
  *((_QWORD *)v9 + 3) = v16;
  sub_241307638(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_241307638(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_2412CBE78((uint64_t)v3, &qword_254382898);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2412F6D78(v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_2414B38B0();
  sub_24136D6C0();
  v18 = (uint64_t)v22;
  sub_2414B4324();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2412CBE78((uint64_t)v9, &qword_257124318);
  v28 = v24;
  v29 = v23;
  sub_2412F6D88();
  sub_2414B34C0();
  return sub_2412CBE78(v18, &qword_257124320);
}

uint64_t MCUINamespace<A>.appending(badges:customized:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;

  v81 = a3;
  v80 = sub_2414B472C();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v76 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_2414B40A8();
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v68 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828A8);
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v69 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382830);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61[1] = *(_QWORD *)v3;
  v66 = *(_QWORD *)(v3 + 8);
  v65 = *(unsigned __int8 *)(v3 + 16);
  v64 = *(_QWORD *)(v3 + 24);
  v70 = a1;
  v10 = sub_24136CA08(a1);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  sub_241307638(v10, v11, v15 & 1);
  swift_bridgeObjectRetain();
  v17 = a2(v10, v12, v16, v14);
  v19 = v18;
  v21 = v20 & 1;
  sub_2412F6D78(v10, v12, v16);
  swift_bridgeObjectRelease();
  sub_2412F6D78(v10, v12, v16);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a1 + 16);
  sub_241307638(v17, v19, v21);
  swift_bridgeObjectRetain();
  v23 = v22 == 0;
  if (v22)
    v24 = 0xA200000000000000;
  else
    v24 = 0xE000000000000000;
  v71 = v24;
  if (v22)
    v25 = 9273570;
  else
    v25 = 0;
  if (v23)
    v26 = 0xE000000000000000;
  else
    v26 = 0xA300000000000000;
  v27 = sub_2414B4060();
  v29 = v28;
  v61[0] = v28;
  v82 = v30;
  v32 = v31 & 1;
  sub_2412F6D78(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_2412F6D78(v17, v19, v21);
  swift_bridgeObjectRelease();
  v83 = v25;
  v84 = v26;
  sub_241307638(v27, v29, v32);
  v67 = sub_2412F6D88();
  swift_bridgeObjectRetain();
  v33 = sub_2414B40F0();
  v35 = v34;
  v37 = v36 & 1;
  v38 = sub_2414B4060();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_2412F6D78(v33, v35, v37);
  swift_bridgeObjectRelease();
  v83 = v38;
  v84 = v40;
  v85 = v42 & 1;
  v86 = v44;
  v45 = v68;
  v63 = v27;
  v46 = v61[0];
  v62 = v32;
  sub_2414B409C();
  v47 = v27;
  v48 = v46;
  sub_2412F6D78(v47, v46, v32);
  swift_bridgeObjectRelease();
  v49 = v69;
  sub_2414B4168();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v75);
  sub_2412F6D78(v83, v84, v85);
  swift_bridgeObjectRelease();
  v50 = v78;
  v51 = v76;
  v52 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v76, *MEMORY[0x24BDF40B0], v80);
  KeyPath = swift_getKeyPath();
  v54 = (uint64_t)v72;
  v55 = (uint64_t *)&v72[*(int *)(v74 + 36)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382898);
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))((char *)v55 + *(int *)(v56 + 28), v51, v52);
  *v55 = KeyPath;
  v57 = v77;
  v58 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v54, v49, v79);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
  v83 = sub_24136CC9C(v70);
  v84 = v59;
  sub_24136D778();
  sub_2414B4354();
  sub_2412F6D78(v63, v48, v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2412CBE78(v54, &qword_254382830);
}

uint64_t sub_24136D678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24136D6C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257124328;
  if (!qword_257124328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124318);
    v2 = sub_24136D72C();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257124328);
  }
  return result;
}

unint64_t sub_24136D72C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254382890;
  if (!qword_254382890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382898);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254382890);
  }
  return result;
}

unint64_t sub_24136D778()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_254382828;
  if (!qword_254382828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382830);
    v2[2] = MEMORY[0x24BDF1FA8];
    v2[3] = MEMORY[0x24BDF1F80];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24136D72C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254382828);
  }
  return result;
}

uint64_t sub_24136D808()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for TrailingBadge(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2412F6D78(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrailingBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_241307638(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrailingBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_241307638(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_2412F6D78(v7, v8, v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrailingBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_2412F6D78(v6, v7, v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrailingBadge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrailingBadge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t destroy for TrailingBadgesView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2412F6D78(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_241307638(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_241307638(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_2412F6D78(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrailingBadgesView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2412F6D78(v5, v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrailingBadgesView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrailingBadgesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_24136DCB0()
{
  return sub_24136DD50(qword_257124330, &qword_257124320, (uint64_t (*)(void))sub_24136D6C0);
}

unint64_t sub_24136DCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543844B0;
  if (!qword_2543844B0)
  {
    v1 = sub_2414B3DB4();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_2543844B0);
  }
  return result;
}

uint64_t sub_24136DD24()
{
  return sub_24136DD50(&qword_254382838, &qword_254382840, (uint64_t (*)(void))sub_24136D778);
}

uint64_t sub_24136DD50(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24136DCDC();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ContentLookupItem.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ContentLookupItem.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

void sub_24136DDF0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136DE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void ContentLookup.init<A>(_:)()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136DECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)();
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t result;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = v4;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = v2;
  *((_QWORD *)v10 + 5) = v1;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v10[v9], v5, a1);
  *v6 = sub_24136E110;
  v6[1] = (void (*)())v10;
  return result;
}

void sub_24136DF44()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136DF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v14 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&a9 - v15;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v20, v11, v9, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v10, a1);
  sub_24136E198((uint64_t)v20, v9, *(_QWORD *)(v12 - 120));
}

void sub_24136E054()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 52));
  return swift_deallocObject();
}

void sub_24136E110()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E150()
{
  sub_24136DF44();
}

void sub_24136E198(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ContentLookup1();
}

void sub_24136E1F0()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E20C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

void ContentLookup.init<A, B>(_:_:)()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E294()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (**v18)();

  v9 = *(_QWORD *)(a1 - 8);
  v10 = (v2 + v3 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = v6;
  *((_QWORD *)v11 + 3) = v5;
  *((_QWORD *)v11 + 4) = v13;
  *((_QWORD *)v11 + 5) = v4;
  *((_QWORD *)v11 + 6) = v15;
  *((_QWORD *)v11 + 7) = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(&v11[v2], v16, v7);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 32))(&v11[v10], v17, a1);
  *v18 = sub_24136E608;
  v18[1] = (void (*)())v11;
  return result;
}

void sub_24136E364()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for ContentLookupItem();
}

void sub_24136E3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v15 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&a9 - v16;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v22 + 16))(v21, *(_QWORD *)(v13 - 152), v10, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v13 - 144), a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v13 - 136), v11);
  sub_24136E6D8((uint64_t)v21, v10, *(_QWORD *)(v13 - 128));
}

void sub_24136E4D8()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E520()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t, uint64_t);

  v9 = (v7 + v6 + *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v10 = v2 + v7;
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v11(v10, v3);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v10 + *(int *)(v5 + 52), v4);
  v11(v2 + v9, v3);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2 + v9 + *(int *)(a1 + 52), v1);
  return swift_deallocObject();
}

void sub_24136E608()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E650()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E678()
{
  sub_24136E364();
}

void sub_24136E6D8(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for ContentLookup2();
}

void sub_24136E74C()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v3, a1);
}

void ContentLookup.init<A, B, C>(_:_:_:)()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E84C()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E87C()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136E8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)();

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (v7 + v2 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = v6;
  *((_QWORD *)v10 + 3) = v17;
  *((_QWORD *)v10 + 4) = v15;
  *((_QWORD *)v10 + 5) = v12;
  *((_QWORD *)v10 + 6) = v4;
  *((_QWORD *)v10 + 7) = v18;
  *((_QWORD *)v10 + 8) = v16;
  *((_QWORD *)v10 + 9) = v3;
  (*(void (**)(char *))(v1 + 32))(&v10[v13]);
  (*(void (**)(char *))(v5 + 32))(&v10[v7]);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v10[v9], v19, a1);
  *v20 = sub_24136ED1C;
  v20[1] = (void (*)())v10;
  return result;
}

void sub_24136E978()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136E9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = a1;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for ContentLookupItem();
}

void sub_24136EA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for ContentLookupItem();
}

void sub_24136EA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v16 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v23 + 16))(v22, *(_QWORD *)(v14 - 192), v9, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 16))(v18, *(_QWORD *)(v14 - 168), a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v10, *(_QWORD *)(v14 - 160), v11);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v14 - 200) + 16))(v12, *(_QWORD *)(v14 - 144), *(_QWORD *)(v14 - 184));
  sub_24136EE18((uint64_t)v22, v9, *(_QWORD *)(v14 - 136));
}

void sub_24136EB70()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136EBC4()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136EBF8()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136EC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v9 = (v3 + v4 + v8) & ~v8;
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v10(v1 + v6, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v1 + v6 + *(int *)(v12 + 52));
  v10(v1 + v3, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v1 + v3 + *(int *)(v5 + 52));
  v10(v1 + v9, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v1 + v9 + *(int *)(a1 + 52));
  return swift_deallocObject();
}

void sub_24136ED1C()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136ED68()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136ED90()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136EDBC()
{
  sub_24136E978();
}

void sub_24136EE18(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for ContentLookup3();
}

void sub_24136EE94()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136EEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v9, a9, a1);
  type metadata accessor for ContentLookupItem();
}

void sub_24136EEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v11, a11, a1);
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136EF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v3, a1);
}

void ContentLookup.init<A, B, C, D>(_:_:_:_:)()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136EFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v1;
  type metadata accessor for ContentLookupItem();
}

void sub_24136F010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v0;
  type metadata accessor for ContentLookupItem();
}

void sub_24136F048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v19 - 120) = v18;
  *(_QWORD *)(v19 - 112) = a13;
  *(_QWORD *)(v19 - 104) = v17;
  *(_QWORD *)(v19 - 96) = a17;
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136F084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t result;
  void (**v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (v4 + v2 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = v6;
  *((_QWORD *)v10 + 3) = v23;
  *((_QWORD *)v10 + 4) = v19;
  *((_QWORD *)v10 + 5) = v13;
  *((_QWORD *)v10 + 6) = v3;
  *((_QWORD *)v10 + 7) = v5;
  *((_QWORD *)v10 + 8) = v24;
  *((_QWORD *)v10 + 9) = v21;
  *((_QWORD *)v10 + 10) = v15;
  *((_QWORD *)v10 + 11) = v1;
  (*(void (**)(char *))(v22 + 32))(&v10[v18]);
  (*(void (**)(char *))(v20 + 32))(&v10[v14]);
  (*(void (**)(char *, _QWORD))(v16 + 32))(&v10[v4], *(_QWORD *)(v7 - 144));
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 32))(&v10[v9], *(_QWORD *)(v7 - 136), a1);
  v12 = *(void (***)())(v7 - 128);
  *v12 = sub_24136F638;
  v12[1] = (void (*)())v10;
  return result;
}

void sub_24136F17C()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 192) = a1;
  *(_QWORD *)(v13 - 208) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v11;
  type metadata accessor for ContentLookupItem();
}

void sub_24136F23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 256) = a1;
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  type metadata accessor for ContentLookupItem();
}

void sub_24136F284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  v5 = *(_QWORD *)(v4 - 128);
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v5;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = v1;
  type metadata accessor for ContentLookupItem();
}

void sub_24136F2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v16 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v23 + 16))(v22, *(_QWORD *)(v14 - 216), v9, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 16))(v18, *(_QWORD *)(v14 - 184), a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v12, *(_QWORD *)(v14 - 176), v13);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v14 - 264) + 16))(v10, *(_QWORD *)(v14 - 160), *(_QWORD *)(v14 - 256));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v14 - 208) + 16))(*(_QWORD *)(v14 - 232), *(_QWORD *)(v14 - 144), *(_QWORD *)(v14 - 192));
  sub_24136F788((uint64_t)v22, v9, *(_QWORD *)(v14 - 136));
}

void sub_24136F414()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F470()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F4A8()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F4E0()
{
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136F51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = (v5 + v4 + *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v8 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v8(v1 + v10, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v1 + v10 + *(int *)(v13 + 52));
  v8(v1 + v3, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v1 + v3 + *(int *)(v12 + 52));
  v8(v1 + v5, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v1 + v5 + *(int *)(v11 + 52));
  v8(v1 + v7, v2);
  (*(void (**)(unint64_t))(*(_QWORD *)(v14 - 8) + 8))(v1 + v7 + *(int *)(a1 + 52));
  return swift_deallocObject();
}

void sub_24136F638()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F690()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F6B8()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F6E8()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F718()
{
  sub_24136F17C();
}

void sub_24136F788(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for ContentLookup4();
}

void sub_24136F824()
{
  type metadata accessor for ContentLookupItem();
}

void sub_24136F844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v11, a11, a1);
  type metadata accessor for ContentLookupItem();
}

void sub_24136F878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v13, a13, a1);
  type metadata accessor for ContentLookupItem();
}

void sub_24136F8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v16, a16, a1);
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_24136F8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v3, a1);
}

uint64_t sub_24136F924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (**v3)(double);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - v11;
  (*v3)(v10);
  sub_2412FBF34((uint64_t)v8, v5, (uint64_t)v12);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_2412EEA1C((uint64_t)v12, v5, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v5);
}

uint64_t ContentLookup1.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a2;
  v3 = a1[3];
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = sub_2414B53B0();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v10 = a1[2];
  v11 = a1[4];
  if ((sub_2414B4CE4() & 1) != 0)
  {
    v12 = a1[5];
    v19 = v10;
    v20 = v3;
    v21 = v11;
    v22 = v12;
    type metadata accessor for ContentLookupItem();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v6, 1, 1, v3);
  v13 = v17;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v6, v4);
  v14 = *(void (**)(char *, uint64_t))(v13 + 8);
  v14(v6, v4);
  v23 = a1[5];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v4, &v23);
  sub_2412EEA1C((uint64_t)v9, v4, v18);
  return ((uint64_t (*)(char *, uint64_t))v14)(v9, v4);
}

uint64_t ContentLookup2.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, double);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[6];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[3];

  v3 = v2;
  v59 = a2;
  v48[1] = *(_QWORD *)(*(_QWORD *)(a1 + 32) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v48[0] = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v48[2] = (char *)v48 - v7;
  v9 = *(_QWORD *)(v8 + 24);
  v54 = v10;
  v11 = sub_2414B3A90();
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)v48 - v12;
  v51 = v9;
  v48[5] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v48[4] = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v50 = (char *)v48 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v48 - v23;
  v55 = v25;
  v26 = sub_2414B3A90();
  v57 = *(_QWORD *)(v26 - 8);
  v58 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v56 = (char *)v48 - v28;
  v29 = *(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16);
  v29(v24, v3, v17, v27);
  v30 = *(int *)(a1 + 68);
  v49 = v3;
  v48[3] = v3 + v30;
  ((void (*)(char *))v29)(v21);
  v31 = a1;
  v32 = *(char **)(a1 + 40);
  v33 = sub_2414B4CE4();
  v34 = *(void (**)(char *, uint64_t))(v18 + 8);
  v34(v21, v17);
  if ((v33 & 1) != 0)
  {
    v34(v24, v17);
    v35 = *(_QWORD *)(v31 + 48);
    v60 = v17;
    v61 = v51;
    v62 = v32;
    v63 = v35;
    type metadata accessor for ContentLookupItem();
  }
  v50 = v32;
  v36 = v54;
  ((void (*)(char *, uint64_t, uint64_t))v29)(v21, v49 + *(int *)(v31 + 72), v17);
  v37 = sub_2414B4CE4();
  v34(v21, v17);
  v34(v24, v17);
  if ((v37 & 1) != 0)
  {
    v38 = *(_QWORD *)(v31 + 56);
    v60 = v17;
    v61 = v36;
    v62 = v50;
    v63 = v38;
    type metadata accessor for ContentLookupItem();
  }
  v39 = *(_QWORD *)(v31 + 56);
  v66[0] = *(_QWORD *)(v31 + 48);
  v40 = v66[0];
  v66[1] = v39;
  v41 = v55;
  v42 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v55, v66);
  v43 = (uint64_t)v56;
  sub_2412F1584(v42, v41, MEMORY[0x24BDF5158]);
  v65[0] = v40;
  v65[1] = v39;
  v44 = MEMORY[0x24BDEF3E0];
  v64[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v41, v65);
  v64[1] = MEMORY[0x24BDF5138];
  v45 = v44;
  v46 = v58;
  MEMORY[0x242695AE8](v45, v58, v64);
  sub_2412EEA1C(v43, v46, v59);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v43, v46);
}

uint64_t ContentLookup3.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[6];
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];

  v78 = a2;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = sub_2414B3A90();
  v63 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)v60 - v6;
  v61 = v4;
  v60[2] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v60[1] = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v60[5] = (char *)v60 - v10;
  v60[4] = *(_QWORD *)(*(_QWORD *)(a1 + 32) - 8);
  MEMORY[0x24BDAC7A8](v11);
  v60[3] = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v68 = (char *)v60 - v14;
  v15 = *(_QWORD *)(a1 + 24);
  v71 = v16;
  v17 = sub_2414B3A90();
  v72 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v70 = (char *)v60 - v18;
  v69 = v15;
  v66 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v65 = (char *)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v67 = (char *)v60 - v22;
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v60 - v29;
  v76 = v31;
  v77 = v5;
  v75 = sub_2414B3A90();
  v74 = *(_QWORD *)(v75 - 8);
  v32 = MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)v60 - v33;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16);
  v34(v30, v2, v23, v32);
  v35 = *(int *)(a1 + 84);
  v64 = v2;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v27, v2 + v35, v23);
  v79 = a1;
  v36 = *(char **)(a1 + 48);
  LOBYTE(v5) = sub_2414B4CE4();
  v37 = *(void (**)(char *, uint64_t))(v24 + 8);
  v37(v27, v23);
  if ((v5 & 1) != 0)
  {
    v37(v30, v23);
    v38 = *(_QWORD *)(v79 + 56);
    v80 = v23;
    v81 = v69;
    v82 = v36;
    v83 = v38;
    type metadata accessor for ContentLookupItem();
  }
  v67 = v36;
  v39 = v64;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v27, v64 + *(int *)(v79 + 88), v23);
  v40 = sub_2414B4CE4();
  v37(v27, v23);
  if ((v40 & 1) != 0)
  {
    v37(v30, v23);
    v41 = *(_QWORD *)(v79 + 64);
    v80 = v23;
    v81 = v71;
    v82 = v67;
    v83 = v41;
    type metadata accessor for ContentLookupItem();
  }
  v42 = v79;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v27, v39 + *(int *)(v79 + 92), v23);
  v43 = sub_2414B4CE4();
  v37(v27, v23);
  v44 = ((uint64_t (*)(char *, uint64_t))v37)(v30, v23);
  v45 = *(_QWORD *)(v42 + 72);
  if ((v43 & 1) != 0)
  {
    v80 = v23;
    v81 = v61;
    v82 = v67;
    v83 = v45;
    type metadata accessor for ContentLookupItem();
  }
  v46 = (uint64_t)v62;
  v47 = MEMORY[0x24BDF5138];
  sub_2412F1584(v44, v61, MEMORY[0x24BDF5158]);
  v48 = *(_QWORD *)(v79 + 64);
  v88[0] = *(_QWORD *)(v79 + 56);
  v49 = v88[0];
  v88[1] = v48;
  v50 = MEMORY[0x24BDEF3E0];
  v51 = v76;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v76, v88);
  v87[0] = v45;
  v87[1] = v47;
  v52 = v77;
  MEMORY[0x242695AE8](v50, v77, v87);
  v53 = (uint64_t)v73;
  sub_2412F1584(v46, v51, v52);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v46, v52);
  v86[0] = v49;
  v86[1] = v48;
  v54 = MEMORY[0x24BDEF3E0];
  v55 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v51, v86);
  v85[0] = v45;
  v85[1] = v47;
  v56 = MEMORY[0x242695AE8](v54, v52, v85);
  v84[0] = v55;
  v84[1] = v56;
  v57 = v54;
  v58 = v75;
  MEMORY[0x242695AE8](v57, v75, v84);
  sub_2412EEA1C(v53, v58, v78);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v53, v58);
}

uint64_t ContentLookup4.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, double);
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v71[7];
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  _QWORD v100[2];
  _QWORD v101[2];
  __int128 v102;
  __int128 v103;
  _QWORD v104[2];
  __int128 v105;
  __int128 v106;

  v3 = v2;
  v4 = a1;
  v94 = a2;
  v71[1] = *(_QWORD *)(*(_QWORD *)(a1 + 48) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v71[0] = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v71[4] = (char *)v71 - v7;
  v9 = *(_QWORD *)(v8 + 40);
  v73 = v10;
  v11 = sub_2414B3A90();
  v71[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v71[5] = (char *)v71 - v12;
  v72 = v9;
  v71[3] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v71[2] = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v76 = (char *)v71 - v16;
  v75 = *(_QWORD *)(*(_QWORD *)(v4 + 32) - 8);
  MEMORY[0x24BDAC7A8](v17);
  v74 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v79 = (char *)v71 - v20;
  v21 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)&v87 = v22;
  v23 = sub_2414B3A90();
  v81 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v80 = (char *)v71 - v24;
  v93 = v25;
  v88 = v11;
  v26 = sub_2414B3A90();
  v85 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v84 = (char *)v71 - v27;
  v82 = v21;
  v78 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v77 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v86 = (char *)v71 - v31;
  v32 = *(_QWORD *)(v4 + 16);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)v71 - v38;
  v92 = v40;
  v41 = sub_2414B3A90();
  v90 = *(_QWORD *)(v41 - 8);
  v91 = v41;
  v42 = MEMORY[0x24BDAC7A8](v41);
  v89 = (char *)v71 - v43;
  v44 = *(void (**)(char *, uint64_t, uint64_t, double))(v33 + 16);
  v44(v39, v3, v32, v42);
  v45 = *(int *)(v4 + 100);
  v83 = v3;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v36, v3 + v45, v32);
  *(_QWORD *)&v95 = v4;
  v46 = *(char **)(v4 + 56);
  LOBYTE(v4) = sub_2414B4CE4();
  v47 = *(void (**)(char *, uint64_t))(v33 + 8);
  v47(v36, v32);
  if ((v4 & 1) != 0)
  {
    v47(v39, v32);
    v96 = v32;
    v97 = v82;
    v48 = *(_QWORD *)(v95 + 64);
    v98 = v46;
    v99 = v48;
    type metadata accessor for ContentLookupItem();
  }
  v86 = v46;
  v49 = v87;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v36, v83 + *(int *)(v95 + 104), v32);
  v50 = sub_2414B4CE4();
  v47(v36, v32);
  if ((v50 & 1) != 0)
  {
    v47(v39, v32);
    v96 = v32;
    v97 = v49;
    v51 = *(_QWORD *)(v95 + 72);
    v98 = v86;
    v99 = v51;
    type metadata accessor for ContentLookupItem();
  }
  ((void (*)(char *, uint64_t, uint64_t))v44)(v36, v83 + *(int *)(v95 + 108), v32);
  v52 = sub_2414B4CE4();
  v47(v36, v32);
  v53 = v88;
  if ((v52 & 1) != 0)
  {
    v47(v39, v32);
    v96 = v32;
    v97 = v72;
    v54 = *(_QWORD *)(v95 + 80);
    v98 = v86;
    v99 = v54;
    type metadata accessor for ContentLookupItem();
  }
  ((void (*)(char *, uint64_t, uint64_t))v44)(v36, v83 + *(int *)(v95 + 112), v32);
  v55 = sub_2414B4CE4();
  v47(v36, v32);
  v47(v39, v32);
  if ((v55 & 1) != 0)
  {
    v96 = v32;
    v97 = v73;
    v56 = *(_QWORD *)(v95 + 88);
    v98 = v86;
    v99 = v56;
    type metadata accessor for ContentLookupItem();
  }
  v57 = v95;
  v87 = *(_OWORD *)(v95 + 64);
  v106 = v87;
  v58 = MEMORY[0x24BDEF3E0];
  v59 = v93;
  v60 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v93, &v106);
  v95 = *(_OWORD *)(v57 + 80);
  v105 = v95;
  v61 = MEMORY[0x242695AE8](v58, v53, &v105);
  v104[0] = v60;
  v104[1] = v61;
  v62 = v92;
  v63 = MEMORY[0x242695AE8](v58, v92, v104);
  v64 = (uint64_t)v89;
  sub_2412F1584(v63, v62, MEMORY[0x24BDF5158]);
  v103 = v87;
  v65 = MEMORY[0x24BDEF3E0];
  v66 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v59, &v103);
  v102 = v95;
  v67 = MEMORY[0x242695AE8](v65, v53, &v102);
  v101[0] = v66;
  v101[1] = v67;
  v100[0] = MEMORY[0x242695AE8](v65, v62, v101);
  v100[1] = MEMORY[0x24BDF5138];
  v68 = v65;
  v69 = v91;
  MEMORY[0x242695AE8](v68, v91, v100);
  sub_2412EEA1C(v64, v69, v94);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v64, v69);
}

uint64_t sub_241371734(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_24137173C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241371770()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413717AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413717E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_241371830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_241371900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_241371958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2413719C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_241371A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_241371A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_241371B08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_241371BE4 + 4 * byte_2414BD310[v17 - 1]))();
}

void sub_241371C60(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

_QWORD *sub_241371E60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_241371E98(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_241371EC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for ContentLookupItem();
  return result;
}

uint64_t *sub_241371F64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v20;
  uint64_t v22;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = (*(_BYTE *)(v8 + 80) | *(_BYTE *)(v6 + 80));
  v11 = ~v10;
  v12 = v7 + v10;
  v13 = v7 + v9;
  v14 = ((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64) + ((v7 + v10) & ~v10);
  if (v10 > 7 || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v10 + 16) & v11));
    swift_retain();
  }
  else
  {
    v18 = ~v9;
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v22 = *(_QWORD *)(a3 + 24);
    v19(a1, a2, v5);
    v20 = ((unint64_t)a2 + v12) & v11;
    v19((uint64_t *)(((unint64_t)v4 + v12) & v11), (uint64_t *)v20, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v13 + (((unint64_t)v4 + v12) & v11)) & v18, (v13 + v20) & v18, v22);
  }
  return v4;
}

uint64_t sub_24137207C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_DWORD *)(v10 + 80) | v8;
  v13 = (v7 + a1 + v12) & ~v12;
  v6(v13, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))((v7 + v11 + v13) & ~v11, v9);
}

uint64_t sub_241372114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  v14 = (v9 + v13 + a1) & ~v13;
  v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_2413721D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  v14 = (v9 + v13 + a1) & ~v13;
  v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_241372294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  v14 = (v9 + v13 + a1) & ~v13;
  v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_241372354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | *(unsigned __int8 *)(v7 + 80);
  v14 = (v9 + v13 + a1) & ~v13;
  v15 = (v9 + v13 + a2) & ~v13;
  v8(v14, v15, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  return a1;
}

uint64_t sub_241372414(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = *(_DWORD *)(v6 + 80);
  v11 = *(_DWORD *)(v6 + 80) | *(unsigned __int8 *)(v4 + 80);
  v12 = v9 + v11;
  v13 = v9 + v10;
  v14 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v15 = (v13 & ~v10) + *(_QWORD *)(v6 + 64) + (v12 & ~v11);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v13 + ((v12 + a1) & ~v11)) & ~v10);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if (!(_DWORD)v15)
    return v8 + v19 + 1;
  if (v15 <= 3)
    v20 = (v13 & ~(_DWORD)v10) + *(_DWORD *)(v6 + 64) + (v12 & ~(_DWORD)v11);
  else
    v20 = 4;
  return ((uint64_t (*)(void))((char *)&loc_241372504 + 4 * byte_2414BD31E[v20 - 1]))();
}

void sub_24137258C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_DWORD *)(v6 + 80) | *(unsigned __int8 *)(v5 + 80);
  v9 = ((*(_QWORD *)(v5 + 64) + *(_DWORD *)(v6 + 80)) & ~(unint64_t)*(_DWORD *)(v6 + 80))
     + *(_QWORD *)(v6 + 64)
     + ((*(_QWORD *)(v5 + 64) + v8) & ~v8);
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v13 = v11 & ~(-1 << (8
                           * (((*(_BYTE *)(v5 + 64) + *(_DWORD *)(v6 + 80)) & ~*(_DWORD *)(v6 + 80))
                            + *(_BYTE *)(v6 + 64)
                            + ((*(_BYTE *)(v5 + 64) + v8) & ~(_BYTE)v8))));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void type metadata accessor for ContentLookup1()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t *sub_2413727B4(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;

  v5 = a3[2];
  v4 = a3[3];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | v8;
  v12 = (v10 | v8) + v7;
  v13 = v12 & ~(v10 | v8);
  v14 = v7 + v10;
  v15 = a3[4];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v17 | v8;
  v19 = v18 + *(_QWORD *)(v9 + 64) + ((v7 + v10) & ~v10);
  v20 = ((v7 + v17) & ~v17) + *(_QWORD *)(v16 + 64) + ((v19 + v13) & ~v18);
  if ((v11 | v17) > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v16 + 80)) & 0x100000) != 0
    || v20 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v30 = (uint64_t *)(v23 + (((v11 | v17) + 16) & ~(v11 | v17)));
    swift_retain();
  }
  else
  {
    v24 = ~v11;
    v35 = ~v10;
    v36 = v7 + v17;
    v37 = ~v18;
    v38 = ~v17;
    v39 = v15;
    v25 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v34 = v4;
    v25(a1, a2, v5);
    v40 = a1;
    v27 = ((unint64_t)a1 + v12) & v24;
    v28 = ((unint64_t)a2 + v12) & v24;
    v25((uint64_t *)v27, (uint64_t *)v28, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v14 + v27) & v35, (v14 + v28) & v35, v34);
    v29 = v19 + v27;
    v30 = v40;
    v31 = v29 & v37;
    v32 = (v19 + v28) & v37;
    v25((uint64_t *)(v29 & v37), (uint64_t *)v32, v5);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))((v36 + v31) & v38, (v36 + v32) & v38, v39);
  }
  return v30;
}

uint64_t sub_241372964(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a2[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + a1;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = a2[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + (v12 | v9)) & ~(v12 | v9);
  v6(v13, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))((v7 + v12 + v13) & ~v12, v10);
  v14 = ((v7 + v12) & ~v12) + *(_QWORD *)(v11 + 64) + v13;
  v15 = a2[4];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v14 + (v17 | v9)) & ~(v17 | v9);
  v6(v18, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))((v7 + v17 + v18) & ~v17, v15);
}

uint64_t sub_241372A48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 16);
  v7();
  v9 = *(_QWORD *)(v6 + 64);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 | v24) + v9;
  v14 = (v13 + a1) & ~(v12 | v24);
  v15 = (v13 + a2) & ~(v12 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v14, v15, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  v16 = (v9 + v12) & ~v12;
  v17 = a3[4];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 | v24) + *(_QWORD *)(v11 + 64) + v16;
  v21 = (v20 + v14) & ~(v19 | v24);
  v22 = (v20 + v15) & ~(v19 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v21, v22, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v9 + v19 + v21) & ~v19, (v9 + v19 + v22) & ~v19, v17);
  return a1;
}

uint64_t sub_241372B74(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 24);
  v7();
  v9 = *(_QWORD *)(v6 + 64);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 | v24) + v9;
  v14 = (v13 + a1) & ~(v12 | v24);
  v15 = (v13 + a2) & ~(v12 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v14, v15, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  v16 = (v9 + v12) & ~v12;
  v17 = a3[4];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 | v24) + *(_QWORD *)(v11 + 64) + v16;
  v21 = (v20 + v14) & ~(v19 | v24);
  v22 = (v20 + v15) & ~(v19 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v21, v22, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))((v9 + v19 + v21) & ~v19, (v9 + v19 + v22) & ~v19, v17);
  return a1;
}

uint64_t sub_241372CA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 32);
  v7();
  v9 = *(_QWORD *)(v6 + 64);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 | v24) + v9;
  v14 = (v13 + a1) & ~(v12 | v24);
  v15 = (v13 + a2) & ~(v12 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v14, v15, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  v16 = (v9 + v12) & ~v12;
  v17 = a3[4];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 | v24) + *(_QWORD *)(v11 + 64) + v16;
  v21 = (v20 + v14) & ~(v19 | v24);
  v22 = (v20 + v15) & ~(v19 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v21, v22, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v9 + v19 + v21) & ~v19, (v9 + v19 + v22) & ~v19, v17);
  return a1;
}

uint64_t sub_241372DCC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 40);
  v7();
  v9 = *(_QWORD *)(v6 + 64);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 | v24) + v9;
  v14 = (v13 + a1) & ~(v12 | v24);
  v15 = (v13 + a2) & ~(v12 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v14, v15, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))((v9 + v12 + v14) & ~v12, (v9 + v12 + v15) & ~v12, v10);
  v16 = (v9 + v12) & ~v12;
  v17 = a3[4];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 | v24) + *(_QWORD *)(v11 + 64) + v16;
  v21 = (v20 + v14) & ~(v19 | v24);
  v22 = (v20 + v15) & ~(v19 | v24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v21, v22, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))((v9 + v19 + v21) & ~v19, (v9 + v19 + v22) & ~v19, v17);
  return a1;
}

uint64_t sub_241372EF8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;

  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = *(_QWORD *)(v6 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v9)
    v12 = *(_DWORD *)(v8 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v7 - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v9)
    v15 = *(_DWORD *)(v8 + 84);
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = v15;
  if (!a2)
    return 0;
  v17 = *(_QWORD *)(v8 + 64);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = v19 | v18;
  v21 = (v19 | v18) + v17;
  v22 = v17 + v19;
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = v23 | v18;
  v25 = v24 + *(_QWORD *)(v10 + 64) + ((v17 + v19) & ~v19);
  v26 = v17 + v23;
  v27 = a2 - v16;
  if (a2 <= v16)
    goto LABEL_29;
  v28 = (v26 & ~v23) + *(_QWORD *)(v13 + 64) + ((v25 + (v21 & ~v20)) & ~v24);
  v29 = 8 * v28;
  if (v28 > 3)
    goto LABEL_13;
  v31 = ((v27 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    v30 = *(_DWORD *)(a1 + v28);
    if (!v30)
      goto LABEL_29;
    goto LABEL_20;
  }
  if (v31 > 0xFF)
  {
    v30 = *(unsigned __int16 *)(a1 + v28);
    if (!*(_WORD *)(a1 + v28))
      goto LABEL_29;
    goto LABEL_20;
  }
  if (v31 >= 2)
  {
LABEL_13:
    v30 = *(unsigned __int8 *)(a1 + v28);
    if (!*(_BYTE *)(a1 + v28))
      goto LABEL_29;
LABEL_20:
    v32 = (v30 - 1) << v29;
    if (v28 > 3)
      v32 = 0;
    if ((_DWORD)v28)
    {
      if (v28 <= 3)
        v33 = (v26 & ~(_DWORD)v23) + *(_DWORD *)(v13 + 64) + ((v25 + (v21 & ~(_DWORD)v20)) & ~(_DWORD)v24);
      else
        v33 = 4;
      __asm { BR              X11 }
    }
    return v16 + v32 + 1;
  }
LABEL_29:
  if (!v16)
    return 0;
  if ((_DWORD)v9 != v16)
  {
    a1 = (v21 + a1) & ~v20;
    if (v12 >= v15)
    {
      if (v9 < v11)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + a1) & ~v19, *(unsigned int *)(v10 + 84), v6);
    }
    else
    {
      a1 = (v25 + a1) & ~v24;
      if (v9 < v14)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v13 + 48))((v26 + a1) & ~v23, *(unsigned int *)(v13 + 84), v7);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, v9, v5);
}

void sub_24137311C(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  BOOL v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;

  v6 = *(_QWORD *)(a4[2] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = *(_DWORD *)(v6 + 84);
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v10 + 84) <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (((v15 | v13)
        + ((*(_QWORD *)(v6 + 64) + v14) & ~v14)
        + *(_QWORD *)(v8 + 64)
        + (((v14 | v13) + *(_QWORD *)(v6 + 64)) & ~(v14 | v13))) & ~(v15 | v13))
      + ((*(_QWORD *)(v6 + 64) + v15) & ~v15)
      + *(_QWORD *)(v10 + 64);
  v17 = a3 >= v12;
  v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v16 <= 3)
    {
      v21 = ((v18 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
      if (HIWORD(v21))
      {
        v19 = 4u;
      }
      else
      {
        v19 = v21 > 1;
        if (v21 >= 0x100)
          v19 = 2;
      }
    }
    else
    {
      v19 = 1u;
    }
  }
  else
  {
    v19 = 0;
  }
  if (v12 < a2)
  {
    v20 = ~v12 + a2;
    if (v16 < 4)
    {
      if ((_DWORD)v16)
      {
        v22 = v20 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if ((_DWORD)v16 == 3)
        {
          *a1 = v22;
          *((_BYTE *)a1 + 2) = BYTE2(v22);
        }
        else if ((_DWORD)v16 == 2)
        {
          *a1 = v22;
        }
        else
        {
          *(_BYTE *)a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v20;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X27 }
}

void sub_241373494()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x241373438);
}

void sub_24137349C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x241373438);
}

void sub_2413734AC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x241373438);
}

uint64_t sub_2413734B8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2413734C0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for ContentLookupItem();
  return result;
}

uint64_t *sub_2413735EC(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = *(_QWORD *)(a3[3] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 | v7;
  v11 = (v9 | v7) + v6;
  v12 = v6 + v9;
  v13 = a3[5];
  v14 = *(_QWORD *)(a3[4] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15 | v7;
  v17 = (v15 | v7) + *(_QWORD *)(v8 + 64) + ((v6 + v9) & ~v9);
  v18 = (v17 + (v11 & ~(v9 | v7))) & ~(v15 | v7);
  v19 = v6 + v15;
  v20 = *(_QWORD *)(v13 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = v21 | v7;
  v23 = v22 + *(_QWORD *)(v14 + 64) + ((v6 + v15) & ~v15);
  v24 = v6 + v21;
  v25 = ((v6 + v21) & ~v21) + *(_QWORD *)(v20 + 64) + ((v23 + v18) & ~v22);
  v26 = v10 | v15 | v21;
  if (v26 > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v20 + 80)) & 0x100000) != 0
    || v25 > 0x18)
  {
    v29 = *a2;
    *a1 = *a2;
    v37 = (uint64_t *)(v29 + ((v26 + 16) & ~v26));
    swift_retain();
  }
  else
  {
    v30 = ~v10;
    v43 = a3[3];
    v44 = ~v9;
    v45 = v19;
    v46 = ~v16;
    v47 = a3[4];
    v48 = ~v15;
    v49 = ~v22;
    v50 = v24;
    v31 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v52 = ~v21;
    v53 = a3[5];
    v32 = a3[2];
    v51 = *(_QWORD *)(v13 - 8);
    v31(a1, a2, v4);
    v54 = a1;
    v34 = ((unint64_t)a1 + v11) & v30;
    v35 = ((unint64_t)a2 + v11) & v30;
    v31((uint64_t *)v34, (uint64_t *)v35, v32);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v12 + v34) & v44, (v12 + v35) & v44, v43);
    v36 = v17 + v34;
    v37 = v54;
    v38 = v36 & v46;
    v39 = (v17 + v35) & v46;
    v31((uint64_t *)(v36 & v46), (uint64_t *)v39, v32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))((v45 + v38) & v48, (v45 + v39) & v48, v47);
    v40 = (v23 + v38) & v49;
    v41 = (v23 + v39) & v49;
    v31((uint64_t *)v40, (uint64_t *)v41, v32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16))((v50 + v40) & v52, (v50 + v41) & v52, v53);
  }
  return v37;
}

uint64_t sub_241373834(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a2[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + a1;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = a2[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + (v12 | v9)) & ~(v12 | v9);
  v6(v13, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))((v7 + v12 + v13) & ~v12, v10);
  v14 = ((v7 + v12) & ~v12) + *(_QWORD *)(v11 + 64) + v13;
  v15 = a2[4];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v14 + (v17 | v9)) & ~(v17 | v9);
  v6(v18, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))((v7 + v17 + v18) & ~v17, v15);
  v19 = ((v7 + v17) & ~v17) + *(_QWORD *)(v16 + 64);
  v20 = a2[5];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v19 + (v22 | v9) + v18) & ~(v22 | v9);
  v6(v23, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))((v7 + v22 + v23) & ~v22, v20);
}

uint64_t sub_241373964(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(void);

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 16);
  v7();
  v9 = v7;
  v36 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 | v11) + v10;
  v16 = v10;
  v35 = v10;
  v17 = (v15 + a1) & ~(v14 | v11);
  v18 = (v15 + a2) & ~(v14 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))((v16 + v14 + v17) & ~v14, (v16 + v14 + v18) & ~v14, v12);
  v19 = (v16 + v14) & ~v14;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | v11) + *(_QWORD *)(v13 + 64) + v19;
  v24 = (v23 + v17) & ~(v22 | v11);
  v25 = (v23 + v18) & ~(v22 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v24, v25, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))((v35 + v22 + v24) & ~v22, (v35 + v22 + v25) & ~v22, v20);
  v26 = (v35 + v22) & ~v22;
  v27 = *(_QWORD *)(v21 + 64);
  v28 = a3[5];
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v30 | v11) + v27 + v26;
  v32 = (v31 + v24) & ~(v30 | v11);
  v33 = (v31 + v25) & ~(v30 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v32, v33, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))((v35 + v30 + v32) & ~v30, (v35 + v30 + v33) & ~v30, v28);
  return a1;
}

uint64_t sub_241373B08(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(void);

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 24);
  v7();
  v9 = v7;
  v36 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 | v11) + v10;
  v16 = v10;
  v35 = v10;
  v17 = (v15 + a1) & ~(v14 | v11);
  v18 = (v15 + a2) & ~(v14 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))((v16 + v14 + v17) & ~v14, (v16 + v14 + v18) & ~v14, v12);
  v19 = (v16 + v14) & ~v14;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | v11) + *(_QWORD *)(v13 + 64) + v19;
  v24 = (v23 + v17) & ~(v22 | v11);
  v25 = (v23 + v18) & ~(v22 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v24, v25, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))((v35 + v22 + v24) & ~v22, (v35 + v22 + v25) & ~v22, v20);
  v26 = (v35 + v22) & ~v22;
  v27 = *(_QWORD *)(v21 + 64);
  v28 = a3[5];
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v30 | v11) + v27 + v26;
  v32 = (v31 + v24) & ~(v30 | v11);
  v33 = (v31 + v25) & ~(v30 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v32, v33, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))((v35 + v30 + v32) & ~v30, (v35 + v30 + v33) & ~v30, v28);
  return a1;
}

uint64_t sub_241373CAC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(void);

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 32);
  v7();
  v9 = v7;
  v36 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 | v11) + v10;
  v16 = v10;
  v35 = v10;
  v17 = (v15 + a1) & ~(v14 | v11);
  v18 = (v15 + a2) & ~(v14 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))((v16 + v14 + v17) & ~v14, (v16 + v14 + v18) & ~v14, v12);
  v19 = (v16 + v14) & ~v14;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | v11) + *(_QWORD *)(v13 + 64) + v19;
  v24 = (v23 + v17) & ~(v22 | v11);
  v25 = (v23 + v18) & ~(v22 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v24, v25, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))((v35 + v22 + v24) & ~v22, (v35 + v22 + v25) & ~v22, v20);
  v26 = (v35 + v22) & ~v22;
  v27 = *(_QWORD *)(v21 + 64);
  v28 = a3[5];
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v30 | v11) + v27 + v26;
  v32 = (v31 + v24) & ~(v30 | v11);
  v33 = (v31 + v25) & ~(v30 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v32, v33, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))((v35 + v30 + v32) & ~v30, (v35 + v30 + v33) & ~v30, v28);
  return a1;
}

uint64_t sub_241373E50(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(void);

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void))(v6 + 40);
  v7();
  v9 = v7;
  v36 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 | v11) + v10;
  v16 = v10;
  v35 = v10;
  v17 = (v15 + a1) & ~(v14 | v11);
  v18 = (v15 + a2) & ~(v14 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v17, v18, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))((v16 + v14 + v17) & ~v14, (v16 + v14 + v18) & ~v14, v12);
  v19 = (v16 + v14) & ~v14;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | v11) + *(_QWORD *)(v13 + 64) + v19;
  v24 = (v23 + v17) & ~(v22 | v11);
  v25 = (v23 + v18) & ~(v22 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v24, v25, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40))((v35 + v22 + v24) & ~v22, (v35 + v22 + v25) & ~v22, v20);
  v26 = (v35 + v22) & ~v22;
  v27 = *(_QWORD *)(v21 + 64);
  v28 = a3[5];
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v30 | v11) + v27 + v26;
  v32 = (v31 + v24) & ~(v30 | v11);
  v33 = (v31 + v25) & ~(v30 | v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v32, v33, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))((v35 + v30 + v32) & ~v30, (v35 + v30 + v33) & ~v30, v28);
  return a1;
}

uint64_t sub_241373FF4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t (*v31)(void);
  uint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(a3[4] - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v5)
    v11 = *(_DWORD *)(v4 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = v11;
  v13 = *(_QWORD *)(a3[5] - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v5)
    v15 = *(_DWORD *)(v4 + 84);
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v15 > v12)
    v12 = v15;
  if (!a2)
    return 0;
  v16 = *(_QWORD *)(v4 + 64);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = v18 | v17;
  v34 = (v18 | v17) + v16;
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = v20 | v17;
  v33 = (v20 | v17) + *(_QWORD *)(v6 + 64) + ((v16 + v18) & ~v18);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = v22 | v17;
  v24 = a2 - v12;
  if (a2 <= v12)
    goto LABEL_34;
  v25 = ((v16 + v22) & ~v22)
      + *(_QWORD *)(v13 + 64)
      + ((v23 + *(_QWORD *)(v9 + 64) + ((v16 + v20) & ~v20) + ((v33 + (v34 & ~v19)) & ~v21)) & ~v23);
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v28 = ((v24 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      v27 = *(_DWORD *)(a1 + v25);
      if (!v27)
        goto LABEL_34;
      goto LABEL_25;
    }
    if (v28 > 0xFF)
    {
      v27 = *(unsigned __int16 *)(a1 + v25);
      if (!*(_WORD *)(a1 + v25))
        goto LABEL_34;
      goto LABEL_25;
    }
    if (v28 < 2)
    {
LABEL_34:
      if (v12)
      {
        if (v5 != v12)
        {
          if (v8 == v12)
          {
            if (v5 < v7)
            {
              v31 = *(uint64_t (**)(void))(v6 + 48);
              return v31();
            }
          }
          else if (v11 == v12)
          {
            if (v5 < v10)
            {
              v31 = *(uint64_t (**)(void))(v9 + 48);
              return v31();
            }
          }
          else if (v5 < v14)
          {
            v31 = *(uint64_t (**)(void))(v13 + 48);
            return v31();
          }
        }
        v31 = *(uint64_t (**)(void))(v4 + 48);
        return v31();
      }
      return 0;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + v25);
  if (!*(_BYTE *)(a1 + v25))
    goto LABEL_34;
LABEL_25:
  v29 = (v27 - 1) << v26;
  if (v25 > 3)
    v29 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v30 = v25;
    else
      v30 = 4;
    __asm { BR              X11 }
  }
  return v12 + v29 + 1;
}

void sub_2413742E8(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  size_t v21;
  BOOL v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v27;
  int v28;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v7 + 84) <= v6)
    v8 = *(_DWORD *)(v5 + 84);
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = a4[5];
  v10 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v10 + 84) <= v6)
    v11 = *(_DWORD *)(v5 + 84);
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = v11;
  v13 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v13 + 84) <= v6)
    v19 = *(_DWORD *)(v5 + 84);
  else
    v19 = *(_DWORD *)(v13 + 84);
  if (v19 <= v12)
    v20 = v12;
  else
    v20 = v19;
  v17 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v14 = *(_QWORD *)(v5 + 64);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v21 = (((v18 | v15)
        + *(_QWORD *)(v10 + 64)
        + ((v14 + v17) & ~v17)
        + (((v17 | v15) + *(_QWORD *)(v7 + 64) + ((v14 + v16) & ~v16) + (((v16 | v15) + v14) & ~(v16 | v15))) & ~(v17 | v15))) & ~(v18 | v15))
      + ((v14 + v18) & ~v18)
      + *(_QWORD *)(v13 + 64);
  v22 = a3 >= v20;
  v23 = a3 - v20;
  if (v23 != 0 && v22)
  {
    if (v21 <= 3)
    {
      v27 = ((v23 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v27))
      {
        v24 = 4u;
      }
      else if (v27 >= 0x100)
      {
        v24 = 2;
      }
      else
      {
        v24 = v27 > 1;
      }
    }
    else
    {
      v24 = 1u;
    }
  }
  else
  {
    v24 = 0;
  }
  if (v20 < a2)
  {
    v25 = ~v20 + a2;
    if (v21 < 4)
    {
      if ((_DWORD)v21)
      {
        v28 = v25 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if ((_DWORD)v21 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if ((_DWORD)v21 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v25;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_2413746A8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2413745E8);
}

void sub_2413746B0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2413745E8);
}

void sub_2413746C0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2413745E8);
}

void type metadata accessor for ContentLookup3()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2413746D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2413746E0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for ContentLookupItem();
  return result;
}

uint64_t *sub_24137483C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *(_QWORD *)(a3[2] - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_DWORD *)(v3 + 80);
  v56 = a3[3];
  v6 = *(_QWORD *)(v56 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v51 = v4 + v7;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 | v5;
  v11 = (v9 | v5) + *(_QWORD *)(v6 + 64) + ((v4 + v7) & ~v7);
  v52 = v4 + v9;
  v12 = *(_QWORD *)(a3[5] - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13 | v5;
  v15 = (v13 | v5) + *(_QWORD *)(v8 + 64) + ((v4 + v9) & ~v9);
  v16 = a3[6];
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 | v5;
  v53 = v4 + v13;
  v20 = (v18 | v5) + *(_QWORD *)(v12 + 64) + ((v4 + v13) & ~v13);
  v57 = v4 + v18;
  v21 = v7 | v5;
  v22 = v21 + v4;
  v54 = v15;
  v55 = v20;
  v23 = ((v4 + v18) & ~v18)
      + *(_QWORD *)(v17 + 64)
      + ((v20 + ((v15 + ((v11 + ((v21 + v4) & ~v21)) & ~v10)) & ~v14)) & ~v19);
  v24 = v21 | v9 | v13 | v18;
  if (v24 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v3 + 80) | *(_DWORD *)(v8 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v17 + 80)) & 0x100000) != 0
    || v23 > 0x18)
  {
    v27 = *a2;
    *a1 = *a2;
    v34 = (uint64_t *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  else
  {
    v49 = *(_QWORD *)(v16 - 8);
    v50 = a3[6];
    v28 = ~v21;
    v44 = a3[4];
    v29 = ~v7;
    v41 = ~v10;
    v42 = ~v9;
    v43 = ~v14;
    v46 = ~v13;
    v30 = *(void (**)(void))(v3 + 16);
    v47 = ~v19;
    v48 = ~v18;
    v45 = a3[5];
    v31 = a3[2];
    v30();
    v32 = ((unint64_t)a1 + v22) & v28;
    v33 = ((unint64_t)a2 + v22) & v28;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v32, v33, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((v51 + v32) & v29, (v51 + v33) & v29, v56);
    v34 = a1;
    v35 = (v11 + v32) & v41;
    v36 = (v11 + v33) & v41;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v35, v36, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v52 + v35) & v42, (v52 + v36) & v42, v44);
    v37 = (v54 + v35) & v43;
    v38 = (v54 + v36) & v43;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v37, v38, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v53 + v37) & v46, (v53 + v38) & v46, v45);
    v39 = (v55 + v37) & v47;
    ((void (*)(uint64_t, unint64_t, uint64_t))v30)(v39, (v55 + v38) & v47, v31);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v49 + 16))((v57 + v39) & v48, (v57 + ((v55 + v38) & v47)) & v48, v50);
  }
  return v34;
}

uint64_t sub_241374B40(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a2[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + a1;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = a2[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + (v12 | v9)) & ~(v12 | v9);
  v6(v13, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))((v7 + v12 + v13) & ~v12, v10);
  v14 = ((v7 + v12) & ~v12) + *(_QWORD *)(v11 + 64) + v13;
  v15 = a2[4];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v14 + (v17 | v9)) & ~(v17 | v9);
  v6(v18, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))((v7 + v17 + v18) & ~v17, v15);
  v19 = ((v7 + v17) & ~v17) + *(_QWORD *)(v16 + 64);
  v20 = a2[5];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v19 + (v22 | v9) + v18) & ~(v22 | v9);
  v6(v23, v4);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))((v7 + v22 + v23) & ~v22, v20);
  v24 = ((v7 + v22) & ~v22) + *(_QWORD *)(v21 + 64);
  v25 = a2[6];
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v24 + (v27 | v9) + v23) & ~(v27 | v9);
  v6(v28, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))((v7 + v27 + v28) & ~v27, v25);
}

uint64_t sub_241374CBC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(void);
  uint64_t v47;

  v4 = a3[2];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(void (**)(void))(v6 + 16);
  v7();
  v9 = v7;
  v45 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | v11;
  v16 = v11;
  v17 = (v14 | v11) + v10;
  v18 = v10;
  v47 = v10;
  v19 = (v17 + a1) & ~v15;
  v20 = (v17 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v19, v20, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))((v18 + v14 + v19) & ~v14, (v18 + v14 + v20) & ~v14, v12);
  v21 = (v18 + v14) & ~v14;
  v22 = a3[4];
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 | v16) + *(_QWORD *)(v13 + 64) + v21;
  v26 = (v25 + v19) & ~(v24 | v16);
  v27 = (v25 + v20) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v22);
  v28 = (v47 + v24) & ~v24;
  v29 = *(_QWORD *)(v23 + 64);
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 | v16) + v29 + v28;
  v34 = (v33 + v26) & ~(v32 | v16);
  v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v30);
  v36 = (v47 + v32) & ~v32;
  v37 = *(_QWORD *)(v31 + 64);
  v38 = a3[6];
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (v40 | v16) + v37 + v36;
  v42 = (v41 + v34) & ~(v40 | v16);
  v43 = (v41 + v35) & ~(v40 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v38);
  return a1;
}

uint64_t sub_241374ED8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(void);
  uint64_t v47;

  v4 = a3[2];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(void (**)(void))(v6 + 24);
  v7();
  v9 = v7;
  v45 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | v11;
  v16 = v11;
  v17 = (v14 | v11) + v10;
  v18 = v10;
  v47 = v10;
  v19 = (v17 + a1) & ~v15;
  v20 = (v17 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v19, v20, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))((v18 + v14 + v19) & ~v14, (v18 + v14 + v20) & ~v14, v12);
  v21 = (v18 + v14) & ~v14;
  v22 = a3[4];
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 | v16) + *(_QWORD *)(v13 + 64) + v21;
  v26 = (v25 + v19) & ~(v24 | v16);
  v27 = (v25 + v20) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v22);
  v28 = (v47 + v24) & ~v24;
  v29 = *(_QWORD *)(v23 + 64);
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 | v16) + v29 + v28;
  v34 = (v33 + v26) & ~(v32 | v16);
  v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v30);
  v36 = (v47 + v32) & ~v32;
  v37 = *(_QWORD *)(v31 + 64);
  v38 = a3[6];
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (v40 | v16) + v37 + v36;
  v42 = (v41 + v34) & ~(v40 | v16);
  v43 = (v41 + v35) & ~(v40 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v38);
  return a1;
}

uint64_t sub_2413750F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(void);
  uint64_t v47;

  v4 = a3[2];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(void (**)(void))(v6 + 32);
  v7();
  v9 = v7;
  v45 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | v11;
  v16 = v11;
  v17 = (v14 | v11) + v10;
  v18 = v10;
  v47 = v10;
  v19 = (v17 + a1) & ~v15;
  v20 = (v17 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v19, v20, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))((v18 + v14 + v19) & ~v14, (v18 + v14 + v20) & ~v14, v12);
  v21 = (v18 + v14) & ~v14;
  v22 = a3[4];
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 | v16) + *(_QWORD *)(v13 + 64) + v21;
  v26 = (v25 + v19) & ~(v24 | v16);
  v27 = (v25 + v20) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v22);
  v28 = (v47 + v24) & ~v24;
  v29 = *(_QWORD *)(v23 + 64);
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 | v16) + v29 + v28;
  v34 = (v33 + v26) & ~(v32 | v16);
  v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v30);
  v36 = (v47 + v32) & ~v32;
  v37 = *(_QWORD *)(v31 + 64);
  v38 = a3[6];
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (v40 | v16) + v37 + v36;
  v42 = (v41 + v34) & ~(v40 | v16);
  v43 = (v41 + v35) & ~(v40 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v38);
  return a1;
}

uint64_t sub_241375310(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v6;
  void (*v7)(void);
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(void);
  uint64_t v47;

  v4 = a3[2];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(void (**)(void))(v6 + 40);
  v7();
  v9 = v7;
  v45 = v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | v11;
  v16 = v11;
  v17 = (v14 | v11) + v10;
  v18 = v10;
  v47 = v10;
  v19 = (v17 + a1) & ~v15;
  v20 = (v17 + a2) & ~v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v19, v20, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))((v18 + v14 + v19) & ~v14, (v18 + v14 + v20) & ~v14, v12);
  v21 = (v18 + v14) & ~v14;
  v22 = a3[4];
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 | v16) + *(_QWORD *)(v13 + 64) + v21;
  v26 = (v25 + v19) & ~(v24 | v16);
  v27 = (v25 + v20) & ~(v24 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v26, v27, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))((v47 + v24 + v26) & ~v24, (v47 + v24 + v27) & ~v24, v22);
  v28 = (v47 + v24) & ~v24;
  v29 = *(_QWORD *)(v23 + 64);
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 | v16) + v29 + v28;
  v34 = (v33 + v26) & ~(v32 | v16);
  v35 = (v33 + v27) & ~(v32 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v35, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))((v47 + v32 + v34) & ~v32, (v47 + v32 + v35) & ~v32, v30);
  v36 = (v47 + v32) & ~v32;
  v37 = *(_QWORD *)(v31 + 64);
  v38 = a3[6];
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (v40 | v16) + v37 + v36;
  v42 = (v41 + v34) & ~(v40 | v16);
  v43 = (v41 + v35) & ~(v40 | v16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, v43, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))((v47 + v40 + v42) & ~v40, (v47 + v40 + v43) & ~v40, v38);
  return a1;
}

uint64_t sub_24137552C(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(a3[4] - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v5)
    v11 = *(_DWORD *)(v4 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = v11;
  v13 = *(_QWORD *)(a3[5] - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v5)
    v15 = *(_DWORD *)(v4 + 84);
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v15 > v12)
    v12 = v15;
  v16 = *(_QWORD *)(a3[6] - 8);
  v17 = *(_DWORD *)(v16 + 84);
  if (v17 <= v5)
    v18 = *(_DWORD *)(v4 + 84);
  else
    v18 = *(_DWORD *)(v16 + 84);
  if (v18 <= v12)
    v19 = v12;
  else
    v19 = v18;
  if (!a2)
    return 0;
  v20 = *(_QWORD *)(v4 + 64);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = *(unsigned __int8 *)(v6 + 80);
  v23 = v22 | v21;
  v49 = (v22 | v21) + v20;
  v45 = v20 + v22;
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = v24 | v21;
  v48 = (v24 | v21) + *(_QWORD *)(v6 + 64) + ((v20 + v22) & ~v22);
  v44 = v20 + v24;
  v26 = *(unsigned __int8 *)(v13 + 80);
  v27 = v26 | v21;
  v47 = (v26 | v21) + *(_QWORD *)(v9 + 64) + ((v20 + v24) & ~v24);
  v43 = v20 + v26;
  v28 = *(unsigned __int8 *)(v16 + 80);
  v29 = v28 | v21;
  v46 = (v28 | v21) + *(_QWORD *)(v13 + 64) + ((v20 + v26) & ~v26);
  v30 = v20 + v28;
  v31 = a2 - v19;
  if (a2 <= v19)
    goto LABEL_40;
  v32 = (v30 & ~v28) + *(_QWORD *)(v16 + 64) + ((v46 + ((v47 + ((v48 + (v49 & ~v23)) & ~v25)) & ~v27)) & ~v29);
  v33 = 8 * v32;
  if (v32 <= 3)
  {
    v35 = ((v31 + ~(-1 << v33)) >> v33) + 1;
    if (HIWORD(v35))
    {
      v34 = *(_DWORD *)(a1 + v32);
      if (!v34)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v35 > 0xFF)
    {
      v34 = *(unsigned __int16 *)(a1 + v32);
      if (!*(_WORD *)(a1 + v32))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v35 < 2)
    {
LABEL_40:
      if (v19)
      {
        if (v5 == v19)
        {
          v38 = *(uint64_t (**)(uint64_t))(v4 + 48);
          v39 = a1;
          return v38(v39);
        }
        v40 = (v49 + a1) & ~v23;
        if (v8 == v19)
        {
          if (v5 >= v7)
          {
            v38 = *(uint64_t (**)(uint64_t))(v4 + 48);
            v39 = (v49 + a1) & ~v23;
          }
          else
          {
            v39 = (v45 + v40) & ~v22;
            v38 = *(uint64_t (**)(uint64_t))(v6 + 48);
          }
          return v38(v39);
        }
        v41 = (v48 + v40) & ~v25;
        if (v11 == v19)
        {
          if (v5 >= v10)
          {
            v38 = *(uint64_t (**)(uint64_t))(v4 + 48);
            v39 = (v48 + v40) & ~v25;
          }
          else
          {
            v39 = (v44 + v41) & ~v24;
            v38 = *(uint64_t (**)(uint64_t))(v9 + 48);
          }
          return v38(v39);
        }
        v39 = (v47 + v41) & ~v27;
        if (v15 == v19)
        {
          if (v5 < v14)
          {
            v39 = (v43 + v39) & ~v26;
            v38 = *(uint64_t (**)(uint64_t))(v13 + 48);
            return v38(v39);
          }
        }
        else
        {
          v39 = (v46 + v39) & ~v29;
          if (v5 < v17)
          {
            v39 = (v30 + v39) & ~v28;
            v38 = *(uint64_t (**)(uint64_t))(v16 + 48);
            return v38(v39);
          }
        }
        v38 = *(uint64_t (**)(uint64_t))(v4 + 48);
        return v38(v39);
      }
      return 0;
    }
  }
  v34 = *(unsigned __int8 *)(a1 + v32);
  if (!*(_BYTE *)(a1 + v32))
    goto LABEL_40;
LABEL_31:
  v36 = (v34 - 1) << v33;
  if (v32 > 3)
    v36 = 0;
  if ((_DWORD)v32)
  {
    if (v32 <= 3)
      v37 = (v30 & ~(_DWORD)v28)
          + *(_DWORD *)(v16 + 64)
          + ((v46 + ((v47 + ((v48 + (v49 & ~(_DWORD)v23)) & ~(_DWORD)v25)) & ~(_DWORD)v27)) & ~(_DWORD)v29);
    else
      v37 = 4;
    __asm { BR              X11 }
  }
  return v19 + v36 + 1;
}

void sub_2413758E4(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  size_t v24;
  BOOL v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  v7 = *(_QWORD *)(a4[4] - 8);
  v8 = *(_QWORD *)(a4[5] - 8);
  v9 = *(_QWORD *)(a4[6] - 8);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = ((v10 + v15) & ~v15) + *(_QWORD *)(v9 + 64);
  v17 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v6 + 84) <= v17)
    v18 = *(_DWORD *)(v5 + 84);
  else
    v18 = *(_DWORD *)(v6 + 84);
  if (*(_DWORD *)(v7 + 84) <= v17)
    v19 = *(_DWORD *)(v5 + 84);
  else
    v19 = *(_DWORD *)(v7 + 84);
  if (v19 <= v18)
    v20 = v18;
  else
    v20 = v19;
  if (*(_DWORD *)(v8 + 84) <= v17)
    v21 = v17;
  else
    v21 = *(_DWORD *)(v8 + 84);
  if (v21 > v20)
    v20 = v21;
  v22 = *(_DWORD *)(v9 + 84);
  if (v22 <= v17)
    v23 = v17;
  else
    v23 = v22;
  if (v23 > v20)
    v20 = v23;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v24 = (((v15 | v11)
        + *(_QWORD *)(v8 + 64)
        + ((v10 + v14) & ~v14)
        + (((v14 | v11)
          + *(_QWORD *)(v7 + 64)
          + ((v10 + v13) & ~v13)
          + (((v13 | v11) + *(_QWORD *)(v6 + 64) + ((v10 + v12) & ~v12) + (((v12 | v11) + v10) & ~(v12 | v11))) & ~(v13 | v11))) & ~(v14 | v11))) & ~(v15 | v11))
      + v16;
  v25 = a3 >= v20;
  v26 = a3 - v20;
  if (v26 != 0 && v25)
  {
    if (v24 <= 3)
    {
      v29 = ((v26 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
      if (HIWORD(v29))
      {
        v27 = 4u;
      }
      else
      {
        v27 = v29 > 1;
        if (v29 >= 0x100)
          v27 = 2;
      }
    }
    else
    {
      v27 = 1u;
    }
  }
  else
  {
    v27 = 0;
  }
  if (v20 < a2)
  {
    v28 = ~v20 + a2;
    if (v24 < 4)
    {
      if ((_DWORD)v24)
      {
        v30 = v28 & ~(-1 << (8 * v24));
        bzero(a1, v24);
        if ((_DWORD)v24 == 3)
        {
          *(_WORD *)a1 = v30;
          a1[2] = BYTE2(v30);
        }
        else if ((_DWORD)v24 == 2)
        {
          *(_WORD *)a1 = v30;
        }
        else
        {
          *a1 = v30;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v28;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X26 }
}

void sub_241375D5C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x241375C64);
}

void sub_241375D64()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x241375C64);
}

void sub_241375D74()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x241375C64);
}

void type metadata accessor for ContentLookup4()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_241375D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = sub_2414B53B0();
  v4 = v1;
  return MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v2, &v4);
}

uint64_t sub_241375DD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  __int128 v7;

  v2 = sub_2414B3A90();
  v3 = sub_2414B3A90();
  v7 = *(_OWORD *)(a1 + 32);
  v4 = MEMORY[0x24BDEF3E0];
  v6[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v2, &v7);
  v6[1] = MEMORY[0x24BDF5138];
  return MEMORY[0x242695AE8](v4, v3, v6);
}

uint64_t sub_241375E64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = sub_2414B3A90();
  v4 = sub_2414B3A90();
  v5 = sub_2414B3A90();
  v11 = *(_OWORD *)(a1 + 40);
  v6 = MEMORY[0x24BDEF3E0];
  v7 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v3, &v11);
  v10[0] = v2;
  v10[1] = MEMORY[0x24BDF5138];
  v9[0] = v7;
  v9[1] = MEMORY[0x242695AE8](v6, v4, v10);
  return MEMORY[0x242695AE8](v6, v5, v9);
}

uint64_t sub_241375F30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  __int128 v11;
  __int128 v12;

  v2 = sub_2414B3A90();
  v3 = sub_2414B3A90();
  v4 = sub_2414B3A90();
  v5 = sub_2414B3A90();
  v12 = *(_OWORD *)(a1 + 48);
  v6 = MEMORY[0x24BDEF3E0];
  v7 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v2, &v12);
  v11 = *(_OWORD *)(a1 + 64);
  v10[0] = v7;
  v10[1] = MEMORY[0x242695AE8](v6, v3, &v11);
  v9[0] = MEMORY[0x242695AE8](v6, v4, v10);
  v9[1] = MEMORY[0x24BDF5138];
  return MEMORY[0x242695AE8](v6, v5, v9);
}

double sub_241376024(double *a1, CGFloat *a2)
{
  double v3;
  double v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  double result;
  CGRect v9;
  CGRect v10;

  v3 = *a1;
  v4 = a1[1];
  v9.origin.x = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v9.origin.y = v5;
  v9.size.width = v6;
  v9.size.height = v7;
  v10.origin.x = v3 - CGRectGetWidth(v9) * 0.5;
  *a2 = v10.origin.x;
  v10.origin.y = v5;
  v10.size.width = v6;
  v10.size.height = v7;
  result = v4 - CGRectGetHeight(v10) * 0.5;
  a2[1] = result;
  return result;
}

double CGRect.center.setter(double a1, double a2)
{
  CGFloat *v2;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  double result;
  CGRect v9;
  CGRect v10;

  v9.origin.x = *v2;
  v5 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  v9.origin.y = v5;
  v9.size.width = v6;
  v9.size.height = v7;
  v10.origin.x = a1 - CGRectGetWidth(v9) * 0.5;
  *v2 = v10.origin.x;
  v10.origin.y = v5;
  v10.size.width = v6;
  v10.size.height = v7;
  result = a2 - CGRectGetHeight(v10) * 0.5;
  v2[1] = result;
  return result;
}

double (*CGRect.center.modify(uint64_t a1))(uint64_t a1)
{
  CGFloat *v1;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v10;
  CGRect v11;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v10.origin.x = *v1;
  v10.origin.y = v4;
  v10.size.width = v5;
  v10.size.height = v6;
  MidX = CGRectGetMidX(v10);
  v11.origin.x = v3;
  v11.origin.y = v4;
  v11.size.width = v5;
  v11.size.height = v6;
  MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_241376190;
}

double sub_241376190(uint64_t a1)
{
  CGFloat *v1;
  double v2;
  double v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  double result;
  CGRect v8;
  CGRect v9;

  v1 = *(CGFloat **)(a1 + 16);
  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  v8.origin.x = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8.origin.y = v4;
  v8.size.width = v5;
  v8.size.height = v6;
  v9.origin.x = v2 - CGRectGetWidth(v8) * 0.5;
  *v1 = v9.origin.x;
  v9.origin.y = v4;
  v9.size.width = v5;
  v9.size.height = v6;
  result = v3 - CGRectGetHeight(v9) * 0.5;
  v1[1] = result;
  return result;
}

double CGRect.area.getter(double a1, double a2, double a3, double a4)
{
  return a3 * a4;
}

double CGSize.area.getter(double a1, double a2)
{
  return a1 * a2;
}

__C::CGRect __swiftcall CGRect.applyingLayoutDirection(in:bounds:)(UIView *in, __C::CGRect_optional *bounds)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat MinY;
  CGFloat v9;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  UIUserInterfaceLayoutDirection v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double MaxX;
  double v22;
  CGFloat v23;
  double v24;
  double v25;
  double v26;
  double v27;
  _QWORD v28[5];
  _BYTE v29[40];
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  __C::CGRect result;

  v6 = v5;
  v7 = v4;
  MinY = v3;
  v9 = v2;
  sub_2412FFE80((uint64_t)bounds, (uint64_t)v28);
  v12 = *(double *)v28;
  v13 = *(double *)&v28[1];
  v14 = *(double *)&v28[2];
  v15 = *(double *)&v28[3];
  v16 = -[UIView effectiveUserInterfaceLayoutDirection](in, sel_effectiveUserInterfaceLayoutDirection);
  sub_2412FFE80((uint64_t)bounds, (uint64_t)v29);
  if (v29[32] == 1)
  {
    -[UIView bounds](in, sel_bounds);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    v15 = v20;
  }
  if (v16 == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    v30.origin.x = v12;
    v30.origin.y = v13;
    v30.size.width = v14;
    v30.size.height = v15;
    MaxX = CGRectGetMaxX(v30);
    v31.origin.x = v9;
    v31.origin.y = MinY;
    v31.size.width = v7;
    v31.size.height = v6;
    v22 = MaxX - CGRectGetMinX(v31);
    v32.origin.x = v9;
    v32.origin.y = MinY;
    v32.size.width = v7;
    v32.size.height = v6;
    v23 = v22 - CGRectGetWidth(v32);
    v33.origin.x = v9;
    v33.origin.y = MinY;
    v33.size.width = v7;
    v33.size.height = v6;
    MinY = CGRectGetMinY(v33);
    v9 = v23;
  }
  v24 = v9;
  v25 = MinY;
  v26 = v7;
  v27 = v6;
  result.size.height = v27;
  result.size.width = v26;
  result.origin.y = v25;
  result.origin.x = v24;
  return result;
}

__C::CGRect __swiftcall CGRect.removingLayoutDirection(in:bounds:)(UIView *in, __C::CGRect_optional *bounds)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  UIUserInterfaceLayoutDirection v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double MaxX;
  double v22;
  double v23;
  double v24;
  double v25;
  _QWORD v26[5];
  _BYTE v27[40];
  CGRect v28;
  CGRect v29;
  __C::CGRect result;

  v6 = v5;
  v7 = v4;
  v8 = v3;
  v9 = v2;
  sub_2412FFE80((uint64_t)bounds, (uint64_t)v26);
  v12 = *(double *)v26;
  v13 = *(double *)&v26[1];
  v14 = *(double *)&v26[2];
  v15 = *(double *)&v26[3];
  v16 = -[UIView effectiveUserInterfaceLayoutDirection](in, sel_effectiveUserInterfaceLayoutDirection);
  sub_2412FFE80((uint64_t)bounds, (uint64_t)v27);
  if (v27[32] == 1)
  {
    -[UIView bounds](in, sel_bounds);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    v15 = v20;
  }
  if (v16 == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    v28.origin.x = v12;
    v28.origin.y = v13;
    v28.size.width = v14;
    v28.size.height = v15;
    MaxX = CGRectGetMaxX(v28);
    v29.origin.x = v9;
    v29.origin.y = v8;
    v29.size.width = v7;
    v29.size.height = v6;
    v9 = MaxX - CGRectGetMaxX(v29);
  }
  v22 = v9;
  v23 = v8;
  v24 = v7;
  v25 = v6;
  result.size.height = v25;
  result.size.width = v24;
  result.origin.y = v23;
  result.origin.x = v22;
  return result;
}

BOOL sub_241376460(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;
  _BOOL8 result;
  double v8;
  double v9;
  double v10;

  if (a1 == a3)
    goto LABEL_6;
  v4 = vabdd_f64(a1, a3);
  v5 = fabs(a1);
  v6 = fabs(a3);
  if (v5 <= v6)
    v5 = v6;
  result = 1;
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) != 0 && v4 <= fmax(v5 * 2.22044605e-16, COERCE_DOUBLE(1)))
  {
LABEL_6:
    if (a2 == a4)
    {
      return 0;
    }
    else
    {
      v8 = vabdd_f64(a2, a4);
      if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
      {
        v9 = fabs(a2);
        v10 = fabs(a4);
        if (v9 <= v10)
          v9 = v10;
        return v8 > fmax(v9 * 2.22044605e-16, COERCE_DOUBLE(1));
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

BOOL sub_241376510(double a1, double a2)
{
  double v3;
  double v4;
  double v5;

  if (a1 == a2)
    return 0;
  v3 = vabdd_f64(a1, a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
    return 1;
  v4 = fabs(a1);
  v5 = fabs(a2);
  if (v4 <= v5)
    v4 = v5;
  return v3 > fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

double static CGSize.greatestFiniteSize.getter()
{
  return 1.79769313e308;
}

double CGSize.with(minWidth:)(double result, double a2)
{
  if (result <= a2)
    return a2;
  return result;
}

double CGSize.with(minHeight:)(double a1, double a2)
{
  return a2;
}

double CGSize.scaledToHeight(_:)(double a1, double a2, double a3)
{
  return a1 / a3 * a2;
}

double CGSize.scaledToWidth(_:)(double a1, double a2)
{
  return a1 / a2 * a2;
}

double CGPoint.distance(to:)(double a1, double a2, double a3, double a4)
{
  return sqrt((a3 - a1) * (a3 - a1) + (a4 - a2) * (a4 - a2));
}

double _sSo7CGPointV11MediaCoreUIE23applyingLayoutDirection_8inBoundsABSo015UIUserInterfacefG0V_So6CGRectVtF_0(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  double MaxX;
  CGRect v13;

  if (a1 == 1)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&a2);
    v13.origin.x = a2;
    v13.origin.y = a3;
    v13.size.width = a4;
    v13.size.height = a5;
    return MaxX - (a6 - CGRectGetMinX(v13));
  }
  return a6;
}

void sub_241376664(CGFloat *a1@<X0>, CGFloat *a2@<X8>)
{
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v9;
  CGRect v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v9.origin.x = *a1;
  v9.origin.y = v4;
  v9.size.width = v5;
  v9.size.height = v6;
  MidX = CGRectGetMidX(v9);
  v10.origin.x = v3;
  v10.origin.y = v4;
  v10.size.width = v5;
  v10.size.height = v6;
  MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

UIEdgeInsets __swiftcall UIEdgeInsets.init(directionalEdgeInsets:layoutDirection:)(UIEdgeInsets directionalEdgeInsets, UIUserInterfaceLayoutDirection layoutDirection)
{
  double left;
  double v3;

  if (layoutDirection == UIUserInterfaceLayoutDirectionRightToLeft)
    left = directionalEdgeInsets.left;
  else
    left = directionalEdgeInsets.right;
  if (layoutDirection == UIUserInterfaceLayoutDirectionRightToLeft)
    directionalEdgeInsets.left = directionalEdgeInsets.right;
  v3 = left;
  directionalEdgeInsets.right = v3;
  return directionalEdgeInsets;
}

CALayerCornerCurve __swiftcall UIView.Corner.curve(in:)(__C::CGRect in)
{
  uint64_t v1;
  int v2;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double v7;
  double v8;
  BOOL v9;
  id *v10;
  CGRect v12;

  v2 = *(unsigned __int8 *)(v1 + 8);
  if (v2 == 2)
  {
    height = in.size.height;
    width = in.size.width;
    y = in.origin.y;
    x = in.origin.x;
    v7 = CGRectGetWidth((CGRect)in);
    v12.origin.x = x;
    v12.origin.y = y;
    v12.size.width = width;
    v12.size.height = height;
    v8 = CGRectGetHeight(v12);
    v9 = sub_2412FE7EC(v7, v8);
  }
  else
  {
    v9 = (v2 & 1) == 0;
  }
  v10 = (id *)MEMORY[0x24BDE58E0];
  if (!v9)
    v10 = (id *)MEMORY[0x24BDE58E8];
  return (CALayerCornerCurve)*v10;
}

void (*UIView.corner.modify(uint64_t a1))(_QWORD *a1)
{
  void *v1;

  *(_QWORD *)(a1 + 24) = v1;
  UIView.Corner.init(view:insetBy:)(v1, (double *)a1, 0.0);
  return sub_2413767B8;
}

void sub_2413767B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  v1 = a1[1];
  v2 = a1[2];
  v3[0] = *a1;
  v3[1] = v1;
  v3[2] = v2;
  UIView.corner.setter((uint64_t)v3);
}

uint64_t UIView.Corner.radius.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*UIView.Corner.radius.modify())()
{
  return CGSizeMake;
}

uint64_t UIView.Corner.mask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UIView.Corner.mask.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UIView.Corner.mask.modify())()
{
  return CGSizeMake;
}

uint64_t UIView.Corner.init(radiusValue:continuous:mask:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _BOOL4 v5;
  _BOOL4 v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (a2 & 1) == 0;
  v6 = *(double *)&result > 0.0;
  v7 = !v5 || !v6;
  if (v5 && v6)
    v8 = result;
  else
    v8 = 0;
  v9 = 3;
  if (v7)
    a4 = 0;
  else
    v9 = a3 & 1;
  *a5 = v8;
  a5[1] = v9;
  a5[2] = a4;
  return result;
}

uint64_t UIView.Corner.masked(to:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = result;
  return result;
}

uint64_t UIView.Corner.Radius.init(_:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  _BOOL4 v3;
  _BOOL4 v4;
  BOOL v5;
  uint64_t v6;
  char v7;

  v3 = (a2 & 1) == 0;
  v4 = *(double *)&result > 0.0;
  v5 = !v3 || !v4;
  if (v3 && v4)
    v6 = result;
  else
    v6 = 0;
  if (v5)
    v7 = 3;
  else
    v7 = 1;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = v7;
  return result;
}

void UIView.Corner.Radius.init(view:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v4 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v4, sel_cornerRadius);
  v6 = v5;

  if (v6 <= 0.0)
  {

    *(_QWORD *)a2 = 0;
    v10 = 3;
  }
  else
  {
    objc_msgSend(a1, sel_bounds);
    if (v8 >= v7)
      v9 = v7;
    else
      v9 = v8;
    if (sub_2412FE7EC(v9 * 0.5, v6))
    {

      *(_QWORD *)a2 = 0;
      v10 = 2;
    }
    else
    {
      v11 = objc_msgSend(a1, sel_layer);
      v12 = objc_msgSend(v11, sel_cornerCurve);

      v13 = sub_2414B4D68();
      v15 = v14;
      if (v13 == sub_2414B4D68() && v15 == v16)
        v18 = 1;
      else
        v18 = sub_2414B57D0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v18 & 1;
      *(double *)a2 = v6;
    }
  }
  *(_BYTE *)(a2 + 8) = v10;
}

BOOL static UIView.Corner.Radius.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
    return v3 == 2;
  if (v3 == 2 || *(double *)a1 != *(double *)a2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL sub_241376A74(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
    return v3 == 2;
  if (v3 == 2 || *(double *)a1 != *(double *)a2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL static UIView.Corner.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  _BOOL8 result;
  _BOOL4 v7;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
  {
    if (v4 == 2)
      return v3 == *(_QWORD *)(a2 + 16);
    return 0;
  }
  if (v4 == 2)
    return 0;
  result = 0;
  v7 = (v2 & 1) == 0;
  if (*(double *)a1 == *(double *)a2 && ((v7 ^ v4) & 1) != 0)
    return v3 == *(_QWORD *)(a2 + 16);
  return result;
}

double sub_241376B30()
{
  double result;

  *(_QWORD *)&xmmword_257136E80 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  *(__int128 *)((char *)&xmmword_257136E80 + 8) = xmmword_2414BD5F0;
  result = 0.0;
  *(_OWORD *)&algn_257136E90[8] = xmmword_2414BD600;
  return result;
}

uint64_t sub_241376B88(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
  {
    if ((a1 & 2) != 0)
    {
      v1 = 3;
      if ((a1 & 4) == 0)
        goto LABEL_5;
    }
    else
    {
      v1 = 1;
      if ((a1 & 4) == 0)
        goto LABEL_5;
    }
LABEL_4:
    v1 |= 4uLL;
    goto LABEL_5;
  }
  if ((a1 & 2) == 0)
  {
    v1 = 0;
    if ((a1 & 4) == 0)
      goto LABEL_5;
    goto LABEL_4;
  }
  v1 = 2;
  if ((a1 & 4) != 0)
    goto LABEL_4;
LABEL_5:
  if ((a1 & 8) != 0)
    return v1 | 8;
  return v1;
}

UIEdgeInsets __swiftcall UIEdgeInsets.applyingLayoutDirection(_:)(UIUserInterfaceLayoutDirection a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  UIEdgeInsets result;

  if (a1 == UIUserInterfaceLayoutDirectionRightToLeft)
    v3 = v1;
  else
    v3 = v2;
  if (a1 == UIUserInterfaceLayoutDirectionRightToLeft)
    v1 = v2;
  v4 = v3;
  result.right = v4;
  result.left = v1;
  return result;
}

UIEdgeInsets __swiftcall UIEdgeInsets.negated()()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  UIEdgeInsets result;

  v4 = -v0;
  v5 = -v1;
  v6 = -v2;
  v7 = -v3;
  result.right = v7;
  result.bottom = v6;
  result.left = v5;
  result.top = v4;
  return result;
}

uint64_t UIEdgeInsets.hash(into:)()
{
  sub_2414B58F0();
  sub_2414B58F0();
  sub_2414B58F0();
  return sub_2414B58F0();
}

uint64_t UIEdgeInsets.hashValue.getter()
{
  sub_2414B58CC();
  UIEdgeInsets.hash(into:)();
  return sub_2414B58FC();
}

__n128 sub_241376CE4@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result;
  __int128 v2;

  result = *(__n128 *)MEMORY[0x24BEBE158];
  v2 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *a1 = *MEMORY[0x24BEBE158];
  a1[1] = v2;
  return result;
}

float64x2_t sub_241376CF8@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result;
  float64x2_t v4;

  result = vaddq_f64(*a1, *a2);
  v4 = vaddq_f64(a1[1], a2[1]);
  *a3 = result;
  a3[1] = v4;
  return result;
}

float64x2_t sub_241376D10(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result;
  float64x2_t v3;

  result = vaddq_f64(*a2, *a1);
  v3 = vaddq_f64(a2[1], a1[1]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

float64x2_t sub_241376D28@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result;
  float64x2_t v4;

  result = vsubq_f64(*a1, *a2);
  v4 = vsubq_f64(a1[1], a2[1]);
  *a3 = result;
  a3[1] = v4;
  return result;
}

float64x2_t sub_241376D40(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result;
  float64x2_t v3;

  result = vsubq_f64(*a1, *a2);
  v3 = vsubq_f64(a1[1], a2[1]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241376D58()
{
  sub_2414B58CC();
  UIEdgeInsets.hash(into:)();
  return sub_2414B58FC();
}

uint64_t sub_241376DBC()
{
  return UIEdgeInsets.hash(into:)();
}

uint64_t sub_241376DC8()
{
  sub_2414B58CC();
  UIEdgeInsets.hash(into:)();
  return sub_2414B58FC();
}

uint64_t UIOffset.hash(into:)()
{
  sub_2414B58F0();
  return sub_2414B58F0();
}

uint64_t UIOffset.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58F0();
  sub_2414B58F0();
  return sub_2414B58FC();
}

uint64_t sub_241376EDC()
{
  sub_2414B58CC();
  UIOffset.hash(into:)();
  return sub_2414B58FC();
}

uint64_t sub_241376F2C()
{
  return UIOffset.hash(into:)();
}

uint64_t sub_241376F34()
{
  sub_2414B58CC();
  UIOffset.hash(into:)();
  return sub_2414B58FC();
}

uint64_t sub_241376F80()
{
  return sub_2412C8030(&qword_2571244B8, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, MEMORY[0x24BEBCBA8]);
}

uint64_t sub_241376FAC()
{
  return sub_2412C8030(&qword_2571244C0, (uint64_t (*)(uint64_t))type metadata accessor for UIOffset, MEMORY[0x24BEBD228]);
}

double sub_241376FD8@<D0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;

  UIView.Corner.init(view:insetBy:)(*a1, (double *)&v5, 0.0);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

void sub_241377020(__int128 *a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *a1;
  v3 = v1;
  UIView.corner.setter((uint64_t)&v2);
}

uint64_t _s6CornerV6RadiusOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t _s6CornerV6RadiusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t View.background<A>(_:ignoresSafeAreaEdges:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[3];

  v47 = a1;
  v51 = a5;
  v52 = a6;
  v42 = a2;
  v46 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v45 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = v10;
  v44 = (uint64_t)&v40 - v11;
  v54 = sub_2414B3C7C();
  v12 = sub_2414B3514();
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - v16;
  v18 = sub_2414B53B0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v40 - v20;
  v22 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2414B3A90();
  v49 = *(_QWORD *)(v26 - 8);
  v50 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v53 = (uint64_t)&v40 - v28;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v21, v47, v18, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v29 = v44;
    v30 = v51;
    sub_2412FBF34(v48, a3, v44);
    v31 = v45;
    sub_2412EEA1C(v29, a3, v45);
    v32 = MEMORY[0x242695AE8](MEMORY[0x24BDF06D0], v54);
    v58[0] = v30;
    v58[1] = v32;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v58);
    sub_2412F1584(v31, v12, a3);
    v33 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v33(v31, a3);
    v33(v29, a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v21, a4);
    v30 = v51;
    sub_2414B412C();
    v34 = MEMORY[0x242695AE8](MEMORY[0x24BDF06D0], v54);
    v55[0] = v30;
    v55[1] = v34;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v55);
    sub_2412FBF34((uint64_t)v14, v12, (uint64_t)v17);
    v35 = *(void (**)(char *, uint64_t))(v41 + 8);
    v35(v14, v12);
    sub_2412EEA1C((uint64_t)v17, v12, (uint64_t)v14);
    sub_24132F340((uint64_t)v14, v12);
    v35(v14, v12);
    v35(v17, v12);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, a4);
  }
  v36 = MEMORY[0x242695AE8](MEMORY[0x24BDF06D0], v54);
  v57[0] = v30;
  v57[1] = v36;
  v56[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v57);
  v56[1] = v30;
  v37 = v50;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v50, v56);
  v38 = v53;
  sub_2412EEA1C(v53, v37, v52);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v38, v37);
}

uint64_t sub_2413774F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_2414B3C7C();
  v3 = sub_2414B3514();
  v4 = sub_2414B3A90();
  v7[0] = v1;
  v7[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF06D0], v2);
  v6[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v7);
  v6[1] = v1;
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v4, v6);
}

ValueMetadata *type metadata accessor for OffsetEffect()
{
  return &type metadata for OffsetEffect;
}

unint64_t sub_2413775B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571244C8;
  if (!qword_2571244C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244D0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEC5B8], v1);
    atomic_store(result, (unint64_t *)&qword_2571244C8);
  }
  return result;
}

uint64_t sub_2413775FC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD v5[2];

  *(double *)v5 = a3;
  *(double *)&v5[1] = a4;
  return MEMORY[0x242693DC0](v5, a1, &type metadata for OffsetEffect, a2);
}

CGFloat sub_241377630@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double *v3;
  CGFloat result;
  __int128 v6;
  __int128 v7;
  CGAffineTransform v8;

  CGAffineTransformMakeTranslation(&v8, *v3 * a2, v3[1] * a3);
  result = v8.a;
  v6 = *(_OWORD *)&v8.c;
  v7 = *(_OWORD *)&v8.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v8.a;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

__n128 sub_24137768C@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

__n128 sub_241377698(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  *v1 = *a1;
  return result;
}

__n128 (*sub_2413776A4(uint64_t a1))(__n128 *a1)
{
  _OWORD *v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *v1;
  return sub_2413776C0;
}

__n128 sub_2413776C0(__n128 *a1)
{
  __n128 result;

  result = *a1;
  *(__n128 *)a1[1].n128_u64[0] = *a1;
  return result;
}

unint64_t sub_2413776D4()
{
  unint64_t result;

  result = qword_2571244D8;
  if (!qword_2571244D8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BD788, &type metadata for OffsetEffect);
    atomic_store(result, (unint64_t *)&qword_2571244D8);
  }
  return result;
}

unint64_t sub_24137771C()
{
  unint64_t result;

  result = qword_257125470;
  if (!qword_257125470)
  {
    result = MEMORY[0x242695AE8](&unk_2414BD818, &type metadata for OffsetEffect);
    atomic_store(result, (unint64_t *)&qword_257125470);
  }
  return result;
}

uint64_t sub_241377760()
{
  sub_241377888();
  return sub_2414B3370();
}

uint64_t sub_2413777C8()
{
  sub_241377888();
  return sub_2414B334C();
}

uint64_t sub_241377830()
{
  sub_241377888();
  return sub_2414B3364();
}

unint64_t sub_241377888()
{
  unint64_t result;

  result = qword_2571244E0;
  if (!qword_2571244E0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BD7D8, &type metadata for OffsetEffect);
    atomic_store(result, (unint64_t *)&qword_2571244E0);
  }
  return result;
}

uint64_t sub_2413778CC()
{
  sub_24135B934();
  return sub_2414B3838();
}

uint64_t sub_241377900@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24135B934();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24137794C()
{
  sub_24135B934();
  return sub_2414B3844();
}

BOOL static MotionCacheDownloadPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MotionCacheDownloadPolicy.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t MotionCacheDownloadPolicy.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t MCUINamespace<A>.motionCacheDownload(policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char v9;
  _BYTE v11[16];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2, v3, v5);
  swift_getKeyPath();
  v11[15] = v9;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_241377AE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24135B934();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241377B30()
{
  sub_24135B934();
  return sub_2414B3844();
}

uint64_t sub_241377B78()
{
  sub_241377C88();
  return sub_2414B3340();
}

uint64_t View.motionCacheDownload(policy:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[15];
  char v12;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v11[-v8]);
  v12 = (char)a1;
  MCUINamespace<A>.motionCacheDownload(policy:)((uint64_t)&v12, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_241377C88()
{
  unint64_t result;

  result = qword_2571244E8;
  if (!qword_2571244E8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionCacheDownloadPolicy, &type metadata for MotionCacheDownloadPolicy);
    atomic_store(result, (unint64_t *)&qword_2571244E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MotionCacheDownloadPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241377D18 + 4 * byte_2414BD875[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241377D4C + 4 * byte_2414BD870[v4]))();
}

uint64_t sub_241377D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241377D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241377D5CLL);
  return result;
}

uint64_t sub_241377D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241377D70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241377D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241377D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheDownloadPolicy()
{
  return &type metadata for MotionCacheDownloadPolicy;
}

uint64_t sub_241377D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_241377DF8();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_241377DF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571244F8;
  if (!qword_2571244F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_2571244F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheDownloadPolicyEnvironmentKey()
{
  return &type metadata for MotionCacheDownloadPolicyEnvironmentKey;
}

uint64_t View.mcui.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t EnvironmentValues.mcui.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2414B382C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t EnvironmentValues.mcui.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, a1, v3);
}

uint64_t sub_241377F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = type metadata accessor for MCUINamespace(0, v5, a3, a4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t, double))(v10 + 16))((char *)&v12 - v8, a1, v7);
  return View.mcui.setter((uint64_t)v9, v5);
}

uint64_t View.mcui.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t))(v5 + 8))(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, a1, a2);
}

void (*View.mcui.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v8 = type metadata accessor for MCUINamespace(0, a2, v6, v7);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[4] = malloc(v10);
  v11 = malloc(v10);
  v5[5] = v11;
  View.mcui.getter(a2, (uint64_t)v11);
  return sub_2413780C0;
}

void sub_2413780C0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v8 = *v2;
    v7 = v2[1];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v4, v5);
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v7, v3, v8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v11 = *v2;
    v10 = v2[1];
    v12 = *(_QWORD *)(*v2 - 8);
    (*(void (**)(uint64_t, _QWORD))(v12 + 8))(v10, *v2);
    (*(void (**)(uint64_t, void *, uint64_t))(v12 + 32))(v10, v4, v11);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t type metadata accessor for MCUINamespace(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MCUINamespace);
}

void (*EnvironmentValues.mcui.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0) - 8) + 64);
  v3[1] = malloc(v4);
  v5 = malloc(v4);
  v3[2] = v5;
  v6 = sub_2414B382C();
  v3[3] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[4] = v7;
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v5, v1, v6);
  return sub_24137823C;
}

void sub_24137823C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (*a1)[4];
  v5 = (void *)(*a1)[1];
  v6 = (void *)(*a1)[2];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    sub_2413782EC((*a1)[2], (uint64_t)v5);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v7, v5, v3);
    sub_241314A7C((uint64_t)v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(**a1, v3);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v7, v6, v3);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t sub_2413782EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Text.mcui.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  v5 = a3 & 1;
  *(_BYTE *)(a5 + 16) = v5;
  *(_QWORD *)(a5 + 24) = a4;
  sub_241307638(a1, a2, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_241378368(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_BYTE *)(a2 + 16);
  sub_241307638(*(_QWORD *)a1, v4, v5);
  swift_bridgeObjectRetain();
  sub_2412F6D78(v7, v8, v9);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

__n128 Text.mcui.setter(__n128 *a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  unint64_t v4;
  __n128 result;

  sub_2412F6D78(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  swift_bridgeObjectRelease();
  v3 = a1[1].n128_u8[0];
  v4 = a1[1].n128_u64[1];
  result = *a1;
  *(__n128 *)v1 = *a1;
  *(_BYTE *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  return result;
}

void (*Text.mcui.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_BYTE *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  *v3 = *(_QWORD *)v1;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  v3[3] = v7;
  v3[4] = v1;
  sub_241307638(v4, v5, v6);
  swift_bridgeObjectRetain();
  return sub_24137849C;
}

void sub_24137849C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 32);
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)v2;
    v5 = *(_QWORD *)(v2 + 8);
    v6 = *(_BYTE *)(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    v8 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v10 = *(_BYTE *)(v3 + 16);
    sub_241307638(*(_QWORD *)v2, v5, v6);
    swift_bridgeObjectRetain();
    sub_2412F6D78(v8, v9, v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v5;
    *(_BYTE *)(v3 + 16) = v6;
    *(_QWORD *)(v3 + 24) = v7;
    sub_2412F6D78(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2412F6D78(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
    swift_bridgeObjectRelease();
    v11 = *(_BYTE *)(v2 + 16);
    v12 = *(_QWORD *)(v2 + 24);
    *(_OWORD *)v3 = *(_OWORD *)v2;
    *(_BYTE *)(v3 + 16) = v11;
    *(_QWORD *)(v3 + 24) = v12;
  }
  free((void *)v2);
}

uint64_t (*CALayer.mcui.modify(_QWORD *a1))()
{
  void *v1;
  id v2;

  *a1 = v1;
  v2 = v1;
  return j__s11MediaCoreUI14AnimationGroupC8AnimatorVwxx;
}

id UITabBarController.mcui.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  *a1 = v1;
  return v1;
}

void UITabBarController.mcui.setter(id *a1)
{

}

void (*UITabBarController.mcui.modify(_QWORD *a1))(id *a1)
{
  void *v1;
  id v2;

  *a1 = v1;
  v2 = v1;
  return destroy for AnimationGroup.Animator;
}

uint64_t (*UISplitViewController.mcui.modify(_QWORD *a1))()
{
  void *v1;
  id v2;

  *a1 = v1;
  v2 = v1;
  return j__s11MediaCoreUI14AnimationGroupC8AnimatorVwxx;
}

uint64_t sub_241378650@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return View.mcui.getter(*(_QWORD *)(a2 + a1 - 16), a3);
}

uint64_t sub_24137867C()
{
  return 16;
}

__n128 sub_241378688(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24137869C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  sub_241307638(v3, v2, v4);
  return swift_bridgeObjectRetain();
}

id sub_2413786DC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_2413786F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_241378760(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2413787D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_241378800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_241378830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_241378860(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_241378910 + 4 * byte_2414BD9B0[(v7 - 1)]))();
}

void sub_241378960(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t static MCUINamespace<A>.parallaxHeaderAligned.getter()
{
  uint64_t result;

  type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior()
{
  return objc_opt_self();
}

uint64_t MCUINamespace<A>.parallaxEffect(scrollTargetBehaviors:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MCUINamespace<A>.parallaxEffect(scrollTargetBehaviors:autoAdjustsNavigationBarTint:)(a1, 0, a2, a3);
}

uint64_t MCUINamespace<A>.parallaxEffect(scrollTargetBehaviors:autoAdjustsNavigationBarTint:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124520);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ParallaxEffectViewModifier();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_24137C390(v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  swift_storeEnumTagMultiPayload();
  sub_241378D08(v14, v16, a2, (uint64_t)v9, (uint64_t)v12);
  MEMORY[0x242693DC0](v12, *(_QWORD *)(a3 + 16), v10, a4);
  return sub_24137C48C((uint64_t)v12);
}

uint64_t type metadata accessor for ParallaxEffectViewModifier()
{
  uint64_t result;

  result = qword_254382760;
  if (!qword_254382760)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241378D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  v7 = (int *)type metadata accessor for ParallaxEffectViewModifier();
  sub_2412EAEA4(a4, a5 + v7[6], &qword_257124520);
  v8 = (_OWORD *)(a5 + v7[7]);
  type metadata accessor for ParallaxContext();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2414BD9E0;
  *(_QWORD *)(v9 + 32) = sub_2414B4654();
  *(_BYTE *)(v9 + 40) = 1;
  *(_QWORD *)(v9 + 48) = 0;
  sub_2414B2BA8();
  sub_2414B4798();
  *v8 = v13;
  v10 = a5 + v7[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124660);
  sub_2414B4798();
  *(_OWORD *)v10 = v13;
  *(_QWORD *)(v10 + 16) = v14;
  v11 = a5 + v7[9];
  result = sub_2414B4798();
  *(_BYTE *)v11 = v13;
  *(_QWORD *)(v11 + 8) = *((_QWORD *)&v13 + 1);
  return result;
}

uint64_t sub_241378E44()
{
  uint64_t result;
  double v1;
  uint64_t v2;

  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  result = sub_2414B47A4();
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
    sub_2414B47A4();
    swift_getKeyPath();
    sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
    sub_2414B2B84();
    swift_release();
    swift_beginAccess();
    v1 = *(double *)(v2 + 16);
    result = swift_release();
    if (v1 < 0.0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571245B8);
      sub_2414B47A4();
      if (qword_2571209E8 != -1)
        swift_once();
      sub_2414B47A4();
      sub_2414B47A4();
      swift_getKeyPath();
      sub_2414B2B84();
      swift_release();
      swift_beginAccess();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2413790BC()
{
  uint64_t result;
  double v1;
  double v2;

  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  result = sub_2414B47A4();
  if (LOBYTE(v1) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571245B8);
    result = sub_2414B47A4();
    if (v1 != 0.0 || v2 != 0.0)
    {
      sub_2414B47A4();
      if (qword_2571209F0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
      sub_2414B47A4();
      swift_getKeyPath();
      sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
      sub_2414B2B84();
      swift_release();
      swift_beginAccess();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2413792AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)();
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (**v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t (**v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  unint64_t v134;
  unint64_t v135;
  id v136;
  id v137;
  __int128 v138;

  v3 = v2;
  v129 = a2;
  v120 = sub_2414B3850();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v118 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ParallaxEffectViewModifier();
  v109 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v110 = v7;
  v111 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_2414B3B2C();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124538);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124540);
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124548);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v100 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124550);
  MEMORY[0x24BDAC7A8](v101);
  v97 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124558);
  MEMORY[0x24BDAC7A8](v107);
  v104 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124560);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v112 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124568);
  MEMORY[0x24BDAC7A8](v108);
  v116 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124570);
  MEMORY[0x24BDAC7A8](v113);
  v117 = (uint64_t)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124578);
  MEMORY[0x24BDAC7A8](v126);
  v132 = (uint64_t)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124580);
  v127 = *(_QWORD *)(v22 - 8);
  v128 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v125 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124588);
  v123 = *(_QWORD *)(v24 - 8);
  v124 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v122 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2414B3520();
  v27 = sub_2414B3E50();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124590);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v12, a1, v28);
  v29 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v29 = v26;
  v29[8] = v27;
  v30 = sub_2414B3E50();
  v121 = (uint64_t *)((char *)v3 + *(int *)(v6 + 28));
  v31 = v121[1];
  *(_QWORD *)&v133 = *v121;
  *((_QWORD *)&v133 + 1) = v31;
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  v32 = v138;
  swift_getKeyPath();
  *(_QWORD *)&v133 = v32;
  v130 = sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  v33 = *(_QWORD *)(v32 + 48);
  swift_release();
  sub_2414B3B14();
  v34 = sub_24137D0DC();
  MEMORY[0x242693B20](v30, v33, 0, v9, v10, v34);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v9, v99);
  sub_2412CBE78((uint64_t)v12, &qword_257124538);
  v36 = *v3;
  v35 = v3[1];
  v37 = *(int *)(v6 + 32);
  v38 = (uint64_t)v3;
  v39 = (char *)v3 + v37;
  v40 = *((_QWORD *)v39 + 2);
  v133 = *(_OWORD *)v39;
  v134 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571245B8);
  sub_2414B47A4();
  if (v35)
    *(_OWORD *)(v35 + 16) = v138;
  *(_QWORD *)&v133 = v36;
  *((_QWORD *)&v133 + 1) = v35;
  *(_QWORD *)&v138 = v10;
  *((_QWORD *)&v138 + 1) = v34;
  swift_getOpaqueTypeConformance2();
  sub_24137D160();
  v41 = v100;
  v42 = v103;
  sub_2414B43CC();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v14, v42);
  v43 = v38;
  v44 = v38;
  v96 = v38;
  v45 = v111;
  sub_24137D1A4(v44, v111);
  v46 = (*(unsigned __int8 *)(v109 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v47 = swift_allocObject();
  sub_24137D1EC(v45, v47 + v46);
  v48 = v105;
  v49 = (uint64_t)v97;
  v50 = v106;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v97, v41, v106);
  v51 = (uint64_t (**)())(v49 + *(int *)(v101 + 36));
  *v51 = sub_24137D230;
  v51[1] = (uint64_t (*)())v47;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v50);
  sub_24137D1A4(v43, v45);
  v52 = swift_allocObject();
  sub_24137D1EC(v45, v52 + v46);
  v53 = v104;
  sub_2412DC3FC(v49, v104, &qword_257124550);
  v54 = (_QWORD *)(v53 + *(int *)(v107 + 36));
  *v54 = sub_241379F10;
  v54[1] = 0;
  v54[2] = sub_24137D270;
  v54[3] = v52;
  sub_2412CBE78(v49, &qword_257124550);
  v55 = v119;
  v56 = v118;
  v57 = v120;
  (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, *MEMORY[0x24BDEE5F0], v120);
  sub_24137D27C();
  v58 = v112;
  sub_2414B4444();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  sub_2412CBE78(v53, &qword_257124558);
  v59 = v96;
  sub_24137D1A4(v96, v45);
  v60 = swift_allocObject();
  sub_24137D1EC(v45, v60 + v46);
  v61 = v114;
  v62 = (uint64_t)v116;
  v63 = v115;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v116, v58, v115);
  v64 = (uint64_t (**)(uint64_t))(v62 + *(int *)(v108 + 36));
  *v64 = sub_24137D3F4;
  v64[1] = (uint64_t (*)(uint64_t))v60;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v63);
  sub_24137D1A4(v59, v45);
  v65 = swift_allocObject();
  sub_24137D1EC(v45, v65 + v46);
  v66 = v117;
  sub_2412DC3FC(v62, v117, &qword_257124568);
  v67 = (uint64_t (**)(uint64_t))(v66 + *(int *)(v113 + 36));
  *v67 = sub_24137D404;
  v67[1] = (uint64_t (*)(uint64_t))v65;
  sub_2412CBE78(v62, &qword_257124568);
  sub_24137D1A4(v59, v45);
  v68 = swift_allocObject();
  sub_24137D1EC(v45, v68 + v46);
  v69 = v132;
  sub_2412DC3FC(v66, v132, &qword_257124570);
  v70 = v126;
  v71 = (_QWORD *)(v69 + *(int *)(v126 + 36));
  *v71 = sub_24137D460;
  v71[1] = v68;
  sub_2412CBE78(v66, &qword_257124570);
  sub_2413790BC();
  v73 = v72;
  sub_241378E44();
  v75 = v74;
  v76 = v121;
  v77 = v121[1];
  *(_QWORD *)&v133 = *v121;
  *((_QWORD *)&v133 + 1) = v77;
  sub_2414B47A4();
  v78 = v138;
  swift_getKeyPath();
  *(_QWORD *)&v133 = v78;
  sub_2414B2B84();
  swift_release();
  v79 = *(_QWORD *)(v78 + 32);
  swift_retain();
  swift_release();
  v80 = v76[1];
  *(_QWORD *)&v133 = *v76;
  *((_QWORD *)&v133 + 1) = v80;
  sub_2414B47A4();
  v81 = v138;
  swift_getKeyPath();
  *(_QWORD *)&v133 = v81;
  sub_2414B2B84();
  swift_release();
  LOBYTE(v66) = *(_BYTE *)(v81 + 40);
  swift_release();
  LOBYTE(v62) = *(_BYTE *)(v59 + 16);
  v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD790]), sel_init);
  objc_msgSend(v82, sel_configureWithTransparentBackground);
  v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD790]), sel_init);
  v84 = (void *)objc_opt_self();
  v85 = v83;
  v86 = objc_msgSend(v84, sel_effectWithStyle_, 10);
  objc_msgSend(v85, sel_setBackgroundEffect_, v86);

  *(_QWORD *)&v133 = v73;
  *((_QWORD *)&v133 + 1) = v75;
  v134 = v79;
  LOBYTE(v135) = v66;
  BYTE1(v135) = v62;
  v136 = v82;
  v137 = v85;
  v87 = sub_24137D4AC();
  v88 = sub_24137D660();
  v89 = v125;
  v90 = v132;
  sub_2414B43E4();

  swift_release();
  sub_2412CBE78(v90, &qword_257124578);
  v91 = v76[1];
  *(_QWORD *)&v133 = *v76;
  *((_QWORD *)&v133 + 1) = v91;
  sub_2414B47A4();
  type metadata accessor for ParallaxContext();
  *(_QWORD *)&v133 = v70;
  *((_QWORD *)&v133 + 1) = &type metadata for ParallaxNavigationItemAdaptor;
  v134 = v87;
  v135 = v88;
  swift_getOpaqueTypeConformance2();
  v92 = v122;
  v93 = v128;
  sub_2414B41BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v89, v93);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v123 + 32))(v129, v92, v124);
}

uint64_t sub_241379EA0()
{
  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571245B8);
  return sub_2414B47B0();
}

uint64_t sub_241379F10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B3250();
  *a1 = v3;
  return result;
}

uint64_t sub_241379F38()
{
  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

uint64_t sub_24137A024(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for ParallaxEffectViewModifier();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  sub_24137D1A4(a2, (uint64_t)v6);
  if (v7 > 0.0)
  {
    sub_24137C48C((uint64_t)v6);
LABEL_4:
    v11 = (uint64_t *)(a2 + *(int *)(v4 + 28));
    v13 = *v11;
    v12 = v11[1];
    v35 = v13;
    v36 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
    sub_2414B47A4();
    v14 = v37;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v34 - 2) = v14;
    *((double *)&v34 - 1) = v7;
    v35 = v14;
    sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
    goto LABEL_6;
  }
  v8 = &v6[*(int *)(v4 + 36)];
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  LOBYTE(v35) = v9;
  v36 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  sub_24137C48C((uint64_t)v6);
  if ((v37 & 1) != 0)
    goto LABEL_4;
  v16 = (uint64_t *)(a2 + *(int *)(v4 + 28));
  v18 = *v16;
  v17 = v16[1];
  v35 = v18;
  v36 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  v19 = v37;
  v20 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v20);
  *(&v34 - 2) = v19;
  *(&v34 - 1) = 0x8000000000000001;
  v35 = v19;
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
LABEL_6:
  sub_2414B2B78();
  swift_release();
  swift_release();
  v21 = (uint64_t *)(a2 + *(int *)(v4 + 28));
  v22 = v21[1];
  v35 = *v21;
  v36 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  v23 = v37;
  swift_getKeyPath();
  v35 = v23;
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  v24 = *(unsigned __int8 *)(v23 + 40);
  swift_release();
  if (v7 > 0.8 != v24)
  {
    if (qword_2571207B0 != -1)
      swift_once();
    MEMORY[0x24BDAC7A8](qword_257124510);
    *(&v34 - 2) = a2;
    *((_BYTE *)&v34 - 8) = v25;
    sub_2414B3328();
  }
  v26 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
  MEMORY[0x242693E80](v26);
  sub_2414B4654();
  v27 = sub_24137A620(v7);
  swift_release();
  swift_release();
  v28 = v21[1];
  v35 = *v21;
  v36 = v28;
  sub_2414B47A4();
  v29 = v37;
  swift_getKeyPath();
  v35 = v29;
  sub_2414B2B84();
  swift_release();
  swift_retain();
  swift_release();
  LOBYTE(v29) = sub_2414B4624();
  swift_release();
  if ((v29 & 1) == 0)
  {
    v31 = v21[1];
    v35 = *v21;
    v36 = v31;
    sub_2414B47A4();
    v32 = v37;
    v33 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v33);
    *(&v34 - 2) = v32;
    *(&v34 - 1) = v27;
    v35 = v32;
    sub_2414B2B78();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24137A528()
{
  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

uint64_t sub_24137A620(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  float v18;
  void (*v19)(char *, uint64_t);
  int v20;
  float v21;
  int v22;
  float v23;
  float v24;
  double v25;
  float v26;
  float v27;
  double v28;
  float v29;
  float v30;
  float v31;
  double v32;
  float v33;
  double v34;
  _DWORD v36[4];
  float v37;
  int v38;
  float v39;
  int v40;
  int v41;
  int v42;
  double v43;
  double v44;
  double v45;

  v2 = sub_2414B4618();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B382C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 1.0)
    v10 = a1;
  else
    v10 = 1.0;
  if (a1 <= 0.0)
    v10 = 0.0;
  v45 = v10;
  v11 = 1.0 - v10;
  type metadata accessor for ParallaxEffectViewModifier();
  sub_2413458BC((uint64_t)v9);
  sub_2414B4684();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v39 = v18;
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  sub_2413458BC((uint64_t)v9);
  sub_2414B4684();
  v36[3] = v20;
  v37 = v21;
  v38 = v22;
  v19(v9, v6);
  v40 = v15;
  v41 = v13;
  v42 = v17;
  sub_2414B469C();
  v44 = v11 * v23;
  sub_2414B469C();
  v25 = v45;
  v44 = v44 + v45 * v24;
  v26 = v39;
  sub_2414B46B4();
  v28 = v11 * v27;
  v29 = v37;
  sub_2414B46B4();
  v43 = v28 + v25 * v30;
  sub_2414B46A8();
  v32 = v11 * v31;
  sub_2414B46A8();
  v34 = v32 + v25 * v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
  return MEMORY[0x242693F4C](v5, v44, v43, v34, v11 * v26 + v25 * v29);
}

uint64_t sub_24137A8B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v4 = type metadata accessor for ParallaxEffectViewModifier();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_24137D1A4(a2, (uint64_t)v7);
  sub_2414B4FC0();
  v13 = sub_2414B4FB4();
  v14 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v13;
  v15[3] = v16;
  v15[4] = v11;
  sub_24137D1EC((uint64_t)v7, (uint64_t)v15 + v14);
  sub_2413EE440((uint64_t)v10, (uint64_t)&unk_257124658, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_24137A9FC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 104) = a5;
  *(double *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 112) = type metadata accessor for ParallaxEffectViewModifier();
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  sub_2414B4FC0();
  *(_QWORD *)(v5 + 128) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24137AA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(double *)(v0 + 96);
  swift_release();
  sub_24137D1A4(v2, v1);
  if (v3 <= 0.0)
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = v4 + *(int *)(*(_QWORD *)(v0 + 112) + 36);
    v6 = *(_BYTE *)v5;
    v7 = *(_QWORD *)(v5 + 8);
    *(_BYTE *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 24) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
    sub_2414B47A4();
    sub_24137C48C(v4);
    if ((*(_BYTE *)(v0 + 136) & 1) == 0)
    {
      v14 = (uint64_t *)(*(_QWORD *)(v0 + 104) + *(int *)(*(_QWORD *)(v0 + 112) + 28));
      v16 = *v14;
      v15 = v14[1];
      *(_QWORD *)(v0 + 48) = v16;
      *(_QWORD *)(v0 + 56) = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
      sub_2414B47A4();
      v17 = *(_QWORD *)(v0 + 72);
      swift_getKeyPath();
      v18 = swift_task_alloc();
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = 0x7FEFFFFFFFFFFFFFLL;
      *(_QWORD *)(v0 + 88) = v17;
      sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
      goto LABEL_6;
    }
  }
  else
  {
    sub_24137C48C(*(_QWORD *)(v0 + 120));
  }
  v8 = *(double *)(v0 + 96);
  v9 = (uint64_t *)(*(_QWORD *)(v0 + 104) + *(int *)(*(_QWORD *)(v0 + 112) + 28));
  v11 = *v9;
  v10 = v9[1];
  *(_QWORD *)(v0 + 32) = v11;
  *(_QWORD *)(v0 + 40) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124598);
  sub_2414B47A4();
  v12 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  v13 = swift_task_alloc();
  *(_QWORD *)(v13 + 16) = v12;
  *(double *)(v13 + 24) = -v8;
  *(_QWORD *)(v0 + 80) = v12;
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
LABEL_6:
  sub_2414B2B78();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24137ACCC(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  uint64_t v21;

  v4 = type metadata accessor for ParallaxEffectViewModifier();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v9) = *a1;
  v11 = a2 + *(int *)(v4 + 36);
  v12 = *(_BYTE *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v20[16] = v12;
  v21 = v13;
  v20[15] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47B0();
  v14 = sub_2414B4FE4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  sub_24137D1A4(a2, (uint64_t)v7);
  sub_2414B4FC0();
  v15 = sub_2414B4FB4();
  v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v18;
  sub_24137D1EC((uint64_t)v7, v17 + v16);
  sub_2413EE440((uint64_t)v10, (uint64_t)&unk_257124648, v17);
  return swift_release();
}

uint64_t sub_24137AE50()
{
  uint64_t v0;

  sub_2414B4FC0();
  *(_QWORD *)(v0 + 16) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24137AEB8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24137AEEC(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  _BYTE *v30;
  char v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  __int128 v37;
  unint64_t v38;

  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, *(double *)v1);

  v5 = *(void **)(v1 + 32);
  v6 = (void *)*MEMORY[0x24BEBB368];
  v38 = sub_24136AA00();
  *(_QWORD *)&v37 = v4;
  v7 = v6;
  v8 = v4;
  v9 = objc_msgSend(v5, sel_titleTextAttributes);
  type metadata accessor for Key(0);
  sub_2412C8030(&qword_257121238, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B8A44);
  v10 = sub_2414B4C0C();

  v36 = v10;
  v33 = v38;
  v34 = v1;
  if (v38)
  {
    sub_2412D8D3C(&v37, v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24143CD1C(v35, v7, isUniquelyReferenced_nonNull_native);
    v36 = v10;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2412CBE78((uint64_t)&v37, &qword_25437D280);
    sub_2414A9A78((uint64_t)v7, v35);

    sub_2412CBE78((uint64_t)v35, &qword_25437D280);
  }
  v12 = (void *)sub_2414B4C00();
  swift_bridgeObjectRelease();
  v13 = v5;
  objc_msgSend(v5, sel_setTitleTextAttributes_, v12);

  v14 = *(void **)(v1 + 40);
  v38 = v33;
  *(_QWORD *)&v37 = v8;
  v15 = v8;
  v16 = v7;
  v17 = objc_msgSend(v14, sel_titleTextAttributes);
  v18 = sub_2414B4C0C();

  v36 = v18;
  if (v38)
  {
    sub_2412D8D3C(&v37, v35);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_24143CD1C(v35, v16, v19);
    v36 = v18;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2412CBE78((uint64_t)&v37, &qword_25437D280);
    sub_2414A9A78((uint64_t)v16, v35);

    sub_2412CBE78((uint64_t)v35, &qword_25437D280);
  }
  v20 = v15;
  v21 = (void *)sub_2414B4C00();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitleTextAttributes_, v21);

  objc_msgSend(a1, sel_setStandardAppearance_, v14);
  objc_msgSend(a1, sel_setScrollEdgeAppearance_, v13);
  v22 = *(_BYTE *)(v34 + 25);
  if ((v22 & 1) == 0)
  {
    swift_retain();
    v23 = (void *)sub_2414B52FC();
    objc_msgSend(a1, sel_setPreferredNavigationBarTintColor_, v23);

  }
  objc_msgSend(a1, sel__setManualScrollEdgeAppearanceEnabled_, 1, v33);
  objc_msgSend(a1, sel__setManualScrollEdgeAppearanceProgress_, *(double *)(v34 + 8));
  v24 = objc_msgSend(a1, sel_titleView);

  if (!v24)
  {
    v25 = objc_allocWithZone((Class)type metadata accessor for ParallaxNavigationTitleView());
    v26 = sub_241471980(v22);
    objc_msgSend(a1, sel_setTitleView_, v26);

  }
  v27 = objc_msgSend(a1, sel_titleView);
  if (v27)
  {
    v28 = v27;
    type metadata accessor for ParallaxNavigationTitleView();
    v29 = swift_dynamicCastClass();
    if (v29)
    {
      v30 = (_BYTE *)v29;
      v31 = *(_BYTE *)(v29 + OBJC_IVAR____TtC11MediaCoreUI27ParallaxNavigationTitleView_isNavigationBarOverParallaxHeader);
      v30[OBJC_IVAR____TtC11MediaCoreUI27ParallaxNavigationTitleView_isNavigationBarOverParallaxHeader] = *(_BYTE *)(v34 + 24);
      sub_2414715E8(v31);
      v32 = v28;
      swift_retain();
      v28 = (void *)sub_2414B52FC();
      objc_msgSend(v30, sel_setTintColor_, v28);

    }
  }

}

void sub_24137B38C(void *a1)
{
  sub_24137AEEC(a1);
}

uint64_t sub_24137B3C4(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = objc_msgSend(a1, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_titleView);

  if (v2)
  {
    type metadata accessor for ParallaxNavigationTitleView();
    v3 = (void *)swift_dynamicCastClass();
    if (v3)
      objc_msgSend(v3, sel_setNeedsLayout);

  }
  return 1;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.updateTarget(_:context:)()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t result;
  double v4;
  unsigned __int8 v6;
  double v7;
  uint64_t (*v8)(uint64_t *, _QWORD);
  uint64_t v9;
  uint64_t v10;

  v1 = *(double *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  result = sub_2414B3118();
  if (v1 <= v4 && v4 <= v2)
  {
    sub_2414B3D30();
    v6 = sub_2414B3E2C();
    sub_2414B3E20();
    result = sub_2414B3E20();
    if (result == v6)
    {
      sub_2414B3118();
      if ((v1 + v2) * 0.5 < v7)
        v1 = v2;
      v8 = (uint64_t (*)(uint64_t *, _QWORD))sub_2414B310C();
      *(double *)(v9 + 8) = v1;
      return v8(&v10, 0);
    }
  }
  return result;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24137B518()
{
  return ParallaxHeaderAlignedScrollTargetBehavior.updateTarget(_:context:)();
}

uint64_t sub_24137B538()
{
  return sub_2414B3ACC();
}

uint64_t sub_24137B548(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_24137B544(a1, a2, *v2, v2[1]);
}

void sub_24137B554()
{
  qword_257124500 = 0;
}

double sub_24137B560@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_2571207A0, (double *)&qword_257124500, a1);
}

void sub_24137B57C()
{
  qword_257124508 = 0;
}

double sub_24137B588@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_2571207A8, (double *)&qword_257124508, a1);
}

double MCUINamespace<A>.parallaxAnimationProgress.getter()
{
  return sub_24137B638((void (*)(void))sub_24137C4C8);
}

uint64_t MCUINamespace<A>.parallaxAnimationProgress.setter()
{
  return sub_24137B68C((void (*)(void))sub_24137C4C8);
}

uint64_t (*MCUINamespace<A>.parallaxAnimationProgress.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_24137C4C8();
  sub_2414B3838();
  return sub_24137B618;
}

uint64_t sub_24137B618(_QWORD *a1)
{
  return sub_24137B724(a1);
}

double MCUINamespace<A>.parallaxHeaderScrollOffset.getter()
{
  return sub_24137B638((void (*)(void))sub_24137C50C);
}

double sub_24137B638(void (*a1)(void))
{
  double v2;

  a1();
  sub_2414B3838();
  return v2;
}

uint64_t MCUINamespace<A>.parallaxHeaderScrollOffset.setter()
{
  return sub_24137B68C((void (*)(void))sub_24137C50C);
}

uint64_t sub_24137B68C(void (*a1)(void))
{
  a1();
  return sub_2414B3844();
}

uint64_t (*MCUINamespace<A>.parallaxHeaderScrollOffset.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_24137C50C();
  sub_2414B3838();
  return sub_24137B718;
}

uint64_t sub_24137B718(_QWORD *a1)
{
  return sub_24137B724(a1);
}

uint64_t sub_24137B724(_QWORD *a1)
{
  a1[1] = *a1;
  return sub_2414B3844();
}

uint64_t sub_24137B750()
{
  uint64_t result;

  result = sub_2414B4AA4();
  qword_257124510 = result;
  return result;
}

uint64_t View.parallaxEffect(scrollTargetBehaviors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - v9;
  View.mcui.getter(a2, (uint64_t)&v12 - v9);
  MCUINamespace<A>.parallaxEffect(scrollTargetBehaviors:autoAdjustsNavigationBarTint:)(a1, 0, v7, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static ScrollTargetBehavior<>.parallaxHeaderAligned.getter()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

double EnvironmentValues.parallaxAnimationProgress.getter()
{
  return sub_24137B970((void (*)(uint64_t))sub_24137C4C8);
}

uint64_t EnvironmentValues.parallaxAnimationProgress.setter(double a1)
{
  return sub_24137BC10((void (*)(uint64_t))sub_24137C4C8, a1);
}

void (*EnvironmentValues.parallaxAnimationProgress.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  uint64_t v9;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[5] = v5;
  v6 = sub_2414B382C();
  v3[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[7] = v7;
  v3[8] = v8;
  v8(v5, v1, v6);
  v3[9] = sub_24137C4C8();
  sub_2414B3838();
  v9 = v3[1];
  sub_2412CBE78((uint64_t)v5, qword_25437D4A0);
  *v3 = v9;
  return sub_24137B950;
}

void sub_24137B950(uint64_t **a1, char a2)
{
  sub_24137BDDC(a1, a2);
}

double EnvironmentValues.parallaxHeaderScrollOffset.getter()
{
  return sub_24137B970((void (*)(uint64_t))sub_24137C50C);
}

double sub_24137B970(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B382C();
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v1, v6);
  a1(v7);
  sub_2414B3838();
  v8 = *(double *)&v10[1];
  sub_2412CBE78((uint64_t)v5, qword_25437D4A0);
  return v8;
}

uint64_t sub_24137BA3C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B382C();
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  a2(v10);
  sub_2414B3838();
  v11 = v13[1];
  result = sub_2412CBE78((uint64_t)v8, qword_25437D4A0);
  *a3 = v11;
  return result;
}

uint64_t sub_24137BB10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = sub_2414B382C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, a2, v12);
  v16[1] = v11;
  a5(v14);
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, v12);
}

uint64_t EnvironmentValues.parallaxHeaderScrollOffset.setter(double a1)
{
  return sub_24137BC10((void (*)(uint64_t))sub_24137C50C, a1);
}

uint64_t sub_24137BC10(void (*a1)(uint64_t), double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B382C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v4, v9);
  *(double *)&v13[1] = a2;
  a1(v11);
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v4, v8, v9);
}

void (*EnvironmentValues.parallaxHeaderScrollOffset.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  uint64_t v9;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[5] = v5;
  v6 = sub_2414B382C();
  v3[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[7] = v7;
  v3[8] = v8;
  v8(v5, v1, v6);
  v3[9] = sub_24137C50C();
  sub_2414B3838();
  v9 = v3[1];
  sub_2412CBE78((uint64_t)v5, qword_25437D4A0);
  *v3 = v9;
  return sub_24137BDD0;
}

void sub_24137BDD0(uint64_t **a1, char a2)
{
  sub_24137BDDC(a1, a2);
}

void sub_24137BDDC(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v4 = (*a1)[7];
  v5 = **a1;
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[8])((*a1)[5], v3[4], v3[6]);
  v7 = (void *)v3[5];
  v6 = v3[6];
  v8 = v3[4];
  v9 = 3;
  if ((a2 & 1) != 0)
    v9 = 2;
  v3[v9] = v5;
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v6);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v8, v7, v6);
  free(v7);
  free(v3);
}

id sub_24137BEA0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)UINavigationItem.preferredNavigationBarTintColor.getter();

  return v2;
}

uint64_t UINavigationItem.preferredNavigationBarTintColor.getter()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if (qword_2571207B8 != -1)
    swift_once();
  if (objc_getAssociatedObject(v0, (const void *)qword_257124518))
  {
    sub_2414B544C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_2412EAEA4((uint64_t)v3, (uint64_t)v4, &qword_25437D280);
  if (v5)
  {
    sub_24136AA00();
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_2412CBE78((uint64_t)v4, &qword_25437D280);
    return 0;
  }
}

void sub_24137BFBC(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  UINavigationItem.preferredNavigationBarTintColor.setter(a3);

}

void UINavigationItem.preferredNavigationBarTintColor.setter(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  char v6;
  void *v7;
  id v8;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_preferredNavigationBarTintColor);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_24136AA00(),
        v8 = a1,
        v6 = sub_2414B532C(),
        v8,
        v8,
        v5,
        v7 = v8,
        (v6 & 1) == 0))
  {
LABEL_7:
    if (qword_2571207B8 != -1)
      swift_once();
    objc_setAssociatedObject(v2, (const void *)qword_257124518, a1, (void *)1);
    v7 = a1;
  }

}

uint64_t sub_24137C0FC()
{
  uint64_t result;

  result = swift_slowAlloc();
  qword_257124518 = result;
  return result;
}

uint64_t sub_24137C120@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_24137C1AC()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B78();
  return swift_release();
}

double sub_24137C254@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  result = *(double *)(v3 + 48);
  *a2 = result;
  return result;
}

uint64_t sub_24137C2E0()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_24137C390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5[2];
  _BYTE v6[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2412F1B18(v3, (uint64_t)v5);
      sub_2412F1B18((uint64_t)v5, (uint64_t)v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257124668);
      type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior();
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v3 += 40;
      if (!--v2)
        return a1;
    }
    swift_release();
    sub_2412FAA04(v5, (uint64_t)v6);
    swift_dynamicCast();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24137C48C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24137C4C8()
{
  unint64_t result;

  result = qword_257124528;
  if (!qword_257124528)
  {
    result = MEMORY[0x242695AE8](&unk_2414BDBF8, &type metadata for ParallaxAnimationProgressKey);
    atomic_store(result, (unint64_t *)&qword_257124528);
  }
  return result;
}

unint64_t sub_24137C50C()
{
  unint64_t result;

  result = qword_257124530;
  if (!qword_257124530)
  {
    result = MEMORY[0x242695AE8](&unk_2414BDBC0, &type metadata for ParallaxHeaderScrollOffsetKey);
    atomic_store(result, (unint64_t *)&qword_257124530);
  }
  return result;
}

double sub_24137C550@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_24137C4C8, a1);
}

uint64_t sub_24137C564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_24137C4C8);
}

uint64_t sub_24137C578()
{
  return 0;
}

double sub_24137C588@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_24137C50C, a1);
}

uint64_t sub_24137C59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_24137C50C);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_2414B3844();
}

uint64_t sub_24137C5F8()
{
  return 0;
}

uint64_t sub_24137C608@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24137BA3C(a1, (void (*)(uint64_t))sub_24137C4C8, a2);
}

uint64_t sub_24137C62C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24137BB10(a1, a2, a3, a4, (void (*)(uint64_t))sub_24137C4C8);
}

uint64_t sub_24137C650@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24137BA3C(a1, (void (*)(uint64_t))sub_24137C50C, a2);
}

uint64_t sub_24137C674(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24137BB10(a1, a2, a3, a4, (void (*)(uint64_t))sub_24137C50C);
}

char *keypath_get_selector_preferredNavigationBarTintColor()
{
  return sel_preferredNavigationBarTintColor;
}

id sub_24137C6A4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_preferredNavigationBarTintColor);
  *a2 = result;
  return result;
}

id sub_24137C6DC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreferredNavigationBarTintColor_, *a1);
}

uint64_t method lookup function for ParallaxHeaderAlignedScrollTargetBehavior()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24137C6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ParallaxEffectViewModifier();
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8030(&qword_254382758, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxEffectViewModifier, (uint64_t)&unk_2414BDB70);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

ValueMetadata *type metadata accessor for ParallaxHeaderScrollOffsetKey()
{
  return &type metadata for ParallaxHeaderScrollOffsetKey;
}

ValueMetadata *type metadata accessor for ParallaxAnimationProgressKey()
{
  return &type metadata for ParallaxAnimationProgressKey;
}

uint64_t sub_24137C79C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B382C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[7];
    v13 = a3[8];
    v14 = (_QWORD *)(v7 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v7 + v13;
    v18 = (uint64_t)a2 + v13;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    v19 = a3[9];
    v20 = v7 + v19;
    v21 = (uint64_t)a2 + v19;
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_24137C8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B382C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24137C9B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B382C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24137CAE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_257122E00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B382C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  swift_retain();
  swift_release();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24137CC7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B382C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_24137CD6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_257122E00);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B382C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_release();
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_release();
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_release();
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  swift_release();
  return a1;
}

uint64_t sub_24137CED0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24137CEDC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124520);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_24137CF5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24137CF68(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124520);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_24137CFE0()
{
  unint64_t v0;

  sub_24137D070();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24137D070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543827E8)
  {
    sub_2414B382C();
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543827E8);
  }
}

uint64_t sub_24137D0C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24137D0DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571245A8;
  if (!qword_2571245A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124538);
    v2[0] = sub_2412C8FC4(&qword_2571245B0, &qword_257124590, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571245A8);
  }
  return result;
}

unint64_t sub_24137D160()
{
  unint64_t result;

  result = qword_2571245C0;
  if (!qword_2571245C0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BDD80, &type metadata for CombinedScrollTargetBehavior);
    atomic_store(result, (unint64_t *)&qword_2571245C0);
  }
  return result;
}

uint64_t sub_24137D1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24137D1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24137D230()
{
  type metadata accessor for ParallaxEffectViewModifier();
  return sub_241379EA0();
}

uint64_t sub_24137D270(uint64_t a1)
{
  return sub_24137D410(a1, (uint64_t (*)(uint64_t, uint64_t))sub_241379F38);
}

unint64_t sub_24137D27C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571245C8;
  if (!qword_2571245C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124558);
    v2[0] = sub_24137D300();
    v2[1] = sub_2412C8FC4(&qword_257125530, &qword_2571245E8, MEMORY[0x24BDF0400]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571245C8);
  }
  return result;
}

unint64_t sub_24137D300()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_2571245D0;
  if (!qword_2571245D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124550);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124540);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124538);
    sub_24137D0DC();
    v3[2] = v2;
    v3[3] = &type metadata for CombinedScrollTargetBehavior;
    v3[4] = swift_getOpaqueTypeConformance2();
    v3[5] = sub_24137D160();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_2412C8FC4(&qword_2571245D8, &qword_2571245E0, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2571245D0);
  }
  return result;
}

uint64_t sub_24137D3F4(uint64_t a1)
{
  return sub_24137D410(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24137A024);
}

uint64_t sub_24137D404(uint64_t a1)
{
  return sub_24137D410(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24137A8B4);
}

uint64_t sub_24137D410(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ParallaxEffectViewModifier() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_24137D460(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ParallaxEffectViewModifier() - 8) + 80);
  return sub_24137ACCC(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_24137D4AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571245F0;
  if (!qword_2571245F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124578);
    v2[0] = sub_24137D530();
    v2[1] = sub_2412C8FC4(&qword_257124628, &qword_257124630, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571245F0);
  }
  return result;
}

unint64_t sub_24137D530()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571245F8;
  if (!qword_2571245F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124570);
    v2[0] = sub_24137D5B4();
    v2[1] = sub_2412C8FC4(&qword_257124618, &qword_257124620, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571245F8);
  }
  return result;
}

unint64_t sub_24137D5B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257124600;
  if (!qword_257124600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124568);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124558);
    v2[3] = sub_24137D27C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8FC4(&qword_257124608, &qword_257124610, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124600);
  }
  return result;
}

unint64_t sub_24137D660()
{
  unint64_t result;

  result = qword_257124638;
  if (!qword_257124638)
  {
    result = MEMORY[0x242695AE8](&unk_2414BDD40, &type metadata for ParallaxNavigationItemAdaptor);
    atomic_store(result, &qword_257124638);
  }
  return result;
}

uint64_t sub_24137D6A4()
{
  uint64_t v0;

  return sub_2413E6480(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24137D6D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for ParallaxEffectViewModifier();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B382C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24137D7D8()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for ParallaxEffectViewModifier();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return sub_24137AE50();
}

uint64_t sub_24137D85C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for ParallaxEffectViewModifier();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B382C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24137D964(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ParallaxEffectViewModifier() - 8) + 80);
  v5 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_241310430;
  return sub_24137A9FC(v7, a1, v5, v6, v8);
}

uint64_t sub_24137D9F8()
{
  uint64_t v0;

  return sub_2413E61BC(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_24137DA14()
{
  uint64_t v0;

  return sub_2413E5E00(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_24137DA30()
{
  return sub_24137A528();
}

uint64_t sub_24137DA4C()
{
  uint64_t v0;

  return sub_2413E63DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24137DA64()
{
  uint64_t v0;

  return sub_2413E64F4(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void destroy for ParallaxNavigationItemAdaptor(uint64_t a1)
{
  swift_release();

}

uint64_t initializeWithCopy for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v3 = *(void **)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);

  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for ParallaxNavigationItemAdaptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParallaxNavigationItemAdaptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParallaxNavigationItemAdaptor()
{
  return &type metadata for ParallaxNavigationItemAdaptor;
}

uint64_t destroy for CombinedScrollTargetBehavior()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s11MediaCoreUI28CombinedScrollTargetBehaviorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CombinedScrollTargetBehavior(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CombinedScrollTargetBehavior(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CombinedScrollTargetBehavior()
{
  return &type metadata for CombinedScrollTargetBehavior;
}

uint64_t sub_24137DDA0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124580);
  type metadata accessor for ParallaxContext();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124578);
  sub_24137D4AC();
  sub_24137D660();
  swift_getOpaqueTypeConformance2();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24137DE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v4 = (_QWORD *)(a3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_2414B3AC0();
      v4 += 5;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24137DF0C()
{
  return sub_24137D9F8();
}

uint64_t sub_24137DF20()
{
  return sub_24137DA14();
}

uint64_t sub_24137DF34()
{
  return sub_24137D6A4();
}

uint64_t sub_24137DF48()
{
  return sub_24137DA64();
}

uint64_t sub_24137DF5C()
{
  uint64_t result;

  result = sub_2414B4654();
  qword_257136EA8 = result;
  return result;
}

uint64_t sub_24137DF78(uint64_t a1)
{
  return sub_24137DFA0(a1, &qword_257136EB0);
}

uint64_t sub_24137DF8C(uint64_t a1)
{
  return sub_24137DFA0(a1, &qword_257136EB8);
}

uint64_t sub_24137DFA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;

  sub_2414B4654();
  v3 = sub_2414B466C();
  result = swift_release();
  *a2 = v3;
  return result;
}

double sub_24137DFF0()
{
  double result;

  xmmword_25438E920 = xmmword_2414BDDD0;
  *(_OWORD *)algn_25438E930 = xmmword_2414BDDE0;
  result = 0.0;
  xmmword_25438E940 = xmmword_2414BDDF0;
  unk_25438E950 = xmmword_2414BDE00;
  return result;
}

uint64_t sub_24137E024(void *a1)
{
  void *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  unsigned int v11;
  __int128 v12;
  unsigned int v13;
  _QWORD *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  int64_t v18;
  int64_t v19;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  char *v35;
  _QWORD *v36;
  float64x2_t v37;
  float64x2_t v38;
  double v39;

  v3 = (unint64_t)objc_msgSend(v1, sel_vertexCount);
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v4 = v3;
  if (v3)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      objc_msgSend(v1, sel_vertexAtIndex_, v5);
      objc_msgSend(a1, sel_vertexAtIndex_, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_24146D3EC(0, v6[2] + 1, 1, v6);
      v8 = v6[2];
      v7 = v6[3];
      if (v8 >= v7 >> 1)
        v6 = sub_24146D3EC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
      ++v5;
      *((_QWORD *)&v9 + 1) = *(_QWORD *)&v37.f64[1];
      *(float32x2_t *)&v9 = vcvt_f32_f64(v37);
      *(float32x2_t *)&v10 = vcvt_f32_f64(v38);
      *(float *)&v11 = v39;
      *((_QWORD *)&v10 + 1) = v11;
      *(_QWORD *)&v12 = v10;
      *(float *)&v13 = v39;
      *((_QWORD *)&v12 + 1) = v13;
      v6[2] = v8 + 1;
      v14 = &v6[8 * v8];
      *((_OWORD *)v14 + 2) = v9;
      v14[6] = v9;
      *((_OWORD *)v14 + 4) = v10;
      *((_OWORD *)v14 + 5) = v12;
    }
    while (v4 != v5);
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)objc_msgSend(v1, sel_faceCount);
  if ((v15 & 0x8000000000000000) == 0)
  {
    if (!v15)
      return (uint64_t)v6;
    v16 = 0;
    v17 = (char *)MEMORY[0x24BEE4AF8];
    v35 = (char *)v15;
    v36 = v6;
    while ((char *)v15 != v16)
    {
      objc_msgSend(v1, sel_faceAtIndex_, v16);
      if (LODWORD(v37.f64[0]) >= 0x10000
        || LODWORD(v37.f64[1]) >= 0x10000
        || HIDWORD(v37.f64[1]) >= 0x10000
        || HIDWORD(v37.f64[0]) >= 0x10000)
      {
        goto LABEL_44;
      }
      v18 = *((_QWORD *)v17 + 2);
      v19 = v18 + 6;
      if (__OFADD__(v18, 6))
        goto LABEL_41;
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native
        || (v21 = *((_QWORD *)v17 + 3), v22 = v21 >> 1, (uint64_t)(v21 >> 1) < v19))
      {
        if (v18 <= v19)
          v23 = v18 + 6;
        else
          v23 = v18;
        v17 = sub_24146D2E4(isUniquelyReferenced_nonNull_native, v23, 1, v17);
        v21 = *((_QWORD *)v17 + 3);
        v22 = v21 >> 1;
      }
      v24 = *((_QWORD *)v17 + 2);
      v25 = v24 + 1;
      if (v22 <= v24)
      {
        v17 = sub_24146D2E4((char *)(v21 > 1), v24 + 1, 1, v17);
        v21 = *((_QWORD *)v17 + 3);
        v22 = v21 >> 1;
      }
      *((_QWORD *)v17 + 2) = v25;
      *(_WORD *)&v17[2 * v24 + 32] = LOWORD(v37.f64[0]);
      v26 = v24 + 2;
      if ((uint64_t)v22 < (uint64_t)(v24 + 2))
        v17 = sub_24146D2E4((char *)(v21 > 1), v24 + 2, 1, v17);
      *((_QWORD *)v17 + 2) = v26;
      *(_WORD *)&v17[2 * v25 + 32] = LOWORD(v37.f64[1]);
      v27 = *((_QWORD *)v17 + 3);
      v28 = v24 + 3;
      if ((uint64_t)(v24 + 3) > (uint64_t)(v27 >> 1))
        v17 = sub_24146D2E4((char *)(v27 > 1), v24 + 3, 1, v17);
      *((_QWORD *)v17 + 2) = v28;
      *(_WORD *)&v17[2 * v26 + 32] = WORD2(v37.f64[1]);
      v29 = *((_QWORD *)v17 + 3);
      v30 = v24 + 4;
      if ((uint64_t)(v24 + 4) > (uint64_t)(v29 >> 1))
        v17 = sub_24146D2E4((char *)(v29 > 1), v24 + 4, 1, v17);
      *((_QWORD *)v17 + 2) = v30;
      *(_WORD *)&v17[2 * v28 + 32] = LOWORD(v37.f64[0]);
      v31 = *((_QWORD *)v17 + 3);
      v32 = v24 + 5;
      if ((uint64_t)(v24 + 5) > (uint64_t)(v31 >> 1))
        v17 = sub_24146D2E4((char *)(v31 > 1), v24 + 5, 1, v17);
      *((_QWORD *)v17 + 2) = v32;
      *(_WORD *)&v17[2 * v30 + 32] = WORD2(v37.f64[0]);
      v33 = *((_QWORD *)v17 + 3);
      if ((uint64_t)(v24 + 6) > (uint64_t)(v33 >> 1))
        v17 = sub_24146D2E4((char *)(v33 > 1), v24 + 6, 1, v17);
      ++v16;
      *((_QWORD *)v17 + 2) = v24 + 6;
      *(_WORD *)&v17[2 * v32 + 32] = LOWORD(v37.f64[1]);
      v15 = (unint64_t)v35;
      v6 = v36;
      if (v35 == v16)
        return (uint64_t)v6;
    }
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_2414B5668();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for Features(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Features(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

__n128 sub_24137E4B8()
{
  __n128 result;

  xmmword_25438E8E0 = xmmword_2414B72C0;
  *(_OWORD *)&qword_25438E8F0 = xmmword_2414B72C0;
  __asm { FMOV            V0.2D, #2.0 }
  xmmword_25438E900 = (__int128)result;
  return result;
}

uint64_t sub_24137E4D8(uint64_t a1, uint64_t a2, uint64_t a3, float64_t a4, float64_t a5, __n128 a6, double a7)
{
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  unint64_t v13;
  float64x2_t v14;
  _QWORD *v15;
  unint64_t v16;
  double *v17;
  double v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  double *v24;
  uint64_t v25;
  float64x2_t v26;
  float64x2_t v27;
  uint64_t v28;
  unint64_t v29;
  float64x2_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  float64x2_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  BOOL v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t result;
  float64x2_t v63;
  uint64_t v64;
  float64x2_t v65;
  __n128 v66;
  double v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v69 = a6.n128_f64[0];
  if (a1 >= 1 && a2 >= 1)
  {
    v74 = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
      v8 = 0;
      v9 = (double)a1;
      v10 = (double)a2;
      v11 = 0.0 / (double)a1;
      v12 = a3 + 32;
      v13 = *(_QWORD *)(a3 + 16);
      a6.n128_f64[1] = a7;
      v14.f64[0] = a4;
      v14.f64[1] = a5;
      v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v64 = a1 - 1;
      v65 = v14;
      v66 = a6;
      while (1)
      {
        v16 = v8 * v74;
        if ((unsigned __int128)(v8 * (__int128)v74) >> 64 != (v8 * v74) >> 63)
          break;
        if (v16 >= v13)
          goto LABEL_56;
        v17 = (double *)(v12 + 16 * v16);
        v19 = *v17;
        v18 = v17[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_24146D604(0, v15[2] + 1, 1, v15);
        v21 = v15[2];
        v20 = v15[3];
        if (v21 >= v20 >> 1)
          v15 = sub_24146D604((_QWORD *)(v20 > 1), v21 + 1, 1, v15);
        v22 = 0;
        v75 = v8;
        v23 = (double)v8 / v10;
        v15[2] = v21 + 1;
        v24 = (double *)&v15[5 * v21];
        v24[4] = v11;
        v24[5] = v23;
        v24[6] = v19 * v69 + a4;
        v24[7] = v18 * a7 + a5;
        v24[8] = 0.5;
        v25 = 40 * v21 + 72;
        v27 = v65;
        v26 = (float64x2_t)v66;
        do
        {
          v28 = v22 + 1;
          v29 = v16 + v22 + 1;
          if (__OFADD__(v16, v22 + 1))
          {
            __break(1u);
LABEL_50:
            __break(1u);
            return (uint64_t)v15;
          }
          if (v29 >= v13)
            goto LABEL_50;
          v30 = *(float64x2_t *)(v12 + 16 * v29);
          v31 = v15[3];
          v32 = v21 + v22;
          v33 = v32 + 2;
          if (v28 + v21 >= v31 >> 1)
          {
            v63 = v30;
            v35 = sub_24146D604((_QWORD *)(v31 > 1), v32 + 2, 1, v15);
            v30 = v63;
            v27 = v65;
            v26 = (float64x2_t)v66;
            v15 = v35;
          }
          v15[2] = v33;
          v34 = (float64x2_t *)((char *)v15 + v25);
          v34->f64[0] = (double)v28 / v9;
          v34->f64[1] = v23;
          v34[1] = vaddq_f64(vmulq_f64(v30, v26), v27);
          v34[2].f64[0] = 0.5;
          v25 += 40;
          v22 = v28;
        }
        while (a1 != v28);
        v36 = a2;
        if (v75 == a2)
        {
          v37 = 0;
          v38 = 0;
          v70 = (a1 + 1);
          v39 = (a1 + 2);
          v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v41 = v74;
          while (v38 != v36)
          {
            v42 = v74 * v38;
            if ((unsigned __int128)(v74 * (__int128)v38) >> 64 != (v74 * v38) >> 63)
              goto LABEL_59;
            if (v42 < 0 || v42 == 0xFFFFFFFFLL)
              goto LABEL_63;
            v43 = v42 + a1;
            if (__OFADD__(v42, a1))
              goto LABEL_60;
            v44 = v43 + 2;
            if (__OFADD__(v43, 2))
              goto LABEL_61;
            if ((v44 & 0x8000000000000000) != 0)
              goto LABEL_63;
            if (HIDWORD(v44))
              goto LABEL_63;
            if (v43 < -1)
              goto LABEL_63;
            v45 = v43 + 1;
            if ((unint64_t)(v43 + 1) >> 32)
              goto LABEL_63;
            v72 = v39;
            v46 = v38;
            v76 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v40 = sub_24146D4F8(0, v40[2] + 1, 1, v40);
            v47 = 0;
            v38 = v46 + 1;
            v48 = v40[2];
            v49 = 4 * v48;
            v50 = v64;
            v51 = v76;
            v52 = v72;
            while (1)
            {
              v53 = v40[3];
              if (v48 + v47 >= v53 >> 1)
              {
                v59 = v40;
                v60 = v38;
                v61 = sub_24146D4F8((_QWORD *)(v53 > 1), v48 + v47 + 1, 1, v59);
                v52 = v72;
                v38 = v60;
                v51 = v76;
                v50 = v64;
                v40 = v61;
              }
              v40[2] = v48 + v47 + 1;
              v54 = &v40[v49];
              *((_DWORD *)v54 + 8) = v51 + v47;
              *((_DWORD *)v54 + 9) = v51 + v47 + 1;
              *((_DWORD *)v54 + 10) = v52 + v47;
              *((_DWORD *)v54 + 11) = v45;
              v54[6] = 0;
              v54[7] = 0;
              if (v50 == v47)
                break;
              v55 = v42 + v47 + 1;
              if (__OFADD__(v42, v47 + 1))
              {
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
              if (HIDWORD(v55) || v55 == 0xFFFFFFFF)
                goto LABEL_63;
              v56 = __OFADD__(v55, a1);
              v57 = v55 + a1;
              if (v56)
                goto LABEL_53;
              v58 = v57 + 2;
              if (__OFADD__(v57, 2))
                goto LABEL_54;
              if ((v58 & 0x8000000000000000) == 0 && !HIDWORD(v58) && v41 >= -1)
              {
                v45 = v57 + 1;
                v49 += 4;
                ++v47;
                if (!((v57 + 1) >> 32))
                  continue;
              }
              goto LABEL_63;
            }
            v41 += v74;
            v37 = v51 + v70;
            v39 = v52 + v70;
            v36 = a2;
            if (v38 == a2)
              return (uint64_t)v15;
          }
          goto LABEL_58;
        }
        v8 = v75 + 1;
        if (__OFADD__(v75, 1))
          goto LABEL_57;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
    }
    __break(1u);
LABEL_63:
    swift_bridgeObjectRelease();
    sub_2414B5668();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  result = sub_2414B5674();
  __break(1u);
  return result;
}

MediaCoreUI::BackdropLayerView __swiftcall BackdropLayerView.init(groupName:)(Swift::String groupName)
{
  uint64_t v1;
  MediaCoreUI::BackdropLayerView result;

  *(Swift::String *)v1 = groupName;
  *(_BYTE *)(v1 + 16) = 0;
  result.groupName = groupName;
  return result;
}

MediaCoreUI::BackdropLayerView __swiftcall BackdropLayerView.init(groupName:captureOnly:)(Swift::String groupName, Swift::Bool captureOnly)
{
  uint64_t v2;
  MediaCoreUI::BackdropLayerView result;

  *(Swift::String *)v2 = groupName;
  *(_BYTE *)(v2 + 16) = captureOnly;
  result.groupName = groupName;
  result.captureOnly = captureOnly;
  return result;
}

uint64_t BackdropLayerView.body.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *v0;
  v1 = v0[1];
  v3 = *((_BYTE *)v0 + 16);
  sub_2412C9900();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_BYTE *)(v4 + 32) = v3;
  swift_bridgeObjectRetain();
  return sub_2414B31A8();
}

id sub_24137EAA8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v6;

  v6 = (void *)sub_2414B4D44();
  objc_msgSend(a1, sel_setGroupName_, v6);

  return objc_msgSend(a1, sel_setCaptureOnly_, a4 & 1);
}

uint64_t sub_24137EB08()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_24137EB2C(void *a1)
{
  uint64_t v1;

  return sub_24137EAA8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_24137EB38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *v0;
  v1 = v0[1];
  v3 = *((_BYTE *)v0 + 16);
  sub_2412C9900();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_BYTE *)(v4 + 32) = v3;
  swift_bridgeObjectRetain();
  return sub_2414B31A8();
}

unint64_t static BackdropLayerHostView.layerClass.getter()
{
  return sub_2412C9900();
}

id BackdropLayerHostView.__allocating_init(groupName:)()
{
  objc_class *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  v2 = objc_msgSend(v1, sel_layer);
  objc_opt_self();
  v3 = (void *)swift_dynamicCastObjCClassUnconditional();
  v4 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setGroupName_, v4);

  return v1;
}

id BackdropLayerHostView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id BackdropLayerHostView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id BackdropLayerHostView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BackdropLayerHostView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id BackdropLayerHostView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24137EE48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24137EE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackdropLayerView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BackdropLayerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackdropLayerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackdropLayerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropLayerView()
{
  return &type metadata for BackdropLayerView;
}

unint64_t sub_24137EFBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257124670;
  if (!qword_257124670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124678);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEBEC0], v1);
    atomic_store(result, (unint64_t *)&qword_257124670);
  }
  return result;
}

uint64_t sub_24137F010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  _DWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  _QWORD v102[2];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _BYTE v106[26];

  v3 = v2;
  v94 = a2;
  v5 = sub_2414B3490();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED168];
  v86 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_2414B346C();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 24);
  v80 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2414B3514();
  v79 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v76 = (char *)v68 - v13;
  sub_2414B3DB4();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v15 = sub_2414B3514();
  v81 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v78 = (char *)v68 - v17;
  v70 = a1;
  v69 = *(_QWORD *)(a1 + 40);
  v102[0] = v69;
  v102[1] = MEMORY[0x24BDECC60];
  v18 = MEMORY[0x24BDED308];
  v77 = v12;
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v102, v16);
  v20 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v14, MEMORY[0x24BDF1078]);
  v71 = v19;
  v101[0] = v19;
  v101[1] = v20;
  v21 = MEMORY[0x242695AE8](v18, v15, v101);
  *(_QWORD *)&v103 = v15;
  *((_QWORD *)&v103 + 1) = v21;
  v22 = MEMORY[0x242695A94](0, &v103, MEMORY[0x24BDF27E8], 0);
  v74 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v68 - v23;
  *(_QWORD *)&v103 = v15;
  *((_QWORD *)&v103 + 1) = v21;
  v73 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = sub_2412F0B40(qword_257124680, 255, v6, MEMORY[0x24BDED160]);
  v95 = v22;
  *(_QWORD *)&v103 = v22;
  *((_QWORD *)&v103 + 1) = v5;
  v93 = v5;
  v92 = OpaqueTypeConformance2;
  *(_QWORD *)&v104 = OpaqueTypeConformance2;
  *((_QWORD *)&v104 + 1) = v26;
  v91 = v26;
  v27 = MEMORY[0x242695A94](0, &v103, MEMORY[0x24BDF2380], 0);
  v88 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v72 = (uint64_t)v68 - v31;
  v87 = sub_2414B53B0();
  v89 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v33 = (char *)v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v90 = (uint64_t)v68 - v35;
  v36 = v3;
  v37 = *(_QWORD *)(v3 + 8);
  swift_beginAccess();
  if (*(_BYTE *)(v37 + 16) == 1)
  {
    v38 = v70;
    v39 = v3 + *(int *)(v70 + 52);
    v40 = v80;
    v41 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v75, v39, v9);
    v68[1] = sub_2414B3E80();
    v42 = (__int128 *)(v36 + *(int *)(v38 + 56));
    v43 = v42[3];
    v105 = v42[2];
    *(_OWORD *)v106 = v43;
    *(_OWORD *)&v106[10] = *(__int128 *)((char *)v42 + 58);
    v44 = v42[1];
    v103 = *v42;
    v104 = v44;
    sub_2412FD220((uint64_t)&v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v96);
    sub_2412FD220((uint64_t)&v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v45 = v76;
    sub_2414B4528();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v9);
    v80 = v27;
    v46 = v24;
    v47 = v78;
    v48 = v77;
    sub_2412F6DCC();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v48);
    v49 = v83;
    v50 = v82;
    v51 = v84;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x24BDECF00], v84);
    sub_2414B42AC();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    v52 = v47;
    v53 = v95;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v15);
    v54 = v85;
    sub_2414B3628();
    v55 = v93;
    v56 = v92;
    v57 = v91;
    sub_2414B41D4();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v55);
    v58 = v46;
    v59 = v80;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v58, v53);
    v96 = v53;
    v97 = v55;
    v98 = v56;
    v99 = v57;
    swift_getOpaqueTypeConformance2();
    v60 = v72;
    v61 = v29;
    sub_2412FBF34((uint64_t)v29, v59, v72);
    v62 = v88;
    v63 = *(void (**)(char *, uint64_t))(v88 + 8);
    v63(v61, v59);
    sub_2412EEA1C(v60, v59, (uint64_t)v33);
    v63((char *)v60, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v33, 0, 1, v59);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v33, 1, 1, v27);
    v55 = v93;
    *(_QWORD *)&v103 = v95;
    *((_QWORD *)&v103 + 1) = v93;
    v56 = v92;
    v57 = v91;
    *(_QWORD *)&v104 = v92;
    *((_QWORD *)&v104 + 1) = v91;
    swift_getOpaqueTypeConformance2();
  }
  v64 = v90;
  sub_2412F65F0((uint64_t)v33, v90);
  v65 = *(void (**)(char *, uint64_t))(v89 + 8);
  v66 = v87;
  v65(v33, v87);
  v96 = v95;
  v97 = v55;
  v98 = v56;
  v99 = v57;
  v100 = swift_getOpaqueTypeConformance2();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v66, &v100);
  sub_2412EEA1C(v64, v66, v94);
  return ((uint64_t (*)(uint64_t, uint64_t))v65)(v64, v66);
}

void sub_24137F828(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  _s11ContextMenuCMa();
  sub_2412F0B40(&qword_2543816D8, v2, (uint64_t (*)(uint64_t))_s11ContextMenuCMa, (uint64_t)&unk_2414BDF1C);
  *a1 = sub_2414B33C4();
  a1[1] = v3;
  _s15ContextMenuViewVMa();
}

double sub_24137F8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  double result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
  v5 = v3 + *(int *)(a1 + 56);
  *(_QWORD *)v5 = swift_getKeyPath();
  result = 0.0;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_WORD *)(v5 + 72) = 0;
  return result;
}

uint64_t sub_24137F918()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24137F94C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24137F95C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s11ContextMenuCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

void _s15ContextMenuViewVMa()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_24137F9B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24137FA30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  char v29;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 74 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    v15 = v7 + v12;
    v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = v15 & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v16 + 16);
    v21 = *(_QWORD *)(v16 + 24);
    v22 = *(_QWORD *)(v16 + 32);
    v23 = *(_QWORD *)(v16 + 40);
    v24 = *(_QWORD *)(v16 + 48);
    v25 = *(_QWORD *)(v16 + 56);
    v27 = *(_QWORD *)(v16 + 64);
    v28 = *(_BYTE *)(v16 + 72);
    v29 = *(_BYTE *)(v16 + 73);
    sub_2412C6F48(*(_QWORD *)v16, v18, v20, v21, v22, v23, v24, v25, v27, v28, v29);
    *(_QWORD *)v19 = v17;
    *(_QWORD *)(v19 + 8) = v18;
    *(_QWORD *)(v19 + 16) = v20;
    *(_QWORD *)(v19 + 24) = v21;
    *(_QWORD *)(v19 + 32) = v22;
    *(_QWORD *)(v19 + 40) = v23;
    *(_QWORD *)(v19 + 48) = v24;
    *(_QWORD *)(v19 + 56) = v25;
    *(_QWORD *)(v19 + 64) = v27;
    *(_BYTE *)(v19 + 72) = v28;
    *(_BYTE *)(v19 + 73) = v29;
  }
  return a1;
}

uint64_t sub_24137FBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2412C823C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72), *(_BYTE *)(v6 + 73));
}

_QWORD *sub_24137FC38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char v25;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (v11 + v8) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  v18 = *(_QWORD *)(v13 + 32);
  v19 = *(_QWORD *)(v13 + 40);
  v20 = *(_QWORD *)(v13 + 48);
  v21 = *(_QWORD *)(v13 + 56);
  v22 = *(_QWORD *)(v13 + 64);
  v24 = *(_BYTE *)(v13 + 72);
  v25 = *(_BYTE *)(v13 + 73);
  sub_2412C6F48(*(_QWORD *)v13, v15, v16, v17, v18, v19, v20, v21, v22, v24, v25);
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v16;
  *(_QWORD *)(v12 + 24) = v17;
  *(_QWORD *)(v12 + 32) = v18;
  *(_QWORD *)(v12 + 40) = v19;
  *(_QWORD *)(v12 + 48) = v20;
  *(_QWORD *)(v12 + 56) = v21;
  *(_QWORD *)(v12 + 64) = v22;
  *(_BYTE *)(v12 + 72) = v24;
  *(_BYTE *)(v12 + 73) = v25;
  return a1;
}

_QWORD *sub_24137FD50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v33;
  char v34;
  char v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (v10 + v8) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + v9) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = *(_QWORD *)(v12 + 24);
  v17 = *(_QWORD *)(v12 + 32);
  v18 = *(_QWORD *)(v12 + 40);
  v19 = *(_QWORD *)(v12 + 48);
  v20 = *(_QWORD *)(v12 + 56);
  v33 = *(_QWORD *)(v12 + 64);
  v34 = *(_BYTE *)(v12 + 72);
  v35 = *(_BYTE *)(v12 + 73);
  sub_2412C6F48(*(_QWORD *)v12, v14, v15, v16, v17, v18, v19, v20, v33, v34, v35);
  v21 = *(_QWORD *)v11;
  v22 = *(_QWORD *)(v11 + 8);
  v23 = *(_QWORD *)(v11 + 16);
  v24 = *(_QWORD *)(v11 + 24);
  v25 = *(_QWORD *)(v11 + 32);
  v26 = *(_QWORD *)(v11 + 40);
  v27 = *(_QWORD *)(v11 + 48);
  v28 = *(_QWORD *)(v11 + 56);
  v29 = *(_QWORD *)(v11 + 64);
  v30 = *(_BYTE *)(v11 + 72);
  v31 = *(_BYTE *)(v11 + 73);
  *(_QWORD *)v11 = v13;
  *(_QWORD *)(v11 + 8) = v14;
  *(_QWORD *)(v11 + 16) = v15;
  *(_QWORD *)(v11 + 24) = v16;
  *(_QWORD *)(v11 + 32) = v17;
  *(_QWORD *)(v11 + 40) = v18;
  *(_QWORD *)(v11 + 48) = v19;
  *(_QWORD *)(v11 + 56) = v20;
  *(_QWORD *)(v11 + 64) = v33;
  *(_BYTE *)(v11 + 72) = v34;
  *(_BYTE *)(v11 + 73) = v35;
  sub_2412C823C(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  return a1;
}

_OWORD *sub_24137FEB0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v12 = v10[2];
  v11 = v10[3];
  v13 = v10[1];
  *(_OWORD *)((char *)v9 + 58) = *(_OWORD *)((char *)v10 + 58);
  v9[2] = v12;
  v9[3] = v11;
  v9[1] = v13;
  return a1;
}

_QWORD *sub_24137FF48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 64);
  v14 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_BYTE *)(v12 + 72);
  v16 = *(_BYTE *)(v12 + 73);
  v17 = *(_QWORD *)v14;
  v18 = *(_QWORD *)(v14 + 8);
  v19 = *(_QWORD *)(v14 + 16);
  v20 = *(_QWORD *)(v14 + 24);
  v21 = *(_QWORD *)(v14 + 32);
  v22 = *(_QWORD *)(v14 + 40);
  v23 = *(_QWORD *)(v14 + 48);
  v24 = *(_QWORD *)(v14 + 56);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = *(_BYTE *)(v14 + 72);
  v27 = *(_BYTE *)(v14 + 73);
  v28 = *(_OWORD *)(v12 + 16);
  v29 = *(_OWORD *)(v12 + 32);
  v30 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)v14 = *(_OWORD *)v12;
  *(_OWORD *)(v14 + 16) = v28;
  *(_OWORD *)(v14 + 32) = v29;
  *(_OWORD *)(v14 + 48) = v30;
  *(_QWORD *)(v14 + 64) = v13;
  *(_BYTE *)(v14 + 72) = v15;
  *(_BYTE *)(v14 + 73) = v16;
  sub_2412C823C(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  return a1;
}

uint64_t sub_24138002C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
    }
    else
    {
      v14 = *(_QWORD *)(a1 + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
  }
  else
  {
    v8 = ((*(_QWORD *)(v4 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 74;
    v9 = (a2 - v6 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2413800C8 + 4 * byte_2414BDEF8[v12]))();
  }
}

void sub_241380154(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ((*(_QWORD *)(v5 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 74;
  if (v6 >= a3)
  {
    v11 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v6 + 0xFFFF) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  v12 = ~v6 + a2;
  bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 74);
  if (v8 > 3)
    *a1 = v12;
  else
    *(_WORD *)a1 = v12;
  __asm { BR              X11 }
}

void sub_24138027C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x2413802E8);
}

void sub_241380284(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24138028CLL);
  JUMPOUT(0x2413802E8);
}

void sub_2413802A0(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x2413802E8);
}

void sub_2413802A8(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x2413802E8);
}

void sub_2413802B0(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (a3 < 0)
      JUMPOUT(0x2413802BCLL);
    if (a2 < 0)
      JUMPOUT(0x2413802E0);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x2413802E8);
}

uint64_t sub_241380300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241380334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[2];

  v1 = *(_QWORD *)(a1 + 24);
  v2 = sub_2414B3514();
  sub_2414B3DB4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v4 = sub_2414B3514();
  v20[0] = v1;
  v20[1] = MEMORY[0x24BDECC60];
  v5 = MEMORY[0x24BDED308];
  v19[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v20);
  v19[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v3, MEMORY[0x24BDF1078]);
  v6 = MEMORY[0x242695AE8](v5, v4, v19);
  v15 = v4;
  v16 = v6;
  v7 = MEMORY[0x242695A94](255, &v15, MEMORY[0x24BDF27E8], 0);
  v8 = sub_2414B3490();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED168];
  v15 = v4;
  v16 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v11 = sub_2412F0B40(qword_257124680, 255, v9, MEMORY[0x24BDED160]);
  v15 = v7;
  v16 = v8;
  v17 = OpaqueTypeConformance2;
  v18 = v11;
  MEMORY[0x242695A94](255, &v15, MEMORY[0x24BDF2380], 0);
  v12 = sub_2414B53B0();
  v15 = v7;
  v16 = v8;
  v17 = OpaqueTypeConformance2;
  v18 = v11;
  v14 = swift_getOpaqueTypeConformance2();
  return MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v12, &v14);
}

uint64_t sub_2413804D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_241380560(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_24138063C + 4 * byte_2414BE058[v17 - 1]))();
}

void sub_2413806B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t type metadata accessor for OSStatusCheck(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OSStatusCheck);
}

uint64_t sub_2413808C4()
{
  sub_24135B8A8();
  return sub_2414B3838();
}

uint64_t sub_2413808F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24135B8A8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241380944()
{
  sub_24135B8A8();
  return sub_2414B3844();
}

BOOL static MotionPlaybackPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL sub_2413809EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t MCUINamespace<A>.motionCollection(policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char v9;
  _BYTE v11[16];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2, v3, v5);
  swift_getKeyPath();
  v11[15] = v9;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_241380B18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24135B8A8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241380B64()
{
  sub_24135B8A8();
  return sub_2414B3844();
}

void sub_241380BAC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_241380BB8()
{
  sub_241380F30();
  return sub_2414B3340();
}

uint64_t View.motionCollection(policy:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[15];
  char v12;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v11[-v8]);
  v12 = (char)a1;
  MCUINamespace<A>.motionCollection(policy:)((uint64_t)&v12, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t getEnumTagSinglePayload for MotionPlaybackPolicy(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_241380D14 + 4 * byte_2414BE0E0[v4]))();
}

uint64_t storeEnumTagSinglePayload for MotionPlaybackPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_241380DC0 + 4 * byte_2414BE0EA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241380DF4 + 4 * byte_2414BE0E5[v5]))();
}

uint64_t sub_241380DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241380DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241380E04);
  return result;
}

uint64_t sub_241380E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241380E18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_241380E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241380E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241380E30(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_241380E4C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackPolicy()
{
  return &type metadata for MotionPlaybackPolicy;
}

uint64_t sub_241380E74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382878);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_241380ED4();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_241380ED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254382870;
  if (!qword_254382870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382878);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254382870);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackPolicyEnvironmentKey()
{
  return &type metadata for MotionPlaybackPolicyEnvironmentKey;
}

unint64_t sub_241380F30()
{
  unint64_t result;

  result = qword_257124708;
  if (!qword_257124708)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionPlaybackPolicy, &type metadata for MotionPlaybackPolicy);
    atomic_store(result, (unint64_t *)&qword_257124708);
  }
  return result;
}

__n128 sub_241380F74@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_BYTE *)(v1 + 88);
  v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 48);
  v7 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v4;
  return result;
}

double sub_241381018()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 104);
}

double *sub_2413810A0(double *result, double a2, double a3, double a4, double a5)
{
  result[13] = a2;
  result[14] = a3;
  result[15] = a4;
  result[16] = a5;
  return result;
}

uint64_t sub_2413810AC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_241381130(uint64_t result, char a2)
{
  *(_BYTE *)(result + 136) = a2;
  return result;
}

uint64_t sub_241381138()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_2413811BC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 137);
  return result;
}

uint64_t sub_241381248()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B78();
  return swift_release();
}

double sub_2413812F0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  char v26;
  double v27;
  double v28;
  char v29;
  id v30;
  id v31;
  double result;
  char v33;
  char v34;

  objc_msgSend(a1, sel_bounds);
  v5 = v4;
  v7 = v6;
  v8 = objc_msgSend(a1, sel_window);
  v9 = 1.0;
  v10 = 1.0;
  if (v8)
  {
    v11 = v8;
    v12 = objc_msgSend(v8, sel_screen);

    objc_msgSend(v12, sel_nativeScale);
    v10 = v13;

  }
  v14 = objc_msgSend(a1, sel_window);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_screen);

    objc_msgSend(v16, sel_scale);
    v9 = v17;

  }
  v18 = v7 * (v10 / v9);
  v19 = round(v5 * (v10 / v9));
  v20 = round(v18);
  v21 = objc_msgSend(a1, sel_traitCollection);
  v22 = objc_msgSend(v21, sel_horizontalSizeClass);

  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_currentDevice);
  v25 = objc_msgSend(v24, sel_userInterfaceIdiom);

  v26 = 0;
  if (v25 == (id)1 && v22 == (id)2)
  {
    if (v20 >= v19)
      goto LABEL_11;
    if (qword_254381688 != -1)
      swift_once();
    if (*(double *)&qword_25438E810 <= v19)
      v26 = 2;
    else
LABEL_11:
      v26 = 1;
  }
  if (v20 >= v19)
    v27 = v19;
  else
    v27 = v20;
  if (v19 > v20)
    v28 = v19;
  else
    v28 = v20;
  if (v27 >= 744.0)
  {
    sub_241313EDC(&v34, v27, v28);
    v29 = v34;
  }
  else
  {
    sub_2412EC168(&v33, v27, v28);
    v29 = v33;
  }
  *(double *)a2 = v5;
  *(double *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 17) = v29;
  *(_BYTE *)(a2 + 18) = v26;
  v30 = objc_msgSend(v23, sel_currentDevice);
  v31 = objc_msgSend(v30, sel_userInterfaceIdiom);

  *(_QWORD *)(a2 + 24) = v31;
  *(_BYTE *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_24138156C()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B78();
  swift_release();
  swift_getKeyPath();
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413816B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI16WindowProperties___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24138170C()
{
  return type metadata accessor for WindowProperties();
}

void sub_241381734()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 137) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_241381744()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241381768()
{
  return sub_24138156C();
}

unint64_t sub_241381774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254384F80;
  if (!qword_254384F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543846C0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254384F80);
  }
  return result;
}

void sub_2413817C0()
{
  sub_241381734();
}

uint64_t sub_2413817D4()
{
  return sub_241303B8C();
}

void sub_24138180C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  _QWORD v32[5];
  CGRect v33;

  v2 = v1;
  v32[3] = &type metadata for Features;
  v32[4] = sub_2412FD4AC();
  v4 = swift_allocObject();
  v32[0] = v4;
  *(_QWORD *)(v4 + 16) = "MediaCoreUI";
  *(_QWORD *)(v4 + 24) = 11;
  *(_BYTE *)(v4 + 32) = 2;
  *(_QWORD *)(v4 + 40) = "Catamaran";
  *(_QWORD *)(v4 + 48) = 9;
  *(_BYTE *)(v4 + 56) = 2;
  v5 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(v2, sel_traitCollection);
    v7 = objc_msgSend(v6, sel_userInterfaceStyle);

    if (v7 == (id)2)
    {
      v8 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
      v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.8);

    }
    else
    {
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.901960784, 0.901960784, 0.901960784, 0.8);
    }
    v10 = (void *)objc_opt_self();
    objc_msgSend(v10, sel_begin);
    objc_msgSend(v10, sel_setDisableActions_, 1);
    v12 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer;
    v13 = *(void **)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer];
    if (v13)
    {
      LODWORD(v11) = 1.0;
      if ((a1 & 1) != 0)
        *(float *)&v11 = 0.0;
      objc_msgSend(v13, sel_setOpacity_, v11);
      v14 = *(void **)&v2[v12];
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_2414B8AC0;
        v16 = v14;
        v17 = objc_msgSend(v9, sel_colorWithAlphaComponent_, 0.0);
        v18 = objc_msgSend(v17, sel_CGColor);

        type metadata accessor for CGColor(0);
        v20 = v19;
        *(_QWORD *)(v15 + 56) = v19;
        *(_QWORD *)(v15 + 32) = v18;
        v21 = objc_msgSend(v9, sel_CGColor);
        *(_QWORD *)(v15 + 88) = v20;
        *(_QWORD *)(v15 + 64) = v21;
        v22 = objc_msgSend(v9, sel_CGColor);
        *(_QWORD *)(v15 + 120) = v20;
        *(_QWORD *)(v15 + 96) = v22;
        v23 = (void *)sub_2414B4EB8();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setColors_, v23);

        v24 = *(void **)&v2[v12];
        if (v24)
        {
          v25 = v24;
          objc_msgSend(v2, sel_bounds);
          objc_msgSend(v25, sel_setFrame_);

        }
      }
    }
    v26 = *(void **)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView];
    if (v26)
    {
      v27 = *(void **)&v2[v12];
      if (v27)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_2414BE320;
        sub_2412CC884(0, &qword_2543843E8);
        v29 = v26;
        v30 = v27;
        *(_QWORD *)(v28 + 32) = sub_2414B5314();
        objc_msgSend(v29, sel_frame);
        CGRectGetHeight(v33);
        objc_msgSend(v2, sel_bounds);
        *(_QWORD *)(v28 + 40) = sub_2414B2BC0();
        *(_QWORD *)(v28 + 48) = sub_2414B5314();
        v32[0] = v28;
        sub_2414B4EDC();
        v31 = (void *)sub_2414B4EB8();
        swift_bridgeObjectRelease();
        objc_msgSend(v30, sel_setLocations_, v31);

      }
    }
    objc_msgSend(v10, sel_commit);

  }
}

id sub_241381C20(uint64_t a1, char a2)
{
  id v2;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v7;
  CGFloat *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id result;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];
  CGRect v20;
  char v21;
  CGRect v22;

  if ((a2 & 1) == 0)
    return 0;
  sub_2412FFE80(a1, (uint64_t)&v20);
  if ((v21 & 1) != 0)
    return objc_msgSend((id)objc_opt_self(), sel_effectWithBlurRadius_, 18.0);
  x = v20.origin.x;
  y = v20.origin.y;
  width = v20.size.width;
  height = v20.size.height;
  if (CGRectIsEmpty(v20))
    return objc_msgSend((id)objc_opt_self(), sel_effectWithBlurRadius_, 18.0);
  v22.origin.x = x;
  v22.origin.y = y;
  v22.size.width = width;
  v22.size.height = height;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD618]), sel_initWithSize_, 1.0, CGRectGetHeight(v22));
  v8 = (CGFloat *)swift_allocObject();
  v8[2] = x;
  v8[3] = y;
  v8[4] = width;
  v8[5] = height;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_241382260;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_2412FFEC8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412FFEE8;
  aBlock[3] = &block_descriptor_6_0;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v7, sel_imageWithActions_, v10);
  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((v10 & 1) == 0)
  {
    objc_msgSend(v11, sel_size);
    v14 = v13;
    v16 = v15;
    v17 = (void *)objc_opt_self();
    if (v14 == 0.0 && v16 == 0.0)
      v18 = objc_msgSend(v17, sel_effectWithBlurRadius_, 18.0);
    else
      v18 = objc_msgSend(v17, sel_effectWithVariableBlurRadius_imageMask_, v11, 18.0);
    v2 = v18;
    swift_release();

    return v2;
  }
  __break(1u);
  return result;
}

id sub_241381EB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t storeEnumTagSinglePayload for MiniPlayerContainerView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241381F78 + 4 * byte_2414BE355[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241381FAC + 4 * byte_2414BE350[v4]))();
}

uint64_t sub_241381FAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241381FB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241381FBCLL);
  return result;
}

uint64_t sub_241381FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241381FD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241381FD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241381FDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MiniPlayerContainerView.Style()
{
  return &type metadata for MiniPlayerContainerView.Style;
}

unint64_t sub_241381FFC()
{
  unint64_t result;

  result = qword_257124750;
  if (!qword_257124750)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE3D0, &type metadata for MiniPlayerContainerView.Style);
    atomic_store(result, (unint64_t *)&qword_257124750);
  }
  return result;
}

void sub_241382040(void *a1, double a2, double a3, double a4, double a5)
{
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2414B9400;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_blackColor);
  v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.0);

  v15 = objc_msgSend(v14, sel_CGColor);
  type metadata accessor for CGColor(0);
  v17 = v16;
  *(_QWORD *)(v11 + 56) = v16;
  *(_QWORD *)(v11 + 32) = v15;
  v18 = objc_msgSend(v12, sel_blackColor);
  v19 = objc_msgSend(v18, sel_CGColor);

  *(_QWORD *)(v11 + 88) = v17;
  *(_QWORD *)(v11 + 64) = v19;
  v20 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setColors_, v20);

  objc_msgSend(v10, sel_setStartPoint_, 0.5, 1.0);
  objc_msgSend(v10, sel_setStartPoint_, 0.5, 0.0);
  objc_msgSend(v10, sel_setFrame_, a2, a3, a4, a5);
  v21 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v10, sel_renderInContext_, v21);

}

uint64_t sub_241382250()
{
  return swift_deallocObject();
}

void sub_241382260(void *a1)
{
  double *v1;

  sub_241382040(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24138226C()
{
  return swift_deallocObject();
}

uint64_t sub_24138227C()
{
  return swift_deallocObject();
}

void sub_24138228C()
{
  _BYTE *v0;
  _OWORD *v1;
  __int128 v2;
  _OWORD *v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = 0;
  v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  v2 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *v1 = *MEMORY[0x24BEBE158];
  v1[1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  *v3 = 0u;
  v3[1] = 0u;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = 0;

  sub_2414B5674();
  __break(1u);
}

uint64_t sub_24138235C()
{
  sub_2412D046C();
  return sub_2414B3838();
}

uint64_t sub_241382390()
{
  sub_2412D2CEC();
  return sub_2414B3838();
}

uint64_t (*sub_2413823C4())(uint64_t a1, char a2)
{
  __int128 v1;

  sub_2412C86C8();
  sub_2414B3838();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_241383BB8;
}

uint64_t sub_241382420(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, char *))
{
  char v4;

  v4 = a2;
  return a3(a1, &v4);
}

uint64_t NowPlayingHostedContentID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t static NowPlayingHostedContentID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2414B57D0();
}

uint64_t NowPlayingHostedContentID.hashValue.getter()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_24138251C()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_241382574()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413825B8()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_24138260C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2414B57D0();
}

void ContentLookupItem<>.init(_:hostedContent:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  sub_2413826B8();
  type metadata accessor for ContentLookupItem();
}

uint64_t sub_241382690()
{
  uint64_t (*v0)(void);

  return v0();
}

unint64_t sub_2413826B8()
{
  unint64_t result;

  result = qword_257124758;
  if (!qword_257124758)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentID, &type metadata for NowPlayingHostedContentID);
    atomic_store(result, (unint64_t *)&qword_257124758);
  }
  return result;
}

double ContentLookupItem<>.init<A>(_:viewController:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  double result;
  _OWORD v20[3];
  char v21;
  __int128 v22;
  _OWORD v23[3];
  char v24;
  __int128 v25;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v9 = *a1;
  v10 = a1[1];
  sub_2413EE720(a2, a3, (uint64_t)v23);
  v20[0] = v23[0];
  v20[1] = v23[1];
  v20[2] = v23[2];
  v21 = v24;
  v22 = v25;
  v12 = type metadata accessor for NowPlayingHostedViewControllerRepresentable(0, a4, a5, v11);
  v13 = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedViewControllerRepresentable<A>, v12);
  sub_2413EE7A0((uint64_t)v20, v12, v13, (uint64_t)v26);
  *(_QWORD *)a6 = v9;
  *(_QWORD *)(a6 + 8) = v10;
  v14 = v32;
  v15 = v34;
  *(_OWORD *)(a6 + 144) = v33;
  *(_OWORD *)(a6 + 160) = v15;
  *(_QWORD *)(a6 + 176) = v35;
  v16 = v28;
  v17 = v30;
  *(_OWORD *)(a6 + 80) = v29;
  *(_OWORD *)(a6 + 96) = v17;
  *(_OWORD *)(a6 + 112) = v31;
  *(_OWORD *)(a6 + 128) = v14;
  v18 = v26[1];
  *(_OWORD *)(a6 + 16) = v26[0];
  *(_OWORD *)(a6 + 32) = v18;
  result = *(double *)&v27;
  *(_OWORD *)(a6 + 48) = v27;
  *(_OWORD *)(a6 + 64) = v16;
  return result;
}

_QWORD *assignWithCopy for NowPlayingButtonID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for NowPlayingButtonID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241382870@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413828B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  return swift_release();
}

_QWORD *sub_24138291C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA20);
  swift_allocObject();
  v0[4] = sub_2414B2DB8();
  v6 = (char *)v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel13HostedContent__activeTransition;
  v13 = xmmword_2414BE400;
  v14 = 0;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437D6E8);
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  swift_weakInit();
  swift_weakAssign();
  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v8 = sub_2412CE474();
  v10 = v9;

  if (v10)
    v11 = v8;
  else
    v11 = 0;
  *(_QWORD *)&v13 = v11;
  *((_QWORD *)&v13 + 1) = v10;
  sub_2412D6BD4((uint64_t *)&v13, 0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_241382A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  result = sub_2414B2E48();
  if (a3)
  {
    v5 = qword_2571370F0;
    if (qword_2571370F0)
    {
      result = MEMORY[0x242695CC8](qword_2571370F0 + 32);
      if (result)
      {
        v6 = (void *)result;
        v7 = *(_QWORD *)(v5 + 40);
        ObjectType = swift_getObjectType();
        v9 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
        swift_retain();
        v9(ObjectType, v7);

        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_241382B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;

  v6 = qword_2571370F0;
  if (qword_2571370F0)
  {
    v7 = MEMORY[0x242695CC8](qword_2571370F0 + 32);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = *(_QWORD *)(v6 + 40);
      ObjectType = swift_getObjectType();
      v11 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
      swift_retain();
      v11(ObjectType, v9);

    }
    else
    {
      swift_retain();
    }
  }
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(_QWORD *)(result + 96);
    swift_retain();
    swift_release();
    KeyPath = swift_getKeyPath();
    v15 = swift_getKeyPath();
    sub_241303978(0, v13, KeyPath, v15);
    swift_beginAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2412CA3D0(a2, a3, a1);
    sub_2412D1668();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241382CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel13HostedContent__activeTransition;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_241382D50()
{
  return _s13HostedContentCMa();
}

_QWORD *_s13HostedContentC10TransitionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13HostedContentC10TransitionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13HostedContentC10TransitionVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241382E44@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];
  __int128 v29;
  __int128 v30;
  _BYTE v31[19];

  v25 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124768);
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124770);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v29 = *v1;
  v30 = v8;
  v10 = *v1;
  v9 = v1[1];
  *(_OWORD *)v31 = v1[2];
  *(_DWORD *)&v31[15] = *(_DWORD *)((char *)v1 + 47);
  v26 = v10;
  v27 = v9;
  v28[0] = v1[2];
  *(_DWORD *)((char *)v28 + 15) = *(_DWORD *)((char *)v1 + 47);
  sub_241384008((uint64_t)&v29);
  v11 = sub_2413833F8();
  if (v11)
  {
    if (v11 != 1)
      goto LABEL_9;
  }
  else if ((v31[18] & 1) == 0)
  {
    sub_2414B4A68();
    goto LABEL_9;
  }
  if (qword_257120728 != -1)
    swift_once();
  swift_retain();
LABEL_9:
  v12 = sub_241384048((uint64_t)&v29);
  MEMORY[0x24BDAC7A8](v12);
  *(&v20 - 2) = (uint64_t)&v29;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124778);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124780);
  v15 = sub_2412C8FC4(&qword_257124788, &qword_257124778, MEMORY[0x24BDEFB78]);
  v16 = sub_241384090();
  sub_2414B4570();
  swift_release();
  v26 = v29;
  v27 = v30;
  v28[0] = *(_OWORD *)v31;
  *(_DWORD *)((char *)v28 + 15) = *(_DWORD *)&v31[15];
  sub_241384008((uint64_t)&v29);
  if (sub_2413833F8() < 2u)
  {
    sub_2414B4A68();
    sub_2414B4A8C();
    swift_release();
  }
  v17 = sub_241384048((uint64_t)&v29);
  MEMORY[0x24BDAC7A8](v17);
  *(&v20 - 2) = (uint64_t)&v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571247B8);
  *(_QWORD *)&v26 = v13;
  *((_QWORD *)&v26 + 1) = v14;
  *(_QWORD *)&v27 = v15;
  *((_QWORD *)&v27 + 1) = v16;
  swift_getOpaqueTypeConformance2();
  sub_241384188();
  v18 = v24;
  sub_2414B4570();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v25, v7, v22);
}

uint64_t sub_241383210@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  __int128 v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  __int128 v22;
  char *v23;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571247A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124780);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *((_BYTE *)a2 + 49);
  if ((v12 & 1) != 0
    && (v13 = a2[1],
        v25 = *a2,
        v26 = v13,
        v27[0] = a2[2],
        *(_DWORD *)((char *)v27 + 15) = *(_DWORD *)((char *)a2 + 47),
        !sub_2413833F8()))
  {
    v14 = 0.9;
  }
  else
  {
    v14 = 1.0;
  }
  sub_2414B4B64();
  v16 = v15;
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571247B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v8, a1, v19);
  v20 = (double *)&v8[*(int *)(v6 + 36)];
  *v20 = v14;
  v20[1] = v14;
  *((_QWORD *)v20 + 2) = v16;
  *((_QWORD *)v20 + 3) = v18;
  v21 = 0.0;
  if ((v12 & 1) != 0)
  {
    v22 = a2[1];
    v25 = *a2;
    v26 = v22;
    v27[0] = a2[2];
    *(_DWORD *)((char *)v27 + 15) = *(_DWORD *)((char *)a2 + 47);
    if (sub_2413833F8() == 1)
    {
      if ((*((_BYTE *)a2 + 50) & 1) != 0)
        v21 = 0.95;
      else
        v21 = 0.99;
    }
  }
  sub_24138420C((uint64_t)v8, (uint64_t)v11);
  v23 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v23 = 0;
  *((double *)v23 + 1) = v21;
  sub_2412CBE78((uint64_t)v8, &qword_2571247A0);
  return sub_2412EAEA4((uint64_t)v11, a3, &qword_257124780);
}

uint64_t sub_2413833F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];
  char v12;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  v6 = *(_BYTE *)(v0 + 48);
  v11[4] = v1;
  v11[5] = v2;
  v11[6] = v3;
  v11[7] = v4;
  v12 = v5;
  sub_2412C72F4(v1, v2, v3, v4, v5);
  sub_2412E1CCC((uint64_t)v11);
  sub_2412C68A4(v1, v2, v3, v4, v5);
  if (v11[1] != 1)
  {
    v8 = swift_retain();
    v9 = sub_2412F0D3C(v8, v6);
    swift_release();
    swift_getKeyPath();
    v11[0] = v9;
    sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
    sub_2414B2B84();
    swift_release();
    v10 = *(_QWORD *)(v9 + 32);
    swift_release();
    if ((v10 & 0xFF0000) != 0x40000)
      __asm { BR              X10 }
    __break(1u);
    JUMPOUT(0x24138361CLL);
  }
  return 2;
}

uint64_t sub_24138362C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571247B8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a2 + 49) & 1) != 0)
    v9 = 0.0;
  else
    v9 = 1.0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571247D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, a1, v10);
  *(double *)&v8[*(int *)(v6 + 36)] = v9;
  return sub_2412EAEA4((uint64_t)v8, a3, &qword_2571247B8);
}

uint64_t sub_241383700()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath();
  type metadata accessor for WindowProperties();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2FEC();
  v1 = swift_getKeyPath();
  sub_2414B2FEC();
  sub_241383D10();
  sub_2414B3208();
  sub_2412C68A4(v1, 0, 0, 0, 0);
  swift_release();
  sub_2412C68A4(KeyPath, 0, 0, 0, 0);
  swift_release();
  v2 = swift_getKeyPath();
  sub_2414B2FEC();
  v5 = swift_getKeyPath();
  sub_2414B2FEC();
  sub_2414B3208();
  sub_2412C68A4(v5, 0, 0, 0, 0);
  swift_release();
  sub_2412C68A4(v2, 0, 0, 0, 0);
  swift_release();
  v3 = sub_2414B31CC();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_24138393C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2412CA3D0(v2, v3, v4);
  sub_2412D1668();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413839FC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 58);
  return result;
}

uint64_t sub_241383A40(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_241303978(v2, v3, KeyPath, v5);
}

uint64_t sub_241383AA0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;
  char v11;

  v3 = a1[1];
  v2 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  if (v3)
  {
    if (!v5)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    if (*a1 != *a2 || v3 != v5)
    {
      v9 = sub_2414B57D0();
      result = 0;
      if ((v9 & 1) == 0)
        return result;
    }
  }
  else if (v5)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v4)
  {
    if (!v7)
      return 1;
    goto LABEL_20;
  }
  if (!v7)
    goto LABEL_19;
  if (v2 == v6 && v4 == v7)
    return 1;
  v11 = sub_2414B57D0();
  result = 0;
  if ((v11 & 1) != 0)
    return 1;
  return result;
}

uint64_t sub_241383B94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241383BB8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, char *);
  char v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  v5 = a2;
  return v3(a1, &v5);
}

uint64_t sub_241383BF0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 58);
  return result;
}

uint64_t sub_241383C38@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241383C84()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241383CB0()
{
  uint64_t *v0;

  return sub_241382A84(v0[2], v0[3], v0[4]);
}

uint64_t sub_241383CBC()
{
  uint64_t *v0;

  return sub_241382B58(v0[2], v0[3], v0[4]);
}

ValueMetadata *type metadata accessor for ContentActiveTransitionKey()
{
  return &type metadata for ContentActiveTransitionKey;
}

ValueMetadata *type metadata accessor for UpdateContentSelectionKey()
{
  return &type metadata for UpdateContentSelectionKey;
}

ValueMetadata *type metadata accessor for SelectedContentKey()
{
  return &type metadata for SelectedContentKey;
}

unint64_t sub_241383D10()
{
  unint64_t result;

  result = qword_257124760;
  if (!qword_257124760)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE7A8, &type metadata for HostedContentTransition);
    atomic_store(result, (unint64_t *)&qword_257124760);
  }
  return result;
}

uint64_t destroy for HostedContentTransition(uint64_t a1)
{
  sub_2412C68A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_release();
}

uint64_t initializeWithCopy for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_2412C72F4(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v9;
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_2412C72F4(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_2412C68A4(v9, v10, v11, v12, v13);
  v14 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v14;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  char v11;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v4;
  sub_2412C68A4(v5, v6, v7, v8, v9);
  v11 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v11;
  swift_release();
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedContentTransition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 51))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedContentTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedContentTransition()
{
  return &type metadata for HostedContentTransition;
}

uint64_t sub_241383FF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241384008(uint64_t a1)
{
  sub_2412C72F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_retain();
  return a1;
}

uint64_t sub_241384048(uint64_t a1)
{
  sub_2412C68A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  return a1;
}

uint64_t sub_241384088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_241383210(a1, *(__int128 **)(v2 + 16), a2);
}

unint64_t sub_241384090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124790;
  if (!qword_257124790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124780);
    v2[0] = sub_2413840FC();
    v2[1] = sub_24137771C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124790);
  }
  return result;
}

unint64_t sub_2413840FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124798;
  if (!qword_257124798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571247A0);
    v2[0] = sub_2412C8FC4(&qword_2571247A8, &qword_2571247B0, MEMORY[0x24BDEFDC0]);
    v2[1] = MEMORY[0x24BDEBF50];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124798);
  }
  return result;
}

uint64_t sub_241384180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24138362C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_241384188()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571247C0;
  if (!qword_2571247C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571247B8);
    v2[0] = sub_2412C8FC4(&qword_2571247C8, &qword_2571247D0, MEMORY[0x24BDEFDC0]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571247C0);
  }
  return result;
}

uint64_t sub_24138420C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571247A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241384264()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124768);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571247B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124778);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124780);
  sub_2412C8FC4(&qword_257124788, &qword_257124778, MEMORY[0x24BDEFB78]);
  sub_241384090();
  swift_getOpaqueTypeConformance2();
  sub_241384188();
  return swift_getOpaqueTypeConformance2();
}

uint64_t View.alertPresenting(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[2];

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571247D8);
  sub_2412C8FC4(&qword_2571247E0, &qword_2571247D8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v11[0] = sub_2414B33C4();
  v11[1] = v8;
  v9 = sub_2413843F8();
  View.viewPresenting<A, B>(_:modifier:)(a1, (uint64_t)v11, a2, (uint64_t)&type metadata for Modifier, a3, v9, a4);
  return swift_release();
}

unint64_t sub_2413843F8()
{
  unint64_t result;

  result = qword_2571247E8;
  if (!qword_2571247E8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE858, &type metadata for Modifier);
    atomic_store(result, (unint64_t *)&qword_2571247E8);
  }
  return result;
}

uint64_t sub_24138443C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571247F0);
  v3 = sub_2414B3514();
  v7[0] = v1;
  v7[1] = sub_2413843F8();
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_2412C8FC4(&qword_2571247F8, &qword_2571247F0, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](v4, v3, v6);
}

_QWORD *assignWithCopy for Modifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for Modifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Modifier()
{
  return &type metadata for Modifier;
}

uint64_t sub_241384570()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241384580@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124818);
  v73 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v57 - v8;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124820);
  MEMORY[0x24BDAC7A8](v77);
  v78 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124828);
  v75 = *(uint64_t **)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v57 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124830);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v79 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 96));
  swift_beginAccess();
  v19 = v18[5];
  if (v19)
  {
    v68 = v10;
    v69 = v16;
    v70 = v15;
    v71 = v4;
    v72 = a2;
    v21 = v18[1];
    v23 = v18[2];
    v22 = v18[3];
    v24 = v18[4];
    v91 = *v18;
    v20 = v91;
    v92 = v21;
    v63 = v23;
    v93 = v23;
    v94 = v22;
    v95 = v24 & 1;
    v96 = v19;
    v25 = v19;
    v65 = v22;
    swift_bridgeObjectRetain();
    v67 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_2414B4648();
    v64 = v20;
    if (v21)
      v27 = v20;
    else
      v27 = 0;
    v28 = 0xE000000000000000;
    if (v21)
      v28 = v21;
    v66 = v24;
    v62 = v26;
    v61 = v21;
    v89 = v28;
    v90 = v26;
    v88 = v27;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571247D8);
    sub_2412C8FC4(&qword_2571247E0, &qword_2571247D8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    sub_2414B33D0();
    swift_getKeyPath();
    sub_2414B33DC();
    swift_release();
    v29 = swift_release();
    if ((v24 & 1) != 0)
    {
      v75 = &v57;
      LODWORD(v74) = v82;
      MEMORY[0x24BDAC7A8](v29);
      MEMORY[0x24BDAC7A8](v43);
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124838);
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384180);
      v59 = sub_2412F6D88();
      v45 = sub_2413855E4();
      v60 = sub_241385660();
      v46 = v45;
      v47 = MEMORY[0x24BEE0D00];
      v48 = MEMORY[0x24BDF3E48];
      sub_2414B4360();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v49 = v73;
      v50 = v76;
      v51 = v71;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v76, v6, v71);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v78, v50, v51);
      swift_storeEnumTagMultiPayload();
      v80 = v48;
      v81 = v47;
      v52 = v58;
      v82 = v58;
      v83 = v44;
      v53 = v59;
      v84 = MEMORY[0x24BDF3E20];
      v85 = v59;
      v54 = v60;
      v86 = v46;
      v87 = v60;
      swift_getOpaqueTypeConformance2();
      v80 = MEMORY[0x24BDF3E48];
      v81 = MEMORY[0x24BEE0D00];
      v82 = v52;
      v83 = v44;
      v84 = MEMORY[0x24BDF3E20];
      v85 = v53;
      v86 = v46;
      v87 = v54;
      swift_getOpaqueTypeConformance2();
      v41 = (uint64_t)v79;
      sub_2414B3A84();
      swift_release();
      sub_2413856BC(v64, v61, v63, v65, v66, v67);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    }
    else
    {
      v76 = (char *)&v57;
      LODWORD(v73) = v82;
      MEMORY[0x24BDAC7A8](v29);
      MEMORY[0x24BDAC7A8](v30);
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124838);
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384180);
      v59 = sub_2412F6D88();
      v60 = sub_2413855E4();
      v56 = sub_241385660();
      v32 = v31;
      v33 = MEMORY[0x24BEE0D00];
      v34 = MEMORY[0x24BDF3E48];
      sub_2414B4498();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v35 = v75;
      v36 = v74;
      v37 = v68;
      ((void (*)(char *, char *, uint64_t))v75[4])(v74, v12, v68);
      ((void (*)(char *, char *, uint64_t))v35[2])(v78, v36, v37);
      swift_storeEnumTagMultiPayload();
      v80 = v34;
      v81 = v33;
      v38 = v58;
      v82 = v58;
      v83 = v32;
      v39 = v59;
      v84 = MEMORY[0x24BDF3E20];
      v85 = v59;
      v40 = v60;
      v86 = v60;
      v87 = v56;
      swift_getOpaqueTypeConformance2();
      v80 = MEMORY[0x24BDF3E48];
      v81 = MEMORY[0x24BEE0D00];
      v82 = v38;
      v83 = v32;
      v84 = MEMORY[0x24BDF3E20];
      v85 = v39;
      v86 = v40;
      v87 = v56;
      swift_getOpaqueTypeConformance2();
      v41 = (uint64_t)v79;
      sub_2414B3A84();
      swift_release();
      sub_2413856BC(v64, v61, v63, v65, v66, v67);
      ((void (*)(char *, uint64_t))v35[1])(v36, v37);
    }
    a2 = v72;
    sub_2412EAEA4(v41, v72, &qword_257124830);
    v42 = 0;
    v15 = v70;
    v16 = v69;
  }
  else
  {
    v42 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v42, 1, v15);
}

uint64_t sub_241384E9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241384F30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_241384FB8()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124858);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124850);
  sub_2412C8FC4(&qword_257124860, &qword_257124858, MEMORY[0x24BEE12D8]);
  sub_2412C8FC4(&qword_257124848, &qword_257124850, MEMORY[0x24BDF43B0]);
  sub_241385710();
  return sub_2414B4948();
}

uint64_t sub_241385090@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2412F6D88();
    swift_bridgeObjectRetain();
    result = sub_2414B40F0();
    v7 = v6 & 1;
  }
  else
  {
    result = 0;
    v4 = 0;
    v7 = 0;
    v5 = 0;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_241385110@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124870);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124850);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v19 = *a1;
  v20 = v11;
  v21 = a1[2];
  v22 = *((_QWORD *)a1 + 6);
  v18 = v11;
  sub_2412EAEA4((uint64_t)&v21, (uint64_t)&v23, &qword_257124878);
  sub_2412EAEA4((uint64_t)&v23, (uint64_t)&v24, &qword_257124878);
  v12 = v24;
  if (v24 == 2)
  {
    v13 = sub_2414B2F08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((v12 & 1) != 0)
      sub_2414B2EF0();
    else
      sub_2414B2EFC();
    v14 = sub_2414B2F08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  }
  v15 = swift_allocObject();
  v16 = v20;
  *(_OWORD *)(v15 + 16) = v19;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = v21;
  *(_QWORD *)(v15 + 64) = v22;
  sub_241385798((uint64_t)&v19);
  sub_2412F6D88();
  sub_2414B47E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

void sub_241385304(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
  {
    v6 = *(_QWORD *)(a1 + 48);
    v7 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_2414B4FC0();
    swift_retain_n();
    v8 = sub_2414B4FB4();
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x24BEE6930];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v5;
    v9[5] = v6;
    sub_2413EE440((uint64_t)v4, (uint64_t)&unk_257124888, (uint64_t)v9);
    sub_2412C9444(v5);
    swift_release();
  }
}

uint64_t sub_241385404(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_2414B4FC0();
  v4[3] = sub_2414B4FB4();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_241385480;
  return v8();
}

uint64_t sub_241385480()
{
  swift_task_dealloc();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413854F0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241385520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v2 + 8);
  v6 = sub_2414B4A44();
  v8 = v7;
  v9 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257124800) + 36);
  sub_241384580(v5, v9);
  v10 = (uint64_t *)(v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257124808) + 36));
  *v10 = v6;
  v10[1] = v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
}

uint64_t sub_2413855CC()
{
  return sub_241384FB8();
}

unint64_t sub_2413855E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257124840;
  if (!qword_257124840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124838);
    v2 = sub_2412C8FC4(&qword_257124848, &qword_257124850, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257124840);
  }
  return result;
}

unint64_t sub_241385660()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254384188;
  if (!qword_254384188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384180);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254384188);
  }
  return result;
}

uint64_t sub_2413856BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2413856F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241385090(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_241385710()
{
  unint64_t result;

  result = qword_257124868;
  if (!qword_257124868)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for Alert.Action, &type metadata for Alert.Action);
    atomic_store(result, (unint64_t *)&qword_257124868);
  }
  return result;
}

uint64_t sub_241385754()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

void sub_241385790()
{
  uint64_t v0;

  sub_241385304(v0 + 16);
}

uint64_t sub_241385798(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412D2824(v2);
  return a1;
}

uint64_t sub_2413857E4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241385810(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310430;
  return sub_241385404(a1, v4, v5, v6);
}

uint64_t sub_241385890()
{
  return 8;
}

_QWORD *sub_24138589C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_2413858AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124890;
  if (!qword_257124890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124800);
    v2[0] = sub_2412C8FC4(&qword_257124898, &qword_257124810, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_2571248A0, &qword_257124808, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124890);
  }
  return result;
}

uint64_t LibraryStandardButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = sub_2414B3BC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248A8);
  MEMORY[0x24BDAC7A8](v19);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248B0);
  MEMORY[0x24BDAC7A8](v20);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)v1;
  v11 = *(_BYTE *)(v1 + 8);
  sub_2414B3BD4();
  v12 = sub_2414B4A44();
  v14 = v13;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v2);
  v15 = &v7[*(int *)(v19 + 36)];
  *(_QWORD *)v15 = sub_241385B38;
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = v12;
  *((_QWORD *)v15 + 3) = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2412C7080(v10, v11);
  LOBYTE(v12) = sub_2412F9C24(v10, v11);
  sub_2412C821C(v10, v11);
  v16 = 0.25;
  if ((v12 & 1) != 0)
  {
    if ((sub_2414B3BE0() & 1) != 0)
      v16 = 0.5;
    else
      v16 = 1.0;
  }
  sub_2412DC3FC((uint64_t)v7, (uint64_t)v9, &qword_2571248A8);
  *(double *)&v9[*(int *)(v20 + 36)] = v16;
  sub_2412CBE78((uint64_t)v7, &qword_2571248A8);
  return sub_2412EAEA4((uint64_t)v9, v21, &qword_2571248B0);
}

uint64_t sub_241385B38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_2414B325C();
  *a1 = v2;
  a1[1] = v3;
  type metadata accessor for BackgroundCapsule();
  if (qword_257120A98 != -1)
    swift_once();
  sub_241386654();
  return sub_2414B30E8();
}

uint64_t sub_241385BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _BYTE v34[16];
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v2 = v1;
  v4 = sub_2414B4918();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124980);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124988);
  MEMORY[0x24BDAC7A8](v35);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124990);
  MEMORY[0x24BDAC7A8](v37);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124998);
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *MEMORY[0x24BDEEB68];
  v18 = sub_2414B38C8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v6, v17, v18);
  v19 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
  v20 = MEMORY[0x242693F58](v19);
  sub_241327320((uint64_t)v6, (uint64_t)v9);
  v21 = *(int *)(v7 + 36);
  v36 = v9;
  *(_QWORD *)&v9[v21] = v20;
  sub_241326D24((uint64_t)v6);
  if (qword_257120A98 != -1)
    swift_once();
  type metadata accessor for BackgroundCapsule();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  sub_2414B30F4();
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B35F8();
  v22 = (uint64_t)v36;
  sub_2412DC3FC((uint64_t)v36, (uint64_t)v11, &qword_257124980);
  v23 = &v11[*(int *)(v35 + 36)];
  v24 = v43;
  v23[4] = v42;
  v23[5] = v24;
  v23[6] = v44;
  v25 = v39;
  *v23 = v38;
  v23[1] = v25;
  v26 = v41;
  v23[2] = v40;
  v23[3] = v26;
  sub_2412CBE78(v22, &qword_257124980);
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v13, &qword_257124988);
  v27 = &v13[*(int *)(v37 + 36)];
  v28 = v46;
  *v27 = v45;
  v27[1] = v28;
  v27[2] = v47;
  sub_2412CBE78((uint64_t)v11, &qword_257124988);
  if (qword_257120A90 != -1)
    swift_once();
  v29 = qword_2571371B8;
  v30 = *v2;
  v31 = v2[1];
  sub_2412DC3FC((uint64_t)v13, (uint64_t)v16, &qword_257124990);
  v32 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *v32 = v29;
  v32[1] = v30;
  v32[2] = v31;
  swift_retain();
  sub_2412CBE78((uint64_t)v13, &qword_257124990);
  return sub_2412EAEA4((uint64_t)v16, a1, &qword_257124998);
}

uint64_t static MCUINamespace<A>.libraryStandard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_2413860C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2413860F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241386120()
{
  return sub_2414B37E4();
}

uint64_t sub_241386144()
{
  return sub_2414B37E4();
}

uint64_t sub_241386168()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LibraryStandardButtonStyle()
{
  return &type metadata for LibraryStandardButtonStyle;
}

uint64_t sub_241386188()
{
  return sub_2412DC484(&qword_2571248B8, &qword_2571248B0, (uint64_t (*)(void))sub_2413861BC, MEMORY[0x24BDECC38]);
}

unint64_t sub_2413861BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571248C0;
  if (!qword_2571248C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571248A8);
    v2[0] = sub_2412C8030(&qword_25437D0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0440], MEMORY[0x24BDF0438]);
    v2[1] = sub_2412C8FC4(&qword_2571248C8, &qword_2571248D0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571248C0);
  }
  return result;
}

uint64_t *sub_241386258(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_2413862E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_241386320(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_241386380(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_2413863E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_241386448(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_2413864A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413864B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_2413864F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241386504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for BackgroundCapsule()
{
  uint64_t result;

  result = qword_257124938;
  if (!qword_257124938)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241386588()
{
  unint64_t v0;

  sub_2413865FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2413865FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257124948)
  {
    sub_241386654();
    v0 = sub_2414B3100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257124948);
  }
}

unint64_t sub_241386654()
{
  unint64_t result;

  result = qword_257124950;
  if (!qword_257124950)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_257124950);
  }
  return result;
}

uint64_t sub_241386698()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413866AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571249A0;
  if (!qword_2571249A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124998);
    v2[0] = sub_2412DC484(&qword_2571249A8, &qword_257124990, sub_241386750, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_2412C8FC4(&qword_2571249C0, &qword_2571249C8, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571249A0);
  }
  return result;
}

uint64_t sub_241386750()
{
  return sub_2412DC484(&qword_2571249B0, &qword_257124988, (uint64_t (*)(void))sub_241386774, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_241386774()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571249B8;
  if (!qword_2571249B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124980);
    v2[0] = sub_2412C8030((unint64_t *)&unk_257120580, (uint64_t (*)(uint64_t))MEMORY[0x24BDF48E8], MEMORY[0x24BDF48D0]);
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571249B8);
  }
  return result;
}

uint64_t sub_241386810(double a1, uint64_t a2, unint64_t a3)
{
  id v3;
  _BYTE *v4;
  uint64_t result;

  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    result = sub_2414B5668();
    __break(1u);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1818]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 1, a3, 1, a1);
    if (!v3)
    {
      sub_241386BE8();
      swift_allocError();
      *v4 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

AudioQueueBufferRef sub_241386938(void *a1, OpaqueAudioQueue *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unsigned int *v7;
  unint64_t v8;
  unint64_t v9;
  OSStatus Buffer;
  uint64_t v11;
  AudioQueueBufferRef result;
  AudioQueueBufferRef outBuffer[2];

  outBuffer[1] = *(AudioQueueBufferRef *)MEMORY[0x24BDAC8D0];
  v7 = (unsigned int *)objc_msgSend(a1, sel_streamDescription);
  v8 = v7[5] * (unint64_t)v7[6];
  if ((v8 & 0xFFFFFFFF00000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((a5 & 0x8000000000000000) != 0 || HIDWORD(a5))
  {
    result = (AudioQueueBufferRef)sub_2414B5668();
    __break(1u);
    return result;
  }
  v9 = a5 * (unint64_t)v8;
  if ((v9 & 0xFFFFFFFF00000000) != 0)
LABEL_10:
    __break(1u);
  outBuffer[0] = 0;
  Buffer = AudioQueueAllocateBuffer(a2, v9, outBuffer);
  if (Buffer || (result = outBuffer[0]) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
    sub_241386AC0();
    swift_allocError();
    *(_BYTE *)v11 = 3;
    *(_DWORD *)(v11 + 4) = Buffer;
    return (AudioQueueBufferRef)swift_willThrow();
  }
  return result;
}

unint64_t sub_241386AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571249D8;
  if (!qword_2571249D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571249D0);
    result = MEMORY[0x242695AE8](&unk_2414BE068, v1);
    atomic_store(result, (unint64_t *)&qword_2571249D8);
  }
  return result;
}

AudioQueueRef sub_241386B0C(void *a1, void *a2)
{
  OSStatus v2;
  uint64_t v3;
  AudioQueueRef result;
  AudioQueueRef v5[2];

  v5[1] = *(AudioQueueRef *)MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v2 = AudioQueueNewInput((const AudioStreamBasicDescription *)objc_msgSend(a1, sel_streamDescription), (AudioQueueInputCallback)sub_2413E674C, a2, 0, 0, 0x800u, v5);
  if (v2 || (result = v5[0]) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
    sub_241386AC0();
    swift_allocError();
    *(_BYTE *)v3 = 1;
    *(_DWORD *)(v3 + 4) = v2;
    return (AudioQueueRef)swift_willThrow();
  }
  return result;
}

unint64_t sub_241386BE8()
{
  unint64_t result;

  result = qword_2571249E0;
  if (!qword_2571249E0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C8594, &type metadata for AudioTap.Error);
    atomic_store(result, (unint64_t *)&qword_2571249E0);
  }
  return result;
}

uint64_t sub_241386C2C()
{
  sub_2412C8430();
  return sub_2414B3838();
}

uint64_t sub_241386C60()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

BOOL static NowPlayingArtwork.Placement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NowPlayingArtwork.Placement.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t NowPlayingArtwork.Placement.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t NowPlayingStandardArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingStandardArtworkTreatment.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2412F192C(*a1, *a2);
}

uint64_t sub_241386D40(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_2414B58CC();
    swift_bridgeObjectRetain();
    sub_2414B4DD4();
    v18 = sub_2414B58FC();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_2414B57D0() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_2414B57D0() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t static NowPlayingArtworkTreatment<>.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2412DD598((uint64_t)&unk_251163278);
  *a1 = result;
  return result;
}

uint64_t NowPlayingBackgroundStaticArtworkTreatment.placements(for:)(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 18) || (*(_BYTE *)(a1 + 32) & 1) == 0 && *(_QWORD *)(a1 + 24) == 1)
    return sub_2412DD598((uint64_t)&unk_251163118);
  else
    return swift_bridgeObjectRetain();
}

id static NowPlayingArtworkTreatment<>.background(image:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_2412DD598((uint64_t)&unk_2511632A0);
  a2[1] = (uint64_t)a1;
  return a1;
}

uint64_t NowPlayingVideoPlayerArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingVideoPlayerArtworkTreatment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_2412CC884(0, &qword_254382930);
  if ((sub_2414B532C() & 1) != 0 && (sub_24138712C(v2, v4) & 1) != 0)
    return sub_2412F192C(v3, v5);
  else
    return 0;
}

id sub_24138712C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_2414B56C8();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_2414B56C8();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x242694E34](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x242694E34](0, v2);
LABEL_21:
    v14 = v13;
    sub_2412CC884(0, &qword_2571249E8);
    v15 = sub_2414B532C();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x242694E34](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x242694E34](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_2414B532C();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_2414B532C();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_241387420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  double v5;
  double v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (double *)(a2 + 48);
    v4 = (double *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*((_QWORD *)v4 - 2) == *((_QWORD *)v3 - 2) && *((_QWORD *)v4 - 1) == *((_QWORD *)v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_2414B57D0();
        result = 0;
        if ((v8 & 1) == 0 || v5 != v6)
          return result;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_2413874D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413874D8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_2412CC884(0, &qword_254382930);
  if ((sub_2414B532C() & 1) != 0 && (sub_24138712C(v2, v4) & 1) != 0)
    return sub_2412F192C(v3, v5);
  else
    return 0;
}

uint64_t static NowPlayingArtworkTreatment<>.videoPlayer(_:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  v4 = (void *)objc_opt_self();
  v5 = a1;
  v6 = objc_msgSend(v4, sel_systemDefaultSpeeds);
  sub_2412CC884(0, &qword_2571249E8);
  v7 = sub_2414B4EC4();

  *a2 = v5;
  a2[1] = v7;
  result = sub_2412DD598((uint64_t)&unk_2511632C8);
  a2[2] = result;
  return result;
}

uint64_t static NowPlayingArtworkTreatment<>.videoPlayer(_:speeds:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  *a3 = a1;
  a3[1] = a2;
  a3[2] = sub_2412DD598((uint64_t)&unk_2511632F0);
  v4 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t NowPlayingMPCVideoArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingMPCVideoArtworkTreatment.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_2412F192C(*a1, *a2) & 1) == 0)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571249F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
  return sub_2414B5038();
}

uint64_t sub_2413876DC(uint64_t *a1, uint64_t *a2)
{
  if ((sub_2412F192C(*a1, *a2) & 1) == 0)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571249F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
  return sub_2414B5038();
}

uint64_t static NowPlayingArtworkTreatment<>.mpcVideo(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_2412DD598((uint64_t)&unk_251163318);
  a2[1] = a1;
  return swift_retain();
}

uint64_t sub_241387790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v6[40];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(_BYTE *))(v2 + 16))(&v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437D880);
  v3 = swift_dynamicCast();
  if ((_DWORD)v3)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3;
}

void sub_24138782C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image) = a2;
  v3 = a2;

  sub_2414AA544();
}

uint64_t sub_24138787C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t OpaqueTypeConformance2;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[4];
  __int128 v105[5];
  _OWORD v106[2];
  __int128 v107[2];
  uint64_t v108;
  _BYTE v109[40];
  _QWORD v110[3];

  v92 = a5;
  v89 = _s9VideoViewVMa(255, a2, a3, a4);
  v8 = sub_2414B3514();
  sub_2414B3DB4();
  v90 = v8;
  v9 = sub_2414B3514();
  v83 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v85 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v84 = (uint64_t)&v74 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v76 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v74 - v14;
  v16 = sub_2414B3514();
  v81 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v74 - v17;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = sub_2412FDE80();
  v75 = AssociatedConformanceWitness;
  v110[0] = AssociatedConformanceWitness;
  v110[1] = v19;
  v94 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v110);
  v95 = v16;
  *(_QWORD *)&v105[0] = v16;
  *((_QWORD *)&v105[0] + 1) = v94;
  v20 = MEMORY[0x242695A94](0, v105, MEMORY[0x24BDF2550], 0);
  v78 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v77 = (char *)&v74 - v21;
  v22 = sub_2414B3514();
  v80 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v82 = (uint64_t)&v74 - v26;
  v91 = v9;
  v86 = v27;
  v28 = sub_2414B3A90();
  v87 = *(_QWORD *)(v28 - 8);
  v88 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v93 = (uint64_t)&v74 - v29;
  sub_2412F1B18(a1 + 8, (uint64_t)v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437D880);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_2412FAA04(v107, (uint64_t)v109);
    sub_2412F1B18((uint64_t)v109, (uint64_t)v105);
    sub_241482FA8(v105, (uint64_t)v107);
    v30 = v89;
    v31 = MEMORY[0x242695AE8](&unk_2414CC120, v89);
    sub_2413DE170(v30, v31);
    (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v107, v30);
    v32 = sub_2412EEA34();
    v98[0] = v31;
    v98[1] = v32;
    v33 = MEMORY[0x24BDED308];
    v34 = v90;
    v35 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v90, v98);
    v36 = (uint64_t)v85;
    sub_2412FD5F4(0xD000000000000012, 0x80000002414D0600, (uint64_t)&unk_251163340);
    swift_arrayDestroy();
    (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v105, v34);
    v37 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v97[0] = v35;
    v97[1] = v37;
    v38 = v91;
    MEMORY[0x242695AE8](v33, v91, v97);
    v39 = v84;
    sub_2412FBF34(v36, v38, v84);
    v40 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v40(v36, v38);
    sub_2412EEA1C(v39, v38, v36);
    *(_QWORD *)&v105[0] = v95;
    *((_QWORD *)&v105[0] + 1) = v94;
    v96[0] = swift_getOpaqueTypeConformance2();
    v96[1] = v37;
    v41 = v33;
    v42 = v86;
    MEMORY[0x242695AE8](v41, v86, v96);
    sub_24132F340(v36, v38);
    v40(v36, v38);
    v40(v39, v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
  }
  else
  {
    v108 = 0;
    memset(v107, 0, sizeof(v107));
    sub_2412CBE78((uint64_t)v107, qword_25437D890);
    sub_2412C84FC(*(_QWORD *)(a1 + 72));
    v43 = *(void (**)(uint64_t, uint64_t))(a3 + 256);
    swift_unknownObjectRetain();
    v43(a2, a3);
    swift_unknownObjectRelease();
    v44 = v79;
    sub_2412F1648(AssociatedTypeWitness, v75);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v15, AssociatedTypeWitness);
    v46 = _s31PrimaryArtworkViewOrVideoPlayerVMa(0, a2, a3, v45);
    (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v105, a1, v46);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = a2;
    *(_QWORD *)(v47 + 24) = a3;
    v48 = v106[0];
    *(_OWORD *)(v47 + 96) = v105[4];
    *(_OWORD *)(v47 + 112) = v48;
    *(_OWORD *)(v47 + 121) = *(_OWORD *)((char *)v106 + 9);
    v49 = v105[1];
    *(_OWORD *)(v47 + 32) = v105[0];
    *(_OWORD *)(v47 + 48) = v49;
    v50 = v105[3];
    *(_OWORD *)(v47 + 64) = v105[2];
    *(_OWORD *)(v47 + 80) = v50;
    v51 = v77;
    v53 = v94;
    v52 = v95;
    sub_2414B4258();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v52);
    *(_QWORD *)&v105[0] = v52;
    *((_QWORD *)&v105[0] + 1) = v53;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2412F6DCC();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v51, v20);
    v55 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v104[2] = OpaqueTypeConformance2;
    v104[3] = v55;
    v56 = MEMORY[0x24BDED308];
    v42 = v86;
    MEMORY[0x242695AE8]();
    v57 = v82;
    sub_2412FBF34((uint64_t)v25, v42, v82);
    v58 = *(void (**)(char *, uint64_t))(v80 + 8);
    v58(v25, v42);
    sub_2412EEA1C(v57, v42, (uint64_t)v25);
    v30 = v89;
    v59 = MEMORY[0x242695AE8](&unk_2414CC120, v89);
    v60 = sub_2412EEA34();
    v104[0] = v59;
    v104[1] = v60;
    v61 = v56;
    v62 = v56;
    v34 = v90;
    v103[0] = MEMORY[0x242695AE8](v62, v90, v104);
    v103[1] = v55;
    v63 = v61;
    v38 = v91;
    MEMORY[0x242695AE8](v63, v91, v103);
    sub_2412F1584((uint64_t)v25, v38, v42);
    v58(v25, v42);
    v58((char *)v57, v42);
  }
  v64 = MEMORY[0x242695AE8](&unk_2414CC120, v30);
  v65 = sub_2412EEA34();
  v102[0] = v64;
  v102[1] = v65;
  v66 = MEMORY[0x24BDED308];
  v67 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v34, v102);
  v68 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v101[0] = v67;
  v101[1] = v68;
  v69 = MEMORY[0x242695AE8](v66, v38, v101);
  *(_QWORD *)&v105[0] = v95;
  *((_QWORD *)&v105[0] + 1) = v94;
  v100[0] = swift_getOpaqueTypeConformance2();
  v100[1] = v68;
  v70 = MEMORY[0x242695AE8](v66, v42, v100);
  v99[0] = v69;
  v99[1] = v70;
  v71 = v88;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v88, v99);
  v72 = v93;
  sub_2412EEA1C(v93, v71, v92);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v72, v71);
}

uint64_t sub_2413880F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(_QWORD *, char *);
  char v10;
  _QWORD v11[2];

  if (*(_BYTE *)(result + 48) != 2)
  {
    v1 = result;
    if (*(_QWORD *)(result + 64))
    {
      if (qword_2543809C0 != -1)
        swift_once();
      v2 = sub_2414B2CA4();
      __swift_project_value_buffer(v2, (uint64_t)qword_25438E7B8);
      v3 = sub_2414B2C8C();
      v4 = sub_2414B51B8();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_2412C1000, v3, v4, "Dismissing selected content because artwork was tapped", v5, 2u);
        MEMORY[0x242695BD8](v5, -1, -1);
      }

      v6 = *(_QWORD *)(v1 + 88);
      v7 = *(_QWORD *)(v1 + 96);
      v8 = *(_BYTE *)(v1 + 104);
      sub_2412EE9B0();
      v9 = (void (*)(_QWORD *, char *))sub_241345AEC(v6, v7, v8);
      sub_2412EEDAC();
      v11[0] = 0;
      v11[1] = 0;
      v10 = 1;
      v9(v11, &v10);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_241388250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v25[2];
  _QWORD v26[6];
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;

  v38 = sub_2414B4648();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  sub_2414B4A44();
  _s18ArtworkPlaceholderVMa(255, v3, v4, v5);
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  v7 = sub_2414B53B0();
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v7, &v29);
  sub_2414B4120();
  swift_release();
  v8 = v31;
  v9 = v32;
  v10 = v33;
  v11 = v34;
  v12 = v35;
  v13 = v36;
  v26[0] = v30;
  v26[1] = v31;
  v26[2] = v32;
  v26[3] = v33;
  v26[4] = v34;
  v26[5] = v35;
  v27 = v36;
  v28 = v37;
  v14 = sub_2414B3A6C();
  v15 = sub_2414B3514();
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v14);
  v25[0] = MEMORY[0x24BDF3E20];
  v25[1] = v16;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v25);
  sub_2412FBF34((uint64_t)v26, v15, (uint64_t)&v38);
  swift_release();
  sub_2412FB5A4(v8, v9, v10, v11, v12, v13);
  v17 = v39;
  v18 = v40;
  v19 = v41;
  v20 = v42;
  v21 = v43;
  v22 = v44;
  v30 = v38;
  v31 = v39;
  v32 = v40;
  v33 = v41;
  v34 = v42;
  v35 = v43;
  v36 = v44;
  v37 = v45;
  sub_2412EEA1C((uint64_t)&v30, v15, a2);
  swift_release();
  return sub_2412FB5A4(v17, v18, v19, v20, v21, v22);
}

uint64_t sub_2413884A0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[5];
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  char v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45[2];
  _BYTE v46[8];
  uint64_t v47;
  unsigned __int8 v48;
  _BYTE v49[8];
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v9 = a2 & 1;
  sub_2412C6F44(a1, v9);
  sub_2412F65C0(a1, v9, &v57);
  sub_2412C8228(a1, v9);
  if (v57 == 1)
  {
    KeyPath = swift_getKeyPath();
    LOBYTE(v57) = 0;
    v58 = KeyPath;
    LOBYTE(v59) = 0;
    v13 = _s18ArtworkPlaceholderVMa(0, a3, a4, v12);
    v14 = MEMORY[0x242695AE8](&unk_2414BF158, v13);
    sub_2412FBF34((uint64_t)&v57, v13, (uint64_t)v49);
    sub_2412C8228(KeyPath, 0);
    v15 = swift_getKeyPath();
    LOBYTE(v57) = 1;
    v58 = v15;
    LOBYTE(v59) = 0;
    sub_2412FBF34((uint64_t)&v57, v13, (uint64_t)v46);
    sub_2412C8228(v15, 0);
    v42 = v49[0];
    v43 = v50;
    v44 = v51;
    v16 = v47;
    v17 = v48;
    v39 = v46[0];
    v40 = v47;
    v41 = v48;
    v45[0] = (uint64_t)&v42;
    v45[1] = (uint64_t)&v39;
    sub_2412C6F44(v50, v51);
    sub_2412C6F44(v16, v17);
    v38[0] = v13;
    v38[1] = v13;
    v36 = v14;
    v37 = v14;
    sub_2412F68CC(v45, 2uLL, (uint64_t)v38);
    sub_2412C8228(v47, v48);
    sub_2412C8228(v50, v51);
    sub_2412C8228(v40, v41);
    sub_2412C8228(v43, v44);
    v18 = v54;
    v19 = BYTE8(v54);
    v20 = *((_QWORD *)&v55 + 1);
    v21 = v56;
    v34[0] = v53;
    v34[1] = v54;
    v34[2] = BYTE8(v54);
    v34[3] = v55;
    v34[4] = *((_QWORD *)&v55 + 1);
    v35 = v56;
    swift_getTupleTypeMetadata2();
    v22 = sub_2414B4B1C();
    MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v22);
    sub_2412F65F0((uint64_t)v34, (uint64_t)&v57);
    sub_2412C8228(v18, v19);
    sub_2412C8228(v20, v21);
    v23 = v57;
    v24 = v58;
    v25 = v59;
    v26 = v60;
    v27 = v61;
    v28 = v62;
    _s18ArtworkPlaceholderVMa(255, a3, a4, v29);
  }
  else
  {
    v53 = 2;
    _s18ArtworkPlaceholderVMa(255, a3, a4, v10);
    v54 = 0u;
    v55 = 0u;
    v56 = 0;
    swift_getTupleTypeMetadata2();
    v30 = sub_2414B4B1C();
    MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v30);
    sub_2412F65F0((uint64_t)&v53, (uint64_t)&v57);
    v23 = v57;
    v24 = v58;
    v25 = v59;
    v26 = v60;
    v27 = v61;
    v28 = v62;
  }
  v57 = v23;
  v58 = v24;
  v59 = v25;
  v60 = v26;
  v61 = v27;
  v62 = v28;
  swift_getTupleTypeMetadata2();
  v31 = sub_2414B4B1C();
  v32 = sub_2414B53B0();
  v52 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v31);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v32, &v52);
  sub_2412EEA1C((uint64_t)&v57, v32, a5);
  return sub_2412FB5A4(v23, v24, v25, v26, v27, v28);
}

uint64_t sub_241388844@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_241388874()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2413888E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCCC11MediaCoreUI19NowPlayingViewModel7Artwork17BackgroundArtwork__snapshotImage;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24138893C()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_2413889C0()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_241388A40@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2414B571C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_241388A9C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746C7561666564;
  if (*v1)
    v2 = 0x756F72676B636162;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA0000000000646ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_241388AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a3;
  v15 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_beginAccess();
  sub_2412F1B18(a2 + 16, (uint64_t)v11);
  v9 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  LOBYTE(v9) = NowPlayingArtworkTreatment.isEqual(_:)((uint64_t)&v13, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if ((v9 & 1) == 0)
    sub_2413031AC((uint64_t)boxed_opaque_existential_1, *(_QWORD *)(a2 + 56), a2, a3, a4);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(a2 + 16);
  sub_2412FAA04(&v13, a2 + 16);
  return swift_endAccess();
}

uint64_t _s11MediaCoreUI42NowPlayingBackgroundStaticArtworkTreatmentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = (void *)a1[1];
  v3 = (void *)a2[1];
  if ((sub_2412F192C(*a1, *a2) & 1) != 0)
  {
    if (v2)
    {
      if (v3)
      {
        sub_2412CC884(0, (unint64_t *)&qword_254384FE0);
        v4 = v3;
        v5 = v2;
        v6 = sub_2414B532C();

        if ((v6 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_241388C84(uint64_t a1)
{
  unint64_t result;

  result = sub_241388CA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241388CA8()
{
  unint64_t result;

  result = qword_257124A00;
  if (!qword_257124A00)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingBackgroundStaticArtworkTreatment, &type metadata for NowPlayingBackgroundStaticArtworkTreatment);
    atomic_store(result, (unint64_t *)&qword_257124A00);
  }
  return result;
}

unint64_t sub_241388CEC(uint64_t a1)
{
  unint64_t result;

  result = sub_241388D10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241388D10()
{
  unint64_t result;

  result = qword_257124A08;
  if (!qword_257124A08)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingVideoPlayerArtworkTreatment, &type metadata for NowPlayingVideoPlayerArtworkTreatment);
    atomic_store(result, (unint64_t *)&qword_257124A08);
  }
  return result;
}

unint64_t sub_241388D54(uint64_t a1)
{
  unint64_t result;

  result = sub_241388D78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241388D78()
{
  unint64_t result;

  result = qword_257124A10;
  if (!qword_257124A10)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingVideoPlayerArtworkTreatment, &type metadata for NowPlayingVideoPlayerArtworkTreatment);
    atomic_store(result, (unint64_t *)&qword_257124A10);
  }
  return result;
}

unint64_t sub_241388DBC(uint64_t a1)
{
  unint64_t result;

  result = sub_241388DE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241388DE0()
{
  unint64_t result;

  result = qword_257124A18;
  if (!qword_257124A18)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingMPCVideoArtworkTreatment, &type metadata for NowPlayingMPCVideoArtworkTreatment);
    atomic_store(result, (unint64_t *)&qword_257124A18);
  }
  return result;
}

unint64_t sub_241388E24(uint64_t a1)
{
  unint64_t result;

  result = sub_241388E48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241388E48()
{
  unint64_t result;

  result = qword_257124A20[0];
  if (!qword_257124A20[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingMPCVideoArtworkTreatment, &type metadata for NowPlayingMPCVideoArtworkTreatment);
    atomic_store(result, qword_257124A20);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork()
{
  return &type metadata for NowPlayingArtwork;
}

uint64_t dispatch thunk of NowPlayingArtworkTreatment.placements(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for MicaBundle(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for MicaBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for NowPlayingBackgroundStaticArtworkTreatment(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for MicaBundle(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t destroy for NowPlayingVideoPlayerArtworkTreatment(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11MediaCoreUI37NowPlayingVideoPlayerArtworkTreatmentVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NowPlayingVideoPlayerArtworkTreatment(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NowPlayingVideoPlayerArtworkTreatment(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingVideoPlayerArtworkTreatment()
{
  return &type metadata for NowPlayingVideoPlayerArtworkTreatment;
}

_QWORD *assignWithCopy for NowPlayingMPCVideoArtworkTreatment(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingMPCVideoArtworkTreatment()
{
  return &type metadata for NowPlayingMPCVideoArtworkTreatment;
}

uint64_t sub_241389150()
{
  return _s7ArtworkC17BackgroundArtworkCMa();
}

uint64_t sub_241389158(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  sub_2412C6F44(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_24138919C(uint64_t a1)
{
  return sub_2412C8228(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *sub_2413891AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  sub_2412C6F44(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  sub_2412C8228(v5, v6);
  return a1;
}

uint64_t *sub_2413891FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  sub_2412C8228(v5, v6);
  return a1;
}

uint64_t _s24HeaderArtworkPlaceholderVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s24HeaderArtworkPlaceholderVMn);
}

uint64_t sub_241389244()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241389278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413884A0(*(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_241389298@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C884C();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2413892E4()
{
  sub_2412C884C();
  return sub_2414B3844();
}

uint64_t sub_241389334()
{
  sub_2412EFEF8();
  return sub_2414B3838();
}

uint64_t sub_24138939C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257124AF8);
    v3 = sub_2414B5560();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_BYTE *)(v6 + v4);
      sub_2414B58CC();
      sub_2414B3394();
      sub_2414B58E4();
      result = sub_2414B58FC();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      if (((1 << v10) & v12) != 0)
      {
        v14 = sub_2414B3394();
        result = sub_2414B3394();
        if (v14 == result)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          v16 = sub_2414B3394();
          result = sub_2414B3394();
          if (v16 == result)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v7;
      v17 = *(_QWORD *)(v3 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_241389508(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2414B56C8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257124AB0);
      result = sub_2414B5560();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2414B56C8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x242694E34](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_2414B2D88();
    sub_2412F0B40(&qword_257124AB8, 255, v8, MEMORY[0x24BDB9B70]);
    result = sub_2414B4C78();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_2412F0B40((unint64_t *)&unk_257124AC0, 255, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_2414B4CE4();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTreatmentKey()
{
  return &type metadata for ArtworkTreatmentKey;
}

uint64_t *sub_2413897B4(uint64_t *a1, uint64_t *a2)
{
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v4 = (char *)(a2 + 34);
  v5 = *a2;
  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  v8 = *((unsigned __int8 *)a1 + 8);
  *a1 = v5;
  *((_BYTE *)a1 + 8) = v6;
  sub_2412C8228(v7, v8);
  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)(a1 + 2), &qword_254380B40);
    v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v9;
    *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    sub_2412CBE78((uint64_t)(a1 + 8), &qword_254380B78);
    v10 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v10;
    *(_OWORD *)((char *)a1 + 89) = *(_OWORD *)((char *)a2 + 89);
  }
  v11 = a2[22];
  v12 = *((_BYTE *)a2 + 184);
  v13 = *((_BYTE *)a2 + 185);
  v14 = a1[14];
  v15 = a1[15];
  v16 = a1[16];
  v17 = a1[17];
  v18 = a1[18];
  v19 = a1[19];
  v20 = a1[20];
  v21 = a1[21];
  v22 = a1[22];
  v23 = *((_BYTE *)a1 + 184);
  v24 = *((_BYTE *)a1 + 185);
  v25 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v25;
  v26 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v26;
  a1[22] = v11;
  *((_BYTE *)a1 + 184) = v12;
  *((_BYTE *)a1 + 185) = v13;
  sub_2412C823C(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  v27 = *((_BYTE *)a2 + 200);
  v28 = a1[24];
  v29 = *((unsigned __int8 *)a1 + 200);
  a1[24] = a2[24];
  *((_BYTE *)a1 + 200) = v27;
  sub_2412C8228(v28, v29);
  v30 = *((_BYTE *)a2 + 216);
  v31 = a1[26];
  v32 = *((unsigned __int8 *)a1 + 216);
  a1[26] = a2[26];
  *((_BYTE *)a1 + 216) = v30;
  sub_2412C8228(v31, v32);
  v33 = *((_BYTE *)a2 + 240);
  v34 = a1[28];
  v35 = a1[29];
  v36 = *((_BYTE *)a1 + 240);
  *((_OWORD *)a1 + 14) = *((_OWORD *)a2 + 14);
  *((_BYTE *)a1 + 240) = v33;
  sub_2412C822C(v34, v35, v36);
  a1[31] = a2[31];
  swift_release();
  v37 = *v4;
  *((_OWORD *)a1 + 16) = *((_OWORD *)a2 + 16);
  *((_BYTE *)a1 + 272) = v37;
  swift_release();
  *((_BYTE *)a1 + 273) = v4[1];
  return a1;
}

uint64_t sub_241389928(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 272) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 274) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 274) = 0;
    if (a2)
      *(_QWORD *)(result + 248) = a2;
  }
  return result;
}

uint64_t sub_2413899C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_2412C8228(v5, v6);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ScrubberLoadingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_241389A4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;

  _s18ArtworkPlaceholderVMa(255, *a1, a1[1], a4);
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  v5 = sub_2414B53B0();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v5, &v11);
  v6 = sub_2414B3A6C();
  v7 = sub_2414B3514();
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v6);
  v10[0] = MEMORY[0x24BDF3E20];
  v10[1] = v8;
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v10);
}

uint64_t sub_241389B4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B379C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241389B78()
{
  return sub_2414B37A8();
}

uint64_t sub_241389B9C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_241389BC0(uint64_t a1)
{
  uint64_t v1;

  sub_24138782C(a1, *(void **)(v1 + 16));
}

unint64_t sub_241389BE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257124AE0;
  if (!qword_257124AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25437DAB8);
    v2[0] = sub_2412C8FC4(&qword_257124AE8, &qword_25437DAB0, MEMORY[0x24BDEBEC0]);
    v2[1] = sub_2412C8FC4(&qword_257124AF0, &qword_254383FA8, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257124AE0);
  }
  return result;
}

uint64_t sub_241389C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 96);
  v6 = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v5;
  *(_BYTE *)(a1 + 104) = v6;
  sub_2412EEDAC();
  return a1;
}

uint64_t sub_241389D20(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241389D68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkGeometryID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241389E10 + 4 * byte_2414BEA4F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241389E44 + 4 * byte_2414BEA4A[v4]))();
}

uint64_t sub_241389E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241389E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241389E54);
  return result;
}

uint64_t sub_241389E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241389E68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241389E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241389E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241389E84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  _QWORD v21[6];
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[3];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D48);
  v4 = _s31PrimaryArtworkViewOrVideoPlayerVMa(255, v1, v2, v3);
  v5 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
  v6 = sub_2414B3514();
  v29[0] = MEMORY[0x242695AE8](&unk_2414BF3E4, v4);
  v29[1] = MEMORY[0x24BDECC38];
  v7 = MEMORY[0x24BDED308];
  v28[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v29);
  v28[1] = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
  MEMORY[0x242695AE8](v7, v6, v28);
  v8 = sub_2414B3A6C();
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381130);
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  type metadata accessor for ArtworkCornerModifier(255);
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
  v27[0] = sub_2412F142C();
  v27[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v8);
  v26[0] = MEMORY[0x242695AE8](v7, v9, v27);
  v26[1] = sub_2412C8FC4(&qword_254381128, &qword_254381130, MEMORY[0x24BDEFFA0]);
  v25[0] = MEMORY[0x242695AE8](v7, v10, v26);
  v25[1] = MEMORY[0x24BDF1050];
  v24[0] = MEMORY[0x242695AE8](v7, v11, v25);
  v24[1] = sub_2412F0B40(qword_25437FCF0, 255, type metadata accessor for ArtworkCornerModifier, (uint64_t)&unk_2414C39A0);
  v23[0] = MEMORY[0x242695AE8](v7, v12, v24);
  v23[1] = MEMORY[0x24BDF0390];
  v22[0] = MEMORY[0x242695AE8](v7, v13, v23);
  v22[1] = sub_24130CB04();
  v21[2] = v14;
  v21[3] = v15;
  v21[4] = MEMORY[0x242695AE8](v7, v14, v22);
  v21[5] = sub_2412F1100();
  v16 = sub_2414B4810();
  v17 = sub_2414B3514();
  v18 = sub_2414B3514();
  v21[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v16);
  v21[1] = sub_2413182B8();
  v20[0] = MEMORY[0x242695AE8](v7, v17, v21);
  v20[1] = MEMORY[0x24BDECC38];
  return MEMORY[0x242695AE8](v7, v18, v20);
}

uint64_t sub_24138A1D0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_24138787C(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_24138A1DC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_2412EEDAC();
  return swift_deallocObject();
}

uint64_t sub_24138A21C()
{
  uint64_t v0;

  return sub_2413880F8(v0 + 32);
}

uint64_t sub_24138A228(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v4 = _s9VideoViewVMa(255, v1, v2, v3);
  v5 = sub_2414B3514();
  sub_2414B3DB4();
  v6 = sub_2414B3514();
  swift_getAssociatedTypeWitness();
  v7 = sub_2414B3514();
  v25[0] = swift_getAssociatedConformanceWitness();
  v25[1] = sub_2412FDE80();
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v25);
  v23 = v7;
  v24 = v9;
  MEMORY[0x242695A94](255, &v23, MEMORY[0x24BDF2550], 0);
  v10 = sub_2414B3514();
  v11 = sub_2414B3A90();
  v22[0] = MEMORY[0x242695AE8](&unk_2414CC120, v4);
  v22[1] = sub_2412EEA34();
  v12 = MEMORY[0x242695AE8](v8, v5, v22);
  v13 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v21[0] = v12;
  v21[1] = v13;
  v14 = MEMORY[0x242695AE8](v8, v6, v21);
  v23 = v7;
  v24 = v9;
  v20[0] = swift_getOpaqueTypeConformance2();
  v20[1] = v13;
  v19[0] = v14;
  v19[1] = MEMORY[0x242695AE8](v8, v10, v20);
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v11, v19);
  v15 = sub_2414B3604();
  v16 = sub_2414B3514();
  v18[0] = sub_2412FDF24((unint64_t *)&qword_254380D20, &qword_254380D28, MEMORY[0x24BDF3E20]);
  v18[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v15);
  return MEMORY[0x242695AE8](v8, v16, v18);
}

_OWORD *sub_24138A4B4(unsigned int a1, unint64_t a2, unint64_t a3, OpaqueAudioQueue *a4, uint64_t a5, double a6)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  AudioQueueRef v30;
  _OWORD *v31;
  _OWORD *v32;
  id v33;
  void *v34;
  OpaqueAudioQueue *v35;
  OSStatus v36;
  OSStatus v37;
  uint64_t v38;
  AudioQueueBuffer *v40;
  OSStatus v41;
  OSStatus v42;
  uint64_t v43;
  id v44;
  _OWORD *v45;
  OpaqueAudioQueue *v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;

  v46 = a4;
  v7 = v6;
  v49 = a5;
  v48 = a1;
  v11 = sub_2414B2CA4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v7[9] = 0u;
  v15 = (uint64_t)(v7 + 9);
  *((_BYTE *)v7 + 136) = 0;
  *((_QWORD *)v7 + 14) = 0;
  *((_QWORD *)v7 + 15) = 0;
  v7[10] = 0u;
  if (qword_2543827B0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v11, (uint64_t)qword_25438E848);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  v17 = sub_2414B2C8C();
  v18 = sub_2414B51B8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v45 = v7;
    v20 = a2;
    v21 = a3;
    v22 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_2412C1000, v17, v18, "AudioTapQueueProcessor initialized, will enqueue buffer", v19, 2u);
    v23 = v22;
    a3 = v21;
    a2 = v20;
    v7 = v45;
    MEMORY[0x242695BD8](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  type metadata accessor for AudioTapCallbackWrapper();
  v24 = (_QWORD *)swift_allocObject();
  v25 = v49;
  v24[2] = v46;
  v24[3] = v25;
  swift_retain();
  v26 = v48;
  v27 = v47;
  v28 = (void *)sub_241386810(a6, v48, a2);
  if (v27)
  {
    swift_release();
LABEL_9:
    sub_24135C67C(v15);
    type metadata accessor for AudioTapQueueProcessor();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    return v7;
  }
  v29 = v28;
  v47 = a2;
  v30 = sub_241386B0C(v28, v24);
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB6BD0]), sel_initProcessTapWithFormat_PID_, v29, v26);
  v46 = v30;
  v32 = v31;
  v33 = objc_allocWithZone(MEMORY[0x24BDB6BC8]);
  v45 = v32;
  v34 = v32;
  v35 = v46;
  v44 = objc_msgSend(v33, sel_initWithTapDescription_, v34);
  v36 = AudioQueueSetProperty(v35, 0x71746F62u, v44, 8u);
  if (v36)
  {
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
    sub_241386AC0();
    swift_allocError();
    *(_BYTE *)v38 = 2;
    *(_DWORD *)(v38 + 4) = v37;
    swift_willThrow();
    swift_release();

    goto LABEL_9;
  }

  v40 = sub_241386938(v29, v35, v26, v47, a3);
  *((_QWORD *)v7 + 14) = v35;
  *((_QWORD *)v7 + 15) = v40;
  *((_QWORD *)v7 + 16) = v24;
  swift_retain();
  v41 = AudioQueueEnqueueBuffer(v35, v40, 0, 0);
  if (v41)
  {
    v42 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
    sub_241386AC0();
    swift_allocError();
    *(_BYTE *)v43 = 4;
    *(_DWORD *)(v43 + 4) = v42;
    swift_willThrow();
    swift_release();

    swift_release();
  }
  else
  {
    swift_release();

  }
  swift_release();
  return v7;
}

uint64_t sub_24138A8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  OpaqueAudioQueue *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void (*v15)(char *, uint64_t);
  OpaqueAudioQueue *v16;
  AudioQueueBuffer *v17;
  OSStatus v18;
  OSStatus v19;
  uint64_t v20;
  void *v21;
  char v22;
  OSStatus v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - v7;
  v9 = *(OpaqueAudioQueue **)(v1 + 112);
  if (v9)
    AudioQueueStop(v9, 1u);
  if (qword_2543827B0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E848);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, v10, v2);
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_2412C1000, v12, v13, "AudioTapQueueProcessor deinitialized, will destroy audio tap setup", v14, 2u);
    MEMORY[0x242695BD8](v14, -1, -1);
  }

  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v8, v2);
  v16 = *(OpaqueAudioQueue **)(v1 + 112);
  if (v16)
  {
    v17 = *(AudioQueueBuffer **)(v1 + 120);
    if (v17 && (v18 = AudioQueueFreeBuffer(*(AudioQueueRef *)(v1 + 112), v17)) != 0)
    {
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
      sub_241386AC0();
      v21 = (void *)swift_allocError();
      v22 = 5;
    }
    else
    {
      v23 = AudioQueueDispose(v16, 0);
      if (!v23)
        goto LABEL_17;
      v19 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571249D0);
      sub_241386AC0();
      v21 = (void *)swift_allocError();
      v22 = 7;
    }
    *(_BYTE *)v20 = v22;
    *(_DWORD *)(v20 + 4) = v19;
    swift_willThrow();
    v11(v5, v10, v2);
    v24 = v21;
    v25 = v21;
    v26 = sub_2414B2C8C();
    v27 = sub_2414B51B8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      v34 = v15;
      v29 = v21;
      v30 = _swift_stdlib_bridgeErrorToNSError();
      v35 = v30;
      v15 = v34;
      sub_2414B541C();
      v31 = v33;
      *v33 = v30;

      _os_log_impl(&dword_2412C1000, v26, v27, "AudioTapQueueProcessor error during audio tap setup destruction: %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25712B570);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v31, -1, -1);
      MEMORY[0x242695BD8](v28, -1, -1);

    }
    else
    {

    }
    v15(v5, v2);
  }
LABEL_17:
  swift_release();
  sub_24135C67C(v1 + 144);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_24138AC64()
{
  sub_24138A8BC();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AudioTapQueueProcessor()
{
  return objc_opt_self();
}

uint64_t sub_24138ACA0()
{
  return 24;
}

__n128 sub_24138ACAC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24138ACC0()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_24138ACE4(double *a1, double *a2, uint64_t a3, uint64_t a4)
{
  return sub_24138B1A8(a1, a2, a3, a4, (uint64_t (*)(double, double, double, double, double, double, double, double))_sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0);
}

BOOL sub_24138ACF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ApproximatelyEquatable.!=~ infix(_:_:)(a1, a2, a3, a4);
}

BOOL sub_24138AD08(double a1, double a2)
{
  double v2;
  double v4;
  double v5;

  if (a2 <= a1)
    return 1;
  v2 = vabdd_f64(a1, a2);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
    return 0;
  v4 = fabs(a1);
  v5 = fabs(a2);
  if (v4 <= v5)
    v4 = v5;
  return v2 <= fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

uint64_t sub_24138AD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.==~ infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t _sSq11MediaCoreUIAA22ApproximatelyEquatableRzlE3eetoiySbxSg_ADtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;

  v29 = a4;
  v7 = *(_QWORD **)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v28 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  v12 = sub_2414B53B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16 = (char *)&v28 - v15;
  v18 = (char *)&v28 + *(int *)(v17 + 48) - v15;
  v19 = *(_QWORD *)(v12 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16);
  v20((char *)&v28 - v15, a1, v12, v14);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v18, a2, v12);
  v21 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  LODWORD(a2) = v21(v16, 1, a3);
  v22 = v21(v18, 1, a3);
  if ((_DWORD)a2 != 1)
  {
    if (v22 != 1)
    {
      v24 = (void (*)(char *, char *, uint64_t))v7[4];
      v24(v11, v16, a3);
      v25 = v28;
      v24(v28, v18, a3);
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 8))(v11, v25, a3);
      v26 = (void (*)(char *, uint64_t))v7[1];
      v26(v25, a3);
      v26(v11, a3);
      return v23 & 1;
    }
    ((void (*)(char *, uint64_t))v7[1])(v16, a3);
    goto LABEL_7;
  }
  if (v22 != 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v12);
LABEL_7:
    v23 = 0;
    return v23 & 1;
  }
  v23 = 1;
  return v23 & 1;
}

uint64_t static Optional<A>.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;

  v29 = a4;
  v7 = *(_QWORD **)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v28 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  v12 = sub_2414B53B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16 = (char *)&v28 - v15;
  v18 = (char *)&v28 + *(int *)(v17 + 48) - v15;
  v19 = *(_QWORD *)(v12 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16);
  v20((char *)&v28 - v15, a1, v12, v14);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v18, a2, v12);
  v21 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  LODWORD(a2) = v21(v16, 1, a3);
  v22 = v21(v18, 1, a3);
  if ((_DWORD)a2 != 1)
  {
    if (v22 != 1)
    {
      v24 = (void (*)(char *, char *, uint64_t))v7[4];
      v24(v11, v16, a3);
      v25 = v28;
      v24(v28, v18, a3);
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 16))(v11, v25, a3);
      v26 = (void (*)(char *, uint64_t))v7[1];
      v26(v25, a3);
      v26(v11, a3);
      return v23 & 1;
    }
    ((void (*)(char *, uint64_t))v7[1])(v16, a3);
    goto LABEL_7;
  }
  if (v22 != 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v12);
LABEL_7:
    v23 = 0;
    return v23 & 1;
  }
  v23 = 1;
  return v23 & 1;
}

uint64_t sub_24138B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.>=~ infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

BOOL sub_24138B168(double *a1, double *a2)
{
  return sub_241376510(*a1, *a2);
}

BOOL sub_24138B174(double *a1, double *a2)
{
  return sub_24146BF80(*a1, *a2);
}

BOOL sub_24138B180(double *a1, double *a2)
{
  return sub_24138AD08(*a1, *a2);
}

BOOL static CGPoint.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_2412E2718(a1, a2, a3, a4);
}

BOOL sub_24138B1A8(double *a1, double *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(double, double, double, double, double, double, double, double))
{
  return (a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]) & 1) == 0;
}

BOOL sub_24138B1D8(double *a1, double *a2)
{
  return sub_241376460(*a1, a1[1], *a2, a2[1]);
}

BOOL static UIOffset.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_2412E2718(a1, a2, a3, a4);
}

BOOL sub_24138B1FC(double *a1, double *a2)
{
  return !sub_2412E2718(*a1, a1[1], *a2, a2[1]);
}

float64x2_t static UIOffset.*= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result;

  result = vmulq_n_f64(*a1, a2);
  *a1 = result;
  return result;
}

double static UIOffset.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

double static UIOffset./ infix(_:_:)(double a1, double a2, double a3)
{
  return a1 / a3;
}

float64x2_t static UIOffset./= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result;

  result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0));
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of static ApproximatelyEquatable.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

_QWORD *assignWithCopy for MicaBundle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

ValueMetadata *type metadata accessor for MicaBundle()
{
  return &type metadata for MicaBundle;
}

uint64_t sub_24138B2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_24138B2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = sub_2414B2A94();
  v2 = *(uint64_t **)(v0 + 16);
  *v2 = v1;
  v2[1] = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24138B354(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[21] = a1;
  v2 = sub_2414B2A88();
  v1[22] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[23] = v3;
  v1[24] = *(_QWORD *)(v3 + 64);
  v1[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v1[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24138B3DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[23];
  v5 = v0[21];
  v4 = v0[22];
  v6 = sub_2414B4FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  v0[27] = sub_24139AC70(v1, (uint64_t)&unk_257124B10, v8);
  v9 = (_QWORD *)swift_task_alloc();
  v0[28] = v9;
  v0[29] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
  *v9 = v0;
  v9[1] = sub_24138B50C;
  return sub_2414B505C();
}

uint64_t sub_24138B50C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24138B568()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 112);
  if (*(_BYTE *)(v0 + 128) != 1)
  {
    v5 = (_OWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 120);
    sub_2412CC884(0, &qword_254382908);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382980);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_2414BA490;
    *(_QWORD *)(v7 + 32) = sub_2412CC884(0, &qword_254382918);
    *(_QWORD *)(v7 + 40) = sub_2412CC884(0, &qword_254382910);
    *(_QWORD *)(v7 + 48) = sub_2412CC884(0, (unint64_t *)&unk_254382920);
    *(_QWORD *)(v7 + 56) = sub_2412CC884(0, &qword_254382938);
    *(_QWORD *)(v7 + 64) = sub_2412CC884(0, &qword_2543843E8);
    sub_2414B51E8();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 104))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543828C0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = *(_QWORD *)(v0 + 136);
        if (*(_QWORD *)(v8 + 16))
        {
          v9 = sub_2412CD2DC(0x6579614C746F6F72, 0xE900000000000072);
          if ((v10 & 1) != 0)
          {
            sub_2412E4960(*(_QWORD *)(v8 + 56) + 32 * v9, v0 + 16);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v5 = (_OWORD *)(v0 + 48);
              v11 = *(void **)(v0 + 144);
              if (*(_QWORD *)(v8 + 16)
                && (v12 = sub_2412CD2DC(0xD000000000000010, 0x80000002414D0680), (v13 & 1) != 0))
              {
                sub_2412E4960(*(_QWORD *)(v8 + 56) + 32 * v12, v0 + 48);
              }
              else
              {
                *v5 = 0u;
                *(_OWORD *)(v0 + 64) = 0u;
              }
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(v0 + 72))
              {
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v14 = *(_QWORD *)(v0 + 176);
                  v15 = *(_QWORD *)(v0 + 184);
                  v16 = *(_QWORD *)(v0 + 168);
                  sub_24138BA24(v1, v6, 0);
                  v17 = *(_QWORD *)(v0 + 160);
                  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
                  swift_task_dealloc();
                  swift_task_dealloc();
                  return (*(uint64_t (**)(uint64_t, void *))(v0 + 8))(v17, v11);
                }

                goto LABEL_18;
              }

              goto LABEL_17;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_18:
      v19 = *(_QWORD *)(v0 + 176);
      v20 = *(_QWORD *)(v0 + 184);
      v21 = *(_QWORD *)(v0 + 168);
      sub_24138BA30();
      swift_allocError();
      swift_willThrow();
      sub_24138BA24(v1, v6, 0);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v19);
      goto LABEL_19;
    }
LABEL_17:
    sub_24135C67C((uint64_t)v5);
    goto LABEL_18;
  }
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 152) = v1;
  swift_willThrowTypedImpl();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24138B934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2A88();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24138B9A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B2A88() - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_241310430;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch();
}

void sub_24138BA24(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_24134F0E0((uint64_t)a1, a2);
}

unint64_t sub_24138BA30()
{
  unint64_t result;

  result = qword_257124B18;
  if (!qword_257124B18)
  {
    result = MEMORY[0x242695AE8](&unk_2414BF64C, &type metadata for MicaBundle.Error);
    atomic_store(result, (unint64_t *)&qword_257124B18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MicaBundle.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24138BAB4 + 4 * byte_2414BF5C8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24138BAD4 + 4 * byte_2414BF5CD[v4]))();
}

_BYTE *sub_24138BAB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24138BAD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24138BADC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24138BAE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24138BAEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24138BAF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MicaBundle.Error()
{
  return &type metadata for MicaBundle.Error;
}

unint64_t sub_24138BB14()
{
  unint64_t result;

  result = qword_257124B20[0];
  if (!qword_257124B20[0])
  {
    result = MEMORY[0x242695AE8](&unk_2414BF624, &type metadata for MicaBundle.Error);
    atomic_store(result, qword_257124B20);
  }
  return result;
}

uint64_t sub_24138BB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD v36[8];
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _OWORD v41[13];
  char v42;
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  uint64_t v48;
  _OWORD v49[10];
  char v50;
  _OWORD v51[13];
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  __int128 v67;
  uint64_t v68;
  __int16 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  __int128 v74;
  __int128 v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[2];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  char v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  char v113;

  v38 = a2;
  v3 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (*(_BYTE *)(v3 + 16))
      v5 = 1.0;
    else
      v5 = 0.73;
    v6 = *(_QWORD *)(a1 + 16);
    v7 = *(_QWORD *)(a1 + 24);
    v8 = swift_allocObject();
    v40 = a1;
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    *(double *)(v8 + 32) = v5;
    MEMORY[0x24BDAC7A8](v8);
    v36[2] = v6;
    v36[3] = v7;
    v36[4] = v2;
    sub_24138C240((uint64_t)sub_24138D64C, (uint64_t)v36, v6, v7, (uint64_t)&v101, v5);
    swift_release();
    v39 = v2;
    v9 = v103;
    v10 = v104[0];
    v88 = v101;
    *(_QWORD *)&v89 = v102;
    WORD4(v89) = WORD4(v102);
    v90 = v103;
    LOBYTE(v91[0]) = v104[0];
    *(_OWORD *)((char *)v91 + 8) = *(_OWORD *)((char *)v104 + 8);
    v37 = sub_2414B3E50();
    sub_24138CA74(a1, (uint64_t)&v53);
    v36[7] = v53;
    v12 = _s27DefaultArtworkContainerViewV6LayoutVMa(255, v6, v7, v11);
    MEMORY[0x242695AE8](&unk_2414BF8E0, v12);
    v13 = sub_2414B30B8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
    v15 = _s18ArtworkPlaceholderVMa(255, v6, v7, v14);
    v16 = sub_2414B53B0();
    v48 = MEMORY[0x242695AE8](&unk_2414BF158, v15);
    MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v16, &v48);
    v17 = sub_2414B3604();
    v18 = sub_2414B3514();
    MEMORY[0x242695AE8](MEMORY[0x24BDEB998], v13);
    v19 = sub_2414B3304();
    v20 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9A8], v13);
    v21 = sub_2412FBF38();
    v22 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v17);
    v47[0] = v21;
    v47[1] = v22;
    v23 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v47);
    v46[0] = v20;
    v46[1] = v23;
    v24 = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v19, v46);
    sub_2414B4528();
    swift_release();
    sub_2412F6738(v9, *((uint64_t *)&v9 + 1), v10);
    v25 = v70;
    v26 = v71;
    v101 = v67;
    *(_QWORD *)&v102 = v68;
    WORD4(v102) = v69;
    v103 = v70;
    LOBYTE(v104[0]) = v71;
    *(_OWORD *)((char *)v104 + 8) = v72;
    BYTE8(v104[1]) = v73;
    v105 = v74;
    v106 = v75;
    LOBYTE(v107) = v76;
    sub_2414B3E38();
    sub_24138CA74(v40, (uint64_t)&v88);
    v27 = sub_2414B3514();
    v45[0] = v24;
    v45[1] = MEMORY[0x24BDECC60];
    v28 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v45);
    sub_2414B4528();
    swift_release();
    sub_2412F6738(v25, *((uint64_t *)&v25 + 1), v26);
    v49[8] = v85;
    v49[9] = v86;
    v49[4] = v81;
    v49[5] = v82;
    v49[6] = v83;
    v49[7] = v84;
    v49[0] = v77;
    v49[1] = v78;
    v49[2] = v79;
    v49[3] = v80;
    v108 = v85;
    v109 = v86;
    v104[1] = v81;
    v105 = v82;
    v107 = v84;
    v106 = v83;
    v101 = v77;
    v102 = v78;
    v50 = v87;
    LOBYTE(v110) = v87;
    v104[0] = v80;
    v103 = v79;
    sub_2414B3E5C();
    sub_24138CA74(v40, (uint64_t)&v53);
    v29 = sub_2414B3514();
    v44[0] = v28;
    v30 = MEMORY[0x24BDECC60];
    v44[1] = MEMORY[0x24BDECC60];
    v31 = MEMORY[0x24BDED308];
    v32 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v29, v44);
    sub_2414B4528();
    sub_24138D664((uint64_t)v49);
    v51[10] = v97;
    v51[11] = v98;
    v51[12] = v99;
    v51[6] = v93;
    v51[7] = v94;
    v51[8] = v95;
    v51[9] = v96;
    v51[2] = v90;
    v51[3] = v91[0];
    v51[4] = v91[1];
    v51[5] = v92;
    v51[0] = v88;
    v51[1] = v89;
    v63 = v97;
    v64 = v98;
    v65 = v99;
    v59 = v93;
    v60 = v94;
    v61 = v95;
    v62 = v96;
    v55 = v90;
    v56 = v91[0];
    v57 = v91[1];
    v58 = v92;
    v52 = v100;
    v66 = v100;
    v53 = v88;
    v54 = v89;
    v33 = sub_2414B3514();
    v43[0] = v32;
    v43[1] = v30;
    MEMORY[0x242695AE8](v31, v33, v43);
    sub_2412FBF34((uint64_t)&v53, v33, (uint64_t)&v101);
    sub_24138D664((uint64_t)v51);
    v63 = v110;
    v64 = v111;
    v65 = v112;
    v59 = v106;
    v60 = v107;
    v61 = v108;
    v62 = v109;
    v55 = v103;
    v56 = v104[0];
    v57 = v104[1];
    v58 = v105;
    v53 = v101;
    v54 = v102;
    v41[10] = v110;
    v41[11] = v111;
    v41[12] = v112;
    v41[6] = v106;
    v41[7] = v107;
    v41[8] = v108;
    v41[9] = v109;
    v41[2] = v103;
    v41[3] = v104[0];
    v41[4] = v104[1];
    v41[5] = v105;
    v66 = v113;
    v42 = v113;
    v41[0] = v101;
    v41[1] = v102;
    sub_2412EEA1C((uint64_t)v41, v33, v38);
    return sub_24138D664((uint64_t)&v53);
  }
  else
  {
    _s14DefaultArtworkCMa();
    sub_2412F0B40(&qword_25437F478, v35, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24138C240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  _QWORD v21[2];

  *(double *)&v21[1] = a6;
  v11 = _s27DefaultArtworkContainerViewV6LayoutVMa(0, a3, a4, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v13 = _s18ArtworkPlaceholderVMa(255, a3, a4, v12);
  v14 = sub_2414B53B0();
  v21[0] = MEMORY[0x242695AE8](&unk_2414BF158, v13);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v14, v21);
  v15 = sub_2414B3604();
  v16 = sub_2414B3514();
  v17 = MEMORY[0x242695AE8](&unk_2414BF8E0, v11);
  v20[0] = sub_2412FBF38();
  v20[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v15);
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v20);
  return sub_2413A6270(a1, a2, v11, v16, v17, v18, a5);
}

uint64_t sub_24138C390@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD v22[2];
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;

  v6 = sub_2414B4648();
  v8 = _s27DefaultArtworkContainerViewVMa(0, a1, a2, v7);
  v38 = v6;
  v39 = 0x3FF0000000000000;
  v40 = 0;
  v41 = sub_24138C5D0(v8) & 1;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380D28);
  v10 = _s18ArtworkPlaceholderVMa(255, a1, a2, v9);
  v11 = sub_2414B53B0();
  v12 = sub_2412FBF38();
  v29 = MEMORY[0x242695AE8](&unk_2414BF158, v10);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v11, &v29);
  sub_2414B4504();
  swift_release();
  v13 = v34;
  v14 = v35;
  v15 = v36;
  v22[0] = v30;
  v22[1] = v31;
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v27 = v36;
  v28 = v37;
  v16 = sub_2414B3604();
  v17 = sub_2414B3514();
  v21[0] = v12;
  v21[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v16);
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v17, v21);
  sub_2412FBF34((uint64_t)v22, v17, (uint64_t)&v38);
  swift_release();
  sub_2412F6738(v13, v14, v15);
  v18 = v42;
  v19 = v43;
  LOBYTE(v14) = v44;
  v30 = v38;
  v31 = v39;
  v32 = v40;
  v33 = v41;
  v34 = v42;
  v35 = v43;
  v36 = v44;
  v37 = v45;
  sub_2412EEA1C((uint64_t)&v30, v17, a3);
  swift_release();
  return sub_2412F6738(v18, v19, v14);
}

uint64_t sub_24138C5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[4];
  char v9;
  _BYTE v10[64];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;
  _OWORD v17[3];
  _OWORD v18[2];

  v2 = v1;
  sub_2412EFAC0((uint64_t)v15);
  v4 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  LOBYTE(v4) = sub_241387790(v4);
  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v10, v2, a1);
  if ((v4 & 1) != 0)
  {
    v17[2] = v13;
    v18[0] = v14[0];
    *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v14 + 10);
    v17[0] = v11;
    v17[1] = v12;
    sub_2412FD220((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)v8);
    sub_2412FD220((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, a1);
    if ((v9 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      return 1;
    }
    v7 = v8[3];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    if (v7 != 1)
      return 1;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, a1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return 0;
}

uint64_t sub_24138C6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, _QWORD, _QWORD);
  int v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(_QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  char v43;
  char v44[8];
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  _QWORD v57[2];
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[4];
  _OWORD v63[3];
  _OWORD v64[2];

  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_BYTE *)(a1 + 152);
  sub_2412C7080(v8, v9);
  sub_2412F65C0(v8, v9, v57);
  sub_2412C821C(v8, v9);
  v10 = LOBYTE(v57[0]);
  v12 = _s27DefaultArtworkContainerViewVMa(0, a2, a3, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(_QWORD, _QWORD, _QWORD))(v13 + 16);
  v14(v57, a1, v12);
  if (v10 == 1)
  {
    v63[2] = v61;
    v64[0] = v62[0];
    *(_OWORD *)((char *)v64 + 10) = *(_OWORD *)((char *)v62 + 10);
    v63[0] = v59;
    v63[1] = v60;
    sub_2412FD220((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v47);
    sub_2412FD220((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v15 = v50;
    if (v50 == 3)
    {
      v14(&v47, v57, v12);
    }
    else
    {
      v14(&v47, v57, v12);
      if (v15 == 2)
      {
        v17 = *(void (**)(_QWORD, _QWORD))(v13 + 8);
        v17(&v47, v12);
        v17(v57, v12);
        goto LABEL_9;
      }
    }
    v18 = v51;
    v19 = v52;
    v20 = v53;
    sub_2412C72E4(v51, v52, v53);
    sub_2412EEDF4(v18, v19, v20, (uint64_t *)&v55);
    sub_2412C822C(v18, v19, v20);
    v21 = *(void (**)(_QWORD, _QWORD))(v13 + 8);
    v21(&v47, v12);
    v21(v57, v12);
    v22 = *((_QWORD *)&v55 + 1);
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_8;
LABEL_9:
    v28 = sub_2412FB568(0);
    v30 = v29;
    LOBYTE(v55) = v28 & 1;
    v32 = v31 & 1;
    *((_QWORD *)&v55 + 1) = v29;
    v56 = v31 & 1;
    v34 = _s18ArtworkPlaceholderVMa(0, a2, a3, v33);
    MEMORY[0x242695AE8](&unk_2414BF158, v34);
    sub_2412FBF34((uint64_t)&v55, v34, (uint64_t)&v47);
    sub_2412C821C(v30, v32);
    v35 = v48;
    v36 = v49;
    LOBYTE(v55) = v47;
    *((_QWORD *)&v55 + 1) = v48;
    v56 = v49;
    sub_2412EEA1C((uint64_t)&v55, v34, (uint64_t)v44);
    sub_2412C821C(v35, v36);
    v37 = v45;
    v38 = v46;
    v42[0] = v44[0];
    v42[1] = v45;
    v43 = v46;
    sub_2412F65F0((uint64_t)v42, (uint64_t)&v55);
    sub_2412C821C(v37, v38);
    v26 = *((_QWORD *)&v55 + 1);
    v25 = v55;
    v27 = v56;
    goto LABEL_10;
  }
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v57, v12);
LABEL_8:
  v55 = xmmword_2414BF6A0;
  v56 = 0;
  v23 = _s18ArtworkPlaceholderVMa(0, a2, a3, v16);
  MEMORY[0x242695AE8](&unk_2414BF158, v23);
  sub_2412F65F0((uint64_t)&v55, (uint64_t)&v47);
  v25 = v47;
  v26 = v48;
  v27 = v49;
LABEL_10:
  v57[0] = v25;
  v57[1] = v26;
  v58 = v27;
  v39 = _s18ArtworkPlaceholderVMa(255, a2, a3, v24);
  v40 = sub_2414B53B0();
  v54 = MEMORY[0x242695AE8](&unk_2414BF158, v39);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v40, &v54);
  sub_2412EEA1C((uint64_t)v57, v40, a4);
  return sub_2412F6738(v25, v26, v27);
}

void sub_24138CA74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[64];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[4];
  _QWORD v23[3];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[3];
  _OWORD v30[2];

  v3 = v2;
  sub_2412EFAC0((uint64_t)v23);
  v6 = v24;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  LOBYTE(v6) = sub_241387790(v6);
  v7 = *(_QWORD *)(a1 - 8);
  (*(void (**)(_BYTE *, _OWORD *, uint64_t))(v7 + 16))(v18, v3, a1);
  if ((v6 & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v18, a1);
    goto LABEL_6;
  }
  v29[2] = v21;
  v30[0] = v22[0];
  *(_OWORD *)((char *)v30 + 10) = *(_OWORD *)((char *)v22 + 10);
  v29[0] = v19;
  v29[1] = v20;
  sub_2412FD220((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v25);
  sub_2412FD220((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v18, a1);
  v8 = BYTE2(v26);
  if (BYTE2(v26) == 3)
  {
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if (v8)
  {
LABEL_7:
    v13 = v3[7];
    v27 = v3[6];
    v28[0] = v13;
    *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v3 + 122);
    v14 = v3[5];
    v25 = v3[4];
    v26 = v14;
    sub_2412FD220((uint64_t)&v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v17);
    sub_2412FD220((uint64_t)&v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    sub_24138CCF0();
    v12 = v15;
    v11 = v16;
    goto LABEL_8;
  }
  v9 = v3[7];
  v27 = v3[6];
  v28[0] = v9;
  *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v3 + 122);
  v10 = v3[5];
  v25 = v3[4];
  v26 = v10;
  sub_2412FD220((uint64_t)&v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v17);
  sub_2412FD220((uint64_t)&v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  sub_24138CCF0();
  v11 = v16;
  *(_QWORD *)&v12 = v15;
LABEL_8:
  *(_OWORD *)a2 = v12;
  *(_QWORD *)(a2 + 16) = v11;
}

uint64_t sub_24138CCD0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_24138D8E0(a1, a2, a3, a4);
}

uint64_t sub_24138CCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CGSizeMake(a2, a3);
}

void sub_24138CCF0()
{
  __asm { BR              X4 }
}

void sub_24138CD44()
{
  int v0;
  double *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;

  switch(v0)
  {
    case 0:
      sub_24144F8F8(v2 - 40);
      v3 = *(double *)(v2 - 32);
      v5 = 8.0;
      v4 = 36.0;
      break;
    case 1:
    case 4:
      sub_24144F8F8(v2 - 40);
      v3 = *(double *)(v2 - 32) + -8.0;
      v4 = 30.0;
      v5 = 10.0;
      break;
    case 2:
    case 5:
      sub_24144F8F8(v2 - 40);
      v3 = *(double *)(v2 - 32) + -8.0;
      v4 = 26.0;
      v5 = 10.0;
      break;
    default:
      sub_24144F8F8(v2 - 40);
      v3 = *(double *)(v2 - 32) + -8.0;
      v4 = 26.0;
      v5 = 23.0;
      break;
  }
  *v1 = v4;
  v1[1] = v3;
  v1[2] = v5;
}

uint64_t sub_24138CF6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  _s14DefaultArtworkCMa();
  sub_2412F0B40(&qword_25437F478, v2, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
  *(_QWORD *)a1 = sub_2414B3658();
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = swift_getKeyPath();
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = swift_getKeyPath();
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_WORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = swift_getKeyPath();
  *(_BYTE *)(a1 + 152) = 0;
  result = swift_getKeyPath();
  *(_QWORD *)(a1 + 160) = result;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  return result;
}

uint64_t sub_24138D04C(uint64_t a1)
{
  swift_release();
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  else
    swift_release();
  sub_2412C823C(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136), *(_BYTE *)(a1 + 137));
  sub_2412C821C(*(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
  return sub_2412C822C(*(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
}

uint64_t sub_24138D0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  char v23;
  char v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_QWORD *)(a1 + 16);
  v6 = (_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 56);
  swift_retain();
  if ((v7 & 1) != 0)
  {
    v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, _QWORD *))(v8 - 8))(a1 + 16, v6);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  *(_BYTE *)(a1 + 56) = v7;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_QWORD *)(a2 + 120);
  v22 = *(_QWORD *)(a2 + 128);
  v23 = *(_BYTE *)(a2 + 136);
  v24 = *(_BYTE *)(a2 + 137);
  sub_2412C6F48(v9, v10, v11, v12, v13, v14, v15, v16, v22, v23, v24);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = v22;
  *(_BYTE *)(a1 + 136) = v23;
  *(_BYTE *)(a1 + 137) = v24;
  v17 = *(_QWORD *)(a2 + 144);
  LOBYTE(v10) = *(_BYTE *)(a2 + 152);
  sub_2412C7080(v17, v10);
  *(_QWORD *)(a1 + 144) = v17;
  *(_BYTE *)(a1 + 152) = v10;
  v18 = *(_QWORD *)(a2 + 160);
  v19 = *(_QWORD *)(a2 + 168);
  v20 = *(_BYTE *)(a2 + 176);
  sub_2412C72E4(v18, v19, v20);
  *(_QWORD *)(a1 + 160) = v18;
  *(_QWORD *)(a1 + 168) = v19;
  *(_BYTE *)(a1 + 176) = v20;
  return a1;
}

uint64_t sub_24138D228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  char v35;
  char v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 16, &qword_254380B40);
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      *(_BYTE *)(a1 + 56) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 56) = 0;
      swift_retain();
    }
  }
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  v34 = *(_QWORD *)(a2 + 128);
  v35 = *(_BYTE *)(a2 + 136);
  v36 = *(_BYTE *)(a2 + 137);
  sub_2412C6F48(v5, v6, v7, v8, v9, v10, v11, v12, v34, v35, v36);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 96);
  v18 = *(_QWORD *)(a1 + 104);
  v19 = *(_QWORD *)(a1 + 112);
  v20 = *(_QWORD *)(a1 + 120);
  v21 = *(_QWORD *)(a1 + 128);
  v22 = *(_BYTE *)(a1 + 136);
  v23 = *(_BYTE *)(a1 + 137);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v12;
  *(_QWORD *)(a1 + 128) = v34;
  *(_BYTE *)(a1 + 136) = v35;
  *(_BYTE *)(a1 + 137) = v36;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = *(_QWORD *)(a2 + 144);
  LOBYTE(v6) = *(_BYTE *)(a2 + 152);
  sub_2412C7080(v24, v6);
  v25 = *(_QWORD *)(a1 + 144);
  v26 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = v24;
  *(_BYTE *)(a1 + 152) = v6;
  sub_2412C821C(v25, v26);
  v27 = *(_QWORD *)(a2 + 160);
  v28 = *(_QWORD *)(a2 + 168);
  v29 = *(_BYTE *)(a2 + 176);
  sub_2412C72E4(v27, v28, v29);
  v30 = *(_QWORD *)(a1 + 160);
  v31 = *(_QWORD *)(a1 + 168);
  v32 = *(_BYTE *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v27;
  *(_QWORD *)(a1 + 168) = v28;
  *(_BYTE *)(a1 + 176) = v29;
  sub_2412C822C(v30, v31, v32);
  return a1;
}

__n128 __swift_memcpy177_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_24138D434(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 16, &qword_254380B40);
    v4 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v4;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  v5 = *(_QWORD *)(a2 + 128);
  v6 = *(_BYTE *)(a2 + 136);
  v7 = *(_BYTE *)(a2 + 137);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 112);
  v15 = *(_QWORD *)(a1 + 120);
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(_BYTE *)(a1 + 136);
  v18 = *(_BYTE *)(a1 + 137);
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  *(_QWORD *)(a1 + 128) = v5;
  *(_BYTE *)(a1 + 136) = v6;
  *(_BYTE *)(a1 + 137) = v7;
  sub_2412C823C(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  v21 = *(_BYTE *)(a2 + 152);
  v22 = *(_QWORD *)(a1 + 144);
  v23 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = v21;
  sub_2412C821C(v22, v23);
  v24 = *(_BYTE *)(a2 + 176);
  v25 = *(_QWORD *)(a1 + 160);
  v26 = *(_QWORD *)(a1 + 168);
  v27 = *(_BYTE *)(a1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = v24;
  sub_2412C822C(v25, v26, v27);
  return a1;
}

uint64_t sub_24138D52C(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 177))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_24138D588(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t _s27DefaultArtworkContainerViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s27DefaultArtworkContainerViewVMn);
}

uint64_t sub_24138D618()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24138D64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24138C390(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t _s27DefaultArtworkContainerViewV6LayoutVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s27DefaultArtworkContainerViewV6LayoutVMn);
}

uint64_t sub_24138D664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  swift_release();
  sub_2412F6738(v2, v3, v4);
  return a1;
}

uint64_t sub_24138D6AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24138C6FC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24138D6B8()
{
  return swift_deallocObject();
}

uint64_t sub_24138D6C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  uint64_t v27;

  v4 = *a1;
  v5 = a1[1];
  v6 = _s27DefaultArtworkContainerViewV6LayoutVMa(255, *a1, v5, a4);
  MEMORY[0x242695AE8](&unk_2414BF8E0, v6);
  v7 = sub_2414B30B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v9 = _s18ArtworkPlaceholderVMa(255, v4, v5, v8);
  v10 = sub_2414B53B0();
  v27 = MEMORY[0x242695AE8](&unk_2414BF158, v9);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v10, &v27);
  v11 = sub_2414B3604();
  v12 = sub_2414B3514();
  MEMORY[0x242695AE8](MEMORY[0x24BDEB998], v7);
  v13 = sub_2414B3304();
  v14 = sub_2414B3514();
  v15 = sub_2414B3514();
  v16 = sub_2414B3514();
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9A8], v7);
  v26[0] = sub_2412FBF38();
  v26[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v11);
  v18 = MEMORY[0x24BDED308];
  v25[0] = v17;
  v25[1] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v26);
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v13, v25);
  v20 = MEMORY[0x24BDECC60];
  v24[0] = v19;
  v24[1] = MEMORY[0x24BDECC60];
  v23[0] = MEMORY[0x242695AE8](v18, v14, v24);
  v23[1] = v20;
  v22[0] = MEMORY[0x242695AE8](v18, v15, v23);
  v22[1] = v20;
  return MEMORY[0x242695AE8](v18, v16, v22);
}

void sub_24138D8D0()
{
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24138D8E0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[32];
  CGRect v17;
  CGRect v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_2414B32BC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414B33A0();
  sub_2412F0B40((unint64_t *)&qword_254382810, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC7A0]);
  sub_2414B5140();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_2412CBE78((uint64_t)v10, &qword_257126950);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17.origin.x = a1;
  v17.origin.y = a2;
  v17.size.width = a3;
  v17.size.height = a4;
  CGRectGetMidX(v17);
  v18.origin.x = a1;
  v18.origin.y = a2;
  v18.size.width = a3;
  v18.size.height = a4;
  CGRectGetMidY(v18);
  sub_2414B4B64();
  v16[24] = 0;
  v16[16] = 0;
  sub_2414B3298();
  v16[8] = 0;
  v16[0] = 0;
  sub_2414B32A4();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_24138DAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDDB50]), sel_init);
  objc_msgSend(v3, sel_setPaused_, 1);
  objc_msgSend(v3, sel_setPreferredFramesPerSecond_, 0);
  objc_msgSend(v3, sel_setEnableSetNeedsDisplay_, 0);
  objc_msgSend(v3, sel_setDelegate_, v1);
  objc_msgSend(v3, sel_setDevice_, *(_QWORD *)(v2 + 16));
  objc_msgSend(v3, sel_setColorPixelFormat_, *(_QWORD *)(v2 + 48));
  objc_msgSend(v3, sel_setAlpha_, 0.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124C18);
  sub_2414B3CDC();
  swift_unknownObjectWeakAssign();

  return v3;
}

void sub_24138DBF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  id v12;
  uint64_t v13;
  _UNKNOWN **v14;
  objc_class *v15;
  float v16;
  id v17;
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  void *v26;
  void *v27;
  char v28;

  v2 = v1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source + 16);
  if (v3 != 255)
  {
    v4 = v1;
    v6 = *(void **)a1;
    v5 = *(void **)(a1 + 8);
    v7 = *(unsigned __int8 *)(a1 + 16);
    v8 = *(void **)v2;
    v9 = *(void **)(v2 + 8);
    v26 = *(void **)v2;
    v27 = v9;
    v28 = v3;
    if (v7 == 255)
    {
      sub_24138EE1C(v8, v9, v3);
      sub_241316AC8(v8, v9, v3 & 1);
      sub_241316AC8(v8, v9, v3 & 1);
      sub_24131667C(v8, v9, v3 & 1);
      sub_24138EE34(v8, v9, v3);
      sub_24138EE34(v6, v5, 0xFFu);
    }
    else
    {
      v24[0] = v6;
      v24[1] = v5;
      v25 = v7 & 1;
      sub_24138EE1C(v8, v9, v3);
      sub_24138EE1C(v8, v9, v3);
      sub_24138EE1C(v8, v9, v3);
      v10 = _s11MediaCoreUI18MetalTextureSourceO2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)v24);
      sub_24131667C(v26, v27, v28);
      sub_24138EE34(v8, v9, v3);
      if ((v10 & 1) != 0)
      {
LABEL_14:
        sub_24138EE34(v8, v9, v3);
        return;
      }
    }
    if ((v3 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext)
                     + 40);
      v12 = objc_allocWithZone((Class)type metadata accessor for MetalImageTextureProvider());
      sub_24138EE1C(v8, v9, v3);
      v13 = (uint64_t)sub_241452460(v8, v11);
      v14 = &off_251177B18;
    }
    else
    {
      v15 = *(objc_class **)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext);
      v16 = (float)*(uint64_t *)(v4
                              + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond);
      v17 = objc_allocWithZone((Class)type metadata accessor for MetalVideoTextureProvider());
      v18 = v8;
      v19 = v9;
      swift_retain();
      v13 = sub_24135F8B8(v19, v8, v15, v16);
      v14 = &off_25116D0D8;
    }
    v20 = (uint64_t *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider);
    *v20 = v13;
    v20[1] = (uint64_t)v14;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    if (*v20)
    {
      v21 = v20[1];
      v22 = *(_QWORD *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer);
      if (v22)
      {
        *(_QWORD *)(v22 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = v21;
        swift_unknownObjectWeakAssign();
      }
      v23 = swift_unknownObjectRetain();
      sub_24138DF9C(v23, v21);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
}

uint64_t sub_24138DEA4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer);
  *v1 = 0;
  v1[1] = 0;
  swift_unknownObjectRelease();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider);
  *v2 = 0;
  v2[1] = 0;
  swift_unknownObjectRelease();
  if (*v2)
  {
    v3 = v2[1];
    if (*v1)
    {
      *(_QWORD *)(*v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = v3;
      swift_unknownObjectWeakAssign();
    }
    v4 = swift_unknownObjectRetain();
    sub_24138DF9C(v4, v3);
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver) = 0;
  return swift_release();
}

void sub_24138DF4C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = (void *)MEMORY[0x242695CC8](a1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 1.0);

  }
}

uint64_t sub_24138DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124C20);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124C28);
  v19 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v21 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124C30);
  sub_2412C8FC4(&qword_257124C38, &qword_257124C30, MEMORY[0x24BDB9AF8]);
  sub_24135BB24();
  sub_2414B2EA8();
  swift_release();
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v21 = (id)sub_2414B5230();
  v14 = sub_2414B520C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  sub_2412C8FC4(&qword_257124C40, &qword_257124C20, MEMORY[0x24BDB9658]);
  sub_241300004();
  sub_2414B2E84();
  sub_2412D6724((uint64_t)v5);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_allocObject();
  v15 = v20;
  swift_unknownObjectWeakInit();
  sub_2412C8FC4(&qword_257124C48, &qword_257124C28, MEMORY[0x24BDB9A08]);
  v16 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
  *(_QWORD *)(v15 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver) = v16;
  return swift_release();
}

void sub_24138E250(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  void (*v20)();
  uint64_t v21;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = (void *)MEMORY[0x242695CC8](v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalView);
    if (!v6)
    {
      v7 = v5;
LABEL_12:

      return;
    }
    v7 = v6;
    if (v2)
    {
      if (v2 == 1)
      {
        objc_msgSend(v6, sel_setEnableSetNeedsDisplay_, 1);
        objc_msgSend(v7, sel_setNeedsDisplay);
        v8 = v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded];
        v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 1;
        if ((v8 & 1) == 0)
        {
          v9 = (void *)objc_opt_self();
          v10 = swift_allocObject();
          *(_QWORD *)(v10 + 16) = v5;
          v20 = sub_24138EEAC;
          v21 = v10;
          aBlock = MEMORY[0x24BDAC760];
          v17 = 1107296256;
          v11 = &block_descriptor_11;
LABEL_10:
          v18 = sub_2413002C8;
          v19 = v11;
          v14 = _Block_copy(&aBlock);
          v15 = v5;
          swift_release();
          objc_msgSend(v9, sel_animateWithDuration_delay_options_animations_completion_, 0, v14, 0, 0.2, 0.0);
          _Block_release(v14);
        }
      }
      else
      {
        objc_msgSend(v6, sel_setEnableSetNeedsDisplay_, 0);
        objc_msgSend(v7, sel_setPaused_, 0);
        objc_msgSend(v7, sel_setPreferredFramesPerSecond_, *(_QWORD *)&v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond]);
        v12 = v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded];
        v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 1;
        if ((v12 & 1) == 0)
        {
          v9 = (void *)objc_opt_self();
          v13 = swift_allocObject();
          *(_QWORD *)(v13 + 16) = v5;
          v20 = sub_24138EE9C;
          v21 = v13;
          aBlock = MEMORY[0x24BDAC760];
          v17 = 1107296256;
          v11 = &block_descriptor_8;
          goto LABEL_10;
        }
      }
    }

    goto LABEL_12;
  }
}

id sub_24138E4A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetalTextureView.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24138E55C()
{
  sub_24138EC44();
}

uint64_t sub_24138E564()
{
  return sub_24138DEA4();
}

uint64_t sub_24138E584@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t result;

  v3 = v1[3];
  v4 = v1[4];
  v6 = v1[5];
  v5 = v1[6];
  v7 = objc_allocWithZone((Class)type metadata accessor for MetalTextureView.Coordinator());
  swift_unknownObjectRetain();
  swift_retain();
  v8 = sub_24138ED14(v3, v4, v6, v5);
  swift_unknownObjectRelease();
  result = swift_release();
  *a1 = v8;
  return result;
}

uint64_t sub_24138E604()
{
  sub_24138EC00();
  return sub_2414B3A54();
}

uint64_t sub_24138E654()
{
  sub_24138EC00();
  return sub_2414B3A00();
}

void sub_24138E6A4()
{
  sub_24138EC00();
  sub_2414B3A48();
  __break(1u);
}

uint64_t _s11MediaCoreUI18MetalTextureSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      sub_2412CC884(0, &qword_254382930);
      sub_241316AC8(v5, v6, 0);
      sub_241316AC8(v2, v3, 0);
      v9 = v2;
      v10 = v5;
      v11 = v3;
      v12 = v6;
      v13 = sub_2414B532C();

      if ((v13 & 1) != 0)
      {
        v8 = sub_2414B532C();

        v4 = 0;
        v7 = 0;
        goto LABEL_10;
      }

      v4 = 0;
      v7 = 0;
LABEL_9:
      v8 = 0;
      goto LABEL_10;
    }
LABEL_5:
    sub_241316AC8(*(void **)a2, *(void **)(a2 + 8), v7);
    sub_241316AC8(v2, v3, v4);
    goto LABEL_9;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    goto LABEL_5;
  sub_2412CC884(0, &qword_254382930);
  v4 = 1;
  sub_241316AC8(v5, v6, 1);
  sub_241316AC8(v2, v3, 1);
  v8 = sub_2414B532C();
  v7 = 1;
LABEL_10:
  sub_24131667C(v2, v3, v4);
  sub_24131667C(v5, v6, v7);
  return v8 & 1;
}

void destroy for MetalTextureSource(uint64_t a1)
{
  sub_24131667C(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11MediaCoreUI18MetalTextureSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MetalTextureSource(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_24131667C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MetalTextureSource(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_24131667C(v4, v5, v6);
  return a1;
}

uint64_t sub_24138E960(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24138E968(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureSource()
{
  return &type metadata for MetalTextureSource;
}

uint64_t type metadata accessor for MetalTextureView.Coordinator()
{
  return objc_opt_self();
}

uint64_t destroy for MetalTextureView(uint64_t a1)
{
  sub_24131667C(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for MetalTextureView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MetalTextureView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_24131667C(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MetalTextureView(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_24131667C(v5, v6, v7);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetalTextureView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalTextureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureView()
{
  return &type metadata for MetalTextureView;
}

unint64_t sub_24138EC00()
{
  unint64_t result;

  result = qword_257124C10;
  if (!qword_257124C10)
  {
    result = MEMORY[0x242695AE8](&unk_2414BFA34, &type metadata for MetalTextureView);
    atomic_store(result, (unint64_t *)&qword_257124C10);
  }
  return result;
}

void sub_24138EC44()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  void *v4;
  char *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  _QWORD v9[2];
  unsigned __int8 v10;
  char *v11;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124C18);
  sub_2414B3CDC();
  v4 = v11;
  v5 = &v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  v6 = *(void **)&v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  v7 = *(void **)&v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source + 8];
  *(_QWORD *)v5 = v1;
  *((_QWORD *)v5 + 1) = v2;
  v8 = v5[16];
  v5[16] = v3;
  sub_241316AC8(v1, v2, v3);
  sub_24138EE1C(v6, v7, v8);
  sub_24138EE34(v6, v7, v8);
  v9[0] = v6;
  v9[1] = v7;
  v10 = v8;
  sub_24138DBF0((uint64_t)v9);
  sub_24138EE34(v6, v7, v8);

}

id sub_24138ED14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  objc_super v14;

  v9 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = -1;
  v11 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider];
  *v11 = 0;
  v11[1] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver] = 0;
  *v9 = a1;
  v9[1] = a2;
  v12 = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)&v12[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext] = a3;
  *(_QWORD *)&v12[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond] = a4;
  swift_retain();

  v14.receiver = v12;
  v14.super_class = (Class)type metadata accessor for MetalTextureView.Coordinator();
  return objc_msgSendSuper2(&v14, sel_init);
}

id sub_24138EE1C(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_241316AC8(result, a2, a3 & 1);
  return result;
}

void sub_24138EE34(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_24131667C(a1, a2, a3 & 1);
}

uint64_t sub_24138EE4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_24138EE70(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_24138E250(a1, v1);
}

uint64_t sub_24138EE78()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24138EE9C()
{
  uint64_t v0;

  sub_24138DF4C(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_24138EEB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B526C();
  v6 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v44 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A40);
  v10 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  v46 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252B8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252B0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125288);
  swift_allocObject();
  v0[3] = sub_2414B2DB8();
  v0[4] = 0;
  v20 = (char *)v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__looper;
  v47 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124CF8);
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v21 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__error;
  LOBYTE(v47) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257124D08);
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  v22 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_errorSubject;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123998);
  swift_allocObject();
  *(_QWORD *)((char *)v1 + v22) = sub_2414B2DB8();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher) = 0;
  v23 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 1;
  v24 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_signposts;
  type metadata accessor for MotionSignposts();
  swift_allocObject();
  *(_QWORD *)((char *)v1 + v24) = sub_24132ED80();
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) = 1;
  v25 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
  v26 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v27[16] = 1;
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) = 0;
  v28 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
  v29 = sub_2414B2A88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate;
  v31 = sub_2414B2B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = 0;
  v32 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_mediaServicesWereResetPublisher;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_mediaServicesWereResetPublisher) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher) = 0;
  v33 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  *v33 = 0;
  v33[1] = 0;
  v34 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  *v34 = 0;
  v34[1] = 0;
  v35 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_2414B5278();

  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v47 = (id)sub_2414B5230();
  v36 = sub_2414B520C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
  sub_2412C8030((unint64_t *)&unk_254381520, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v38 = v42;
  v37 = v43;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v4, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v37);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4((unint64_t *)&qword_254380A30, &qword_254380A40, MEMORY[0x24BDB9A08]);
  v39 = v45;
  v40 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
  *(_QWORD *)((char *)v1 + v32) = v40;
  swift_release();
  return v1;
}

uint64_t sub_24138F418()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  double v23;
  double v24;
  void *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t);
  void *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  _QWORD v39[3];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2414B2A88();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B2CA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v35 = v4;
    v12 = result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext;
    v14 = *(void **)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    v13 = *(_QWORD *)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    v15 = qword_25437D278;
    swift_bridgeObjectRetain();
    if (v15 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v6, (uint64_t)qword_25438E7D0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v32(v9, v16, v6);
    v17 = sub_2414B51B8();
    v34 = v14;
    v39[0] = v14;
    v39[1] = v13;
    sub_2413E6A30(v17, 0xD00000000000003FLL, 0x80000002414D0E10, (uint64_t)v39);
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v9, v6);
    v18 = v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_2412DC3FC(v18, (uint64_t)v2, &qword_2543844C0);
    v19 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v2, 1, v3) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_2412CBE78((uint64_t)v2, &qword_2543844C0);
    }
    else
    {
      v31 = v13;
      v20 = (uint64_t)v36;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v36, v2, v3);
      v21 = (double *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize);
      if ((*(_BYTE *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize + 16) & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v3);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        v22 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID + 8);
        if (v22)
        {
          v30 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
          v24 = *v21;
          v23 = v21[1];
          v32(v9, v16, v6);
          v25 = *(void **)v12;
          v26 = *(_QWORD *)(v12 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v27 = sub_2414B51B8();
          v37 = v25;
          v38 = v26;
          sub_2413E6A30(v27, 0x6E69747465736552, 0xEC0000002E2E2E67, (uint64_t)&v37);
          swift_bridgeObjectRelease();
          v33(v9, v6);
          v28 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask);
          *(_QWORD *)(v11 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = 0;
          sub_2413948D4(v28);
          swift_release();
          v37 = v34;
          v38 = v31;
          sub_241390030(v20, v30, v22, &v37, v24, v23);
          swift_bridgeObjectRelease();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v3);
          return swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v3);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24138F7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask))
  {
    swift_retain();
    sub_2414B5050();
    swift_release();
  }

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__looper;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__error;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  sub_2412CBE78(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution, &qword_257125130);
  sub_2412CBE78(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL, &qword_2543844C0);
  sub_2412CBE78(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate, &qword_2571264F0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24138F994()
{
  sub_24138F7D8();
  return swift_deallocClassInstance();
}

void sub_24138F9B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  id v8;

  v2 = v1;
  v3 = a1;
  v4 = *(void **)(v1 + 16);
  if (!v4)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  if (!a1)
  {
LABEL_10:
    v8 = v4;
    sub_2414B2DAC();

    return;
  }
  sub_2412CC884(0, &qword_257125140);
  v5 = v4;
  v3 = v3;
  v6 = sub_2414B532C();

  if ((v6 & 1) == 0)
  {
LABEL_6:
    objc_msgSend(v3, sel_pause);
    v4 = *(void **)(v2 + 16);
    if (!v4)
    {
      v7 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher;
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher))
      {
        swift_retain();
        sub_2414B2D7C();
        swift_release();
      }
      *(_QWORD *)(v2 + v7) = 0;
      swift_release();
      v4 = *(void **)(v2 + 16);
    }
    goto LABEL_10;
  }
}

uint64_t sub_24138FAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125280);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 32))
  {
    v6 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v8[1] = *(_QWORD *)(v0 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257125288);
    sub_2412C8FC4(&qword_257125290, &qword_257125288, MEMORY[0x24BDB9CB0]);
    sub_241396734();
    sub_2414B2EA8();
    sub_2412C8FC4(&qword_2571252A8, &qword_257125280, MEMORY[0x24BDB9658]);
    v6 = sub_2414B2E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_QWORD *)(v1 + 32) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_24138FBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();

  if (!v3)
  {
    v1 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher;
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher))
    {
      swift_retain();
      sub_2414B2D7C();
      swift_release();
    }
    *(_QWORD *)(v0 + v1) = 0;
    swift_release();
    v2 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher;
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher))
    {
      swift_retain();
      sub_2414B2D7C();
      swift_release();
    }
    *(_QWORD *)(v0 + v2) = 0;
    swift_release();
  }
}

uint64_t sub_24138FCE0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24138FD50()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24138FDC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2414B2E48();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return sub_2414B2DAC();
}

uint64_t sub_24138FEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125270);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher))
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher);
  }
  else
  {
    v9[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_errorSubject);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257123998);
    sub_2412C8FC4(&qword_2571239A0, &qword_257123998, MEMORY[0x24BDB9CB0]);
    sub_2414B2EA8();
    sub_2412C8FC4(&qword_257125278, &qword_257125270, MEMORY[0x24BDB9658]);
    v7 = sub_2414B2E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_QWORD *)(v1 + v6) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

void sub_241390030(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, double);
  uint64_t v37;
  double v38;
  double v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  int v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  _QWORD *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  double *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  id v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99[5];

  v94 = a3;
  v92 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v11);
  v93 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125150);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v16);
  v89 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v83 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v83 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v83 - v24;
  v26 = sub_2414B2A88();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v95 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v83 - v30;
  v33 = *a4;
  v97 = a4[1];
  v98 = v33;
  v34 = v6 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
  v40 = *(_BYTE *)(v6 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize + 16) == 1;
  v96 = a1;
  v91 = v35;
  if (v40)
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16);
    v36((char *)&v83 - v30, a1, v26, v31);
    v37 = v6;
LABEL_9:
    v90 = (void (*)(char *, uint64_t, uint64_t))v36;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
LABEL_17:
    v51 = (_QWORD *)(v37 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    v52 = v97;
    v53 = v98;
    *v51 = v98;
    v51[1] = v52;
    v54 = a1;
    v55 = v53;
    v56 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v57 = v88;
    v58 = v90;
    v90(v88, v54, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v57, 0, 1, v26);
    v59 = (uint64_t)v57;
    v60 = v89;
    sub_2412EAEA4(v59, v89, &qword_2543844C0);
    v61 = v37 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_241395E68(v60, v61, &qword_2543844C0);
    swift_endAccess();
    *(double *)v34 = a5;
    *(double *)(v34 + 8) = a6;
    *(_BYTE *)(v34 + 16) = 0;
    v99[3] = &type metadata for MCUILoggingContext;
    v99[4] = (id)sub_241395E24();
    v99[0] = v55;
    v99[1] = v56;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_2414795E0((uint64_t)v99);
    swift_endAccess();
    sub_2412CBE78((uint64_t)v99, &qword_25712ADD0);
    v62 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v63 = objc_msgSend(v62, sel_launchedToTest);
    v87 = v26;
    LODWORD(v89) = v63;

    v64 = sub_2414B4FE4();
    v65 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v93, 1, 1, v64);
    v66 = swift_allocObject();
    swift_weakInit();
    v67 = v95;
    v58(v95, v96, v26);
    v68 = (*(unsigned __int8 *)(v27 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v69 = (v91 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
    v70 = v37;
    v71 = swift_allocObject();
    *(_QWORD *)(v71 + 16) = 0;
    *(_QWORD *)(v71 + 24) = 0;
    v72 = v97;
    *(_QWORD *)(v71 + 32) = v98;
    *(_QWORD *)(v71 + 40) = v72;
    *(_QWORD *)(v71 + 48) = v66;
    *(_BYTE *)(v71 + 56) = v89;
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v71 + v68, v67, v87);
    v73 = (double *)(v71 + v69);
    *v73 = a5;
    v73[1] = a6;
    v74 = (_QWORD *)(v71 + ((v69 + 23) & 0xFFFFFFFFFFFFFFF8));
    v75 = v94;
    *v74 = v92;
    v74[1] = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76 = sub_24135F590(v65, (uint64_t)&unk_257125160, v71);
    sub_2412CBE78(v65, (uint64_t *)&unk_254384360);
    v77 = *(_QWORD *)(v70 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask);
    *(_QWORD *)(v70 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = v76;
    swift_retain();
    sub_2413948D4(v77);
    swift_release();
    swift_release();
    return;
  }
  v86 = v13;
  v84 = v22;
  v37 = v6;
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) & 1) != 0)
  {
    v38 = *(double *)v34;
    v39 = *(double *)(v34 + 8);
    v36 = *(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16);
    a1 = v96;
    v36((char *)&v83 - v30, v96, v26, v31);
    v40 = v38 == a5 && v39 == a6;
    if (!v40)
      goto LABEL_9;
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16);
    v36((char *)&v83 - v30, v96, v26, v31);
  }
  v90 = (void (*)(char *, uint64_t, uint64_t))v36;
  ((void (*)(char *, char *, uint64_t))v36)(v25, v32, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v25, 0, 1, v26);
  v41 = v26;
  v42 = v27;
  v85 = v37;
  v43 = v37 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
  swift_beginAccess();
  v44 = (uint64_t)v15;
  v45 = (uint64_t)&v15[*(int *)(v86 + 48)];
  sub_2412DC3FC((uint64_t)v25, (uint64_t)v15, &qword_2543844C0);
  sub_2412DC3FC(v43, v45, &qword_2543844C0);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v46((uint64_t)v15, 1, v41) == 1)
  {
    sub_2412CBE78((uint64_t)v25, &qword_2543844C0);
    v47 = v42;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v41);
    v48 = v46(v45, 1, v41);
    v37 = v85;
    v26 = v41;
    if (v48 == 1)
    {
      sub_2412CBE78(v44, &qword_2543844C0);
      goto LABEL_20;
    }
LABEL_16:
    sub_2412CBE78(v44, &qword_257125150);
    a1 = v96;
    v27 = v47;
    goto LABEL_17;
  }
  v47 = v42;
  v49 = (uint64_t)v84;
  sub_2412DC3FC(v44, (uint64_t)v84, &qword_2543844C0);
  v26 = v41;
  if (v46(v45, 1, v41) == 1)
  {
    sub_2412CBE78((uint64_t)v25, &qword_2543844C0);
    v50 = *(void (**)(char *, uint64_t))(v47 + 8);
    v50(v32, v26);
    v50((char *)v49, v26);
    v37 = v85;
    goto LABEL_16;
  }
  v78 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v95, v45, v41);
  sub_2412C8030(&qword_257121D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v79 = sub_2414B4CE4();
  v80 = v49;
  v81 = *(void (**)(char *, uint64_t))(v47 + 8);
  v81(v78, v26);
  sub_2412CBE78((uint64_t)v25, &qword_2543844C0);
  v81(v32, v26);
  v81((char *)v80, v26);
  sub_2412CBE78(v44, &qword_2543844C0);
  a1 = v96;
  v37 = v85;
  v27 = v47;
  if ((v79 & 1) == 0)
    goto LABEL_17;
LABEL_20:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v82 = v99[0];

  if (v82)
  {
    if (*(_QWORD *)(v37 + 16))
      sub_241393688();
  }
}

uint64_t sub_241390850(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v10 + 128) = v21;
  *(_QWORD *)(v10 + 136) = v22;
  *(double *)(v10 + 112) = a1;
  *(double *)(v10 + 120) = a2;
  *(_BYTE *)(v10 + 552) = a9;
  *(_QWORD *)(v10 + 96) = a8;
  *(_QWORD *)(v10 + 104) = a10;
  *(_QWORD *)(v10 + 80) = a6;
  *(_QWORD *)(v10 + 88) = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125168);
  *(_QWORD *)(v10 + 144) = v11;
  *(_QWORD *)(v10 + 152) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v10 + 160) = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125170);
  *(_QWORD *)(v10 + 168) = v12;
  *(_QWORD *)(v10 + 176) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v10 + 184) = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125178);
  *(_QWORD *)(v10 + 192) = v13;
  *(_QWORD *)(v10 + 200) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v10 + 208) = swift_task_alloc();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125180);
  *(_QWORD *)(v10 + 216) = v14;
  *(_QWORD *)(v10 + 224) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v10 + 232) = swift_task_alloc();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125188);
  *(_QWORD *)(v10 + 240) = v15;
  *(_QWORD *)(v10 + 248) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v10 + 256) = swift_task_alloc();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125190);
  *(_QWORD *)(v10 + 264) = v16;
  *(_QWORD *)(v10 + 272) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v10 + 280) = swift_task_alloc();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125198);
  *(_QWORD *)(v10 + 288) = v17;
  *(_QWORD *)(v10 + 296) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v10 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  *(_QWORD *)(v10 + 312) = swift_task_alloc();
  v18 = sub_2414B2A88();
  *(_QWORD *)(v10 + 320) = v18;
  *(_QWORD *)(v10 + 328) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v10 + 336) = swift_task_alloc();
  v19 = sub_2414B2CA4();
  *(_QWORD *)(v10 + 344) = v19;
  *(_QWORD *)(v10 + 352) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v10 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241390A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  void *v20;
  id v21;
  objc_class *v22;
  id v23;
  id v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  if (qword_25437D278 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_25438E7D0);
  *(_QWORD *)(v0 + 368) = v6;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 376) = v7;
  v7(v1, v6, v3);
  v8 = sub_2414B5194();
  v32 = v5;
  v33 = v4;
  sub_2413E6A30(v8, 0xD000000000000022, 0x80000002414D0BA0, (uint64_t)&v32);
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 384) = v9;
  v9(v1, v3);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 392) = Strong;
  if (!Strong)
    goto LABEL_6;
  if ((sub_2414B5074() & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v7(v11, v6, v12);
    v15 = sub_2414B5194();
    v32 = v14;
    v33 = v13;
    sub_2413E6A30(v15, 0xD000000000000038, 0x80000002414D0D50, (uint64_t)&v32);
    swift_release();
    v9(v11, v12);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_BYTE *)(v0 + 552) == 1)
  {
    v18 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 88);
    v7(*(_QWORD *)(v0 + 360), v6, *(_QWORD *)(v0 + 344));
    v19 = sub_2414B51A0();
    v32 = v18;
    v33 = v17;
    sub_2413E6A30(v19, 0xD000000000000046, 0x80000002414D0D00, (uint64_t)&v32);
    (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
    v20 = (void *)sub_2414B2A28();
    v21 = objc_msgSend((id)objc_opt_self(), sel_assetWithURL_, v20);

    if (!v21)
    {
      swift_release();
      goto LABEL_6;
    }
    *(_QWORD *)(v0 + 496) = v21;
    v22 = (objc_class *)MEMORY[0x24BDB2670];
    v23 = v21;
    v24 = objc_msgSend(objc_allocWithZone(v22), sel_init);
    *(_QWORD *)(v0 + 504) = v24;
    if ((sub_2414B5074() & 1) != 0)
    {
      v25 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v26 = *(_QWORD *)(v0 + 360);
      v27 = *(_QWORD *)(v0 + 344);
      v29 = *(_QWORD *)(v0 + 80);
      v28 = *(_QWORD *)(v0 + 88);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v26, *(_QWORD *)(v0 + 368), v27);
      v30 = sub_2414B5194();
      v32 = v29;
      v33 = v28;
      sub_2413E6A30(v30, 0xD00000000000003BLL, 0x80000002414D0C90, (uint64_t)&v32);

      swift_release();
      v25(v26, v27);
      goto LABEL_6;
    }
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v31;
    *v31 = v0;
    v31[1] = sub_241391898;
    return sub_24146F088();
  }
  else
  {
    if (qword_257120B60 != -1)
      swift_once();
    return swift_task_switch();
  }
}

uint64_t sub_241390E24()
{
  if (qword_257120B68 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_241390E80()
{
  return swift_task_switch();
}

uint64_t sub_241390E98()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v1;
  *v1 = v0;
  v1[1] = sub_241390EE4;
  return sub_24149A1B0();
}

uint64_t sub_241390EE4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241390F38()
{
  return swift_task_switch();
}

uint64_t sub_241390F4C()
{
  return swift_task_switch();
}

uint64_t sub_241390F64()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 408) = qword_257137258;
  return swift_task_switch();
}

uint64_t sub_241390F84()
{
  return swift_task_switch();
}

uint64_t sub_241390F9C()
{
  uint64_t v0;
  char v1;

  sub_24149ACBC();
  *(_BYTE *)(v0 + 553) = v1 & 1;
  return swift_task_switch();
}

uint64_t sub_241390FE0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  void *v10;
  id v11;
  objc_class *v12;
  id v13;
  id v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(unsigned __int8 *)(v0 + 553);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 16))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 320));
  v3 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 320);
  if (v1 == 1)
  {
    v5 = sub_2414B29EC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if ((v5 & 1) == 0)
      return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  }
  v8 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 376))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
  v9 = sub_2414B51A0();
  v22 = v8;
  v23 = v7;
  sub_2413E6A30(v9, 0xD00000000000003ALL, 0x80000002414D0BD0, (uint64_t)&v22);
  (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
  v10 = (void *)sub_2414B2A28();
  v11 = objc_msgSend((id)objc_opt_self(), sel_assetWithURL_, v10);

  if (!v11)
  {
    swift_release();
    goto LABEL_9;
  }
  *(_QWORD *)(v0 + 496) = v11;
  v12 = (objc_class *)MEMORY[0x24BDB2670];
  v13 = v11;
  v14 = objc_msgSend(objc_allocWithZone(v12), sel_init);
  *(_QWORD *)(v0 + 504) = v14;
  if ((sub_2414B5074() & 1) != 0)
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v16 = *(_QWORD *)(v0 + 360);
    v17 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v16, *(_QWORD *)(v0 + 368), v17);
    v20 = sub_2414B5194();
    v22 = v19;
    v23 = v18;
    sub_2413E6A30(v20, 0xD00000000000003BLL, 0x80000002414D0C90, (uint64_t)&v22);

    swift_release();
    v15(v16, v17);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v21;
  *v21 = v0;
  v21[1] = sub_241391898;
  return sub_24146F088();
}

uint64_t sub_24139129C()
{
  return swift_task_switch();
}

uint64_t sub_2413912B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 416) = qword_257137258;
  return swift_task_switch();
}

uint64_t sub_2413912D4()
{
  _QWORD *v0;

  v0[53] = objc_opt_self();
  v0[54] = sub_2414B4FC0();
  v0[55] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241391350()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 424);
  swift_release();
  *(_QWORD *)(v0 + 448) = objc_msgSend(v1, sel_mainScreen);
  return swift_task_switch();
}

uint64_t sub_2413913AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 456) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139140C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 448);
  swift_release();
  objc_msgSend(v1, sel_scale);
  *(_QWORD *)(v0 + 464) = v2;

  return swift_task_switch();
}

uint64_t sub_241391460()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 472) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413914C0()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v1 = *(double *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(double *)(v0 + 112);
  v3 = *(double *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  swift_release();
  v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext);
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 64) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v8;
  *v8 = v0;
  v8[1] = sub_24139156C;
  return sub_24149AF40(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v7, (_OWORD *)(v0 + 56), v1 * v4, v1 * v3);
}

uint64_t sub_24139156C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 488) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2413915C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  objc_class *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 488);
  if (!v1)
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v11 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v11, *(_QWORD *)(v0 + 368), v12);
    v15 = sub_2414B51A0();
    v27 = v14;
    v28 = v13;
    sub_2413E6A30(v15, 0xD000000000000025, 0x80000002414D0CD0, (uint64_t)&v27);
    v10(v11, v12);
    goto LABEL_5;
  }
  if (v1 == (void *)1)
  {
    v2 = *(_QWORD *)(v0 + 312);
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = sub_2414B4FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
    v6 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    v7 = sub_2414B4FB4();
    v8 = (_QWORD *)swift_allocObject();
    v9 = MEMORY[0x24BEE6930];
    v8[2] = v7;
    v8[3] = v9;
    v8[4] = v4;
    v8[5] = v3;
    v8[6] = v6;
    swift_release();
    sub_2413EE440(v2, (uint64_t)&unk_257125228, (uint64_t)v8);
    swift_release();
LABEL_5:
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 496) = v1;
  v16 = (objc_class *)MEMORY[0x24BDB2670];
  v17 = v1;
  v18 = objc_msgSend(objc_allocWithZone(v16), sel_init);
  *(_QWORD *)(v0 + 504) = v18;
  if ((sub_2414B5074() & 1) != 0)
  {
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v20 = *(_QWORD *)(v0 + 360);
    v21 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v20, *(_QWORD *)(v0 + 368), v21);
    v24 = sub_2414B5194();
    v27 = v23;
    v28 = v22;
    sub_2413E6A30(v24, 0xD00000000000003BLL, 0x80000002414D0C90, (uint64_t)&v27);

    swift_release();
    v19(v20, v21);
    goto LABEL_8;
  }
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v26;
  *v26 = v0;
  v26[1] = sub_241391898;
  return sub_24146F088();
}

uint64_t sub_241391898()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2413918FC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = (void *)v0[62];
  v0[66] = sub_2414B4FC0();
  v2 = v1;
  v0[67] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241391970()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 496);
  swift_release();
  *(_QWORD *)(v0 + 544) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2618]), sel_initWithAsset_, v1);

  return swift_task_switch();
}

uint64_t sub_2413919D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];

  v1 = *(void **)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 304);
  v57 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 264);
  v46 = *(_QWORD *)(v0 + 240);
  v47 = *(_QWORD *)(v0 + 248);
  v43 = *(_QWORD *)(v0 + 256);
  v44 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 232);
  v41 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 192);
  v54 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 160);
  v49 = *(_QWORD *)(v0 + 144);
  v59 = *(_QWORD *)(v0 + 88);
  v52 = *(_QWORD *)(v0 + 80);
  v45 = objc_msgSend((id)objc_opt_self(), sel_playerLooperWithPlayer_templateItem_, v1, *(_QWORD *)(v0 + 544));
  objc_msgSend(v1, sel__setDisallowsVideoLayerDisplayCompositing_, 1);
  swift_getKeyPath();
  sub_2414B29E0();
  swift_release();
  sub_2412C8FC4(&qword_2571251B0, &qword_257125190, MEMORY[0x24BDD0230]);
  sub_2412C8030(&qword_2571251B8, (uint64_t (*)(uint64_t))type metadata accessor for Status, (uint64_t)&unk_2414B7818);
  sub_2414B2EA8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_2571251C0, &qword_257125198, MEMORY[0x24BDB9658]);
  v60 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v2, v3);
  swift_getKeyPath();
  sub_2414B29E0();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = MEMORY[0x24BDD0230];
  sub_2412C8FC4(&qword_2571251C8, &qword_257125178, MEMORY[0x24BDD0230]);
  sub_2414B2E6C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v7, v39);
  sub_2412C8FC4(&qword_2571251D0, &qword_257125180, MEMORY[0x24BDB94C8]);
  sub_2414B2EA8();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v42);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_2571251D8, &qword_257125188, MEMORY[0x24BDB9658]);
  v9 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v43, v46);
  swift_getKeyPath();
  sub_2414B29E0();
  swift_release();
  sub_2412C8FC4(&qword_2571251E0, &qword_257125168, v8);
  sub_24139619C();
  sub_2414B2EA8();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v48, v49);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = v52;
  v11[4] = v59;
  v11[5] = v45;
  sub_2412C8FC4(&qword_2571251F8, &qword_257125170, MEMORY[0x24BDB9658]);
  swift_bridgeObjectRetain();
  v53 = v45;
  v12 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v50, v54);
  v13 = sub_2414B4FE4();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v57, 1, 1, v13);
  v15 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v16 = sub_2414B4FB4();
  v17 = (_QWORD *)swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v15;
  v17[5] = v60;
  v17[6] = v9;
  v17[7] = v12;
  swift_release();
  sub_2413EE440(v57, (uint64_t)&unk_257125208, (uint64_t)v17);
  swift_release();
  v19 = sub_2414B5074();
  v58 = *(void **)(v0 + 544);
  if ((v19 & 1) != 0)
  {
    v20 = *(void **)(v0 + 496);
    v21 = *(void **)(v0 + 504);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v23, *(_QWORD *)(v0 + 368), v24);
    v27 = sub_2414B5194();
    v61[0] = v25;
    v61[1] = v26;
    sub_2413E6A30(v27, 0xD00000000000004ELL, 0x80000002414D0C40, (uint64_t)v61);
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    v22(v23, v24);
  }
  else
  {
    v28 = *(void **)(v0 + 496);
    v29 = *(void **)(v0 + 504);
    v30 = *(_QWORD *)(v0 + 312);
    v31 = *(_QWORD *)(v0 + 80);
    v55 = *(_QWORD *)(v0 + 88);
    v14(v30, 1, 1, v13);
    v32 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    v33 = v53;
    swift_retain();
    v34 = v29;
    v35 = sub_2414B4FB4();
    v36 = (_QWORD *)swift_allocObject();
    v36[2] = v35;
    v36[3] = MEMORY[0x24BEE6930];
    v36[4] = v32;
    v36[5] = v33;
    v36[6] = v34;
    v36[7] = v31;
    v36[8] = v55;
    swift_release();
    sub_2413EE440(v30, (uint64_t)&unk_257125218, (uint64_t)v36);

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413921B4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  unint64_t v21;

  v1 = *(void **)(v0 + 520);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 376))(v3, *(_QWORD *)(v0 + 368), v4);
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_2414B5578();
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0xE000000000000000;
  sub_2414B4DF8();
  *(_QWORD *)(v0 + 72) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
  sub_2414B565C();
  sub_2414B4DF8();
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = sub_2414B51A0();
  v20 = v6;
  v21 = v7;
  sub_2413E6A30(v10, v8, v9, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  v2(v3, v4);
  v11 = sub_2414B4FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = sub_2414B4FC0();
  swift_retain();
  v14 = sub_2414B4FB4();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v12;
  swift_release();
  sub_2413EE440(v5, (uint64_t)&unk_2571251A8, (uint64_t)v15);
  swift_release();

  v17 = *(void **)(v0 + 496);
  *(_QWORD *)(v0 + 528) = v13;
  v18 = v17;
  *(_QWORD *)(v0 + 536) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413923D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_2414B2CA4();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_2414B4FC0();
  v6[11] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139246C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  _QWORD v9[2];

  swift_release();
  if (qword_25437D278 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_25438E7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  v7 = sub_2414B51A0();
  v9[0] = v5;
  v9[1] = v4;
  sub_2413E6A30(v7, 0xD00000000000001ELL, 0x80000002414D0D90, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24138FDC0();
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241392588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_2414B4FC0();
  *(_QWORD *)(v4 + 48) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413925F4()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24138FDC0();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241392660(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_2414B4FC0();
  swift_retain();
  v8 = sub_2414B4FB4();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  v9[5] = v5;
  swift_release();
  sub_2413EE440((uint64_t)v4, (uint64_t)&unk_257125268, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_2413927B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  sub_2414B4FC0();
  v5[8] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139281C()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    v1 = *(void **)(v0 + 40);

    if (v1)
      sub_241394A5C(*(_QWORD *)(v0 + 56));
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2413928E8(_QWORD *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  float v7;
  float v8;
  BOOL v9;

  if (*a1 == 2 && (v4 = a2 + 16, swift_beginAccess(), (v5 = (void *)MEMORY[0x242695CC8](v4)) != 0))
  {
    v6 = v5;
    objc_msgSend(v5, sel_rate);
    v8 = v7;

    v9 = v8 == 1.0;
  }
  else
  {
    v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_241392974()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_2414B4FC0();
  swift_retain();
  v5 = sub_2414B4FB4();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x24BEE6930];
  v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  swift_release();
  sub_2413EE440((uint64_t)v2, (uint64_t)&unk_257125258, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_241392AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  sub_2414B4FC0();
  *(_QWORD *)(v4 + 72) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241392B20()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    swift_retain();
    sub_241479CC8();
    swift_endAccess();
    swift_release();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_241392BDC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_loopingPlayerItems);
  sub_2412CC884(0, (unint64_t *)&qword_257124078);
  v4 = sub_2414B4EC4();

  *a2 = v4;
}

uint64_t sub_241392C4C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - v13;
  v15 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_2414B56C8();
      result = swift_bridgeObjectRelease();
      if (!v18)
        return swift_release();
    }
    else
    {
      v18 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v18)
        return swift_release();
    }
    if (v18 >= 1)
    {
      v40 = a5;
      v41 = v17;
      v42 = v14;
      v43 = a3;
      v44 = a4;
      v46 = v15 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v19 = 0;
      v45 = MEMORY[0x24BEE4AE0] + 8;
      v47 = v18;
      v48 = v15;
      while (1)
      {
        if (v46)
          v20 = (id)MEMORY[0x242694E34](v19, v15);
        else
          v20 = *(id *)(v15 + 8 * v19 + 32);
        v21 = v20;
        v22 = sub_2414B4FE4();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v24(v11, 1, 1, v22);
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = 0;
        v26 = v25 + 2;
        v25[3] = 0;
        v25[4] = v21;
        v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22);
        v28 = v21;
        if (v27 == 1)
        {
          sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_254384360);
          if (*v26)
            goto LABEL_13;
        }
        else
        {
          sub_2414B4FD8();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
          if (*v26)
          {
LABEL_13:
            swift_getObjectType();
            swift_unknownObjectRetain();
            v29 = sub_2414B4F90();
            v31 = v30;
            swift_unknownObjectRelease();
            if (v31 | v29)
            {
              v49 = 0;
              v50 = 0;
              v51 = v29;
              v52 = v31;
            }
          }
        }
        ++v19;
        swift_task_create();

        swift_release();
        v15 = v48;
        if (v47 == v19)
        {
          swift_bridgeObjectRelease();
          v32 = (uint64_t)v42;
          v24(v42, 1, 1, v22);
          sub_2414B4FC0();
          v33 = v44;
          swift_bridgeObjectRetain();
          v34 = v40;
          v35 = v41;
          swift_retain();
          v36 = sub_2414B4FB4();
          v37 = (_QWORD *)swift_allocObject();
          v38 = MEMORY[0x24BEE6930];
          v37[2] = v36;
          v37[3] = v38;
          v39 = v43;
          v37[4] = v35;
          v37[5] = v39;
          v37[6] = v33;
          v37[7] = v34;
          sub_2413EE440(v32, (uint64_t)&unk_257125248, (uint64_t)v37);
          swift_release();
          return swift_release();
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241392FC8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310430;
  return sub_24146F2D0();
}

uint64_t sub_241393010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_2414B2CA4();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  sub_2414B4FC0();
  v7[9] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413930A8()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _QWORD v13[3];

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = (double *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution + 16) & 1) == 0)
  {
    v4 = *v2;
    v3 = v2[1];
    if (qword_25437D278 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 24);
    v8 = *(_QWORD *)(v0 + 32);
    v10 = __swift_project_value_buffer(v7, (uint64_t)qword_25438E7D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v10, v7);
    sub_2414B5578();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v11 = sub_2414B5194();
    v13[0] = v9;
    v13[1] = v8;
    sub_2413E6A30(v11, 0, 0xE000000000000000, (uint64_t)v13);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_24146F550(v4, v3);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241393298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  sub_2414B4FC0();
  v7[9] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241393308()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher) = *(_QWORD *)(v0 + 48);
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher) = v4;
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher) = v3;
    swift_retain();
    swift_release();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413933DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = sub_2414B2CA4();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  sub_2414B4FC0();
  v8[17] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241393478()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _QWORD v16[2];

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v4 = *(void **)(v0 + 80);
    v3 = *(void **)(v0 + 88);
    swift_beginAccess();
    swift_retain();
    sub_241479CC8();
    swift_endAccess();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 64) = v4;
    v5 = v4;
    swift_retain();
    sub_2414B2E48();
    sub_24138FBF4();
    v6 = *(void **)(v2 + 16);
    *(_QWORD *)(v2 + 16) = v3;
    v7 = v3;
    sub_24138F9B8(v6);

    if (qword_25437D278 != -1)
      swift_once();
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 96);
    v13 = __swift_project_value_buffer(v10, (uint64_t)qword_25438E7D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v13, v10);
    v14 = sub_2414B51B8();
    v16[0] = v12;
    v16[1] = v11;
    sub_2413E6A30(v14, 0xD00000000000001BLL, 0x80000002414D0DB0, (uint64_t)v16);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_241393688();
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241393660(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    JUMPOUT(0x2426922D8);
  return 0;
}

void sub_241393688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  ValueMetadata *v38;
  unint64_t v39;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v33 - v6;
  v7 = sub_2414B2CA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (unsigned __int8 *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125130);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v1 + 16);
  if (v18)
  {
    v34 = v4;
    v19 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
    swift_beginAccess();
    sub_2412DC3FC(v19, (uint64_t)v17, &qword_257125130);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
    {
      sub_2412CBE78((uint64_t)v17, &qword_257125130);
    }
    else
    {
      sub_241395CC8((uint64_t)v17, (uint64_t)v14);
      v20 = v18;
      sub_2412CBE78((uint64_t)v17, &qword_257125130);
      v21 = *v14;
      sub_241395D0C((uint64_t)v14);
      if (v21 == 2)
      {
        swift_beginAccess();
        sub_241479CC8();
        swift_endAccess();
        if (qword_25437D278 != -1)
          swift_once();
        v22 = __swift_project_value_buffer(v7, (uint64_t)qword_25438E7D0);
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v22, v7);
        v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
        v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
        v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
        swift_bridgeObjectRetain();
        v26 = sub_2414B51B8();
        v36 = v24;
        v37 = v25;
        sub_2413E6A30(v26, 0x20676E696C6C6143, 0xEF2E2E2E79616C70, (uint64_t)&v36);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        objc_msgSend(v20, sel_play);
        v38 = &type metadata for MCUILoggingContext;
        v39 = sub_241395E24();
        v27 = v23[1];
        v36 = *v23;
        v37 = v27;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_2414795E0((uint64_t)&v36);
        swift_endAccess();
        sub_2412CBE78((uint64_t)&v36, &qword_25712ADD0);
        v28 = (uint64_t)v35;
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) == 1)
        {
          sub_2414B2AE8();

          v29 = sub_2414B2B00();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
        }
        else
        {

          v30 = sub_2414B2B00();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 1, 1, v30);
        }
        v31 = (uint64_t)v34;
        sub_2412EAEA4(v28, (uint64_t)v34, &qword_2571264F0);
        v32 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate;
        swift_beginAccess();
        sub_241395E68(v31, v32, &qword_2571264F0);
        swift_endAccess();
      }
      else
      {

      }
    }
  }
}

uint64_t sub_241393AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  os_log_type_t v58;
  _QWORD v60[6];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  unint64_t v77;

  v74 = a1;
  v63 = a3;
  v64 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v7);
  v60[3] = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v9);
  v60[5] = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_2414B2B00();
  v60[4] = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60[1] = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v60[2] = (char *)v60 - v13;
  v69 = sub_2414B2CA4();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125128);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125130);
  MEMORY[0x24BDAC7A8](v18);
  v66 = (uint64_t)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v65 = (uint64_t)v60 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (unsigned __int8 *)v60 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v60 - v26;
  v28 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (unsigned __int8 *)v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v60 - v33;
  v72 = *a5;
  v70 = a5[1];
  v36 = (char *)v60 + *(int *)(v35 + 20) - v33;
  v37 = sub_2414B2A88();
  v38 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v62 = a2;
  v38(v36, a2, v37);
  v39 = v73;
  *v34 = v74;
  v40 = v39 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
  swift_beginAccess();
  v71 = v34;
  sub_241395CC8((uint64_t)v34, (uint64_t)v27);
  v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
  v41(v27, 0, 1, v28);
  v42 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_2412DC3FC(v40, (uint64_t)v17, &qword_257125130);
  sub_2412DC3FC((uint64_t)v27, v42, &qword_257125130);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v43((uint64_t)v17, 1, v28) != 1)
  {
    sub_2412DC3FC((uint64_t)v17, (uint64_t)v24, &qword_257125130);
    if (v43(v42, 1, v28) == 1)
    {
      v45 = &qword_257125128;
    }
    else
    {
      sub_241395DE0(v42, (uint64_t)v31);
      if (*v24 == *v31)
      {
        v46 = MEMORY[0x2426922D8](&v24[*(int *)(v28 + 20)], &v31[*(int *)(v28 + 20)]);
        sub_241395D0C((uint64_t)v31);
        sub_2412CBE78((uint64_t)v27, &qword_257125130);
        sub_241395D0C((uint64_t)v24);
        sub_2412CBE78((uint64_t)v17, &qword_257125130);
        v47 = v70;
        v44 = (uint64_t)v71;
        if ((v46 & 1) != 0)
          return sub_241395D0C(v44);
LABEL_13:
        v48 = v65;
        sub_241395CC8(v44, v65);
        v41((char *)v48, 0, 1, v28);
        v49 = v48;
        v50 = v66;
        sub_2412EAEA4(v49, v66, &qword_257125130);
        swift_beginAccess();
        sub_241395E68(v50, v40, &qword_257125130);
        swift_endAccess();
        if (qword_25437D278 != -1)
          swift_once();
        v51 = v69;
        v52 = __swift_project_value_buffer(v69, (uint64_t)qword_25438E7D0);
        v54 = v67;
        v53 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v68, v52, v51);
        v76 = 0;
        v77 = 0xE000000000000000;
        sub_2414B5578();
        swift_bridgeObjectRelease();
        v76 = 0xD000000000000013;
        v77 = 0x80000002414D0AC0;
        v55 = v74;
        v75 = v74;
        sub_2414B4D8C();
        sub_2414B4DF8();
        swift_bridgeObjectRelease();
        v56 = v76;
        v57 = v77;
        v58 = sub_2414B51B8();
        v76 = v72;
        v77 = v47;
        sub_2413E6A30(v58, v56, v57, (uint64_t)&v76);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v51);
        __asm { BR              X10 }
      }
      sub_241395D0C((uint64_t)v31);
      v45 = &qword_257125130;
    }
    v44 = (uint64_t)v71;
    sub_2412CBE78((uint64_t)v27, &qword_257125130);
    sub_241395D0C((uint64_t)v24);
LABEL_12:
    sub_2412CBE78((uint64_t)v17, v45);
    v47 = v70;
    goto LABEL_13;
  }
  sub_2412CBE78((uint64_t)v27, &qword_257125130);
  if (v43(v42, 1, v28) != 1)
  {
    v45 = &qword_257125128;
    v44 = (uint64_t)v71;
    goto LABEL_12;
  }
  sub_2412CBE78((uint64_t)v17, &qword_257125130);
  v44 = (uint64_t)v71;
  return sub_241395D0C(v44);
}

void sub_241394310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double *v6;
  double v7;
  double v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  _QWORD v16[5];
  unint64_t v17;
  unint64_t v18;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (double *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution + 16) & 1) == 0)
  {
    v8 = *v6;
    v7 = v6[1];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    v9 = (void *)v17;
    if (v17)
    {
      sub_24146F550(v8, v7);

    }
    if (qword_25437D278 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v2, (uint64_t)qword_25438E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v17 = 0xD000000000000020;
    v18 = 0x80000002414D0B70;
    v16[3] = 540702524;
    v16[4] = 0xE400000000000000;
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v11 = v17;
    v12 = v18;
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    swift_bridgeObjectRetain();
    v15 = sub_2414B51B8();
    v17 = v14;
    v18 = v13;
    sub_2413E6A30(v15, v11, v12, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_2413948D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_2414B5050();
    v6 = sub_2414B2A88();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_241395E68((uint64_t)v5, v7, &qword_2543844C0);
    swift_endAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    v11[1] = 0;
    swift_retain();
    sub_2414B2E48();
    sub_24138FBF4();
    v8 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = 0;
    sub_24138F9B8(v8);

    v9 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 1;
    v10 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0;
    *(_BYTE *)(v10 + 16) = 1;
    sub_241394310();
    swift_release();
  }
}

void sub_241394A5C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  id v34;
  __int128 v35;
  os_log_type_t v36;
  os_log_type_t v37;
  _QWORD v38[2];
  _QWORD *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t);
  id v42;
  __int128 v43;
  __int128 v44;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus) != a1)
  {
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    if (a1 < 2)
    {
      v14 = qword_25437D278;
      swift_bridgeObjectRetain();
      if (v14 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E7D0);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
      *(_QWORD *)&v43 = 0;
      *((_QWORD *)&v43 + 1) = 0xE000000000000000;
      sub_2414B5578();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v43 = 0xD00000000000001FLL;
      *((_QWORD *)&v43 + 1) = 0x80000002414D0AA0;
      AVPlayerLooperStatus.description.getter(*(_QWORD *)(v2 + v8));
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      sub_2414B4DF8();
      AVPlayerLooperStatus.description.getter(a1);
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      sub_2414B4DF8();
      v17 = *((_QWORD *)&v43 + 1);
      v16 = v43;
      v18 = sub_2414B51B8();
LABEL_23:
      *(_QWORD *)&v43 = v10;
      *((_QWORD *)&v43 + 1) = v9;
      sub_2413E6A30(v18, v16, v17, (uint64_t)&v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
LABEL_28:
      *(_QWORD *)(v2 + v8) = a1;
      return;
    }
    if (a1 != 2)
    {
      if (a1 == 3)
      {
        v11 = qword_25437D278;
        swift_bridgeObjectRetain();
        if (v11 != -1)
          swift_once();
        v12 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E7D0);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
        v13 = sub_2414B51A0();
        *(_QWORD *)&v43 = v10;
        *((_QWORD *)&v43 + 1) = v9;
        sub_2413E6A30(v13, 0xD000000000000010, 0x80000002414D0A20, (uint64_t)&v43);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_bridgeObjectRelease();
        sub_24138FDC0();
        goto LABEL_28;
      }
      v31 = qword_25437D278;
      swift_bridgeObjectRetain();
      if (v31 != -1)
        swift_once();
      v32 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E7D0);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v32, v4);
      *(_QWORD *)&v43 = 0;
      *((_QWORD *)&v43 + 1) = 0xE000000000000000;
      sub_2414B5578();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v43 = 0xD000000000000029;
      *((_QWORD *)&v43 + 1) = 0x80000002414D09F0;
      AVPlayerLooperStatus.description.getter(a1);
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      v17 = *((_QWORD *)&v43 + 1);
      v16 = v43;
      v18 = sub_2414B51AC();
      goto LABEL_23;
    }
    v19 = qword_25437D278;
    swift_bridgeObjectRetain();
    if (v19 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E7D0);
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v40(v7, v20, v4);
    v21 = sub_2414B51A0();
    *(_QWORD *)&v43 = v10;
    *((_QWORD *)&v43 + 1) = v9;
    sub_2413E6A30(v21, 0x66207265706F6F4CLL, 0xEE002E64656C6961, (uint64_t)&v43);
    v41 = *(void (**)(char *, uint64_t))(v5 + 8);
    v41(v7, v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    v22 = (void *)v43;
    if ((_QWORD)v43
      && (v23 = objc_msgSend((id)v43, sel_error), v22, v23)
      && (*(_QWORD *)&v43 = v23,
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990),
          sub_2412CC884(0, (unint64_t *)&qword_257127320),
          (swift_dynamicCast() & 1) != 0)
      && (v24 = v42) != 0)
    {
      v25 = objc_msgSend(v42, sel_userInfo);
      v39 = (_QWORD *)sub_2414B4C0C();

      v26 = v39;
      v27 = sub_2414B4D68();
      if (v26[2])
      {
        v38[1] = v28;
        v29 = sub_2412CD2DC(v27, v28);
        if ((v30 & 1) != 0)
        {
          sub_2412E4960(v26[7] + 32 * v29, (uint64_t)&v43);
        }
        else
        {
          v43 = 0u;
          v44 = 0u;
        }
      }
      else
      {
        v43 = 0u;
        v44 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v44 + 1))
      {
        type metadata accessor for AVError(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v39 = v42;
          sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
          sub_2414B2998();

          v33 = v40;
          if ((unint64_t)(v43 + 11819) < 2)
          {
            v40(v7, v20, v4);
            v37 = sub_2414B51B8();
            *(_QWORD *)&v43 = v10;
            *((_QWORD *)&v43 + 1) = v9;
            sub_2413E6A30(v37, 0xD00000000000003ALL, 0x80000002414D0A60, (uint64_t)&v43);

            v41(v7, v4);
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_27;
        }
LABEL_26:
        v33 = v40;
LABEL_27:
        v33(v7, v20, v4);
        *(_QWORD *)&v43 = 0;
        *((_QWORD *)&v43 + 1) = 0xE000000000000000;
        sub_2414B5578();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v43 = 0xD00000000000001ALL;
        *((_QWORD *)&v43 + 1) = 0x80000002414D0A40;
        v42 = v24;
        v34 = v24;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257125120);
        sub_2414B4D8C();
        sub_2414B4DF8();
        swift_bridgeObjectRelease();
        v35 = v43;
        v36 = sub_2414B51A0();
        *(_QWORD *)&v43 = v10;
        *((_QWORD *)&v43 + 1) = v9;
        sub_2413E6A30(v36, v35, *((unint64_t *)&v35 + 1), (uint64_t)&v43);
        swift_bridgeObjectRelease();
        v41(v7, v4);
        swift_bridgeObjectRelease();
        sub_24138FDC0();

        goto LABEL_28;
      }
    }
    else
    {
      v24 = 0;
      v43 = 0u;
      v44 = 0u;
    }
    sub_2412CBE78((uint64_t)&v43, &qword_25437D280);
    goto LABEL_26;
  }
}

unint64_t AVPlayerLooperStatus.description.getter(uint64_t a1)
{
  return sub_2413951A0(a1);
}

unint64_t sub_24139518C()
{
  uint64_t *v0;

  return AVPlayerLooperStatus.description.getter(*v0);
}

unint64_t MPCScriptedLooperStatus.description.getter(uint64_t a1)
{
  return sub_2413951A0(a1);
}

unint64_t sub_2413951A0(uint64_t a1)
{
  unint64_t result;

  result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x7964616572;
      break;
    case 2:
      result = 0x64656C696166;
      break;
    case 3:
      result = 0x656C6C65636E6163;
      break;
    default:
      sub_2414B5578();
      swift_bridgeObjectRelease();
      MEMORY[0xE700000000000000](a1);
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      result = 0xD000000000000011;
      break;
  }
  return result;
}

uint64_t sub_2413952A0()
{
  return type metadata accessor for LooperConfigurator(0);
}

uint64_t type metadata accessor for LooperConfigurator(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_257124CE0);
}

void sub_2413952BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_24139544C(319, &qword_257124CF0, &qword_257124CF8);
  if (v0 <= 0x3F)
  {
    sub_24139544C(319, &qword_257124D00, &qword_257124D08);
    if (v1 <= 0x3F)
    {
      sub_2413954AC(319, qword_257124D10, (void (*)(uint64_t))type metadata accessor for LooperConfigurator.CommandExecution);
      if (v2 <= 0x3F)
      {
        sub_2413954AC(319, &qword_25437D288, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
        if (v3 <= 0x3F)
        {
          sub_2413954AC(319, (unint64_t *)&qword_2571255E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_24139544C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_2414B2E54();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for LooperConfigurator.CommandExecution(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_2571250D8);
}

void sub_2413954AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2414B53B0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *sub_2413954F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2414B2A88();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_241395580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_2414B2A88();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_2413955B8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2414B2A88();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_241395614(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2414B2A88();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_241395670(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2414B2A88();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_2413956CC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2414B2A88();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_241395728()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241395734(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 252)
  {
    v4 = *a1;
    if (v4 >= 4)
      return v4 - 3;
    else
      return 0;
  }
  else
  {
    v8 = sub_2414B2A88();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2413957A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2413957B4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    v7 = sub_2414B2A88();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_241395824()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2A88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LooperConfigurator.LooperError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2413958E4 + 4 * byte_2414BFB2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241395918 + 4 * byte_2414BFB28[v4]))();
}

uint64_t sub_241395918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241395920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241395928);
  return result;
}

uint64_t sub_241395934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24139593CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241395940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241395948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LooperConfigurator.LooperError()
{
  return &type metadata for LooperConfigurator.LooperError;
}

uint64_t getEnumTagSinglePayload for MotionPlaybackCommand(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionPlaybackCommand(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_241395A40 + 4 * byte_2414BFB37[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241395A74 + 4 * byte_2414BFB32[v4]))();
}

uint64_t sub_241395A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241395A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241395A84);
  return result;
}

uint64_t sub_241395A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241395A98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_241395A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241395AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackCommand()
{
  return &type metadata for MotionPlaybackCommand;
}

unint64_t sub_241395AC4()
{
  unint64_t result;

  result = qword_257125110;
  if (!qword_257125110)
  {
    result = MEMORY[0x242695AE8](&unk_2414BFCD8, &type metadata for MotionPlaybackCommand);
    atomic_store(result, (unint64_t *)&qword_257125110);
  }
  return result;
}

unint64_t sub_241395B0C()
{
  unint64_t result;

  result = qword_257125118;
  if (!qword_257125118)
  {
    result = MEMORY[0x242695AE8](&unk_2414BFD80, &type metadata for LooperConfigurator.LooperError);
    atomic_store(result, (unint64_t *)&qword_257125118);
  }
  return result;
}

uint64_t sub_241395B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_241395BCC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  sub_2414B2E48();
  sub_24138FBF4();
}

uint64_t sub_241395C44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241395CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241395D0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241395D48()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241395D6C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  _QWORD *v3;

  v2 = *(double *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310430;
  return sub_241428608(v2);
}

uint64_t sub_241395DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241395E24()
{
  unint64_t result;

  result = qword_257125148;
  if (!qword_257125148)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MCUILoggingContext, &type metadata for MCUILoggingContext);
    atomic_store(result, (unint64_t *)&qword_257125148);
  }
  return result;
}

uint64_t sub_241395E68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_241395EAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241395ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2A88();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241395F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  _QWORD *v15;

  v3 = *(_QWORD *)(sub_2414B2A88() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = *(_BYTE *)(v1 + 56);
  v11 = v1 + v4;
  v12 = (double *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  v13 = *v12;
  v14 = v12[1];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_241310C28;
  return sub_241390850(v13, v14, a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_241396070()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241396078(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_241392588(a1, v4, v5, v6);
}

char *keypath_get_selector_status()
{
  return sel_status;
}

id sub_2413960F0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_status);
  *a2 = result;
  return result;
}

uint64_t sub_241396120(uint64_t *a1)
{
  return sub_241392660(a1);
}

id sub_241396128@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_timeControlStatus);
  *a2 = result;
  return result;
}

uint64_t sub_241396158()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_24139617C(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  sub_2413928E8(a1, v2, a2);
}

uint64_t sub_241396184()
{
  return sub_241392974();
}

char *keypath_get_selector_loopingPlayerItems()
{
  return sel_loopingPlayerItems;
}

unint64_t sub_24139619C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2571251E8;
  if (!qword_2571251E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571251F0);
    v2 = sub_241363A3C(&qword_257124090, (unint64_t *)&qword_257124078, 0x24BDB2618, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571251E8);
  }
  return result;
}

uint64_t sub_241396220()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_241396254(unint64_t *a1)
{
  uint64_t v1;

  return sub_241392C4C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_241396260()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413962A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_241310C28;
  return sub_241393298(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_241396330()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241396374(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_241310C28;
  return sub_2413933DC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_241396408()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24139643C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_241310C28;
  return sub_2413923D4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2413964BC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2413964E8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310430;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_241310430;
  return sub_24146F2D0();
}

uint64_t sub_241396550()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24139658C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_241310C28;
  return sub_241393010(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_241396618()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241396620(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_241392AB4(a1, v4, v5, v6);
}

uint64_t sub_24139668C()
{
  return objectdestroy_49Tm_0();
}

uint64_t sub_241396694(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_241310C28;
  return sub_2413927B0(a1, v4, v5, v7, v6);
}

uint64_t sub_241396710()
{
  return sub_24138FDC0();
}

unint64_t sub_241396734()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257125298;
  if (!qword_257125298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123B60);
    v2 = sub_241363A3C(&qword_2571252A0, &qword_257125140, 0x24BDB2670, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257125298);
  }
  return result;
}

uint64_t sub_2413967B8()
{
  return sub_24138F418();
}

double sub_2413967C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  _s17TransportControlsCMa();
  sub_2412F0B40((unint64_t *)&qword_25437EDE0, v2, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  *(_QWORD *)a1 = sub_2414B33C4();
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = sub_2414B3658();
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = swift_getKeyPath();
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_24139686C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t result;
  double v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  _QWORD v56[3];
  char *v57;
  double v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78[2];
  char v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  _QWORD v82[2];
  _QWORD v83[2];
  _OWORD v84[2];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[5];
  _OWORD v89[2];
  _OWORD v90[3];
  _OWORD v91[3];

  v77 = a2;
  v4 = sub_2414B346C();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B3484();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EB0);
  v8 = *(_QWORD *)(a1 + 24);
  v65 = *(_QWORD *)(a1 + 16);
  v70 = v8;
  _s21CenterTransportButtonVMa(255, v65, v8, v9);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v10 = sub_2414B4B1C();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v10);
  v62 = v10;
  v56[0] = v11;
  v12 = sub_2414B4804();
  v66 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)v56 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v14 = sub_2414B3514();
  v68 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v63 = (char *)v56 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381260);
  v16 = sub_2414B3514();
  v69 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v67 = (char *)v56 - v18;
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v12, v17);
  v20 = MEMORY[0x24BDF1028];
  v21 = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
  v56[1] = v19;
  v83[0] = v19;
  v83[1] = v21;
  v22 = MEMORY[0x24BDED308];
  v64 = v14;
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v83);
  v24 = sub_2412C8FC4(&qword_254381258, &qword_254381260, v20);
  v56[2] = v23;
  v82[0] = v23;
  v82[1] = v24;
  v25 = MEMORY[0x242695AE8](v22, v16, v82);
  *(_QWORD *)&v84[0] = v16;
  *((_QWORD *)&v84[0] + 1) = v25;
  v26 = MEMORY[0x242695A94](0, v84, MEMORY[0x24BDF27E8], 0);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v57 = (char *)v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v56 - v30;
  *(_OWORD *)((char *)v88 + 10) = *(_OWORD *)((char *)v2 + 90);
  v32 = v2[5];
  v87 = v2[4];
  v88[0] = v32;
  v33 = v2[3];
  v85 = v2[2];
  v86 = v33;
  v34 = v2[1];
  v84[0] = *v2;
  v84[1] = v34;
  *(_OWORD *)((char *)v91 + 10) = *(_OWORD *)((char *)v88 + 10);
  v90[2] = v87;
  v91[0] = v32;
  v90[0] = v85;
  v90[1] = v33;
  *(_OWORD *)((char *)v89 + 10) = *(_OWORD *)((char *)v88 + 10);
  v88[4] = v87;
  v89[0] = v32;
  v88[2] = v85;
  v88[3] = v33;
  sub_2412FD220((uint64_t)v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v78);
  result = sub_2412FD220((uint64_t)v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v59 = v31;
  v60 = v27;
  v58 = *(double *)&v25;
  if (v81)
  {
    v36 = 68.0;
    v37 = v65;
    v38 = v70;
  }
  else
  {
    if ((v79 & 1) != 0)
    {
      __break(1u);
      return result;
    }
    v36 = 30.0;
    v37 = v65;
    v38 = v70;
    if (v78[0] >= 375.0)
      v36 = 48.0;
  }
  if (v81 | v80)
    v39 = 1;
  else
    v39 = v80 == 9;
  if (v39)
    v40 = 40.0;
  else
    v40 = 32.0;
  v41 = sub_2414B3880();
  MEMORY[0x24BDAC7A8](v41);
  v56[-6] = v37;
  v56[-5] = v38;
  v56[-4] = v84;
  *(double *)&v56[-3] = v36;
  *(double *)&v56[-2] = v40;
  v42 = v61;
  sub_2414B47F8();
  swift_getKeyPath();
  v44 = v71;
  v43 = v72;
  v45 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, *MEMORY[0x24BDED100], v73);
  v46 = v63;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v12);
  swift_getKeyPath();
  LOBYTE(v78[0]) = 1;
  v47 = v67;
  v48 = v64;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v48);
  v50 = v74;
  v49 = v75;
  v51 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, *MEMORY[0x24BDECF00], v76);
  v53 = (uint64_t)v57;
  v52 = v58;
  sub_2414B42AC();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v16);
  *(_QWORD *)&v78[0] = v16;
  v78[1] = v52;
  swift_getOpaqueTypeConformance2();
  v54 = (uint64_t)v59;
  sub_2412FBF34(v53, v26, (uint64_t)v59);
  v55 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v55(v53, v26);
  sub_2412EEA1C(v54, v26, v77);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v26);
}

uint64_t sub_241396ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _BYTE *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE v108[12];
  int v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD v136[2];
  _QWORD v137[2];
  __int128 v138;
  __int128 v139;
  _OWORD v140[2];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _OWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  __int128 v148;
  __int128 v149;
  _OWORD v150[2];
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _OWORD v155[2];
  __int128 v156;
  __int128 v157;
  _OWORD v158[2];
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _OWORD v163[2];
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  _BYTE v169[32];

  v122 = a5;
  v132 = a2;
  *(_QWORD *)&v113 = _s21CenterTransportButtonVMa(255, a2, a3, a4);
  *(_QWORD *)&v114 = sub_2414B3514();
  v116 = sub_2414B3514();
  v7 = sub_2414B3514();
  sub_2414B3DB4();
  v117 = v7;
  v131 = sub_2414B3514();
  v128 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v130 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v129 = &v108[-v10];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384190);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v108[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383EA8);
  v115 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v16 = &v108[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383EB0);
  MEMORY[0x24BDAC7A8](v118);
  v120 = &v108[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v121 = &v108[-v19];
  MEMORY[0x24BDAC7A8](v20);
  v119 = &v108[-v21];
  MEMORY[0x24BDAC7A8](v22);
  v24 = &v108[-v23];
  v25 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  v26 = *(unsigned __int8 *)(v25 + 32);
  v125 = v12;
  v126 = v24;
  v111 = v11;
  v123 = v16;
  v124 = v14;
  if (v26 == 255)
  {
    v52 = 1;
  }
  else
  {
    v28 = *(_QWORD *)(v25 + 16);
    *(_QWORD *)&v112 = *(_QWORD *)(v25 + 24);
    v27 = v112;
    *((_QWORD *)&v149 + 1) = &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration;
    *(_QWORD *)&v150[0] = sub_241398B54();
    *(_QWORD *)&v148 = v28;
    *((_QWORD *)&v148 + 1) = v27;
    LOBYTE(v149) = v26 & 1;
    swift_beginAccess();
    v109 = *(unsigned __int8 *)(v25 + 57);
    v29 = swift_allocObject();
    v30 = v132;
    *(_QWORD *)(v29 + 16) = v132;
    *(_QWORD *)(v29 + 24) = a3;
    v31 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v29 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v29 + 112) = v31;
    *(_OWORD *)(v29 + 122) = *(_OWORD *)(a1 + 90);
    v32 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v29 + 48) = v32;
    v33 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v29 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v29 + 80) = v33;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v30;
    *(_QWORD *)(v34 + 24) = a3;
    v35 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v34 + 112) = v35;
    *(_OWORD *)(v34 + 122) = *(_OWORD *)(a1 + 90);
    v36 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v34 + 48) = v36;
    v37 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v34 + 80) = v37;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v30;
    *(_QWORD *)(v38 + 24) = a3;
    v39 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v38 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v38 + 112) = v39;
    *(_OWORD *)(v38 + 122) = *(_OWORD *)(a1 + 90);
    v40 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v38 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v38 + 48) = v40;
    v41 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v38 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v38 + 80) = v41;
    sub_2412FAA04(&v148, (uint64_t)&v156);
    BYTE8(v158[0]) = v109;
    *(_QWORD *)&v158[1] = sub_24139A9D8;
    *((_QWORD *)&v158[1] + 1) = v29;
    *(_QWORD *)&v159 = sub_241398BC8;
    *((_QWORD *)&v159 + 1) = v34;
    *(_QWORD *)&v160 = sub_241398BF0;
    *((_QWORD *)&v160 + 1) = v38;
    sub_241303CFC((uint64_t)&v156, (uint64_t)&v148);
    *(_QWORD *)&v153 = 0x3FF0000000000000;
    WORD4(v153) = 0;
    sub_24139A928(a1);
    sub_24139A928(a1);
    sub_24139A928(a1);
    sub_2412FAA1C(v28, v112, v26);
    sub_241303CD0(&v156);
    v42 = sub_2414B3EC8();
    KeyPath = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)&v148, (uint64_t)&v156, &qword_254380BF0);
    *(_QWORD *)&v162 = KeyPath;
    *((_QWORD *)&v162 + 1) = v42;
    sub_2412CBE78((uint64_t)&v148, &qword_254380BF0);
    sub_2414B3EEC();
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F20);
    v45 = sub_24139A874();
    v46 = v124;
    sub_2414B4144();
    sub_2412CBE78((uint64_t)&v156, &qword_254383F20);
    v47 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v48 = sub_2412F6E9C();
    v50 = v49;

    *(_QWORD *)&v156 = v48;
    *((_QWORD *)&v156 + 1) = v50;
    sub_2414B4DF8();
    sub_2414B4DF8();
    *(_QWORD *)&v156 = v44;
    *((_QWORD *)&v156 + 1) = v45;
    v24 = v126;
    swift_getOpaqueTypeConformance2();
    v51 = (uint64_t)v123;
    sub_2414B4408();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v125 + 8))(v46, v11);
    sub_2412EAEA4(v51, (uint64_t)v24, &qword_254383EA8);
    v52 = 0;
  }
  v110 = a3;
  v115 = *(_QWORD *)(v115 + 56);
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v115)(v24, v52, 1, v127);
  swift_retain();
  v53 = sub_2414B3658();
  v55 = v54;
  _s17TransportControlsCMa();
  sub_2412F0B40((unint64_t *)&qword_25437EDE0, v56, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  v57 = sub_2414B33C4();
  *(_QWORD *)&v164 = v53;
  *((_QWORD *)&v164 + 1) = v55;
  *(_QWORD *)&v165 = v57;
  *((_QWORD *)&v165 + 1) = v58;
  v166 = xmmword_2414BFF20;
  sub_2412EAEA4((uint64_t)&v166, (uint64_t)v169, &qword_2543844E0);
  v167 = v164;
  v168 = v165;
  v156 = v164;
  v157 = v165;
  v158[0] = v166;
  v59 = MEMORY[0x242695AE8](&unk_2414C0308, v113);
  sub_2414B418C();
  sub_2412FAA5C((uint64_t)&v167);
  sub_2412FAA84((uint64_t)&v168);
  sub_2412FAA34((uint64_t)v169);
  v112 = v148;
  v138 = v148;
  v139 = v149;
  *(_QWORD *)&v140[0] = *(_QWORD *)&v150[0];
  v113 = *(_OWORD *)((char *)v150 + 8);
  *(_OWORD *)((char *)v140 + 8) = *(_OWORD *)((char *)v150 + 8);
  WORD4(v140[1]) = WORD4(v150[1]);
  sub_2414B4A44();
  v147[0] = v59;
  v147[1] = MEMORY[0x24BDEEC40];
  v60 = MEMORY[0x24BDED308];
  v61 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v114, v147);
  sub_2414B44A4();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v113 = v156;
  v138 = v156;
  v139 = v157;
  *(_QWORD *)&v140[0] = *(_QWORD *)&v158[0];
  v114 = *(_OWORD *)((char *)v158 + 8);
  *(_OWORD *)((char *)v140 + 8) = *(_OWORD *)((char *)v158 + 8);
  WORD4(v140[1]) = WORD4(v158[1]);
  *(_QWORD *)&v141 = v159;
  BYTE8(v141) = BYTE8(v159);
  *(_QWORD *)&v142 = v160;
  BYTE8(v142) = BYTE8(v160);
  v143 = v161;
  sub_2414B3E38();
  v146[0] = v61;
  v146[1] = MEMORY[0x24BDEBEE0];
  v62 = MEMORY[0x242695AE8](v60, v116, v146);
  sub_2414B4528();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v161 = v153;
  v162 = v154;
  v163[0] = v155[0];
  *(_OWORD *)((char *)v163 + 9) = *(_OWORD *)((char *)v155 + 9);
  v158[0] = v150[0];
  v158[1] = v150[1];
  v159 = v151;
  v160 = v152;
  v156 = v148;
  v157 = v149;
  v143 = v153;
  v144 = v154;
  v145[0] = v155[0];
  *(_OWORD *)((char *)v145 + 9) = *(_OWORD *)((char *)v155 + 9);
  v140[0] = v150[0];
  v140[1] = v150[1];
  v141 = v151;
  v142 = v152;
  v138 = v148;
  v139 = v149;
  v137[0] = v62;
  v137[1] = MEMORY[0x24BDECC60];
  v63 = MEMORY[0x242695AE8](v60, v117, v137);
  v64 = (uint64_t)v130;
  sub_2412F6DCC();
  sub_24139A77C((uint64_t)&v156);
  v65 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v136[0] = v63;
  v136[1] = v65;
  v66 = v131;
  v117 = MEMORY[0x242695AE8](v60, v131, v136);
  sub_2412FBF34(v64, v66, (uint64_t)v129);
  v67 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
  v67(v64, v66);
  v68 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  v69 = *(unsigned __int8 *)(v68 + 56);
  if (v69 == 255)
  {
    v99 = v119;
    v100 = 1;
  }
  else
  {
    v71 = *(_QWORD *)(v68 + 40);
    v116 = *(_QWORD *)(v68 + 48);
    v70 = v116;
    *((_QWORD *)&v139 + 1) = &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration;
    *(_QWORD *)&v140[0] = sub_2413033FC();
    *(_QWORD *)&v138 = v71;
    *((_QWORD *)&v138 + 1) = v70;
    LOBYTE(v139) = v69 & 1;
    v72 = *(_QWORD *)(a1 + 8);
    swift_beginAccess();
    LODWORD(v114) = *(unsigned __int8 *)(v72 + 57);
    v73 = swift_allocObject();
    v74 = v67;
    v75 = v132;
    v76 = v110;
    *(_QWORD *)(v73 + 16) = v132;
    *(_QWORD *)(v73 + 24) = v76;
    v77 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v73 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v73 + 112) = v77;
    *(_OWORD *)(v73 + 122) = *(_OWORD *)(a1 + 90);
    v78 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v73 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v73 + 48) = v78;
    v79 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v73 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v73 + 80) = v79;
    v80 = swift_allocObject();
    *(_QWORD *)(v80 + 16) = v75;
    *(_QWORD *)(v80 + 24) = v76;
    v81 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v80 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v80 + 112) = v81;
    *(_OWORD *)(v80 + 122) = *(_OWORD *)(a1 + 90);
    v82 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v80 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v80 + 48) = v82;
    v83 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v80 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v80 + 80) = v83;
    v84 = swift_allocObject();
    *(_QWORD *)(v84 + 16) = v75;
    *(_QWORD *)(v84 + 24) = v76;
    v67 = v74;
    v85 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v84 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v84 + 112) = v85;
    *(_OWORD *)(v84 + 122) = *(_OWORD *)(a1 + 90);
    v86 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v84 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v84 + 48) = v86;
    v87 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v84 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v84 + 80) = v87;
    sub_2412FAA04(&v138, (uint64_t)&v148);
    BYTE8(v150[0]) = v114;
    *(_QWORD *)&v150[1] = sub_24139A8FC;
    *((_QWORD *)&v150[1] + 1) = v73;
    *(_QWORD *)&v151 = sub_241398B04;
    *((_QWORD *)&v151 + 1) = v80;
    *(_QWORD *)&v152 = sub_241398B2C;
    *((_QWORD *)&v152 + 1) = v84;
    sub_241303CFC((uint64_t)&v148, (uint64_t)&v138);
    *(_QWORD *)&v143 = 0x3FF0000000000000;
    WORD4(v143) = 0;
    sub_24139A928(a1);
    sub_24139A928(a1);
    sub_24139A928(a1);
    sub_2412FAA1C(v71, v116, v69);
    sub_241303CD0(&v148);
    v88 = sub_2414B3EC8();
    v89 = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)&v138, (uint64_t)&v148, &qword_254380BF0);
    *(_QWORD *)&v154 = v89;
    *((_QWORD *)&v154 + 1) = v88;
    sub_2412CBE78((uint64_t)&v138, &qword_254380BF0);
    sub_2414B3EEC();
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F20);
    v91 = sub_24139A874();
    v92 = v124;
    sub_2414B4144();
    sub_2412CBE78((uint64_t)&v148, &qword_254383F20);
    v93 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v94 = sub_2412F6E9C();
    v96 = v95;

    *(_QWORD *)&v148 = v94;
    *((_QWORD *)&v148 + 1) = v96;
    sub_2414B4DF8();
    sub_2414B4DF8();
    *(_QWORD *)&v148 = v90;
    *((_QWORD *)&v148 + 1) = v91;
    swift_getOpaqueTypeConformance2();
    v97 = (uint64_t)v123;
    v98 = v111;
    sub_2414B4408();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v125 + 8))(v92, v98);
    v99 = v119;
    sub_2412EAEA4(v97, (uint64_t)v119, &qword_254383EA8);
    v100 = 0;
  }
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v115)(v99, v100, 1, v127);
  v101 = (uint64_t)v126;
  v102 = v121;
  sub_2412DC3FC((uint64_t)v126, (uint64_t)v121, &qword_254383EB0);
  *(_QWORD *)&v148 = v102;
  v103 = v129;
  v105 = v130;
  v104 = v131;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v128 + 16))(v130, v129, v131);
  *((_QWORD *)&v148 + 1) = v105;
  v106 = v120;
  sub_2412DC3FC((uint64_t)v99, (uint64_t)v120, &qword_254383EB0);
  *(_QWORD *)&v149 = v106;
  *(_QWORD *)&v138 = v118;
  *((_QWORD *)&v138 + 1) = v104;
  *(_QWORD *)&v139 = v118;
  v133 = sub_2412C8620(&qword_254383EB8, &qword_254383EB0, (uint64_t (*)(void))sub_24139A7C4, MEMORY[0x24BDF5578]);
  v134 = v117;
  v135 = v133;
  sub_2412F68CC((uint64_t *)&v148, 3uLL, (uint64_t)&v138);
  sub_2412CBE78((uint64_t)v99, &qword_254383EB0);
  v67((uint64_t)v103, v104);
  sub_2412CBE78(v101, &qword_254383EB0);
  sub_2412CBE78((uint64_t)v106, &qword_254383EB0);
  v67((uint64_t)v105, v104);
  return sub_2412CBE78((uint64_t)v102, &qword_254383EB0);
}

uint64_t sub_241397C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD, uint64_t, uint64_t);

  sub_2412C84FC(*(_QWORD *)(a1 + 16));
  v5 = *(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 232);
  swift_unknownObjectRetain();
  v5(0, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_241397CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  sub_2412C84FC(*(_QWORD *)(a1 + 16));
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 232);
  swift_unknownObjectRetain();
  v7(a4, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_241397D5C()
{
  sub_2414B4AC8();
  sub_2414B3328();
  return swift_release();
}

uint64_t sub_241397DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD, uint64_t, uint64_t);

  sub_2412C84FC(*(_QWORD *)(a1 + 16));
  v5 = *(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 240);
  swift_unknownObjectRetain();
  v5(0, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_241397E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  sub_2412C84FC(*(_QWORD *)(a1 + 16));
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 240);
  swift_unknownObjectRetain();
  v7(a4, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_241397E8C()
{
  unsigned __int8 v1;

  sub_2412C83B0();
  sub_2414B3838();
  return v1;
}

uint64_t sub_241397EC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s21CenterTransportButtonVMa(0, a2, a3, a4);
  sub_2412C84FC(*a1);
  swift_unknownObjectRetain();
  sub_24143EE34(a2, a3);
  return swift_unknownObjectRelease();
}

double sub_241397F2C(uint64_t a1)
{
  __asm { FMOV            V0.2D, #26.0 }
  return sub_2412CA0B4(_Q0, a1, (__n128 *)&qword_254381700, &qword_254381710, &qword_254381718);
}

uint64_t sub_241397F44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_2412FAA1C(v3, v4, v5);
}

uint64_t sub_241397F90()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_241397FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_2412FAA1C(v3, v4, v5);
}

uint64_t sub_24139800C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_24139803C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_24139806C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v2);
  swift_beginAccess();
  if (!*(_BYTE *)(v0 + 33))
  {
    sub_2414B4CF0();
    if (qword_2543846C8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 33) == 1)
  {
    sub_2414B4CF0();
    if (qword_2543846C8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v3 = (id)qword_25438E910;
  sub_2414B2B3C();
  sub_2414B4D80();
  sub_2412F6D88();
  return sub_2414B40F0();
}

uint64_t sub_24139828C()
{
  uint64_t v0;

  sub_2412FAFF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  sub_2412FAFF4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocClassInstance();
}

BOOL static NowPlayingViewModel.TransportButtonAction.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t NowPlayingViewModel.TransportButtonAction.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t NowPlayingViewModel.TransportButtonAction.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

unint64_t sub_24139833C()
{
  unint64_t result;

  result = qword_2571252C0;
  if (!qword_2571252C0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.TransportButtonAction, &type metadata for NowPlayingViewModel.TransportButtonAction);
    atomic_store(result, (unint64_t *)&qword_2571252C0);
  }
  return result;
}

uint64_t _s21TransportButtonActionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2413983CC + 4 * byte_2414BFF65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241398400 + 4 * byte_2414BFF60[v4]))();
}

uint64_t sub_241398400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241398408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241398410);
  return result;
}

uint64_t sub_24139841C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241398424);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241398428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241398430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransportButtonAction()
{
  return &type metadata for NowPlayingViewModel.TransportButtonAction;
}

uint64_t sub_24139844C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v2 = v1;
  v36 = a1;
  v3 = (int *)type metadata accessor for TransportButtonStyle();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252D8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571252E0);
  v14 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  v35 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_OWORD *)swift_allocObject();
  v18 = *(_OWORD *)(v2 + 48);
  v17[3] = *(_OWORD *)(v2 + 32);
  v17[4] = v18;
  v19 = *(_OWORD *)(v2 + 80);
  v17[5] = *(_OWORD *)(v2 + 64);
  v17[6] = v19;
  v20 = *(_OWORD *)(v2 + 16);
  v17[1] = *(_OWORD *)v2;
  v17[2] = v20;
  v37 = v2;
  sub_24139A08C((_QWORD *)v2);
  sub_24139A11C();
  sub_2414B47D4();
  v21 = (_OWORD *)swift_allocObject();
  v22 = *(_OWORD *)(v2 + 48);
  v21[3] = *(_OWORD *)(v2 + 32);
  v21[4] = v22;
  v23 = *(_OWORD *)(v2 + 80);
  v21[5] = *(_OWORD *)(v2 + 64);
  v21[6] = v23;
  v24 = *(_OWORD *)(v2 + 16);
  v21[1] = *(_OWORD *)v2;
  v21[2] = v24;
  sub_24139A08C((_QWORD *)v2);
  v25 = sub_2412C8FC4(&qword_2571252F0, &qword_2571252D8, MEMORY[0x24BDF43B0]);
  sub_2414B4384();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v38 = *(_OWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47BC();
  v26 = v39;
  v27 = v40;
  LOBYTE(v10) = v41;
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v28 = (char *)v5 + v3[5];
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  v29 = (char *)v5 + v3[6];
  *(_QWORD *)v29 = swift_getKeyPath();
  v29[8] = 0;
  *(uint64_t *)((char *)v5 + v3[7]) = 0x3FF0000000000000;
  v30 = (char *)v5 + v3[8];
  *(_QWORD *)v30 = v26;
  *((_QWORD *)v30 + 1) = v27;
  v30[16] = v10;
  sub_2412F9DDC((uint64_t)v5, (uint64_t)v8);
  v39 = v9;
  v40 = v25;
  swift_getOpaqueTypeConformance2();
  sub_2412F0B40((unint64_t *)&unk_25437FCE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TransportButtonStyle, (uint64_t)&unk_2414C0548);
  v31 = v34;
  sub_2414B41A4();
  sub_2412C8070((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v31);
}

uint64_t sub_24139879C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  result = sub_2414B47A4();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = sub_2414118F4;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_241398814@<X0>(uint64_t a1@<X8>)
{
  return sub_24139844C(a1);
}

uint64_t sub_241398854()
{
  sub_2414B3BE0();
  type metadata accessor for TransportButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  return sub_2414B48D0();
}

uint64_t sub_2413988C8()
{
  sub_241399004();
  return sub_2414B3340();
}

uint64_t sub_241398928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v5;
  sub_2412C821C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedCAPackageView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimatedCAPackageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_241398A30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C83B0();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241398A7C()
{
  sub_2412C83B0();
  return sub_2414B3844();
}

uint64_t sub_241398AC4()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398ACC()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398AD4()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398ADC()
{
  uint64_t v0;

  return sub_241397E24(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_241398AFC()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398B04()
{
  uint64_t v0;

  return sub_241397E24(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_241398B24()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398B2C()
{
  uint64_t v0;

  return sub_241397E24(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 2);
}

unint64_t sub_241398B54()
{
  unint64_t result;

  result = qword_2543816F8;
  if (!qword_2543816F8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9DFC, &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration);
    atomic_store(result, (unint64_t *)&qword_2543816F8);
  }
  return result;
}

uint64_t sub_241398B98()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398BA0()
{
  uint64_t v0;

  return sub_241397CF4(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_241398BC0()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398BC8()
{
  uint64_t v0;

  return sub_241397CF4(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_241398BE8()
{
  return objectdestroyTm_5();
}

uint64_t sub_241398BF0()
{
  uint64_t v0;

  return sub_241397CF4(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 2);
}

ValueMetadata *type metadata accessor for TransportControlsPlacementKey()
{
  return &type metadata for TransportControlsPlacementKey;
}

uint64_t sub_241398C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241398C7C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241398CC4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for TransportButton(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  v11 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v13;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  swift_release();
  return a1;
}

uint64_t sub_241398E58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380EA8);
  _s21CenterTransportButtonVMa(255, v1, v2, v3);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381260);
  v6 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FE0);
  v7 = sub_2414B3514();
  v11[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  v11[1] = sub_2412C8FC4(&qword_254381258, &qword_254381260, MEMORY[0x24BDF1028]);
  v8 = MEMORY[0x24BDED308];
  v10[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v11);
  v10[1] = sub_2412C8FC4(&qword_254380FD8, &qword_254380FE0, MEMORY[0x24BDEF370]);
  return MEMORY[0x242695AE8](v8, v7, v10);
}

unint64_t sub_241399004()
{
  unint64_t result;

  result = qword_2571252C8;
  if (!qword_2571252C8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C0290, &type metadata for TransportControlsPlacement);
    atomic_store(result, (unint64_t *)&qword_2571252C8);
  }
  return result;
}

uint64_t sub_241399048()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24139907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_241397EC8(v4 + 4, v4[2], v4[3], a4);
}

uint64_t sub_241399098()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2413990BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2413990E8()
{
  return sub_2414B37E4();
}

uint64_t sub_24139910C()
{
  return swift_deallocObject();
}

uint64_t sub_24139911C(uint64_t a1)
{
  sub_2412D2350(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24139919C(uint64_t a1)
{
  sub_2412C937C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_24139921C(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_241399228(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t *sub_241399230(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B2F8C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = v11[8];
    sub_2412C7080(*(_QWORD *)v11, v13);
    *(_QWORD *)v10 = v12;
    v10[8] = v13;
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_2412C7080(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    v15[8] = v18;
    v19 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = v21[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

char *sub_241399380(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B2F8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  return a1;
}

uint64_t sub_241399474()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241399480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_241399504()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241399510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t destroy for AnimatedTransportButton(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (a1[6])
    result = swift_release();
  if (a1[8])
    result = swift_release();
  if (a1[10])
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_OWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v6;
  }
  v8 = *(_QWORD *)(a2 + 64);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v10 = *(_QWORD *)(a2 + 80);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v4;
      *(_QWORD *)(a1 + 56) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  v10 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v10;
      *(_QWORD *)(a1 + 88) = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  v11 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v13;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedTransportButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimatedTransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *assignWithCopy for SymbolTransportButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  if (a1[2])
  {
    if (v4)
    {
      v5 = a2[3];
      a1[2] = v4;
      a1[3] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[3];
    a1[2] = v4;
    a1[3] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  v7 = a2[4];
  if (a1[4])
  {
    if (v7)
    {
      v8 = a2[5];
      a1[4] = v7;
      a1[5] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[5];
    a1[4] = v7;
    a1[5] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_15:
  v10 = a2[6];
  if (!a1[6])
  {
    if (v10)
    {
      v12 = a2[7];
      a1[6] = v10;
      a1[7] = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  v11 = a2[7];
  a1[6] = v10;
  a1[7] = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for SymbolTransportButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[2];
  if (a1[2])
  {
    if (v5)
    {
      v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  v8 = a2[4];
  if (a1[4])
  {
    if (v8)
    {
      v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = a2[5];
    a1[4] = v8;
    a1[5] = v10;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_15:
  v11 = a2[6];
  if (!a1[6])
  {
    if (v11)
    {
      v13 = a2[7];
      a1[6] = v11;
      a1[7] = v13;
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  v12 = a2[7];
  a1[6] = v11;
  a1[7] = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolTransportButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolTransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_241399D88(uint64_t a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(a1, &qword_25437DAE8, (void (*)(void))sub_2412EAF38);
}

uint64_t sub_241399D9C(uint64_t a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(a1, &qword_25437DAF8, (void (*)(void))sub_2413007C8);
}

uint64_t get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t (*v4)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  sub_2414B3A9C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  a3();
  sub_2412F0B40(&qword_254382BA0, 255, v4, MEMORY[0x24BDEF420]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241399E3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241399E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TransportButtonStyle();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2414B3BEC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B2F8C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  sub_2412C821C(*(_QWORD *)(v8 + *(int *)(v1 + 20)), *(_BYTE *)(v8 + *(int *)(v1 + 20) + 8));
  sub_2412C821C(*(_QWORD *)(v8 + *(int *)(v1 + 24)), *(_BYTE *)(v8 + *(int *)(v1 + 24) + 8));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_241399F7C()
{
  type metadata accessor for TransportButtonStyle();
  sub_2414B3BEC();
  return sub_241398854();
}

uint64_t sub_241399FDC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  if (v0[4])
    swift_release();
  if (v0[6])
    swift_release();
  if (v0[8])
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24139A030()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_24139A05C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_24139A084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24139879C(*(_QWORD *)(v1 + 16), a1);
}

_QWORD *sub_24139A08C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[6];
  v3 = a1[8];
  v4 = a1[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2412D2824(v2);
  sub_2412D2824(v3);
  sub_2412D2824(v4);
  return a1;
}

unint64_t sub_24139A11C()
{
  unint64_t result;

  result = qword_2571252E8;
  if (!qword_2571252E8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5A58, &type metadata for AnimatedCAPackageView);
    atomic_store(result, (unint64_t *)&qword_2571252E8);
  }
  return result;
}

uint64_t objectdestroy_63Tm()
{
  _QWORD *v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0[8])
    swift_release();
  if (v0[10])
    swift_release();
  if (v0[12])
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24139A1C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  return sub_2414B47B0();
}

uint64_t sub_24139A210()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DB30);
  sub_2412F9E20();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24139A274()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571252E0);
  type metadata accessor for TransportButtonStyle();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571252D8);
  sub_2412C8FC4(&qword_2571252F0, &qword_2571252D8, MEMORY[0x24BDF43B0]);
  swift_getOpaqueTypeConformance2();
  sub_2412F0B40((unint64_t *)&unk_25437FCE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TransportButtonStyle, (uint64_t)&unk_2414C0548);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24139A358(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  return sub_2412C823C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104), *(_BYTE *)(a1 + 105));
}

uint64_t sub_24139A3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 104);
  v12 = *(_BYTE *)(a2 + 105);
  swift_retain();
  swift_unknownObjectRetain();
  sub_2412C6F48(v16, v15, v5, v6, v7, v8, v9, v14, v10, v11, v12);
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v10;
  *(_BYTE *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 105) = v12;
  return a1;
}

uint64_t sub_24139A4A0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  v8 = v2[8];
  v9 = v2[9];
  v10 = v2[10];
  v11 = v2[11];
  v24 = v2[12];
  v25 = *((_BYTE *)v2 + 104);
  LOBYTE(v2) = *((_BYTE *)v2 + 105);
  sub_2412C6F48(v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, (char)v2);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = *(_QWORD *)(a1 + 96);
  v21 = *(_BYTE *)(a1 + 104);
  v22 = *(_BYTE *)(a1 + 105);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v24;
  *(_BYTE *)(a1 + 104) = v25;
  *(_BYTE *)(a1 + 105) = (_BYTE)v2;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

uint64_t sub_24139A5D0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 104);
  v5 = *(_BYTE *)(a2 + 105);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 104);
  v16 = *(_BYTE *)(a1 + 105);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v4;
  *(_BYTE *)(a1 + 105) = v5;
  sub_2412C823C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t sub_24139A680(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 106))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24139A6C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 106) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 106) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s21TransportControlsViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21TransportControlsViewVMn);
}

uint64_t sub_24139A730()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24139A764@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_241396ED4(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_24139A77C(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24139A7C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_254383EA0;
  if (!qword_254383EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EA8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F20);
    v2[3] = sub_24139A874();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383EA0);
  }
  return result;
}

unint64_t sub_24139A874()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F18;
  if (!qword_254383F18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F20);
    v2[0] = sub_241300D4C();
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F18);
  }
  return result;
}

uint64_t sub_24139A8FC()
{
  return sub_241397D5C();
}

uint64_t sub_24139A928(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 105);
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C6F48(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_24139A9D8()
{
  return sub_241397D5C();
}

uint64_t objectdestroy_82Tm()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136), *(_BYTE *)(v0 + 137));
  return swift_deallocObject();
}

uint64_t sub_24139AA64()
{
  uint64_t *v0;

  return sub_241397C8C(v0[4], v0[2], v0[3]);
}

uint64_t sub_24139AA80()
{
  uint64_t *v0;

  return sub_241397DBC(v0[4], v0[2], v0[3]);
}

uint64_t sub_24139AA9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EB0);
  _s21CenterTransportButtonVMa(255, v1, v2, v3);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v6 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381260);
  v7 = sub_2414B3514();
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  v9 = MEMORY[0x24BDF1028];
  v13[0] = v8;
  v13[1] = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
  v10 = MEMORY[0x24BDED308];
  v12[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v13);
  v12[1] = sub_2412C8FC4(&qword_254381258, &qword_254381260, v9);
  MEMORY[0x242695AE8](v10, v7, v12);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24139AC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24139AC7C(a1, a2, a3);
}

uint64_t sub_24139AC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_2414B4FE4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2414B4FD8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_2412D7894(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2414B4F90();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_24139ADA4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24139ADC8(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251171050, (uint64_t)sub_24139FD3C, (uint64_t)&block_descriptor_136);
}

uint64_t sub_24139ADE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v11[2];

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(_QWORD *)(result + 104))
  {
    v11[0] = 0;
    v11[1] = 0;
    swift_retain();
    sub_2412D6BD4(v11, 0);
    swift_release();
    swift_release();
    return sub_24139AE80(a1, a2, a4, a6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139AE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v8 = sub_2414B3034();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3028();
  v15 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_2414B4FC0();
  swift_unknownObjectRetain();
  v16 = sub_2414B4FB4();
  v17 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (char *)swift_allocObject();
  v19 = MEMORY[0x24BEE6930];
  *((_QWORD *)v18 + 2) = v16;
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = a3;
  *((_QWORD *)v18 + 5) = a4;
  *((_QWORD *)v18 + 6) = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v11, v8);
  sub_24139AC7C((uint64_t)v14, (uint64_t)&unk_257125388, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_24139B004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD aBlock[7];

  v43 = a6;
  v44 = a8;
  v38 = a7;
  v39 = a3;
  v41 = a2;
  v42 = a5;
  v40 = a4;
  v35 = a1;
  v45 = a9;
  v47 = sub_2414B4B94();
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B4BB8();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B3034();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = sub_2414B4BD0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v35 - v21;
  sub_2412FFFC8();
  v36 = sub_2414B5230();
  sub_2414B4BC4();
  MEMORY[0x242694468](v20, 0.2);
  v37 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23 = v20;
  v24 = v16;
  v37(v23, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v13);
  v25 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v26 = (char *)swift_allocObject();
  v27 = v40;
  v28 = v41;
  *((_QWORD *)v26 + 2) = v39;
  *((_QWORD *)v26 + 3) = v27;
  v29 = v43;
  *((_QWORD *)v26 + 4) = v42;
  *((_QWORD *)v26 + 5) = v29;
  *((_QWORD *)v26 + 6) = v28;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v26[v25], (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = v44;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = v45;
  v30 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_2414B4BAC();
  v51 = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_241381774();
  v32 = v46;
  v31 = v47;
  sub_2414B5464();
  v33 = (void *)v36;
  MEMORY[0x242694A80](v22, v12, v32, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
  v37(v22, v24);
  return swift_release();
}

uint64_t sub_24139B330(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170FD8, (uint64_t)sub_24139FB94, (uint64_t)&block_descriptor_123);
}

uint64_t sub_24139B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  __int128 v11;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(_QWORD *)(result + 104))
  {
    v11 = xmmword_2414C07A0;
    swift_retain();
    sub_2412D6BD4((uint64_t *)&v11, 0);
    swift_release();
    swift_release();
    return sub_24139AE80(a1, a2, a4, a6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139B3F0(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170F38, (uint64_t)sub_24139F8F8, (uint64_t)&block_descriptor_104);
}

uint64_t sub_24139B40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  v27 = a3;
  v28 = a5;
  v26 = sub_2414B3034();
  v10 = *(_QWORD *)(v26 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v26);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a4;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(_QWORD *)(result + 104))
  {
    v29[0] = 0;
    v29[1] = 0;
    swift_retain();
    sub_2412D6BD4(v29, 0);
    swift_release();
    swift_release();
    LOBYTE(v29[0]) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)v29, 0, a4, a6);
    sub_2414B3028();
    v18 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
    v19 = a2;
    v20 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v26);
    sub_2414B4FC0();
    swift_unknownObjectRetain();
    v21 = sub_2414B4FB4();
    v22 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v23 = (char *)swift_allocObject();
    v24 = MEMORY[0x24BEE6930];
    *((_QWORD *)v23 + 2) = v21;
    *((_QWORD *)v23 + 3) = v24;
    *((_QWORD *)v23 + 4) = v27;
    *((_QWORD *)v23 + 5) = v16;
    *((_QWORD *)v23 + 6) = v28;
    *((_QWORD *)v23 + 7) = a6;
    *((_QWORD *)v23 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v22], v12, v20);
    sub_2413EE440((uint64_t)v15, (uint64_t)&unk_257125360, (uint64_t)v23);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139B618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[6] = a8;
  v8[7] = v11;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v8[8] = sub_2414B4FC0();
  v8[9] = sub_2414B4FB4();
  v8[10] = sub_2414B4F90();
  v8[11] = v9;
  return swift_task_switch();
}

uint64_t sub_24139B698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 16);
  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 96) = sub_2414B4FB4();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = v6;
  *(_OWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 48) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_24139B764;
  return sub_2414B57AC();
}

uint64_t sub_24139B764()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24139B7CC()
{
  uint64_t v0;

  swift_release();
  sub_2414B3004();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a5;
  v22 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125368);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = a3;
  *((_QWORD *)v18 + 5) = a4;
  v19 = v22;
  *((_QWORD *)v18 + 6) = v21;
  *((_QWORD *)v18 + 7) = v19;
  *((_QWORD *)v18 + 8) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  swift_unknownObjectRetain();
  sub_24139C210((uint64_t)v15, (uint64_t)&unk_257125378, (uint64_t)v18);
  swift_release();
  return sub_2412D7894((uint64_t)v15);
}

uint64_t sub_24139B97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v7[6] = a7;
  v7[7] = v10;
  v7[4] = a4;
  v7[5] = a5;
  v8 = sub_2414B5644();
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24139BA00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_2414B5638();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_24139BA80;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24139BA80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v2 + 120) = v6;
  v6(v3, v4);
  return swift_task_switch();
}

uint64_t sub_24139BB0C()
{
  _QWORD *v0;

  v0[16] = *(_QWORD *)(v0[7] + 208);
  v0[17] = sub_2414B4FC0();
  v0[18] = 0;
  v0[19] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139BB84()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139BBD4()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t (*)(uint64_t, uint64_t))v0[16];
  v3 = v0[6];
  v2 = v0[7];
  swift_release();
  v0[20] = v1(v3, v2);
  return swift_task_switch();
}

uint64_t sub_24139BC34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139BC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 160);
  result = swift_release();
  if (*(_QWORD *)(v1 + 104))
  {
    *(_OWORD *)(v0 + 16) = xmmword_2414C07A0;
    swift_retain();
    sub_2412D6BD4((uint64_t *)(v0 + 16), 1);
    swift_release();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139BD1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_2414B5638();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_24139BD9C;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24139BD9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 120))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_24139BE10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139BE70()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t (*)(uint64_t, uint64_t))v0[16];
  v3 = v0[6];
  v2 = v0[7];
  swift_release();
  v0[25] = v1(v3, v2);
  return swift_task_switch();
}

uint64_t sub_24139BED0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139BF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3[2];

  v1 = *(_QWORD *)(v0 + 200);
  result = swift_release();
  if (*(_QWORD *)(v1 + 104))
  {
    v3[0] = 0;
    v3[1] = 0;
    swift_retain();
    sub_2412D6BD4(v3, 1);
    swift_release();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139BFAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_2414B5638();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v1;
  *v1 = v0;
  v1[1] = sub_24139C02C;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24139C02C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 120))(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_24139C0A0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139C0F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 144) == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257125368);
    sub_2414B4FA8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 152) = sub_2414B4FB4();
    sub_2414B4F90();
    return swift_task_switch();
  }
}

uint64_t sub_24139C1C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139C210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412D78D4(a1, (uint64_t)v7);
  v8 = sub_2414B4FE4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2412D7894((uint64_t)v7);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_2414B4F90();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_24139C380(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170EC0, (uint64_t)sub_24139F764, (uint64_t)&block_descriptor_92);
}

uint64_t sub_24139C39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[2];

  v29 = a5;
  v30 = a8;
  v27 = a7;
  v28 = a3;
  v26 = a2;
  v11 = sub_2414B3034();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(_QWORD *)(result + 104))
  {
    v31[0] = 0;
    v31[1] = 0;
    swift_retain();
    sub_2412D6BD4(v31, 0);
    swift_release();
    swift_release();
    LOBYTE(v31[0]) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)v31, 0, a4, a6);
    v19 = v26;
    sub_2414B3028();
    v20 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v11);
    sub_2414B4FC0();
    swift_unknownObjectRetain();
    v21 = sub_2414B4FB4();
    v22 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = (char *)swift_allocObject();
    v24 = MEMORY[0x24BEE6930];
    *((_QWORD *)v23 + 2) = v21;
    *((_QWORD *)v23 + 3) = v24;
    *((_QWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 5) = a4;
    *((_QWORD *)v23 + 6) = v29;
    *((_QWORD *)v23 + 7) = a6;
    *((_QWORD *)v23 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v23[v22], v14, v11);
    sub_24139AC7C((uint64_t)v17, v30, (uint64_t)v23);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139C5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v9 = sub_2414B562C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v10 = sub_2414B5644();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_2414B4FC0();
  v8[20] = sub_2414B4FB4();
  v8[21] = sub_2414B4F90();
  v8[22] = v11;
  return swift_task_switch();
}

uint64_t sub_24139C67C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = 0;
  sub_2414B5638();
  *(_OWORD *)(v0 + 40) = xmmword_2414C07B0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_24139C6D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_24139C7E0;
  return sub_2414B5854();
}

uint64_t sub_24139C7E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 144);
    v3 = *(_QWORD *)(v2 + 152);
    v5 = *(_QWORD *)(v2 + 136);
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24139C884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  sub_2414B4AC8();
  sub_2414B3328();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_2414B3004();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 184);
    sub_2414B5638();
    *(_OWORD *)(v0 + 40) = xmmword_2414C07B0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24139C9A4()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
  return swift_task_switch();
}

uint64_t sub_24139C9E4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139CA3C(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170E48, (uint64_t)sub_24139F684, (uint64_t)&block_descriptor_80);
}

uint64_t sub_24139CA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v9 = sub_2414B562C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v10 = sub_2414B5644();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_2414B4FC0();
  v8[20] = sub_2414B4FB4();
  v8[21] = sub_2414B4F90();
  v8[22] = v11;
  return swift_task_switch();
}

uint64_t sub_24139CB34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = 0;
  sub_2414B5638();
  *(_OWORD *)(v0 + 40) = xmmword_2414C07C0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_24139CB8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_24139CC98;
  return sub_2414B5854();
}

uint64_t sub_24139CC98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 144);
    v3 = *(_QWORD *)(v2 + 152);
    v5 = *(_QWORD *)(v2 + 136);
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24139CD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  sub_2414B4AC8();
  sub_2414B3328();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_2414B3004();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 184);
    sub_2414B5638();
    *(_OWORD *)(v0 + 40) = xmmword_2414C07C0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24139CE5C()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
  return swift_task_switch();
}

uint64_t sub_24139CE9C(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170DD0, (uint64_t)sub_24139F5A4, (uint64_t)&block_descriptor_66);
}

uint64_t sub_24139CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[8] = a8;
  v8[9] = v12;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v9 = sub_2414B5644();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  sub_2414B4FC0();
  v8[15] = sub_2414B4FB4();
  v8[16] = sub_2414B4F90();
  v8[17] = v10;
  return swift_task_switch();
}

uint64_t sub_24139CF78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v0 + 144) = 0;
  sub_2414B5638();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_24139CFFC;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24139CFFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  v3 = v2[14];
  v4 = v2[10];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[11] + 8);
  if (!v0)
    v2[21] = v5;
  v5(v3, v4);
  return swift_task_switch();
}

uint64_t sub_24139D078()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t result;
  _QWORD *v4;
  char *v5;

  v1 = v0[7];
  v2 = *(uint64_t (**)(uint64_t))(v0[9] + 208);
  v0[22] = (uint64_t)v2;
  result = v2(v1);
  if (*(_QWORD *)(result + 104))
  {
    *((_OWORD *)v0 + 1) = xmmword_2414C07A0;
    swift_retain();
    sub_2412D6BD4(v0 + 2, 1);
    swift_release();
    swift_release();
    sub_2414B5638();
    v5 = (char *)&dword_257122340 + dword_257122340;
    v4 = (_QWORD *)swift_task_alloc();
    v0[23] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = sub_24139D164;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v5)(300000000000000000, 0, 0, 0, 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139D164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 168))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 80));
  return swift_task_switch();
}

uint64_t sub_24139D1D4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139D22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = v1;
  sub_2414B4AC8();
  sub_2414B3328();
  swift_release();
  swift_task_dealloc();
  sub_2414B5638();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v4;
  *v4 = v0;
  v4[1] = sub_24139D314;
  return v6(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24139D314()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 168))(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 80));
  return swift_task_switch();
}

uint64_t sub_24139D384()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139D3DC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v5[2];

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 176))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 72));
  if (*(_QWORD *)(result + 104))
  {
    v2 = *(_QWORD *)(v0 + 144);
    v5[0] = 0;
    v5[1] = 0;
    swift_retain();
    sub_2412D6BD4(v5, 1);
    swift_release();
    swift_release();
    if (v2 == 2)
    {
      swift_release();
      sub_2414B3004();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      ++*(_QWORD *)(v0 + 144);
      sub_2414B5638();
      v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v3;
      *v3 = v0;
      v3[1] = sub_24139CFFC;
      return v4(2000000000000000000, 0, 0, 0, 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139D51C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139D574(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170D58, (uint64_t)sub_24139F4C4, (uint64_t)&block_descriptor_54);
}

uint64_t sub_24139D590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v9 = sub_2414B562C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v10 = sub_2414B5644();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_2414B4FC0();
  v8[20] = sub_2414B4FB4();
  v8[21] = sub_2414B4F90();
  v8[22] = v11;
  return swift_task_switch();
}

uint64_t sub_24139D66C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = 0;
  sub_2414B5638();
  *(_OWORD *)(v0 + 40) = xmmword_2414C07B0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_24139D6C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_24139D7D0;
  return sub_2414B5854();
}

uint64_t sub_24139D7D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 144);
    v3 = *(_QWORD *)(v2 + 152);
    v5 = *(_QWORD *)(v2 + 136);
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24139D874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  sub_2414B4AC8();
  sub_2414B3328();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_2414B3004();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 184);
    sub_2414B5638();
    *(_OWORD *)(v0 + 40) = xmmword_2414C07B0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24139D994(uint64_t a1)
{
  return sub_24139D9B0(a1, (uint64_t)&unk_251170CE0, (uint64_t)sub_24139F3D0, (uint64_t)&block_descriptor_42);
}

uint64_t sub_24139D9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_24139B004(a1, v4[6], v4[2], v4[3], v4[4], v4[5], a2, a3, a4);
}

uint64_t sub_24139D9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v29 = a5;
  v30 = a8;
  v27 = a7;
  v28 = a3;
  v26 = a2;
  v11 = sub_2414B3034();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(_QWORD *)(result + 104))
  {
    v31 = xmmword_2414C07A0;
    swift_retain();
    sub_2412D6BD4((uint64_t *)&v31, 0);
    swift_release();
    swift_release();
    LOBYTE(v31) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)&v31, 0, a4, a6);
    v19 = v26;
    sub_2414B3028();
    v20 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v11);
    sub_2414B4FC0();
    swift_unknownObjectRetain();
    v21 = sub_2414B4FB4();
    v22 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = (char *)swift_allocObject();
    v24 = MEMORY[0x24BEE6930];
    *((_QWORD *)v23 + 2) = v21;
    *((_QWORD *)v23 + 3) = v24;
    *((_QWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 5) = a4;
    *((_QWORD *)v23 + 6) = v29;
    *((_QWORD *)v23 + 7) = a6;
    *((_QWORD *)v23 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v23[v22], v14, v11);
    sub_24139AC7C((uint64_t)v17, v30, (uint64_t)v23);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24139DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v9 = sub_2414B562C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v10 = sub_2414B5644();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_2414B4FC0();
  v8[20] = sub_2414B4FB4();
  v8[21] = sub_2414B4F90();
  v8[22] = v11;
  return swift_task_switch();
}

uint64_t sub_24139DCD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = 0;
  sub_2414B5638();
  *(_OWORD *)(v0 + 40) = xmmword_2414C07C0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_24139DD28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_24139DE34;
  return sub_2414B5854();
}

uint64_t sub_24139DE34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 144);
    v3 = *(_QWORD *)(v2 + 152);
    v5 = *(_QWORD *)(v2 + 136);
    (*(void (**)(_QWORD, _QWORD))(v2 + 192))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24139DED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  sub_2414B4AC8();
  sub_2414B3328();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_2414B3004();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 184);
    sub_2414B5638();
    *(_OWORD *)(v0 + 40) = xmmword_2414C07C0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24139DFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void *v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[7];

  v46 = a6;
  v47 = a7;
  v45 = a5;
  v38 = a4;
  v41 = a3;
  v44 = a2;
  v39 = a1;
  v50 = sub_2414B4B94();
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v49 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B4BB8();
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B3034();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2414B4BD0();
  v18 = *(_QWORD *)(v54 - 8);
  v19 = MEMORY[0x24BDAC7A8](v54);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)&v37 - v22;
  sub_2412FFFC8();
  v42 = sub_2414B5230();
  sub_2414B4BC4();
  MEMORY[0x242694468](v21, 0.2);
  v43 = *(void (**)(char *, uint64_t))(v18 + 8);
  v43(v21, v54);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v39, v14);
  v23 = v37;
  v24 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v37, v41, v38);
  v25 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v26 = (v16 + *(unsigned __int8 *)(v12 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v27 = (char *)swift_allocObject();
  v28 = v45;
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v28;
  v29 = v47;
  *((_QWORD *)v27 + 4) = v46;
  *((_QWORD *)v27 + 5) = v29;
  *((_QWORD *)v27 + 6) = v44;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v27[v25], v17, v14);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v27[v26], v23, v24);
  aBlock[4] = sub_24139E7D0;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_9;
  v30 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  v31 = v48;
  sub_2414B4BAC();
  v55 = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_241381774();
  v33 = v49;
  v32 = v50;
  sub_2414B5464();
  v34 = v40;
  v35 = (void *)v42;
  MEMORY[0x242694A80](v40, v31, v33, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v52);
  v43(v34, v54);
  return swift_release();
}

uint64_t sub_24139E3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24139E430(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_24139DFF8(a1, v1[6], (uint64_t)v1 + ((v3 + 56) & ~v3), v2, v1[3], v1[4], v1[5]);
}

uint64_t sub_24139E454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  unsigned __int8 v51;

  v48 = a6;
  v49 = a4;
  v42 = a5;
  v46 = a3;
  v40 = a2;
  v11 = sub_2414B3034();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v47 = *(_QWORD *)(v44 + 64);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a4 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v18;
  v51 = 1;
  NowPlayingController.transition(to:animated:)(&v51, 0, a5, a7);
  v19 = a7;
  v43 = a7;
  v20 = *(void (**)(uint64_t, uint64_t))(a7 + 208);
  v21 = a1;
  v20(a5, v19);
  swift_getKeyPath();
  swift_getKeyPath();
  v50 = &unk_2511633E8;
  swift_retain();
  sub_2414B2E48();
  sub_241447ED4();
  swift_release();
  v22 = v40;
  sub_2414B3028();
  v23 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v49);
  v25 = v44;
  v24 = v45;
  v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v41, v22, v45);
  sub_2414B4FC0();
  v27 = v21;
  swift_unknownObjectRetain();
  v28 = sub_2414B4FB4();
  v29 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v30 = (v15 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = v25;
  v32 = (*(unsigned __int8 *)(v25 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v33 = (char *)swift_allocObject();
  v34 = MEMORY[0x24BEE6930];
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v34;
  v35 = v42;
  *((_QWORD *)v33 + 4) = v49;
  *((_QWORD *)v33 + 5) = v35;
  v36 = v43;
  *((_QWORD *)v33 + 6) = v48;
  *((_QWORD *)v33 + 7) = v36;
  (*(void (**)(char *, char *))(v14 + 32))(&v33[v29], v38);
  *(_QWORD *)&v33[v30] = v27;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v26, v24);
  sub_2413EE440((uint64_t)v39, (uint64_t)&unk_257125300, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_24139E71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_2414B3034();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_24139E7D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = *(_QWORD *)(sub_2414B3034() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_24139E454(v0[6], (uint64_t)v0 + v6, (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v1, v2, v3, v4);
}

uint64_t sub_24139E84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v13;
  uint64_t v14;

  v7[5] = v13;
  v7[6] = v14;
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a5;
  v7[7] = sub_2414B4FC0();
  v7[8] = sub_2414B4FB4();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_257122338 + dword_257122338);
  v10 = (_QWORD *)swift_task_alloc();
  v7[9] = v10;
  *v10 = v7;
  v10[1] = sub_24139E8F8;
  return v12(a5, v14, a7, v13, 0.0);
}

uint64_t sub_24139E8F8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  _QWORD *v5;

  v1 = (_QWORD *)*v0;
  v5 = (_QWORD *)*v0;
  swift_task_dealloc();
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_257122338 + dword_257122338);
  v2 = (_QWORD *)swift_task_alloc();
  v1[10] = v2;
  *v2 = v5;
  v2[1] = sub_24139E984;
  return v4(v1[2], v1[6], v1[4], v1[5], 0.2);
}

uint64_t sub_24139E984()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  _QWORD *v5;

  v1 = (_QWORD *)*v0;
  v5 = (_QWORD *)*v0;
  swift_task_dealloc();
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_257122338 + dword_257122338);
  v2 = (_QWORD *)swift_task_alloc();
  v1[11] = v2;
  *v2 = v5;
  v2[1] = sub_24139EA10;
  return v4(v1[2], v1[6], v1[4], v1[5], 0.4);
}

uint64_t sub_24139EA10()
{
  swift_task_dealloc();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_24139EA80()
{
  uint64_t v0;

  swift_release();
  sub_2414B3004();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139EAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = sub_2414B562C();
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 - 8);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  v9 = sub_2414B5644();
  v7[21] = v9;
  v7[22] = *(_QWORD *)(v9 - 8);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  sub_2414B4FC0();
  v7[25] = sub_2414B4FB4();
  v7[26] = sub_2414B4F90();
  v7[27] = v10;
  return swift_task_switch();
}

uint64_t sub_24139EBA4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = 0;
  sub_2414B5638();
  *(_OWORD *)(v0 + 64) = xmmword_2414C07D0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_24139EBFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[19];
  v2 = v0[16];
  v3 = v0[17];
  v0[29] = sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  v0[30] = sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[31] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[32] = v5;
  *v5 = v0;
  v5[1] = sub_24139ED10;
  return sub_2414B5854();
}

uint64_t sub_24139ED10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 128));
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 192);
    v4 = *(_QWORD *)(v2 + 168);
    v5 = *(_QWORD *)(v2 + 176);
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 128));
    v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v2 + 272) = v6;
    v6(v3, v4);
  }
  return swift_task_switch();
}

uint64_t sub_24139EDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = 1;
  NowPlayingController.transition(to:animated:)(&v4, 1, v1, v2);
  sub_2414B5638();
  *(_OWORD *)(v0 + 80) = xmmword_2414C07D0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_BYTE *)(v0 + 56) = 1;
  return swift_task_switch();
}

uint64_t sub_24139EE34()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void (*)(uint64_t, uint64_t))v0[31];
  v2 = v0[19];
  v3 = v0[16];
  sub_2414B5848();
  sub_2414B5650();
  v1(v2, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[35] = v4;
  *v4 = v0;
  v4[1] = sub_24139EEF8;
  return sub_2414B5854();
}

uint64_t sub_24139EEF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 128));
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v2 + 272);
    v4 = *(_QWORD *)(v2 + 184);
    v5 = *(_QWORD *)(v2 + 168);
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 128));
    v3(v4, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24139EFA0()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[24], v0[21]);
  return swift_task_switch();
}

uint64_t sub_24139EFE0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139F058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = 0;
  NowPlayingController.transition(to:animated:)(&v5, 1, v2, v3);
  if (v1 == 2)
  {
    swift_release();
    sub_2414B3004();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ++*(_QWORD *)(v0 + 224);
    sub_2414B5638();
    *(_OWORD *)(v0 + 64) = xmmword_2414C07D0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24139F15C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 272))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  return swift_task_switch();
}

uint64_t sub_24139F19C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24139F21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_2414B3034();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_24139F2E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v9 = v7 + v8 + 8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = (uint64_t)v1 + v6;
  v13 = *(_QWORD *)((char *)v1 + v7);
  v14 = (uint64_t)v1 + (v9 & ~v8);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_241310C28;
  return sub_24139E84C(a1, v10, v11, v12, v13, v14, v4);
}

uint64_t sub_24139F3D0()
{
  return sub_24139F780((uint64_t)&unk_251170D30, (uint64_t)&unk_257125310, (uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139D9E8);
}

uint64_t sub_24139F3F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310C28;
  return sub_24139DBF4(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139F4AC()
{
  return sub_24139F8C0();
}

uint64_t sub_24139F4C4()
{
  return sub_24139F780((uint64_t)&unk_251170DA8, (uint64_t)&unk_257125320, (uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139D9E8);
}

uint64_t sub_24139F4E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310C28;
  return sub_24139D590(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139F5A4()
{
  return sub_24139F780((uint64_t)&unk_251170E20, (uint64_t)&unk_257125330, (uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139C39C);
}

uint64_t sub_24139F5C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310C28;
  return sub_24139CEB8(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139F684()
{
  return sub_24139F780((uint64_t)&unk_251170E98, (uint64_t)&unk_257125340, (uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139C39C);
}

uint64_t sub_24139F6A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310C28;
  return sub_24139CA58(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139F764()
{
  return sub_24139F780((uint64_t)&unk_251170F10, (uint64_t)&unk_257125350, (uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139C39C);
}

uint64_t sub_24139F780(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *((_QWORD *)v3 + 2);
  v8 = *((_QWORD *)v3 + 3);
  v9 = *((_QWORD *)v3 + 4);
  v10 = *((_QWORD *)v3 + 5);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  return a3(*((_QWORD *)v3 + 6), &v3[(v11 + 56) & ~v11], v7, v8, v9, v10, a1, a2);
}

uint64_t sub_24139F804(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310C28;
  return sub_24139C5A0(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139F8C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 240))(0, *(_QWORD *)(v0 + 24));
}

uint64_t sub_24139F8F8()
{
  return sub_24139FD48((uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139B40C);
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B3034();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24139F984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_241310430;
  return sub_24139B618(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_24139FA40(uint64_t a1)
{
  uint64_t *v1;

  return sub_24139B804(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24139FA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125368);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24139FAD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257125368) - 8) + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[8];
  v10 = (uint64_t)v1 + ((v6 + 72) & ~v6);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_241310C28;
  return sub_24139B97C(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_24139FB94()
{
  return sub_24139FD48((uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139B34C);
}

uint64_t sub_24139FBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B3034();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24139FC1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v6 + 56) & ~v6);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_241310430;
  return sub_24139EAB8(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t objectdestroy_38Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B3034();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24139FD3C()
{
  return sub_24139FD48((uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_24139ADE4);
}

uint64_t sub_24139FD48(uint64_t (*a1)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *((_QWORD *)v1 + 2);
  v3 = *((_QWORD *)v1 + 3);
  v4 = *((_QWORD *)v1 + 4);
  v5 = *((_QWORD *)v1 + 5);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3034() - 8) + 80);
  return a1(*((_QWORD *)v1 + 6), &v1[(v6 + 56) & ~v6], v2, v3, v4, v5);
}

uint64_t sub_24139FE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  type metadata accessor for MaterialMotionContentObserver(0);
  return sub_2414B4AEC();
}

uint64_t sub_24139FE7C()
{
  uint64_t v0;

  type metadata accessor for MaterialMotionContentObserver(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_2414B2BA8();
  swift_getKeyPath();
  sub_2413A2F74();
  sub_2414B2B78();
  swift_release();
  swift_getKeyPath();
  sub_2414B2B78();
  swift_release();
  return v0;
}

uint64_t sub_24139FF78()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543809B0);
  sub_2414B4798();
  return v1;
}

uint64_t sub_24139FFC4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571253C8);
  sub_2414B47A4();
  return v1;
}

uint64_t sub_2413A0024()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571253C8);
  return sub_2414B47B0();
}

uint64_t NowPlayingArtworkBackground.init(videoURL:namespace:treatment:staticArt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(uint64_t);

  v26 = a5;
  v27 = a4;
  v12 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v15;
  v19 = (int *)type metadata accessor for NowPlayingArtworkBackground(0, v17, v18, (uint64_t)v15);
  sub_24139FE18((uint64_t)sub_24139FE7C, 0);
  v20 = a7 + v19[13];
  *(_QWORD *)v20 = sub_24139FF78();
  *(_BYTE *)(v20 + 8) = v21 & 1;
  *(_QWORD *)(v20 + 16) = v22;
  v23 = sub_24131A294(a1, a7);
  v24 = a7 + v19[9];
  *(_QWORD *)v24 = a2;
  *(_BYTE *)(v24 + 8) = a3 & 1;
  v27(v23);
  sub_24131A14C(a1);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a7 + v19[10], v14, a6);
  *(_BYTE *)(a7 + v19[11]) = v16;
  return result;
}

uint64_t type metadata accessor for NowPlayingArtworkBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingArtworkBackground);
}

void NowPlayingArtworkBackground.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[14];

  v20 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v8 + *(int *)(v7 + 36));
  v19 = *v9;
  v18 = *((unsigned __int8 *)v9 + 8);
  (*(void (**)(char *, double))(v3 + 16))(v6, v5);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  v17[2] = v11;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v11 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, v6, a1);
  v17[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25712A750);
  sub_2414B3514();
  v14 = sub_2414B3514();
  v15 = sub_2414B53B0();
  v22[0] = v13;
  v22[1] = MEMORY[0x24BDEBF50];
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v22);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v15, &v21);
  sub_2414B3A6C();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v16 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v16);
  v17[0] = sub_2414B4894();
  v22[7] = v12;
  v22[8] = v12;
  v22[9] = v13;
  v22[10] = v13;
  type metadata accessor for MotionView();
}

uint64_t sub_2413A039C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125398);
  v7 = sub_2414B3514();
  v8 = type metadata accessor for MaterialMotionContentObserver(255);
  v9 = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
  v10 = sub_2412C8FC4((unint64_t *)&qword_2571244F8, &qword_2571244F0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v3 - 216) = v9;
  *(_QWORD *)(v3 - 208) = v10;
  v11 = v2;
  v12 = MEMORY[0x242695AE8](v2, v5, v3 - 216);
  v13 = MEMORY[0x24BDEEC40];
  v1[29] = v12;
  v1[30] = v13;
  v14 = MEMORY[0x242695AE8](v2, v6, v1 + 29);
  v15 = sub_2412C8FC4(&qword_2571253A0, &qword_257125398, MEMORY[0x24BDEDC10]);
  v1[27] = v14;
  v1[28] = v15;
  v16 = MEMORY[0x242695AE8](v2, v7, v1 + 27);
  v17 = sub_2413A2F74();
  *(_QWORD *)(v3 - 136) = v7;
  *(_QWORD *)(v3 - 128) = v8;
  *(_QWORD *)(v3 - 120) = v16;
  *(_QWORD *)(v3 - 112) = v17;
  MEMORY[0x242695A94](255, v3 - 136, MEMORY[0x24BDF2358], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253A8);
  v18 = sub_2414B3514();
  v19 = sub_2414B53B0();
  *(_QWORD *)(v3 - 136) = v7;
  *(_QWORD *)(v3 - 128) = v8;
  *(_QWORD *)(v3 - 120) = v16;
  *(_QWORD *)(v3 - 112) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, MEMORY[0x24BDF1028]);
  v1[25] = OpaqueTypeConformance2;
  v1[26] = v21;
  v1[24] = MEMORY[0x242695AE8](v11, v18, v1 + 25);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v19, v1 + 24);
  v22 = sub_2414B3604();
  v23 = *v1;
  v24 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FA8);
  v25 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v26 = sub_2414B3514();
  v27 = sub_2414B3514();
  v28 = sub_2414B3514();
  v29 = sub_2412C8FC4(&qword_2571253B8, (uint64_t *)&unk_25712A750, MEMORY[0x24BDB9AF8]);
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v23);
  v31 = MEMORY[0x24BDEDC10];
  v32 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v22);
  v1[22] = v30;
  v1[23] = v32;
  v33 = MEMORY[0x24BDED308];
  v34 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v24, v1 + 22);
  v35 = sub_2412C8FC4(&qword_257124AF0, &qword_254383FA8, v31);
  v1[20] = v34;
  v1[21] = v35;
  v36 = MEMORY[0x242695AE8](v33, v25, v1 + 20);
  v37 = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  v1[18] = v36;
  v1[19] = v37;
  v38 = MEMORY[0x242695AE8](v33, v26, v1 + 18);
  v39 = MEMORY[0x24BDF0390];
  v1[16] = v38;
  v1[17] = v39;
  v40 = MEMORY[0x242695AE8](v33, v27, v1 + 16);
  v41 = MEMORY[0x24BDEBEE0];
  v1[14] = v40;
  v1[15] = v41;
  v42 = MEMORY[0x242695AE8](v33, v28, v1 + 14);
  *(_QWORD *)(v3 - 136) = v1[1];
  *(_QWORD *)(v3 - 128) = v28;
  *(_QWORD *)(v3 - 120) = v29;
  *(_QWORD *)(v3 - 112) = v42;
  v43 = sub_2414B35E0();
  MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v43);
  v44 = sub_2414B3388();
  v45 = sub_2414B3514();
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v44);
  v47 = MEMORY[0x24BDF1050];
  v1[12] = v46;
  v1[13] = v47;
  v48 = MEMORY[0x242695AE8](v33, v45, v1 + 12);
  sub_2414107E4(v1[4], *((_DWORD *)v1 + 7), (uint64_t)sub_2413A0F00, v1[2], v3 - 136);
  v49 = *(_OWORD *)(v3 - 120);
  *((_OWORD *)v1 + 3) = *(_OWORD *)(v3 - 136);
  *((_OWORD *)v1 + 4) = v49;
  v1[10] = *(_QWORD *)(v3 - 104);
  v51 = type metadata accessor for WithNamespace(0, v45, v48, v50);
  MEMORY[0x242695AE8](&unk_2414C55A0, v51);
  sub_2412FBF34((uint64_t)(v1 + 6), v51, v3 - 176);
  sub_2413A2FBC(v3 - 136);
  v52 = *(_BYTE *)(v3 - 160);
  v53 = *(_QWORD *)(v3 - 152);
  v54 = *(_QWORD *)(v3 - 144);
  *((_OWORD *)v1 + 3) = *(_OWORD *)(v3 - 176);
  *((_BYTE *)v1 + 64) = v52;
  v1[9] = v53;
  v1[10] = v54;
  sub_2412EEA1C((uint64_t)(v1 + 6), v51, v1[5]);
  return swift_release();
}

void sub_2413A0854(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[34];
  uint64_t v18;
  _QWORD v19[7];

  v17[4] = a4;
  v7 = type metadata accessor for NowPlayingArtworkBackground(0, a2, a3, a3);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v17 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)v17 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  v17[3] = v13;
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  v17[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25712A750);
  sub_2414B3514();
  v14 = sub_2414B3514();
  v15 = sub_2414B53B0();
  v19[0] = a3;
  v19[1] = MEMORY[0x24BDEBF50];
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v19);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v15, &v18);
  sub_2414B3A6C();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v16 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v16);
  v17[1] = sub_2414B4894();
  v17[30] = a2;
  v17[31] = a2;
  v17[32] = a3;
  v17[33] = a3;
  type metadata accessor for MotionView();
}

uint64_t sub_2413A0A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125398);
  v7 = sub_2414B3514();
  v8 = type metadata accessor for MaterialMotionContentObserver(255);
  v9 = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
  v10 = sub_2412C8FC4((unint64_t *)&qword_2571244F8, &qword_2571244F0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v3 - 192) = v9;
  *(_QWORD *)(v3 - 184) = v10;
  v11 = v2;
  v12 = MEMORY[0x242695AE8](v2, v5, v3 - 192);
  v13 = MEMORY[0x24BDEEC40];
  *(_QWORD *)(v1 + 208) = v12;
  *(_QWORD *)(v1 + 216) = v13;
  v14 = MEMORY[0x242695AE8](v2, v6, v1 + 208);
  v15 = sub_2412C8FC4(&qword_2571253A0, &qword_257125398, MEMORY[0x24BDEDC10]);
  *(_QWORD *)(v1 + 192) = v14;
  *(_QWORD *)(v1 + 200) = v15;
  v16 = MEMORY[0x242695AE8](v2, v7, v1 + 192);
  v17 = sub_2413A2F74();
  *(_QWORD *)(v3 - 176) = v7;
  *(_QWORD *)(v3 - 168) = v8;
  *(_QWORD *)(v3 - 160) = v16;
  *(_QWORD *)(v3 - 152) = v17;
  MEMORY[0x242695A94](255, v3 - 176, MEMORY[0x24BDF2358], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253A8);
  v18 = sub_2414B3514();
  v19 = sub_2414B53B0();
  *(_QWORD *)(v3 - 176) = v7;
  *(_QWORD *)(v3 - 168) = v8;
  *(_QWORD *)(v3 - 160) = v16;
  *(_QWORD *)(v3 - 152) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v1 + 176) = OpaqueTypeConformance2;
  *(_QWORD *)(v1 + 184) = v21;
  *(_QWORD *)(v1 + 168) = MEMORY[0x242695AE8](v11, v18, v1 + 176);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v19, v1 + 168);
  v22 = sub_2414B3604();
  v23 = *(_QWORD *)(v1 + 8);
  v24 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FA8);
  v25 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v26 = sub_2414B3514();
  v27 = sub_2414B3514();
  v28 = sub_2414B3514();
  v29 = sub_2412C8FC4(&qword_2571253B8, (uint64_t *)&unk_25712A750, MEMORY[0x24BDB9AF8]);
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v23);
  v31 = MEMORY[0x24BDEDC10];
  v32 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v22);
  *(_QWORD *)(v1 + 152) = v30;
  *(_QWORD *)(v1 + 160) = v32;
  v33 = MEMORY[0x24BDED308];
  v34 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v24, v1 + 152);
  v35 = sub_2412C8FC4(&qword_257124AF0, &qword_254383FA8, v31);
  *(_QWORD *)(v1 + 136) = v34;
  *(_QWORD *)(v1 + 144) = v35;
  v36 = MEMORY[0x242695AE8](v33, v25, v1 + 136);
  v37 = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v1 + 120) = v36;
  *(_QWORD *)(v1 + 128) = v37;
  v38 = MEMORY[0x242695AE8](v33, v26, v1 + 120);
  v39 = MEMORY[0x24BDF0390];
  *(_QWORD *)(v1 + 104) = v38;
  *(_QWORD *)(v1 + 112) = v39;
  v40 = MEMORY[0x242695AE8](v33, v27, v1 + 104);
  v41 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v1 + 88) = v40;
  *(_QWORD *)(v1 + 96) = v41;
  v42 = MEMORY[0x242695AE8](v33, v28, v1 + 88);
  *(_QWORD *)(v3 - 176) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v3 - 168) = v28;
  *(_QWORD *)(v3 - 160) = v29;
  *(_QWORD *)(v3 - 152) = v42;
  v43 = sub_2414B35E0();
  MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v43);
  *(_QWORD *)(v3 - 176) = sub_2414B337C();
  *(_QWORD *)(v3 - 168) = v44;
  sub_2414B3520();
  sub_2414B3E44();
  v45 = sub_2414B3388();
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v45);
  sub_2414B42D0();
  swift_release();
  v47 = *(_QWORD *)(v3 - 112);
  v48 = *(_QWORD *)(v3 - 104);
  v49 = *(_BYTE *)(v3 - 96);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v3 - 120);
  *(_QWORD *)(v1 + 64) = v47;
  *(_QWORD *)(v1 + 72) = v48;
  *(_BYTE *)(v1 + 80) = v49;
  v50 = sub_2414B3514();
  v51 = MEMORY[0x24BDF1050];
  *(_QWORD *)(v1 + 40) = v46;
  *(_QWORD *)(v1 + 48) = v51;
  MEMORY[0x242695AE8](v33, v50, v1 + 40);
  sub_2412FBF34(v1 + 56, v50, v3 - 176);
  swift_release();
  v52 = *(_QWORD *)(v3 - 168);
  v53 = *(_QWORD *)(v3 - 160);
  v54 = *(_BYTE *)(v3 - 152);
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 176);
  *(_QWORD *)(v3 - 112) = v52;
  *(_QWORD *)(v3 - 104) = v53;
  *(_BYTE *)(v3 - 96) = v54;
  sub_2412EEA1C(v3 - 120, v50, *(_QWORD *)(v1 + 32));
  return swift_release();
}

void sub_2413A0F00(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingArtworkBackground(0, v4, v5, a1) - 8)
                          + 80);
  sub_2413A0854(v2 + ((v6 + 32) & ~v6), v4, v5, a2);
}

void sub_2413A0F68(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[28];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v25 = a2;
  v16 = a1;
  v21 = a5;
  v7 = type metadata accessor for NowPlayingArtworkBackground(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v18 = v7;
  v19 = v8;
  v20 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v17 = (char *)v13 - v9;
  sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = sub_2414B53B0();
  v31[0] = a4;
  v31[1] = MEMORY[0x24BDEBF50];
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v31);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v11, &v30);
  sub_2414B3A6C();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v14 = sub_2414B4B1C();
  v13[27] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v14);
  v22 = sub_2414B4894();
  v15 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v13[26] = (char *)v13 - v12;
  v23 = a4;
  v24 = a3;
  v26 = a3;
  v27 = a3;
  v28 = a4;
  v29 = a4;
  type metadata accessor for MotionView();
}

uint64_t sub_2413A1120(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  _BYTE v79[96];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v4 = sub_2414B3514();
  v5 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125398);
  v6 = sub_2414B3514();
  v7 = type metadata accessor for MaterialMotionContentObserver(255);
  v8 = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
  v9 = sub_2412C8FC4((unint64_t *)&qword_2571244F8, &qword_2571244F0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v2 - 160) = v8;
  *(_QWORD *)(v2 - 152) = v9;
  v10 = MEMORY[0x24BDED308];
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v2 - 160);
  v12 = MEMORY[0x24BDEEC40];
  *(_QWORD *)(v2 - 176) = v11;
  *(_QWORD *)(v2 - 168) = v12;
  v13 = MEMORY[0x242695AE8](v10, v5, v2 - 176);
  v14 = sub_2412C8FC4(&qword_2571253A0, &qword_257125398, MEMORY[0x24BDEDC10]);
  *(_QWORD *)(v2 - 192) = v13;
  *(_QWORD *)(v2 - 184) = v14;
  v15 = MEMORY[0x242695AE8](v10, v6, v2 - 192);
  v16 = sub_2413A2F74();
  *(_QWORD *)(v2 - 144) = v6;
  *(_QWORD *)(v2 - 136) = v7;
  *(_QWORD *)(v2 - 128) = v15;
  *(_QWORD *)(v2 - 120) = v16;
  MEMORY[0x242695A94](255, v2 - 144, MEMORY[0x24BDF2358], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253A8);
  v17 = sub_2414B3514();
  v18 = sub_2414B53B0();
  *(_QWORD *)(v2 - 144) = v6;
  *(_QWORD *)(v2 - 136) = v7;
  *(_QWORD *)(v2 - 128) = v15;
  *(_QWORD *)(v2 - 120) = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v2 - 208) = OpaqueTypeConformance2;
  *(_QWORD *)(v2 - 200) = v20;
  *(_QWORD *)(v2 - 216) = MEMORY[0x242695AE8](v10, v17, v2 - 208);
  v21 = MEMORY[0x24BDF5578];
  v1[19] = v18;
  v1[20] = MEMORY[0x242695AE8](v21, v18, v2 - 216);
  v1[13] = sub_2414B3604();
  v22 = v1[36];
  v23 = sub_2414B3514();
  v1[24] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v1[16] = (uint64_t)&v79[-v24];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FA8);
  v1[5] = v23;
  v25 = sub_2414B3514();
  v1[22] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v1[17] = (uint64_t)&v79[-v26];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v1[4] = v25;
  v27 = sub_2414B3514();
  v1[21] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v1[15] = (uint64_t)&v79[-v28];
  v29 = sub_2414B3514();
  v1[23] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v1[14] = (uint64_t)&v79[-v30];
  v1[7] = v29;
  v31 = sub_2414B3514();
  v1[25] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v1[18] = (uint64_t)&v79[-v32];
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25712A750);
  v1[11] = v33;
  v34 = sub_2412C8FC4(&qword_2571253B8, (uint64_t *)&unk_25712A750, MEMORY[0x24BDB9AF8]);
  v1[10] = v34;
  v35 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v22);
  *v1 = v35;
  v36 = MEMORY[0x24BDEDC10];
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v1[13]);
  *(_QWORD *)(v2 - 232) = v35;
  *(_QWORD *)(v2 - 224) = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v23, v2 - 232);
  v1[3] = v39;
  v40 = sub_2412C8FC4(&qword_257124AF0, &qword_254383FA8, v36);
  *(_QWORD *)(v2 - 248) = v39;
  *(_QWORD *)(v2 - 240) = v40;
  v41 = MEMORY[0x242695AE8](v38, v25, v2 - 248);
  v1[1] = v41;
  v42 = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  v1[55] = v41;
  v1[56] = v42;
  v43 = MEMORY[0x242695AE8](v38, v27, v1 + 55);
  v1[2] = v43;
  v44 = MEMORY[0x24BDF0390];
  v1[53] = v43;
  v1[54] = v44;
  v45 = MEMORY[0x242695AE8](v38, v29, v1 + 53);
  v1[6] = v45;
  v46 = MEMORY[0x24BDEBEE0];
  v1[51] = v45;
  v1[52] = v46;
  v1[8] = v31;
  v47 = MEMORY[0x242695AE8](v38, v31, v1 + 51);
  v1[9] = v47;
  *(_QWORD *)(v2 - 144) = v33;
  *(_QWORD *)(v2 - 136) = v31;
  *(_QWORD *)(v2 - 128) = v34;
  *(_QWORD *)(v2 - 120) = v47;
  v48 = sub_2414B35E0();
  v1[13] = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v50 = &v79[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v51);
  v1[12] = (uint64_t)&v79[-v52];
  v53 = v1[37];
  v54 = v1[38];
  v1[48] = v54;
  v1[49] = v53;
  v55 = v1[39];
  v1[50] = v55;
  sub_2414B3964();
  v56 = v1[26];
  sub_2414B4888();
  sub_2414B4A2C();
  v1[42] = v54;
  v1[43] = v53;
  v57 = v1[30];
  v1[44] = v55;
  v1[45] = v57;
  v58 = v1[16];
  v59 = v1[36];
  sub_2414B4504();
  (*(void (**)(uint64_t, uint64_t))(v1[29] + 8))(v56, v59);
  sub_2414B4A44();
  sub_2413A489C();
  v60 = v1[17];
  v61 = v1[5];
  sub_2414B4504();
  (*(void (**)(uint64_t, uint64_t))(v1[24] + 8))(v58, v61);
  v62 = v1[15];
  v63 = v1[4];
  sub_2414B44EC();
  (*(void (**)(uint64_t, uint64_t))(v1[22] + 8))(v60, v63);
  v64 = v1[14];
  sub_2414B42E8();
  (*(void (**)(uint64_t, uint64_t))(v1[21] + 8))(v62, v27);
  sub_2414B325C();
  sub_2414B325C();
  sub_2414B4A44();
  v65 = v1[18];
  v66 = v1[7];
  sub_2414B44A4();
  (*(void (**)(uint64_t, uint64_t))(v1[23] + 8))(v64, v66);
  v67 = v1[32];
  v68 = v1[39];
  *(_QWORD *)(v2 - 144) = sub_2413A2D0C();
  v69 = v1[33];
  v70 = v1[31];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v70, v68, v67);
  v71 = v69;
  v72 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v73 = swift_allocObject();
  v74 = v1[37];
  *(_QWORD *)(v73 + 16) = v1[38];
  *(_QWORD *)(v73 + 24) = v74;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v71 + 32))(v73 + v72, v70, v67);
  v75 = v1[8];
  sub_2414B45B8();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1[25] + 8))(v65, v75);
  MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v48);
  v76 = v1[12];
  sub_2412FBF34((uint64_t)v50, v48, v76);
  v77 = *(uint64_t (**)(uint64_t, uint64_t))(v1[13] + 8);
  v77((uint64_t)v50, v48);
  sub_2412EEA1C(v76, v48, v1[35]);
  return v77(v76, v48);
}

uint64_t sub_2413A1918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  char v37;
  uint64_t v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  uint64_t v41;
  _QWORD v42[3];

  v29 = a4;
  v7 = sub_2414B3514();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v25 - v8;
  v10 = sub_2414B3514();
  v11 = sub_2414B53B0();
  v42[0] = a3;
  v42[1] = MEMORY[0x24BDEBF50];
  v41 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v42);
  v25[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v11, &v41);
  v26 = sub_2414B3A6C();
  v12 = sub_2414B3514();
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v25 - v16;
  type metadata accessor for NowPlayingArtworkBackground(0, a2, a3, v18);
  sub_2414B418C();
  v30 = a2;
  v31 = a3;
  v32 = a1;
  sub_2414B4A44();
  v40[0] = a3;
  v40[1] = MEMORY[0x24BDEEC40];
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v40);
  sub_2414B4120();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v26);
  v39[0] = v19;
  v39[1] = v20;
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v39);
  sub_2412FBF34((uint64_t)v14, v12, (uint64_t)v17);
  v22 = v27;
  v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v14, v12);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v14, v17, v12);
  v36 = 0;
  v37 = 1;
  v38[0] = (uint64_t)v14;
  v38[1] = (uint64_t)&v36;
  v35[0] = v12;
  v35[1] = MEMORY[0x24BDF4638];
  v33 = v21;
  v34 = MEMORY[0x24BDF4610];
  sub_2412F68CC(v38, 2uLL, (uint64_t)v35);
  v23(v17, v12);
  return ((uint64_t (*)(char *, uint64_t))v23)(v14, v12);
}

uint64_t sub_2413A1C1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];

  v25 = a3;
  v5 = sub_2414B3514();
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_2414B53B0();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - v15;
  type metadata accessor for NowPlayingArtworkBackground(0, a1, a2, v17);
  if ((sub_2414B2F98() & 1) != 0)
  {
    sub_2414B4B58();
    v18 = a2;
    sub_2414B4204();
    v26[0] = a2;
    v26[1] = MEMORY[0x24BDEBF50];
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v26);
    sub_2412FBF34((uint64_t)v7, v5, (uint64_t)v10);
    v19 = v23;
    v20 = *(void (**)(char *, uint64_t))(v23 + 8);
    v20(v7, v5);
    sub_2412EEA1C((uint64_t)v10, v5, (uint64_t)v13);
    v20(v10, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v13, 1, 1, v5);
    v18 = a2;
    v29[0] = a2;
    v29[1] = MEMORY[0x24BDEBF50];
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v29);
  }
  sub_2412F65F0((uint64_t)v13, (uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v13, v11);
  v28[0] = v18;
  v28[1] = MEMORY[0x24BDEBF50];
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v28);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v11, &v27);
  sub_2412EEA1C((uint64_t)v16, v11, v25);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v11);
}

void sub_2413A1EDC()
{
  type metadata accessor for MotionView();
}

uint64_t sub_2413A1F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  void (*v52)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[80];

  v7 = type metadata accessor for MCUINamespace(0, a1, a3, a4);
  *(_QWORD *)(v5 - 368) = v7;
  *(_QWORD *)(v5 - 376) = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 392) = &v66[-v8];
  *(_QWORD *)(v5 - 448) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v5 - 440) = &v66[-v10];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v11 = sub_2414B3514();
  *(_QWORD *)(v5 - 400) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v5 - 424) = &v66[-v12];
  v13 = sub_2414B3514();
  *(_QWORD *)(v5 - 352) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v5 - 360) = &v66[-v14];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125398);
  v15 = sub_2414B3514();
  *(_QWORD *)(v5 - 328) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v5 - 336) = &v66[-v16];
  v17 = type metadata accessor for MaterialMotionContentObserver(255);
  v18 = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
  v19 = sub_2412C8FC4((unint64_t *)&qword_2571244F8, &qword_2571244F0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v5 - 496) = v18;
  *(_QWORD *)(v5 - 136) = v18;
  *(_QWORD *)(v5 - 128) = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v5 - 136);
  v22 = MEMORY[0x24BDEEC40];
  *(_QWORD *)(v5 - 488) = v21;
  *(_QWORD *)(v5 - 152) = v21;
  *(_QWORD *)(v5 - 144) = v22;
  *(_QWORD *)(v5 - 344) = v13;
  v23 = MEMORY[0x242695AE8](v20, v13, v5 - 152);
  v24 = sub_2412C8FC4(&qword_2571253A0, &qword_257125398, MEMORY[0x24BDEDC10]);
  *(_QWORD *)(v5 - 456) = v23;
  *(_QWORD *)(v5 - 168) = v23;
  *(_QWORD *)(v5 - 160) = v24;
  v25 = MEMORY[0x242695AE8](v20, v15, v5 - 168);
  v26 = sub_2413A2F74();
  *(_QWORD *)(v5 - 256) = v15;
  *(_QWORD *)(v5 - 248) = v17;
  *(_QWORD *)(v5 - 120) = v15;
  *(_QWORD *)(v5 - 112) = v17;
  *(_QWORD *)(v5 - 240) = v25;
  *(_QWORD *)(v5 - 104) = v25;
  *(_QWORD *)(v5 - 96) = v26;
  *(_QWORD *)(v5 - 264) = v26;
  v27 = MEMORY[0x242695A94](0, v5 - 120, MEMORY[0x24BDF2358], 0);
  *(_QWORD *)(v5 - 416) = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v5 - 432) = &v66[-v28];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253A8);
  *(_QWORD *)(v5 - 408) = v27;
  v29 = sub_2414B3514();
  *(_QWORD *)(v5 - 296) = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v5 - 384) = &v66[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v5 - 480) = &v66[-v32];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v33);
  v35 = &v66[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = sub_2414B2A88();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = &v66[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v40);
  v42 = &v66[-v41];
  v43 = sub_2414B53B0();
  *(_QWORD *)(v5 - 280) = v43;
  *(_QWORD *)(v5 - 304) = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v5 - 312) = &v66[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v5 - 288) = &v66[-v46];
  sub_24131A294(v4, (uint64_t)v35);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) != 1)
  {
    *(_QWORD *)(v5 - 504) = v37;
    v52 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32);
    *(_QWORD *)(v5 - 512) = v42;
    v52(v42, v35, v36);
    v53 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(v39, v42, v36);
    MEMORY[0x24BDAC7A8](v53);
    v54 = *(_QWORD *)(v5 - 464);
    v55 = *(_QWORD *)(v5 - 472);
    *(_QWORD *)&v66[-32] = v54;
    *(_QWORD *)&v66[-24] = v55;
    MEMORY[0x24BDAC7A8](v56);
    *(_QWORD *)&v66[-32] = v54;
    *(_QWORD *)&v66[-24] = v55;
    v64 = v55;
    v65 = v55;
    *(_QWORD *)(v5 - 520) = v36;
    sub_241317510((uint64_t)v39);
  }
  sub_24131A14C((uint64_t)v35);
  v47 = *(_QWORD *)(v5 - 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 56))(v47, 1, 1, v29);
  v48 = *(_QWORD *)(v5 - 248);
  *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 256);
  *(_QWORD *)(v5 - 112) = v48;
  v49 = *(_QWORD *)(v5 - 264);
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 240);
  *(_QWORD *)(v5 - 96) = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v51 = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v5 - 184) = OpaqueTypeConformance2;
  *(_QWORD *)(v5 - 176) = v51;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v29, v5 - 184);
  v57 = *(_QWORD *)(v5 - 288);
  sub_2412F65F0(v47, v57);
  v58 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 304) + 8);
  v59 = *(_QWORD *)(v5 - 280);
  v58(v47, v59);
  v60 = *(_QWORD *)(v5 - 248);
  *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 256);
  *(_QWORD *)(v5 - 112) = v60;
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 240);
  *(_QWORD *)(v5 - 96) = v49;
  v61 = swift_getOpaqueTypeConformance2();
  v62 = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v5 - 200) = v61;
  *(_QWORD *)(v5 - 192) = v62;
  *(_QWORD *)(v5 - 208) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v29, v5 - 200);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v59, v5 - 208);
  sub_2412EEA1C(v57, v59, *(_QWORD *)(v5 - 272));
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v57, v59);
}

uint64_t sub_2413A2998@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v25[1] = a1;
  v27 = a4;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125410);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125400);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NowPlayingArtworkBackground(0, a2, a3, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  sub_2414B4AF8();
  v14 = v28;
  swift_getKeyPath();
  *(_QWORD *)&v28 = v14;
  sub_2413A2F74();
  sub_2414B2B84();
  swift_release();
  v15 = *(void **)(v14 + 16);
  v16 = v15;
  swift_release();
  if (!v15)
    goto LABEL_6;
  if ((sub_2414B2F98() & 1) == 0 || (sub_24139FFC4(), (v17 & 1) != 0))
  {

LABEL_6:
    v23 = 1;
    v22 = v27;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v22, v23, 1, v9);
  }
  type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  *(_QWORD *)(swift_allocObject() + 16) = v16;
  v18 = v16;
  sub_2414B31A8();
  sub_2414B325C();
  sub_2414B325C();
  sub_2414B4A44();
  sub_2414B31B4();
  v19 = v26;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v26);

  v20 = &v12[*(int *)(v9 + 36)];
  v21 = v29;
  *(_OWORD *)v20 = v28;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v30;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  v22 = v27;
  sub_2413A4BAC((uint64_t)v12, v27);
  v23 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v22, v23, 1, v9);
}

void sub_2413A2C20(char *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = objc_msgSend((id)objc_opt_self(), sel_playerLayerWithPlayer_, a2);
  v4 = OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent;
  v5 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent] = v3;
  v6 = v3;
  objc_msgSend(v5, sel_removeFromSuperlayer);
  if (*(_QWORD *)&a1[v4])
    objc_msgSend(a1, sel_addSublayer_);

}

uint64_t sub_2413A2CC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_2413A2D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571253D0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25712A740);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  sub_2414B4AF8();
  v8 = v14;
  swift_getKeyPath();
  v14 = v8;
  sub_2413A2F74();
  sub_2414B2B84();
  swift_release();
  v9 = *(void **)(v8 + 16);
  v10 = v9;
  swift_release();
  if (v9)
  {
    swift_getKeyPath();
    sub_2414B29E0();

    swift_release();
    sub_2412C8FC4(&qword_2571253D8, (uint64_t *)&unk_25712A740, MEMORY[0x24BDD0230]);
    v11 = sub_2414B2E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384200);
    sub_2414B2E00();
    sub_2412C8FC4(&qword_2571253E0, &qword_2571253D0, MEMORY[0x24BDB9E20]);
    v11 = sub_2414B2E60();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

uint64_t sub_2413A2F14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*(_BYTE *)(result + 16) & 1) == 0 && (*(double *)result != 0.0 || *(double *)(result + 8) != 0.0))
  {
    type metadata accessor for NowPlayingArtworkBackground(0, a3, a4, a4);
    return sub_2413A0024();
  }
  return result;
}

unint64_t sub_2413A2F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257123990;
  if (!qword_257123990)
  {
    v1 = type metadata accessor for MaterialMotionContentObserver(255);
    result = MEMORY[0x242695AE8](&unk_2414BC2AC, v1);
    atomic_store(result, (unint64_t *)&qword_257123990);
  }
  return result;
}

uint64_t sub_2413A2FBC(uint64_t a1)
{
  swift_release();
  return a1;
}

id sub_2413A2FE4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_presentationSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t NowPlayingArtworkBackgroundTreatment.contentMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NowPlayingArtworkBackgroundTreatment.init(contentMode:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

uint64_t sub_2413A302C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413A3060()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_241324D88(319, &qword_25437D288, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_241324D88(319, (unint64_t *)&qword_2543828B8, type metadata accessor for MaterialMotionContentObserver, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF51D0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2413A314C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(uint64_t *, _QWORD, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = sub_2414B2A88();
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_DWORD *)(v5 + 84))
    v6 = *(_QWORD *)(v5 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64) + 1;
  v37 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v37 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13 & 0xF8 | 7;
  v15 = *(_QWORD *)(v12 + 64) + 7;
  v16 = v8 | *(_DWORD *)(v5 + 80) & 0xF8 | v13 & 0xF8;
  v17 = (v13 | *(_DWORD *)(v5 + 80) | v8) & 0x100000;
  if (v16 > 7
    || v17 != 0
    || (v15 & 0xFFFFFFFFFFFFFFF8)
     + ((v14
       + v10
       + ((v8 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~(unint64_t)v8)
       + 1) & ~v14)
     + 32 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
  }
  else
  {
    v33 = ~(unint64_t)v8;
    v34 = ~v14;
    v35 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    v36 = v11;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      v21 = a1;
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
      v22 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56);
      v21 = a1;
      v22(a1, 0, 1, v4);
    }
    v23 = ((unint64_t)v21 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = *(_QWORD *)v24;
    *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
    *(_QWORD *)v23 = v25;
    v26 = (v23 + v8 + 9) & v33;
    v27 = (v24 + v9 + 9) & v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v26, v27, v37);
    *(_BYTE *)(v26 + v10) = *(_BYTE *)(v27 + v10);
    v28 = (v26 + v10 + v14 + 1) & v34;
    v29 = (v27 + v10 + v14 + 1) & v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v28, v29, v36);
    *(_QWORD *)((v15 + v28) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v15 + v29) & 0xFFFFFFFFFFFFF8);
    v30 = v28 + v35;
    v31 = *(_QWORD *)(v29 + v35);
    *(_BYTE *)(v30 + 8) = *(_BYTE *)(v29 + v35 + 8);
    *(_QWORD *)v30 = v31;
    *(_QWORD *)(v30 + 16) = *(_QWORD *)(v29 + v35 + 16);
    swift_retain();
  }
  swift_retain();
  return v21;
}

uint64_t sub_2413A33D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_2414B2A88();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(_QWORD *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v9 + v12 + v8 + 1) & ~v12, v10);
  swift_release();
  return swift_release();
}

void *sub_2413A34D4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 9 + v13) & ~v17;
  v19 = (v17 + 9 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v18, v19);
  v20 = *(_QWORD *)(v16 + 64);
  v21 = (_BYTE *)(v18 + v20);
  v22 = (_BYTE *)(v19 + v20);
  *v21 = *v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  v26 = v25 + 8;
  v27 = (unint64_t)&v21[v25 + 8];
  v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  v29 = v27 & v28;
  v30 = (unint64_t)&v22[v26] & v28;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16))(v27 & v28, v30, v23);
  v31 = *(_QWORD *)(v24 + 64) + 7;
  *(_QWORD *)((v31 + v29) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v31 + v30) & 0xFFFFFFFFFFFFF8);
  v32 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
  v33 = v32 + v29;
  v34 = v32 + v30;
  v35 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v35;
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2413A3694(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = v12 + 7;
  v14 = ((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 9 + v14) & ~v18;
  v20 = (v18 + 9 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8;
  v27 = v26 + 8;
  v28 = (unint64_t)&v22[v26 + 8];
  v29 = ~v26 & 0xFFFFFFFFFFFFFFF8;
  v30 = v28 & v29;
  v31 = (unint64_t)&v23[v27] & v29;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 24))(v28 & v29, v31, v24);
  v32 = *(_QWORD *)(v25 + 64) + 7;
  *(_QWORD *)((v32 + v30) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v31) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v33 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
  v34 = v33 + v30;
  v35 = v33 + v31;
  v36 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_2413A38B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 9 + v13) & ~v17;
  v19 = (v17 + 9 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v18, v19);
  v20 = *(_QWORD *)(v16 + 64);
  v21 = (_BYTE *)(v18 + v20);
  v22 = (_BYTE *)(v19 + v20);
  *v21 = *v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  v26 = v25 + 8;
  v27 = (unint64_t)&v21[v25 + 8];
  v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  v29 = v27 & v28;
  v30 = (unint64_t)&v22[v26] & v28;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 32))(v27 & v28, v30, v23);
  v31 = *(_QWORD *)(v24 + 64) + 7;
  *(_QWORD *)((v31 + v29) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v31 + v30) & 0xFFFFFFFFFFFFF8);
  v32 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
  v33 = v32 + v29;
  v34 = v32 + v30;
  v35 = *(_QWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_QWORD *)(v33 + 16) = v35;
  return a1;
}

void *sub_2413A3A60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = v12 + 7;
  v14 = ((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 9 + v14) & ~v18;
  v20 = (v18 + 9 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8;
  v27 = v26 + 8;
  v28 = (unint64_t)&v22[v26 + 8];
  v29 = ~v26 & 0xFFFFFFFFFFFFFFF8;
  v30 = v28 & v29;
  v31 = (unint64_t)&v23[v27] & v29;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))(v28 & v29, v31, v24);
  v32 = *(_QWORD *)(v25 + 64) + 7;
  *(_QWORD *)((v32 + v30) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v31) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v33 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
  v34 = v33 + v30;
  v35 = v33 + v31;
  v36 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  swift_release();
  return a1;
}

uint64_t sub_2413A3C70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t);
  unsigned int v32;
  unint64_t v33;
  int v34;
  unint64_t v35;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9)
    v13 = v9;
  else
    v13 = *(_DWORD *)(v11 + 84);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int *)(v15 + 84);
  if (v16 <= 0x7FFFFFFE)
    v17 = 2147483646;
  else
    v17 = *(_DWORD *)(v15 + 84);
  if (v13 <= v17)
    v18 = v17;
  else
    v18 = v13;
  if ((_DWORD)v8)
    v19 = *(_QWORD *)(v7 + 64);
  else
    v19 = *(_QWORD *)(v7 + 64) + 1;
  if (!a2)
    return 0;
  v20 = v14;
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v23 = *(_QWORD *)(v11 + 64) + 1;
  v24 = *(_QWORD *)(v15 + 64) + 7;
  v25 = v24 & 0xFFFFFFFFFFFFFFF8;
  if (v18 < a2)
  {
    if (((v25 + ((v23 + v22 + ((v21 + ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v21)) & ~v22) + 32) & 0xFFFFFFF8) != 0)
      v26 = 2;
    else
      v26 = a2 - v18 + 1;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v28 = v27;
    else
      v28 = 0;
    __asm { BR              X5 }
  }
  if (v9 != v18)
  {
    v30 = (((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) + v21 + 9) & ~v21;
    if ((_DWORD)v12 == v18)
    {
      v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
      v16 = v12;
      v20 = v10;
    }
    else
    {
      v30 = (v23 + v30 + v22) & ~v22;
      if (v17 < v13)
      {
        v33 = *(_QWORD *)(v30 + v25 + 8 + 16);
        if (v33 >= 0xFFFFFFFF)
          LODWORD(v33) = -1;
        v34 = v33 - 1;
        if (v34 < 0)
          v34 = -1;
        return (v34 + 1);
      }
      if (v16 < 0x7FFFFFFE)
      {
        v35 = *(_QWORD *)((v24 + v30) & 0xFFFFFFFFFFFFF8);
        if (v35 >= 0xFFFFFFFF)
          LODWORD(v35) = -1;
        if ((v35 + 1) >= 2)
          return v35;
        else
          return 0;
      }
      v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v15 + 48);
    }
    return v31(v30, v16, v20);
  }
  if (v8 < 2)
    return 0;
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
  if (v32 >= 2)
    return v32 - 1;
  else
    return 0;
}

void sub_2413A3F04(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v7 = *(_QWORD *)(sub_2414B2A88() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = 0;
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0) - 8);
  if (*(_DWORD *)(v13 + 84) <= 0x7FFFFFFEu)
    v14 = 2147483646;
  else
    v14 = *(_DWORD *)(v13 + 84);
  if (v11 <= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v8)
    v16 = *(_QWORD *)(v7 + 64);
  else
    v16 = *(_QWORD *)(v7 + 64) + 1;
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v19 = (*(_QWORD *)(v13 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v15 < a3)
  {
    if ((_DWORD)v19
       + ((*(_DWORD *)(v10 + 64)
         + 1
         + (_DWORD)v18
         + (((_DWORD)v17 + (((_DWORD)v16 + 7) & 0xFFFFFFF8) + 9) & ~(_DWORD)v17)) & ~(_DWORD)v18) == -32)
      v20 = a3 - v15 + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v12 = v21;
    else
      v12 = 0;
  }
  if (a2 > v15)
  {
    if ((_DWORD)v19
       + ((*(_DWORD *)(v10 + 64)
         + 1
         + (_DWORD)v18
         + (((_DWORD)v17 + (((_DWORD)v16 + 7) & 0xFFFFFFF8) + 9) & ~(_DWORD)v17)) & ~(_DWORD)v18) != -32)
    {
      v22 = ~v15 + a2;
      bzero(a1, v19+ ((*(_QWORD *)(v10 + 64) + 1 + v18 + ((v17 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v17)) & ~v18)+ 32);
      *a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_2413A40A0(uint64_t a1@<X0>, size_t a2@<X1>, unsigned int a3@<W2>, unsigned int a4@<W7>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unsigned int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  void (*v36)(void);
  unint64_t v37;
  _DWORD *v38;
  unsigned int v39;
  _QWORD *v40;

  *(_BYTE *)(a1 + v33) = 0;
  if (a4)
  {
    if (v30 == v23)
    {
      v36 = *(void (**)(void))(v32 + 56);
LABEL_6:
      v36();
      return;
    }
    v37 = (((a1 + v27 + 7) & 0xFFFFFFFFFFFFFFF8) + v26 + 9) & v29;
    if (v31 == v23)
    {
      v36 = *(void (**)(void))(v34 + 56);
      goto LABEL_6;
    }
    v38 = (_DWORD *)((v25 + v37 + v24) & v28);
    if (v21 >= v35)
    {
      if (v21 >= a4)
      {
        if (a3 >= 0x7FFFFFFE)
        {
          v36 = *(void (**)(void))(a5 + 56);
          goto LABEL_6;
        }
        v40 = (_QWORD *)(((unint64_t)v38 + v22) & 0xFFFFFFFFFFFFFFF8);
        if (a4 > 0x7FFFFFFE)
        {
          *v40 = 0;
          *(_DWORD *)v40 = a4 - 0x7FFFFFFF;
        }
        else
        {
          *v40 = a4;
        }
      }
      else if ((_DWORD)a2)
      {
        v39 = ~v21 + a4;
        bzero((void *)((v25 + v37 + v24) & v28), a2);
        *v38 = v39;
      }
    }
    else
    {
      *(_QWORD *)((char *)v38 + a2 + 16) = a4;
    }
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtworkBackgroundTreatment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2413A423C + 4 * byte_2414C0844[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2413A4270 + 4 * byte_2414C083F[v4]))();
}

uint64_t sub_2413A4270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413A4278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413A4280);
  return result;
}

uint64_t sub_2413A428C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413A4294);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2413A4298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413A42A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkBackgroundTreatment()
{
  return &type metadata for NowPlayingArtworkBackgroundTreatment;
}

void sub_2413A42BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25712A750);
  sub_2414B3514();
  v2 = sub_2414B3514();
  v3 = sub_2414B53B0();
  v6[0] = v1;
  v6[1] = MEMORY[0x24BDEBF50];
  v5 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v6);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v3, &v5);
  sub_2414B3A6C();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  sub_2414B4894();
  type metadata accessor for MotionView();
}

uint64_t sub_2413A43F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[24];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571244F0);
  v4 = sub_2414B3514();
  v5 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125398);
  v6 = sub_2414B3514();
  v7 = type metadata accessor for MaterialMotionContentObserver(255);
  v8 = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
  v9 = MEMORY[0x24BDF1028];
  v10 = sub_2412C8FC4((unint64_t *)&qword_2571244F8, &qword_2571244F0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v2 - 160) = v8;
  *(_QWORD *)(v2 - 152) = v10;
  v11 = v1;
  v44[0] = MEMORY[0x242695AE8](v1, v4, v2 - 160);
  v44[1] = MEMORY[0x24BDEEC40];
  v43[0] = MEMORY[0x242695AE8](v1, v5, v44);
  v43[1] = sub_2412C8FC4(&qword_2571253A0, &qword_257125398, MEMORY[0x24BDEDC10]);
  v12 = MEMORY[0x242695AE8](v1, v6, v43);
  v13 = sub_2413A2F74();
  *(_QWORD *)(v2 - 144) = v6;
  *(_QWORD *)(v2 - 136) = v7;
  *(_QWORD *)(v2 - 128) = v12;
  *(_QWORD *)(v2 - 120) = v13;
  MEMORY[0x242695A94](255, v2 - 144, MEMORY[0x24BDF2358], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253A8);
  v14 = sub_2414B3514();
  v15 = sub_2414B53B0();
  *(_QWORD *)(v2 - 144) = v6;
  *(_QWORD *)(v2 - 136) = v7;
  *(_QWORD *)(v2 - 128) = v12;
  *(_QWORD *)(v2 - 120) = v13;
  v42[0] = swift_getOpaqueTypeConformance2();
  v42[1] = sub_2412C8FC4(&qword_2571253B0, &qword_2571253A8, v9);
  v41 = MEMORY[0x242695AE8](v11, v14, v42);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v15, &v41);
  v16 = sub_2414B3604();
  v17 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FA8);
  v18 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v19 = sub_2414B3514();
  v20 = sub_2414B3514();
  v21 = sub_2414B3514();
  v22 = sub_2412C8FC4(&qword_2571253B8, (uint64_t *)&unk_25712A750, MEMORY[0x24BDB9AF8]);
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700]);
  v24 = MEMORY[0x24BDEDC10];
  v40[0] = v23;
  v40[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v16);
  v25 = MEMORY[0x24BDED308];
  v39[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v17, v40);
  v39[1] = sub_2412C8FC4(&qword_257124AF0, &qword_254383FA8, v24);
  v38[0] = MEMORY[0x242695AE8](v25, v18, v39);
  v38[1] = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  v37[0] = MEMORY[0x242695AE8](v25, v19, v38);
  v37[1] = MEMORY[0x24BDF0390];
  v36[0] = MEMORY[0x242695AE8](v25, v20, v37);
  v36[1] = MEMORY[0x24BDEBEE0];
  v26 = MEMORY[0x242695AE8](v25, v21, v36);
  *(_QWORD *)(v2 - 144) = v34;
  *(_QWORD *)(v2 - 136) = v21;
  *(_QWORD *)(v2 - 128) = v22;
  *(_QWORD *)(v2 - 120) = v26;
  v27 = sub_2414B35E0();
  MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v27);
  v28 = sub_2414B3388();
  v29 = sub_2414B3514();
  v35[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v28);
  v35[1] = MEMORY[0x24BDF1050];
  v30 = MEMORY[0x242695AE8](v25, v29, v35);
  v32 = type metadata accessor for WithNamespace(255, v29, v30, v31);
  return MEMORY[0x242695AE8](&unk_2414C55A0, v32);
}

void sub_2413A481C(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingArtworkBackground(0, v6, v7, a2) - 8)
                          + 80);
  sub_2413A0F68(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_2413A4884@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413A1918(v1[4], v1[2], v1[3], a1);
}

void sub_2413A4890()
{
  sub_2413A1EDC();
}

unint64_t sub_2413A489C()
{
  unint64_t result;

  result = qword_2571253C0;
  if (!qword_2571253C0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C33E4, &type metadata for NowPlayingArtworkBackgroundEffect);
    atomic_store(result, (unint64_t *)&qword_2571253C0);
  }
  return result;
}

uint64_t sub_2413A48E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingArtworkBackground(0, v6, v7, a4) - 8)
                          + 80);
  return sub_2413A2F14(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

char *keypath_get_selector_presentationSize()
{
  return sel_presentationSize;
}

id sub_2413A4954@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_presentationSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_2413A49A8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2[2];
  v4 = v2[3];
  v6 = v2[4];
  v7 = v6 + *(int *)(type metadata accessor for NowPlayingArtworkBackground(0, v5, v4, a1) + 40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v7, v5);
}

uint64_t sub_2413A49F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413A2998(v1[5], v1[2], v1[3], a1);
}

unint64_t sub_2413A4A04()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2571253F0;
  if (!qword_2571253F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571253E8);
    v2 = sub_2413A4A68();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571253F0);
  }
  return result;
}

unint64_t sub_2413A4A68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571253F8;
  if (!qword_2571253F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125400);
    v2[0] = sub_2412C8FC4(&qword_257125408, &qword_257125410, MEMORY[0x24BDEBEC0]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571253F8);
  }
  return result;
}

uint64_t sub_2413A4AEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24131A0B4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2413A4B38()
{
  sub_24131A0B4();
  return sub_2414B3844();
}

uint64_t sub_2413A4B80()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2413A4BA4(char *a1)
{
  uint64_t v1;

  sub_2413A2C20(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2413A4BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413A4BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413A1C1C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2413A4C00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413A4C24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241417128(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_2413A4C2C()
{
  uint64_t v0;

  sub_241358CFC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_2413A4C4C()
{
  uint64_t v0;

  sub_241358DB8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t View.viewPresenting<A, B>(_:modifier:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  _QWORD v23[2];

  v22[0] = a1;
  v22[1] = a7;
  v12 = *a1;
  v13 = sub_2414B3514();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v22 - v16;
  MEMORY[0x242693DC0](a2, a3, a4, a5, v15);
  v20 = type metadata accessor for PresentedViewState(0, *(_QWORD *)(v12 + 80), v18, v19);
  v23[0] = a5;
  v23[1] = a6;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v23);
  MEMORY[0x242695AE8](&protocol conformance descriptor for PresentedViewState<A>, v20);
  sub_2414B430C();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t type metadata accessor for PresentedViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PresentedViewState);
}

uint64_t PresentedViewState.isPresented.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PresentedViewState.isPresented.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_2413A4E94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2413A4EC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2413A4EEC()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_2413A4F10()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_2413A4F34()
{
  return 8;
}

_QWORD *sub_2413A4F40(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void (*PresentedViewState.isPresented.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2414B2E30();
  return sub_2413A4FE4;
}

void sub_2413A4FE4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t PresentedViewState.$isPresented.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E18();
  return swift_endAccess();
}

uint64_t sub_2413A5090(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return PresentedViewState.$isPresented.setter((uint64_t)v5);
}

uint64_t PresentedViewState.$isPresented.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E24();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*PresentedViewState.$isPresented.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  PresentedViewState.$isPresented.getter();
  return sub_2413A526C;
}

void sub_2413A526C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    PresentedViewState.$isPresented.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PresentedViewState.$isPresented.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t PresentedViewState.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v4 = sub_2414B53B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PresentedViewState.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PresentedViewState.init()();
  return v0;
}

uint64_t *PresentedViewState.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (uint64_t)v0 + qword_254382690;
  v7 = *(_QWORD *)(v1 + 80);
  v9[15] = 0;
  sub_2414B2E0C();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v6, v5, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), 1, 1, v7);
  return v0;
}

uint64_t PresentedViewState.present(_:animated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = sub_2414B53B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v14 - v9, a1, v5, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
  v12 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v12, v10, v6);
  swift_endAccess();
  if ((a2 & 1) == 0)
    return PresentedViewState.isPresented.setter();
  sub_2414B4AC8();
  sub_2414B3328();
  return swift_release();
}

uint64_t sub_2413A559C()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t PresentedViewState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + qword_254382690;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v4 = sub_2414B53B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t PresentedViewState.__deallocating_deinit()
{
  PresentedViewState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2413A5668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_2413A5690()
{
  return 8;
}

uint64_t sub_2413A569C()
{
  return PresentedViewState.$isPresented.getter();
}

uint64_t sub_2413A56C0()
{
  return 8;
}

void sub_2413A56CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_241300FC8();
  if (v0 <= 0x3F)
  {
    sub_2414B53B0();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t method lookup function for PresentedViewState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PresentedViewState.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_2413A576C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = sub_2414B3514();
  type metadata accessor for PresentedViewState(255, v2, v4, v5);
  sub_2414B53B0();
  v6 = sub_2414B3DA8();
  v7 = sub_2414B3514();
  v11 = *(_OWORD *)(a1 + 24);
  v8 = MEMORY[0x24BDED308];
  v10[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, &v11);
  v10[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v6);
  return MEMORY[0x242695AE8](v8, v7, v10);
}

uint64_t sub_2413A5838()
{
  sub_24135B9BC();
  return sub_2414B3838();
}

BOOL static VideoGravity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VideoGravity.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t VideoGravity.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t MCUINamespace<A>.videoGravity(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char v9;
  _BYTE v11[16];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2, v3, v5);
  swift_getKeyPath();
  v11[15] = v9;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_2413A59BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24135B9BC();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2413A5A08()
{
  sub_24135B9BC();
  return sub_2414B3844();
}

uint64_t sub_2413A5A50()
{
  sub_2413A5B60();
  return sub_2414B3340();
}

uint64_t View.videoGravity(_:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[15];
  char v12;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v11[-v8]);
  v12 = (char)a1;
  MCUINamespace<A>.videoGravity(_:)((uint64_t)&v12, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2413A5B60()
{
  unint64_t result;

  result = qword_257125418;
  if (!qword_257125418)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for VideoGravity, &type metadata for VideoGravity);
    atomic_store(result, (unint64_t *)&qword_257125418);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoGravity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2413A5BF0 + 4 * byte_2414C0B8D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2413A5C24 + 4 * asc_2414C0B88[v4]))();
}

uint64_t sub_2413A5C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413A5C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413A5C34);
  return result;
}

uint64_t sub_2413A5C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413A5C48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2413A5C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413A5C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoGravity()
{
  return &type metadata for VideoGravity;
}

uint64_t sub_2413A5C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382868);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2413A5CD0();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2413A5CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254382860;
  if (!qword_254382860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382868);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254382860);
  }
  return result;
}

ValueMetadata *_s10GravityKeyVMa()
{
  return &_s10GravityKeyVN;
}

uint64_t sub_2413A5D2C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6573756170;
    else
      v3 = 1886352499;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6573756170;
      else
        v6 = 1886352499;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 2036427888;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 2036427888)
  {
LABEL_21:
    v8 = sub_2414B57D0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2413A5E1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x676E696B63617274;
    else
      v3 = 0x6172656C65636564;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xEC000000676E6974;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x676E696B63617274;
      else
        v6 = 0x6172656C65636564;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEC000000676E6974;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701602409;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701602409)
  {
LABEL_21:
    v8 = sub_2414B57D0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2413A5F34(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2414B5608();
    for (i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      v9 = *(i - 1);
      v10 = *i;
      v11[0] = *(i - 2);
      v11[1] = v9;
      v11[2] = v10;
      swift_bridgeObjectRetain();
      a1(&v12, v11);
      swift_bridgeObjectRelease();
      if (v3)
        break;
      sub_2414B55F0();
      sub_2414B5614();
      sub_2414B5620();
      sub_2414B55FC();
      if (!--v5)
        return v13;
    }
    return swift_release();
  }
  return result;
}

_QWORD *sub_2413A6038(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *(*v15)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))result;
  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = v4;
  v7 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return (_QWORD *)v7;
  v18 = MEMORY[0x24BEE4AF8];
  result = (_QWORD *)sub_2413BEE8C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = v18;
    if (a4 <= a3)
      v10 = a3;
    else
      v10 = a4;
    v11 = a3;
    while (a4 != v11)
    {
      v16 = v11;
      result = v15(&v17, &v16);
      if (v6)
      {
        swift_release();
        return (_QWORD *)v7;
      }
      v6 = 0;
      v12 = v17;
      v18 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        result = (_QWORD *)sub_2413BEE8C(v13 > 1, v14 + 1, 1);
        v7 = v18;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      *(_QWORD *)(v7 + 8 * v14 + 32) = v12;
      if (a4 < a3)
        goto LABEL_19;
      if (v10 == v11)
        goto LABEL_20;
      if (a4 == ++v11)
        return (_QWORD *)v7;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2413A6184(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a4 + 16);
  if (!a2)
  {
    v12 = *(_QWORD *)(a4 + 16);
    v6 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    v12 = *(_QWORD *)(a4 + 16);
    v6 = 0;
    goto LABEL_14;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
LABEL_16:
    v12 = 0;
    goto LABEL_14;
  }
  v8 = a2;
  v9 = 0;
  v10 = (uint64_t *)(a4 + 24 * v6 + 24);
  v11 = a3 - 1;
  while (1)
  {
    v12 = v6 + v9 - 1;
    v13 = *(v10 - 1);
    v14 = *v10;
    *v8 = *(v10 - 2);
    v8[1] = v13;
    v8[2] = v14;
    if (!(v11 + v9))
      break;
    if (v6 + v9 == 1)
      goto LABEL_11;
    v12 = *(_QWORD *)(a4 + 16);
    swift_bridgeObjectRetain();
    --v9;
    v10 -= 3;
    v8 += 3;
    if (v6 + v9 > v12)
    {
      __break(1u);
      break;
    }
  }
  v6 = a3;
LABEL_11:
  swift_bridgeObjectRetain();
LABEL_14:
  *a1 = a4;
  a1[1] = v12;
  return v6;
}

uint64_t sub_2413A6270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  _QWORD v19[10];

  v19[0] = a6;
  v19[1] = a7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2414B30B8();
  v17 = MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, v7, a3, v17);
  sub_2414B30C4();
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = v19[0];
  v19[8] = a1;
  v19[9] = a2;
  MEMORY[0x242695AE8](MEMORY[0x24BDEB998], v16);
  return sub_2414B3310();
}

uint64_t sub_2413A63A0()
{
  return sub_2414B370C();
}

uint64_t sub_2413A63C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

id sub_2413A63D4()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB26B8]), sel_init);
  result = objc_msgSend(v0, sel_setStyle_, 1);
  qword_257136EF8 = (uint64_t)v0;
  return result;
}

uint64_t sub_2413A6420()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  result = sub_2414B4D80();
  qword_257136F00 = result;
  *(_QWORD *)algn_257136F08 = v4;
  return result;
}

uint64_t sub_2413A6534(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v16[-v10];
  v12 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 64);
  swift_getKeyPath();
  v17 = v12;
  v18 = a1;
  v19 = a2 & 1;
  v20 = v12;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B78();
  swift_release();
  v13 = sub_2414B2B00();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  v14 = v3 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate;
  swift_beginAccess();
  sub_2412DC3FC(v14, (uint64_t)v8, &qword_2571264F0);
  swift_beginAccess();
  sub_2413C4CF4((uint64_t)v11, v14);
  swift_endAccess();
  sub_2413A7558((uint64_t)v8);
  sub_2412CBE78((uint64_t)v11, &qword_2571264F0);
  return sub_2412CBE78((uint64_t)v8, &qword_2571264F0);
}

uint64_t sub_2413A66F4(double a1)
{
  double v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  char *v23;
  double v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - v7;
  v9 = sub_2414B2CA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v9, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_retain_n();
  v14 = sub_2414B2C8C();
  v15 = sub_2414B51B8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (_DWORD *)swift_slowAlloc();
    v23 = v5;
    v17 = v16;
    *v16 = 134218240;
    v24 = a1;
    sub_2414B541C();
    *((_WORD *)v17 + 6) = 2048;
    v22 = (char *)v17 + 14;
    swift_getKeyPath();
    v24 = v1;
    sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
    sub_2414B2B84();
    swift_release();
    v24 = *(double *)(*(_QWORD *)&v1 + 24);
    sub_2414B541C();
    swift_release_n();
    _os_log_impl(&dword_2412C1000, v14, v15, "ScrubberViewModel.playbackRate changed from %f to %f", (uint8_t *)v17, 0x16u);
    v18 = v17;
    v5 = v23;
    MEMORY[0x242695BD8](v18, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = sub_2414B2B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  v20 = *(_QWORD *)&v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate;
  swift_beginAccess();
  sub_2412DC3FC(v20, (uint64_t)v5, &qword_2571264F0);
  swift_beginAccess();
  sub_2413C4CF4((uint64_t)v8, v20);
  swift_endAccess();
  sub_2413A7558((uint64_t)v5);
  sub_2412CBE78((uint64_t)v8, &qword_2571264F0);
  return sub_2412CBE78((uint64_t)v5, &qword_2571264F0);
}

double sub_2413A6A20()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 24);
}

double sub_2413A6AA4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_2413A6B30()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A6BE0()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t sub_2413A6C74@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  v5 = *(_QWORD *)(v3 + 32);
  v4 = *(_QWORD *)(v3 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_2412FFEC8;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_2413A6D28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

uint64_t sub_2413A6E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;

  v1 = 0x2D2D3A2D2DLL;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v3 + 32) & 1) == 0)
  {
    v4 = *(double *)(v3 + 24);
    swift_getKeyPath();
    sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
    sub_2414B2B84();
    swift_release();
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels) & 1) == 0)
    {
      if (qword_2571207E0 != -1)
        swift_once();
      v5 = (void *)qword_257136EF8;
      swift_getKeyPath();
      sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
      sub_2414B2B84();
      swift_release();
      v6 = objc_msgSend(v5, sel_stringFromSeconds_, v4 - *(double *)(v2 + 96));
      v1 = sub_2414B4D68();

    }
  }
  return v1;
}

void sub_2413A6FF0(uint64_t a1)
{
  uint64_t v1;
  UIAccessibilityNotifications v3;
  void *v4;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  if (*(_QWORD *)(v1 + 48) != a1)
  {
    v3 = *MEMORY[0x24BEBDDB0];
    swift_getKeyPath();
    sub_2414B2B84();
    swift_release();
    sub_2413A70F0(*(_QWORD *)(v1 + 48));
    v4 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification(v3, v4);

  }
}

uint64_t sub_2413A70F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;

  v2 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v3);
  switch(a1)
  {
    case 0:
      sub_2414B4CF0();
      if (qword_2543846C8 != -1)
        goto LABEL_12;
      goto LABEL_10;
    case 1:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
      goto LABEL_12;
    case 2:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
      goto LABEL_12;
    case 3:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
LABEL_12:
      swift_once();
LABEL_10:
      v5 = (id)qword_25438E910;
      sub_2414B2B3C();
      result = sub_2414B4D80();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_2413A73A4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_2413A7428@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_QWORD *)(v3 + 48);
  return result;
}

uint64_t sub_2413A74B4()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A7558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int (*v18)(_BYTE *, uint64_t, uint64_t);
  void (*v20)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t KeyPath;
  void (*v30)(_BYTE *, uint64_t);
  _BYTE v31[16];
  uint64_t v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v31[-v8];
  v10 = sub_2414B2B00();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v31[-v15];
  v17 = v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate;
  swift_beginAccess();
  sub_2412DC3FC(v17, (uint64_t)v9, &qword_2571264F0);
  v18 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  if (v18(v9, 1, v10) == 1)
    return sub_2412CBE78((uint64_t)v9, &qword_2571264F0);
  v20 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  sub_2412DC3FC(a1, (uint64_t)v6, &qword_2571264F0);
  if (v18(v6, 1, v10) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v16, v10);
    return sub_2412CBE78((uint64_t)v6, &qword_2571264F0);
  }
  else
  {
    v20(v13, v6, v10);
    v21 = *(_QWORD *)(v2 + 16);
    v22 = *(_QWORD *)(v21 + 64);
    swift_getKeyPath();
    v32 = v22;
    sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
    sub_2414B2B84();
    swift_release();
    if ((*(_BYTE *)(v22 + 32) & 1) == 0)
    {
      v23 = *(double *)(v22 + 24);
      sub_2414B2AC4();
      v25 = v24;
      swift_getKeyPath();
      v32 = v2;
      sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
      sub_2414B2B84();
      swift_release();
      v26 = v25 * *(double *)(v2 + 24);
      swift_getKeyPath();
      v32 = v21;
      sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
      sub_2414B2B84();
      swift_release();
      v27 = v26 + *(double *)(v21 + 96);
      if (v27 <= 0.0)
        v27 = 0.0;
      if (v23 >= v27)
        v28 = v27;
      else
        v28 = v23;
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(_QWORD *)&v31[-16] = v21;
      *(double *)&v31[-8] = v28;
      v32 = v21;
      sub_2414B2B78();
      swift_release();
    }
    v30 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v30(v13, v10);
    return ((uint64_t (*)(_BYTE *, uint64_t))v30)(v16, v10);
  }
}

uint64_t sub_2413A78FC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(uint64_t *);
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 16);
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  swift_release();
  swift_getKeyPath();
  v6 = v1;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  v4 = *(void (**)(uint64_t *))(v1 + 32);
  swift_getKeyPath();
  v6 = v3;
  swift_retain();
  sub_2414B2B84();
  swift_release();
  v6 = *(_QWORD *)(v3 + 96);
  v7 = v2;
  v4(&v6);
  return swift_release();
}

void sub_2413A7A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126688);
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126690);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126698);
  v44 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_proxySubscribers);
  swift_beginAccess();
  *v16 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  if (a1)
  {
    v40 = v6;
    v41 = v4;
    v46 = *(_QWORD *)(a1 + 16);
    sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
    v38 = v9;
    swift_retain();
    v47 = (id)sub_2414B5230();
    v17 = sub_2414B520C();
    v45 = v2;
    v18 = v17;
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v37(v12, 1, 1, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257125548);
    v19 = a1;
    sub_2412C8FC4(&qword_2571266C0, &qword_257125548, MEMORY[0x24BDB9D10]);
    v39 = v7;
    v36[1] = sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    sub_2414B2E84();
    sub_2412CBE78((uint64_t)v12, (uint64_t *)&unk_2543842B0);

    swift_release();
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v20;
    a1 = v19;
    sub_2412C8FC4(&qword_2571266C8, &qword_257126698, MEMORY[0x24BDB9A08]);
    sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
    swift_beginAccess();
    sub_2414B2D70();
    swift_endAccess();
    swift_release();
    v46 = *(_QWORD *)(v19 + 24);
    swift_retain();
    v47 = (id)sub_2414B5230();
    v37(v12, 1, 1, v18);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA60);
    sub_2412C8FC4((unint64_t *)&unk_25437DA50, (uint64_t *)&unk_25437DA60, MEMORY[0x24BDB9CB0]);
    v23 = v38;
    v4 = v41;
    sub_2414B2E84();
    sub_2412CBE78((uint64_t)v12, (uint64_t *)&unk_2543842B0);

    swift_release();
    v24 = swift_allocObject();
    swift_weakInit();
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = v24;
    sub_2412C8FC4(&qword_2571266B8, &qword_257126690, MEMORY[0x24BDB9A08]);
    v27 = v40;
    sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v27);
    swift_beginAccess();
    sub_2414B2D70();
    swift_endAccess();
    swift_release();
  }
  v28 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v29 = objc_msgSend(v28, sel_launchedToTest);

  if (a1)
  {
    if (v29)
    {
      v30 = *(_QWORD *)(a1 + 32);
      v45 = a1;
      v46 = v30;
      sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
      swift_retain();
      v47 = (id)sub_2414B5230();
      v31 = sub_2414B520C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381838);
      sub_2412C8FC4(&qword_2571266A0, (uint64_t *)&unk_254381838, MEMORY[0x24BDB9CB0]);
      sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
      v32 = v42;
      sub_2414B2E84();
      sub_2412CBE78((uint64_t)v12, (uint64_t *)&unk_2543842B0);

      swift_release();
      v33 = swift_allocObject();
      swift_weakInit();
      v34 = swift_allocObject();
      swift_weakInit();
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v34;
      *(_QWORD *)(v35 + 24) = v33;
      sub_2412C8FC4((unint64_t *)&unk_2571266A8, &qword_257126688, MEMORY[0x24BDB9A08]);
      sub_2414B2EB4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v4);
      swift_beginAccess();
      sub_2414B2D70();
      swift_endAccess();
      swift_release();
    }
  }
}

uint64_t sub_2413A81B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t KeyPath;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25[3];

  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a3 + 16;
  if (qword_257120888 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_retain_n();
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v23[1] = v10;
    v14 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    v25[0] = v23[0];
    *(_DWORD *)v14 = 134218242;
    v23[2] = v9;
    sub_2414B541C();
    *(_WORD *)(v14 + 12) = 2082;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v24 = Strong;
      v16 = sub_2414B4D8C();
      v18 = v17;
      swift_release();
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v24 = sub_2412E4890(v16, v18, v25);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, v13, "ScrubberViewModel seeking to time %f requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    v19 = v23[0];
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v19, -1, -1);
    MEMORY[0x242695BD8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v21 = *(_QWORD *)(result + 16);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v23[-2] = v21;
    v23[-1] = v9;
    v24 = v21;
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B78();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413A8524(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26[3];

  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a3 + 16;
  if (qword_257120888 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_retain_n();
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v23 = v10;
    v14 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)v14 = 134218242;
    v25 = v9;
    sub_2414B541C();
    *(_WORD *)(v14 + 12) = 2082;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v24 = Strong;
      v16 = sub_2414B4D8C();
      v18 = v17;
      swift_release();
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v24 = sub_2412E4890(v16, v18, v26);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, v13, "ScrubberViewModel notifying jumped by %f requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v19, -1, -1);
    MEMORY[0x242695BD8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2413AD8C4(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_2413A87F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v9) = *a1;
  v10 = a3 + 16;
  if (qword_257120888 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_retain_n();
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  if (os_log_type_enabled(v12, v13))
  {
    v28 = v10;
    v14 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)v14 = 136315394;
    v15 = 0xE800000000000000;
    v16 = 0x676E696B63617274;
    if ((_DWORD)v9 != 1)
    {
      v16 = 0x6172656C65636564;
      v15 = 0xEC000000676E6974;
    }
    v29 = v9;
    if ((_DWORD)v9)
      v17 = v16;
    else
      v17 = 1701602409;
    if ((_DWORD)v9)
      v18 = v15;
    else
      v18 = 0xE400000000000000;
    v30 = sub_2412E4890(v17, v18, v32);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v31 = Strong;
      v20 = sub_2414B4D8C();
      v9 = v21;
      swift_release();
    }
    else
    {
      v9 = 0xE300000000000000;
      v20 = 7104878;
    }
    v31 = sub_2412E4890(v20, v9, v32);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, v13, "ScrubberViewModel scrubState changed to %s requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    v22 = v27;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v22, -1, -1);
    MEMORY[0x242695BD8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v9) = v29;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v24 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v26 - 2) = v24;
    *((_BYTE *)&v26 - 8) = v9;
    v31 = v24;
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B78();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t ScrubState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696B63617274;
  if (*v0 != 1)
    v1 = 0x6172656C65636564;
  if (*v0)
    return v1;
  else
    return 1701602409;
}

uint64_t sub_2413A8C3C()
{
  return sub_2413A8DC8((uint64_t)&unk_2414C1C20, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled);
}

uint64_t sub_2413A8C50()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A8CF8()
{
  return sub_2413A8DC8((uint64_t)&unk_2414C18B8, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels);
}

uint64_t sub_2413A8D0C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A8DB4()
{
  return sub_2413A8DC8((uint64_t)&unk_2414C18E0, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner);
}

uint64_t sub_2413A8DC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_2413A8E4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  result = swift_release();
  *a3 = *(_BYTE *)(v5 + *a2);
  return result;
}

uint64_t sub_2413A8EE4()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A8F8C(double *a1)
{
  double v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _BYTE *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t result;
  char v33;
  char v34;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  int v41;
  double v42;
  int v43;
  int v44;
  uint64_t v45;
  double v46;
  char v47;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v39 = &v35[-v7];
  MEMORY[0x24BDAC7A8](v8);
  v38 = &v35[-v9];
  v10 = *(unsigned __int8 *)a1;
  v11 = *((unsigned __int8 *)a1 + 2);
  v43 = *((unsigned __int8 *)a1 + 1);
  v44 = v11;
  v42 = a1[1];
  v41 = *((unsigned __int8 *)a1 + 16);
  swift_getKeyPath();
  v12 = *(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  v46 = v2;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  if (v10 == *(unsigned __int8 *)(*(_QWORD *)&v2
                                 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(double *)&v35[-16] = v2;
    v36 = v10 ^ 1;
    v35[-8] = v10 ^ 1;
    v46 = v2;
    v37 = v12;
    sub_2414B2B78();
    swift_release();
    if (qword_257120888 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
    v16 = v38;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 16))(v38, v15, v4);
    v17 = sub_2414B2C8C();
    v18 = sub_2414B51B8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 67109120;
      LODWORD(v46) = v36;
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v17, v18, "ScrubberViewModel.isInteractionEnabled changed to %{BOOL}d", v19, 8u);
      MEMORY[0x242695BD8](v19, -1, -1);
    }

    v13 = v45;
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v16, v4);
  }
  else
  {
    v13 = v45;
  }
  swift_getKeyPath();
  v46 = v2;
  sub_2414B2B84();
  swift_release();
  v20 = v43;
  if (v43 != *(unsigned __int8 *)(*(_QWORD *)&v2
                                 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels))
  {
    v21 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v21);
    *(double *)&v35[-16] = v2;
    v35[-8] = v20;
    v46 = v2;
    sub_2414B2B78();
    swift_release();
    if (qword_257120888 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v39, v22, v4);
    v23 = sub_2414B2C8C();
    v24 = sub_2414B51B8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v25 = 67109120;
      LODWORD(v46) = v43;
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v23, v24, "ScrubberViewModel.showPlaceholderLabels changed to %{BOOL}d", v25, 8u);
      MEMORY[0x242695BD8](v25, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v39, v4);
  }
  swift_getKeyPath();
  v46 = v2;
  sub_2414B2B84();
  swift_release();
  v26 = v44;
  if (v44 != *(unsigned __int8 *)(*(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner))
  {
    v27 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v27);
    *(double *)&v35[-16] = v2;
    v35[-8] = v26;
    v46 = v2;
    sub_2414B2B78();
    swift_release();
    if (qword_257120888 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v40, v28, v4);
    v29 = sub_2414B2C8C();
    v30 = sub_2414B51B8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 67109120;
      LODWORD(v46) = v44;
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v29, v30, "ScrubberViewModel.showSpinner changed to %{BOOL}d", v31, 8u);
      MEMORY[0x242695BD8](v31, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v40, v4);
  }
  swift_getKeyPath();
  v46 = v2;
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(*(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8) & 1) != 0)
  {
    v33 = v41;
    if ((v41 & 1) != 0)
      return result;
LABEL_27:
    v46 = v42;
    v47 = v33;
    return sub_2414B2DAC();
  }
  v33 = v41;
  if (*(double *)(*(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration) == v42)
    v34 = v41;
  else
    v34 = 1;
  if ((v34 & 1) != 0)
    goto LABEL_27;
  return result;
}

uint64_t sub_2413A9664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v1 = sub_2414B2CA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v1, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  swift_retain_n();
  v6 = sub_2414B2C8C();
  v7 = sub_2414B51B8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v18 = v15;
    *(_DWORD *)v8 = 136446210;
    v14[1] = v8 + 4;
    swift_getKeyPath();
    v16 = v0;
    sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
    sub_2414B2B84();
    swift_release();
    v9 = *(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8);
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration);
    v17 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
    v10 = sub_2414B4D8C();
    v16 = sub_2412E4890(v10, v11, &v18);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v6, v7, "ScrubberViewModel.availableDuration changed to %{public}s", v8, 0xCu);
    v12 = v15;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v12, -1, -1);
    MEMORY[0x242695BD8](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2413A98E8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration);
}

uint64_t sub_2413A997C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  result = swift_release();
  v5 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2413A9A1C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413A9AC8()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  return swift_retain();
}

uint64_t sub_2413A9B58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDurationObserver);
  return swift_retain();
}

uint64_t sub_2413A9BF0()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

_QWORD *sub_2413A9CA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;

  v1 = v0;
  v2 = sub_2414B538C();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126720);
  v6 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  v28 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126728);
  v10 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  v30 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrubberInteractionViewModel(0);
  v13 = swift_allocObject();
  sub_2413AEC8C();
  v1[2] = v13;
  v1[3] = 0x3FF0000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = CGSizeMake;
  v14 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate;
  v15 = sub_2414B2B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_proxySubscribers) = MEMORY[0x24BEE4B08];
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner) = 0;
  v16 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration;
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDurationObserver) = 0;
  v17 = OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_availableDurationSubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA40);
  swift_allocObject();
  v18 = sub_2414B2DB8();
  *(_QWORD *)((char *)v1 + v17) = v18;
  v24[1] = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  sub_2414B2BA8();
  v34 = (_QWORD *)v18;
  swift_retain();
  sub_2414B5380();
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v33 = v19;
  sub_2412CC884(0, (unint64_t *)&unk_257126738);
  sub_2412C8FC4((unint64_t *)&qword_25437DA30, (uint64_t *)&unk_25437DA40, MEMORY[0x24BDB9CB0]);
  sub_241363A3C(&qword_257126748, (unint64_t *)&unk_257126738, 0x24BDBCF18, MEMORY[0x24BDD0408]);
  sub_2414B2E9C();

  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  swift_release();
  sub_2412C8FC4(&qword_257126750, &qword_257126720, MEMORY[0x24BDB9988]);
  sub_2413C4AB0();
  v20 = v27;
  sub_2414B2EA8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v20);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_257126758, (uint64_t *)&unk_257126728, MEMORY[0x24BDB9658]);
  v21 = v29;
  v22 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v21);
  swift_getKeyPath();
  v31 = v1;
  v32 = v22;
  v34 = v1;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2413AA0D0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t result;

  v1 = *(_QWORD *)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2413AA140(v1, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2413AA140(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[4];
  int v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a2;
  v13 = sub_2414B3D24();
  v4 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  v14 = v2;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8) == 1)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(_QWORD *)&v11[-32] = v2;
    *(_QWORD *)&v11[-24] = 0;
    v11[-16] = 0;
    v14 = v2;
    sub_2414B2B78();
    swift_release();
  }
  if (qword_257120880 != -1)
    swift_once();
  v8 = swift_allocObject();
  v9 = swift_weakInit();
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&v11[-32] = a1;
  v11[-24] = v12 & 1;
  *(_QWORD *)&v11[-16] = v8;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_2414B3D0C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126680);
  sub_2414B331C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_2413AA3C4@<X0>(char a1@<W1>, char *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;

  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
        sub_2414B2B84();
        swift_release();
        swift_release();
      }
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
      sub_2414B2B78();
      swift_release();
      goto LABEL_9;
    }
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v4 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v4);
      sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
      sub_2414B2B78();
      swift_release();
LABEL_9:
      result = swift_release();
      v5 = 0;
      goto LABEL_10;
    }
  }
  v5 = 1;
LABEL_10:
  *a2 = v5;
  return result;
}

uint64_t sub_2413AA654()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(_QWORD *)(*(_QWORD *)(result + 16) + 64);
    swift_getKeyPath();
    sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
    sub_2414B2B84();
    swift_release();
    if ((*(_BYTE *)(v2 + 32) & 1) != 0)
      return swift_release();
    v3 = *(double *)(v2 + 24);
    swift_getKeyPath();
    sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
    sub_2414B2B84();
    swift_release();
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8) & 1) != 0
      || v3 > *(double *)(v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration))
    {
      return swift_release();
    }
    else
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      sub_2414B2B78();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2413AA81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_2412CBE78(v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate, &qword_2571264F0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2413AA8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    return 0x2D2D3A2D2DLL;
  if (qword_2571207E0 != -1)
    swift_once();
  v3 = (void *)qword_257136EF8;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v4 = objc_msgSend(v3, sel_stringFromSeconds_, *(double *)(v0 + 96));
  v2 = sub_2414B4D68();

  return v2;
}

void sub_2413AAA20(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  double v45;
  char v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t aBlock[7];

  v2 = v1;
  v4 = sub_2414B3D24();
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B2CA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v59 - v11;
  v13 = *a1;
  swift_getKeyPath();
  v14 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel___observationRegistrar;
  aBlock[0] = v2;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  v64 = v14;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v2 + 16))
  {
    if (*(_BYTE *)(v2 + 16) == 1)
    {
      v15 = 0xE800000000000000;
      v16 = 0x676E696B63617274;
      if (!v13)
      {
LABEL_10:
        v17 = 0xE400000000000000;
        if (v16 != 1701602409)
          goto LABEL_15;
        goto LABEL_13;
      }
    }
    else
    {
      v16 = 0x6172656C65636564;
      v15 = 0xEC000000676E6974;
      if (!v13)
        goto LABEL_10;
    }
  }
  else
  {
    v15 = 0xE400000000000000;
    v16 = 1701602409;
    if (!v13)
      goto LABEL_10;
  }
  if (v13 == 1)
  {
    v17 = 0xE800000000000000;
    if (v16 != 0x676E696B63617274)
      goto LABEL_15;
  }
  else
  {
    v17 = 0xEC000000676E6974;
    if (v16 != 0x6172656C65636564)
      goto LABEL_15;
  }
LABEL_13:
  if (v15 == v17)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_15:
  v61 = v4;
  v18 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return;
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  swift_release();
  LOBYTE(aBlock[0]) = *(_BYTE *)(v2 + 16);
  LOBYTE(v65) = v13;
  if ((sub_2413AB61C(&v65) & 1) != 0)
  {
    if (qword_257120888 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v6, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
    swift_retain_n();
    v20 = sub_2414B2C8C();
    v21 = sub_2414B51B8();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      v60 = v21;
      v22 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      aBlock[0] = v59;
      *(_DWORD *)v22 = 136446466;
      v23 = 0xE800000000000000;
      v24 = 0x676E696B63617274;
      if (v13 != 1)
      {
        v24 = 0x6172656C65636564;
        v23 = 0xEC000000676E6974;
      }
      if (v13)
        v25 = v24;
      else
        v25 = 1701602409;
      if (v13)
        v26 = v23;
      else
        v26 = 0xE400000000000000;
      v65 = sub_2412E4890(v25, v26, aBlock);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      swift_getKeyPath();
      v65 = v2;
      sub_2414B2B84();
      swift_release();
      v27 = 0xE800000000000000;
      v28 = 0x676E696B63617274;
      if (*(_BYTE *)(v2 + 16) != 1)
      {
        v28 = 0x6172656C65636564;
        v27 = 0xEC000000676E6974;
      }
      if (*(_BYTE *)(v2 + 16))
        v29 = v28;
      else
        v29 = 1701602409;
      if (*(_BYTE *)(v2 + 16))
        v30 = v27;
      else
        v30 = 0xE400000000000000;
      v65 = sub_2412E4890(v29, v30, aBlock);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2412C1000, v20, (os_log_type_t)v60, "ScrubberInteractionViewModel.scrubState changed from %{public}s to %{public}s", (uint8_t *)v22, 0x16u);
      v31 = v59;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v31, -1, -1);
      MEMORY[0x242695BD8](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    if (qword_257120888 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v6, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v32, v6);
    swift_retain_n();
    v33 = sub_2414B2C8C();
    v34 = sub_2414B51AC();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      v60 = v34;
      v35 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      aBlock[0] = v59;
      *(_DWORD *)v35 = 136446466;
      v36 = 0xE800000000000000;
      v37 = 0x676E696B63617274;
      if (v13 != 1)
      {
        v37 = 0x6172656C65636564;
        v36 = 0xEC000000676E6974;
      }
      if (v13)
        v38 = v37;
      else
        v38 = 1701602409;
      if (v13)
        v39 = v36;
      else
        v39 = 0xE400000000000000;
      v65 = sub_2412E4890(v38, v39, aBlock);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      swift_getKeyPath();
      v65 = v2;
      sub_2414B2B84();
      swift_release();
      v40 = 0xE800000000000000;
      v41 = 0x676E696B63617274;
      if (*(_BYTE *)(v2 + 16) != 1)
      {
        v41 = 0x6172656C65636564;
        v40 = 0xEC000000676E6974;
      }
      if (*(_BYTE *)(v2 + 16))
        v42 = v41;
      else
        v42 = 1701602409;
      if (*(_BYTE *)(v2 + 16))
        v43 = v40;
      else
        v43 = 0xE400000000000000;
      v65 = sub_2412E4890(v42, v43, aBlock);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2412C1000, v33, (os_log_type_t)v60, "ScrubberInteractionViewModel.scrubState underwent illegal transition from %{public}s to %{public}s. This could cause animation and behavioural issues.", (uint8_t *)v35, 0x16u);
      v44 = v59;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v44, -1, -1);
      MEMORY[0x242695BD8](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v2 + 16) && *(_BYTE *)(v2 + 16) == 1)
  {
    swift_bridgeObjectRelease();
    v45 = 1.05;
  }
  else
  {
    v46 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
      v45 = 1.05;
    else
      v45 = 1.0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v59 - 2) = v2;
  *((double *)&v59 - 1) = v45;
  aBlock[0] = v2;
  sub_2414B2B78();
  swift_release();
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  swift_release();
  if (!*(_BYTE *)(v2 + 16))
  {
    objc_msgSend(*(id *)(v2 + 112), sel_invalidate);
    v53 = (void *)objc_opt_self();
    v54 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_2413C619C;
    aBlock[5] = v54;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2413EDF78;
    aBlock[3] = (uint64_t)&block_descriptor_137;
    v55 = _Block_copy(aBlock);
    swift_release();
    v56 = objc_msgSend(v53, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v55, 1.0);
    _Block_release(v55);
    v57 = *(void **)(v2 + 112);
    *(_QWORD *)(v2 + 112) = v56;
LABEL_78:

    return;
  }
  if (*(_BYTE *)(v2 + 16) != 1)
  {
    v58 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer), sel_invalidate);
    v57 = *(void **)(v2 + v58);
    *(_QWORD *)(v2 + v58) = 0;
    goto LABEL_78;
  }
  objc_msgSend(*(id *)(v2 + 112), sel_invalidate);
  sub_2414B3328();
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  v48 = swift_release();
  if ((*(_BYTE *)(v2 + 104) & 1) == 0)
  {
    if (qword_257120878 != -1)
      v48 = swift_once();
    MEMORY[0x24BDAC7A8](v48);
    *(&v59 - 2) = v2;
    *((_BYTE *)&v59 - 8) = 1;
    v49 = swift_allocObject();
    *(_BYTE *)(v49 + 16) = 1;
    *(_QWORD *)(v49 + 24) = v2;
    swift_retain();
    v50 = v62;
    sub_2414B3D0C();
    sub_2414B331C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v61);
  }
  v51 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
  sub_2413AE244(v51);
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v2 + 104) & 1) == 0)
  {
    v52 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v52);
    *(&v59 - 2) = v2;
    *((_BYTE *)&v59 - 8) = 0;
    aBlock[0] = v2;
    sub_2414B2B78();
    swift_release();
  }
  sub_2413AE818();
}

uint64_t sub_2413AB61C(_BYTE *a1)
{
  _BYTE *v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;

  v2 = *a1;
  v3 = *v1;
  v4 = 0xE800000000000000;
  v5 = 0x676E696B63617274;
  if (v2 != 1)
  {
    v5 = 0x6172656C65636564;
    v4 = 0xEC000000676E6974;
  }
  if (*a1)
    v6 = v5;
  else
    v6 = 1701602409;
  if (v2)
    v7 = v4;
  else
    v7 = 0xE400000000000000;
  v8 = 0xE800000000000000;
  v9 = 0x676E696B63617274;
  if (v3 != 1)
  {
    v9 = 0x6172656C65636564;
    v8 = 0xEC000000676E6974;
  }
  if (*v1)
    v10 = v9;
  else
    v10 = 1701602409;
  if (*v1)
    v11 = v8;
  else
    v11 = 0xE400000000000000;
  if (v6 != v10 || v7 != v11)
  {
    v13 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      if (v3)
      {
        if (v3 == 1)
          goto LABEL_24;
        if (v2 == 1)
        {
          v12 = 1;
          goto LABEL_20;
        }
      }
      else if (v2 > 1)
      {
        v12 = 1;
        goto LABEL_20;
      }
      v12 = sub_2414B57D0();
      goto LABEL_20;
    }
LABEL_24:
    v12 = 1;
    return v12 & 1;
  }
  swift_bridgeObjectRelease();
  v12 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_2413AB7FC()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413AB8B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  *a1 = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t sub_2413AB93C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_2413AB9C8()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

double sub_2413ABA70()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 24);
}

__n128 sub_2413ABAF8@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  result = *(__n128 *)(v3 + 24);
  v5 = *(_OWORD *)(v3 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_2413ABB88()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

double sub_2413ABC48()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 56);
}

double sub_2413ABCCC@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  result = *(double *)(v3 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_2413ABD58()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

void sub_2413ABE08(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t KeyPath;
  char v23;
  char v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = *((_QWORD *)a1 + 1);
  v10 = a1[2];
  swift_getKeyPath();
  v11 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel___observationRegistrar;
  v28 = v2;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v12 = *(_QWORD *)(v2 + 80);
  if (v12)
  {
    if (v8)
    {
      v13 = *(double *)(v2 + 88);
      if ((*(_QWORD *)(v2 + 72) == *(_QWORD *)&v9 && v12 == v8 || (sub_2414B57D0() & 1) != 0) && v13 == v10)
        return;
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
  }
  else if (!v8)
  {
    return;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  if (qword_257120888 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  swift_retain_n();
  v15 = sub_2414B2C8C();
  v16 = sub_2414B51B8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v17 = 136446210;
    swift_getKeyPath();
    v27 = v11;
    v28 = v2;
    sub_2414B2B84();
    swift_release();
    if (*(_QWORD *)(v2 + 80))
    {
      v25[1] = *(_QWORD *)(v2 + 72);
      v28 = 0;
      v29 = 0xE000000000000000;
      sub_2414B5578();
      sub_2414B4DF8();
      swift_bridgeObjectRetain();
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      sub_2414B4DF8();
      sub_2414B5098();
      sub_2414B4DF8();
      v18 = v28;
      v19 = v29;
    }
    else
    {
      v19 = 0xE300000000000000;
      v18 = 7104878;
    }
    v28 = sub_2412E4890(v18, v19, &v30);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v15, v16, "ScrubberInteractionViewModel.currentSection changed to %{public}s", v17, 0xCu);
    v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v20, -1, -1);
    MEMORY[0x242695BD8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_getKeyPath();
  v28 = v2;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v2 + 16))
  {
    v21 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      v25[-2] = v2;
      LOBYTE(v25[-1]) = 0;
      v28 = v2;
      sub_2414B2B78();
      swift_release();
      v23 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
      sub_2413AE244(v23);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  v28 = v2;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v2 + 16) && *(_BYTE *)(v2 + 16) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      return;
  }
  sub_2413AE818();
}

uint64_t ScrubberSection.debugDescription.getter()
{
  sub_2414B5578();
  sub_2414B4DF8();
  swift_bridgeObjectRetain();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  sub_2414B5098();
  sub_2414B4DF8();
  return 0;
}

uint64_t sub_2413AC4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413AC548@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 72);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413AC5E4()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413AC6AC(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4;
  double v5;
  double v6;
  double v8[3];

  v4 = a1[9];
  v5 = a1[10];
  v6 = a1[11];
  *((_QWORD *)a1 + 9) = a2;
  *((_QWORD *)a1 + 10) = a3;
  *((_QWORD *)a1 + 11) = a4;
  swift_bridgeObjectRetain();
  v8[0] = v4;
  v8[1] = v5;
  v8[2] = v6;
  sub_2413ABE08(v8);
  return swift_bridgeObjectRelease();
}

double sub_2413AC710()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 96);
}

double sub_2413AC794@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  result = *(double *)(v3 + 96);
  *a2 = result;
  return result;
}

uint64_t sub_2413AC820()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413AC8D0(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(a1 + 96) = a2;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  v2 = swift_bridgeObjectRetain();
  sub_2413AC97C(v2);
  return swift_bridgeObjectRelease();
}

void sub_2413AC97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double *v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t KeyPath;
  UIAccessibilityNotifications v13;
  void *v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_retain();
    v4 = (double *)(a1 + 24 * v2 + 24);
    while (1)
    {
      v5 = *v4;
      swift_getKeyPath();
      sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
      swift_bridgeObjectRetain();
      sub_2414B2B84();
      swift_release();
      v6 = *(double *)(v1 + 96);
      swift_bridgeObjectRelease();
      if (v5 <= v6)
        break;
      v4 -= 3;
      if (!--v2)
      {
        v7 = 0;
        v8 = 0;
        v9 = 0.0;
        goto LABEL_8;
      }
    }
    v7 = *((_QWORD *)v4 - 2);
    v8 = *((_QWORD *)v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_release();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0.0;
  }
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v10 = *(_QWORD *)(v1 + 80);
  if (v10)
  {
    if (v8)
    {
      v11 = *(double *)(v1 + 88);
      if ((*(_QWORD *)(v1 + 72) == v7 && v10 == v8 || (sub_2414B57D0() & 1) != 0) && v11 == v9)
      {
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
  }
  else if (!v8)
  {
    return;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  swift_bridgeObjectRelease();
  if (v8)
  {
    v13 = *MEMORY[0x24BEBDDB0];
    v14 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification(v13, v14);

  }
}

uint64_t sub_2413ACC38(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint8_t *v13;
  uint8_t *v14;
  int v15;
  uint8_t *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v3 = a1 & 1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v20 = v1;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  if (*(unsigned __int8 *)(v1 + 104) != v3)
  {
    if (qword_257120888 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
    swift_retain_n();
    v10 = sub_2414B2C8C();
    v11 = sub_2414B51B8();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v18 = v12;
      v13 = (uint8_t *)swift_slowAlloc();
      v19 = v5;
      v14 = v13;
      *(_DWORD *)v13 = 67109120;
      swift_getKeyPath();
      v20 = v2;
      sub_2414B2B84();
      swift_release();
      v15 = *(unsigned __int8 *)(v2 + 104);
      swift_release();
      LODWORD(v20) = v15;
      sub_2414B541C();
      swift_release();
      _os_log_impl(&dword_2412C1000, v10, (os_log_type_t)v18, "ScrubberInteractionViewModel.isTooltipPresented changed to %{BOOL}d", v14, 8u);
      v16 = v14;
      v5 = v19;
      MEMORY[0x242695BD8](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_2413ACE88()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_2413ACF0C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 104);
  return result;
}

uint64_t sub_2413ACF98()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413AD040()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413AD0F4(uint64_t result)
{
  uint64_t KeyPath;

  if ((result & 1) == 0)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B78();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413AD1C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];

  v2 = sub_2414B3D24();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_invalidate, v4);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    swift_getKeyPath();
    v11[2] = v8;
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B84();
    v9 = swift_release();
    if ((*(_BYTE *)(v8 + 104) & 1) != 0)
    {
      if (qword_257120878 != -1)
        v9 = swift_once();
      MEMORY[0x24BDAC7A8](v9);
      v11[-2] = v8;
      LOBYTE(v11[-1]) = 0;
      v10 = swift_allocObject();
      *(_BYTE *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = v8;
      swift_retain();
      sub_2414B3D0C();
      sub_2414B331C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2413AD3C0(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_2413AD3F0(uint64_t a1, char a2)
{
  double v2;
  double v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint8_t *v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  double v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_2414B2CA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v27 = v2;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  v11 = *(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  if ((*(_BYTE *)(*(_QWORD *)&v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) & 1) != 0)
  {
    if ((a2 & 1) != 0)
      return result;
  }
  else if ((a2 & 1) == 0 && *(double *)v11 == *(double *)&a1)
  {
    return result;
  }
  if (qword_257120888 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  swift_retain_n();
  v13 = sub_2414B2C8C();
  v14 = sub_2414B51B8();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v25 = v15;
    v16 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v29 = v24;
    v23 = v16;
    *(_DWORD *)v16 = 136446210;
    v22 = v16 + 4;
    swift_getKeyPath();
    v26 = v7;
    v27 = v3;
    sub_2414B2B84();
    swift_release();
    v17 = *(_BYTE *)(v11 + 8);
    v27 = *(double *)v11;
    v28 = v17;
    v18 = sub_2414B4D8C();
    v27 = COERCE_DOUBLE(sub_2412E4890(v18, v19, &v29));
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v20 = v23;
    _os_log_impl(&dword_2412C1000, v13, (os_log_type_t)v25, "ScrubberInteractionViewModel.tooltipSession changed to %{public}s", v23, 0xCu);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v21, -1, -1);
    MEMORY[0x242695BD8](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2413AD6E4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
}

uint64_t sub_2413AD778@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  v5 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2413AD818()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413AD8C4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_2414B3D24();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B2B00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - v12;
  objc_msgSend(*(id *)(v1 + 112), sel_invalidate, v11);
  v14 = (void *)objc_opt_self();
  v15 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_2413C619C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413EDF78;
  aBlock[3] = &block_descriptor_169;
  v16 = _Block_copy(aBlock);
  swift_release();
  v17 = objc_msgSend(v14, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v16, 1.0);
  _Block_release(v16);
  v18 = *(void **)(v2 + 112);
  *(_QWORD *)(v2 + 112) = v17;

  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  v19 = swift_release();
  v20 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  v21 = 0.0;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) & 1) == 0)
  {
    sub_2414B2AF4();
    v22 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
    sub_2414B2AC4();
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v9, v6);
    v19 = ((uint64_t (*)(char *, uint64_t))v25)(v13, v6);
    if (v24 <= 3.0)
    {
      swift_getKeyPath();
      aBlock[0] = v2;
      sub_2414B2B84();
      v19 = swift_release();
      if (*(_BYTE *)(v20 + 8))
        v21 = 0.0;
      else
        v21 = *(double *)v20;
    }
  }
  MEMORY[0x24BDAC7A8](v19);
  *(&v30 - 4) = v2;
  *((double *)&v30 - 3) = v21;
  *((double *)&v30 - 2) = a1;
  sub_2414B3328();
  sub_2414B2AF4();
  v26 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v26, v13, v6);
  swift_endAccess();
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v2 + 104) & 1) == 0)
  {
    if (qword_257120878 != -1)
      result = swift_once();
    MEMORY[0x24BDAC7A8](result);
    *(&v30 - 2) = v2;
    *((_BYTE *)&v30 - 8) = 1;
    v28 = swift_allocObject();
    *(_BYTE *)(v28 + 16) = 1;
    *(_QWORD *)(v28 + 24) = v2;
    swift_retain();
    v29 = v31;
    sub_2414B3D0C();
    sub_2414B331C();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v33);
  }
  return result;
}

uint64_t sub_2413ADD3C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413ADDFC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = a1 & 1;
  v5 = sub_2414B2CA4();
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v17 = v1;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  v9 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) != v4)
  {
    if (qword_257120888 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v5, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v7, v10, v5);
    swift_retain_n();
    v11 = sub_2414B2C8C();
    v12 = sub_2414B51B8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 67109376;
      LODWORD(v17) = a1 & 1;
      sub_2414B541C();
      *(_WORD *)(v13 + 8) = 1024;
      swift_getKeyPath();
      v17 = v2;
      v14 = v12;
      sub_2414B2B84();
      swift_release();
      v15 = *(unsigned __int8 *)(v2 + v9);
      swift_release();
      LODWORD(v17) = v15;
      sub_2414B541C();
      swift_release();
      _os_log_impl(&dword_2412C1000, v11, v14, "ScrubberInteractionViewModel.isMarqueeAnimating changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v13, 0xEu);
      MEMORY[0x242695BD8](v13, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  return result;
}

uint64_t sub_2413AE07C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
}

uint64_t sub_2413AE108@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  return result;
}

uint64_t sub_2413AE19C()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B78();
  return swift_release();
}

void sub_2413AE244(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  UIAccessibilityNotifications v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = a1 & 1;
  v5 = sub_2414B2CA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) != v4)
  {
    if (qword_257120888 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v5, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    swift_retain();
    v11 = sub_2414B2C8C();
    v12 = sub_2414B51B8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 67109376;
      LODWORD(v18) = a1 & 1;
      sub_2414B541C();
      *(_WORD *)(v13 + 8) = 1024;
      LODWORD(v18) = *(unsigned __int8 *)(v2 + v9);
      sub_2414B541C();
      swift_release();
      _os_log_impl(&dword_2412C1000, v11, v12, "ScrubberInteractionViewModel.hasPausedMidScrub changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v13, 0xEu);
      MEMORY[0x242695BD8](v13, -1, -1);

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (*(_BYTE *)(v2 + v9) == 1)
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(&v17 - 2) = v2;
      *((_BYTE *)&v17 - 8) = 1;
      v18 = v2;
      sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
      sub_2414B2B78();
      swift_release();
      v15 = *MEMORY[0x24BEBDDB0];
      sub_2413AE4F8();
      v16 = (void *)sub_2414B4D44();
      swift_bridgeObjectRelease();
      UIAccessibilityPostNotification(v15, v16);

    }
  }
}

uint64_t sub_2413AE4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2414B4D20();
  MEMORY[0x24BDAC7A8](v3);
  sub_2413BDA6C();
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  if (*(_QWORD *)(v0 + 80))
  {
    swift_bridgeObjectRetain();
    sub_2414B4D14();
    sub_2414B4D08();
    sub_2414B4CFC();
    swift_bridgeObjectRelease();
    sub_2414B4D08();
    sub_2414B4CFC();
    sub_2414B4D08();
    sub_2414B4CFC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2414B4D08();
    sub_2414B4D2C();
    if (qword_2543846C8 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  sub_2414B4D14();
  sub_2414B4D08();
  sub_2414B4CFC();
  sub_2414B4D08();
  sub_2414B4CFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2414B4D08();
  sub_2414B4D2C();
  if (qword_2543846C8 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v4 = (id)qword_25438E910;
  sub_2414B2B3C();
  return sub_2414B4D80();
}

void sub_2413AE818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD v11[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer), sel_invalidate);
  v3 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = 0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) & 1) == 0)
  {
    v4 = sub_2413AE9A0();
    if ((v5 & 1) == 0)
    {
      *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick) = v4;
      v6 = (void *)objc_opt_self();
      v7 = swift_allocObject();
      swift_weakInit();
      v11[4] = sub_2413C62A8;
      v11[5] = v7;
      v11[0] = MEMORY[0x24BDAC760];
      v11[1] = 1107296256;
      v11[2] = sub_2413EDF78;
      v11[3] = &block_descriptor_164;
      v8 = _Block_copy(v11);
      swift_release();
      v9 = objc_msgSend(v6, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v8, 1.0);
      _Block_release(v8);
      v10 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v9;

    }
  }
}

uint64_t sub_2413AE9A0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  uint64_t result;
  float v5;

  v1 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    goto LABEL_3;
  v2 = *(double *)(v1 + 24);
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B84();
  swift_release();
  v3 = *(double *)(v0 + 96);
  swift_release();
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v1 + 48) & 1) != 0)
  {
LABEL_3:
    *(double *)&result = 0.0;
  }
  else
  {
    v5 = v3 / v2;
    *(double *)&result = *(double *)(v1 + 40) * v5;
  }
  return result;
}

uint64_t sub_2413AEB1C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = sub_2413AE9A0();
    if ((v3 & 1) == 0)
    {
      v4 = v2;
      v5 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick;
      v6 = vabdd_f64(*(double *)&v2, *(double *)(v1+ OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick));
      if (qword_257120868 != -1)
        swift_once();
      v7 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
      *(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = v6 < *(double *)&qword_257136FA8;
      sub_2413AE244(v7);
      *(_QWORD *)(v1 + v5) = v4;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2413AEBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
  v2 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel___observationRegistrar;
  v4 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2413AEC8C()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 + 16) = 0;
  v1 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *(_OWORD *)(v0 + 24) = *MEMORY[0x24BEBE158];
  *(_OWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 56) = 0x3FF0000000000000;
  type metadata accessor for ScrubberSections(0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 56) = v3;
  sub_2414B2BA8();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 112) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_BYTE *)(v0 + 104) = 0;
  sub_2414B2AB8();
  v4 = v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
  sub_2414B2BA8();
  return v0;
}

uint64_t sub_2413AED94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v1 + 32) & 1) == 0)
  {
    swift_getKeyPath();
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    swift_retain();
    sub_2414B2B84();
    swift_release();
    swift_release();
    swift_getKeyPath();
    sub_2414B2B84();
    return swift_release();
  }
  return result;
}

id sub_2413AEF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v11;
  void *v12;

  v0 = sub_2414B3934();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultConfiguration);
  v5 = objc_msgSend((id)objc_opt_self(), sel_hiddenConfiguration);
  objc_msgSend(v4, sel_setLabelsConfiguration_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_257126638);
  sub_2414B3CDC();
  v6 = v12;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2798]), sel_initWithSource_, v12);

  objc_msgSend(v7, sel_setConfiguration_, v4);
  objc_msgSend(v7, sel_setFineScrubbingStyle_, 2);
  sub_2414B3CDC();
  v8 = v12;
  objc_msgSend(v7, sel_setDelegate_, v12);

  sub_2414B3CDC();
  v9 = v12;
  type metadata accessor for MediaTimelineControl(0);
  sub_2412C8A04((uint64_t)v3);
  sub_2413B06B4((uint64_t)v3, v7);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

void sub_2413AF0CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  double v12;
  id v13;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  id v19;
  uint64_t v20;
  double v21;
  _BYTE *v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  _BYTE v29[16];
  uint64_t v30;
  id v31;

  v3 = v2;
  v6 = sub_2414B3934();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 16) + 64);
  swift_getKeyPath();
  v31 = (id)v10;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v10 + 32) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257126638);
    sub_2414B3CDC();
    v11 = v31;
    LODWORD(v12) = 1.0;
    objc_msgSend(v31, sel_setMaxValue_, v12);

    sub_2414B3CDC();
    v13 = v31;
    LODWORD(v14) = 0;
    objc_msgSend(v31, sel_setCurrentValue_, v14);

LABEL_8:
    sub_2414B3CDC();
    v27 = v31;
    sub_2412CC884(0, (unint64_t *)&unk_257126640);
    v28 = (void *)sub_2414B4EB8();
    goto LABEL_9;
  }
  v15 = *(double *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126638);
  sub_2414B3CDC();
  v16 = v31;
  type metadata accessor for MediaTimelineControl(0);
  sub_2412C8A04((uint64_t)v9);
  sub_2413B06B4((uint64_t)v9, a1);

  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  sub_2414B3CDC();
  v17 = v31;
  *(float *)&v18 = v15;
  objc_msgSend(v31, sel_setMaxValue_, v18);

  sub_2414B3CDC();
  v19 = v31;
  v20 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  swift_getKeyPath();
  v30 = v20;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v21 = *(double *)(v20 + 96);
  *(float *)&v21 = v21;
  objc_msgSend(v19, sel_setCurrentValue_, v21);

  v22 = *(_BYTE **)(*(_QWORD *)v3 + 16);
  swift_getKeyPath();
  v31 = v22;
  sub_2414B2B84();
  swift_release();
  if (v22[16] && v22[16] == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_8;
  }
  v24 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)v3 + 16) + 64);
  swift_getKeyPath();
  v31 = v24;
  sub_2414B2B84();
  v25 = swift_release();
  v26 = v24[7];
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)&v29[-16] = a2;
  swift_bridgeObjectRetain();
  sub_2413A5F34((void (*)(uint64_t *__return_ptr, _QWORD *))sub_2413C501C, (uint64_t)&v29[-32], v26);
  swift_bridgeObjectRelease();
  sub_2414B3CDC();
  v27 = v31;
  sub_2412CC884(0, (unint64_t *)&unk_257126640);
  v28 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
LABEL_9:
  objc_msgSend(v27, sel_setTimeRangeMarks_, v28);

}

void sub_2413AF548(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double v3;
  float v4;
  float v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  void *v11;

  v3 = *(double *)(a1 + 16);
  v4 = v3;
  v5 = v3 + 1.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126638);
  sub_2414B3CDC();
  v6 = objc_allocWithZone(MEMORY[0x24BDB27D8]);
  v7 = (void *)sub_2414B4D44();
  *(float *)&v8 = v4;
  *(float *)&v9 = v5;
  v10 = objc_msgSend(v6, sel_initWithStartValue_endValue_identifier_markUIProvider_, v7, v11, v8, v9);

  *a2 = v10;
}

char *sub_2413AF724(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  objc_super v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B5224();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265F8);
  v9 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  v39 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126600);
  v12 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  v41 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)&v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_maxValue] = 1065353216;
  *(_DWORD *)&v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_currentValue] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_timeRangeMarks] = MEMORY[0x24BEE4AF8];
  v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState] = 0;
  v14 = OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_didChangeValueSubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126608);
  swift_allocObject();
  v15 = v1;
  *(_QWORD *)&v1[v14] = sub_2414B2DB8();
  *(_QWORD *)&v15[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_decelerationEndedObserver] = 0;
  v16 = &v15[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast];
  v17 = sub_2414B3934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v34 = a1;
  *(_QWORD *)&v15[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel] = a1;
  swift_retain();

  v18 = (objc_class *)type metadata accessor for MediaTimelineControl.Coordinator(0);
  v44.receiver = v15;
  v44.super_class = v18;
  v19 = (char *)objc_msgSendSuper2(&v44, sel_init);
  v43 = *(id *)&v19[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_didChangeValueSubject];
  v32 = v19;
  swift_retain();
  sub_2414B5218();
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v42 = (id)sub_2414B5230();
  v20 = sub_2414B520C();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v5, 1, 1, v20);
  sub_2412C8FC4((unint64_t *)&unk_257126618, (uint64_t *)&unk_257126608, MEMORY[0x24BDB9CB0]);
  sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v22 = v33;
  v23 = v31;
  sub_2414B2E90();
  sub_2412CBE78((uint64_t)v5, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
  swift_release();
  v43 = (id)sub_2414B5230();
  v21(v5, 1, 1, v20);
  sub_2412C8FC4(&qword_257126628, &qword_2571265F8, MEMORY[0x24BDB9920]);
  v24 = v35;
  v25 = v38;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v5, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v25);
  swift_allocObject();
  v26 = v32;
  swift_unknownObjectWeakInit();
  sub_2412C8FC4(&qword_257126630, &qword_257126600, MEMORY[0x24BDB9A08]);
  v27 = v40;
  v28 = sub_2414B2EB4();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v27);
  *(_QWORD *)&v26[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_decelerationEndedObserver] = v28;
  swift_release();
  return v26;
}

void sub_2413AFBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x242695CC8](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState)
      && *(_BYTE *)(v3 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) != 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
        goto LABEL_8;
    }
    sub_2413B0420();
LABEL_8:

  }
}

uint64_t sub_2413AFD84(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  float v12;
  double v13;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;

  v3 = sub_2414B2CA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v3, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = v1;
  v9 = sub_2414B2C8C();
  v10 = sub_2414B5188();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134218240;
    v17 = 0.0;
    sub_2414B541C();
    *(_WORD *)(v11 + 12) = 2048;
    -[NSObject maxValue](v8, sel_maxValue);
    v17 = v12;
    sub_2414B541C();

    _os_log_impl(&dword_2412C1000, v9, v10, "MediaTimelineControl.Coordinator: will begin changing (min=%f, max=%f)", (uint8_t *)v11, 0x16u);
    MEMORY[0x242695BD8](v11, -1, -1);
  }
  else
  {

    v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *((_BYTE *)&v8->isa + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) = 1;
  v13 = (*(double **)((char *)&v8->isa + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel))[2];
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *((double *)&v16 - 2) = v13;
  *((_BYTE *)&v16 - 8) = 1;
  v17 = v13;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  swift_release();
  swift_retain();
  -[NSObject currentValue](v8, sel_currentValue);
  LOBYTE(v17) = 0;
  sub_2413A78FC((char *)&v17);
  swift_release();
  return sub_2413B0BD4(a1, 1);
}

uint64_t sub_2413B0108(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t KeyPath;
  int v14;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_2414B2C8C();
  v10 = sub_2414B5188();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_2412C1000, v9, v10, "MediaTimelineControl.Coordinator: did end changing", v11, 2u);
    MEMORY[0x242695BD8](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v2[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState] = 2;
  v12 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel] + 16);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v16 - 2) = v12;
  *((_BYTE *)&v16 - 8) = 2;
  v17 = v12;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  swift_release();
  objc_msgSend(v2, sel_currentValue);
  LODWORD(v17) = v14;
  sub_2414B2DAC();
  return sub_2413B0BD4(a1, 0);
}

uint64_t sub_2413B0420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_2414B2C8C();
  v8 = sub_2414B5188();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_2412C1000, v7, v8, "MediaTimelineControl.Coordinator: finished decelerating", v9, 2u);
    MEMORY[0x242695BD8](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) = 0;
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel) + 16);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v13 - 2) = v10;
  *((_BYTE *)&v13 - 8) = 0;
  v14 = v10;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  swift_release();
  LOBYTE(v14) = 2;
  swift_retain();
  sub_2413A78FC((char *)&v14);
  return swift_release();
}

void sub_2413B06B4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  char *v29;
  char v30;
  void *v31;
  uint64_t *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;

  v47 = a2;
  v4 = sub_2414B3934();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126678);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126670);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v41 - v14;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v45 = a1;
  v43 = v20;
  ((void (*)(char *, uint64_t, uint64_t, double))v20)((char *)&v41 - v18, a1, v4, v17);
  v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v44(v19, 0, 1, v4);
  v46 = v2;
  v21 = v2 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast;
  swift_beginAccess();
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_2412DC3FC((uint64_t)v19, (uint64_t)v9, &qword_257126670);
  sub_2412DC3FC(v21, v22, &qword_257126670);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    sub_2412CBE78((uint64_t)v19, &qword_257126670);
    if (v23(v22, 1, v4) == 1)
    {
      sub_2412CBE78((uint64_t)v9, &qword_257126670);
      return;
    }
  }
  else
  {
    sub_2412DC3FC((uint64_t)v9, (uint64_t)v15, &qword_257126670);
    if (v23(v22, 1, v4) != 1)
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
      v42 = v12;
      v25 = v48;
      v24(v48, v22, v4);
      sub_2412C8030(&qword_25437DB58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], MEMORY[0x24BDEEE28]);
      v26 = sub_2414B4CE4();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28 = v25;
      v12 = v42;
      v27(v28, v4);
      sub_2412CBE78((uint64_t)v19, &qword_257126670);
      v27(v15, v4);
      sub_2412CBE78((uint64_t)v9, &qword_257126670);
      if ((v26 & 1) != 0)
        return;
      goto LABEL_8;
    }
    sub_2412CBE78((uint64_t)v19, &qword_257126670);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
  }
  sub_2412CBE78((uint64_t)v9, &qword_257126678);
LABEL_8:
  v43(v12, v45, v4);
  v44(v12, 0, 1, v4);
  swift_beginAccess();
  sub_2413C609C((uint64_t)v12, v21);
  swift_endAccess();
  v29 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v48, *MEMORY[0x24BDEEDF0], v4);
  v30 = sub_2414B2F80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
  if ((v30 & 1) != 0)
  {
    v31 = v47;
    if (qword_257120808 != -1)
      swift_once();
    v32 = &qword_257136F38;
  }
  else
  {
    v31 = v47;
    if (qword_257120800 != -1)
      swift_once();
    v32 = &qword_257136F20;
  }
  v34 = (void *)v32[1];
  v33 = (void *)v32[2];
  v35 = (id)*v32;
  v36 = v34;
  v37 = v33;
  v38 = objc_msgSend(v31, sel_configuration);
  if (*(_BYTE *)(v46 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState)
    && *(_BYTE *)(v46 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) == 1)
  {
    swift_bridgeObjectRelease();
    v39 = v36;
  }
  else
  {
    v40 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      v39 = v36;
    else
      v39 = v35;
  }
  objc_msgSend(v38, sel_setCurrentValueVisualEffect_, v39);
  objc_msgSend(v38, sel_setMaxValueVisualEffect_, v37);
  objc_msgSend(v31, sel_setConfiguration_, v38);

}

uint64_t sub_2413B0BD4(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126670);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B3934();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - v13;
  v15 = v2 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast;
  swift_beginAccess();
  sub_2412DC3FC(v15, (uint64_t)v7, &qword_257126670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v16 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v16(v14, *MEMORY[0x24BDEEDE8], v8);
    sub_2412CBE78((uint64_t)v7, &qword_257126670);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v16 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  }
  v16(v11, *MEMORY[0x24BDEEDF0], v8);
  v17 = sub_2414B2F80();
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  if ((v17 & 1) != 0)
  {
    if (qword_257120808 != -1)
      swift_once();
    v19 = &qword_257136F38;
  }
  else
  {
    if (qword_257120800 != -1)
      swift_once();
    v19 = &qword_257136F20;
  }
  v21 = (void *)v19[1];
  v20 = (void *)v19[2];
  v22 = (id)*v19;
  v23 = v21;
  v24 = v20;
  v25 = objc_msgSend(a1, sel_configuration);
  v26 = v25;
  if ((a2 & 1) != 0)
    v27 = v23;
  else
    v27 = v22;
  objc_msgSend(v25, sel_setCurrentValueVisualEffect_, v27);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)(v28 + 24) = v26;
  v29 = a1;
  v30 = v26;
  sub_2413C504C((uint64_t)sub_2413C608C, v28);

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

id sub_2413B0EB8()
{
  return sub_2413BA8F8(0, (uint64_t (*)(void))type metadata accessor for MediaTimelineControl.Coordinator);
}

uint64_t sub_2413B0F3C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257126718);
  sub_2414B47A4();
  return v1;
}

char *sub_2413B0F88@<X0>(char **a1@<X8>)
{
  id v2;
  uint64_t v3;
  char *result;

  v2 = objc_allocWithZone((Class)type metadata accessor for MediaTimelineControl.Coordinator(0));
  v3 = swift_retain();
  result = sub_2413AF724(v3);
  *a1 = result;
  return result;
}

uint64_t sub_2413B0FD4(uint64_t a1, char a2)
{
  if (qword_2571207F0 != -1)
    swift_once();
  if (qword_2571207F8 != -1)
    swift_once();
  if ((a2 & 1) != 0)
    return 0x4024000000000000;
  else
    return a1;
}

uint64_t sub_2413B1078()
{
  sub_2412C8030(&qword_257126448, type metadata accessor for MediaTimelineControl, (uint64_t)&unk_2414C14C8);
  return sub_2414B3A54();
}

uint64_t sub_2413B10E0()
{
  sub_2412C8030(&qword_257126448, type metadata accessor for MediaTimelineControl, (uint64_t)&unk_2414C14C8);
  return sub_2414B3A00();
}

void sub_2413B1148()
{
  sub_2412C8030(&qword_257126448, type metadata accessor for MediaTimelineControl, (uint64_t)&unk_2414C14C8);
  sub_2414B3A48();
  __break(1u);
}

uint64_t sub_2413B1184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 24);
  j__swift_retain();
  v3 = sub_241345CC8(v1, v2);
  sub_2412E6C04(v1, v2);
  return v3;
}

MediaCoreUI::ScrubberLoadingConfiguration __swiftcall ScrubberLoadingConfiguration.init(disableInteraction:showPlaceholderLabels:showSpinner:availableDuration:)(Swift::Bool disableInteraction, Swift::Bool showPlaceholderLabels, Swift::Bool showSpinner, Swift::Double_optional availableDuration)
{
  char v4;
  uint64_t v5;
  MediaCoreUI::ScrubberLoadingConfiguration result;

  *(_BYTE *)v5 = disableInteraction;
  *(_BYTE *)(v5 + 1) = showPlaceholderLabels;
  *(_BYTE *)(v5 + 2) = showSpinner;
  *(_QWORD *)(v5 + 8) = *(_QWORD *)&availableDuration.is_nil;
  *(_BYTE *)(v5 + 16) = v4 & 1;
  result.availableDuration.value = availableDuration.value;
  result.availableDuration.is_nil = showPlaceholderLabels;
  result.disableInteraction = disableInteraction;
  return result;
}

uint64_t Scrubber.init(duration:loadingConfiguration:playbackRate:sections:accessoryView:onScrub:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>, double a7@<D0>, uint64_t a8, uint64_t a9)
{
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v28;
  uint64_t v29;

  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = *((_QWORD *)a3 + 1);
  v24 = a3[16];
  type metadata accessor for ScrubberViewModel(0);
  swift_allocObject();
  sub_2413A9CA8();
  sub_2414B4798();
  *(_QWORD *)a6 = v28;
  *(_QWORD *)(a6 + 8) = v29;
  type metadata accessor for ScrubberProxy(0);
  sub_2412C8030((unint64_t *)&unk_257125438, type metadata accessor for ScrubberProxy, (uint64_t)&protocol conformance descriptor for ScrubberProxy);
  *(_QWORD *)(a6 + 16) = sub_2414B2FE0();
  *(_BYTE *)(a6 + 24) = v16 & 1;
  v18 = (int *)type metadata accessor for Scrubber(0, a8, a9, v17);
  v19 = (uint64_t *)(a6 + v18[10]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  v20 = swift_storeEnumTagMultiPayload();
  v21 = a6 + v18[11];
  *(_QWORD *)v21 = a1;
  *(_BYTE *)(v21 + 8) = a2 & 1;
  v22 = a6 + v18[12];
  *(_BYTE *)v22 = v12;
  *(_BYTE *)(v22 + 1) = v13;
  *(_BYTE *)(v22 + 2) = v14;
  *(_QWORD *)(v22 + 8) = v15;
  *(_BYTE *)(v22 + 16) = v24;
  *(double *)(a6 + v18[13]) = a7;
  *(_QWORD *)(a6 + v18[14]) = a4;
  a5(v20);
  sub_2413B0F3C();
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for ScrubberViewModel(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_2571255D0);
}

uint64_t type metadata accessor for ScrubberProxy(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257125F88);
}

uint64_t type metadata accessor for Scrubber(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Scrubber);
}

uint64_t sub_2413B1474()
{
  return sub_2413C68C4();
}

uint64_t Scrubber.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  void (*v58)(uint64_t *, uint64_t, uint64_t);
  int *v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t (*v66)(uint64_t *, int *);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  int *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v119;
  _QWORD *v120;
  void (*v121)(char *, uint64_t, int *);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[4];
  _QWORD v155[2];
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  _QWORD v168[2];
  _QWORD v169[2];
  _QWORD v170[2];
  _QWORD v171[4];

  v145 = a2;
  v3 = sub_2414B3484();
  v143 = *(_QWORD *)(v3 - 8);
  v144 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v142 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = (char *)sub_2414B3C94();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125458);
  v5 = *(_QWORD *)(a1 + 16);
  v150 = *(_QWORD *)(a1 + 24);
  v151 = v5;
  v7 = type metadata accessor for Scrubber.CompanionViews(255, v5, v150, v6);
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125460);
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  v12 = MEMORY[0x242695AE8](&unk_2414C1848, v7);
  v13 = MEMORY[0x24BDEC438];
  v171[0] = v12;
  v171[1] = MEMORY[0x24BDEC438];
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v171);
  v16 = sub_2412C8FC4(&qword_257125468, &qword_257125460, MEMORY[0x24BDEEC10]);
  v170[0] = v15;
  v170[1] = v16;
  v17 = MEMORY[0x242695AE8](v14, v9, v170);
  v18 = sub_24137771C();
  v169[0] = v17;
  v169[1] = v18;
  v168[0] = MEMORY[0x242695AE8](v14, v10, v169);
  v168[1] = v13;
  MEMORY[0x242695AE8](v14, v11, v168);
  v19 = sub_2414B3604();
  v20 = sub_2414B3514();
  v21 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125478);
  v22 = sub_2414B3514();
  v23 = sub_2414B2B00();
  v24 = sub_2413BE4F8();
  v25 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v19);
  v167[0] = v24;
  v167[1] = v25;
  v166[0] = MEMORY[0x242695AE8](v14, v20, v167);
  v166[1] = MEMORY[0x24BDEBF50];
  v26 = MEMORY[0x242695AE8](v14, v21, v166);
  v27 = sub_2412C8FC4(&qword_2571254E0, &qword_257125478, MEMORY[0x24BDEEC10]);
  v165[0] = v26;
  v165[1] = v27;
  v28 = MEMORY[0x242695AE8](v14, v22, v165);
  v29 = sub_2412C8030(&qword_2543830B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v156 = v22;
  v157 = v23;
  v158 = v28;
  v159 = v29;
  MEMORY[0x242695A94](255, &v156, MEMORY[0x24BDF3908], 0);
  sub_2414B3514();
  sub_2412C8030(&qword_254384110, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  sub_2414B3148();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254E8);
  swift_getTupleTypeMetadata2();
  v30 = sub_2414B4B1C();
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v30);
  v119 = v30;
  v122 = v31;
  v32 = sub_2414B4894();
  v126 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v125 = (char *)&v119 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254F0);
  v120 = (_QWORD *)v32;
  v34 = sub_2414B3514();
  v127 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v148 = (char *)&v119 - v35;
  v128 = v36;
  v37 = sub_2414B3514();
  v130 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v129 = (char *)&v119 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  v131 = v37;
  v39 = sub_2414B3514();
  v133 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v132 = (char *)&v119 - v40;
  v134 = v41;
  v42 = sub_2414B3514();
  v137 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v135 = (char *)&v119 - v43;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v139 = v42;
  v44 = sub_2414B3514();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v136 = (char *)&v119 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v138 = (uint64_t)&v119 - v48;
  v49 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v123 = v51;
  v124 = (char *)&v119 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v54 = (uint64_t *)((char *)&v119 - v53);
  v55 = v149;
  v56 = sub_2413B0F3C();
  swift_getKeyPath();
  v156 = v56;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  v57 = *(double *)(v56 + 24);
  swift_release();
  v147 = v49;
  v58 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16);
  v59 = (int *)a1;
  v58(v54, v55, a1);
  v140 = v45;
  v141 = v44;
  v121 = (void (*)(char *, uint64_t, int *))v58;
  if (v57 == 0.0)
  {
    v60 = 1;
  }
  else
  {
    v62 = v54[1];
    v156 = *v54;
    v157 = v62;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257126718);
    sub_2414B47A4();
    v63 = *(_QWORD *)(v171[2] + 16);
    swift_getKeyPath();
    v156 = v63;
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B84();
    swift_release();
    v64 = *(unsigned __int8 *)(v63 + 16);
    swift_release();
    if (v64)
    {
      v61 = v120;
      v65 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      v60 = v65 ^ 1;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    v60 = 0;
  }
  v61 = v120;
LABEL_6:
  v66 = *(uint64_t (**)(uint64_t *, int *))(v147 + 8);
  v146 = v59;
  v67 = v66(v54, v59);
  MEMORY[0x24BDAC7A8](v67);
  v69 = v150;
  v68 = v151;
  *(&v119 - 4) = v151;
  *(&v119 - 3) = v69;
  v70 = v68;
  *((_BYTE *)&v119 - 16) = v60 & 1;
  *(&v119 - 1) = v55;
  sub_2414B3964();
  v71 = v125;
  v72 = sub_2414B4888();
  v120 = &v119;
  MEMORY[0x24BDAC7A8](v72);
  *(&v119 - 4) = v70;
  *(&v119 - 3) = v69;
  *(&v119 - 2) = v55;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125508);
  v122 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v61);
  sub_2412C8FC4(&qword_257125510, &qword_257125508, MEMORY[0x24BDEC6F8]);
  sub_2414B4504();
  (*(void (**)(char *, _QWORD *))(v126 + 8))(v71, v61);
  v73 = v146;
  v74 = sub_2413B0F3C();
  v75 = v55;
  v76 = v55 + v73[11];
  v77 = *(_QWORD *)v76;
  LOBYTE(v69) = *(_BYTE *)(v76 + 8);
  v78 = v75 + v73[12];
  LOBYTE(v71) = *(_BYTE *)v78;
  LODWORD(v126) = *(unsigned __int8 *)(v78 + 1);
  LODWORD(v125) = *(unsigned __int8 *)(v78 + 2);
  v79 = *(_QWORD *)(v75 + v73[13]);
  v80 = *(_QWORD *)(v78 + 8);
  v81 = *(_BYTE *)(v78 + 16);
  v82 = *(_QWORD *)(v75 + v73[14]);
  v83 = v75;
  swift_bridgeObjectRetain();
  v84 = v83;
  v85 = sub_2413B1184();
  v156 = v74;
  v157 = v77;
  LOBYTE(v158) = v69;
  LOBYTE(v159) = (_BYTE)v71;
  BYTE1(v159) = v126;
  BYTE2(v159) = (_BYTE)v125;
  v160 = v80;
  v161 = v81;
  v162 = v79;
  v163 = v82;
  v164 = v85;
  v86 = sub_2412C8FC4(&qword_257125518, &qword_2571254F0, MEMORY[0x24BDEDC10]);
  v155[0] = v122;
  v155[1] = v86;
  v87 = v128;
  v88 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v128, v155);
  v89 = v129;
  v90 = v148;
  MEMORY[0x242693DC0](&v156, v87, &type metadata for ScrubberStateChangeModifier, v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v90, v87);
  v91 = v124;
  v92 = v146;
  v121(v124, v84, v146);
  v93 = v147;
  v94 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
  v95 = swift_allocObject();
  v96 = v150;
  *(_QWORD *)(v95 + 16) = v151;
  *(_QWORD *)(v95 + 24) = v96;
  (*(void (**)(unint64_t, char *, int *))(v93 + 32))(v95 + v94, v91, v92);
  v97 = sub_2413BE780();
  v154[2] = v88;
  v154[3] = v97;
  v98 = MEMORY[0x24BDED308];
  v99 = v131;
  v100 = MEMORY[0x242695AE8]();
  sub_2412C4858();
  v101 = v132;
  sub_2414B4300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v99);
  v156 = sub_2413B0F3C();
  v102 = sub_2412C8FC4(&qword_257125530, &qword_2571245E8, MEMORY[0x24BDF0400]);
  v154[0] = v100;
  v154[1] = v102;
  v103 = v134;
  v104 = MEMORY[0x242695AE8](v98, v134, v154);
  v105 = v135;
  MEMORY[0x242693DC0](&v156, v103, &type metadata for ScrubberAccessibilityModifier, v104);
  swift_release();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v101, v103);
  swift_getKeyPath();
  v107 = v142;
  v106 = v143;
  v108 = v144;
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, *MEMORY[0x24BDED100], v144);
  v109 = sub_2413BE808();
  v153[0] = v104;
  v153[1] = v109;
  v110 = v98;
  v111 = v139;
  v112 = MEMORY[0x242695AE8](v110, v139, v153);
  v113 = (uint64_t)v136;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v105, v111);
  v114 = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
  v152[0] = v112;
  v152[1] = v114;
  v115 = v141;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v141, v152);
  v116 = v138;
  sub_2412FBF34(v113, v115, v138);
  v117 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
  v117(v113, v115);
  sub_2412EEA1C(v116, v115, v145);
  return ((uint64_t (*)(uint64_t, uint64_t))v117)(v116, v115);
}

uint64_t sub_2413B2110@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74[2];
  uint64_t v75;
  _QWORD v76[2];
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];

  v68 = a2;
  v67 = a1;
  v69 = a5;
  v61 = a3;
  v62 = a4;
  v65 = type metadata accessor for Scrubber(0, a3, a4, a4);
  v64 = *(_QWORD *)(v65 - 8);
  v66 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)&v53 - v7;
  v70 = sub_2414B3C94();
  MEMORY[0x24BDAC7A8](v70);
  v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125458);
  v10 = type metadata accessor for Scrubber.CompanionViews(255, a3, a4, v9);
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125460);
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  v15 = MEMORY[0x242695AE8](&unk_2414C1848, v10);
  v16 = MEMORY[0x24BDEC438];
  v87[0] = v15;
  v87[1] = MEMORY[0x24BDEC438];
  v17 = MEMORY[0x24BDED308];
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v87);
  v19 = MEMORY[0x24BDEEC10];
  v20 = sub_2412C8FC4(&qword_257125468, &qword_257125460, MEMORY[0x24BDEEC10]);
  v86[0] = v18;
  v86[1] = v20;
  v21 = MEMORY[0x242695AE8](v17, v12, v86);
  v22 = sub_24137771C();
  v85[0] = v21;
  v85[1] = v22;
  v84[0] = MEMORY[0x242695AE8](v17, v13, v85);
  v84[1] = v16;
  MEMORY[0x242695AE8](v17, v14, v84);
  v23 = sub_2414B3604();
  v24 = sub_2414B3514();
  v25 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125478);
  v26 = sub_2414B3514();
  v27 = sub_2414B2B00();
  v57 = v27;
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v29 = sub_2413BE4F8();
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v23);
  v83[0] = v29;
  v83[1] = v30;
  v82[0] = MEMORY[0x242695AE8](v17, v24, v83);
  v82[1] = MEMORY[0x24BDEBF50];
  v31 = MEMORY[0x242695AE8](v17, v25, v82);
  v32 = sub_2412C8FC4(&qword_2571254E0, &qword_257125478, v19);
  v81[0] = v31;
  v81[1] = v32;
  v58 = v26;
  v33 = MEMORY[0x242695AE8](v17, v26, v81);
  v56 = v33;
  v55 = sub_2412C8030(&qword_2543830B8, v28, MEMORY[0x24BDCE958]);
  v77 = v26;
  v78 = v27;
  v79 = v33;
  v80 = v55;
  MEMORY[0x242695A94](255, &v77, MEMORY[0x24BDF3908], 0);
  v34 = sub_2414B3514();
  v54 = sub_2412C8030(&qword_254384110, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  v35 = sub_2414B3148();
  v59 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v53 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v53 - v39;
  v41 = (uint64_t)v60;
  sub_2414B3C88();
  v42 = v64;
  v43 = v63;
  v44 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v68, v65);
  v45 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v46 = swift_allocObject();
  v47 = v62;
  *(_QWORD *)(v46 + 16) = v61;
  *(_QWORD *)(v46 + 24) = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v46 + v45, v43, v44);
  v77 = v58;
  v78 = v57;
  v79 = v56;
  v80 = v55;
  v76[0] = swift_getOpaqueTypeConformance2();
  v76[1] = MEMORY[0x24BDECC60];
  v48 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v34, v76);
  sub_2413B4344(v41, (uint64_t)sub_2413C64F0, v46, v70, v34, v54, v48);
  v75 = v48;
  v49 = MEMORY[0x242695AE8](MEMORY[0x24BDEBD40], v35, &v75);
  sub_2412FBF34((uint64_t)v37, v35, (uint64_t)v40);
  v50 = v59;
  v51 = *(void (**)(char *, uint64_t))(v59 + 8);
  v51(v37, v35);
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v37, v40, v35);
  v77 = 0x2D2D3A2D2DLL;
  v78 = 0xE500000000000000;
  LOBYTE(v79) = 0;
  v74[0] = (uint64_t)v37;
  v74[1] = (uint64_t)&v77;
  v73[0] = v35;
  v73[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2571254E8);
  v71 = v49;
  v72 = sub_2413C6574(&qword_257126700, &qword_2571254E8, (uint64_t (*)(void))sub_2413C475C, (uint64_t (*)(void))sub_2413C65E4);
  sub_2412F68CC(v74, 2uLL, (uint64_t)v73);
  v51(v40, v35);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v51)(v37, v35);
}

uint64_t sub_2413B277C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char v83;
  void (*v84)(char *, uint64_t);
  unsigned int *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t OpaqueTypeConformance2;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD v182[2];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  _QWORD v191[2];
  _QWORD v192[2];
  _QWORD v193[2];
  _QWORD v194[2];
  _QWORD v195[2];
  _QWORD v196[2];
  _QWORD v197[2];

  v176 = a2;
  v167 = a1;
  v174 = a5;
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173);
  v168 = v7;
  v171 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = a3;
  v180 = a4;
  v175 = type metadata accessor for Scrubber(0, a3, a4, v8);
  v166 = *(_QWORD *)(v175 - 8);
  v164 = *(_QWORD *)(v166 + 64);
  MEMORY[0x24BDAC7A8](v175);
  v165 = (char *)&v126 - v9;
  v179 = sub_2414B2B00();
  v170 = *(_QWORD *)(v179 - 8);
  MEMORY[0x24BDAC7A8](v179);
  v169 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_2414B3934();
  v157 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v155 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v154 = (uint64_t)&v126 - v13;
  v162 = sub_2414B4AE0();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v159 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for MediaTimelineControl(0);
  MEMORY[0x24BDAC7A8](v127);
  v16 = (uint64_t *)((char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571254B0);
  MEMORY[0x24BDAC7A8](v129);
  v128 = (uint64_t)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571254A0);
  MEMORY[0x24BDAC7A8](v130);
  v177 = (uint64_t)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125490);
  MEMORY[0x24BDAC7A8](v134);
  v142 = (uint64_t)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257125458);
  MEMORY[0x24BDAC7A8](v20);
  v144 = (char *)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Scrubber.CompanionViews(255, a3, a4, v22);
  v24 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125460);
  v25 = sub_2414B3514();
  v26 = sub_2414B3514();
  v27 = sub_2414B3514();
  v28 = MEMORY[0x242695AE8](&unk_2414C1848, v23);
  v29 = MEMORY[0x24BDEC438];
  v197[0] = v28;
  v197[1] = MEMORY[0x24BDEC438];
  v30 = MEMORY[0x24BDED308];
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v24, v197);
  v32 = MEMORY[0x24BDEEC10];
  v33 = sub_2412C8FC4(&qword_257125468, &qword_257125460, MEMORY[0x24BDEEC10]);
  v196[0] = v31;
  v196[1] = v33;
  v34 = MEMORY[0x242695AE8](v30, v25, v196);
  v35 = sub_24137771C();
  v195[0] = v34;
  v195[1] = v35;
  v194[0] = MEMORY[0x242695AE8](v30, v26, v195);
  v194[1] = v29;
  v36 = MEMORY[0x242695AE8](v30, v27, v194);
  v139 = v27;
  v133 = v36;
  v37 = sub_2414B3604();
  v145 = v20;
  v38 = sub_2414B3514();
  v137 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v136 = (char *)&v126 - v39;
  v40 = sub_2414B3514();
  v141 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v140 = (char *)&v126 - v41;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125478);
  v42 = sub_2414B3514();
  v158 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v178 = (char *)&v126 - v43;
  v44 = sub_2413BE4F8();
  v45 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v37);
  v131 = v44;
  v193[0] = v44;
  v193[1] = v45;
  v138 = v38;
  v132 = MEMORY[0x242695AE8](v30, v38, v193);
  v192[0] = v132;
  v192[1] = MEMORY[0x24BDEBF50];
  v143 = v40;
  v46 = MEMORY[0x242695AE8](v30, v40, v192);
  v47 = sub_2412C8FC4(&qword_2571254E0, &qword_257125478, v32);
  v135 = v46;
  v191[0] = v46;
  v191[1] = v47;
  v48 = MEMORY[0x242695AE8](v30, v42, v191);
  v49 = sub_2412C8030(&qword_2543830B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v163 = v42;
  v183 = v42;
  v184 = v179;
  v150 = v48;
  v185 = v48;
  v146 = v49;
  v186 = v49;
  v50 = MEMORY[0x242695A94](0, &v183, MEMORY[0x24BDF3908], 0);
  v149 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v147 = (char *)&v126 - v51;
  v151 = v52;
  v156 = sub_2414B3514();
  v153 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v148 = (char *)&v126 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v152 = (uint64_t)&v126 - v55;
  *v16 = sub_2413B0F3C();
  v56 = (uint64_t *)((char *)v16 + *(int *)(v127 + 20));
  *v56 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v57 = sub_2413B0F3C();
  swift_getKeyPath();
  v183 = v57;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  LOBYTE(v46) = *(_BYTE *)(v57 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled);
  swift_release();
  v58 = v128;
  sub_2412C6A50((uint64_t)v16, v128, type metadata accessor for MediaTimelineControl);
  *(_BYTE *)(v58 + *(int *)(v129 + 36)) = v46;
  sub_2412C68F4((uint64_t)v16, type metadata accessor for MediaTimelineControl);
  v59 = sub_2414B4A44();
  v129 = v60;
  sub_2413B38D0(v181, v180, v61, (uint64_t)&v183);
  LOBYTE(v42) = v183;
  v62 = v184;
  LOBYTE(v16) = v185;
  v63 = v186;
  LOBYTE(v32) = v187;
  v64 = v188;
  LOBYTE(v44) = v189;
  v65 = v190;
  v66 = v177;
  sub_2412DC3FC(v58, v177, &qword_2571254B0);
  v67 = v66 + *(int *)(v130 + 36);
  v68 = v129;
  *(_QWORD *)v67 = v59;
  *(_QWORD *)(v67 + 8) = v68;
  *(_BYTE *)(v67 + 16) = v42;
  *(_QWORD *)(v67 + 24) = v62;
  *(_BYTE *)(v67 + 32) = (_BYTE)v16;
  *(_QWORD *)(v67 + 40) = v63;
  *(_BYTE *)(v67 + 48) = v32;
  *(_QWORD *)(v67 + 56) = v64;
  v69 = v175;
  *(_BYTE *)(v67 + 64) = v44;
  v70 = v176;
  *(_QWORD *)(v67 + 72) = v65;
  sub_2412CBE78(v58, &qword_2571254B0);
  v71 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v183 = v71;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  LODWORD(v66) = *(unsigned __int8 *)(v71 + 16);
  swift_release();
  if ((_DWORD)v66 == 1)
    v72 = 1;
  else
    v72 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v183 = v73;
  sub_2414B2B84();
  swift_release();
  v130 = *(_OWORD *)(v73 + 24);
  v74 = *(_QWORD *)(v73 + 40);
  v75 = *(_QWORD *)(v73 + 48);
  swift_release();
  v76 = v177;
  v77 = v142;
  sub_2412DC3FC(v177, v142, &qword_2571254A0);
  v78 = v77 + *(int *)(v134 + 36);
  *(_BYTE *)v78 = v72 & 1;
  *(_OWORD *)(v78 + 8) = v130;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v75;
  sub_2412CBE78(v76, &qword_2571254A0);
  v79 = v154;
  sub_2412C8A04(v154);
  v80 = v157;
  v81 = v155;
  v82 = v160;
  (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v155, *MEMORY[0x24BDEEDF0], v160);
  sub_2412C8030(&qword_25437DB58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], MEMORY[0x24BDEEE28]);
  v83 = sub_2414B4CE4();
  v84 = *(void (**)(char *, uint64_t))(v80 + 8);
  v84(v81, v82);
  v84((char *)v79, v82);
  v85 = (unsigned int *)MEMORY[0x24BDF50D0];
  if ((v83 & 1) == 0)
    v85 = (unsigned int *)MEMORY[0x24BDF5098];
  v86 = v161;
  v87 = v159;
  v88 = v162;
  (*(void (**)(char *, _QWORD, uint64_t))(v161 + 104))(v159, *v85, v162);
  v89 = (uint64_t)v144;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(&v144[*(int *)(v145 + 36)], v87, v88);
  sub_2412DC3FC(v77, v89, &qword_257125490);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
  sub_2412CBE78(v77, &qword_257125490);
  v90 = sub_2414B4A38();
  MEMORY[0x24BDAC7A8](v90);
  v91 = v180;
  *(&v126 - 4) = v181;
  *(&v126 - 3) = v91;
  *(&v126 - 2) = v70;
  v92 = v136;
  sub_2414B4504();
  sub_2412CBE78(v89, &qword_257125458);
  v93 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v183 = v93;
  sub_2414B2B84();
  swift_release();
  swift_release();
  sub_2414B4B64();
  v94 = v140;
  v95 = v138;
  sub_2414B4210();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v92, v95);
  if (qword_257120870 != -1)
    swift_once();
  v96 = v69;
  v97 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v183 = v97;
  sub_2414B2B84();
  swift_release();
  v98 = *(_QWORD *)(v97 + 56);
  swift_release();
  v183 = v98;
  v99 = v143;
  sub_2414B457C();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v94, v99);
  v100 = v169;
  v101 = v173;
  v102 = v167;
  sub_2414B3124();
  v103 = v70;
  v104 = v166;
  v105 = v165;
  v106 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v165, v103, v96);
  v107 = v172;
  v108 = v171;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v171, v102, v101);
  v109 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  v110 = (v164 + *(unsigned __int8 *)(v107 + 80) + v109) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  v111 = swift_allocObject();
  v112 = v180;
  *(_QWORD *)(v111 + 16) = v181;
  *(_QWORD *)(v111 + 24) = v112;
  (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))(v111 + v109, v105, v106);
  (*(void (**)(unint64_t, char *, uint64_t))(v107 + 32))(v111 + v110, v108, v101);
  v113 = v147;
  v114 = v163;
  v115 = v179;
  v116 = v150;
  v117 = v146;
  v118 = v178;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v100, v115);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v118, v114);
  sub_2414B3E8C();
  if (qword_2571207F8 != -1)
    swift_once();
  v183 = v114;
  v184 = v115;
  v185 = v116;
  v186 = v117;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v120 = (uint64_t)v148;
  v121 = v151;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v113, v121);
  v182[0] = OpaqueTypeConformance2;
  v182[1] = MEMORY[0x24BDECC60];
  v122 = v156;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v156, v182);
  v123 = v152;
  sub_2412FBF34(v120, v122, v152);
  v124 = *(void (**)(uint64_t, uint64_t))(v153 + 8);
  v124(v120, v122);
  sub_2412EEA1C(v123, v122, v174);
  return ((uint64_t (*)(uint64_t, uint64_t))v124)(v123, v122);
}

uint64_t sub_2413B38D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  char v17;

  type metadata accessor for Scrubber(0, a1, a2, a3);
  v5 = sub_2413B0F3C();
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  v17 = *(_BYTE *)(v5 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8);
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(sub_2413B0F3C() + 16) + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  v16 = *(_QWORD *)(v6 + 24);
  v15 = *(_BYTE *)(v6 + 32);
  swift_release();
  v7 = sub_2413B0F3C();
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration);
  v9 = *(_BYTE *)(v7 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration + 8);
  swift_release();
  v10 = *(_QWORD *)(*(_QWORD *)(sub_2413B0F3C() + 16) + 64);
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  v11 = *(_QWORD *)(v10 + 40);
  LOBYTE(v5) = *(_BYTE *)(v10 + 48);
  swift_release();
  v12 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v13 = *(_QWORD *)(v12 + 96);
  result = swift_release();
  *(_BYTE *)a4 = (v17 & 1) == 0;
  *(_QWORD *)(a4 + 8) = v16;
  *(_BYTE *)(a4 + 16) = v15;
  *(_QWORD *)(a4 + 24) = v8;
  *(_BYTE *)(a4 + 32) = v9;
  *(_QWORD *)(a4 + 40) = v11;
  *(_BYTE *)(a4 + 48) = v5;
  *(_QWORD *)(a4 + 56) = v13;
  return result;
}

uint64_t sub_2413B3B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  uint64_t v72;

  v6 = a1;
  v67 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Scrubber.CompanionViews(0, v10, v11, v12);
  v53 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v52 - v14);
  v16 = sub_2414B3514();
  v57 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v52 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125460);
  v18 = sub_2414B3514();
  v59 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v58 = (char *)&v52 - v19;
  v60 = v20;
  v21 = sub_2414B3514();
  v63 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v61 = (char *)&v52 - v22;
  v65 = v23;
  v55 = sub_2414B3514();
  v66 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v62 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v64 = (uint64_t)&v52 - v26;
  v28 = type metadata accessor for Scrubber(0, a2, a3, v27);
  v29 = sub_2413B0F3C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v6 + *(int *)(v28 + 60), a2);
  *v15 = v29;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + *(int *)(v13 + 36), v9, a2);
  v54 = v6;
  v30 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v72 = v30;
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  LODWORD(v6) = *(unsigned __int8 *)(v30 + 16);
  swift_release();
  if ((_DWORD)v6 == 1)
  {
    swift_bridgeObjectRelease();
    v31 = v56;
  }
  else
  {
    v31 = v56;
    sub_2414B57D0();
    swift_bridgeObjectRelease();
  }
  v32 = MEMORY[0x242695AE8](&unk_2414C1848, v13);
  sub_2414B44C8();
  (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v15, v13);
  if (qword_257120870 != -1)
    swift_once();
  v33 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_getKeyPath();
  v72 = v33;
  sub_2414B2B84();
  swift_release();
  v34 = *(_BYTE *)(v33 + 16);
  swift_release();
  LOBYTE(v72) = v34;
  v35 = MEMORY[0x24BDEC438];
  v71[0] = v32;
  v71[1] = MEMORY[0x24BDEC438];
  v36 = MEMORY[0x24BDED308];
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v71);
  sub_2413C0810();
  v38 = v58;
  sub_2414B457C();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v16);
  v39 = sub_2412C8FC4(&qword_257125468, &qword_257125460, MEMORY[0x24BDEEC10]);
  v70[0] = v37;
  v70[1] = v39;
  v40 = v60;
  v41 = MEMORY[0x242695AE8](v36, v60, v70);
  v42 = v61;
  sub_2413775FC(v40, v41, 0.0, 1.0);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v40);
  if (qword_2571207F8 != -1)
    swift_once();
  v43 = sub_24137771C();
  v69[0] = v41;
  v69[1] = v43;
  v44 = MEMORY[0x24BDED308];
  v45 = v65;
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v65, v69);
  v47 = (uint64_t)v62;
  sub_2414B44C8();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v45);
  v68[0] = v46;
  v68[1] = v35;
  v48 = v55;
  MEMORY[0x242695AE8](v44, v55, v68);
  v49 = v64;
  sub_2412FBF34(v47, v48, v64);
  v50 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v50(v47, v48);
  sub_2412EEA1C(v49, v48, v67);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v49, v48);
}

uint64_t sub_2413B41C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v17[-v10];
  type metadata accessor for Scrubber(0, a3, a4, v12);
  v13 = sub_2413B0F3C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  sub_2414B3124();
  v14 = sub_2414B2B00();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
  v15 = v13 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel_latestDate;
  swift_beginAccess();
  sub_2412DC3FC(v15, (uint64_t)v8, &qword_2571264F0);
  swift_beginAccess();
  sub_2413C4CF4((uint64_t)v11, v15);
  swift_endAccess();
  sub_2413A7558((uint64_t)v8);
  sub_2412CBE78((uint64_t)v11, &qword_2571264F0);
  sub_2412CBE78((uint64_t)v8, &qword_2571264F0);
  return swift_release();
}

uint64_t sub_2413B4344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v14 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17, v15);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = a2;
  v18[7] = a3;
  sub_2414B313C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
}

uint64_t sub_2413B4438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v9 = type metadata accessor for Scrubber(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v17 - v12, a1, v9, v11);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, v13, v9);
  *a5 = sub_2413C64D8;
  a5[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15;
  return result;
}

uint64_t sub_2413B4518@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  CGFloat MinX;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CGRect v37;

  v6 = sub_2414B3AFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrubberTooltipModifier(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (CGFloat *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_2414B4648();
  type metadata accessor for Scrubber(0, a1, a2, v13);
  v14 = *(_QWORD *)(sub_2413B0F3C() + 16);
  swift_retain();
  swift_release();
  sub_2414B3B8C();
  sub_2414B3268();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v37.origin.x = v16;
  v37.origin.y = v18;
  v37.size.width = v20;
  v37.size.height = v22;
  MinX = CGRectGetMinX(v37);
  *(_QWORD *)v12 = v14;
  v12[1] = MinX;
  v32 = 0;
  sub_2414B4798();
  v24 = v35;
  *((_QWORD *)v12 + 2) = v34;
  *((_QWORD *)v12 + 3) = v24;
  v32 = 0;
  v33 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543809B0);
  sub_2414B4798();
  v25 = v35;
  v26 = v36;
  *((_QWORD *)v12 + 4) = v34;
  *((_BYTE *)v12 + 40) = v25;
  *((_QWORD *)v12 + 6) = v26;
  v27 = (uint64_t *)((char *)v12 + *(int *)(v10 + 32));
  *v27 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v28 = (uint64_t *)((char *)v12 + *(int *)(v10 + 36));
  *v28 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571266F8);
  sub_2412C6A50((uint64_t)v12, (uint64_t)a3 + *(int *)(v29 + 36), type metadata accessor for ScrubberTooltipModifier);
  *a3 = v31;
  return sub_2412C68F4((uint64_t)v12, type metadata accessor for ScrubberTooltipModifier);
}

uint64_t sub_2413B478C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Scrubber(0, a3, a4, a4);
  sub_2413B0F3C();
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

uint64_t sub_2413B4868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v21 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C0);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  sub_2414B4804();
  type metadata accessor for Scrubber.SensitivityLabel(255, v4, v5, v6);
  sub_2414B3A90();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C8);
  swift_getTupleTypeMetadata3();
  v7 = sub_2414B4B1C();
  sub_2412C8FC4(&qword_2571263D0, &qword_2571263B8, MEMORY[0x24BDEB998]);
  v8 = sub_2414B3304();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = v5;
  v23 = v4;
  v24 = v5;
  v25 = v2;
  sub_2413B4A94((uint64_t)sub_2413C459C, (uint64_t)v22, v4, v5, (uint64_t)v11);
  swift_release();
  v16 = sub_2412C8FC4(&qword_2571263D8, &qword_2571263B8, MEMORY[0x24BDEB9A8]);
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v7);
  v26[0] = v16;
  v26[1] = v17;
  MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v8, v26);
  sub_2412FBF34((uint64_t)v11, v8, (uint64_t)v14);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  sub_2412EEA1C((uint64_t)v14, v8, v21);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

uint64_t sub_2413B4A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C0);
  sub_2414B4804();
  type metadata accessor for Scrubber.SensitivityLabel(255, a3, a4, v10);
  sub_2414B3A90();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C8);
  swift_getTupleTypeMetadata3();
  v11 = sub_2414B4B1C();
  v12 = sub_2413C4950();
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v11);
  return sub_2413A6270(a1, a2, (uint64_t)&type metadata for ScrubberCompanionViewLayout, v11, v12, v13, a5);
}

uint64_t sub_2413B4B94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[5];
  _QWORD v107[3];
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117[3];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  _OWORD v127[8];
  uint64_t v128;
  _OWORD v129[8];
  uint64_t v130;
  _OWORD v131[8];
  uint64_t v132;

  v103 = a5;
  v8 = type metadata accessor for Scrubber.SensitivityLabel(0, a2, a3, a4);
  v88 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v90 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v89 = (uint64_t)&v84 - v11;
  v94 = a2;
  v95 = a3;
  v12 = sub_2414B4804();
  v85 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v87 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v86 = (uint64_t)&v84 - v15;
  v96 = v16;
  v100 = v8;
  v102 = sub_2414B3A90();
  v99 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v101 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v97 = (char *)&v84 - v19;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571263E0);
  MEMORY[0x24BDAC7A8](v92);
  v91 = (uint64_t)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571263C0);
  MEMORY[0x24BDAC7A8](v104);
  v98 = (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v84 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v105 = (uint64_t)&v84 - v26;
  v27 = *a1;
  swift_getKeyPath();
  *(_QWORD *)&v131[0] = v27;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v27 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels) & 1) != 0)
  {
    v28 = 0xE500000000000000;
    v29 = 0x2D2D3A2D2DLL;
  }
  else
  {
    v29 = sub_2413AA8C4();
    v28 = v30;
  }
  v31 = *(_QWORD *)(v27 + 16);
  swift_getKeyPath();
  *(_QWORD *)&v131[0] = v31;
  v93 = sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v32 = *(unsigned __int8 *)(v31 + 16);
  if (*(_BYTE *)(v31 + 16))
  {
    v33 = a1;
    if (v32 == 1)
    {
      v34 = 1;
      v35 = v94;
      goto LABEL_9;
    }
  }
  else
  {
    v33 = a1;
  }
  v35 = v94;
  v34 = sub_2414B57D0();
LABEL_9:
  swift_bridgeObjectRelease();
  v36 = sub_2414B4A50();
  sub_24133F988(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v131, 0.0, 1, 0.0, 1, v36, v37, v29, v28, v34 & 1);
  swift_bridgeObjectRelease();
  v38 = *v33;
  swift_getKeyPath();
  *(_QWORD *)&v129[0] = v38;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v38 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner))
    v39 = 0.0;
  else
    v39 = 1.0;
  v40 = sub_2414B4A50();
  v42 = v41;
  v43 = v33;
  v44 = v91;
  v45 = v95;
  sub_2413B558C(v43, v91);
  v46 = (uint64_t *)(v44 + *(int *)(v92 + 36));
  *v46 = v40;
  v46[1] = v42;
  sub_2412DC3FC(v44, (uint64_t)&v24[*(int *)(v104 + 36)], &qword_2571263E0);
  v47 = v131[7];
  *((_OWORD *)v24 + 6) = v131[6];
  *((_OWORD *)v24 + 7) = v47;
  *((_QWORD *)v24 + 16) = v132;
  v48 = v131[3];
  *((_OWORD *)v24 + 2) = v131[2];
  *((_OWORD *)v24 + 3) = v48;
  v49 = v131[5];
  *((_OWORD *)v24 + 4) = v131[4];
  *((_OWORD *)v24 + 5) = v49;
  v50 = v131[1];
  *(_OWORD *)v24 = v131[0];
  *((_OWORD *)v24 + 1) = v50;
  *((double *)v24 + 17) = v39;
  v51 = v44;
  v52 = v43;
  sub_2412CBE78(v51, &qword_2571263E0);
  sub_2412EAEA4((uint64_t)v24, v105, &qword_2571263C0);
  v53 = *v43;
  swift_getKeyPath();
  *(_QWORD *)&v129[0] = v53;
  sub_2414B2B84();
  swift_release();
  if (*(_QWORD *)(v53 + 48))
  {
    v54 = *v52;
    swift_getKeyPath();
    *(_QWORD *)&v129[0] = v54;
    sub_2414B2B84();
    swift_release();
    v55 = *(_QWORD *)(v54 + 48);
    v56 = v90;
    sub_2413B587C(v55, v35, v45, v90);
    v57 = v100;
    MEMORY[0x242695AE8](&unk_2414C2158, v100);
    v58 = v89;
    sub_2412FBF34(v56, v57, v89);
    v59 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
    v59(v56, v57);
    sub_2412EEA1C(v58, v57, v56);
    v60 = v96;
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v96);
    v61 = v97;
    sub_2412F1584(v56, v60, v57);
    v59(v56, v57);
    v62 = v58;
    v63 = v57;
  }
  else
  {
    v64 = sub_2414B3868();
    MEMORY[0x24BDAC7A8](v64);
    v65 = (uint64_t)v87;
    sub_2414B47F8();
    v60 = v96;
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v96);
    v66 = v86;
    sub_2412FBF34(v65, v60, v86);
    v59 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v59(v65, v60);
    sub_2412EEA1C(v66, v60, v65);
    v57 = v100;
    MEMORY[0x242695AE8](&unk_2414C2158, v100);
    v61 = v97;
    sub_24132F340(v65, v60);
    v59(v65, v60);
    v62 = v66;
    v63 = v60;
  }
  v59(v62, v63);
  v67 = *v52;
  v68 = sub_2413A6E14();
  v70 = v69;
  v71 = *(_QWORD *)(v67 + 16);
  swift_getKeyPath();
  *(_QWORD *)&v129[0] = v71;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v71 + 16) && *(_BYTE *)(v71 + 16) == 1)
    v72 = 1;
  else
    v72 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  v73 = sub_2414B4A5C();
  sub_24133F988(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v129, 0.0, 1, 0.0, 1, v73, v74, v68, v70, v72 & 1);
  swift_bridgeObjectRelease();
  v124 = v129[6];
  v125 = v129[7];
  v126 = v130;
  v120 = v129[2];
  v121 = v129[3];
  v122 = v129[4];
  v123 = v129[5];
  v118 = v129[0];
  v119 = v129[1];
  v75 = v105;
  v76 = v98;
  sub_2412DC3FC(v105, v98, &qword_2571263C0);
  v117[0] = v76;
  v77 = v99;
  v79 = (uint64_t)v101;
  v78 = v102;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v61, v102);
  v114 = v124;
  v115 = v125;
  v116 = v126;
  v110 = v120;
  v111 = v121;
  v112 = v122;
  v113 = v123;
  v108 = v118;
  v109 = v119;
  v117[1] = v79;
  v117[2] = (uint64_t)&v108;
  v107[0] = v104;
  v107[1] = v78;
  v107[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2571263C8);
  v106[2] = sub_2413C4600();
  v80 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v60);
  v81 = MEMORY[0x242695AE8](&unk_2414C2158, v57);
  v106[0] = v80;
  v106[1] = v81;
  v106[3] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v78, v106);
  v106[4] = sub_2413C46F0();
  sub_2412F68CC(v117, 3uLL, (uint64_t)v107);
  v82 = *(void (**)(char *, uint64_t))(v77 + 8);
  v82(v61, v78);
  sub_2412CBE78(v75, &qword_2571263C0);
  v127[6] = v114;
  v127[7] = v115;
  v128 = v116;
  v127[2] = v110;
  v127[3] = v111;
  v127[4] = v112;
  v127[5] = v113;
  v127[0] = v108;
  v127[1] = v109;
  sub_2412FAA34((uint64_t)v127);
  v82((char *)v79, v78);
  return sub_2412CBE78(v76, &qword_2571263C0);
}

uint64_t sub_2413B558C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v3 = sub_2414B2FA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E08);
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E90);
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  swift_getKeyPath();
  v25 = v13;
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v13 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner) == 1)
  {
    sub_2414B30DC();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEB490], v3);
    KeyPath = swift_getKeyPath();
    v15 = (uint64_t *)&v12[*(int *)(v10 + 36)];
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384158);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v15 + *(int *)(v16 + 28), v6, v3);
    *v15 = KeyPath;
    v17 = v22;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
    v18 = v24;
    sub_2412EAEA4((uint64_t)v12, v24, &qword_254383E90);
    v19 = 0;
    v20 = v18;
  }
  else
  {
    v19 = 1;
    v20 = v24;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v20, v19, 1, v10);
}

uint64_t sub_2413B57D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Scrubber.CompanionViews(0, v9, v10, v11);
  sub_2412FBF34(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_2412EEA1C((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_2413B587C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;

  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = swift_getKeyPath();
  *(_BYTE *)(a4 + 16) = 0;
  v8 = (uint64_t *)(a4 + *(int *)(type metadata accessor for Scrubber.SensitivityLabel(0, a2, a3, v7) + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2413B5904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v25 = sub_2414B4AE0();
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v27);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571268E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571268E8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571268F0);
  MEMORY[0x24BDAC7A8](v26);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2413B5BF0(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)v11);
  sub_2414B3F34();
  v17 = sub_2414B3EBC();
  swift_release();
  KeyPath = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v14, &qword_2571268E0);
  v19 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  sub_2412CBE78((uint64_t)v11, &qword_2571268E0);
  if (qword_2571207D0 != -1)
    swift_once();
  v20 = qword_257136EB8;
  v21 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF5098], v25);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v8 + *(int *)(v27 + 36), v6, v21);
  *v8 = v20;
  v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  swift_retain();
  v22(v6, v21);
  sub_2412DC3FC((uint64_t)v8, (uint64_t)&v16[*(int *)(v26 + 36)], &qword_2571265B0);
  sub_2412DC3FC((uint64_t)v14, (uint64_t)v16, &qword_2571268E8);
  sub_2412CBE78((uint64_t)v8, &qword_2571265B0);
  sub_2412CBE78((uint64_t)v14, &qword_2571268E8);
  v23 = v28;
  sub_2412DC3FC((uint64_t)v16, v28, &qword_2571268F0);
  *(_WORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571268F8) + 36)) = 256;
  return sub_2412CBE78((uint64_t)v16, &qword_2571268F0);
}

uint64_t sub_2413B5BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;

  v59 = a2;
  v60 = (char *)a3;
  v66 = a4;
  v5 = sub_2414B346C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v59 - v10;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126900);
  MEMORY[0x24BDAC7A8](v68);
  v65 = (uint64_t)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126908);
  MEMORY[0x24BDAC7A8](v64);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126910);
  MEMORY[0x24BDAC7A8](v67);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126918);
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 8);
  v20 = *(_BYTE *)(a1 + 16);
  sub_2412C7080(v19, v20);
  v21 = sub_2412F9C24(v19, v20);
  sub_2412C821C(v19, v20);
  if ((v21 & 1) != 0)
  {
    v69 = sub_2413A70F0(*(_QWORD *)a1);
    v70 = v23;
    sub_2412F6D88();
    v24 = sub_2414B40F0();
    v26 = v25;
    v28 = v27;
    v59 = v27;
    v30 = v29 & 1;
    KeyPath = swift_getKeyPath();
    v32 = swift_getKeyPath();
    v69 = v24;
    v70 = v26;
    v71 = v30;
    v72 = v28;
    v73 = KeyPath;
    v74 = 2;
    v75 = 0;
    v76 = v32;
    v77 = 1;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126928);
    v34 = sub_2413C7C44();
    v60 = v16;
    v35 = v34;
    v36 = v61;
    sub_2414B436C();
    sub_2412F6D78(v24, v26, v30);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v38 = v62;
    v37 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v14, v36, v63);
    swift_storeEnumTagMultiPayload();
    v69 = v33;
    v70 = v35;
    swift_getOpaqueTypeConformance2();
    v39 = (uint64_t)v60;
    sub_2414B3A84();
    sub_2412DC3FC(v39, v65, &qword_257126910);
    swift_storeEnumTagMultiPayload();
    sub_2413C7CC8();
    sub_2414B3A84();
    sub_2412CBE78(v39, &qword_257126910);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  }
  else
  {
    v41 = v14;
    v42 = v65;
    type metadata accessor for Scrubber.SensitivityLabel(0, v59, (uint64_t)v60, v22);
    sub_241345CEC((uint64_t)v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDECF18], v5);
    sub_2412C8030(&qword_257126920, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    v43 = sub_2414B4CC0();
    v44 = *(void (**)(char *, uint64_t))(v6 + 8);
    v44(v8, v5);
    v44(v11, v5);
    v45 = *(_QWORD *)a1;
    if ((v43 & 1) != 0)
    {
      v69 = sub_2413B61A8(v45);
      v70 = v46;
      sub_2412F6D88();
      *(_QWORD *)v42 = sub_2414B40F0();
      *(_QWORD *)(v42 + 8) = v47;
      *(_BYTE *)(v42 + 16) = v48 & 1;
      *(_QWORD *)(v42 + 24) = v49;
      swift_storeEnumTagMultiPayload();
      sub_2413C7CC8();
      return sub_2414B3A84();
    }
    else
    {
      v69 = sub_2413A70F0(v45);
      v70 = v50;
      sub_2412F6D88();
      v51 = sub_2414B40F0();
      v53 = v52;
      *(_QWORD *)v41 = v51;
      *((_QWORD *)v41 + 1) = v52;
      v55 = v54 & 1;
      v41[16] = v54 & 1;
      *((_QWORD *)v41 + 3) = v56;
      swift_storeEnumTagMultiPayload();
      sub_241307638(v51, v53, v55);
      swift_bridgeObjectRetain();
      v57 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126928);
      v58 = sub_2413C7C44();
      v69 = v57;
      v70 = v58;
      swift_getOpaqueTypeConformance2();
      sub_2414B3A84();
      sub_2412DC3FC((uint64_t)v16, v42, &qword_257126910);
      swift_storeEnumTagMultiPayload();
      sub_2413C7CC8();
      sub_2414B3A84();
      sub_2412CBE78((uint64_t)v16, &qword_257126910);
      sub_2412F6D78(v51, v53, v55);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_2413B61A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;

  v2 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v3);
  switch(a1)
  {
    case 0:
      sub_2414B4CF0();
      if (qword_2543846C8 != -1)
        goto LABEL_12;
      goto LABEL_10;
    case 1:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
      goto LABEL_12;
    case 2:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
      goto LABEL_12;
    case 3:
      sub_2414B4CF0();
      if (qword_2543846C8 == -1)
        goto LABEL_10;
LABEL_12:
      swift_once();
LABEL_10:
      v5 = (id)qword_25438E910;
      sub_2414B2B3C();
      result = sub_2414B4D80();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_2413B6464()
{
  unsigned __int8 v1;

  sub_2413C4818();
  sub_2414B3838();
  return v1;
}

uint64_t sub_2413B649C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2413C4818();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2413B64E8()
{
  sub_2413C4818();
  return sub_2414B3844();
}

uint64_t sub_2413B6534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t OpaqueTypeConformance2;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  ValueMetadata *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[8];
  uint64_t v59;
  ValueMetadata *v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;
  _BYTE v66[32];
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70[8];

  v47 = a1;
  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126488);
  v48 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126490);
  v50 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126498);
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264A0);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[3];
  *(_OWORD *)&v66[16] = v2[2];
  v67 = v10;
  v68 = *((_QWORD *)v2 + 8);
  v11 = v2[1];
  v65 = *v2;
  *(_OWORD *)v66 = v11;
  v52 = &v68;
  sub_2412EAEA4((uint64_t)&v65 + 8, (uint64_t)v70, &qword_2543841F8);
  sub_2412EAEA4((uint64_t)v70, (uint64_t)&v59, &qword_2543841F8);
  v12 = swift_allocObject();
  v13 = v67;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)&v66[16];
  *(_OWORD *)(v12 + 64) = v13;
  *(_QWORD *)(v12 + 80) = v68;
  v14 = *(_OWORD *)v66;
  *(_OWORD *)(v12 + 16) = v65;
  *(_OWORD *)(v12 + 32) = v14;
  sub_2413C4A6C((uint64_t)&v65);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264A8);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
  v17 = sub_2412C8FC4(&qword_2571264B0, &qword_2571264A8, MEMORY[0x24BDEFB78]);
  v18 = sub_2413C4AB0();
  sub_2414B4564();
  swift_release();
  v63 = *(_OWORD *)&v66[8];
  v64 = v66[24];
  v19 = swift_allocObject();
  v20 = v67;
  *(_OWORD *)(v19 + 48) = *(_OWORD *)&v66[16];
  *(_OWORD *)(v19 + 64) = v20;
  *(_QWORD *)(v19 + 80) = v68;
  v21 = *(_OWORD *)v66;
  *(_OWORD *)(v19 + 16) = v65;
  *(_OWORD *)(v19 + 32) = v21;
  sub_2413C4A6C((uint64_t)&v65);
  v59 = v15;
  v60 = (ValueMetadata *)v16;
  v61 = v17;
  v62 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = sub_2413C4B38();
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v3);
  *(_QWORD *)&v63 = v67;
  v24 = swift_allocObject();
  v25 = v67;
  *(_OWORD *)(v24 + 48) = *(_OWORD *)&v66[16];
  *(_OWORD *)(v24 + 64) = v25;
  *(_QWORD *)(v24 + 80) = v68;
  v26 = *(_OWORD *)v66;
  *(_OWORD *)(v24 + 16) = v65;
  *(_OWORD *)(v24 + 32) = v26;
  sub_2413C4A6C((uint64_t)&v65);
  v59 = v3;
  v60 = &type metadata for ScrubberLoadingConfiguration;
  v61 = OpaqueTypeConformance2;
  v62 = v23;
  v27 = swift_getOpaqueTypeConformance2();
  v28 = (ValueMetadata *)MEMORY[0x24BEE13C8];
  v29 = MEMORY[0x24BEE13F8];
  v30 = v49;
  v31 = v46;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v31);
  *(_QWORD *)&v63 = *((_QWORD *)&v67 + 1);
  v69 = *((_QWORD *)&v67 + 1);
  v32 = swift_allocObject();
  v33 = v67;
  *(_OWORD *)(v32 + 48) = *(_OWORD *)&v66[16];
  *(_OWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 80) = v68;
  v34 = *(_OWORD *)v66;
  *(_OWORD *)(v32 + 16) = v65;
  *(_OWORD *)(v32 + 32) = v34;
  sub_2413C4A6C((uint64_t)&v65);
  sub_2413C4B94((uint64_t)&v63);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264C8);
  v59 = v31;
  v60 = v28;
  v61 = v27;
  v62 = v29;
  v36 = swift_getOpaqueTypeConformance2();
  v37 = sub_2412C8620(&qword_2571264D0, &qword_2571264C8, (uint64_t (*)(void))sub_2413C07C8, MEMORY[0x24BEE12C0]);
  v38 = v51;
  v39 = v53;
  sub_2414B4564();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v39);
  sub_2412EAEA4((uint64_t)v52, (uint64_t)&v69, &qword_2571264D8);
  sub_2412EAEA4((uint64_t)&v69, (uint64_t)v58, &qword_2571264D8);
  v40 = swift_allocObject();
  v41 = v67;
  *(_OWORD *)(v40 + 48) = *(_OWORD *)&v66[16];
  *(_OWORD *)(v40 + 64) = v41;
  *(_QWORD *)(v40 + 80) = v68;
  v42 = *(_OWORD *)v66;
  *(_OWORD *)(v40 + 16) = v65;
  *(_OWORD *)(v40 + 32) = v42;
  sub_2413C4A6C((uint64_t)&v65);
  sub_241304458((uint64_t)&v69);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571264D8);
  v59 = v39;
  v60 = (ValueMetadata *)v35;
  v61 = v36;
  v62 = v37;
  swift_getOpaqueTypeConformance2();
  sub_2413C4C1C();
  v43 = v55;
  sub_2414B4564();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v38, v43);
}

uint64_t sub_2413B6B64()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
  sub_2414B2B78();
  return swift_release();
}

void sub_2413B6C14(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 56);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2413AC97C(v1);
}

double sub_2413B6CEC@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;
  CGRect v25;
  CGRect v26;

  v11 = sub_2414B4918();
  v12 = MEMORY[0x24BDF48E8];
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(double *)(v5 + 16);
  if (*(_BYTE *)v5)
    v16 = -4.0;
  else
    v16 = -2.0;
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  v26 = CGRectInset(v25, -4.0, v16);
  UIEdgeInsetsInsetRect(v26.origin.x, v26.origin.y, v26.size.width, v26.size.height, 0.0, v15);
  v17 = *MEMORY[0x24BDEEB68];
  v18 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v14, v17, v18);
  sub_2414B490C();
  sub_2412C68F4((uint64_t)v14, (uint64_t (*)(_QWORD))v12);
  result = *(double *)&v22;
  v20 = v23;
  *(_OWORD *)a1 = v22;
  *(_OWORD *)(a1 + 16) = v20;
  *(_BYTE *)(a1 + 32) = v24;
  return result;
}

void (*sub_2413B6E44(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2414B2ECC();
  return sub_2413B6EA0;
}

uint64_t sub_2413B6EA4()
{
  sub_2413C7DC4();
  return sub_2414B478C();
}

uint64_t sub_2413B6EF4()
{
  sub_2413C7DC4();
  return sub_2414B475C();
}

uint64_t sub_2413B6F44()
{
  sub_2413C7DC4();
  return sub_2414B4774();
}

uint64_t sub_2413B6F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v23 = a2;
  v3 = sub_2414B3A9C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B361C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126450);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_BYTE *)v2;
  v21 = *(_OWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 24);
  v16 = *(_QWORD *)(v2 + 32);
  sub_2414B3610();
  v17 = &v13[*(int *)(v11 + 36)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126458);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v17[*(int *)(v18 + 40)], v10, v7);
  *v17 = v14;
  *(_OWORD *)(v17 + 8) = v21;
  *((_QWORD *)v17 + 3) = v15;
  *((_QWORD *)v17 + 4) = v16;
  v17[40] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126460);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v22, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2414B3634();
  sub_2413C49A4();
  sub_2412C8030(&qword_254382BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_2412CBE78((uint64_t)v13, &qword_257126450);
}

uint64_t sub_2413B7170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _BYTE *v39;
  char v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t KeyPath;
  _BYTE *v46;
  uint64_t *v47;
  _BYTE *v48;
  _BYTE v50[12];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a4;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265A8);
  MEMORY[0x24BDAC7A8](v56);
  v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v57 = &v50[-v10];
  v11 = sub_2414B4AE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v52);
  v16 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)&v50[-v18];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B8);
  MEMORY[0x24BDAC7A8](v54);
  v21 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265C0);
  MEMORY[0x24BDAC7A8](v55);
  v61 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265C8);
  MEMORY[0x24BDAC7A8](v59);
  v60 = &v50[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265D0);
  MEMORY[0x24BDAC7A8](v24);
  v58 = &v50[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v64 = a1;
  v65 = a2;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v26 = sub_2414B40F0();
  v28 = v27;
  v51 = v29;
  v53 = v30;
  v63 = a3;
  if ((a3 & 1) != 0)
  {
    if (qword_2571207C0 != -1)
      swift_once();
    v31 = &qword_257136EA8;
  }
  else
  {
    if (qword_2571207D0 != -1)
      swift_once();
    v31 = &qword_257136EB8;
  }
  v32 = *v31;
  swift_retain();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDF5098], v11);
  (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))((char *)v19 + *(int *)(v52 + 36), v14, v11);
  *v19 = v32;
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  if ((v63 & 1) != 0)
    v33 = sub_2414B3B38();
  else
    v33 = sub_2414B3B44();
  v34 = v33;
  sub_2412DC3FC((uint64_t)v19, (uint64_t)v16, &qword_2571265B0);
  v35 = (uint64_t)v16;
  v36 = v56;
  v37 = (uint64_t *)&v8[*(int *)(v56 + 56)];
  *v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2412EAEA4(v35, (uint64_t)v8, &qword_2571265B0);
  *(_DWORD *)&v8[*(int *)(v36 + 52)] = v34;
  v38 = (uint64_t)v8;
  v39 = v57;
  sub_2412EAEA4(v38, (uint64_t)v57, &qword_2571265A8);
  sub_2412DC3FC((uint64_t)v39, (uint64_t)&v21[*(int *)(v54 + 36)], &qword_2571265A8);
  *(_QWORD *)v21 = v26;
  *((_QWORD *)v21 + 1) = v28;
  v40 = v51;
  LOBYTE(v34) = v51 & 1;
  v21[16] = v51 & 1;
  *((_QWORD *)v21 + 3) = v53;
  sub_241307638(v26, v28, v40 & 1);
  swift_bridgeObjectRetain();
  sub_2412CBE78((uint64_t)v39, &qword_2571265A8);
  sub_2412CBE78((uint64_t)v19, &qword_2571265B0);
  sub_2412F6D78(v26, v28, v34);
  swift_bridgeObjectRelease();
  if (qword_257120870 != -1)
    swift_once();
  v41 = qword_257125420;
  v42 = v61;
  sub_2412DC3FC((uint64_t)v21, (uint64_t)v61, &qword_2571265B8);
  v43 = &v42[*(int *)(v55 + 36)];
  *(_QWORD *)v43 = v41;
  v43[8] = v63 & 1;
  swift_retain();
  sub_2412CBE78((uint64_t)v21, &qword_2571265B8);
  sub_2414B3F34();
  sub_2414B3EBC();
  swift_release();
  v44 = sub_2414B3EA4();
  swift_release();
  KeyPath = swift_getKeyPath();
  v46 = v60;
  sub_2412DC3FC((uint64_t)v42, (uint64_t)v60, &qword_2571265C0);
  v47 = (uint64_t *)&v46[*(int *)(v59 + 36)];
  *v47 = KeyPath;
  v47[1] = v44;
  sub_2412CBE78((uint64_t)v42, &qword_2571265C0);
  v48 = v58;
  sub_2412DC3FC((uint64_t)v46, (uint64_t)v58, &qword_2571265C8);
  sub_2412CBE78((uint64_t)v46, &qword_2571265C8);
  return sub_2412EAEA4((uint64_t)v48, v62, &qword_2571265D0);
}

uint64_t sub_2413B76E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413B7170(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

__n128 sub_2413B76F0@<Q0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  uint64_t v10;
  _OWORD v11[10];
  __int128 v12;
  _BYTE v13[183];
  char v14;
  _BYTE v15[208];
  _QWORD v16[2];
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[23];
  _BYTE v29[16];
  _BYTE v30[16];
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];

  if ((*a1 & 1) == 0
    || (sub_2412EAEA4((uint64_t)(a1 + 8), (uint64_t)v30, &qword_2543841F8),
        sub_2412EAEA4((uint64_t)v30, (uint64_t)&v31, &qword_2543841F8),
        (v32 & 1) != 0)
    || (sub_2412EAEA4((uint64_t)(a1 + 40), (uint64_t)v29, &qword_2543841F8),
        sub_2412EAEA4((uint64_t)v29, (uint64_t)&v33, &qword_2543841F8),
        (v34 & 1) != 0))
  {
    v16[0] = sub_2414B463C();
    sub_2413C4FD4((uint64_t)v16);
  }
  else
  {
    v10 = sub_2414B3880();
    sub_2413B7948((uint64_t)v11);
    *(_OWORD *)&v13[71] = v11[4];
    *(_OWORD *)&v13[55] = v11[3];
    *(_OWORD *)&v13[119] = v11[7];
    *(_OWORD *)&v13[135] = v11[8];
    *(_OWORD *)&v13[151] = v11[9];
    *(_OWORD *)&v13[167] = v12;
    *(_OWORD *)&v13[87] = v11[5];
    *(_OWORD *)&v13[103] = v11[6];
    *(_OWORD *)&v13[7] = v11[0];
    *(_OWORD *)&v13[23] = v11[1];
    *(_OWORD *)&v13[39] = v11[2];
    v26 = *(_OWORD *)&v13[128];
    v27 = *(_OWORD *)&v13[144];
    *(_OWORD *)v28 = *(_OWORD *)&v13[160];
    v22 = *(_OWORD *)&v13[64];
    v23 = *(_OWORD *)&v13[80];
    v24 = *(_OWORD *)&v13[96];
    v25 = *(_OWORD *)&v13[112];
    v18 = *(_OWORD *)v13;
    v19 = *(_OWORD *)&v13[16];
    v20 = *(_OWORD *)&v13[32];
    v14 = 0;
    v16[0] = v10;
    v16[1] = 0;
    v17 = 0;
    *(_QWORD *)&v28[15] = *((_QWORD *)&v12 + 1);
    v21 = *(_OWORD *)&v13[48];
    sub_2413C4FE0((uint64_t)v16);
  }
  sub_2412EAEA4((uint64_t)v16, (uint64_t)v15, &qword_2571265D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571265E0);
  sub_2412C8FC4((unint64_t *)&unk_2571265E8, &qword_2571265E0, MEMORY[0x24BDF4498]);
  sub_2414B3A84();
  v4 = v46[0];
  *(_OWORD *)(a2 + 160) = v45;
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 185) = *(_OWORD *)((char *)v46 + 9);
  v5 = v42;
  *(_OWORD *)(a2 + 96) = v41;
  *(_OWORD *)(a2 + 112) = v5;
  v6 = v44;
  *(_OWORD *)(a2 + 128) = v43;
  *(_OWORD *)(a2 + 144) = v6;
  v7 = v38;
  *(_OWORD *)(a2 + 32) = v37;
  *(_OWORD *)(a2 + 48) = v7;
  v8 = v40;
  *(_OWORD *)(a2 + 64) = v39;
  *(_OWORD *)(a2 + 80) = v8;
  result = v36;
  *(_OWORD *)a2 = v35;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

double sub_2413B7948@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;

  v6 = sub_2414B463C();
  sub_2414B4A44();
  sub_2414B31B4();
  v5 = sub_2414B463C();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2414B463C();
  v2 = sub_2414B466C();
  swift_release();
  v3 = sub_2414B463C();
  sub_2414B4A44();
  sub_2414B31B4();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_BYTE *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v18;
  *(_QWORD *)(a1 + 112) = v2;
  *(_QWORD *)(a1 + 120) = v3;
  *(_QWORD *)(a1 + 128) = v19;
  *(_BYTE *)(a1 + 136) = v20;
  *(_QWORD *)(a1 + 144) = v21;
  *(_BYTE *)(a1 + 152) = v22;
  result = *(double *)&v23;
  *(_OWORD *)(a1 + 160) = v23;
  return result;
}

uint64_t sub_2413B7B20@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  char v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[4];
  _OWORD v18[13];

  v3 = v1[1];
  v17[0] = *v1;
  v17[1] = v3;
  v4 = v1[3];
  v17[2] = v1[2];
  v17[3] = v4;
  sub_2413B76F0(v17, (uint64_t)v18);
  v5 = sub_2414B3E38();
  result = sub_2414B2F20();
  v7 = v18[11];
  *(_OWORD *)(a1 + 160) = v18[10];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v18[12];
  v8 = v18[7];
  *(_OWORD *)(a1 + 96) = v18[6];
  *(_OWORD *)(a1 + 112) = v8;
  v9 = v18[9];
  *(_OWORD *)(a1 + 128) = v18[8];
  *(_OWORD *)(a1 + 144) = v9;
  v10 = v18[3];
  *(_OWORD *)(a1 + 32) = v18[2];
  *(_OWORD *)(a1 + 48) = v10;
  v11 = v18[5];
  *(_OWORD *)(a1 + 64) = v18[4];
  *(_OWORD *)(a1 + 80) = v11;
  v12 = v18[1];
  *(_OWORD *)a1 = v18[0];
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 208) = v5;
  *(_QWORD *)(a1 + 216) = v13;
  *(_QWORD *)(a1 + 224) = v14;
  *(_QWORD *)(a1 + 232) = v15;
  *(_QWORD *)(a1 + 240) = v16;
  *(_WORD *)(a1 + 248) = 0;
  return result;
}

uint64_t sub_2413B7BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  double v41;
  uint64_t v42;
  double v43;
  float v44;
  double v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  double v69;
  double v70;
  __int128 v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  char v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t KeyPath;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  uint64_t v140;
  double *v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  double v210;
  _OWORD v211[10];
  uint64_t v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  _OWORD v236[2];
  uint64_t v237;
  __int128 v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;

  v175 = type metadata accessor for ScrubberTooltipModifier(0);
  v190 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v191 = v4;
  v192 = (uint64_t)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v178 = (uint64_t)&v157 - v6;
  v172 = sub_2414B3934();
  v170 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v171 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v169 = (uint64_t)&v157 - v9;
  v181 = sub_2414B2F8C();
  v204 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v163 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v162 = (uint64_t)&v157 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v180 = (char *)&v157 - v14;
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384108);
  MEMORY[0x24BDAC7A8](v165);
  v16 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2414B4A08();
  v167 = *(_QWORD *)(v17 - 8);
  v168 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v166 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126540);
  MEMORY[0x24BDAC7A8](v164);
  v20 = (_OWORD *)((char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126548);
  MEMORY[0x24BDAC7A8](v173);
  v176 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126550);
  MEMORY[0x24BDAC7A8](v174);
  v179 = (uint64_t)&v157 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126558);
  MEMORY[0x24BDAC7A8](v177);
  v185 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126560);
  MEMORY[0x24BDAC7A8](v182);
  v187 = (uint64_t)&v157 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126568);
  MEMORY[0x24BDAC7A8](v183);
  v186 = (uint64_t)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126570);
  MEMORY[0x24BDAC7A8](v184);
  v189 = (uint64_t)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126578);
  MEMORY[0x24BDAC7A8](v188);
  v194 = (uint64_t)&v157 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126580);
  MEMORY[0x24BDAC7A8](v193);
  v196 = (uint64_t)&v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126588);
  MEMORY[0x24BDAC7A8](v195);
  v198 = (uint64_t)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126590);
  MEMORY[0x24BDAC7A8](v197);
  v203 = (char *)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126598);
  MEMORY[0x24BDAC7A8](v199);
  v202 = (uint64_t)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265A0);
  v206 = *(_QWORD *)(v32 - 8);
  v207 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v201 = (uint64_t)&v157 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v200 = (uint64_t)&v157 - v35;
  v205 = a1;
  v36 = *(_QWORD *)a1;
  v37 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  swift_getKeyPath();
  *(_QWORD *)&v224 = v37;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v37 + 48) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v206 + 56))(a2, 1, 1, v207);
  v38 = *(double *)(v37 + 40);
  v39 = *(_QWORD *)(v36 + 64);
  swift_getKeyPath();
  *(_QWORD *)&v224 = v39;
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v39 + 32) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v206 + 56))(a2, 1, 1, v207);
  v160 = a2;
  v41 = *(double *)(v39 + 24);
  swift_getKeyPath();
  *(_QWORD *)&v224 = v36;
  v42 = sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B84();
  swift_release();
  v43 = *(double *)(v36 + 96);
  swift_release();
  v44 = v43 / v41;
  swift_getKeyPath();
  *(_QWORD *)&v224 = v36;
  v161 = v42;
  sub_2414B2B84();
  swift_release();
  v45 = (v38 * *(double *)(v36 + 56) - v38) * 0.5;
  v46 = v205;
  v47 = *(double *)(v205 + 8);
  if (qword_257120850 != -1)
    swift_once();
  v158 = v16;
  v48 = ((float)(v44 + v44) + -1.0) * v45;
  v49 = *(double *)&qword_257136F90;
  v50 = -(v47 - *(double *)&qword_257136F90);
  v51 = *(_QWORD *)(v46 + 32);
  v52 = *(_BYTE *)(v46 + 40);
  v53 = *(_QWORD *)(v46 + 48);
  *(_QWORD *)&v224 = v51;
  BYTE8(v224) = v52;
  *(_QWORD *)&v225 = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571253C8);
  sub_2414B47A4();
  v54 = *(_QWORD *)(v46 + 16);
  v55 = v38;
  v56 = *(_QWORD *)(v46 + 24);
  if ((BYTE8(v213) & 1) == 0)
  {
    v57 = *(double *)&v213;
    *(_QWORD *)&v224 = *(_QWORD *)(v46 + 16);
    *((_QWORD *)&v224 + 1) = v56;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
    sub_2414B47A4();
    v55 = v57 - *(double *)&v213 - v47 - v49;
  }
  *(_QWORD *)&v224 = v54;
  *((_QWORD *)&v224 + 1) = v56;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  v59 = v48 + v38 * v44 - *(double *)&v213 * 0.5;
  if (v59 < v50)
    v60 = v50;
  else
    v60 = v59;
  if (v55 >= v60)
    v61 = v60;
  else
    v61 = v55;
  sub_2413AED94();
  v63 = v62;
  v64 = v59 - v61;
  *(_QWORD *)&v224 = v54;
  *((_QWORD *)&v224 + 1) = v56;
  v159 = v58;
  sub_2414B47A4();
  v65 = *(double *)&v213 * 0.5;
  if (qword_257120860 != -1)
    swift_once();
  v66 = v63 + v64;
  v67 = v65 + *(double *)&qword_257136FA0 * -0.5;
  v68 = (uint64_t)v158;
  if (qword_257120810 != -1)
    swift_once();
  v69 = -(v67 - *(double *)&qword_257136F50);
  if (v66 >= v69)
    v69 = v66;
  *(_QWORD *)&v213 = v51;
  if (v67 - *(double *)&qword_257136F50 >= v69)
    v70 = v69;
  else
    v70 = v67 - *(double *)&qword_257136F50;
  BYTE8(v213) = v52;
  *(_QWORD *)&v214 = v53;
  swift_retain();
  sub_2414B47BC();
  v71 = v224;
  v72 = v225;
  v73 = BYTE8(v225);
  v74 = sub_2414B4A44();
  v237 = v36;
  v238 = v71;
  v239 = v72;
  v240 = v73;
  v241 = v74;
  v242 = v75;
  if (qword_257120848 != -1)
    swift_once();
  v76 = *(double *)&qword_257136F88;
  sub_2414B4A44();
  sub_24133FB50(0.0, 1, 0.0, 1, v76, 0, 0.0, 1, (uint64_t)&v224, 0.0, 1, 0.0, 1);
  swift_release();
  swift_release();
  swift_release();
  v211[7] = v231;
  v211[8] = v232;
  v211[9] = v233;
  v211[4] = v228;
  v211[5] = v229;
  v211[6] = v230;
  v211[0] = v224;
  v211[1] = v225;
  v211[2] = v226;
  v211[3] = v227;
  v221 = v232;
  v222 = v233;
  v217 = v228;
  v218 = v229;
  v212 = v234;
  v223 = v234;
  v219 = v230;
  v220 = v231;
  v213 = v224;
  v214 = v225;
  v215 = v226;
  v216 = v227;
  v77 = sub_2414B3E5C();
  if (qword_257120858 != -1)
    swift_once();
  sub_2414B2F20();
  v232 = v221;
  v233 = v222;
  *(_QWORD *)&v234 = v223;
  v228 = v217;
  v229 = v218;
  v230 = v219;
  v231 = v220;
  v224 = v213;
  v225 = v214;
  v226 = v215;
  v227 = v216;
  WORD4(v234) = 1;
  LOBYTE(v235) = v77;
  *((_QWORD *)&v235 + 1) = v78;
  *(_QWORD *)&v236[0] = v79;
  *((_QWORD *)&v236[0] + 1) = v80;
  *(_QWORD *)&v236[1] = v81;
  BYTE8(v236[1]) = 0;
  v82 = v166;
  sub_2414B49F0();
  v83 = sub_2414B3E44();
  v85 = v167;
  v84 = v168;
  (*(void (**)(uint64_t, char *, uint64_t))(v167 + 16))(v68, v82, v168);
  *(_BYTE *)(v68 + *(int *)(v165 + 36)) = v83;
  sub_2412DC3FC(v68, (uint64_t)v20 + *(int *)(v164 + 36), &qword_254384108);
  v86 = v235;
  v20[10] = v234;
  v20[11] = v86;
  v20[12] = v236[0];
  *(_OWORD *)((char *)v20 + 201) = *(_OWORD *)((char *)v236 + 9);
  v87 = v231;
  v20[6] = v230;
  v20[7] = v87;
  v88 = v233;
  v20[8] = v232;
  v20[9] = v88;
  v89 = v227;
  v20[2] = v226;
  v20[3] = v89;
  v90 = v229;
  v20[4] = v228;
  v20[5] = v90;
  v91 = v225;
  *v20 = v224;
  v20[1] = v91;
  sub_2413C4D50((uint64_t)&v224);
  sub_2412CBE78(v68, &qword_254384108);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
  sub_2413C4D94((uint64_t)v211);
  v92 = v205;
  v93 = v169;
  sub_2412C8A04(v169);
  v94 = v170;
  v95 = v171;
  v96 = v172;
  (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v171, *MEMORY[0x24BDEEDF0], v172);
  sub_2412C8030(&qword_25437DB58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], MEMORY[0x24BDEEE28]);
  v97 = sub_2414B4CE4();
  v98 = *(void (**)(char *, uint64_t))(v94 + 8);
  v98(v95, v96);
  v98((char *)v93, v96);
  v99 = v178;
  sub_2412C6A50(v92, v178, type metadata accessor for ScrubberTooltipModifier);
  if ((v97 & 1) == 0)
  {
    sub_2412C68F4(v99, type metadata accessor for ScrubberTooltipModifier);
    v103 = *(void (**)(char *, uint64_t, uint64_t))(v204 + 104);
    v108 = (uint64_t)v185;
    v105 = v181;
    goto LABEL_31;
  }
  v100 = v162;
  sub_2412FA2F8(v162);
  v101 = *MEMORY[0x24BDEB400];
  v102 = v204;
  v103 = *(void (**)(char *, uint64_t, uint64_t))(v204 + 104);
  v104 = v163;
  v105 = v181;
  v103(v163, v101, v181);
  v106 = sub_2414B2F80();
  v107 = *(void (**)(char *, uint64_t))(v102 + 8);
  v107(v104, v105);
  v107((char *)v100, v105);
  sub_2412C68F4(v99, type metadata accessor for ScrubberTooltipModifier);
  if ((v106 & 1) != 0)
  {
    v108 = (uint64_t)v185;
LABEL_31:
    v109 = v180;
    v103(v180, *MEMORY[0x24BDEB3F0], v105);
    goto LABEL_33;
  }
  v109 = v180;
  v103(v180, v101, v105);
  v108 = (uint64_t)v185;
LABEL_33:
  KeyPath = swift_getKeyPath();
  v111 = (uint64_t)v176;
  v112 = (uint64_t *)&v176[*(int *)(v173 + 36)];
  v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543812C0);
  v114 = v204;
  (*(void (**)(char *, char *, uint64_t))(v204 + 16))((char *)v112 + *(int *)(v113 + 28), v109, v105);
  *v112 = KeyPath;
  sub_2412DC3FC((uint64_t)v20, v111, &qword_257126540);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v109, v105);
  sub_2412CBE78((uint64_t)v20, &qword_257126540);
  v115 = v179;
  sub_2412DC3FC(v111, v179, &qword_257126548);
  *(_BYTE *)(v115 + *(int *)(v174 + 36)) = 0;
  sub_2412CBE78(v111, &qword_257126548);
  v116 = (uint64_t *)v205;
  v117 = v192;
  sub_2412C6A50(v205, v192, type metadata accessor for ScrubberTooltipModifier);
  v118 = (*(unsigned __int8 *)(v190 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
  v119 = swift_allocObject();
  sub_2412DC3B8(v117, v119 + v118, type metadata accessor for ScrubberTooltipModifier);
  sub_2412DC3FC(v115, v108, &qword_257126550);
  v120 = (_QWORD *)(v108 + *(int *)(v177 + 36));
  *v120 = sub_2413B900C;
  v120[1] = 0;
  v120[2] = sub_2413C4F34;
  v120[3] = v119;
  sub_2412CBE78(v115, &qword_257126550);
  v121 = *v116;
  swift_getKeyPath();
  v208 = v121;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v121 + 16) && *(_BYTE *)(v121 + 16) == 1)
    v122 = 1;
  else
    v122 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  v123 = v187;
  sub_2412DC3FC(v108, v187, &qword_257126558);
  v124 = v123 + *(int *)(v182 + 36);
  *(_QWORD *)v124 = 0;
  *(_BYTE *)(v124 + 8) = v122 & 1;
  sub_2412CBE78(v108, &qword_257126558);
  v125 = qword_257136F98;
  v126 = v186;
  sub_2412DC3FC(v123, v186, &qword_257126560);
  v127 = v126 + *(int *)(v183 + 36);
  *(_QWORD *)v127 = v125;
  *(double *)(v127 + 8) = v70;
  *(_WORD *)(v127 + 16) = 256;
  sub_2412CBE78(v123, &qword_257126560);
  v128 = v189;
  sub_2412DC3FC(v126, v189, &qword_257126568);
  v129 = v128 + *(int *)(v184 + 36);
  *(_QWORD *)v129 = 0;
  *(double *)(v129 + 8) = v63;
  sub_2412CBE78(v126, &qword_257126568);
  v130 = *v116;
  swift_getKeyPath();
  v208 = v130;
  sub_2414B2B84();
  swift_release();
  v131 = 1.0;
  if (*(_BYTE *)(v130 + 104))
    v132 = 1.0;
  else
    v132 = 0.0;
  v133 = v194;
  sub_2412DC3FC(v128, v194, &qword_257126570);
  *(double *)(v133 + *(int *)(v188 + 36)) = v132;
  sub_2412CBE78(v128, &qword_257126570);
  v134 = *v116;
  swift_getKeyPath();
  v208 = v134;
  sub_2414B2B84();
  swift_release();
  if (!*(_BYTE *)(v134 + 104))
    v131 = 0.5;
  v135 = v116[3];
  v208 = v116[2];
  v209 = v135;
  sub_2414B47A4();
  v136 = v70 / v210 + 0.5;
  v137 = v196;
  sub_2412DC3FC(v133, v196, &qword_257126578);
  v138 = v137 + *(int *)(v193 + 36);
  *(double *)v138 = v131;
  *(double *)(v138 + 8) = v131;
  *(double *)(v138 + 16) = v136;
  *(_QWORD *)(v138 + 24) = 0x3FF4000000000000;
  sub_2412CBE78(v133, &qword_257126578);
  if (qword_257120818 != -1)
    swift_once();
  v139 = -*(double *)&qword_257136F58;
  v140 = v198;
  sub_2412DC3FC(v137, v198, &qword_257126580);
  v141 = (double *)(v140 + *(int *)(v195 + 36));
  *v141 = v61;
  v141[1] = v139;
  sub_2412CBE78(v137, &qword_257126580);
  v142 = *v116;
  swift_getKeyPath();
  v208 = v142;
  sub_2414B2B84();
  swift_release();
  v143 = (uint64_t)v203;
  if (*(_BYTE *)(v142 + 16) && *(_BYTE *)(v142 + 16) == 1)
  {
    swift_bridgeObjectRelease();
    v144 = 0.0;
  }
  else
  {
    v145 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v145 & 1) != 0)
      v144 = 0.0;
    else
      v144 = 5.0;
  }
  sub_2412DC3FC(v140, v143, &qword_257126588);
  v146 = v143 + *(int *)(v197 + 36);
  *(_QWORD *)v146 = 0;
  *(double *)(v146 + 8) = v144;
  sub_2412CBE78(v140, &qword_257126588);
  if (qword_257120870 != -1)
    swift_once();
  v147 = qword_257125420;
  v148 = *v116;
  swift_getKeyPath();
  v208 = v148;
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(v148 + 16) && *(_BYTE *)(v148 + 16) == 1)
    v149 = 1;
  else
    v149 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  v150 = v202;
  sub_2412DC3FC(v143, v202, &qword_257126590);
  v151 = v150 + *(int *)(v199 + 36);
  *(_QWORD *)v151 = v147;
  *(_BYTE *)(v151 + 8) = v149 & 1;
  swift_retain();
  sub_2412CBE78(v143, &qword_257126590);
  v152 = v201;
  sub_2412DC3FC(v150, v201, &qword_257126598);
  v153 = v207;
  *(_OWORD *)(v152 + *(int *)(v207 + 36)) = xmmword_2414C2370;
  sub_2412CBE78(v150, &qword_257126598);
  v154 = v200;
  sub_2412EAEA4(v152, v200, &qword_2571265A0);
  v155 = v154;
  v156 = v160;
  sub_2412EAEA4(v155, v160, &qword_2571265A0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v206 + 56))(v156, 0, 1, v153);
}

uint64_t sub_2413B900C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B325C();
  *a1 = v3;
  return result;
}

uint64_t sub_2413B9034()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  return sub_2414B47B0();
}

uint64_t sub_2413B9084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v5 = sub_2414B4A14();
  v7 = v6;
  v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257126520) + 36);
  sub_2413B7BD0(v2, v8);
  v9 = (uint64_t *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257126528) + 36));
  *v9 = v5;
  v9[1] = v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126530);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
}

uint64_t sub_2413B9118(uint64_t a1)
{
  double *v2;
  double v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  v2 = (double *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) & 1) != 0)
    return sub_2413AA8C4();
  v4 = *v2;
  v5 = *v2 < 0.0;
  v6 = 43;
  if (v5)
    v6 = 0;
  v7 = 0xE100000000000000;
  if (v5)
    v7 = 0xE000000000000000;
  v9 = v6;
  v11 = v7;
  if (qword_2571207E0 != -1)
    swift_once();
  v8 = objc_msgSend((id)qword_257136EF8, sel_stringFromSeconds_, v4, v9, v11);
  sub_2414B4D68();

  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2413B9258(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  swift_release();
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) != 1)
    return 0;
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  if (!*(_QWORD *)(a1 + 80))
    return 0;
  v2 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2413B9350@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  v3 = *v1;
  v4 = sub_2413B9118(*v1);
  v6 = v5;
  v7 = sub_2413B9258(v3);
  v9 = v8;
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  sub_2414B2B84();
  result = swift_release();
  v11 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v11;
  return result;
}

double sub_2413B941C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  double v19;
  double result;
  __int128 v21;
  _QWORD v22[2];
  uint64_t v23;
  double v24;
  _BYTE v25[40];
  __int128 v26;
  __int128 v27;
  char v28;
  _OWORD v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v24 = a7;
  v13 = sub_2414B38C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120860 != -1)
    swift_once();
  v23 = qword_257136FA0;
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  v22[1] = CGRectGetMinX(v37);
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  v22[0] = CGRectGetMinY(v38);
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  CGRectGetWidth(v39);
  v40.origin.x = a2;
  v40.origin.y = a3;
  v40.size.width = a4;
  v40.size.height = a5;
  CGRectGetHeight(v40);
  if (qword_257120810 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDEEB68], v13);
  v31 = 0x3FF0000000000000;
  v32 = 0;
  v33 = 0;
  v34 = 0x3FF0000000000000;
  v35 = 0;
  v36 = 0;
  sub_2414B3FAC();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v18 = *(_OWORD *)(a1 + 16);
  v29[0] = *(_OWORD *)a1;
  v29[1] = v18;
  v30 = *(_BYTE *)(a1 + 32);
  MEMORY[0x24BDAC7A8](v17);
  *(CGFloat *)&v22[-8] = a2;
  *(CGFloat *)&v22[-7] = a3;
  *(CGFloat *)&v22[-6] = a4;
  *(CGFloat *)&v22[-5] = a5;
  v19 = v24;
  *(double *)&v22[-4] = a6;
  *(double *)&v22[-3] = v19;
  v22[-2] = v23;
  sub_2414B3FF4();
  sub_2414B3FC4();
  sub_2413C7E2C((uint64_t)v25);
  sub_2413C7E2C((uint64_t)v29);
  result = *(double *)&v26;
  v21 = v27;
  *(_OWORD *)a1 = v26;
  *(_OWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 32) = v28;
  return result;
}

uint64_t sub_2413B96A0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRect v9;
  CGRect v10;
  CGRect v11;

  CGRectGetMidX(*(CGRect *)&a1);
  v9.origin.x = a1;
  v9.origin.y = a2;
  v9.size.width = a3;
  v9.size.height = a4;
  CGRectGetMaxY(v9);
  sub_2414B3FB8();
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMaxY(v10);
  sub_2414B3FD0();
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetMaxY(v11);
  return sub_2414B3FD0();
}

double sub_2413B9770@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  sub_2414B3FF4();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

double sub_2413B97CC@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 8);
  *a1 = result;
  return result;
}

double sub_2413B97D8(double *a1)
{
  uint64_t v1;
  double result;

  result = *a1;
  *(double *)(v1 + 8) = *a1;
  return result;
}

double (*sub_2413B97E4(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 8);
  return sub_2413B9800;
}

double sub_2413B9800(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) = *(_QWORD *)a1;
  return result;
}

uint64_t sub_2413B9810()
{
  sub_2413C7E78();
  return sub_2414B478C();
}

uint64_t sub_2413B9860()
{
  sub_2413C7E78();
  return sub_2414B475C();
}

uint64_t sub_2413B98B0()
{
  sub_2413C7E78();
  return sub_2414B4774();
}

double sub_2413B98E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  double result;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[43];
  _QWORD v59[44];
  char v60;
  char v61;
  char v62;
  char v63;
  _BYTE v64[320];
  _BYTE v65[312];
  _BYTE __src[312];
  _BYTE v67[16];
  _BYTE v68[8];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[320];

  if (qword_257120830 != -1)
    swift_once();
  v57 = qword_257136F70;
  v56 = sub_2414B3964();
  sub_2412EAEA4((uint64_t)(v1 + 2), (uint64_t)v67, &qword_2543844E0);
  sub_2412EAEA4((uint64_t)v67, (uint64_t)&v70, &qword_2543844E0);
  v3 = v71;
  if (v71)
  {
    v4 = v70;
    v5 = sub_2414B3E14();
    v6 = sub_2414B3E2C();
    v7 = sub_2414B3E20();
    sub_2414B3E20();
    if (sub_2414B3E20() != v5)
      v7 = sub_2414B3E20();
    sub_2414B3E20();
    if (sub_2414B3E20() != v6)
      v7 = sub_2414B3E20();
    sub_2413B9D98(v4, v3, (uint64_t)v1, (uint64_t)__src);
    memcpy((char *)v58 + 7, __src, 0x129uLL);
    LOBYTE(v59[0]) = v7;
    memcpy((char *)v59 + 1, v58, 0x130uLL);
    CGSizeMake(v59, v8);
  }
  else
  {
    sub_2413C89EC((uint64_t)v59);
  }
  sub_2412EAEA4((uint64_t)v59, (uint64_t)v72, &qword_257126A70);
  v9 = *v1;
  v10 = v1[1];
  v59[0] = v9;
  v59[1] = v10;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v11 = sub_2414B40F0();
  v13 = v12;
  v15 = v14 & 1;
  v16 = sub_2414B4054();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = v19 & 1;
  sub_2412F6D78(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_2412EAEA4((uint64_t)v72, (uint64_t)v64, &qword_257126A70);
  sub_2412EAEA4((uint64_t)v64, (uint64_t)v65, &qword_257126A70);
  swift_bridgeObjectRetain();
  sub_2413C8B9C((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2413C8A20);
  sub_241307638(v16, v18, v23);
  sub_2412F6D78(v16, v18, v23);
  swift_bridgeObjectRelease();
  sub_2412EAEA4((uint64_t)v64, (uint64_t)__src, &qword_257126A70);
  sub_2413C8B9C((uint64_t)__src, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2413C8C28);
  sub_2414B3F34();
  v24 = sub_2414B3EBC();
  swift_release();
  KeyPath = swift_getKeyPath();
  v26 = sub_2414B3E50();
  sub_2412EAEA4((uint64_t)v67, (uint64_t)v68, &qword_2543844E0);
  if (!v69)
  {
    if (qword_257120820 == -1)
      goto LABEL_14;
    goto LABEL_19;
  }
  if (qword_257120828 != -1)
LABEL_19:
    swift_once();
LABEL_14:
  sub_2412EAEA4((uint64_t)v65, (uint64_t)v58, &qword_257126A70);
  v58[39] = v16;
  v58[40] = v18;
  LOBYTE(v58[41]) = v20 & 1;
  v58[42] = v22;
  v60 = 0;
  memcpy((char *)v59 + 7, v58, 0x158uLL);
  sub_2414B2F20();
  v54 = v28;
  v55 = v27;
  v52 = v30;
  v53 = v29;
  v61 = 0;
  v31 = sub_2414B3E5C();
  if (qword_257120820 != -1)
    swift_once();
  sub_2414B2F20();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v61;
  v62 = 0;
  v41 = sub_2414B3E38();
  if (qword_257120838 != -1)
    swift_once();
  sub_2414B2F20();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v62;
  v63 = 0;
  *(_QWORD *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v57;
  *(_BYTE *)(a1 + 16) = 0;
  memcpy((void *)(a1 + 17), v59, 0x15FuLL);
  *(_QWORD *)(a1 + 368) = KeyPath;
  *(_QWORD *)(a1 + 376) = v24;
  *(_BYTE *)(a1 + 384) = v26;
  *(_QWORD *)(a1 + 392) = v55;
  *(_QWORD *)(a1 + 400) = v54;
  result = v52;
  *(_QWORD *)(a1 + 408) = v53;
  *(double *)(a1 + 416) = v52;
  *(_BYTE *)(a1 + 424) = v40;
  *(_BYTE *)(a1 + 432) = v31;
  *(_QWORD *)(a1 + 440) = v33;
  *(_QWORD *)(a1 + 448) = v35;
  *(_QWORD *)(a1 + 456) = v37;
  *(_QWORD *)(a1 + 464) = v39;
  *(_BYTE *)(a1 + 472) = v50;
  *(_BYTE *)(a1 + 480) = v41;
  *(_QWORD *)(a1 + 488) = v43;
  *(_QWORD *)(a1 + 496) = v45;
  *(_QWORD *)(a1 + 504) = v47;
  *(_QWORD *)(a1 + 512) = v49;
  *(_BYTE *)(a1 + 520) = v63;
  return result;
}

uint64_t sub_2413B9D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[32];
  _OWORD __src[17];
  char v41;
  _OWORD v42[14];
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  char v48;
  _OWORD v49[12];
  _OWORD v50[2];

  *(_QWORD *)&v42[0] = a1;
  *((_QWORD *)&v42[0] + 1) = a2;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v6 = sub_2414B40F0();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_BYTE *)(a3 + 32);
  v14 = qword_25437E380;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = *(double *)&qword_25437E378;
  if (qword_25437E370 != -1)
    swift_once();
  LOBYTE(v42[0]) = 1;
  sub_24145352C(v13, 0, 0x100000000, (uint64_t)v49, v15, *(double *)&qword_25437E360, 0.0);
  if (qword_257120840 != -1)
    swift_once();
  v16 = v10 & 1;
  v17 = qword_257136F80;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D8);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2414B9400;
  *(_BYTE *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 40) = v17;
  *(_BYTE *)(v19 + 48) = 1;
  *(_QWORD *)(v19 + 56) = v17;
  v20 = sub_2412CCE8C(v19);
  v37 = v49[10];
  v38 = v49[11];
  *(_OWORD *)v39 = v50[0];
  *(_OWORD *)&v39[9] = *(_OWORD *)((char *)v50 + 9);
  v33 = v49[6];
  v34 = v49[7];
  v35 = v49[8];
  v36 = v49[9];
  v29 = v49[2];
  v30 = v49[3];
  v31 = v49[4];
  v32 = v49[5];
  v27 = v49[0];
  v28 = v49[1];
  v21 = (void *)sub_2414B4D44();
  v22 = objc_msgSend(v21, sel__isNaturallyRTL);

  v23 = swift_getKeyPath();
  v24 = swift_getKeyPath();
  __src[10] = v37;
  __src[11] = v38;
  __src[12] = *(_OWORD *)v39;
  __src[13] = *(_OWORD *)&v39[16];
  __src[6] = v33;
  __src[7] = v34;
  __src[8] = v35;
  __src[9] = v36;
  __src[2] = v29;
  __src[3] = v30;
  __src[4] = v31;
  __src[5] = v32;
  __src[0] = v27;
  __src[1] = v28;
  *(_QWORD *)&__src[14] = KeyPath;
  *((_QWORD *)&__src[14] + 1) = v20;
  *(_QWORD *)&__src[15] = v23;
  BYTE8(__src[15]) = v22;
  *(_QWORD *)&__src[16] = v24;
  BYTE8(__src[16]) = 0;
  v41 = v16;
  memcpy((void *)(a4 + 32), __src, 0x109uLL);
  v25 = v41;
  *(_QWORD *)a4 = v6;
  *(_QWORD *)(a4 + 8) = v8;
  *(_BYTE *)(a4 + 16) = v25;
  *(_QWORD *)(a4 + 24) = v12;
  v42[10] = v37;
  v42[11] = v38;
  v42[12] = *(_OWORD *)v39;
  v42[13] = *(_OWORD *)&v39[16];
  v42[6] = v33;
  v42[7] = v34;
  v42[8] = v35;
  v42[9] = v36;
  v42[2] = v29;
  v42[3] = v30;
  v42[4] = v31;
  v42[5] = v32;
  v42[0] = v27;
  v42[1] = v28;
  v43 = KeyPath;
  v44 = v20;
  v45 = v23;
  v46 = v22;
  v47 = v24;
  v48 = 0;
  sub_241307638(v6, v8, v16);
  swift_bridgeObjectRetain();
  sub_2413C8E24((uint64_t)__src);
  sub_2413C8F64((uint64_t)v42);
  sub_2412F6D78(v6, v8, v16);
  return swift_bridgeObjectRelease();
}

double sub_2413BA11C@<D0>(uint64_t a1@<X8>)
{
  return sub_2413B98E8(a1);
}

id sub_2413BA154()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  objc_class *v5;
  char *v6;
  char *v7;
  objc_super v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  char v15;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v10 = *v0;
  v11 = v1;
  v12 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126668);
  sub_2414B48DC();
  v3 = v14;
  v4 = v15;
  v5 = (objc_class *)type metadata accessor for WindowWidthReaderViewController();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC11MediaCoreUI31WindowWidthReaderViewController__windowWidth];
  *(_OWORD *)v7 = v13;
  *((_QWORD *)v7 + 2) = v3;
  v7[24] = v4;
  v9.receiver = v6;
  v9.super_class = v5;
  return objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_2413BA214()
{
  sub_2413C7EBC();
  return sub_2414B3D90();
}

uint64_t sub_2413BA264()
{
  sub_2413C7EBC();
  return sub_2414B3D60();
}

void sub_2413BA2B4()
{
  sub_2413C7EBC();
  sub_2414B3D84();
  __break(1u);
}

id sub_2413BA330(char a1)
{
  void *v1;
  id result;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  objc_super v14;
  CGRect v15;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WindowWidthReaderViewController();
  objc_msgSendSuper2(&v14, sel_viewIsAppearing_, a1 & 1);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_window);

    if (v5)
    {
      objc_msgSend(v5, sel_bounds);
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v15.origin.x = v7;
      v15.origin.y = v9;
      v15.size.width = v11;
      v15.size.height = v13;
      CGRectGetWidth(v15);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257126668);
    return (id)sub_2414B48D0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2413BA49C(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  objc_super v24;

  v4 = v3;
  v8 = sub_2414B4B94();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2414B4BB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)type metadata accessor for WindowWidthReaderViewController();
  v24.receiver = v4;
  v24.super_class = v16;
  objc_msgSendSuper2(&v24, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v17 = (void *)sub_2414B5230();
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_2413C6058;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_10;
  v19 = _Block_copy(aBlock);
  swift_release();
  sub_2414B4BAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, v9, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
  sub_2414B5464();
  MEMORY[0x242694ABC](0, v15, v11, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_2413BA6EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  CGRect v16;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x242695CC8](v1);
  if (v2)
  {
    v3 = (void *)v2;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x242695CC8](v1);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_view);

      if (!v6)
      {
        __break(1u);
        return;
      }
      v7 = objc_msgSend(v6, sel_window);

      if (v7)
      {
        objc_msgSend(v7, sel_bounds);
        v9 = v8;
        v11 = v10;
        v13 = v12;
        v15 = v14;

        v16.origin.x = v9;
        v16.origin.y = v11;
        v16.size.width = v13;
        v16.size.height = v15;
        CGRectGetWidth(v16);
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257126668);
    sub_2414B48D0();

  }
}

id sub_2413BA8EC(uint64_t a1)
{
  return sub_2413BA8F8(a1, type metadata accessor for WindowWidthReaderViewController);
}

id sub_2413BA8F8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_2413BA958()
{
  qword_257136F10 = 0x402E000000000000;
}

void sub_2413BA968()
{
  qword_257136F18 = 0x4020000000000000;
}

void sub_2413BA978()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_whiteColor);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_effectCompositingColor_withMode_alpha_, v1, 0, 0.45);

  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = objc_msgSend(v0, sel_whiteColor);
  v5 = objc_msgSend(v2, sel_effectCompositingColor_withMode_alpha_, v4, 0, 1.0);

  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = objc_msgSend(v0, sel_whiteColor);
  v7 = objc_msgSend(v2, sel_effectCompositingColor_withMode_alpha_, v6, 0, 0.18);

  if (v7)
  {
    qword_257136F20 = (uint64_t)v3;
    qword_257136F28 = (uint64_t)v5;
    qword_257136F30 = (uint64_t)v7;
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2413BAAB8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemGrayColor);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_effectCompositingColor_, v1);

  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = objc_msgSend(v0, sel_labelColor);
  v5 = objc_msgSend(v2, sel_effectCompositingColor_, v4);

  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = objc_msgSend(v0, sel_systemFillColor);
  v7 = objc_msgSend(v2, sel_effectCompositingColor_, v6);

  if (v7)
  {
    qword_257136F38 = (uint64_t)v3;
    qword_257136F40 = (uint64_t)v5;
    qword_257136F48 = (uint64_t)v7;
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2413BABD8()
{
  qword_257136F50 = 0x4020000000000000;
}

void sub_2413BABE8()
{
  qword_257136F58 = 0x4018000000000000;
}

void sub_2413BABF8()
{
  qword_257136F60 = 0x4024000000000000;
}

void sub_2413BAC08()
{
  qword_257136F68 = 0x4020000000000000;
}

void sub_2413BAC18()
{
  qword_257136F70 = 0x4000000000000000;
}

void sub_2413BAC28()
{
  qword_257136F78 = 0x402C000000000000;
}

void sub_2413BAC38()
{
  qword_257136F80 = 0x4030000000000000;
}

void sub_2413BAC48()
{
  qword_257136F88 = 0x4060000000000000;
}

void sub_2413BAC58()
{
  qword_257136F90 = 0x4020000000000000;
}

void sub_2413BAC68()
{
  qword_257136F98 = 0x4014000000000000;
}

double sub_2413BAC78()
{
  double result;

  if (qword_257120858 != -1)
    swift_once();
  result = *(double *)&qword_257136F98 + *(double *)&qword_257136F98;
  *(double *)&qword_257136FA0 = *(double *)&qword_257136F98 + *(double *)&qword_257136F98;
  return result;
}

void sub_2413BACC4()
{
  qword_257136FA8 = 0x4014000000000000;
}

uint64_t sub_2413BACD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE v17[8];

  v4 = sub_2414B32BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_2414B33A0();
  sub_2412C8030((unint64_t *)&qword_254382810, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC7A0]);
  sub_2414B50F8();
  sub_2414B5128();
  v13 = sub_2414B511C();
  if (v13 == 3)
  {
    sub_2414B33AC();
    v14 = &v11[*(int *)(v8 + 24)];
    sub_2414B33AC();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  }
  else
  {
    if (v13 != 2)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      v15 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v15, 1, v8);
    }
    sub_2414B33AC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v11[*(int *)(v8 + 24)], 1, 1, v4);
  }
  sub_2414B33AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(&v11[*(int *)(v8 + 20)], v7, v4);
  sub_2412DC3B8((uint64_t)v11, a2, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  v15 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v15, 1, v8);
}

double sub_2413BAEE8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_2413C5518(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_2413BAF00(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_2413C571C(a9, a1, a2, a3, a4);
}

double ScrubContext.time.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ScrubContext.event.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

BOOL static ScrubContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

BOOL static ScrubEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_2413BAF60(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t ScrubEvent.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t ScrubEvent.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t ScrubberReader.init(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  type metadata accessor for ScrubberProxy(0);
  v6 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125548);
  swift_allocObject();
  v6[2] = sub_2414B2DD0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA60);
  swift_allocObject();
  v6[3] = sub_2414B2DB8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381838);
  swift_allocObject();
  v6[4] = sub_2414B2DB8();
  sub_2414B2BA8();
  result = sub_2414B4798();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = v8;
  return result;
}

uint64_t ScrubberReader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberProxy(255);
  v23 = v7;
  v25 = *(_QWORD *)(a1 + 24);
  v8 = v25;
  v24 = sub_2412C8030((unint64_t *)&unk_257125438, type metadata accessor for ScrubberProxy, (uint64_t)&protocol conformance descriptor for ScrubberProxy);
  v30 = v4;
  v31 = v7;
  v32 = v8;
  v33 = v24;
  v9 = MEMORY[0x242695A94](0, &v30, MEMORY[0x24BDF2358], 0);
  v27 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v26 = (uint64_t)&v23 - v13;
  v14 = *(void (**)(uint64_t))v2;
  v15 = *(_QWORD *)(v2 + 24);
  v30 = *(_QWORD *)(v2 + 16);
  v16 = v30;
  v31 = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571266E8);
  sub_2414B47A4();
  v14(v34);
  swift_release();
  v30 = v16;
  v31 = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571266E8);
  sub_2414B47A4();
  v17 = swift_checkMetadataState();
  v19 = v24;
  v18 = v25;
  sub_2414B41BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  v30 = v4;
  v31 = v17;
  v32 = v18;
  v33 = v19;
  swift_getOpaqueTypeConformance2();
  v20 = v26;
  sub_2412FBF34((uint64_t)v11, v9, v26);
  v21 = *(void (**)(char *, uint64_t))(v27 + 8);
  v21(v11, v9);
  sub_2412EEA1C(v20, v9, v29);
  return ((uint64_t (*)(uint64_t, uint64_t))v21)(v20, v9);
}

Swift::Void __swiftcall ScrubberProxy.seek(to:)(Swift::Double to)
{
  double v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Double v18;
  Swift::Double v19;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_retain_n();
  v9 = sub_2414B2C8C();
  v10 = sub_2414B51B8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v17 = v5;
    v12 = v11;
    *(double *)&v13 = COERCE_DOUBLE(swift_slowAlloc());
    v18 = v2;
    v19 = *(double *)&v13;
    *(_DWORD *)v12 = 136446466;
    v14 = sub_2414B4D8C();
    v18 = COERCE_DOUBLE(sub_2412E4890(v14, v15, (uint64_t *)&v19));
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2048;
    v18 = to;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v9, v10, "ScrubberReader proxy %{public}s seeking to time %f", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v13, -1, -1);
    MEMORY[0x242695BD8](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = to;
  sub_2414B2DC4();
}

Swift::Void __swiftcall ScrubberProxy.notifyJumped(by:)(Swift::Double by)
{
  double v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Double v18;
  Swift::Double v19;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_retain_n();
  v9 = sub_2414B2C8C();
  v10 = sub_2414B51B8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v17 = v5;
    v12 = v11;
    *(double *)&v13 = COERCE_DOUBLE(swift_slowAlloc());
    v18 = v2;
    v19 = *(double *)&v13;
    *(_DWORD *)v12 = 136446466;
    v14 = sub_2414B4D8C();
    v18 = COERCE_DOUBLE(sub_2412E4890(v14, v15, (uint64_t *)&v19));
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2048;
    v18 = by;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v9, v10, "ScrubberReader proxy %{public}s notifying jumped by interval %f", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v13, -1, -1);
    MEMORY[0x242695BD8](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = by;
  sub_2414B2DAC();
}

Swift::Void __swiftcall ScrubberProxy._pptChangeScrubberInteractionState(to:)(MediaCoreUI::ScrubState to)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = (unsigned __int8 *)to;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v8) = *v3;
  if (qword_257120888 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  swift_retain_n();
  v10 = sub_2414B2C8C();
  v11 = sub_2414B51B8();
  if (os_log_type_enabled(v10, v11))
  {
    v22 = v5;
    v12 = v8;
    v8 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v24 = v2;
    v25 = v21;
    *(_DWORD *)v8 = 136446466;
    v13 = sub_2414B4D8C();
    v24 = sub_2412E4890(v13, v14, &v25);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v15 = 0xE800000000000000;
    v16 = 0x676E696B63617274;
    if (v12 != 1)
    {
      v16 = 0x6172656C65636564;
      v15 = 0xEC000000676E6974;
    }
    v23 = v12;
    if (v12)
      v17 = v16;
    else
      v17 = 1701602409;
    if (v12)
      v18 = v15;
    else
      v18 = 0xE400000000000000;
    v24 = sub_2412E4890(v17, v18, &v25);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v10, v11, "ScrubberReader proxy %{public}s changing interaction state to %s", (uint8_t *)v8, 0x16u);
    v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v19, -1, -1);
    MEMORY[0x242695BD8](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v4);
    LOBYTE(v8) = v23;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  LOBYTE(v25) = v8;
  sub_2414B2DAC();
}

BOOL static ScrubberProxy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ScrubberProxy.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI13ScrubberProxy___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScrubberProxy.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI13ScrubberProxy___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t ScrubberSection.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ScrubberSection.startTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

MediaCoreUI::ScrubberSection __swiftcall ScrubberSection.init(title:startTime:)(Swift::String title, Swift::Double startTime)
{
  uint64_t v2;
  MediaCoreUI::ScrubberSection result;

  *(Swift::String *)v2 = title;
  *(Swift::Double *)(v2 + 16) = startTime;
  result.title = title;
  result.startTime = startTime;
  return result;
}

BOOL static ScrubberSection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_2414B57D0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t ScrubberSection.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58F0();
}

uint64_t ScrubberSection.hashValue.getter()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  sub_2414B58F0();
  return sub_2414B58FC();
}

BOOL sub_2413BBCC4(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_2414B57D0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_2413BBD24()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58F0();
}

uint64_t sub_2413BBD80()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  sub_2414B58F0();
  return sub_2414B58FC();
}

uint64_t ScrubberLoadingConfiguration.disableInteraction.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ScrubberLoadingConfiguration.showPlaceholderLabels.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ScrubberLoadingConfiguration.showSpinner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ScrubberLoadingConfiguration.availableDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_2413BBE20()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413BBEA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413BBF38()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413BBFF0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_2414B2CA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v27 = v2;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    if ((a2 & 1) != 0)
      return result;
  }
  else if ((a2 & 1) == 0 && *(double *)(v2 + 24) == *(double *)&a1)
  {
    return result;
  }
  if (qword_257120888 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  swift_retain_n();
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v26 = v7;
    v16 = v15;
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v16 = 136446466;
    v24 = v14;
    v27 = a1;
    v28 = a2 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
    v17 = sub_2414B4D8C();
    v27 = sub_2412E4890(v17, v18, &v29);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v23[1] = v16 + 14;
    swift_getKeyPath();
    v27 = v3;
    sub_2414B2B84();
    swift_release();
    v19 = *(_BYTE *)(v3 + 32);
    v27 = *(_QWORD *)(v3 + 24);
    v28 = v19;
    v20 = sub_2414B4D8C();
    v27 = sub_2412E4890(v20, v21, &v29);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, (os_log_type_t)v24, "ScrubberSections.duration changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v22, -1, -1);
    MEMORY[0x242695BD8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_2413BCF34();
}

uint64_t sub_2413BC334()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_2413BC3BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  v5 = *(_BYTE *)(v3 + 32);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 24);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2413BC450()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413BC4FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_2414B2CA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v27 = v2;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v2 + 48) & 1) != 0)
  {
    if ((a2 & 1) != 0)
      return result;
  }
  else if ((a2 & 1) == 0 && *(double *)(v2 + 40) == *(double *)&a1)
  {
    return result;
  }
  if (qword_257120888 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  swift_retain_n();
  v12 = sub_2414B2C8C();
  v13 = sub_2414B51B8();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v26 = v7;
    v16 = v15;
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v16 = 136446466;
    v24 = v14;
    v27 = a1;
    v28 = a2 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
    v17 = sub_2414B4D8C();
    v27 = sub_2412E4890(v17, v18, &v29);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v23[1] = v16 + 14;
    swift_getKeyPath();
    v27 = v3;
    sub_2414B2B84();
    swift_release();
    v19 = *(_BYTE *)(v3 + 48);
    v27 = *(_QWORD *)(v3 + 40);
    v28 = v19;
    v20 = sub_2414B4D8C();
    v27 = sub_2412E4890(v20, v21, &v29);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, (os_log_type_t)v24, "ScrubberSections.scrubberWidth changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v22, -1, -1);
    MEMORY[0x242695BD8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_2413BCF34();
}

uint64_t sub_2413BC840()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_2413BC8C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  v5 = *(_BYTE *)(v3 + 48);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 40);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2413BC95C()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413BCA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v30 = v1;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  result = sub_241387420(*(_QWORD *)(v1 + 56), a1);
  if ((result & 1) == 0)
  {
    if (qword_257120888 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v4, (uint64_t)qword_257136FB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v10 = sub_2414B2C8C();
    v11 = sub_2414B51B8();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = swift_slowAlloc();
      v28 = v5;
      v14 = v13;
      v27 = swift_slowAlloc();
      v30 = v27;
      *(_DWORD *)v14 = 136315394;
      v26 = v10;
      v15 = swift_bridgeObjectRetain();
      v16 = MEMORY[0x242694750](v15, &type metadata for ScrubberSection);
      HIDWORD(v25) = v12;
      v18 = v17;
      swift_bridgeObjectRelease();
      v29 = sub_2412E4890(v16, v18, &v30);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      swift_getKeyPath();
      v29 = v2;
      sub_2414B2B84();
      swift_release();
      v19 = swift_bridgeObjectRetain();
      v20 = MEMORY[0x242694750](v19, &type metadata for ScrubberSection);
      v22 = v21;
      swift_bridgeObjectRelease();
      v29 = sub_2412E4890(v20, v22, &v30);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v23 = v26;
      _os_log_impl(&dword_2412C1000, v26, BYTE4(v25), "ScrubberSections.visibleSections changed from %s to %{public}s", (uint8_t *)v14, 0x16u);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v24, -1, -1);
      MEMORY[0x242695BD8](v14, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v7, v4);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return result;
}

uint64_t sub_2413BCD64()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413BCDEC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413BCE7C()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413BCF34()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double *v9;
  uint64_t result;
  uint64_t KeyPath;
  unint64_t v12;
  unint64_t v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  double v32;
  double *v33;
  unint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  double *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;

  v1 = v0;
  swift_getKeyPath();
  v46 = v0;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
    goto LABEL_10;
  swift_getKeyPath();
  v46 = v0;
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v0 + 32) & 1) != 0
    || (v2 = *(double *)(v0 + 24), v2 <= 0.0)
    || (swift_getKeyPath(), v46 = v0, sub_2414B2B84(), swift_release(), (*(_BYTE *)(v0 + 48) & 1) != 0)
    || (v3 = *(double *)(v0 + 40), v3 <= 0.0))
  {
LABEL_10:
    swift_getKeyPath();
    v46 = v0;
    sub_2414B2B84();
    result = swift_release();
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 56) + 16))
      return result;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v46 = v0;
LABEL_12:
    sub_2414B2B78();
    return swift_release();
  }
  if (qword_2571207F0 != -1)
    swift_once();
  v4 = *(double *)&qword_257136F10;
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  swift_bridgeObjectRetain();
  v5 = sub_2413C5DC0(v2);
  swift_bridgeObjectRelease();
  v46 = v5;
  swift_bridgeObjectRetain();
  sub_2413BFA98(&v46);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v46 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v8 = v4 * 0.5;
    v9 = (double *)(v46 + 48);
    do
    {
      v15 = *v9;
      v16 = v3 * vabdd_f64(0.0, *v9) / v2;
      if (v8 + 1.9047619 < v3 * vabdd_f64(v2, *v9) / v2 && v8 < v16)
      {
        v19 = *((_QWORD *)v9 - 2);
        v18 = *((_QWORD *)v9 - 1);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v46 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2413BEEC4(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v46;
        }
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_2413BEEC4(v12 > 1, v13 + 1, 1);
          v7 = v46;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = (double *)(v7 + 24 * v13);
        *((_QWORD *)v14 + 4) = v19;
        *((_QWORD *)v14 + 5) = v18;
        v14[6] = v15;
      }
      v9 += 3;
      --v6;
    }
    while (v6);
  }
  swift_release();
  v21 = *(_QWORD *)(v7 + 16);
  if (!v21)
  {
    swift_release();
    swift_getKeyPath();
    v46 = v1;
    sub_2414B2B84();
    result = swift_release();
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 56) + 16))
      return result;
    v41 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v41);
    v46 = v1;
    goto LABEL_12;
  }
  v22 = v21 - 1;
  v23 = (uint64_t *)(v7 + 32 + 24 * (v21 - 1));
  v24 = v23[1];
  v44 = *v23;
  v25 = v23[2];
  swift_bridgeObjectRetain();
  v26 = sub_24146D738(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v28 = v26[2];
  v27 = v26[3];
  v29 = v28 + 1;
  if (v28 >= v27 >> 1)
    v26 = sub_24146D738((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v29;
  v30 = &v26[3 * v28];
  v30[4] = v44;
  v30[5] = v24;
  v30[6] = v25;
  if (v21 < 2)
  {
LABEL_39:
    swift_release();
    sub_2413BEC70((uint64_t)v26);
    swift_bridgeObjectRelease();
    v40 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v40);
    v46 = v1;
    sub_2414B2B78();
    swift_release();
    return swift_release();
  }
  v31 = v7 + 16;
  while (v22 < *(_QWORD *)(v7 + 16))
  {
    v32 = *(double *)(v7 + 32 + 24 * v22 + 16);
    v33 = (double *)(v31 + 24 * v22);
    while (1)
    {
      v34 = v22 - 1;
      v35 = v33[1];
      if (v3 * vabdd_f64(v32, v35) / v2 >= 6.0)
        break;
      v33 -= 3;
      --v22;
      if (v34 + 1 <= 1)
        goto LABEL_39;
    }
    v36 = *v33;
    v42 = *((_QWORD *)v33 - 1);
    v43 = v31;
    v45 = v29 + 1;
    v37 = v26[3];
    swift_bridgeObjectRetain();
    if (v29 >= v37 >> 1)
      v26 = sub_24146D738((_QWORD *)(v37 > 1), v45, 1, v26);
    v31 = v43;
    v26[2] = v45;
    v38 = (double *)&v26[3 * v29];
    *((_QWORD *)v38 + 4) = v42;
    v38[5] = v36;
    v38[6] = v35;
    ++v29;
    if (v22-- <= 1)
      goto LABEL_39;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2413BD598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberSections___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2413BD5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v30[1] = a1;
  v37 = a3;
  v4 = sub_2414B4D20();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_2414B3CD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F8);
  v31 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126500);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v34 = (char *)v30 - v17;
  v38 = a2;
  v30[0] = sub_2413BDA6C();
  v32 = v18;
  v30[2] = v19;
  v30[3] = v20;
  sub_2414B3CAC();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126508);
  v22 = sub_2412C8FC4((unint64_t *)&unk_257126510, &qword_257126508, MEMORY[0x24BDEFB78]);
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v23 = (id)qword_25438E910;
  sub_2414B2B3C();
  v41 = sub_2414B4D80();
  v42 = v24;
  v39 = v21;
  v40 = v22;
  swift_getOpaqueTypeConformance2();
  sub_2412F6D88();
  v25 = (uint64_t)v33;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  sub_2414B4D14();
  sub_2414B4D08();
  sub_2414B4CFC();
  sub_2414B4D08();
  sub_2414B4CFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2414B4D08();
  sub_2414B4D2C();
  v26 = (id)qword_25438E910;
  sub_2414B2B3C();
  v41 = sub_2414B4D80();
  v42 = v27;
  v28 = (uint64_t)v34;
  sub_2414B34C0();
  swift_bridgeObjectRelease();
  sub_2412CBE78(v25, &qword_257126500);
  swift_retain();
  sub_2414B34FC();
  swift_release();
  return sub_2412CBE78(v28, &qword_257126500);
}

uint64_t sub_2413BDA6C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v1 + 32) & 1) == 0)
  {
    swift_getKeyPath();
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B84();
    swift_release();
    v2 = (id)AXDurationStringForDuration();
    if (v2)
    {
      v3 = v2;
      v4 = sub_2414B4D68();

      v5 = (id)AXDurationStringForDuration();
      if (v5)
      {
        v6 = v5;
        sub_2414B4D68();

        return v4;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_2571207E8 != -1)
    swift_once();
  v4 = qword_257136F00;
  swift_bridgeObjectRetain_n();
  return v4;
}

uint64_t sub_2413BDC14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  double v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  NSObject *v29;
  uint64_t v30;
  double v31;
  uint64_t KeyPath;
  uint64_t v33;
  void (*v34)(uint64_t *);
  _QWORD v35[2];
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v38 = sub_2414B2CA4();
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B3DCC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v35 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v35 - v12;
  v41 = v1;
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v14 + 64);
  swift_getKeyPath();
  v43 = v15;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v15 + 32) & 1) == 0)
  {
    v17 = *(double *)(v15 + 24);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v18(v13, a1, v4);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v13, v4);
    if (v19 == *MEMORY[0x24BDF1140])
    {
      v20 = v17 * 0.05;
    }
    else if (v19 == *MEMORY[0x24BDF1138])
    {
      v20 = v17 * -0.05;
    }
    else
    {
      if (qword_257120888 != -1)
        swift_once();
      v21 = v38;
      v22 = __swift_project_value_buffer(v38, (uint64_t)qword_257136FB0);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v22, v21);
      v18(v10, a1, v4);
      v23 = sub_2414B2C8C();
      v24 = sub_2414B51AC();
      v37 = v23;
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v43 = v36;
        *(_DWORD *)v25 = 136315138;
        v35[1] = v25 + 4;
        v18(v7, (uint64_t)v10, v4);
        v26 = sub_2414B4D8C();
        v42 = sub_2412E4890(v26, v27, &v43);
        sub_2414B541C();
        swift_bridgeObjectRelease();
        v28 = *(void (**)(char *, uint64_t))(v5 + 8);
        v28(v10, v4);
        v29 = v37;
        _os_log_impl(&dword_2412C1000, v37, v24, "Unknown case AccessibilityAdjustmentDirection.%s", v25, 0xCu);
        v30 = v36;
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v30, -1, -1);
        MEMORY[0x242695BD8](v25, -1, -1);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v38);
      }
      else
      {
        v28 = *(void (**)(char *, uint64_t))(v5 + 8);
        v28(v10, v4);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v21);
      }
      v28(v13, v4);
      v20 = 0.0;
    }
    swift_getKeyPath();
    v43 = v14;
    sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
    sub_2414B2B84();
    swift_release();
    v31 = v20 + *(double *)(v14 + 96);
    if (v31 <= 0.0)
      v31 = 0.0;
    if (v17 >= v31)
      v17 = v31;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v35[-2] = v14;
    *(double *)&v35[-1] = v17;
    v43 = v14;
    sub_2414B2B78();
    swift_release();
    swift_getKeyPath();
    v33 = v41;
    v43 = v41;
    sub_2412C8030(&qword_257125450, type metadata accessor for ScrubberViewModel, (uint64_t)&unk_2414C1898);
    sub_2414B2B84();
    swift_release();
    v34 = *(void (**)(uint64_t *))(v33 + 32);
    swift_getKeyPath();
    v43 = v14;
    swift_retain();
    sub_2414B2B84();
    swift_release();
    v43 = *(_QWORD *)(v14 + 96);
    v44 = 2;
    v34(&v43);
    return swift_release();
  }
  return result;
}

uint64_t sub_2413BE15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2413BD5F8(a1, *v2, a2);
}

uint64_t sub_2413BE164()
{
  uint64_t result;

  result = sub_2414B4A80();
  qword_257125420 = result;
  return result;
}

uint64_t sub_2413BE198()
{
  uint64_t result;

  result = sub_2414B4ABC();
  qword_257125428 = result;
  return result;
}

uint64_t sub_2413BE1C0()
{
  uint64_t result;

  result = sub_2414B4ABC();
  qword_257125430 = result;
  return result;
}

uint64_t sub_2413BE1F0()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257136FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257136FB0);
  return sub_2414B2C98();
}

MediaCoreUI::ScrubState_optional __swiftcall ScrubState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MediaCoreUI::ScrubState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2414B571C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2413BE2BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2413A5E1C(*a1, *a2);
}

uint64_t sub_2413BE2C8()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_2413BE368()
{
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413BE3E4()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

MediaCoreUI::ScrubState_optional sub_2413BE480(Swift::String *a1)
{
  return ScrubState.init(rawValue:)(*a1);
}

void sub_2413BE48C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x676E696B63617274;
  if (v2 != 1)
  {
    v5 = 0x6172656C65636564;
    v4 = 0xEC000000676E6974;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701602409;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t type metadata accessor for Scrubber.CompanionViews(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Scrubber.CompanionViews);
}

unint64_t sub_2413BE4F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257125480;
  if (!qword_257125480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125458);
    v2[0] = sub_2413C6574(&qword_257125488, &qword_257125490, (uint64_t (*)(void))sub_2413BE584, (uint64_t (*)(void))sub_2413BE6A0);
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257125480);
  }
  return result;
}

unint64_t sub_2413BE584()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257125498;
  if (!qword_257125498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254A0);
    v2[0] = sub_2413BE608();
    v2[1] = sub_2412C8FC4(&qword_2571254C8, &qword_2571254D0, MEMORY[0x24BDEF828]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257125498);
  }
  return result;
}

unint64_t sub_2413BE608()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571254A8;
  if (!qword_2571254A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254B0);
    v2[0] = sub_2412C8030((unint64_t *)&unk_2571254B8, type metadata accessor for MediaTimelineControl, (uint64_t)&unk_2414C17F8);
    v2[1] = sub_24130CB04();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571254A8);
  }
  return result;
}

uint64_t type metadata accessor for MediaTimelineControl(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257126380);
}

unint64_t sub_2413BE6A0()
{
  unint64_t result;

  result = qword_2571254D8;
  if (!qword_2571254D8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C17A8, &type metadata for ScrubberHoverEffectModifier);
    atomic_store(result, (unint64_t *)&qword_2571254D8);
  }
  return result;
}

uint64_t type metadata accessor for ScrubberInteractionViewModel(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257125920);
}

uint64_t sub_2413BE708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413B2110(*(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2413BE718@<X0>(uint64_t a1@<X3>, uint64_t (**a2)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>)
{
  uint64_t *v2;

  return sub_2413B4438(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_2413BE728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Scrubber(0, v6, v7, a4) - 8) + 80);
  return sub_2413B478C(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

unint64_t sub_2413BE780()
{
  unint64_t result;

  result = qword_257125520;
  if (!qword_257125520)
  {
    result = MEMORY[0x242695AE8](&unk_2414C173C, &type metadata for ScrubberStateChangeModifier);
    atomic_store(result, (unint64_t *)&qword_257125520);
  }
  return result;
}

uint64_t sub_2413BE7C4()
{
  return sub_2414B370C();
}

uint64_t sub_2413BE7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

unint64_t sub_2413BE808()
{
  unint64_t result;

  result = qword_257125538;
  if (!qword_257125538)
  {
    result = MEMORY[0x242695AE8](&unk_2414C16EC, &type metadata for ScrubberAccessibilityModifier);
    atomic_store(result, (unint64_t *)&qword_257125538);
  }
  return result;
}

uint64_t sub_2413BE84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - v10;
  v12(v9);
  sub_2412FBF34((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_2412EEA1C((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_2413BE924@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  uint64_t v23;
  uint64_t v24;

  v23 = a6;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v20 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v19 - v15;
  result = sub_2414B3130();
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v7);
    v22((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, uint64_t))(v8 + 8))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    sub_2412FBF34((uint64_t)v13, a4, (uint64_t)v16);
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, a4);
    sub_2412EEA1C((uint64_t)v16, a4, v23);
    return ((uint64_t (*)(char *, uint64_t))v18)(v16, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_2413BEAA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_2413BF674((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2413C648C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2413BEB8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571266D8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_2413BF86C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2413C648C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2413BEC70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126650);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_2413A6184(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2413BED3C(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x24BEE4AF8];
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254382968);
    v4 = 8 * a2;
    v5 = (char *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size_0(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 3);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 8 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BEE70(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2413BEEFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2413BEE8C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2413BF058(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2413BEEA8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2413BF1B4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2413BEEC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2413BF394(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2413BEEE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2413BF518(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2413BEEFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543846B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BF058(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254382960);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BF1B4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571266D0);
  v10 = *(_QWORD *)(sub_2414B2A88() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_2414B2A88() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BF394(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257126650);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BF518(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254382970);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413BF674(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_2413BF86C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2413BFA64()
{
  return sub_2414B36A0();
}

uint64_t sub_2413BFA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], MEMORY[0x24BDEDF10]);
}

uint64_t sub_2413BFA98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2413C0694(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2413BFB00(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2413BFB00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  double v32;
  uint64_t v33;
  double *v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double *__dst;

  v3 = a1[1];
  result = sub_2414B5788();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v88 = *a1;
      v89 = *a1 + 16;
      v90 = -1;
      for (i = 1; i != v3; ++i)
      {
        v92 = *(double *)(v88 + 24 * i + 16);
        v93 = v90;
        v94 = v89;
        do
        {
          if (v92 >= *(double *)v94)
            break;
          if (!v88)
            goto LABEL_141;
          v95 = *(_QWORD *)(v94 + 8);
          v96 = *(_QWORD *)(v94 + 16);
          *(_OWORD *)(v94 + 8) = *(_OWORD *)(v94 - 16);
          *(_QWORD *)(v94 + 24) = *(_QWORD *)v94;
          *(_QWORD *)(v94 - 16) = v95;
          *(_QWORD *)(v94 - 8) = v96;
          *(double *)v94 = v92;
          v94 -= 24;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 24;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v106 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v98 = v12;
      v108 = v9;
      if (v13 >= 2)
      {
        v99 = *v106;
        do
        {
          v100 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v99)
            goto LABEL_145;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v13 + 24];
          sub_2413C0210((double *)(v99 + 24 * v102), (double *)(v99 + 24 * *(_QWORD *)&v98[16 * v13 + 16]), v99 + 24 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_2413C0680((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_134;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v13 > v105)
            goto LABEL_135;
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v105 - v13));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v108 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_2414B4F0C();
    *(_QWORD *)(v8 + 16) = v7;
    v108 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v107 = *a1 + 64;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v109 = v6;
  v110 = v3;
  v111 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 24 * v10 + 16);
      v16 = *(double *)(v11 + 24 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v107 + 24 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = v11 + v20;
              v26 = *(_QWORD *)(v11 + v21);
              v27 = *(_QWORD *)(v11 + v21 + 8);
              v28 = *(_QWORD *)(v11 + v21 + 16);
              v29 = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = v29;
              *(_QWORD *)(v25 - 24) = v26;
              *(_QWORD *)(v25 - 16) = v27;
              *(_QWORD *)(v25 - 8) = v28;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v30 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v30 >= v3)
      v30 = v3;
    if (v30 < v14)
      break;
    if (v10 != v30)
    {
      v31 = (double *)(v11 + 24 * v10);
      do
      {
        v32 = *(double *)(v11 + 24 * v10 + 16);
        v33 = v14;
        v34 = v31;
        do
        {
          if (v32 >= *(v34 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v35 = *v34;
          v36 = *((_QWORD *)v34 + 1);
          *(_OWORD *)v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *((_QWORD *)v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      v10 = v30;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2413C04CC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v38 = *((_QWORD *)v12 + 2);
    v37 = *((_QWORD *)v12 + 3);
    v13 = v38 + 1;
    v11 = v111;
    if (v38 >= v37 >> 1)
    {
      v87 = sub_2413C04CC((char *)(v37 > 1), v38 + 1, 1, v12);
      v11 = v111;
      v12 = v87;
    }
    *((_QWORD *)v12 + 2) = v13;
    v39 = v12 + 32;
    v40 = &v12[16 * v38 + 32];
    *(_QWORD *)v40 = v14;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        v41 = v13 - 1;
        if (v13 >= 4)
        {
          v46 = &v39[16 * v13];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_120;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_121;
          v53 = v13 - 2;
          v54 = &v39[16 * v13 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_123;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_126;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_130;
            v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v70 = *((_QWORD *)v12 + 4);
            v71 = *((_QWORD *)v12 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_77;
          }
          v43 = *((_QWORD *)v12 + 4);
          v42 = *((_QWORD *)v12 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_122;
        v53 = v13 - 2;
        v59 = &v39[16 * v13 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_125;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_128;
        if (__OFADD__(v63, v68))
          goto LABEL_129;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_83:
          if (v69)
            v41 = v53;
          goto LABEL_85;
        }
LABEL_77:
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_127;
        if (v75 < v63)
          goto LABEL_15;
LABEL_85:
        v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v81 = v12;
        v82 = &v39[16 * v80];
        v83 = *(_QWORD *)v82;
        v84 = &v39[16 * v41];
        v85 = *((_QWORD *)v84 + 1);
        sub_2413C0210((double *)(v11 + 24 * *(_QWORD *)v82), (double *)(v11 + 24 * *(_QWORD *)v84), v11 + 24 * v85, __dst);
        if (v1)
          goto LABEL_93;
        if (v85 < v83)
          goto LABEL_117;
        if (v41 > *((_QWORD *)v81 + 2))
          goto LABEL_118;
        *(_QWORD *)v82 = v83;
        *(_QWORD *)&v39[16 * v80 + 8] = v85;
        v86 = *((_QWORD *)v81 + 2);
        if (v41 >= v86)
          goto LABEL_119;
        v12 = v81;
        v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((_QWORD *)v81 + 2) = v86 - 1;
        v11 = v111;
        if (v86 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v109;
    v3 = v110;
    if (v10 >= v110)
    {
      v9 = v108;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_2414B5668();
  __break(1u);
  return result;
}

uint64_t sub_2413C0210(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  __int128 v16;
  double *v17;
  unint64_t v18;
  double *v19;
  double *v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  char *v24;
  double *v25;
  double *v26;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v26 = __src;
  v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v17 = &v4[3 * v11];
      v24 = (char *)v17;
      v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v18 = a3 - 24;
        do
        {
          v19 = (double *)(v18 + 24);
          if (*(v17 - 1) >= *(v6 - 1))
          {
            v24 = (char *)(v17 - 3);
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              v22 = *(_OWORD *)(v17 - 3);
              *(double *)(v18 + 16) = *(v17 - 1);
              *(_OWORD *)v18 = v22;
            }
            v20 = v6;
            v17 -= 3;
            if (v6 <= v7)
              break;
          }
          else
          {
            v20 = v6 - 3;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              v21 = *(_OWORD *)v20;
              *(double *)(v18 + 16) = *(v6 - 1);
              *(_OWORD *)v18 = v21;
            }
            v26 = v6 - 3;
            if (v20 <= v7)
              break;
          }
          v18 -= 24;
          v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_2413C05C4((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[3 * v9];
    v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        if (v6[2] >= v13[2])
        {
          v4 = v13 + 3;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 3;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 3;
          }
        }
        else
        {
          v14 = v6 + 3;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v7[2] = v15[2];
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 3;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v25 = v4;
        v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

char *sub_2413C04CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126658);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2413C05C4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_2414B56F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_2413C0680(uint64_t a1)
{
  return sub_2413C04CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2413C0694(uint64_t a1)
{
  return sub_2413BF394(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s11MediaCoreUI28ScrubberLoadingConfigurationV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  uint64_t result;
  char v4;

  result = 0;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
    && ((*((unsigned __int8 *)a1 + 1) ^ *((unsigned __int8 *)a2 + 1)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 2) ^ *((unsigned __int8 *)a2 + 2)) & 1) == 0)
  {
    if (((_BYTE)a1[2] & 1) != 0)
    {
      if (((_BYTE)a2[2] & 1) == 0)
        return 0;
    }
    else
    {
      if (a1[1] == a2[1])
        v4 = *((_BYTE *)a2 + 16);
      else
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_2413C0714()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413C074C()
{
  unint64_t result;

  result = qword_257125558;
  if (!qword_257125558)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubEvent, &type metadata for ScrubEvent);
    atomic_store(result, (unint64_t *)&qword_257125558);
  }
  return result;
}

uint64_t sub_2413C0790()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413C07C8()
{
  unint64_t result;

  result = qword_257125560;
  if (!qword_257125560)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubberSection, &type metadata for ScrubberSection);
    atomic_store(result, (unint64_t *)&qword_257125560);
  }
  return result;
}

unint64_t sub_2413C0810()
{
  unint64_t result;

  result = qword_257125568;
  if (!qword_257125568)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubState, &type metadata for ScrubState);
    atomic_store(result, (unint64_t *)&qword_257125568);
  }
  return result;
}

uint64_t sub_2413C0854()
{
  return type metadata accessor for ScrubberViewModel(0);
}

void sub_2413C085C()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, (unint64_t *)&qword_2571255E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_2414B2BB4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_2413C0954()
{
  return type metadata accessor for ScrubberInteractionViewModel(0);
}

uint64_t sub_2413C095C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2414B2B00();
  if (v1 <= 0x3F)
  {
    result = sub_2414B2BB4();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_2413C0A48()
{
  return type metadata accessor for MediaTimelineControl.Coordinator(0);
}

uint64_t type metadata accessor for MediaTimelineControl.Coordinator(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_257125E10);
}

void sub_2413C0A64()
{
  unint64_t v0;

  sub_241324D88(319, qword_257125E20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2413C0B2C()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, (unint64_t *)&qword_25437DAA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_2413C0C10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;

  v6 = sub_2414B3934();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8 & 0xF8 | 7;
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = ((v13
        + 8
        + ((((v10 + (((v8 & 0xF8) + 32) & ~v9) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
      + *(_QWORD *)(v12 + 64);
  v15 = (*(_DWORD *)(v12 + 80) | v8) & 0x100000;
  v16 = *a2;
  *a1 = *a2;
  if ((v13 | v9) != 7 || v15 != 0 || v14 > 0x18)
  {
    v19 = v16 + (((v13 | v9) + 16) & ~(v13 | v9));
    swift_retain();
  }
  else
  {
    v46 = v6;
    v47 = v13 + 8;
    v48 = v12;
    v49 = v11;
    v20 = ~v9;
    a1[1] = a2[1];
    v50 = a1;
    v21 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_BYTE *)(v22 + 8);
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v24;
    v25 = (_QWORD *)((v21 + v9 + 9) & v20);
    v26 = (_QWORD *)((v22 + v9 + 9) & v20);
    v27 = *((unsigned __int8 *)v26 + v10);
    if (v27 >= 2)
    {
      if (v10 <= 3)
        v28 = v10;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    v29 = v10 + 1;
    v30 = ~v13;
    if (v27 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v25, v26, v46);
      v31 = 1;
    }
    else
    {
      *v25 = *v26;
      swift_retain();
      v31 = 0;
    }
    *((_BYTE *)v25 + v10) = v31;
    v32 = ((unint64_t)v25 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = ((unint64_t)v26 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(_QWORD *)v33;
    *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
    *(_QWORD *)v32 = v34;
    v35 = ((unint64_t)v25 + v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v36 = ((unint64_t)v26 + v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v37 = *(_OWORD *)v36;
    *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
    *(_OWORD *)v35 = v37;
    v38 = (_QWORD *)(((unint64_t)v26 + v29 + 47) & 0xFFFFFFFFFFFFF8);
    v39 = (_QWORD *)(((unint64_t)v25 + v29 + 47) & 0xFFFFFFFFFFFFF8);
    *v39 = *v38;
    v40 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    v41 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v40 = *v41;
    v42 = ((unint64_t)v40 + v47) & v30;
    v43 = ((unint64_t)v41 + v47) & v30;
    v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v48 + 16);
    swift_bridgeObjectRetain();
    v44(v42, v43, v49);
    return v50;
  }
  return (uint64_t *)v19;
}

uint64_t sub_2413C0EC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  swift_release();
  swift_release();
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_2412E6C04(*(_QWORD *)v4, *(unsigned __int8 *)(v4 + 8));
  v5 = sub_2414B3934();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + v7 + 9) & ~v7;
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v9 = 8;
  else
    v9 = *(_QWORD *)(v6 + 64);
  v10 = *(unsigned __int8 *)(v8 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X13 }
  }
  if (v10 == 1)
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  else
    swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((((v9 + v8 + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_2413C100C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  char *v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v9 = *(_BYTE *)(v7 + 8);
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(_QWORD *)v6 = v8;
  *(_BYTE *)(v6 + 8) = v9;
  v10 = sub_2414B3934();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 + 16;
  v14 = v12 + 16 + v6;
  v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  v16 = (_QWORD *)(v14 & v15);
  v17 = (_QWORD *)((v13 + v7) & v15);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v18 = 8;
  else
    v18 = *(_QWORD *)(v11 + 64);
  v19 = *((unsigned __int8 *)v17 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  if (v19 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v16, v17, v10);
    v21 = 1;
  }
  else
  {
    *v16 = *v17;
    swift_retain();
    v21 = 0;
  }
  *((_BYTE *)v16 + v18) = v21;
  v22 = (char *)v16 + v18 + 1;
  v23 = (char *)v17 + v18 + 1;
  v24 = (unint64_t)(v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (unint64_t)(v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = v26;
  v27 = (unint64_t)(v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = (unint64_t)(v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_OWORD *)v28;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_OWORD *)v27 = v29;
  v30 = (_QWORD *)((unint64_t)(v22 + 47) & 0xFFFFFFFFFFFFF8);
  v31 = (_QWORD *)((unint64_t)(v23 + 47) & 0xFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = *(_QWORD *)(a3 + 16);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = ((unint64_t)v32 + v36 + 8) & ~v36;
  v38 = ((unint64_t)v33 + v36 + 8) & ~v36;
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  v39(v37, v38, v34);
  return a1;
}

_QWORD *sub_2413C121C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v9 = *(_BYTE *)(v7 + 8);
  j__swift_retain();
  v10 = *(_QWORD *)v6;
  v11 = *(unsigned __int8 *)(v6 + 8);
  *(_QWORD *)v6 = v8;
  *(_BYTE *)(v6 + 8) = v9;
  sub_2412E6C04(v10, v11);
  v12 = sub_2414B3934();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  v15 = v14 + 16;
  v16 = v14 + 16 + v6;
  v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  v18 = (_QWORD *)(v16 & v17);
  v19 = (_QWORD *)((v15 + v7) & v17);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v20 = 8;
  else
    v20 = *(_QWORD *)(v13 + 64);
  if (v18 != v19)
  {
    v21 = v12;
    v22 = *((unsigned __int8 *)v18 + v20);
    if (v22 >= 2)
    {
      if (v20 <= 3)
        v23 = v20;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v18, v12);
    else
      swift_release();
    v24 = *((unsigned __int8 *)v19 + v20);
    if (v24 >= 2)
    {
      if (v20 <= 3)
        v25 = v20;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v18, v19, v21);
      *((_BYTE *)v18 + v20) = 1;
    }
    else
    {
      *v18 = *v19;
      *((_BYTE *)v18 + v20) = 0;
      swift_retain();
    }
  }
  v26 = (char *)v18 + v20 + 1;
  v27 = (char *)v19 + v20 + 1;
  v28 = (unint64_t)(v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (unint64_t)(v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = v30;
  v31 = (unint64_t)(v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = (unint64_t)(v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_BYTE *)(v31 + 1) = *(_BYTE *)(v32 + 1);
  *(_BYTE *)(v31 + 2) = *(_BYTE *)(v32 + 2);
  v33 = *(_QWORD *)(v32 + 8);
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_QWORD *)(v31 + 8) = v33;
  v34 = (_QWORD *)((unint64_t)(v26 + 47) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((unint64_t)(v27 + 47) & 0xFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v38 + 24))(((unint64_t)v36 + *(unsigned __int8 *)(v38 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), ((unint64_t)v37 + *(unsigned __int8 *)(v38 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  return a1;
}

_OWORD *sub_2413C1510(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  char *v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(v6 + 8);
  *(_QWORD *)v5 = v7;
  v8 = sub_2414B3934();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 + 16;
  v12 = v10 + 16 + v5;
  v13 = ~v10 & 0xFFFFFFFFFFFFFFF8;
  v14 = (_QWORD *)(v12 & v13);
  v15 = (_QWORD *)((v11 + v6) & v13);
  if (*(_QWORD *)(v9 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v9 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 32))(v14, v15, v8);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *v14 = *v15;
  }
  *((_BYTE *)v14 + v16) = v19;
  v20 = (char *)v14 + v16 + 1;
  v21 = (char *)v15 + v16 + 1;
  v22 = (unint64_t)(v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (unint64_t)(v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = v24;
  v25 = (unint64_t)(v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (unint64_t)(v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_OWORD *)v26;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  *(_OWORD *)v25 = v27;
  v28 = (_QWORD *)((unint64_t)(v20 + 47) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((unint64_t)(v21 + 47) & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v32 + 32))(((unint64_t)v30 + *(unsigned __int8 *)(v32 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), ((unint64_t)v31 + *(unsigned __int8 *)(v32 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  return a1;
}

_QWORD *sub_2413C16EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  char *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_BYTE *)(v7 + 8);
  v9 = *(_QWORD *)v6;
  v10 = *(unsigned __int8 *)(v6 + 8);
  *(_QWORD *)v6 = *(_QWORD *)v7;
  *(_BYTE *)(v6 + 8) = v8;
  sub_2412E6C04(v9, v10);
  v11 = sub_2414B3934();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 + 16;
  v15 = v13 + 16 + v6;
  v16 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  v17 = (_QWORD *)(v15 & v16);
  v18 = (_QWORD *)((v14 + v7) & v16);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v12 + 64);
  if (v17 != v18)
  {
    v20 = v11;
    v21 = *((unsigned __int8 *)v17 + v19);
    if (v21 >= 2)
    {
      if (v19 <= 3)
        v22 = v19;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v17, v11);
    else
      swift_release();
    v23 = *((unsigned __int8 *)v18 + v19);
    if (v23 >= 2)
    {
      if (v19 <= 3)
        v24 = v19;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 32))(v17, v18, v20);
      v25 = 1;
    }
    else
    {
      v25 = 0;
      *v17 = *v18;
    }
    *((_BYTE *)v17 + v19) = v25;
  }
  v26 = (char *)v17 + v19 + 1;
  v27 = (char *)v18 + v19 + 1;
  v28 = (unint64_t)(v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (unint64_t)(v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = v30;
  v31 = (unint64_t)(v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = (unint64_t)(v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_BYTE *)(v31 + 1) = *(_BYTE *)(v32 + 1);
  *(_BYTE *)(v31 + 2) = *(_BYTE *)(v32 + 2);
  v33 = *(_QWORD *)(v32 + 8);
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_QWORD *)(v31 + 8) = v33;
  v34 = (_QWORD *)((unint64_t)(v26 + 47) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((unint64_t)(v27 + 47) & 0xFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v38 + 40))(((unint64_t)v36 + *(unsigned __int8 *)(v38 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), ((unint64_t)v37 + *(unsigned __int8 *)(v38 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  return a1;
}

uint64_t sub_2413C19B8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v6 = *(_QWORD *)(sub_2414B3934() - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(_DWORD *)(v6 + 80) & 0xF8;
  v12 = v11 | 7;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = v13 + 8;
  if (a2 <= v10)
    goto LABEL_27;
  v15 = ((v14 + ((((v7 + ((v11 + 32) & ~v12) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
      + *(_QWORD *)(v8 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v19 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(_WORD *)((char *)a1 + v15))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_27:
      if ((v9 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v8 + 48))((v14
                                                                      + ((((v7
                                                                          + (((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                            + v12
                                                                            + 9) & ~v12)
                                                                          + 8) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 55) & 0xFFFFFFFFFFFFFFF8)) & ~v13);
      v22 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v22) = -1;
      return (v22 + 1);
    }
  }
  v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((_BYTE *)a1 + v15))
    goto LABEL_27;
LABEL_18:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v21 = v15;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return v10 + v20 + 1;
}

void sub_2413C1BA4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_2414B3934() - 8);
  v9 = 8;
  if (*(_QWORD *)(v8 + 64) > 8uLL)
    v9 = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFFu)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_DWORD *)(v8 + 80) & 0xF8;
  v13 = ((*(unsigned __int8 *)(v10 + 80)
        + 8
        + ((((v9 + ((v12 + 32) & ~(v12 | 7)) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t type metadata accessor for WindowWidthReaderViewController()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for ScrubContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubContext()
{
  return &type metadata for ScrubContext;
}

ValueMetadata *type metadata accessor for ScrubEvent()
{
  return &type metadata for ScrubEvent;
}

uint64_t sub_2413C1EE4()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_2413C1F14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2413C1F60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2413C1FD4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Backdrop.PinchRenderer.MeshModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Backdrop.PinchRenderer.MeshModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ScrubberReader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrubberReader);
}

uint64_t sub_2413C20B4()
{
  return type metadata accessor for ScrubberProxy(0);
}

uint64_t sub_2413C20BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScrubberProxy()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_2413C214C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ScrubberSection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for ScrubberSection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberSection()
{
  return &type metadata for ScrubberSection;
}

uint64_t getEnumTagSinglePayload for ScrubberLoadingConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for ScrubberLoadingConfiguration()
{
  return &type metadata for ScrubberLoadingConfiguration;
}

uint64_t sub_2413C230C()
{
  return type metadata accessor for ScrubberSections(0);
}

uint64_t type metadata accessor for ScrubberSections(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257126058);
}

uint64_t sub_2413C2328()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s11MediaCoreUI10ScrubStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2413C23FC + 4 * byte_2414C0CDF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2413C2430 + 4 * byte_2414C0CDA[v4]))();
}

uint64_t sub_2413C2430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413C2438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413C2440);
  return result;
}

uint64_t sub_2413C244C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413C2454);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2413C2458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413C2460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrubState()
{
  return &type metadata for ScrubState;
}

uint64_t sub_2413C247C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[4];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[3];

  v1 = *a1;
  v2 = a1[1];
  sub_2414B3C94();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125458);
  v4 = type metadata accessor for Scrubber.CompanionViews(255, v1, v2, v3);
  v5 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125460);
  v6 = sub_2414B3514();
  v7 = sub_2414B3514();
  v8 = sub_2414B3514();
  v9 = MEMORY[0x242695AE8](&unk_2414C1848, v4);
  v10 = MEMORY[0x24BDEC438];
  v40[0] = v9;
  v40[1] = MEMORY[0x24BDEC438];
  v11 = MEMORY[0x24BDED308];
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v40);
  v13 = MEMORY[0x24BDEEC10];
  v39[0] = v12;
  v39[1] = sub_2412C8FC4(&qword_257125468, &qword_257125460, MEMORY[0x24BDEEC10]);
  v38[0] = MEMORY[0x242695AE8](v11, v6, v39);
  v38[1] = sub_24137771C();
  v37[0] = MEMORY[0x242695AE8](v11, v7, v38);
  v37[1] = v10;
  MEMORY[0x242695AE8](v11, v8, v37);
  v14 = sub_2414B3604();
  v15 = sub_2414B3514();
  v16 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257125478);
  v17 = sub_2414B3514();
  v18 = sub_2414B2B00();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v36[0] = sub_2413BE4F8();
  v36[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v14);
  v35[0] = MEMORY[0x242695AE8](v11, v15, v36);
  v35[1] = MEMORY[0x24BDEBF50];
  v34[0] = MEMORY[0x242695AE8](v11, v16, v35);
  v34[1] = sub_2412C8FC4(&qword_2571254E0, &qword_257125478, v13);
  v33[0] = v17;
  v33[1] = v18;
  v33[2] = MEMORY[0x242695AE8](v11, v17, v34);
  v33[3] = sub_2412C8030(&qword_2543830B8, v19, MEMORY[0x24BDCE958]);
  MEMORY[0x242695A94](255, v33, MEMORY[0x24BDF3908], 0);
  sub_2414B3514();
  sub_2412C8030(&qword_254384110, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  sub_2414B3148();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254E8);
  swift_getTupleTypeMetadata2();
  v20 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v20);
  v21 = sub_2414B4894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571254F0);
  v22 = sub_2414B3514();
  v23 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  v24 = sub_2414B3514();
  v25 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v26 = sub_2414B3514();
  v32[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v21);
  v32[1] = sub_2412C8FC4(&qword_257125518, &qword_2571254F0, MEMORY[0x24BDEDC10]);
  v31[0] = MEMORY[0x242695AE8](v11, v22, v32);
  v31[1] = sub_2413BE780();
  v30[0] = MEMORY[0x242695AE8](v11, v23, v31);
  v30[1] = sub_2412C8FC4(&qword_257125530, &qword_2571245E8, MEMORY[0x24BDF0400]);
  v29[0] = MEMORY[0x242695AE8](v11, v24, v30);
  v29[1] = sub_2413BE808();
  v28[0] = MEMORY[0x242695AE8](v11, v25, v29);
  v28[1] = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](v11, v26, v28);
}

uint64_t sub_2413C2934()
{
  type metadata accessor for ScrubberProxy(255);
  sub_2412C8030((unint64_t *)&unk_257125438, type metadata accessor for ScrubberProxy, (uint64_t)&protocol conformance descriptor for ScrubberProxy);
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ScrubberInteractionViewModel.TooltipSessionKind(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScrubberInteractionViewModel.TooltipSessionKind(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_2413C29F4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2413C2A10(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberInteractionViewModel.TooltipSessionKind()
{
  return &type metadata for ScrubberInteractionViewModel.TooltipSessionKind;
}

ValueMetadata *type metadata accessor for ScrubSensitivity()
{
  return &type metadata for ScrubSensitivity;
}

ValueMetadata *type metadata accessor for ScrubberAccessibilityModifier()
{
  return &type metadata for ScrubberAccessibilityModifier;
}

uint64_t destroy for ScrubberStateChangeModifier()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ScrubberStateChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScrubberStateChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ScrubberStateChangeModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberStateChangeModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberStateChangeModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberStateChangeModifier()
{
  return &type metadata for ScrubberStateChangeModifier;
}

uint64_t sub_2413C2D08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = *(int *)(a3 + 32);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 48) = a2[6];
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 36);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413C2E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_2413C2F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 36);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2413C30E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 32);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_2412CBE78(a1 + v7, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v11 = *(int *)(a3 + 36);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_2412CBE78(a1 + v11, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413C3290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B2F8C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 36);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2413C33D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_254380B58);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B2F8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = *(int *)(a3 + 36);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_2412CBE78(a1 + v11, &qword_25437DAA0);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413C3568()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C3574(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_2413C361C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2413C3628(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ScrubberTooltipModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257126258);
}

void sub_2413C36E0()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, (unint64_t *)&qword_254380B60, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, (unint64_t *)&qword_25437DAA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for TimedView()
{
  return &type metadata for TimedView;
}

uint64_t sub_2413C37D4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2413C3850(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_2413C390C(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_2413C3950(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  return a1;
}

_QWORD *sub_2413C39C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_2413C3A30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_2413C3A80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_2413C3AE8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2413C3BBC + 4 * byte_2414C0CE4[(v9 - 1)]))();
}

void sub_2413C3C2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

ValueMetadata *type metadata accessor for ScrubberHoverEffectModifier()
{
  return &type metadata for ScrubberHoverEffectModifier;
}

uint64_t getEnumTagSinglePayload for ScrubberBufferingMask(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[64])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberBufferingMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberBufferingMask()
{
  return &type metadata for ScrubberBufferingMask;
}

uint64_t *sub_2413C3EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413C3FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2413C403C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2413C40E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2413C41B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2413C4260(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_2412CBE78((uint64_t)a1 + v6, &qword_25437DAA0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B3934();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413C4330()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C433C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2413C43BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2413C43C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2413C4440()
{
  unint64_t v0;

  sub_241324D88(319, (unint64_t *)&qword_25437DAA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2413C44D0()
{
  return sub_2412C8030((unint64_t *)&unk_2571254B8, type metadata accessor for MediaTimelineControl, (uint64_t)&unk_2414C17F8);
}

uint64_t sub_2413C44FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C450C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C451C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C452C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C453C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C454C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C455C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Scrubber.SensitivityLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Scrubber.SensitivityLabel);
}

uint64_t sub_2413C459C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2413B4B94(*(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_2413C45A8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2413A8E4C(a1, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels, a2);
}

uint64_t sub_2413C45D0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2413A8E4C(a1, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner, a2);
}

unint64_t sub_2413C4600()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571263E8;
  if (!qword_2571263E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C0);
    v2[0] = sub_2413C4684();
    v2[1] = sub_2412C8FC4((unint64_t *)&unk_257126410, &qword_2571263E0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571263E8);
  }
  return result;
}

unint64_t sub_2413C4684()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571263F0;
  if (!qword_2571263F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263F8);
    v2[0] = sub_2413C46F0();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571263F0);
  }
  return result;
}

unint64_t sub_2413C46F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126400;
  if (!qword_257126400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C8);
    v2[0] = sub_2413C475C();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126400);
  }
  return result;
}

unint64_t sub_2413C475C()
{
  unint64_t result;

  result = qword_257126408;
  if (!qword_257126408)
  {
    result = MEMORY[0x242695AE8](&unk_2414C15A8, &type metadata for TimedView);
    atomic_store(result, (unint64_t *)&qword_257126408);
  }
  return result;
}

uint64_t sub_2413C47A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413B57D0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2413C47AC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413C4818, a1);
}

uint64_t sub_2413C47C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413C4818);
}

uint64_t sub_2413C47D4()
{
  return sub_2414B36D0();
}

uint64_t sub_2413C47F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50], MEMORY[0x24BDEE028]);
}

unint64_t sub_2413C4818()
{
  unint64_t result;

  result = qword_257126420;
  if (!qword_257126420)
  {
    result = MEMORY[0x242695AE8](&unk_2414C2120, &_s47ScrubberCanDisplaySensitivityOnMultipleLinesKeyVN);
    atomic_store(result, (unint64_t *)&qword_257126420);
  }
  return result;
}

void sub_2413C485C()
{
  sub_2413C6274();
}

uint64_t sub_2413C4870()
{
  return sub_2414B36A0();
}

uint64_t sub_2413C4890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], MEMORY[0x24BDEDF10]);
}

void sub_2413C48B4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showSpinner) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2413C48DC()
{
  uint64_t v0;

  return sub_2413AC8D0(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_2413C4900()
{
  return sub_2413C4C98();
}

uint64_t sub_2413C4914()
{
  return sub_2413C644C();
}

void sub_2413C4928()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__showPlaceholderLabels) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2413C4940()
{
  return swift_deallocObject();
}

unint64_t sub_2413C4950()
{
  unint64_t result;

  result = qword_257126440;
  if (!qword_257126440)
  {
    result = MEMORY[0x242695AE8](&unk_2414C20A8, &type metadata for ScrubberCompanionViewLayout);
    atomic_store(result, (unint64_t *)&qword_257126440);
  }
  return result;
}

uint64_t sub_2413C4994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413BE84C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_2413C49A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126468;
  if (!qword_257126468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126450);
    v2[0] = sub_2412C8FC4(&qword_257126470, &qword_257126460, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4((unint64_t *)&unk_257126478, &qword_257126458, MEMORY[0x24BDF0960]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126468);
  }
  return result;
}

uint64_t sub_2413C4A44()
{
  uint64_t v0;

  return sub_2413A6534(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_2413C4A6C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_2413C4AB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2571264B8;
  if (!qword_2571264B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543841F8);
    v2 = MEMORY[0x24BEE13F8];
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571264B8);
  }
  return result;
}

uint64_t sub_2413C4B10()
{
  uint64_t v0;

  return sub_2413A8F8C((double *)(v0 + 40));
}

unint64_t sub_2413C4B38()
{
  unint64_t result;

  result = qword_2571264C0;
  if (!qword_2571264C0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubberLoadingConfiguration, &type metadata for ScrubberLoadingConfiguration);
    atomic_store(result, (unint64_t *)&qword_2571264C0);
  }
  return result;
}

uint64_t sub_2413C4B80()
{
  return sub_2413B6B64();
}

void sub_2413C4B8C()
{
  uint64_t v0;

  sub_2413B6C14(v0 + 16);
}

uint64_t sub_2413C4B94(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_61Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_2413C4BF4()
{
  uint64_t v0;

  sub_2413A7A84(*(_QWORD *)(v0 + 80));
}

unint64_t sub_2413C4C1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2571264E0;
  if (!qword_2571264E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571264D8);
    v2 = sub_2412C8030(&qword_2571264E8, type metadata accessor for ScrubberProxy, (uint64_t)&protocol conformance descriptor for ScrubberProxy);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571264E0);
  }
  return result;
}

uint64_t sub_2413C4C98()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_2413BCF34();
}

uint64_t sub_2413C4CE0()
{
  return sub_2413C688C();
}

uint64_t sub_2413C4CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571264F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413C4D50(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2413C4D94(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_2413C4DD8()
{
  return sub_2414B3688();
}

uint64_t sub_2413C4DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], (uint64_t (*)(char *))MEMORY[0x24BDEDEF8]);
}

uint64_t sub_2413C4E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for ScrubberTooltipModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + *(int *)(v1 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2413C4F34()
{
  type metadata accessor for ScrubberTooltipModifier(0);
  return sub_2413B9034();
}

uint64_t sub_2413C4F78()
{
  return sub_2413C6208();
}

double sub_2413C4F94()
{
  double result;

  *(_QWORD *)&result = sub_2413C625C().n128_u64[0];
  return result;
}

double sub_2413C4FA8()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 56) = result;
  return result;
}

uint64_t sub_2413C4FB8()
{
  return sub_2413C6494();
}

uint64_t sub_2413C4FD4(uint64_t result)
{
  *(_BYTE *)(result + 200) = 1;
  return result;
}

uint64_t sub_2413C4FE0(uint64_t result)
{
  *(_BYTE *)(result + 200) = 0;
  return result;
}

uint64_t sub_2413C4FE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2413C500C(uint64_t a1)
{
  uint64_t v1;

  sub_2413AFBA4(a1, v1);
}

void sub_2413C501C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2413AF548(a1, a2);
}

uint64_t sub_2413C5038()
{
  return sub_2413C600C();
}

void sub_2413C504C(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD970]), sel_initWithDuration_bounce_, 0.4, 0.0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v4, 0.0);

  v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2413002C8;
  v7[3] = &block_descriptor_123_0;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_addAnimations_, v6);
  _Block_release(v6);
  objc_msgSend(v5, sel_startAnimation);

}

uint64_t sub_2413C514C(float a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  float v12;
  uint64_t v14;
  double v15;

  v3 = sub_2414B2CA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120888 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v3, (uint64_t)qword_257136FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = v1;
  v9 = sub_2414B2C8C();
  v10 = sub_2414B5194();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134218496;
    v15 = a1;
    sub_2414B541C();
    *(_WORD *)(v11 + 12) = 2048;
    v15 = 0.0;
    sub_2414B541C();
    *(_WORD *)(v11 + 22) = 2048;
    objc_msgSend(v8, sel_maxValue);
    v15 = v12;
    sub_2414B541C();

    _os_log_impl(&dword_2412C1000, v9, v10, "MediaTimelineControl.Coordinator: received value %f (min=%f, max=%f)", (uint8_t *)v11, 0x20u);
    MEMORY[0x242695BD8](v11, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(float *)&v15 = a1;
  sub_2414B2DAC();
  LOBYTE(v15) = 1;
  swift_retain();
  sub_2413A78FC((char *)&v15);
  return swift_release();
}

uint64_t sub_2413C5380(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t result;
  uint64_t KeyPath;

  v9 = *(double **)(*(_QWORD *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel) + 16);
  swift_getKeyPath();
  sub_2412C8030(&qword_257125500, type metadata accessor for ScrubberInteractionViewModel, (uint64_t)&unk_2414C178C);
  swift_retain();
  sub_2414B2B84();
  swift_release();
  v10 = v9[3];
  v11 = v9[4];
  v12 = v9[5];
  v13 = v9[6];
  result = swift_release();
  if (v10 != a1 || v11 != a2 || v12 != a3 || v13 != a4)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    swift_retain();
    sub_2414B2B78();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_2413C5518(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  double v18;
  char v19;
  char v20;
  char v21;
  char v22;
  double v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v25 = a2;
  v24 = *(double *)&a1;
  v6 = sub_2414B33A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a5, v6, v15);
  sub_2413BACD4((uint64_t)v9, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2412CBE78((uint64_t)v12, (uint64_t *)&unk_257126958);
    if ((v25 & 1) != 0)
      return 10.0;
    else
      return v24;
  }
  else
  {
    sub_2412DC3B8((uint64_t)v12, (uint64_t)v17, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
    sub_2414B358C();
    v29 = v19 & 1;
    v28 = v20 & 1;
    sub_2414B3298();
    sub_2414B358C();
    v27 = v21 & 1;
    v26 = v22 & 1;
    sub_2414B3298();
    if ((v25 & 1) != 0)
      v18 = 10.0;
    else
      v18 = v24;
    sub_2412C68F4((uint64_t)v17, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  }
  return v18;
}

uint64_t sub_2413C571C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  char v34;
  double v35;
  double v36;
  char v37;
  char v38;
  double v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  char *v46;
  double v47;
  double v48;
  void (*v49)(char *, _QWORD);
  double v50;
  double v51;
  double v52;
  char v53;
  char v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  char *v64;
  double v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;

  v69 = sub_2414B3430();
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v67 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = COERCE_DOUBLE(sub_2414B30AC());
  v63 = *(_QWORD *)(*(_QWORD *)&v65 - 8);
  MEMORY[0x24BDAC7A8](*(_QWORD *)&v65);
  v64 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v62 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_2414B32BC();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v68 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2414B33A0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257126958);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v22, a1, v19, v28);
  sub_2413BACD4((uint64_t)v22, (uint64_t)v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    v31 = (uint64_t *)&unk_257126958;
    v32 = (uint64_t)v25;
    return sub_2412CBE78(v32, v31);
  }
  sub_2412DC3B8((uint64_t)v25, (uint64_t)v30, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  sub_2414B358C();
  v85 = v33 & 1;
  v84 = v34 & 1;
  sub_2414B3298();
  v36 = v35;
  sub_2414B358C();
  v83 = v37 & 1;
  v82 = v38 & 1;
  sub_2414B3298();
  v62[1] = v40;
  if (v36 > v39)
    v41 = v36;
  else
    v41 = v39;
  v86.origin.x = a2;
  v86.origin.y = a3;
  v86.size.width = a4;
  v86.size.height = a5;
  CGRectGetMinX(v86);
  v87.origin.x = a2;
  v87.origin.y = a3;
  v87.size.width = a4;
  v87.size.height = a5;
  CGRectGetMinY(v87);
  sub_2414B4B34();
  *(double *)v62 = v41;
  v81 = 0;
  v80 = 0;
  sub_2414B32A4();
  v88.origin.x = a2;
  v88.origin.y = a3;
  v88.size.width = a4;
  v88.size.height = a5;
  CGRectGetMaxX(v88);
  v89.origin.x = a2;
  v89.origin.y = a3;
  v89.size.width = a4;
  v89.size.height = a5;
  CGRectGetMinY(v89);
  sub_2414B4B40();
  v79 = 0;
  v78 = 0;
  sub_2414B32A4();
  sub_2412DC3FC((uint64_t)&v30[*(int *)(v26 + 24)], (uint64_t)v17, &qword_257126950);
  v42 = v70;
  v43 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v17, 1, v71) == 1)
  {
    sub_2412C68F4((uint64_t)v30, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
    v31 = &qword_257126950;
    v32 = (uint64_t)v17;
    return sub_2412CBE78(v32, v31);
  }
  v45 = v68;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v68, v17, v43);
  sub_2414B32B0();
  v46 = v64;
  sub_2414B32B0();
  sub_2414B30A0();
  v48 = v47;
  v49 = *(void (**)(char *, _QWORD))(v63 + 8);
  v50 = v65;
  v49(v46, *(_QWORD *)&v65);
  v49(v14, *(_QWORD *)&v50);
  sub_2414B32B0();
  sub_2414B32B0();
  sub_2414B30A0();
  v52 = v51;
  v49(v46, *(_QWORD *)&v50);
  v49(v14, *(_QWORD *)&v50);
  v65 = v48 + v52;
  sub_2414B358C();
  v77 = v53 & 1;
  v76 = v54 & 1;
  v55 = v67;
  sub_2414B328C();
  v56 = sub_2414B3868();
  MEMORY[0x242692CBC](v56);
  v57 = *(void (**)(char *, uint64_t))(v66 + 8);
  v58 = v69;
  v57(v55, v69);
  sub_2414B358C();
  v75 = v59 & 1;
  v74 = v60 & 1;
  sub_2414B328C();
  v61 = sub_2414B3868();
  MEMORY[0x242692CBC](v61);
  v57(v55, v58);
  v90.origin.x = a2;
  v90.origin.y = a3;
  v90.size.width = a4;
  v90.size.height = a5;
  CGRectGetMidX(v90);
  v91.origin.x = a2;
  v91.origin.y = a3;
  v91.size.width = a4;
  v91.size.height = a5;
  CGRectGetMinY(v91);
  sub_2414B4B4C();
  v92.origin.x = a2;
  v92.origin.y = a3;
  v92.size.width = a4;
  v92.size.height = a5;
  CGRectGetWidth(v92);
  v73 = 0;
  v72 = 1;
  sub_2414B32A4();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v43);
  return sub_2412C68F4((uint64_t)v30, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
}

uint64_t sub_2413C5DC0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  _QWORD *v7;
  double *v8;
  uint64_t v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4B08];
  swift_getKeyPath();
  v21 = v1;
  sub_2412C8030((unint64_t *)&unk_257126430, type metadata accessor for ScrubberSections, (uint64_t)&unk_2414C16D0);
  sub_2414B2B84();
  swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    result = swift_bridgeObjectRetain();
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v6 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        return result;
      }
      v9 = v3 + 32 + 24 * v6;
      v10 = *(double *)(v9 + 16);
      if (v10 >= 0.0 && v10 < a1)
      {
        v13 = *(_QWORD *)v9;
        v12 = *(_QWORD *)(v9 + 8);
        v14 = v22;
        if (!*(_QWORD *)(v22 + 16))
          goto LABEL_18;
        result = sub_2414B58C0();
        v15 = -1 << *(_BYTE *)(v14 + 32);
        v16 = result & ~v15;
        if (((*(_QWORD *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          goto LABEL_18;
        v17 = *(_QWORD *)(v14 + 48);
        if (*(double *)(v17 + 8 * v16) != v10)
          break;
      }
LABEL_4:
      if (++v6 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    v18 = ~v15;
    while (1)
    {
      v16 = (v16 + 1) & v18;
      if (((*(_QWORD *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        break;
      if (*(double *)(v17 + 8 * v16) == v10)
        goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_24146D738(0, v7[2] + 1, 1, v7);
    v20 = v7[2];
    v19 = v7[3];
    if (v20 >= v19 >> 1)
      v7 = sub_24146D738((_QWORD *)(v19 > 1), v20 + 1, 1, v7);
    v7[2] = v20 + 1;
    v8 = (double *)&v7[3 * v20];
    *((_QWORD *)v8 + 4) = v13;
    *((_QWORD *)v8 + 5) = v12;
    v8[6] = v10;
    sub_24141DD08((double *)&v21, v10);
    result = swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_24:
  swift_bridgeObjectRelease();
  return (uint64_t)v7;
}

uint64_t sub_2413C600C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_2413BCA08(v2);
  return swift_bridgeObjectRelease();
}

void sub_2413C6058()
{
  uint64_t v0;

  sub_2413BA6EC(v0);
}

uint64_t sub_2413C6060()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2413C608C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setConfiguration_, *(_QWORD *)(v0 + 24));
}

uint64_t sub_2413C609C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2413C60E4()
{
  sub_2413C6844();
}

uint64_t sub_2413C60F8()
{
  return sub_2413AB7FC();
}

uint64_t sub_2413C6110()
{
  return sub_2413AD040();
}

uint64_t sub_2413C612C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413C6150()
{
  uint64_t v0;

  return sub_2413AD0F4(*(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_2413C6164()
{
  return sub_2413C61C8();
}

uint64_t sub_2413C6178()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2413C619C(void *a1)
{
  return sub_2413AD1C8(a1);
}

uint64_t sub_2413C61AC()
{
  uint64_t v0;

  return sub_2413AC6AC(*(double **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2413C61C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) = *(_BYTE *)(v0 + 24);
  return sub_2413ADDFC(v2);
}

uint64_t sub_2413C6208()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(v1 + 104) = *(_BYTE *)(v0 + 24);
  return sub_2413ACC38(v2);
}

uint64_t sub_2413C6248()
{
  return sub_2413C62CC();
}

__n128 sub_2413C625C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  result = *(__n128 *)(v0 + 24);
  v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 24) = result;
  *(_OWORD *)(v1 + 40) = v3;
  return result;
}

void sub_2413C6274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 24);
  sub_2413A6FF0(v2);
}

uint64_t sub_2413C62A8()
{
  return sub_2413AEB1C();
}

uint64_t sub_2413C62B0()
{
  return sub_2413ADD3C();
}

uint64_t sub_2413C62CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 8) = v1;
  return sub_2413AD3F0(v3, v4);
}

uint64_t sub_2413C6320()
{
  return sub_2413C635C();
}

uint64_t sub_2413C6334@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_2413AA3C4(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_2413C6354()
{
  return sub_2413AA654();
}

uint64_t sub_2413C635C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDuration;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 8) = v1;
  return sub_2413A9664();
}

uint64_t sub_2413C63A8()
{
  return sub_2413C6908();
}

uint64_t sub_2413C63BC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2413A8E4C(a1, &OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled, a2);
}

void sub_2413C63E4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__isInteractionEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2413C6400(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_2413A87F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2413C640C(double *a1)
{
  uint64_t v1;

  return sub_2413A8524(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_205Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413C6444(uint64_t *a1)
{
  uint64_t v1;

  return sub_2413A81B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2413C644C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 32) = v2;
  return sub_2413BBFF0(v3, v4);
}

uint64_t sub_2413C648C()
{
  return swift_release();
}

uint64_t sub_2413C6494()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 48) = v2;
  return sub_2413BC4FC(v3, v4);
}

uint64_t sub_2413C64D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413C64FC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2413B4518, a3, a4);
}

uint64_t sub_2413C64F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413C64FC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2413B277C, a3, a4);
}

uint64_t sub_2413C64FC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Scrubber(0, v6, v7, a4) - 8) + 80);
  return a2(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_2413C6574(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2413C65E4()
{
  unint64_t result;

  result = qword_257126708;
  if (!qword_257126708)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_257126708);
  }
  return result;
}

uint64_t sub_2413C6628()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413C664C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2413BE924(a1, *(void (**)(char *))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_2413C665C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413B3B9C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_2413C6668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Scrubber(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = *(_QWORD *)(v7 + 64);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v4 + v8;
  swift_release();
  swift_release();
  sub_2412E6C04(*(_QWORD *)(v12 + 16), *(unsigned __int8 *)(v12 + 24));
  v13 = v4 + v8 + *(int *)(v6 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B3934();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + *(int *)(v6 + 60), v5);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v4 + ((v8 + v16 + v11) & ~v11), v9);
  return swift_deallocObject();
}

uint64_t sub_2413C67C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for Scrubber(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254383E10) - 8) + 80);
  return sub_2413B41C8(v4 + v8, v4 + ((v8 + v9 + v10) & ~v10), v5, v6);
}

void sub_2413C6844()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = *(_BYTE *)(v0 + 24);
  v3 = v2;
  sub_2413AAA20(&v3);
}

uint64_t sub_2413C688C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 24);
  return sub_2413A66F4(v2);
}

uint64_t sub_2413C68C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 32) = v0[3];
  *(_QWORD *)(v1 + 40) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_2413C6900(uint64_t a1)
{
  return sub_2413AA0D0(a1);
}

uint64_t sub_2413C6908()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel__availableDurationObserver) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

ValueMetadata *_s47ScrubberCanDisplaySensitivityOnMultipleLinesKeyVMa()
{
  return &_s47ScrubberCanDisplaySensitivityOnMultipleLinesKeyVN;
}

void sub_2413C6958()
{
  unint64_t v0;

  sub_241324D88(319, &qword_2571267E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_2413C69F0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    v8 = *((_BYTE *)a2 + 16);
    sub_2412C7080(v7, v8);
    v4[1] = v7;
    *((_BYTE *)v4 + 16) = v8;
    v9 = *(int *)(a3 + 40);
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B346C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2413C6AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412C821C(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2413C6B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 16);
  sub_2412C7080(v6, v7);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 40);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B346C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2413C6C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  sub_2412C7080(v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  sub_2412C821C(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 40);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_2412CBE78(a1 + v10, &qword_257122EC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2414B346C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413C6D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 40);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B346C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2413C6DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_2412C821C(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 40);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_2412CBE78(a1 + v9, &qword_257122EC8);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122EC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2414B346C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413C6EB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C6EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_257126760);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_2413C6F3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C6F48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257126760);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberCompanionViewLayout()
{
  return &type metadata for ScrubberCompanionViewLayout;
}

uint64_t _s11MediaCoreUI27ScrubberHoverEffectModifierVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[40])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s11MediaCoreUI27ScrubberHoverEffectModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberHoverEffectModifier.HoverEffectShape()
{
  return &type metadata for ScrubberHoverEffectModifier.HoverEffectShape;
}

ValueMetadata *type metadata accessor for ScrubberTooltipClipShape()
{
  return &type metadata for ScrubberTooltipClipShape;
}

uint64_t destroy for WindowWidthReader()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for WindowWidthReader(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WindowWidthReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for WindowWidthReader(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for WindowWidthReader()
{
  return &type metadata for WindowWidthReader;
}

ValueMetadata *type metadata accessor for ScrubberTooltipModifier.ContentView()
{
  return &type metadata for ScrubberTooltipModifier.ContentView;
}

uint64_t sub_2413C71D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C0);
  sub_2414B4804();
  type metadata accessor for Scrubber.SensitivityLabel(255, v1, v2, v3);
  sub_2414B3A90();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571263C8);
  swift_getTupleTypeMetadata3();
  v4 = sub_2414B4B1C();
  sub_2412C8FC4(&qword_2571263D0, &qword_2571263B8, MEMORY[0x24BDEB998]);
  v5 = sub_2414B3304();
  v7[0] = sub_2412C8FC4(&qword_2571263D8, &qword_2571263B8, MEMORY[0x24BDEB9A8]);
  v7[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  return MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v5, v7);
}

uint64_t sub_2413C730C()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126450);
  sub_2414B3A9C();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  sub_2413C49A4();
  sub_2412C8030(&qword_254382BA0, v0, MEMORY[0x24BDEF420]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413C7394()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571264A0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571264D8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126498);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571264C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126490);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126488);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571264A8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543841F8);
  sub_2412C8FC4(&qword_2571264B0, &qword_2571264A8, MEMORY[0x24BDEFB78]);
  sub_2413C4AB0();
  swift_getOpaqueTypeConformance2();
  sub_2413C4B38();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_2412C8620(&qword_2571264D0, &qword_2571264C8, (uint64_t (*)(void))sub_2413C07C8, MEMORY[0x24BEE12C0]);
  swift_getOpaqueTypeConformance2();
  sub_2413C4C1C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413C754C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_2571267F0;
  if (!qword_2571267F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126500);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126508);
    v2[3] = sub_2412C8FC4((unint64_t *)&unk_257126510, &qword_257126508, MEMORY[0x24BDEFB78]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571267F0);
  }
  return result;
}

unint64_t sub_2413C761C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126800;
  if (!qword_257126800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126520);
    v2[0] = sub_2412C8FC4(&qword_257126808, (uint64_t *)&unk_257126530, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_257126810, &qword_257126528, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126800);
  }
  return result;
}

unint64_t sub_2413C76BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126818;
  if (!qword_257126818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571265D0);
    v2[0] = sub_2413C7728();
    v2[1] = MEMORY[0x24BDEF7B8];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126818);
  }
  return result;
}

unint64_t sub_2413C7728()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126820;
  if (!qword_257126820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571265C8);
    v2[0] = sub_2413C77AC();
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126820);
  }
  return result;
}

unint64_t sub_2413C77AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126828;
  if (!qword_257126828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571265C0);
    v2[0] = sub_2413C7830();
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126828);
  }
  return result;
}

unint64_t sub_2413C7830()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257126830;
  if (!qword_257126830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571265B8);
    v2 = sub_2412C8FC4(&qword_257126838, &qword_2571265A8, (uint64_t)&unk_2414BA958);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257126830);
  }
  return result;
}

uint64_t sub_2413C78B4()
{
  return sub_2413C6574(&qword_257126840, &qword_257126848, (uint64_t (*)(void))sub_2413C78E8, (uint64_t (*)(void))sub_24130CB04);
}

unint64_t sub_2413C78E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126850;
  if (!qword_257126850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126858);
    v2[0] = sub_2412C8620(&qword_257126860, &qword_257126868, (uint64_t (*)(void))sub_2413C7974, MEMORY[0x24BDF3F50]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126850);
  }
  return result;
}

unint64_t sub_2413C7974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126870;
  if (!qword_257126870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126878);
    v2[0] = sub_2412C8FC4((unint64_t *)&unk_2571265E8, &qword_2571265E0, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDF3E20];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126870);
  }
  return result;
}

uint64_t sub_2413C79F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413C7A0C()
{
  unint64_t result;

  result = qword_257126880;
  if (!qword_257126880)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1DB0, &type metadata for WindowWidthReader);
    atomic_store(result, (unint64_t *)&qword_257126880);
  }
  return result;
}

uint64_t sub_2413C7A50()
{
  return sub_2412C8FC4(&qword_257126888, (uint64_t *)&unk_257126890, MEMORY[0x24BDEB358]);
}

unint64_t sub_2413C7A80()
{
  unint64_t result;

  result = qword_2571268A0;
  if (!qword_2571268A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1EC8, &type metadata for ScrubberTooltipClipShape);
    atomic_store(result, (unint64_t *)&qword_2571268A0);
  }
  return result;
}

unint64_t sub_2413C7AC8()
{
  unint64_t result;

  result = qword_2571268A8;
  if (!qword_2571268A8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1E78, &type metadata for ScrubberTooltipClipShape);
    atomic_store(result, (unint64_t *)&qword_2571268A8);
  }
  return result;
}

uint64_t sub_2413C7B0C()
{
  return sub_2412C8FC4(&qword_2571268B0, &qword_2571268B8, MEMORY[0x24BDEB358]);
}

unint64_t sub_2413C7B3C()
{
  unint64_t result;

  result = qword_2571268C8;
  if (!qword_2571268C8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1FB8, &type metadata for ScrubberHoverEffectModifier.HoverEffectShape);
    atomic_store(result, (unint64_t *)&qword_2571268C8);
  }
  return result;
}

unint64_t sub_2413C7B84()
{
  unint64_t result;

  result = qword_2571268D0;
  if (!qword_2571268D0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1F68, &type metadata for ScrubberHoverEffectModifier.HoverEffectShape);
    atomic_store(result, (unint64_t *)&qword_2571268D0);
  }
  return result;
}

unint64_t sub_2413C7BCC()
{
  unint64_t result;

  result = qword_2571268D8;
  if (!qword_2571268D8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C2058, &type metadata for ScrubberCompanionViewLayout);
    atomic_store(result, (unint64_t *)&qword_2571268D8);
  }
  return result;
}

uint64_t sub_2413C7C10()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413C7C44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126930;
  if (!qword_257126930)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126928);
    v2[0] = sub_2412F78D4();
    v2[1] = sub_2412C8FC4(&qword_257126938, &qword_257126940, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126930);
  }
  return result;
}

unint64_t sub_2413C7CC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257126948;
  if (!qword_257126948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126910);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126928);
    v2[3] = sub_2413C7C44();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126948);
  }
  return result;
}

uint64_t sub_2413C7D64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B3760();
  *a1 = result;
  return result;
}

uint64_t sub_2413C7D8C()
{
  return sub_2414B376C();
}

uint64_t type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_2571269D8);
}

unint64_t sub_2413C7DC4()
{
  unint64_t result;

  result = qword_257126968;
  if (!qword_257126968)
  {
    result = MEMORY[0x242695AE8](&unk_2414C2008, &type metadata for ScrubberHoverEffectModifier.HoverEffectShape);
    atomic_store(result, (unint64_t *)&qword_257126968);
  }
  return result;
}

double sub_2413C7E08(uint64_t a1)
{
  CGFloat *v1;

  return sub_2413B941C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_2413C7E18()
{
  CGFloat *v0;

  return sub_2413B96A0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_2413C7E2C(uint64_t a1)
{
  sub_2413C7E60(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_2413C7E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

unint64_t sub_2413C7E78()
{
  unint64_t result;

  result = qword_257126970;
  if (!qword_257126970)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1F18, &type metadata for ScrubberTooltipClipShape);
    atomic_store(result, (unint64_t *)&qword_257126970);
  }
  return result;
}

unint64_t sub_2413C7EBC()
{
  unint64_t result;

  result = qword_257126978;
  if (!qword_257126978)
  {
    result = MEMORY[0x242695AE8](&unk_2414C1E00, &type metadata for WindowWidthReader);
    atomic_store(result, (unint64_t *)&qword_257126978);
  }
  return result;
}

uint64_t *sub_2413C7F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2414B32BC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_2413C800C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_2414B32BC();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_2413C80B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_2413C8198(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_2413C82C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_2413C83A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_2413C84D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C84DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2413C8554()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413C8560(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_2414B32BC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2413C85E0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2414B32BC();
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, qword_2571269E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ScrubberTooltipContent()
{
  return &type metadata for ScrubberTooltipContent;
}

unint64_t sub_2413C8794()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A20;
  if (!qword_257126A20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571268F8);
    v2[0] = sub_2413C8800();
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A20);
  }
  return result;
}

unint64_t sub_2413C8800()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A28;
  if (!qword_257126A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571268F0);
    v2[0] = sub_2413C8884();
    v2[1] = sub_2412C8FC4(&qword_257126A50, &qword_257126A58, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A28);
  }
  return result;
}

unint64_t sub_2413C8884()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A30;
  if (!qword_257126A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571268E8);
    v2[0] = sub_2412C8620(&qword_257126A38, &qword_2571268E0, (uint64_t (*)(void))sub_2413C8928, MEMORY[0x24BDF3F50]);
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A30);
  }
  return result;
}

unint64_t sub_2413C8928()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A40;
  if (!qword_257126A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126A48);
    v2[0] = sub_2413C7CC8();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A40);
  }
  return result;
}

unint64_t sub_2413C8998()
{
  unint64_t result;

  result = qword_257126A60;
  if (!qword_257126A60)
  {
    result = MEMORY[0x242695AE8](&unk_2414C2248, &type metadata for ScrubberTooltipContent);
    atomic_store(result, (unint64_t *)&qword_257126A60);
  }
  return result;
}

uint64_t sub_2413C89DC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2413C89EC(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 304) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_2413C8A20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23)
{
  char v23;
  uint64_t result;

  if (a5)
  {
    v23 = a8 & 1;
    sub_241307638(a2, a3, a4 & 1);
    swift_bridgeObjectRetain();
    sub_241307638(a6, a7, v23);
    swift_bridgeObjectRetain();
    sub_2412E6F8C(a10, a11, a12, a13 & 1);
    j__swift_retain();
    sub_2412E6F7C(a16, a17 & 1);
    sub_2412E6F7C(a18, a19 & 1);
    sub_2412C7080(a20, a21 & 1);
    sub_2412E6F7C(a22, a23 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2413C8B9C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;

  v8 = *(_BYTE *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_QWORD *)(a1 + 296),
    v8);
  return a1;
}

uint64_t sub_2413C8C28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23)
{
  char v23;
  uint64_t result;

  if (a5)
  {
    v23 = a8 & 1;
    sub_2412F6D78(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    sub_2412F6D78(a6, a7, v23);
    swift_bridgeObjectRelease();
    sub_2412E6C0C(a10, a11, a12, a13 & 1);
    sub_2412E6C04(a14, a15 & 1);
    sub_2412E6BF8(a16, a17 & 1);
    sub_2412E6BF8(a18, a19 & 1);
    sub_2412C821C(a20, a21 & 1);
    sub_2412E6BF8(a22, a23 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413C8DB4@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413C90A4, a1);
}

uint64_t sub_2413C8DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413C90A4);
}

uint64_t keypath_set_35Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_2414B3844();
}

uint64_t sub_2413C8E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  v9 = *(_BYTE *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 112);
  v11 = *(_BYTE *)(a1 + 120);
  v13 = *(_BYTE *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 128);
  sub_241307638(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_2412E6F8C(v2, v3, v4, v5);
  j__swift_retain();
  sub_2412E6F7C(v6, v7);
  sub_2412E6F7C(v10, v9);
  sub_2412C7080(v12, v11);
  sub_2412E6F7C(v14, v13);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2413C8F64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v11 = *(_BYTE *)(a1 + 104);
  v13 = *(_BYTE *)(a1 + 120);
  v15 = *(_BYTE *)(a1 + 136);
  v16 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 112);
  sub_2412F6D78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_2412E6C0C(v2, v3, v4, v5);
  sub_2412E6C04(v6, v7);
  sub_2412E6BF8(v8, v9);
  sub_2412E6BF8(v12, v11);
  sub_2412C821C(v14, v13);
  sub_2412E6BF8(v16, v15);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_2413C90A4()
{
  unint64_t result;

  result = qword_25437DB50;
  if (!qword_25437DB50)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9858, &_s37MarqueeCanExtendContentBeyondFrameKeyVN);
    atomic_store(result, (unint64_t *)&qword_25437DB50);
  }
  return result;
}

unint64_t sub_2413C90EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A78;
  if (!qword_257126A78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126A80);
    v2[0] = sub_2413C9158();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A78);
  }
  return result;
}

unint64_t sub_2413C9158()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A88;
  if (!qword_257126A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126A90);
    v2[0] = sub_2413C91C4();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A88);
  }
  return result;
}

unint64_t sub_2413C91C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126A98;
  if (!qword_257126A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126AA0);
    v2[0] = sub_2413C9230();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126A98);
  }
  return result;
}

unint64_t sub_2413C9230()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126AA8;
  if (!qword_257126AA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126AB0);
    v2[0] = sub_2412C8FC4(&qword_257126AB8, (uint64_t *)&unk_257126AC0, MEMORY[0x24BDF4700]);
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126AA8);
  }
  return result;
}

uint64_t sub_2413C92F4()
{
  return sub_2413C61AC();
}

uint64_t sub_2413C9328()
{
  return sub_2413C48DC();
}

uint64_t sub_2413C933C()
{
  return sub_2413C6110();
}

void sub_2413C9350()
{
  sub_2413C4928();
}

void sub_2413C9364()
{
  sub_2413C48B4();
}

void sub_2413C9378()
{
  sub_2413C63E4();
}

double sub_2413C938C()
{
  return sub_2413C4FA8();
}

uint64_t MarkupRenderer.markup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t sub_2413C93C0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_2414B295C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return sub_2413C94A4((uint64_t)v5);
}

uint64_t sub_2413C9440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  v4 = sub_2414B295C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2413C94A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  v4 = sub_2414B295C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_2413C9510())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MarkupRenderer.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)v2;
  sub_2414B2950();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

uint64_t sub_2413C95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_2414B4CE4() & 1;
}

uint64_t sub_2413C9614@<X0>(uint64_t a1@<X8>)
{
  return sub_2413C9440(a1);
}

uint64_t sub_2413C9638()
{
  return 16;
}

__n128 sub_2413C9644(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for MarkupRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MarkupRenderer.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_2413C9688()
{
  sub_2414B28E4();
  __break(1u);
}

void sub_2413C96A4()
{
  sub_2412EA7E8();
  sub_2414B29BC();
  __break(1u);
}

uint64_t sub_2413C96C8()
{
  return 8;
}

uint64_t sub_2413C96D4()
{
  return swift_release();
}

uint64_t sub_2413C96DC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2413C96E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2413C95C0(a1, a2, a3, &qword_257126B08) & 1;
}

uint64_t sub_2413C9708(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_257126B08);
}

void sub_2413C9714()
{
  sub_2414B28F0();
  __break(1u);
}

unint64_t sub_2413C9730()
{
  unint64_t result;

  result = qword_257126AE8;
  if (!qword_257126AE8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDCC090], MEMORY[0x24BDCC0A0]);
    atomic_store(result, (unint64_t *)&qword_257126AE8);
  }
  return result;
}

void sub_2413C9774()
{
  sub_2413C9730();
  sub_2414B29BC();
  __break(1u);
}

uint64_t sub_2413C9798()
{
  return 8;
}

uint64_t sub_2413C97A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2413C95C0(a1, a2, a3, &qword_257126B00) & 1;
}

uint64_t sub_2413C97C4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_257126B00);
}

_QWORD *sub_2413C97D0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_2413C97DC()
{
  sub_2414B28FC();
  __break(1u);
}

unint64_t sub_2413C97F8()
{
  unint64_t result;

  result = qword_257126AF0;
  if (!qword_257126AF0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEAC70], MEMORY[0x24BDEAC80]);
    atomic_store(result, (unint64_t *)&qword_257126AF0);
  }
  return result;
}

void sub_2413C983C()
{
  sub_2413C97F8();
  sub_2414B29C8();
  __break(1u);
}

uint64_t sub_2413C9860()
{
  return 8;
}

uint64_t sub_2413C986C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2413C95C0(a1, a2, a3, &qword_257126AF8) & 1;
}

uint64_t sub_2413C988C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_257126AF8);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_2414B4C90();
}

uint64_t sub_2413C98F0()
{
  sub_24135B864();
  return sub_2414B3838();
}

double sub_2413C9924@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_24135B864();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2413C9970()
{
  sub_24135B864();
  swift_bridgeObjectRetain();
  return sub_2414B3844();
}

uint64_t sub_2413C99CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v7);
  v9 = sub_2414B4D8C();
  v11 = v10;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  a3[1] = v11;
  return result;
}

uint64_t MCUILoggingContext.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    return 60;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_2413C9AF4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    return 60;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t MCUINamespace<A>.loggingContext<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18[2];

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v14, v15, v9, v12);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  sub_2413C99CC((uint64_t)v7, a3, v18);
  v17[0] = v18[0];
  v17[1] = v18[1];
  sub_2414B41C8();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

double sub_2413C9CB8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_24135B864();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MCUILoggingContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MCUILoggingContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MCUILoggingContext()
{
  return &type metadata for MCUILoggingContext;
}

uint64_t sub_2413C9DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126B10);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2413C9E28();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2413C9E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257126B18;
  if (!qword_257126B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126B10);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257126B18);
  }
  return result;
}

ValueMetadata *_s17LoggingContextKeyVMa()
{
  return &_s17LoggingContextKeyVN;
}

uint64_t MCUINamespace<A>.debugDimensions(labelPosition:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[8];
  uint64_t KeyPath;
  char v8;
  uint64_t v9;
  char v10;

  v6[0] = *a1;
  KeyPath = swift_getKeyPath();
  v8 = 0;
  v9 = swift_getKeyPath();
  v10 = 0;
  MEMORY[0x242693DC0](v6, *(_QWORD *)(a2 + 16), &type metadata for DebugDimensionsModifier, a3);
  swift_release();
  return swift_release();
}

uint64_t MCUINamespace<A>.debugDimensionsOverlayColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_2413C9F38()
{
  return sub_2413047B4((void (*)(void))sub_2413CAB6C);
}

uint64_t sub_2413C9F4C@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2413CAB6C, a1);
}

uint64_t sub_2413C9F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_2413CAB6C);
}

uint64_t MCUINamespace<A>.debugDimensionsBorderColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_2413C9F90()
{
  return sub_2413047B4((void (*)(void))sub_2413CAB28);
}

uint64_t sub_2413C9FA4@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2413CAB28, a1);
}

uint64_t sub_2413C9FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_2413CAB28);
}

BOOL static DebugDimensionLabelPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DebugDimensionLabelPosition.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t DebugDimensionLabelPosition.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

unint64_t sub_2413CA060()
{
  unint64_t result;

  result = qword_257126B30;
  if (!qword_257126B30)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for DebugDimensionLabelPosition, &type metadata for DebugDimensionLabelPosition);
    atomic_store(result, (unint64_t *)&qword_257126B30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugDimensionLabelPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2413CA0F0 + 4 * byte_2414C25E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2413CA124 + 4 * byte_2414C25E0[v4]))();
}

uint64_t sub_2413CA124(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413CA12C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413CA134);
  return result;
}

uint64_t sub_2413CA140(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413CA148);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2413CA14C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413CA154(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionLabelPosition()
{
  return &type metadata for DebugDimensionLabelPosition;
}

uint64_t sub_2413CA170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2413CA1C4();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2413CA1C4()
{
  unint64_t result;

  result = qword_257126B38;
  if (!qword_257126B38)
  {
    result = MEMORY[0x242695AE8](&unk_2414C26F8, &type metadata for DebugDimensionsModifier);
    atomic_store(result, (unint64_t *)&qword_257126B38);
  }
  return result;
}

uint64_t destroy for DebugDimensionsModifier()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  v4 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugDimensionsModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugDimensionsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionsModifier()
{
  return &type metadata for DebugDimensionsModifier;
}

uint64_t sub_2413CA3F4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2413CA404@<D0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  double result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[192];
  _OWORD v65[12];
  __int128 v66;
  char v67;
  char v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;

  v4 = a1[16];
  v5 = swift_retain();
  v63 = sub_2412E4048(v5, v4);
  swift_release();
  v6 = a1[32];
  v7 = swift_retain();
  v62 = sub_2412E4048(v7, v6);
  swift_release();
  v8 = 0;
  sub_2414B304C();
  v9 = v69;
  v10 = v71;
  v55 = v72;
  v58 = v73;
  v59 = v70;
  v11 = sub_2414B4A44();
  v56 = v12;
  v57 = v11;
  v13 = sub_2414B4A2C();
  v60 = v14;
  v61 = v13;
  sub_2414B325C();
  if (v15 <= 0.0)
  {
    v53 = 0;
    KeyPath = 0;
    v51 = 0;
    v52 = 0;
    v19 = 0;
    v21 = 0;
    v49 = 255;
    v50 = 0;
    v23 = 0;
    v25 = 0;
  }
  else
  {
    sub_2414B325C();
    v8 = v16;
    KeyPath = swift_getKeyPath();
    v53 = swift_getKeyPath();
    v52 = swift_getKeyPath();
    v17 = sub_2414B3E38();
    v51 = qword_2414C2858[*a1];
    sub_2414B2F20();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v49 = 0;
    v50 = v17;
  }
  v26 = sub_2414B4A50();
  v47 = v27;
  v48 = v26;
  v46 = sub_2414B4648();
  sub_2414B4A44();
  sub_2414B31B4();
  v28 = v74;
  v29 = v75;
  v30 = v76;
  v31 = v77;
  v32 = v78;
  v45 = v79;
  v33 = sub_2414B4A44();
  v35 = v34;
  sub_2413CA760(a1, (uint64_t)v65);
  sub_2413CAA88((uint64_t)v65, (uint64_t)v64);
  sub_2413CAA88((uint64_t)v64, (uint64_t)v65);
  *(_QWORD *)&v66 = v33;
  *((_QWORD *)&v66 + 1) = v35;
  v68 = v29;
  v67 = v31;
  v36 = 0x201u >> (8 * *a1);
  v37 = v65[11];
  *(_OWORD *)(a2 + 440) = v65[10];
  *(_OWORD *)(a2 + 456) = v37;
  v38 = v65[7];
  *(_OWORD *)(a2 + 376) = v65[6];
  *(_OWORD *)(a2 + 392) = v38;
  v39 = v65[9];
  *(_OWORD *)(a2 + 408) = v65[8];
  *(_OWORD *)(a2 + 424) = v39;
  v40 = v65[3];
  *(_OWORD *)(a2 + 312) = v65[2];
  *(_OWORD *)(a2 + 328) = v40;
  v41 = v65[5];
  *(_OWORD *)(a2 + 344) = v65[4];
  *(_OWORD *)(a2 + 360) = v41;
  v42 = v65[1];
  *(_OWORD *)(a2 + 280) = v65[0];
  *(_OWORD *)(a2 + 296) = v42;
  *(_OWORD *)(a2 + 472) = v66;
  v43 = swift_getKeyPath();
  *(_QWORD *)a2 = v63;
  *(double *)(a2 + 8) = v9 * 0.5;
  *(double *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v59;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v55;
  result = v58;
  *(double *)(a2 + 48) = v58;
  *(_QWORD *)(a2 + 56) = v62;
  *(_WORD *)(a2 + 64) = 256;
  *(_QWORD *)(a2 + 72) = v57;
  *(_QWORD *)(a2 + 80) = v56;
  *(_QWORD *)(a2 + 88) = v8;
  *(_QWORD *)(a2 + 96) = KeyPath;
  *(_QWORD *)(a2 + 104) = v49;
  *(_QWORD *)(a2 + 112) = v53;
  *(_QWORD *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = v52;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = v50;
  *(_QWORD *)(a2 + 152) = v19;
  *(_QWORD *)(a2 + 160) = v21;
  *(_QWORD *)(a2 + 168) = v23;
  *(_QWORD *)(a2 + 176) = v25;
  *(_QWORD *)(a2 + 184) = 0;
  *(_QWORD *)(a2 + 192) = 0;
  *(_QWORD *)(a2 + 200) = v51;
  *(_QWORD *)(a2 + 208) = v61;
  *(_QWORD *)(a2 + 216) = v60;
  *(_QWORD *)(a2 + 224) = v46;
  *(_QWORD *)(a2 + 232) = v28;
  *(_BYTE *)(a2 + 240) = v29;
  *(_QWORD *)(a2 + 248) = v30;
  *(_BYTE *)(a2 + 256) = v31;
  *(_QWORD *)(a2 + 264) = v32;
  *(_QWORD *)(a2 + 272) = v45;
  *(_QWORD *)(a2 + 488) = v48;
  *(_QWORD *)(a2 + 496) = v47;
  *(_QWORD *)(a2 + 504) = v43;
  *(_BYTE *)(a2 + 512) = v36;
  return result;
}

uint64_t sub_2413CA760@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[200];

  sub_2414B325C();
  if (v4 <= 0.0)
  {
    sub_2413CAAE8((uint64_t)v25);
  }
  else
  {
    sub_2414B325C();
    v6 = v5;
    KeyPath = swift_getKeyPath();
    v23 = swift_getKeyPath();
    v22 = swift_getKeyPath();
    v21 = sub_2414B3E38();
    v7 = 8 * *a1;
    sub_2414B2F20();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    sub_2414B325C();
    sub_2414B4A44();
    sub_2414B31B4();
    v16 = *(_QWORD *)((char *)&unk_2414C2888 + v7);
    sub_2414B4B64();
    v25[0] = v6;
    v25[1] = KeyPath;
    v26 = 0;
    v27 = v23;
    v28 = 0;
    v29 = v22;
    v30 = 0;
    v31 = v21;
    v32 = v9;
    v33 = v11;
    v34 = v13;
    v35 = v15;
    v36 = 0;
    v37 = v48;
    v38 = v49;
    v39 = v50;
    v40 = v51;
    v41 = v52;
    v42 = v53;
    v43 = 0;
    v44 = v16;
    v45 = 0xBFF921FB54442D18;
    v46 = v17;
    v47 = v18;
    CGSizeMake(v25, v19);
  }
  sub_2413CAA88((uint64_t)v25, (uint64_t)v54);
  return sub_2413CAA88((uint64_t)v54, a2);
}

uint64_t sub_2413CA950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];
  char v15;

  v5 = *(_OWORD *)(v2 + 16);
  v14[0] = *(_OWORD *)v2;
  v14[1] = v5;
  v15 = *(_BYTE *)(v2 + 32);
  v6 = sub_2414B4A44();
  v8 = v7;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v9 + 32) = v10;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v2 + 32);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  v12 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257126B48) + 36);
  *(_QWORD *)v12 = sub_2413CAA4C;
  *(_QWORD *)(v12 + 8) = v9;
  *(_BYTE *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = v6;
  *(_QWORD *)(v12 + 32) = v8;
  return sub_2413CAA54((uint64_t)v14);
}

uint64_t sub_2413CAA20()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

double sub_2413CAA4C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413CA404((char *)(v1 + 16), a1);
}

uint64_t sub_2413CAA54(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2413CAA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2413CAAE8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 255;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_QWORD *)(a1 + 184) = 0;
  return result;
}

unint64_t sub_2413CAB28()
{
  unint64_t result;

  result = qword_257126B58;
  if (!qword_257126B58)
  {
    result = MEMORY[0x242695AE8](&unk_2414C2818, &_s11MediaCoreUI14BorderColorKeyVN_0);
    atomic_store(result, (unint64_t *)&qword_257126B58);
  }
  return result;
}

unint64_t sub_2413CAB6C()
{
  unint64_t result;

  result = qword_257126B60;
  if (!qword_257126B60)
  {
    result = MEMORY[0x242695AE8](&unk_2414C27E0, &_s11MediaCoreUI15OverlayColorKeyVN_0);
    atomic_store(result, (unint64_t *)&qword_257126B60);
  }
  return result;
}

ValueMetadata *_s11MediaCoreUI15OverlayColorKeyVMa_0()
{
  return &_s11MediaCoreUI15OverlayColorKeyVN_0;
}

ValueMetadata *_s11MediaCoreUI14BorderColorKeyVMa_0()
{
  return &_s11MediaCoreUI14BorderColorKeyVN_0;
}

unint64_t sub_2413CABD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126B68;
  if (!qword_257126B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126B48);
    v2[0] = sub_2412C8FC4(&qword_257126B70, &qword_257126B40, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_257126B78, &qword_257126B80, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126B68);
  }
  return result;
}

uint64_t sub_2413CAC70()
{
  uint64_t result;

  result = sub_2414B4648();
  qword_257126B20 = result;
  return result;
}

uint64_t sub_2413CAC8C@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(&qword_257120890, &qword_257126B20, a1);
}

uint64_t sub_2413CACA8()
{
  uint64_t result;

  result = sub_2414B4648();
  qword_257126B28 = result;
  return result;
}

uint64_t sub_2413CACC4@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(&qword_257120898, &qword_257126B28, a1);
}

uint64_t sub_2413CACE0(unint64_t a1, int32x2_t a2)
{
  uint64_t result;
  __int32 *v4;
  unint64_t v5;
  __int32 v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_2414B5668();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  result = sub_2414B4F0C();
  *(_QWORD *)(result + 16) = a1;
  v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    v5 = 0;
    v6 = a2.i32[0];
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2.i32[0];
  v7 = vdupq_lane_s32(a2, 0);
  v8 = (int32x4_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_2413CADD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int32x2_t v12;
  unint64_t v13;
  uint64_t v14;
  int32x2_t v15;
  int32x2_t v16;
  int32x2_t v17;
  int32x2_t v18;
  int32x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  int v27;
  _QWORD v28[2];

  v2 = v1;
  v4 = sub_2414B2830();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B280C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 96) = a1;
  *(float *)v12.i32 = log2f((float)a1);
  if ((~v12.i32[0] & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(float *)v12.i32 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (*(float *)v12.i32 >= 1.8447e19)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v13 = (unint64_t)*(float *)v12.i32;
  if ((unint64_t)*(float *)v12.i32 <= 0x3F)
    v14 = (1 << v13) / 2;
  else
    v14 = 0;
  v12.i32[0] = 0;
  *(_QWORD *)(v2 + 16) = sub_2413CACE0(v14, v12);
  v15.i32[0] = 0;
  *(_QWORD *)(v2 + 24) = sub_2413CACE0(v14, v15);
  v16.i32[0] = 0;
  *(_QWORD *)(v2 + 32) = sub_2413CACE0(v14, v16);
  v17.i32[0] = 0;
  *(_QWORD *)(v2 + 40) = sub_2413CACE0(v14, v17);
  v18.i32[0] = 0;
  *(_QWORD *)(v2 + 48) = sub_2413CACE0(v14, v18);
  v19.i32[0] = 0;
  *(_QWORD *)(v2 + 56) = sub_2413CACE0(v14, v19);
  *(float *)(v2 + 64) = 2.0 / (float)v14;
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEDFAD0], v8);
  if (v14 < 1)
    goto LABEL_13;
  v28[0] = v13;
  v21 = v4;
  MEMORY[0x24BDAC7A8](v20);
  v28[-4] = v11;
  LOBYTE(v28[-3]) = 0;
  v26 = v14;
  v22 = sub_24136897C(v14, (uint64_t (*)(_QWORD *, uint64_t *))sub_2413CB78C);
  v23 = sub_2413DC408(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)(v2 + 72) = v14;
  *(_QWORD *)(v2 + 80) = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEDFB60], v21);
  type metadata accessor for DSPSplitComplex(0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543824D8);
  swift_allocObject();
  v24 = sub_2414B2818();
  if (v24)
  {
    *(_QWORD *)(v2 + 88) = v24;
    return v2;
  }
LABEL_14:
  v27 = 0;
  v26 = 51;
  result = sub_2414B5674();
  __break(1u);
  return result;
}

uint64_t sub_2413CB0B8@<X0>(float *a1@<X0>, float *a2@<X1>, float *a3@<X2>, float *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>, int32x2_t a8@<D0>)
{
  int v8;
  float *v12;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  vDSP_Length v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  vDSP_Length v21;
  const DSPComplex *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  DSPSplitComplex v28;
  DSPSplitComplex __A;
  DSPSplitComplex v30;
  DSPSplitComplex __Z;
  uint64_t v32;
  uint64_t v33;

  v12 = a3;
  v33 = *MEMORY[0x24BDAC8D0];
  v14 = *(_QWORD *)(a5 + 16);
  v15 = *(_QWORD *)(a6 + 72);
  v28.realp = a1;
  v28.imagp = a2;
  if (v15 <= v14)
  {
    if (v15 < 0)
      __break(1u);
    v17 = *(_QWORD *)(a6 + 80);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = a3;
    sub_2413683C0(a5, a5 + 32, 0, (2 * v15) | 1, v17, (char **)(a6 + 16));
  }
  else
  {
    a8.i32[0] = 0;
    v16 = sub_2413CACE0(v15 - v14, a8);
    v32 = a5;
    swift_bridgeObjectRetain();
    sub_2413CB648(v16);
    v17 = *(_QWORD *)(a6 + 80);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24136846C(a5, v17, (char **)(a6 + 16));
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __Z = v28;
  v30.realp = v12;
  v30.imagp = a4;
  swift_beginAccess();
  v18 = *(char **)(a6 + 16);
  v19 = *((_QWORD *)v18 + 2);
  if (v19 >> 61)
  {
    __break(1u);
LABEL_12:
    v25 = sub_241497A98((uint64_t)v18);
    goto LABEL_10;
  }
  v20 = sub_2413BED3C(v18 + 32, v19 >> 1);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = (const DSPComplex *)(v20 + 32);
  swift_bridgeObjectRetain();
  vDSP_ctoz(v22, 2, &__Z, 1, v21);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2414B2824();
  swift_retain();
  if (v15)
  {
    v23 = sub_2414B4F0C();
    *(_QWORD *)(v23 + 16) = v15;
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
  __A = v30;
  vDSP_zvmags(&__A, 1, (float *)(v23 + 32), 1, v15);
  *(_QWORD *)(v23 + 16) = v15;
  swift_release();
  *a7 = (char *)v23;
  v24 = swift_bridgeObjectRetain();
  sub_2413CB3B0(v24, a7);
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(a6 + 64);
  v18 = *a7;
  v17 = *((_QWORD *)*a7 + 2);
  swift_bridgeObjectRetain();
  v25 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_12;
LABEL_10:
  LODWORD(__A.realp) = v8;
  vDSP_vsmul((const float *)v18 + 8, 1, (const float *)&__A, (float *)v25 + 8, 1, v17);
  *a7 = v25;
  return swift_bridgeObjectRelease();
}

void sub_2413CB3B0(uint64_t a1, char **a2)
{
  char **v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  if (v4 != *((_QWORD *)*a2 + 2))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >> 31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = a2;
  v3 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_7:
    v5 = sub_241497A98((uint64_t)v5);
  vvsqrtf((float *)v5 + 8, (const float *)(v3 + 32), &v6);
  *v2 = v5;
}

uint64_t sub_2413CB464()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_2413CB4B8()
{
  sub_2413CB464();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioTapSampleTransformer()
{
  return objc_opt_self();
}

uint64_t sub_2413CB4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_24146CC90(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413CB648(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_24146D0CC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2413CB78C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(v2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254382940);
  sub_2413CB808();
  result = sub_2414B2800();
  *a2 = v4;
  return result;
}

unint64_t sub_2413CB808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254382948;
  if (!qword_254382948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382940);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEDFE18], v1);
    atomic_store(result, (unint64_t *)&qword_254382948);
  }
  return result;
}

uint64_t sub_2413CB854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  _OWORD v9[2];

  v4 = (_OWORD *)(v2 + *(int *)(a1 + 56));
  v5 = v4[3];
  v8[2] = v4[2];
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v4 + 58);
  v6 = v4[1];
  v8[0] = *v4;
  v8[1] = v6;
  sub_2412FD220((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278(a2);
  return sub_2412FD220((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
}

double sub_2413CB8C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  double v5;

  v2 = v1 + *(int *)(a1 + 60);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_2412C7080(*(_QWORD *)v2, v4);
  v5 = sub_2413456FC(v3, v4);
  sub_2412C821C(v3, v4);
  return v5;
}

uint64_t sub_2413CB920()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  return v1;
}

uint64_t sub_2413CB974()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  return sub_2414B47B0();
}

uint64_t NowPlayingQueueSection.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t result;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  _QWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[3];
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[3];

  v62 = a2;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1;
  v68 = *(_QWORD *)(a1 + 24);
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  v7 = sub_2414B3514();
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD0);
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD8);
  v64 = sub_2414B3514();
  sub_2414B3DB4();
  v73 = sub_2414B3514();
  v10 = v4;
  v67 = *(_QWORD *)(v4 + 16);
  v72 = sub_2414B3514();
  v11 = sub_2414B49B4();
  v60 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v65 = (char *)&v52 - v13;
  v14 = v10;
  v66 = *(_QWORD *)(v10 + 40);
  v15 = MEMORY[0x24BDECC60];
  v98[0] = v66;
  v98[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x24BDED308];
  v97[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v98, v12);
  v97[1] = v15;
  v96[0] = MEMORY[0x242695AE8](v16, v6, v97);
  v96[1] = v15;
  v95[0] = MEMORY[0x242695AE8](v16, v7, v96);
  v95[1] = v15;
  v17 = v71;
  v18 = MEMORY[0x242695AE8](v16, v8, v95);
  v19 = sub_2412C8FC4(&qword_257126BE0, &qword_257126BD0, MEMORY[0x24BDEF370]);
  v94[0] = v18;
  v94[1] = v19;
  v20 = MEMORY[0x242695AE8](v16, v9, v94);
  v21 = sub_2412C8FC4(&qword_257126BE8, &qword_257126BD8, MEMORY[0x24BDF0400]);
  v93[0] = v20;
  v93[1] = v21;
  v22 = MEMORY[0x242695AE8](v16, v64, v93);
  v23 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v92[0] = v22;
  v92[1] = v23;
  v24 = MEMORY[0x242695AE8](v16, v73, v92);
  v64 = v24;
  v91[0] = *(_QWORD *)(v14 + 32);
  v25 = v91[0];
  v91[1] = v23;
  v63 = MEMORY[0x242695AE8](v16, v72, v91);
  v90[0] = v24;
  v90[1] = v63;
  v90[2] = MEMORY[0x24BDF5138];
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v11, v90);
  v27 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  v86 = v11;
  v87 = v17;
  v88 = v26;
  v89 = v27;
  v28 = MEMORY[0x242695A94](0, &v86, MEMORY[0x24BDF2800], 0);
  v58 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v55 = (char *)&v52 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BF0);
  v59 = v28;
  v30 = sub_2414B3514();
  v61 = v11;
  v86 = v11;
  v87 = v17;
  v31 = v65;
  v56 = v26;
  v88 = v26;
  v89 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v33 = sub_2412C8FC4(&qword_257126BF8, &qword_257126BF0, MEMORY[0x24BDEFB48]);
  v54 = OpaqueTypeConformance2;
  v85[0] = OpaqueTypeConformance2;
  v85[1] = v33;
  v34 = MEMORY[0x242695AE8](v16, v30, v85);
  v57 = v30;
  v86 = v30;
  v87 = v34;
  v53 = v34;
  MEMORY[0x242695A94](255, &v86, MEMORY[0x24BDF29A8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v35 = sub_2414B3514();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v52 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v52 - v40;
  v79 = v67;
  v80 = v68;
  v81 = v25;
  v82 = v66;
  v83 = v69;
  v74 = v67;
  v75 = v68;
  v76 = v25;
  v77 = v66;
  v78 = v69;
  sub_2413CD090((uint64_t)sub_2413CC1E8);
  v42 = sub_2414B346C();
  v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v44 = (uint64_t)v70;
  (*(void (**)(void))(*(_QWORD *)(v42 - 8) + 104))();
  sub_2412C8030(qword_257122270, v43, MEMORY[0x24BDECF78]);
  result = sub_2414B4CE4();
  if ((result & 1) != 0)
  {
    v73 = v36;
    v46 = v55;
    v47 = v61;
    sub_2414B42B8();
    sub_2412CBE78(v44, &qword_257122240);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v47);
    v86 = sub_2414B4648();
    v48 = v59;
    sub_2413CD144(2, (uint64_t)&v86, v59, MEMORY[0x24BDF3E48], v54, MEMORY[0x24BDF3E20], (uint64_t)v38, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v48);
    v86 = v57;
    v87 = v53;
    v49 = swift_getOpaqueTypeConformance2();
    v50 = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
    v84[0] = v49;
    v84[1] = v50;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v35, v84);
    sub_2412FBF34((uint64_t)v38, v35, (uint64_t)v41);
    v51 = *(void (**)(char *, uint64_t))(v73 + 8);
    v51(v38, v35);
    sub_2412EEA1C((uint64_t)v41, v35, v62);
    return ((uint64_t (*)(char *, uint64_t))v51)(v41, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2413CC088@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  _QWORD v15[2];

  sub_2414B3DB4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v5 = sub_2414B3514();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - v10;
  sub_2412F6DCC();
  v12 = sub_2412C8030((unint64_t *)&qword_2543844B0, v4, MEMORY[0x24BDF1078]);
  v15[0] = a1;
  v15[1] = v12;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v15);
  sub_2412FBF34((uint64_t)v8, v5, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_2412EEA1C((uint64_t)v11, v5, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_2413CC1E8()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413CC088);
}

void sub_2413CC1F4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[70];

  v11[27] = a5;
  v11[28] = a4;
  v9 = sub_2414B391C();
  v11[25] = *(_QWORD *)(v9 - 8);
  v11[26] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11[24] = (char *)v11 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[32] = a1;
  v11[33] = a3;
  v11[58] = a1;
  v11[59] = a2;
  v11[60] = a3;
  v11[61] = a4;
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413CC288(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int16 v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int16 v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  _BYTE v85[96];

  v7 = *(_QWORD *)(a1 - 8);
  v1[18] = v7;
  v1[13] = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v1[22] = &v85[-v8];
  v9 = sub_2414B3514();
  v1[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v85[-v10];
  v12 = sub_2414B3514();
  v1[5] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v1[1] = &v85[-v13];
  v1[3] = v14;
  v15 = sub_2414B3514();
  v1[6] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v1[4] = &v85[-v16];
  v1[7] = v17;
  v18 = sub_2414B3514();
  v1[9] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v1[8] = &v85[-v19];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD0);
  v1[10] = v18;
  v20 = sub_2414B3514();
  v1[11] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v1[30] = &v85[-v21];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD8);
  v1[12] = v20;
  v22 = sub_2414B3514();
  v1[15] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v1[14] = &v85[-v23];
  sub_2414B3DB4();
  v1[17] = v22;
  v24 = sub_2414B3514();
  v1[20] = *(_QWORD *)(v24 - 8);
  v1[21] = v24;
  MEMORY[0x24BDAC7A8](v24);
  v1[16] = &v85[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v26);
  v1[19] = &v85[-v27];
  sub_2414B3E68();
  sub_2413CB854(a1, v5 - 176);
  v28 = *(_BYTE *)(v5 - 160);
  v29 = *(_WORD *)(v4 + 97);
  v30 = *(_QWORD *)(v5 - 152);
  v31 = *(_BYTE *)(v5 - 144);
  v32 = *(_BYTE *)(v5 - 104);
  *(_OWORD *)(v5 - 256) = *(_OWORD *)(v5 - 176);
  *(_BYTE *)(v5 - 240) = v28;
  *(_WORD *)(v4 + 17) = v29;
  *(_QWORD *)(v5 - 232) = v30;
  *(_BYTE *)(v5 - 224) = v31;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v4 + 120);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(v4 + 136);
  *(_BYTE *)(v5 - 184) = v32;
  sub_2413D22DC();
  v1[31] = v2;
  v33 = v1[28];
  sub_2414B4528();
  sub_2414B3E80();
  v1[23] = a1;
  v34 = a1;
  v35 = v1[1];
  v1[29] = v3;
  sub_2413CB854(v34, v5 - 176);
  v36 = *(_BYTE *)(v5 - 160);
  v37 = *(_WORD *)(v4 + 97);
  v38 = *(_QWORD *)(v5 - 152);
  v39 = *(_BYTE *)(v5 - 144);
  v40 = *(_BYTE *)(v5 - 104);
  *(_OWORD *)(v5 - 256) = *(_OWORD *)(v5 - 176);
  *(_BYTE *)(v5 - 240) = v36;
  *(_WORD *)(v4 + 17) = v37;
  *(_QWORD *)(v5 - 232) = v38;
  *(_BYTE *)(v5 - 224) = v39;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v4 + 120);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(v4 + 136);
  *(_BYTE *)(v5 - 184) = v40;
  sub_2413D2440();
  v41 = MEMORY[0x24BDECC60];
  v42 = v33;
  v1[46] = v33;
  v1[47] = v41;
  v43 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v1 + 46);
  sub_2414B4528();
  (*(void (**)(_BYTE *, uint64_t))(v1[2] + 8))(v11, v9);
  sub_2414B3E50();
  if (qword_2571208A8 != -1)
    swift_once();
  v1[44] = v43;
  v1[45] = v41;
  v44 = v1[3];
  v45 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v44, v1 + 44);
  v46 = v1[4];
  sub_2414B4528();
  (*(void (**)(uint64_t, uint64_t))(v1[5] + 8))(v35, v44);
  sub_2414B3E5C();
  if (qword_2571208B0 != -1)
    swift_once();
  v1[42] = v45;
  v1[43] = v41;
  v47 = v1[7];
  v48 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v47, v1 + 42);
  v49 = v41;
  v50 = v1[8];
  sub_2414B4528();
  (*(void (**)(uint64_t, uint64_t))(v1[6] + 8))(v46, v47);
  v51 = sub_2414B4A2C();
  v1[5] = v52;
  v1[6] = v85;
  MEMORY[0x24BDAC7A8](v51);
  v53 = v1[32];
  *(_QWORD *)&v85[-48] = v53;
  v54 = v53;
  v55 = v1[33];
  *(_QWORD *)&v85[-40] = v1[31];
  *(_QWORD *)&v85[-32] = v55;
  v56 = v1[29];
  *(_QWORD *)&v85[-24] = v42;
  *(_QWORD *)&v85[-16] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126D60);
  v1[40] = v48;
  v1[41] = v49;
  v57 = v1[10];
  v1[7] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v57, v1 + 40);
  sub_2412C8FC4(&qword_257126D68, &qword_257126D60, MEMORY[0x24BDEC6F8]);
  sub_2414B4120();
  (*(void (**)(uint64_t, uint64_t))(v1[9] + 8))(v50, v57);
  v58 = v1[18];
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
  v1[10] = v59;
  v61 = v1[22];
  v60 = v1[23];
  v59(v61, v56, v60);
  v62 = (*(unsigned __int8 *)(v58 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v1[13] += v62;
  v63 = (char *)swift_allocObject();
  *((_QWORD *)v63 + 2) = v54;
  v64 = v1[31];
  v65 = v1[33];
  *((_QWORD *)v63 + 3) = v64;
  *((_QWORD *)v63 + 4) = v65;
  v66 = v1[28];
  *((_QWORD *)v63 + 5) = v66;
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
  v67(&v63[v62], v61, v60);
  ((void (*)(uint64_t, _QWORD, uint64_t))v1[10])(v61, v1[29], v60);
  v68 = (char *)swift_allocObject();
  *((_QWORD *)v68 + 2) = v1[32];
  *((_QWORD *)v68 + 3) = v64;
  *((_QWORD *)v68 + 4) = v65;
  *((_QWORD *)v68 + 5) = v66;
  v67(&v68[v62], v61, v60);
  v69 = sub_2412C8FC4(&qword_257126BE0, &qword_257126BD0, MEMORY[0x24BDEF370]);
  v1[38] = v1[7];
  v1[39] = v69;
  v70 = MEMORY[0x24BDED308];
  v71 = v1[12];
  v72 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v71, v1 + 38);
  v73 = v1[14];
  v74 = v1[30];
  sub_2414B4300();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1[11] + 8))(v74, v71);
  v75 = v1[24];
  sub_2414B3910();
  v76 = sub_2412C8FC4(&qword_257126BE8, &qword_257126BD8, MEMORY[0x24BDF0400]);
  v1[36] = v72;
  v1[37] = v76;
  v77 = v1[17];
  v78 = MEMORY[0x242695AE8](v70, v77, v1 + 36);
  v79 = v1[16];
  sub_2414B43F0();
  (*(void (**)(uint64_t, _QWORD))(v1[25] + 8))(v75, v1[26]);
  (*(void (**)(uint64_t, uint64_t))(v1[15] + 8))(v73, v77);
  v80 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v1[34] = v78;
  v1[35] = v80;
  v81 = v1[21];
  MEMORY[0x242695AE8](v70, v81, v1 + 34);
  v82 = v1[19];
  sub_2412FBF34(v79, v81, v82);
  v83 = *(void (**)(uint64_t, uint64_t))(v1[20] + 8);
  v83(v79, v81);
  sub_2412EEA1C(v82, v81, v1[27]);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v82, v81);
}

uint64_t sub_2413CCAE8()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413CC1F4);
}

void sub_2413CCAF4()
{
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413CCB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t result;
  void (**v15)();
  _BYTE v16[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v16[-v10];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(&v16[-v10], v5, a1, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v3;
  *((_QWORD *)v13 + 4) = v2;
  *((_QWORD *)v13 + 5) = v1;
  result = (*(uint64_t (**)(char *, _BYTE *, uint64_t))(v8 + 32))(&v13[v12], v11, a1);
  v15 = *(void (***)())(v6 - 120);
  *v15 = sub_2413D1CF4;
  v15[1] = (void (*)())v13;
  return result;
}

void sub_2413CCBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a5;
  v13 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D70);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B4648();
  sub_2414B4A38();
  sub_2413CCCFC(a2, a3, a4, v12, v13, (uint64_t)v11);
}

uint64_t sub_2413CCC98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(v5 + *(int *)(v4 + 36));
  *v6 = v0;
  v6[1] = v1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D78);
  sub_2412DC3FC(v5, (uint64_t)v2 + *(int *)(v7 + 36), &qword_257126D70);
  *v2 = v3;
  return sub_2412CBE78(v5, &qword_257126D70);
}

void sub_2413CCCFC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = a4;
  v20 = a5;
  v21 = a1;
  v22 = a6;
  v8 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D80);
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_2414B3AFC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B8C();
  sub_2414B3268();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2413D1D7C((uint64_t)v10, (uint64_t)v13);
  v23 = a2;
  v24 = a3;
  v25 = v19;
  v26 = v20;
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413CCE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;

  sub_2413CB920();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412C6A50(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
  v4 = (_OWORD *)(v1 + *(int *)(v2 + 36));
  v5 = *(_OWORD *)(v3 - 128);
  *v4 = *(_OWORD *)(v3 - 144);
  v4[1] = v5;
  v4[2] = *(_OWORD *)(v3 - 112);
  sub_2412C68F4(v0, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
  return sub_2412EAEA4(v1, *(_QWORD *)(v3 - 152), &qword_257126D80);
}

void sub_2413CCF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  _QWORD v22[4];
  CGRect v23;

  v10 = sub_2414B3AFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B8C();
  sub_2414B3268();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v23.origin.x = v15;
  v23.origin.y = v17;
  v23.size.width = v19;
  v23.size.height = v21;
  CGRectGetMinY(v23);
  v22[0] = a3;
  v22[1] = a4;
  v22[2] = a5;
  v22[3] = a6;
  type metadata accessor for NowPlayingQueueSection();
}

void sub_2413CD01C(uint64_t a1)
{
  BOOL *v1;
  double v2;
  double v3;

  v3 = sub_2413CB8C4(a1);
  if (qword_2571208D0 != -1)
    swift_once();
  *v1 = v2 <= v3 + *(double *)&qword_257136FD0;
}

uint64_t sub_2413CD090(uint64_t a1)
{
  double v1;
  void (*v2)(double);

  v1 = MEMORY[0x24BDAC7A8](a1);
  v2(v1);
  return sub_2414B499C();
}

uint64_t sub_2413CD144@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  double v41;
  double v42;
  double v43;
  double v44;
  char v45;

  v31 = a3;
  v37 = a6;
  v33 = a2;
  v32 = a1;
  v35 = a7;
  v36 = sub_2414B53B0();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v18 = (char *)&v31 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BF0);
  v19 = sub_2414B3514();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - v21;
  v23 = sub_2412C8FC4(&qword_257126BF8, &qword_257126BF0, MEMORY[0x24BDEFB48]);
  v40[0] = a5;
  v40[1] = v23;
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v19, v40);
  v41 = *(double *)&v19;
  v42 = *(double *)&v24;
  v25 = MEMORY[0x242695A94](0, &v41, MEMORY[0x24BDF29A8], 0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v31 - v27;
  v41 = a8;
  v42 = a9;
  v43 = a10;
  v44 = a11;
  v45 = 0;
  sub_2414B4270();
  sub_2414B3154();
  sub_2414B42F4();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v29 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v18, v33, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v18, 0, 1, a4);
  v38 = v19;
  v39 = v24;
  swift_getOpaqueTypeConformance2();
  sub_2414B4318();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

void sub_2413CD3A4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413CD3FC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v1 + a1[13], v3, v2);
  v5 = v1 + a1[14];
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_WORD *)(v5 + 72) = 0;
  v6 = v1 + a1[15];
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_BYTE *)(v6 + 8) = 0;
  v7 = (uint64_t *)(v1 + a1[16]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v8 = v1 + a1[17];
  result = sub_2414B4798();
  *(_BYTE *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  return result;
}

void NowPlayingQueueSection.init(content:header:)(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(double);
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v11(v8);
  a2(v12);
  sub_2413CD3A4((uint64_t)v10, a3, a4);
}

void NowPlayingQueueSection<>.init(content:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  double v5;
  uint64_t v6;
  char *v7;
  void (*v8)(double);
  uint64_t v9;

  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  sub_2413CD3A4((uint64_t)v7, a2, a3);
}

void NowPlayingQueueSection<>.init<A, B>(_:rowContent:header:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[7];

  v47 = a6;
  v48 = a3;
  v42 = a5;
  v43 = a4;
  v40 = a2;
  v46 = a1;
  v44 = a9;
  v36 = a12;
  v34 = a8;
  v35 = a13;
  v33 = a14;
  v39 = a10;
  MEMORY[0x24BDAC7A8](a1);
  v41 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v38 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = AssociatedTypeWitness;
  v20 = sub_2414B3244();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49[1] = a7;
  v49[2] = AssociatedTypeWitness;
  v49[3] = v20;
  v49[4] = a11;
  v49[5] = AssociatedConformanceWitness;
  v22 = sub_2414B4954();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v32 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v45 + 16))(v38, v46, a7, v23);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v47;
  v26[3] = a7;
  v27 = v39;
  v26[4] = v34;
  v26[5] = v27;
  v28 = v36;
  v26[6] = a11;
  v26[7] = v28;
  v29 = v33;
  v26[8] = v35;
  v26[9] = v29;
  v26[10] = v40;
  v26[11] = v48;
  swift_retain();
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDEC0C8], v20);
  v31 = sub_2414B4948();
  v43(v31);
  v49[0] = v30;
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v22, v49);
  sub_2413CD3A4((uint64_t)v25, v22, v44);
}

uint64_t sub_2413CD8F8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(*(_QWORD *)(v1 - 160), v0);
}

uint64_t sub_2413CD930@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];
  void (*v21)(uint64_t, double);
  uint64_t v22;

  v20[1] = a3;
  v21 = a2;
  v22 = a5;
  v7 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B3244();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v20 - v16;
  v21(a1, v15);
  sub_2414B45D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a4);
  MEMORY[0x242695AE8](MEMORY[0x24BDEC0C8], v10);
  sub_2412FBF34((uint64_t)v13, v10, (uint64_t)v17);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  sub_2412EEA1C((uint64_t)v17, v10, v22);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v10);
}

uint64_t sub_2413CDAA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413CDAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2413CD930(a1, *(void (**)(uint64_t, double))(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 32), a2);
}

uint64_t NowPlayingQueueSection<>.data.getter()
{
  return sub_2414B388C();
}

uint64_t sub_2413CDB08()
{
  return NowPlayingQueueSection<>.data.getter();
}

void NowPlayingQueueRow.init(item:artwork:title:subtitle:action:)(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  double v13;
  uint64_t v14;
  uint64_t v15;

  v13 = MEMORY[0x24BDAC7A8](a1);
  v14 = *(_QWORD *)(a10 - 8);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v14 + 16))(a3, a1, a10, v13);
  a2(v15);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a10);
  type metadata accessor for NowPlayingQueueRow();
}

uint64_t sub_2413CDBF0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + a1[13], v3, v1);
  v8 = v2 + a1[14];
  v9 = *(_QWORD *)(v5 - 176);
  *(_QWORD *)v8 = *(_QWORD *)(v5 - 192);
  *(_QWORD *)(v8 + 8) = v9;
  *(_BYTE *)(v8 + 16) = *(_DWORD *)(v5 - 148) & 1;
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v5 - 144);
  v10 = v2 + a1[15];
  v11 = *(_QWORD *)(v5 - 200);
  *(_QWORD *)v10 = *(_QWORD *)(v5 - 128);
  *(_QWORD *)(v10 + 8) = v11;
  *(_BYTE *)(v10 + 16) = *(_DWORD *)(v5 - 180) & 1;
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v5 - 160);
  v12 = (_QWORD *)(v2 + a1[16]);
  v13 = *(_QWORD *)(v5 - 168);
  *v12 = *(_QWORD *)(v5 - 136);
  v12[1] = v13;
  return result;
}

void type metadata accessor for NowPlayingQueueRow()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t NowPlayingQueueRow.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  _QWORD v36[2];

  v26 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C10);
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  v6 = sub_2414B3514();
  v36[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  v36[1] = MEMORY[0x24BDECC60];
  v7 = MEMORY[0x24BDED308];
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v36);
  v31 = v6;
  v32 = v8;
  MEMORY[0x242695A94](255, &v31, MEMORY[0x24BDF2F10], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C18);
  v9 = sub_2414B3514();
  v10 = sub_2414B3A9C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  v31 = v6;
  v32 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v13 = sub_2412C8FC4(qword_257126C20, &qword_257126C18, MEMORY[0x24BDF0960]);
  v35[0] = OpaqueTypeConformance2;
  v35[1] = v13;
  v14 = MEMORY[0x242695AE8](v7, v9, v35);
  v15 = sub_2412C8030(&qword_254382BA0, v11, MEMORY[0x24BDEF420]);
  v31 = v9;
  v32 = v10;
  v33 = v14;
  v34 = v15;
  MEMORY[0x242695A94](255, &v31, MEMORY[0x24BDF2380], 0);
  v31 = v9;
  v32 = v10;
  v33 = v14;
  v34 = v15;
  swift_getOpaqueTypeConformance2();
  v16 = sub_2414B47EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v25 - v21;
  v27 = v3;
  v28 = *(_OWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 40);
  v30 = v25;
  swift_retain();
  sub_2414B47D4();
  MEMORY[0x242695AE8](MEMORY[0x24BDF43B0], v16);
  sub_2412FBF34((uint64_t)v19, v16, (uint64_t)v22);
  v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23(v19, v16);
  sub_2412EEA1C((uint64_t)v22, v16, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v22, v16);
}

uint64_t sub_2413CDFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  _QWORD v83[2];

  v61 = a5;
  v60 = a4;
  v58 = a3;
  v49 = a2;
  v59 = a1;
  v71 = a6;
  v6 = sub_2414B3A9C();
  v69 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_2414B361C();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_2414B3CD0();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C10);
  swift_getTupleTypeMetadata2();
  v45 = sub_2414B4B1C();
  v44[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v45);
  v10 = sub_2414B4804();
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v44 - v11;
  v13 = sub_2414B3514();
  v53 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v44 - v15;
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10, v14);
  v83[0] = v46;
  v83[1] = MEMORY[0x24BDECC60];
  v17 = MEMORY[0x24BDED308];
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v83);
  v78 = v13;
  v79 = v18;
  v19 = MEMORY[0x242695A94](0, &v78, MEMORY[0x24BDF2F10], 0);
  v54 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v72 = (char *)v44 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C18);
  v56 = v19;
  v21 = sub_2414B3514();
  v57 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v55 = (char *)v44 - v22;
  v78 = v13;
  v79 = v18;
  v47 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = sub_2412C8FC4(qword_257126C20, &qword_257126C18, MEMORY[0x24BDF0960]);
  v48 = OpaqueTypeConformance2;
  v82[0] = OpaqueTypeConformance2;
  v82[1] = v24;
  v25 = MEMORY[0x242695AE8](v17, v21, v82);
  v26 = sub_2412C8030(&qword_254382BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v78 = v21;
  v79 = v6;
  v70 = v6;
  v51 = v25;
  v80 = v25;
  v81 = v26;
  v27 = MEMORY[0x242695A94](0, &v78, MEMORY[0x24BDF2380], 0);
  v50 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v44 - v31;
  v73 = v49;
  v74 = v58;
  v75 = v60;
  v76 = v61;
  v77 = v59;
  sub_2414B3880();
  sub_2414B47F8();
  sub_2414B3E8C();
  if (qword_2571208C0 != -1)
    swift_once();
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v10);
  v33 = v62;
  sub_2414B3CB8();
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v33, v64);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v13);
  v34 = v65;
  sub_2414B3610();
  if (qword_2571208A0 != -1)
    swift_once();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D28);
  __swift_project_value_buffer(v35, (uint64_t)qword_257126B88);
  sub_2412C8FC4(&qword_257126D30, &qword_257126D28, MEMORY[0x24BDEB628]);
  v36 = v55;
  v37 = v56;
  v38 = v72;
  sub_2414B4240();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v67);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v37);
  v39 = v68;
  v40 = v70;
  v41 = v51;
  sub_24140DCEC();
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v21);
  v78 = v21;
  v79 = v40;
  v80 = v41;
  v81 = v26;
  swift_getOpaqueTypeConformance2();
  sub_2412FBF34((uint64_t)v29, v27, (uint64_t)v32);
  v42 = *(void (**)(char *, uint64_t))(v50 + 8);
  v42(v29, v27);
  sub_2412EEA1C((uint64_t)v32, v27, v71);
  return ((uint64_t (*)(char *, uint64_t))v42)(v32, v27);
}

uint64_t sub_2413CE73C()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413CDFE4);
}

void sub_2413CE748(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28 = a5;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126C10);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v17 - v11;
  v18 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v18);
  v12 = sub_2414B3514();
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  v19 = v13;
  v14 = sub_2414B3514();
  v21 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v22 = (char *)&v17 - v16;
  v29 = a1;
  v30 = a2;
  v24 = a2;
  v31 = a3;
  v32 = a4;
  v25 = a4;
  type metadata accessor for NowPlayingQueueRow();
}

void sub_2413CE92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v8 - 304) = v6;
  if (qword_2571208B8 != -1)
    swift_once();
  sub_2414B4A44();
  *(_QWORD *)(v8 - 288) = v2;
  sub_2414B44A4();
  v9 = v4;
  if (qword_2571208C8 != -1)
    swift_once();
  v10 = qword_257126BC8;
  v11 = (char *)v5 + *(int *)(*(_QWORD *)(v8 - 344) + 20);
  v12 = *MEMORY[0x24BDEEB78];
  v13 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  *v5 = v10;
  if (qword_25437DC88 != -1)
    swift_once();
  v14 = unk_25438E798;
  *(_OWORD *)(v8 - 144) = xmmword_25438E788;
  *(_OWORD *)(v8 - 128) = v14;
  *(_QWORD *)(v8 - 112) = qword_25438E7A8;
  v15 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v8 - 160) = v4;
  *(_QWORD *)(v8 - 152) = v15;
  v16 = MEMORY[0x24BDED308];
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v8 - 160);
  sub_2413DE02C(0.5, (uint64_t)v5, (uint64_t *)(v8 - 144), v7, v17);
  sub_2412C68F4((uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 328) + 8))(v1, v7);
  v18 = sub_241302EC4();
  *(_QWORD *)(v8 - 176) = v17;
  *(_QWORD *)(v8 - 168) = v18;
  v19 = MEMORY[0x242695AE8](v16, *(_QWORD *)(v8 - 336), v8 - 176);
  v20 = sub_2412C8FC4(&qword_254381198, &qword_2543811A0, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v8 - 192) = v19;
  *(_QWORD *)(v8 - 184) = v20;
  MEMORY[0x242695AE8](v16, v0, v8 - 192);
  sub_2412FBF34(v3, v0, *(_QWORD *)(v8 - 312));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 320) + 8))(v3, v0);
  v21 = sub_2414B3964();
  v22 = *(_QWORD *)(v8 - 296);
  *(_QWORD *)v22 = v21;
  *(_QWORD *)(v22 + 8) = 0x4010000000000000;
  *(_BYTE *)(v22 + 16) = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D38);
  sub_2413CEC74(*(_QWORD *)(v8 - 288), *(_QWORD *)(v8 - 280), v9, *(_QWORD *)(v8 - 272), v22 + *(int *)(v23 + 44));
}

void sub_2413CEC74(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[8];
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19[7] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D48);
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E08);
  MEMORY[0x24BDAC7A8](v20);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E10);
  MEMORY[0x24BDAC7A8](v11);
  v22 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D50);
  MEMORY[0x24BDAC7A8](v21);
  v19[6] = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v19[5] = (char *)v19 - v15;
  MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)v19 - v18;
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  type metadata accessor for NowPlayingQueueRow();
}

uint64_t sub_2413CEE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v7 - 200) = a1;
  *(_QWORD *)(v7 - 192) = v2;
  sub_2414B3EB0();
  v8 = sub_2414B4078();
  v10 = v9;
  v12 = v11;
  *(_QWORD *)(v7 - 224) = v13;
  swift_release();
  if (qword_2571207C0 != -1)
    swift_once();
  v14 = qword_257136EA8;
  swift_retain();
  v15 = sub_2414B4678();
  v16 = *(int *)(v3 + 56);
  *(_QWORD *)(v7 - 208) = v3;
  *(uint64_t *)((char *)v6 + v16) = swift_getKeyPath();
  *(_QWORD *)(v7 - 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  *v6 = v14;
  v6[1] = v15;
  sub_2412EAEA4((uint64_t)v6, v5, &qword_257126D48);
  sub_2412DC3FC(v5, v1 + *(int *)(*(_QWORD *)(v7 - 160) + 36), &qword_257126D48);
  *(_QWORD *)v1 = v8;
  *(_QWORD *)(v1 + 8) = v10;
  *(_BYTE *)(v1 + 16) = v12 & 1;
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v7 - 224);
  sub_2412CBE78(v5, &qword_257126D48);
  v17 = sub_2414B4A50();
  v18 = *(_QWORD *)(v7 - 144);
  sub_24133FD28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v18, 0.0, 1, 0.0, 1, v17, v19);
  sub_2412CBE78(v1, &qword_257122E08);
  KeyPath = swift_getKeyPath();
  sub_2412DC3FC(v18, v4, &qword_257122E10);
  v21 = v4 + *(int *)(*(_QWORD *)(v7 - 152) + 36);
  *(_QWORD *)v21 = KeyPath;
  *(_QWORD *)(v21 + 8) = 1;
  *(_BYTE *)(v21 + 16) = 0;
  sub_2412CBE78(v18, &qword_257122E10);
  sub_2412EAEA4(v4, *(_QWORD *)(v7 - 136), &qword_257126D50);
  sub_2414B3F4C();
  *(_QWORD *)(v7 - 192) = v4;
  v22 = sub_2414B4078();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release();
  if (qword_2571207C8 != -1)
    swift_once();
  v29 = qword_257136EB0;
  swift_retain();
  v30 = sub_2414B46C0();
  v31 = (uint64_t *)((char *)v6 + *(int *)(*(_QWORD *)(v7 - 208) + 56));
  *v31 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *v6 = v29;
  v6[1] = v30;
  sub_2412EAEA4((uint64_t)v6, v5, &qword_257126D48);
  sub_2412DC3FC(v5, v1 + *(int *)(*(_QWORD *)(v7 - 160) + 36), &qword_257126D48);
  *(_QWORD *)v1 = v22;
  *(_QWORD *)(v1 + 8) = v24;
  *(_BYTE *)(v1 + 16) = v26 & 1;
  *(_QWORD *)(v1 + 24) = v28;
  sub_2412CBE78(v5, &qword_257126D48);
  v32 = sub_2414B4A50();
  v33 = *(_QWORD *)(v7 - 144);
  sub_24133FD28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1, v32, v34);
  sub_2412CBE78(v1, &qword_257122E08);
  v35 = swift_getKeyPath();
  v36 = *(_QWORD *)(v7 - 184);
  sub_2412DC3FC(v33, v36, &qword_257122E10);
  v37 = v36 + *(int *)(*(_QWORD *)(v7 - 152) + 36);
  *(_QWORD *)v37 = v35;
  *(_QWORD *)(v37 + 8) = 1;
  *(_BYTE *)(v37 + 16) = 0;
  sub_2412CBE78(v33, &qword_257122E10);
  v38 = *(_QWORD *)(v7 - 192);
  sub_2412EAEA4(v36, v38, &qword_257126D50);
  v39 = *(_QWORD *)(v7 - 136);
  sub_2412DC3FC(v39, v36, &qword_257126D50);
  v40 = *(_QWORD *)(v7 - 176);
  sub_2412DC3FC(v38, v40, &qword_257126D50);
  v41 = *(_QWORD *)(v7 - 168);
  sub_2412DC3FC(v36, v41, &qword_257126D50);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D58);
  sub_2412DC3FC(v40, v41 + *(int *)(v42 + 48), &qword_257126D50);
  sub_2412CBE78(v38, &qword_257126D50);
  sub_2412CBE78(v39, &qword_257126D50);
  sub_2412CBE78(v40, &qword_257126D50);
  return sub_2412CBE78(v36, &qword_257126D50);
}

uint64_t static NowPlayingQueueRow.== infix(_:_:)()
{
  return sub_2414B4CE4() & 1;
}

uint64_t sub_2413CF2B0()
{
  return sub_241318A94();
}

void sub_2413CF2BC()
{
  JUMPOUT(0x242695AE8);
}

uint64_t sub_2413CF2CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413CF30C()
{
  return sub_241318A94();
}

uint64_t sub_2413CF31C()
{
  return static NowPlayingQueueRow.== infix(_:_:)();
}

void sub_2413CF328()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_24133ACB8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2413CF3EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  unsigned int v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  char v55;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v52 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v52 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64) + 7;
  v10 = sub_2414B3934();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8 | 7;
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v11 + 64);
  v15 = v7 | *(_DWORD *)(v5 + 80) & 0xF8 | *(_DWORD *)(v11 + 80) & 0xF8;
  v16 = (v12 | v7 | *(_DWORD *)(v5 + 80)) & 0x100000;
  if (v15 > 7
    || v16 != 0
    || ((v14
       + 8
       + ((v13
         + ((((v9 + (v8 & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)
         + 9) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (uint64_t *)(v19 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
  }
  else
  {
    v49 = *(_QWORD *)(v10 - 8);
    v50 = v14 + 8;
    v44 = v10;
    v47 = v14;
    v48 = ~v13;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    v51 = a1;
    v21 = ((unint64_t)a1 + v8) & ~(unint64_t)v7;
    v22 = ((unint64_t)a2 + v8) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v21, v22, v52);
    v23 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)(v23 + 8);
    v25 = (v9 + v21) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)(v23 + 16);
    v27 = *(_QWORD *)(v23 + 24);
    v28 = *(_QWORD *)(v23 + 32);
    v29 = *(_QWORD *)(v23 + 40);
    v30 = *(_QWORD *)(v23 + 48);
    v31 = *(_QWORD *)(v23 + 56);
    v45 = *(_QWORD *)v23;
    v46 = *(_QWORD *)(v23 + 64);
    v53 = *(_BYTE *)(v23 + 72);
    v55 = *(_BYTE *)(v23 + 73);
    sub_2412C6F48(*(_QWORD *)v23, v24, v26, v27, v28, v29, v30, v31, v46, v53, v55);
    *(_QWORD *)v25 = v45;
    *(_QWORD *)(v25 + 8) = v24;
    *(_QWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 24) = v27;
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v29;
    *(_QWORD *)(v25 + 48) = v30;
    *(_QWORD *)(v25 + 56) = v31;
    *(_QWORD *)(v25 + 64) = v46;
    *(_BYTE *)(v25 + 72) = v53;
    *(_BYTE *)(v25 + 73) = v55;
    v32 = (v25 + 81) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v23 + 81) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(_QWORD *)v33;
    v35 = *(_BYTE *)(v33 + 8);
    sub_2412C7080(*(_QWORD *)v33, v35);
    *(_QWORD *)v32 = v34;
    *(_BYTE *)(v32 + 8) = v35;
    v36 = (_QWORD *)((v32 + v13 + 9) & v48);
    v37 = (_QWORD *)((v33 + v13 + 9) & v48);
    v38 = *((unsigned __int8 *)v37 + v47);
    if (v38 >= 2)
    {
      if (v47 <= 3)
        v39 = v47;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    v20 = v51;
    if (v38 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v49 + 16))(v36, v37, v44);
      v40 = 1;
    }
    else
    {
      *v36 = *v37;
      swift_retain();
      v40 = 0;
    }
    *((_BYTE *)v36 + v47) = v40;
    v41 = ((unint64_t)v36 + v50) & 0xFFFFFFFFFFFFFFF8;
    v42 = ((unint64_t)v37 + v50) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v41 = *(_BYTE *)v42;
    *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  }
  swift_retain();
  return v20;
}

uint64_t sub_2413CF714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2412C823C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_BYTE *)(v8 + 72), *(_BYTE *)(v8 + 73));
  v9 = (v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  sub_2412C821C(*(_QWORD *)v9, *(_BYTE *)(v9 + 8));
  v10 = sub_2414B3934();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v13 = (v9 + v12 + 9) & ~v12;
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v11 + 64);
  v15 = *(unsigned __int8 *)(v13 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X13 }
  }
  if (v15 == 1)
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  else
    swift_release();
  return swift_release();
}

uint64_t sub_2413CF8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v45 = a1;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = *(_QWORD *)(v15 + 24);
  v20 = *(_QWORD *)(v15 + 32);
  v21 = *(_QWORD *)(v15 + 40);
  v22 = *(_QWORD *)(v15 + 48);
  v23 = *(_QWORD *)(v15 + 56);
  v42 = *(_QWORD *)(v15 + 64);
  v43 = *(_BYTE *)(v15 + 72);
  v44 = *(_BYTE *)(v15 + 73);
  sub_2412C6F48(*(_QWORD *)v15, v17, v18, v19, v20, v21, v22, v23, v42, v43, v44);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_QWORD *)(v14 + 16) = v18;
  *(_QWORD *)(v14 + 24) = v19;
  *(_QWORD *)(v14 + 32) = v20;
  *(_QWORD *)(v14 + 40) = v21;
  *(_QWORD *)(v14 + 48) = v22;
  *(_QWORD *)(v14 + 56) = v23;
  *(_QWORD *)(v14 + 64) = v42;
  *(_BYTE *)(v14 + 72) = v43;
  *(_BYTE *)(v14 + 73) = v44;
  v24 = (v14 + 81) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v17) = *(_BYTE *)(v25 + 8);
  sub_2412C7080(*(_QWORD *)v25, v17);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v17;
  v27 = sub_2414B3934();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_DWORD *)(v28 + 80) & 0xF8;
  v30 = v29 + 16;
  v31 = v29 + 16 + v24;
  v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  v33 = (_QWORD *)(v31 & v32);
  v34 = (_QWORD *)((v30 + v25) & v32);
  if (*(_QWORD *)(v28 + 64) <= 8uLL)
    v35 = 8;
  else
    v35 = *(_QWORD *)(v28 + 64);
  v36 = *((unsigned __int8 *)v34 + v35);
  if (v36 >= 2)
  {
    if (v35 <= 3)
      v37 = v35;
    else
      v37 = 4;
    __asm { BR              X13 }
  }
  if (v36 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v28 + 16))(v33, v34, v27);
    v38 = 1;
  }
  else
  {
    *v33 = *v34;
    swift_retain();
    v38 = 0;
  }
  *((_BYTE *)v33 + v35) = v38;
  v39 = ((unint64_t)v33 + v35 + 8) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v34 + v35 + 8) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  swift_retain();
  return v45;
}

uint64_t sub_2413CFB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v60 = a1;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = *(_QWORD *)(v15 + 24);
  v20 = *(_QWORD *)(v15 + 32);
  v21 = *(_QWORD *)(v15 + 40);
  v22 = *(_QWORD *)(v15 + 48);
  v23 = *(_QWORD *)(v15 + 56);
  v57 = *(_QWORD *)(v15 + 64);
  v58 = *(_BYTE *)(v15 + 72);
  v59 = *(_BYTE *)(v15 + 73);
  sub_2412C6F48(*(_QWORD *)v15, v17, v18, v19, v20, v21, v22, v23, v57, v58, v59);
  v24 = *(_QWORD *)v14;
  v25 = *(_QWORD *)(v14 + 8);
  v26 = *(_QWORD *)(v14 + 16);
  v27 = *(_QWORD *)(v14 + 24);
  v28 = *(_QWORD *)(v14 + 32);
  v29 = *(_QWORD *)(v14 + 40);
  v30 = *(_QWORD *)(v14 + 48);
  v31 = *(_QWORD *)(v14 + 56);
  v32 = *(_QWORD *)(v14 + 64);
  v33 = *(_BYTE *)(v14 + 72);
  v34 = *(_BYTE *)(v14 + 73);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_QWORD *)(v14 + 16) = v18;
  *(_QWORD *)(v14 + 24) = v19;
  *(_QWORD *)(v14 + 32) = v20;
  *(_QWORD *)(v14 + 40) = v21;
  *(_QWORD *)(v14 + 48) = v22;
  *(_QWORD *)(v14 + 56) = v23;
  *(_QWORD *)(v14 + 64) = v57;
  *(_BYTE *)(v14 + 72) = v58;
  *(_BYTE *)(v14 + 73) = v59;
  sub_2412C823C(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);
  v35 = (v14 + 81) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  LOBYTE(v17) = *(_BYTE *)(v36 + 8);
  sub_2412C7080(*(_QWORD *)v36, v17);
  v38 = *(_QWORD *)v35;
  v39 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v17;
  sub_2412C821C(v38, v39);
  v40 = sub_2414B3934();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_DWORD *)(v41 + 80) & 0xF8;
  v43 = v42 + 16;
  v44 = v42 + 16 + v35;
  v45 = ~v42 & 0xFFFFFFFFFFFFFFF8;
  v46 = v44 & v45;
  v47 = (v43 + v36) & v45;
  if (*(_QWORD *)(v41 + 64) <= 8uLL)
    v48 = 8;
  else
    v48 = *(_QWORD *)(v41 + 64);
  if (v46 != v47)
  {
    v49 = v40;
    v50 = *(unsigned __int8 *)(v46 + v48);
    if (v50 >= 2)
    {
      if (v48 <= 3)
        v51 = v48;
      else
        v51 = 4;
      __asm { BR              X12 }
    }
    if (v50 == 1)
      (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v46, v40);
    else
      swift_release();
    v52 = *(unsigned __int8 *)(v47 + v48);
    if (v52 >= 2)
    {
      if (v48 <= 3)
        v53 = v48;
      else
        v53 = 4;
      __asm { BR              X12 }
    }
    if (v52 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v46, v47, v49);
      *(_BYTE *)(v46 + v48) = 1;
    }
    else
    {
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *(_BYTE *)(v46 + v48) = 0;
      swift_retain();
    }
  }
  v54 = ((v46 | 7) + v48 + 1) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((v47 | 7) + v48 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v54 = *(_BYTE *)v55;
  *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
  swift_retain();
  swift_release();
  return v60;
}

uint64_t sub_2413CFE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v17 = v15[2];
  v16 = v15[3];
  v18 = v15[1];
  *(_OWORD *)((char *)v14 + 58) = *(_OWORD *)((char *)v15 + 58);
  v14[2] = v17;
  v14[3] = v16;
  v14[1] = v18;
  v19 = ((unint64_t)v14 + 81) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v15) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = (_BYTE)v15;
  v21 = sub_2414B3934();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 + 16;
  v25 = v23 + 16 + v19;
  v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  v27 = (_QWORD *)(v25 & v26);
  v28 = (_QWORD *)((v24 + v20) & v26);
  if (*(_QWORD *)(v22 + 64) <= 8uLL)
    v29 = 8;
  else
    v29 = *(_QWORD *)(v22 + 64);
  v30 = *((unsigned __int8 *)v28 + v29);
  if (v30 >= 2)
  {
    if (v29 <= 3)
      v31 = v29;
    else
      v31 = 4;
    __asm { BR              X13 }
  }
  if (v30 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 32))(v27, v28, v21);
    v32 = 1;
  }
  else
  {
    v32 = 0;
    *v27 = *v28;
  }
  *((_BYTE *)v27 + v29) = v32;
  *(_OWORD *)(((unint64_t)v27 + v29 + 8) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v28 + v29 + 8) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413D002C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 64);
  v16 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v13) = *(_BYTE *)(v14 + 72);
  v17 = *(_BYTE *)(v14 + 73);
  v18 = *(_QWORD *)v16;
  v19 = *(_QWORD *)(v16 + 8);
  v20 = *(_QWORD *)(v16 + 16);
  v21 = *(_QWORD *)(v16 + 24);
  v22 = *(_QWORD *)(v16 + 32);
  v23 = *(_QWORD *)(v16 + 40);
  v24 = *(_QWORD *)(v16 + 48);
  v25 = *(_QWORD *)(v16 + 56);
  v26 = *(_QWORD *)(v16 + 64);
  v27 = *(_BYTE *)(v16 + 72);
  v28 = *(_BYTE *)(v16 + 73);
  v29 = *(_OWORD *)(v14 + 16);
  v30 = *(_OWORD *)(v14 + 32);
  v31 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)v16 = *(_OWORD *)v14;
  *(_OWORD *)(v16 + 16) = v29;
  *(_OWORD *)(v16 + 32) = v30;
  *(_OWORD *)(v16 + 48) = v31;
  *(_QWORD *)(v16 + 64) = v15;
  *(_BYTE *)(v16 + 72) = v13;
  *(_BYTE *)(v16 + 73) = v17;
  sub_2412C823C(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  v32 = (v16 + 81) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v14 + 81) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_BYTE *)(v33 + 8);
  v35 = *(_QWORD *)v32;
  v36 = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = v34;
  sub_2412C821C(v35, v36);
  v37 = sub_2414B3934();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(_DWORD *)(v38 + 80) & 0xF8;
  v40 = v39 + 16;
  v41 = v39 + 16 + v32;
  v42 = ~v39 & 0xFFFFFFFFFFFFFFF8;
  v43 = v41 & v42;
  v44 = (v40 + v33) & v42;
  if (*(_QWORD *)(v38 + 64) <= 8uLL)
    v45 = 8;
  else
    v45 = *(_QWORD *)(v38 + 64);
  if (v43 != v44)
  {
    v46 = v37;
    v47 = *(unsigned __int8 *)(v43 + v45);
    if (v47 >= 2)
    {
      if (v45 <= 3)
        v48 = v45;
      else
        v48 = 4;
      __asm { BR              X12 }
    }
    if (v47 == 1)
      (*(void (**)(unint64_t, uint64_t))(v38 + 8))(v43, v37);
    else
      swift_release();
    v49 = *(unsigned __int8 *)(v44 + v45);
    if (v49 >= 2)
    {
      if (v45 <= 3)
        v50 = v45;
      else
        v50 = 4;
      __asm { BR              X12 }
    }
    if (v49 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v38 + 32))(v43, v44, v46);
      v51 = 1;
    }
    else
    {
      v51 = 0;
      *(_QWORD *)v43 = *(_QWORD *)v44;
    }
    *(_BYTE *)(v43 + v45) = v51;
  }
  v52 = ((v43 | 7) + v45 + 1) & 0xFFFFFFFFFFFFFFF8;
  v53 = ((v44 | 7) + v45 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v52 = *(_BYTE *)v53;
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
  swift_release();
  return a1;
}

uint64_t sub_2413D0300(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(sub_2414B3934() - 8);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v12 + 64);
  if (v11 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v11;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v17 = *(_QWORD *)(v9 + 64) + 7;
  v18 = *(_DWORD *)(v12 + 80) & 0xF8;
  v19 = ~v18 & 0xFFFFFFFFFFFFFFF8;
  v20 = v18 + 16;
  v21 = v13 + 8;
  if (v14 < a2)
  {
    if (((((v21 + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v19)) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v22 = 2;
    else
      v22 = a2 - v14 + 1;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
    __asm { BR              X1 }
  }
  if ((_DWORD)v8 == v14)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v27 = a1;
    v28 = v8;
    v29 = v6;
    return v26(v27, v28, v29);
  }
  v27 = (v16 + a1) & ~v15;
  if ((_DWORD)v10 == v14)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v28 = v10;
    v29 = v5;
    return v26(v27, v28, v29);
  }
  v30 = *(_QWORD *)(((v21 + ((v20 + ((((v17 + v27) & 0xFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFF8)) & v19)) & 0xFFFFFFFFFFFFF8)
                  + 8);
  if (v30 >= 0xFFFFFFFF)
    LODWORD(v30) = -1;
  v31 = v30 - 1;
  if (v31 < 0)
    v31 = -1;
  return (v31 + 1);
}

void sub_2413D0510(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v7 + 84))
    v9 = *(_DWORD *)(v7 + 84);
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_2414B3934() - 8);
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v9;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_DWORD *)(v10 + 80) & 0xF8;
  if (v12 >= a3)
  {
    v17 = 0;
    if (a2 <= v12)
      goto LABEL_23;
  }
  else
  {
    if ((((_DWORD)v11
         + 8
         + (((_DWORD)v14
           + 16
           + ((((*(_DWORD *)(v8 + 64) + 7 + ((*(_DWORD *)(v7 + 64) + (_DWORD)v13) & ~(_DWORD)v13)) & 0xFFFFFFF8) + 81) & 0xFFFFFFF8)) & ~(_DWORD)v14 & 0xFFFFFFF8)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v15 = a3 - v12 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    if (a2 <= v12)
LABEL_23:
      __asm { BR              X17 }
  }
  if ((((_DWORD)v11
       + 8
       + (((_DWORD)v14
         + 16
         + ((((*(_DWORD *)(v8 + 64) + 7 + ((*(_DWORD *)(v7 + 64) + (_DWORD)v13) & ~(_DWORD)v13)) & 0xFFFFFFF8) + 81) & 0xFFFFFFF8)) & ~(_DWORD)v14 & 0xFFFFFFF8)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v18 = ~v12 + a2;
    bzero(a1, ((v11+ 8+ ((v14+ 16+ ((((*(_QWORD *)(v8 + 64) + 7 + ((*(_QWORD *)(v7 + 64) + v13) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & ~v14 & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v18;
  }
  __asm { BR              X10 }
}

void sub_2413D0684()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2413D0750);
}

void sub_2413D068C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x2413D0694);
  JUMPOUT(0x2413D0750);
}

void sub_2413D06F0()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2413D0750);
}

void sub_2413D06F8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2413D0750);
}

uint64_t sub_2413D0700@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_WORD *)(v10 + v15) = 0;
  if (!(_DWORD)v9)
    JUMPOUT(0x2413D0750);
  if ((_DWORD)v14 == a1)
  {
    v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v2 = v10;
    v3 = v9;
    v4 = v14;
    v5 = v13;
  }
  else
  {
    v2 = (v7 + v10) & v8;
    if ((_DWORD)v12 != a1)
      JUMPOUT(0x2413D070CLL);
    v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v3 = v9;
    v4 = v12;
    v5 = v11;
  }
  return v1(v2, v3, v4, v5);
}

void type metadata accessor for NowPlayingQueueSection()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2413D077C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2413D0820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    v17 = (v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    sub_241307638(*(_QWORD *)v18, v20, v21);
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    *(_BYTE *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    v22 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
    v23 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)v23;
    v25 = *(_QWORD *)(v23 + 8);
    v26 = *(_BYTE *)(v23 + 16);
    swift_bridgeObjectRetain();
    sub_241307638(v24, v25, v26);
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v25;
    *(_BYTE *)(v22 + 16) = v26;
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    v27 = (_QWORD *)((v22 + 39) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)((v23 + 39) & 0xFFFFFFFFFFFFFFF8);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2413D09B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2412F6D78(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_BYTE *)(v8 + 16));
  swift_bridgeObjectRelease();
  sub_2412F6D78(*(_QWORD *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v8 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v8 + 39) & 0xFFFFFFFFFFFFFFF8) + 16));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2413D0A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  LOBYTE(v8) = *(_BYTE *)(v15 + 16);
  sub_241307638(*(_QWORD *)v15, v17, v8);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_BYTE *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  v18 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  LOBYTE(v8) = *(_BYTE *)(v19 + 16);
  swift_bridgeObjectRetain();
  sub_241307638(v20, v21, v8);
  *(_QWORD *)v18 = v20;
  *(_QWORD *)(v18 + 8) = v21;
  *(_BYTE *)(v18 + 16) = v8;
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  v22 = (_QWORD *)((v18 + 39) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v19 + 39) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2413D0B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  LOBYTE(v8) = *(_BYTE *)(v15 + 16);
  sub_241307638(*(_QWORD *)v15, v17, v8);
  v18 = *(_QWORD *)v14;
  v19 = *(_QWORD *)(v14 + 8);
  v20 = *(_BYTE *)(v14 + 16);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_BYTE *)(v14 + 16) = v8;
  sub_2412F6D78(v18, v19, v20);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v8) = *(_BYTE *)(v22 + 16);
  sub_241307638(*(_QWORD *)v22, v24, v8);
  v25 = *(_QWORD *)v21;
  v26 = *(_QWORD *)(v21 + 8);
  v27 = *(_BYTE *)(v21 + 16);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  *(_BYTE *)(v21 + 16) = v8;
  sub_2412F6D78(v25, v26, v27);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = (_QWORD *)((v21 + 39) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v22 + 39) & 0xFFFFFFFFFFFFFFF8);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2413D0CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_OWORD *)(((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_OWORD *)(((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413D0D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v13) = *(_BYTE *)(v15 + 16);
  v16 = *(_QWORD *)v14;
  v17 = *(_QWORD *)(v14 + 8);
  v18 = *(_BYTE *)(v14 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = v13;
  sub_2412F6D78(v16, v17, v18);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRelease();
  v19 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  v22 = *(_QWORD *)v19;
  v23 = *(_QWORD *)(v19 + 8);
  v24 = *(_BYTE *)(v19 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  sub_2412F6D78(v22, v23, v24);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)((v19 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v20 + 39) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2413D0EAC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)(((v12 + v17) & 0xFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2413D0F5C + 4 * byte_2414C2957[v15]))();
  }
}

void sub_2413D1004(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8)
       + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)+ 39) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_2413D1130()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413D11C4);
}

void sub_2413D1138(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2413D1140);
  JUMPOUT(0x2413D11C4);
}

void sub_2413D1184()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D11C4);
}

void sub_2413D118C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D11C4);
}

uint64_t sub_2413D1194(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x2413D11C4);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x2413D11A0);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t sub_2413D11DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[3];

  v22 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  v1 = sub_2414B3514();
  v2 = sub_2414B3514();
  v3 = sub_2414B3514();
  v4 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD0);
  v5 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BD8);
  v6 = sub_2414B3514();
  sub_2414B3DB4();
  v7 = sub_2414B3514();
  v20 = sub_2414B3514();
  v8 = sub_2414B49B4();
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
  v9 = MEMORY[0x24BDECC60];
  v38[0] = v19;
  v38[1] = MEMORY[0x24BDECC60];
  v10 = MEMORY[0x24BDED308];
  v37[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v38);
  v37[1] = v9;
  v36[0] = MEMORY[0x242695AE8](v10, v2, v37);
  v36[1] = v9;
  v35[0] = MEMORY[0x242695AE8](v10, v3, v36);
  v35[1] = v9;
  v34[0] = MEMORY[0x242695AE8](v10, v4, v35);
  v34[1] = sub_2412C8FC4(&qword_257126BE0, &qword_257126BD0, MEMORY[0x24BDEF370]);
  v33[0] = MEMORY[0x242695AE8](v10, v5, v34);
  v33[1] = sub_2412C8FC4(&qword_257126BE8, &qword_257126BD8, MEMORY[0x24BDF0400]);
  v31 = MEMORY[0x242695AE8](v10, v6, v33);
  v32 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v30[0] = v22;
  v30[1] = v32;
  v29[0] = MEMORY[0x242695AE8](v10, v7, &v31);
  v29[1] = MEMORY[0x242695AE8](v10, v20, v30);
  v29[2] = MEMORY[0x24BDF5138];
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v8, v29);
  v12 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  v25 = v8;
  v26 = v21;
  v27 = v11;
  v28 = v12;
  MEMORY[0x242695A94](255, &v25, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BF0);
  v13 = sub_2414B3514();
  v25 = v8;
  v26 = v21;
  v27 = v11;
  v28 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v15 = MEMORY[0x24BDEFB48];
  v24[0] = OpaqueTypeConformance2;
  v24[1] = sub_2412C8FC4(&qword_257126BF8, &qword_257126BF0, MEMORY[0x24BDEFB48]);
  v16 = MEMORY[0x242695AE8](v10, v13, v24);
  v25 = v13;
  v26 = v16;
  MEMORY[0x242695A94](255, &v25, MEMORY[0x24BDF29A8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v17 = sub_2414B3514();
  v25 = v13;
  v26 = v16;
  v23[0] = swift_getOpaqueTypeConformance2();
  v23[1] = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, v15);
  return MEMORY[0x242695AE8](v10, v17, v23);
}

uint64_t sub_2413D15B4()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2413D1618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  _QWORD v19[2];

  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C10);
  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  v1 = sub_2414B4804();
  v2 = sub_2414B3514();
  v19[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v1);
  v19[1] = MEMORY[0x24BDECC60];
  v3 = MEMORY[0x24BDED308];
  v4 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v19);
  v14 = v2;
  v15 = v4;
  MEMORY[0x242695A94](255, &v14, MEMORY[0x24BDF2F10], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C18);
  v5 = sub_2414B3514();
  v6 = sub_2414B3A9C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  v14 = v2;
  v15 = v4;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v9 = sub_2412C8FC4(qword_257126C20, &qword_257126C18, MEMORY[0x24BDF0960]);
  v18[0] = OpaqueTypeConformance2;
  v18[1] = v9;
  v10 = MEMORY[0x242695AE8](v3, v5, v18);
  v11 = sub_2412C8030(&qword_254382BA0, v7, MEMORY[0x24BDEF420]);
  v14 = v5;
  v15 = v6;
  v16 = v10;
  v17 = v11;
  MEMORY[0x242695A94](255, &v14, MEMORY[0x24BDF2380], 0);
  v14 = v5;
  v15 = v6;
  v16 = v10;
  v17 = v11;
  swift_getOpaqueTypeConformance2();
  v12 = sub_2414B47EC();
  return MEMORY[0x242695AE8](MEMORY[0x24BDF43B0], v12);
}

uint64_t sub_2413D1864()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413CE748);
}

uint64_t sub_2413D1870(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_2413D1884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;

  v0 = sub_2414B38C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B35A4();
  v5 = MEMORY[0x24BDED998];
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D28);
  __swift_allocate_value_buffer(v8, qword_257126B88);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_257126B88);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDEEB68], v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v7[*(int *)(v4 + 20)], v3, v0);
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)v7 = _Q0;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_2412C6A50((uint64_t)v7, v9, (uint64_t (*)(_QWORD))v5);
  *(_OWORD *)(v9 + *(int *)(v8 + 36)) = xmmword_2414C2C20;
  return sub_2412C68F4((uint64_t)v7, (uint64_t (*)(_QWORD))v5);
}

void sub_2413D19D8()
{
  qword_257126BA0 = 0x4028000000000000;
}

void sub_2413D19E8()
{
  qword_257126BA8 = 0x4031000000000000;
}

int64x2_t sub_2413D19F8()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_257126BB0 = (__int128)result;
  return result;
}

void sub_2413D1A10()
{
  qword_257126BC0 = 0x4010000000000000;
}

void sub_2413D1A20()
{
  qword_257126BC8 = 0x4010000000000000;
}

void sub_2413D1A5C()
{
  sub_2413CCAF4();
}

void sub_2413D1A70()
{
  type metadata accessor for NowPlayingQueueSection();
}

void sub_2413D1AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_2413CCF38(v1, v2 + ((v7 + 48) & ~v7), v3, v4, v5, v6);
}

void sub_2413D1AFC()
{
  type metadata accessor for NowPlayingQueueSection();
}

void sub_2413D1B34()
{
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413D1B60()
{
  return sub_2413CB974();
}

void objectdestroy_20Tm()
{
  type metadata accessor for NowPlayingQueueSection();
}

uint64_t sub_2413D1BCC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v5 = v1 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v5, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5 + a1[13]);
  v6 = v5 + a1[14];
  sub_2412C823C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72), *(_BYTE *)(v6 + 73));
  sub_2412C821C(*(_QWORD *)(v5 + a1[15]), *(_BYTE *)(v5 + a1[15] + 8));
  v7 = v5 + a1[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_2413D1CF4()
{
  type metadata accessor for NowPlayingQueueSection();
}

void sub_2413D1D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_2413CCBF4(v1, v2 + ((v7 + 48) & ~v7), v3, v4, v5, v6);
}

uint64_t sub_2413D1D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2413D1DC0()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254384FF8);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 5;
  *(_OWORD *)(v0 + 16) = xmmword_2414BA490;
  *(_QWORD *)(v0 + 32) = &unk_251163578;
  *(_QWORD *)(v0 + 40) = &unk_251163AA8;
  *(_QWORD *)(v0 + 48) = &unk_251163FD8;
  *(_QWORD *)(v0 + 56) = &unk_251164508;
  *(_QWORD *)(v0 + 64) = &unk_251164A38;
  *(_QWORD *)(v0 + 72) = &unk_251164F68;
  *(_QWORD *)(v0 + 80) = &unk_251165498;
  *(_QWORD *)(v0 + 88) = &unk_2511659C8;
  *(_QWORD *)(v0 + 96) = &unk_251165EF8;
  *(_QWORD *)(v0 + 104) = &unk_251166428;
  off_254384F48 = (_UNKNOWN *)v0;
  return result;
}

double sub_2413D1E60()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254384FF8);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 5;
  *(_OWORD *)(v0 + 16) = xmmword_2414BA490;
  *(_QWORD *)(v0 + 32) = &unk_251166958;
  *(_QWORD *)(v0 + 40) = &unk_251166BB8;
  *(_QWORD *)(v0 + 48) = &unk_251166E18;
  *(_QWORD *)(v0 + 56) = &unk_251167078;
  *(_QWORD *)(v0 + 64) = &unk_2511672D8;
  *(_QWORD *)(v0 + 72) = &unk_251167538;
  *(_QWORD *)(v0 + 80) = &unk_251167798;
  *(_QWORD *)(v0 + 88) = &unk_2511679F8;
  *(_QWORD *)(v0 + 96) = &unk_251167C58;
  *(_QWORD *)(v0 + 104) = &unk_251167EB8;
  qword_254384F58 = v0;
  return result;
}

uint64_t sub_2413D1F00@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;

  if ((a1 & 1) != 0)
  {
    if (qword_254384F50 != -1)
      swift_once();
    v4 = (uint64_t *)&off_254384F48;
    v5 = 8;
  }
  else
  {
    if (qword_254384F68 != -1)
      swift_once();
    v4 = &qword_254384F58;
    v5 = 5;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = sub_24132DDD4(v7);
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)(v6 + 16))
    {
      v9 = v6 + 16 * v8;
      v2 = *(_QWORD *)(v9 + 32);
      v7 = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = qword_254384F70;
      swift_bridgeObjectRetain();
      if (v10 == -1)
      {
LABEL_12:
        v11.n128_u64[0] = xmmword_25438E900;
        v12 = sub_24137E4D8(v5, v5, v2, *(float64_t *)&xmmword_25438E8E0, *(float64_t *)&qword_25438E8F0, v11, *((double *)&xmmword_25438E900 + 1));
        v14 = v13;
        v16 = v15;
        v18 = v17;
        swift_bridgeObjectRelease_n();
        v19.n128_u64[0] = xmmword_25438E900;
        v20 = sub_24137E4D8(v5, v5, v7, *(float64_t *)&xmmword_25438E8E0, *(float64_t *)&qword_25438E8F0, v19, *((double *)&xmmword_25438E900 + 1));
        v22 = v21;
        v24 = v23;
        v26 = v25;
        result = swift_bridgeObjectRelease();
        *a2 = v12;
        a2[1] = v14;
        a2[2] = v16;
        a2[3] = v18;
        a2[4] = v20;
        a2[5] = v22;
        a2[6] = v24;
        a2[7] = v26;
        return result;
      }
LABEL_15:
      swift_once();
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_15;
  }
  result = sub_2414B5674();
  __break(1u);
  return result;
}

double sub_2413D20F8@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;
  __int16 v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  char v10;

  sub_2412D5DE0();
  sub_2414B3838();
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 17) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  result = *(double *)&v9;
  *(_OWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 72) = v10;
  return result;
}

uint64_t sub_2413D217C()
{
  sub_2412D5DE0();
  return sub_2414B3844();
}

uint64_t sub_2413D21FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2414B382C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_2413D2238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2413782EC(a1, (uint64_t)v6);
  v7 = sub_2414B382C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
}

void sub_2413D22DC()
{
  __asm { BR              X10 }
}

double sub_2413D2344()
{
  uint64_t v1;

  sub_24144F8F8((uint64_t)&v1);
  return 0.0;
}

double sub_2413D2440()
{
  uint64_t v0;
  double result;
  _BYTE v2[8];
  double v3;

  result = 16.0;
  if (*(unsigned __int8 *)(v0 + 18) - 2 >= 2)
  {
    if (*(_BYTE *)(v0 + 18))
    {
      sub_24144F9F0((uint64_t)v2);
      sub_24144F9F0((uint64_t)v2);
      return v3 + -16.0 + 16.0;
    }
    else
    {
      sub_24144F8F8((uint64_t)v2);
      return 29.5;
    }
  }
  return result;
}

uint64_t sub_2413D2584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  _OWORD v9[2];

  v4 = (_OWORD *)(v2 + *(int *)(a1 + 36));
  v5 = v4[3];
  v8[2] = v4[2];
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v4 + 58);
  v6 = v4[1];
  v8[0] = *v4;
  v8[1] = v6;
  sub_2412FD220((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278(a2);
  return sub_2412FD220((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
}

uint64_t sub_2413D25F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = *(_OWORD *)(v4 + 16);
  v7[0] = *(_OWORD *)v4;
  v7[1] = v5;
  v8 = *(_BYTE *)(v4 + 32);
  sub_2412C8378((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
  sub_2412E1CCC(a2);
  return sub_2412C8378((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
}

uint64_t NowPlayingQueue.init(content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = (int *)type metadata accessor for NowPlayingQueue(0, a2, a3, a3);
  v7 = a4 + v6[9];
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_WORD *)(v7 + 72) = 0;
  v8 = a4 + v6[10];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_BYTE *)(v8 + 32) = 0;
  v9 = (uint64_t *)(a4 + v6[11]);
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_2412F0B40(&qword_25437F7B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
  *v9 = sub_2414B3658();
  v9[1] = v10;
  v11 = (uint64_t *)(a4 + v6[12]);
  _s5QueueCMa();
  sub_2412F0B40(&qword_25437F1A8, v12, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
  *v11 = sub_2414B3658();
  v11[1] = v13;
  return a1();
}

uint64_t type metadata accessor for NowPlayingQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingQueue);
}

uint64_t sub_2413D2788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2414B382C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t NowPlayingQueue.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  ValueMetadata *v62;
  uint64_t v63;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  ValueMetadata *v68;
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  uint64_t v78;
  ValueMetadata *v79;
  uint64_t v80;
  unint64_t v81;

  v66 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v3 + 16))(v6, v5);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  v65[1] = v8;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v8 + 16) = v9;
  *(_QWORD *)(v8 + 24) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, v6, a1);
  v11 = (ValueMetadata *)MEMORY[0x24BEE1328];
  v78 = v9;
  v79 = (ValueMetadata *)MEMORY[0x24BEE1328];
  v12 = MEMORY[0x24BEE1340];
  v80 = v10;
  v81 = MEMORY[0x24BEE1340];
  MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF3908], 0);
  v78 = v9;
  v79 = v11;
  v80 = v10;
  v81 = v12;
  swift_getOpaqueTypeConformance2();
  v13 = sub_2414B3B68();
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDEFE20], v13);
  v78 = MEMORY[0x24BEE4078];
  v79 = (ValueMetadata *)v13;
  v80 = MEMORY[0x24BEE4088];
  v81 = v14;
  v15 = sub_2414B3F88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D88);
  v16 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v17 = sub_2414B3514();
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDF1A30], v15);
  v19 = sub_2412C8FC4(&qword_257126D90, &qword_257126D88, MEMORY[0x24BDEEC88]);
  v77[0] = v18;
  v77[1] = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v77);
  v22 = MEMORY[0x24BDF1028];
  v23 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v76[0] = v21;
  v76[1] = v23;
  v24 = MEMORY[0x242695AE8](v20, v17, v76);
  v78 = v17;
  v79 = (ValueMetadata *)v24;
  v25 = MEMORY[0x24BDF23B8];
  v26 = MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF23B8], 0);
  v78 = v17;
  v79 = (ValueMetadata *)v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v78 = v26;
  v79 = (ValueMetadata *)OpaqueTypeConformance2;
  v28 = MEMORY[0x242695A94](255, &v78, v25, 0);
  v78 = v26;
  v79 = (ValueMetadata *)OpaqueTypeConformance2;
  v29 = swift_getOpaqueTypeConformance2();
  v78 = v28;
  v79 = (ValueMetadata *)v29;
  MEMORY[0x242695A94](255, &v78, v25, 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D98);
  v30 = sub_2414B3514();
  v78 = v28;
  v79 = (ValueMetadata *)v29;
  v31 = swift_getOpaqueTypeConformance2();
  v32 = sub_2412C8FC4(&qword_257126DA0, &qword_257126D98, v22);
  v75[0] = v31;
  v75[1] = v32;
  v33 = MEMORY[0x242695AE8](v20, v30, v75);
  v78 = v30;
  v79 = (ValueMetadata *)v33;
  v34 = MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF26D8], 0);
  v35 = sub_2414B33F4();
  v78 = v30;
  v79 = (ValueMetadata *)v33;
  v36 = swift_getOpaqueTypeConformance2();
  v78 = v34;
  v79 = (ValueMetadata *)v35;
  v37 = MEMORY[0x24BDEC9F8];
  v80 = v36;
  v81 = MEMORY[0x24BDEC9F8];
  v38 = MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF3A80], 0);
  v78 = v34;
  v79 = (ValueMetadata *)v35;
  v80 = v36;
  v81 = v37;
  v39 = swift_getOpaqueTypeConformance2();
  v78 = v38;
  v79 = (ValueMetadata *)v39;
  MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF31A0], 0);
  v40 = sub_2414B3514();
  v41 = sub_2414B3514();
  sub_2414B3DB4();
  v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v43 = sub_2414B3514();
  v44 = sub_2414B3514();
  v45 = sub_2414B3514();
  v78 = v38;
  v79 = (ValueMetadata *)v39;
  v46 = swift_getOpaqueTypeConformance2();
  v47 = MEMORY[0x24BDECC60];
  v74[0] = v46;
  v74[1] = MEMORY[0x24BDECC60];
  v73[0] = MEMORY[0x242695AE8](v20, v40, v74);
  v73[1] = v47;
  v48 = MEMORY[0x242695AE8](v20, v41, v73);
  v49 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v42, MEMORY[0x24BDF1078]);
  v72[0] = v48;
  v72[1] = v49;
  v50 = MEMORY[0x242695AE8](v20, v43, v72);
  v51 = MEMORY[0x24BDF0910];
  v71[0] = v50;
  v71[1] = MEMORY[0x24BDF0910];
  v70[0] = MEMORY[0x242695AE8](v20, v44, v71);
  v70[1] = v51;
  v52 = MEMORY[0x242695AE8](v20, v45, v70);
  v53 = sub_2412DC440();
  v78 = v45;
  v79 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v80 = v52;
  v81 = v53;
  v54 = MEMORY[0x24BDF3908];
  v55 = MEMORY[0x242695A94](255, &v78, MEMORY[0x24BDF3908], 0);
  v56 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
  v78 = v45;
  v79 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v80 = v52;
  v81 = v53;
  v57 = swift_getOpaqueTypeConformance2();
  v58 = sub_2413D4384();
  v78 = v55;
  v79 = (ValueMetadata *)v56;
  v80 = v57;
  v81 = v58;
  MEMORY[0x242695A94](255, &v78, v54, 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126DA8);
  v59 = sub_2414B3514();
  v78 = v55;
  v79 = (ValueMetadata *)v56;
  v80 = v57;
  v81 = v58;
  v60 = swift_getOpaqueTypeConformance2();
  v61 = sub_2412C8FC4(qword_257126DB0, &qword_257126DA8, MEMORY[0x24BDEDC10]);
  v69[0] = v60;
  v69[1] = v61;
  MEMORY[0x242695AE8](v20, v59, v69);
  v67 = sub_2414B35C8();
  v68 = v62;
  v63 = sub_2414B35D4();
  MEMORY[0x242695AE8](MEMORY[0x24BDEDA10], v63);
  sub_2412FBF34((uint64_t)&v67, v63, (uint64_t)&v78);
  swift_release();
  v67 = v78;
  v68 = v79;
  sub_2412EEA1C((uint64_t)&v67, v63, v66);
  return swift_release();
}

uint64_t sub_2413D2E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(_QWORD, _QWORD, _QWORD);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(uint64_t, char *, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, char *, uint64_t);
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, char *, uint64_t);
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t);
  _QWORD v177[3];
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(uint64_t, char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  void (*v269)(_QWORD, _QWORD, _QWORD);
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD v276[2];
  __int128 v277;
  __int128 v278;
  char v279;
  __int128 v280;
  __int128 v281;
  char v282;
  __int128 v283;
  __int128 v284;
  char v285;
  __int128 v286;
  __int128 v287;
  char v288;
  _QWORD v289[2];
  _QWORD v290[2];
  _QWORD v291[2];
  _QWORD v292[2];
  _QWORD v293[2];
  _QWORD v294[2];
  _QWORD v295[2];
  _QWORD v296[4];

  v270 = a2;
  v259 = a1;
  v263 = a5;
  v262 = sub_2414B3544();
  v261 = *(_QWORD *)(v262 - 8);
  MEMORY[0x24BDAC7A8](v262);
  v258 = v7;
  v260 = (char *)v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a3;
  v250 = type metadata accessor for NowPlayingQueue(0, a3, a4, v9);
  v257 = *(void (**)(uint64_t, char *, uint64_t))(v250 - 8);
  v265 = *((_QWORD *)v257 + 8);
  MEMORY[0x24BDAC7A8](v250);
  v268 = (char *)v177 - v10;
  v11 = sub_2414B33F4();
  v266 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v264 = (char *)v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_2414B3B2C();
  v255 = *(_QWORD *)(v256 - 8);
  MEMORY[0x24BDAC7A8](v256);
  v254 = (char *)v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = sub_2414B3BA4();
  v252 = *(_QWORD *)(v253 - 8);
  v14 = MEMORY[0x24BDAC7A8](v253);
  v251 = (char *)v177 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BEE1328];
  v17 = v8;
  v272 = v8;
  *(_QWORD *)&v283 = v8;
  *((_QWORD *)&v283 + 1) = MEMORY[0x24BEE1328];
  v18 = MEMORY[0x24BEE1340];
  v271 = a4;
  *(_QWORD *)&v284 = a4;
  *((_QWORD *)&v284 + 1) = MEMORY[0x24BEE1340];
  MEMORY[0x242695A94](255, &v283, MEMORY[0x24BDF3908], 0, v14);
  *(_QWORD *)&v283 = v17;
  *((_QWORD *)&v283 + 1) = v16;
  *(_QWORD *)&v284 = a4;
  *((_QWORD *)&v284 + 1) = v18;
  swift_getOpaqueTypeConformance2();
  v19 = sub_2414B3B68();
  v200 = v19;
  v198 = MEMORY[0x242695AE8](MEMORY[0x24BDEFE20], v19);
  *(_QWORD *)&v283 = MEMORY[0x24BEE4078];
  *((_QWORD *)&v283 + 1) = v19;
  *(_QWORD *)&v284 = MEMORY[0x24BEE4088];
  *((_QWORD *)&v284 + 1) = v198;
  v20 = sub_2414B3F88();
  v208 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v194 = (char *)v177 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D88);
  v188 = v20;
  v22 = sub_2414B3514();
  v211 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v193 = (char *)v177 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v189 = v22;
  v24 = sub_2414B3514();
  v206 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v196 = (char *)v177 - v26;
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDF1A30], v20, v25);
  v177[2] = v27;
  v28 = sub_2412C8FC4(&qword_257126D90, &qword_257126D88, MEMORY[0x24BDEEC88]);
  v296[0] = v27;
  v296[1] = v28;
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v22, v296);
  v184 = v30;
  v31 = MEMORY[0x24BDF1028];
  v32 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v295[0] = v30;
  v295[1] = v32;
  v33 = MEMORY[0x242695AE8](v29, v24, v295);
  *(_QWORD *)&v283 = v24;
  v34 = v24;
  v178 = v24;
  v179 = v33;
  *((_QWORD *)&v283 + 1) = v33;
  v35 = v33;
  v36 = MEMORY[0x24BDF23B8];
  v37 = MEMORY[0x242695A94](0, &v283, MEMORY[0x24BDF23B8], 0);
  v199 = *(_QWORD *)(v37 - 8);
  v38 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v180 = (char *)v177 - v39;
  *(_QWORD *)&v283 = v34;
  *((_QWORD *)&v283 + 1) = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v283 = v38;
  v41 = v38;
  v186 = v38;
  v187 = OpaqueTypeConformance2;
  *((_QWORD *)&v283 + 1) = OpaqueTypeConformance2;
  v42 = OpaqueTypeConformance2;
  v43 = MEMORY[0x242695A94](0, &v283, v36, 0);
  v205 = *(_QWORD *)(v43 - 8);
  v44 = v43;
  MEMORY[0x24BDAC7A8](v43);
  v185 = (char *)v177 - v45;
  *(_QWORD *)&v283 = v41;
  *((_QWORD *)&v283 + 1) = v42;
  v46 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v283 = v44;
  v47 = v44;
  v181 = v44;
  v182 = v46;
  *((_QWORD *)&v283 + 1) = v46;
  v48 = v46;
  v49 = MEMORY[0x242695A94](0, &v283, v36, 0);
  v202 = *(_QWORD *)(v49 - 8);
  v195 = v49;
  MEMORY[0x24BDAC7A8](v49);
  v191 = (char *)v177 - v50;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D98);
  v51 = sub_2414B3514();
  v221 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)v177 - v52;
  *(_QWORD *)&v283 = v47;
  *((_QWORD *)&v283 + 1) = v48;
  v54 = swift_getOpaqueTypeConformance2();
  v183 = v54;
  v55 = sub_2412C8FC4(&qword_257126DA0, &qword_257126D98, v31);
  v294[0] = v54;
  v294[1] = v55;
  v56 = MEMORY[0x242695AE8](v29, v51, v294);
  *(_QWORD *)&v283 = v51;
  *((_QWORD *)&v283 + 1) = v56;
  v57 = MEMORY[0x242695A94](0, &v283, MEMORY[0x24BDF26D8], 0);
  v218 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v217 = (char *)v177 - v58;
  v222 = v51;
  *(_QWORD *)&v283 = v51;
  v210 = v56;
  *((_QWORD *)&v283 + 1) = v56;
  v59 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v283 = v57;
  *((_QWORD *)&v283 + 1) = v11;
  v60 = MEMORY[0x24BDEC9F8];
  *(_QWORD *)&v284 = v59;
  *((_QWORD *)&v284 + 1) = MEMORY[0x24BDEC9F8];
  v61 = MEMORY[0x242695A94](0, &v283, MEMORY[0x24BDF3A80], 0);
  v207 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v203 = v59;
  v204 = (char *)v177 - v62;
  v219 = v57;
  *(_QWORD *)&v283 = v57;
  v269 = (void (*)(_QWORD, _QWORD, _QWORD))v11;
  *((_QWORD *)&v283 + 1) = v11;
  *(_QWORD *)&v284 = v59;
  *((_QWORD *)&v284 + 1) = v60;
  v63 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v283 = v61;
  *((_QWORD *)&v283 + 1) = v63;
  v64 = MEMORY[0x242695A94](0, &v283, MEMORY[0x24BDF31A0], 0);
  v215 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v212 = (char *)v177 - v65;
  v216 = v66;
  v67 = sub_2414B3514();
  v224 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v209 = (char *)v177 - v68;
  v69 = sub_2414B3514();
  v223 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v220 = (char *)v177 - v70;
  sub_2414B3DB4();
  v71 = sub_2414B3514();
  v230 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v229 = (char *)v177 - v72;
  v73 = sub_2414B3514();
  v233 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v232 = (char *)v177 - v74;
  v75 = sub_2414B3514();
  v248 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v267 = (char *)v177 - v76;
  v213 = v61;
  *(_QWORD *)&v283 = v61;
  v197 = v63;
  *((_QWORD *)&v283 + 1) = v63;
  v77 = swift_getOpaqueTypeConformance2();
  v78 = MEMORY[0x24BDECC60];
  v177[1] = v77;
  v293[0] = v77;
  v293[1] = MEMORY[0x24BDECC60];
  v79 = MEMORY[0x24BDED308];
  v226 = v67;
  v190 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v67, v293);
  v292[0] = v190;
  v292[1] = v78;
  v225 = v69;
  v80 = v69;
  v81 = v53;
  v82 = MEMORY[0x242695AE8](v79, v80, v292);
  v83 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v192 = v82;
  v291[0] = v82;
  v291[1] = v83;
  v231 = v71;
  v84 = MEMORY[0x242695AE8](v79, v71, v291);
  v85 = MEMORY[0x24BDF0910];
  v201 = v84;
  v290[0] = v84;
  v290[1] = MEMORY[0x24BDF0910];
  v234 = v73;
  v214 = MEMORY[0x242695AE8](v79, v73, v290);
  v289[0] = v214;
  v289[1] = v85;
  v86 = MEMORY[0x242695AE8](v79, v75, v289);
  v87 = sub_2412DC440();
  *(_QWORD *)&v283 = v75;
  *((_QWORD *)&v283 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  *(_QWORD *)&v284 = v86;
  *((_QWORD *)&v284 + 1) = v87;
  v88 = MEMORY[0x24BDF3908];
  v89 = MEMORY[0x242695A94](0, &v283, MEMORY[0x24BDF3908], 0);
  v241 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v238 = (char *)v177 - v90;
  v91 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
  v249 = v75;
  *(_QWORD *)&v283 = v75;
  *((_QWORD *)&v283 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v227 = v87;
  v228 = v86;
  *(_QWORD *)&v284 = v86;
  *((_QWORD *)&v284 + 1) = v87;
  v92 = swift_getOpaqueTypeConformance2();
  v93 = sub_2413D4384();
  v246 = v89;
  *(_QWORD *)&v283 = v89;
  v239 = v91;
  *((_QWORD *)&v283 + 1) = v91;
  v235 = v93;
  v236 = v92;
  *(_QWORD *)&v284 = v92;
  *((_QWORD *)&v284 + 1) = v93;
  v94 = MEMORY[0x242695A94](0, &v283, v88, 0);
  v240 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v237 = (char *)v177 - v95;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126DA8);
  v243 = v94;
  v247 = sub_2414B3514();
  v245 = *(_QWORD *)(v247 - 8);
  MEMORY[0x24BDAC7A8](v247);
  v242 = (char *)v177 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v97);
  v244 = (uint64_t)v177 - v98;
  v273 = v272;
  v274 = v271;
  v99 = v270;
  v275 = v270;
  v100 = v194;
  sub_2414B3F7C();
  sub_2414B3964();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254383EE0);
  sub_2413D6340();
  v101 = v193;
  v102 = v188;
  sub_2414B427C();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v100, v102);
  swift_getKeyPath();
  *(_QWORD *)&v283 = 0;
  v103 = v196;
  v104 = v189;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v211 + 8))(v101, v104);
  sub_2414B3E8C();
  v105 = v180;
  v106 = v178;
  sub_2414B41EC();
  (*(void (**)(char *, uint64_t))(v206 + 8))(v103, v106);
  sub_2414B3E68();
  v107 = v250;
  sub_2413D2584(v250, (uint64_t)&v283);
  v277 = v283;
  LOBYTE(v278) = v284;
  *(_WORD *)((char *)&v278 + 1) = *(_WORD *)((char *)&v284 + 1);
  *((_QWORD *)&v278 + 1) = *((_QWORD *)&v284 + 1);
  v279 = v285;
  v280 = v286;
  v281 = v287;
  v282 = v288;
  sub_2413D22DC();
  v108 = v185;
  v109 = v186;
  sub_2414B41EC();
  v110 = v105;
  v111 = v107;
  (*(void (**)(char *, uint64_t))(v199 + 8))(v110, v109);
  sub_2414B3E80();
  sub_2413D2584(v107, (uint64_t)&v283);
  v277 = v283;
  LOWORD(v278) = v284;
  BYTE2(v278) = BYTE2(v284);
  *((_QWORD *)&v278 + 1) = *((_QWORD *)&v284 + 1);
  v279 = v285;
  v280 = v286;
  v281 = v287;
  v282 = v288;
  sub_2413D22DC();
  v112 = v191;
  v113 = v181;
  sub_2414B41EC();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v108, v113);
  v114 = v251;
  sub_2414B3B98();
  v115 = v195;
  sub_2414B4438();
  (*(void (**)(char *, uint64_t))(v252 + 8))(v114, v253);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v112, v115);
  v116 = sub_2414B3E50();
  if (qword_2571208F0 != -1)
    swift_once();
  v117 = qword_257136FF0;
  v118 = v254;
  sub_2414B3B14();
  v119 = v217;
  v120 = v117;
  v121 = v222;
  MEMORY[0x242693B20](v116, v120, 0, v118, v222, v210);
  (*(void (**)(char *, uint64_t))(v255 + 8))(v118, v256);
  (*(void (**)(char *, uint64_t))(v221 + 8))(v81, v121);
  v122 = v264;
  sub_2414B33E8();
  v123 = v204;
  v124 = v219;
  v125 = v269;
  sub_2414B45AC();
  (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v266 + 8))(v122, v125);
  (*(void (**)(char *, uint64_t))(v218 + 8))(v119, v124);
  v127 = v212;
  v126 = v213;
  sub_2414B4414();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v123, v126);
  sub_2414B3E50();
  sub_2413D2584(v111, (uint64_t)&v283);
  v277 = v283;
  LOBYTE(v278) = v284;
  *(_WORD *)((char *)&v278 + 1) = *(_WORD *)((char *)&v284 + 1);
  *((_QWORD *)&v278 + 1) = *((_QWORD *)&v284 + 1);
  v279 = v285;
  v280 = v286;
  v281 = v287;
  v282 = v288;
  sub_24144FEC4((uint64_t)&v277);
  v128 = v209;
  v129 = v216;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v215 + 8))(v127, v129);
  sub_2414B3E68();
  sub_2413D2584(v111, (uint64_t)&v283);
  if (BYTE2(v284) == 2 && qword_2571208E8 != -1)
    swift_once();
  v130 = v220;
  v131 = v226;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v224 + 8))(v128, v131);
  v132 = v229;
  v133 = v225;
  sub_2412F6DCC();
  (*(void (**)(char *, uint64_t))(v223 + 8))(v130, v133);
  v134 = v257;
  v269 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v257 + 2);
  v135 = v268;
  v269(v268, v99, v111);
  v136 = *((unsigned __int8 *)v134 + 80);
  v265 += (v136 + 32) & ~v136;
  v137 = (v136 + 32) & ~v136;
  v266 = v137;
  v264 = (char *)(v136 | 7);
  v138 = swift_allocObject();
  v139 = v111;
  v140 = v271;
  *(_QWORD *)(v138 + 16) = v272;
  *(_QWORD *)(v138 + 24) = v140;
  v141 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v134 + 4);
  v141(v138 + v137, v135, v111);
  v257 = v141;
  v142 = v231;
  v143 = v232;
  sub_2414B454C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v230 + 8))(v132, v142);
  v144 = v268;
  v269(v268, v99, v111);
  v145 = v265;
  v146 = swift_allocObject();
  v147 = v271;
  *(_QWORD *)(v146 + 16) = v272;
  *(_QWORD *)(v146 + 24) = v147;
  v148 = v144;
  v141(v146 + v266, v144, v111);
  v149 = v234;
  sub_2414B41F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v233 + 8))(v143, v149);
  v150 = v270;
  LOBYTE(v283) = *(_BYTE *)(sub_2413D644C(v111) + 16);
  v269(v148, v150, v111);
  v151 = v261;
  v152 = v260;
  v153 = v262;
  (*(void (**)(char *, uint64_t, uint64_t))(v261 + 16))(v260, v259, v262);
  v154 = (v145 + *(unsigned __int8 *)(v151 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
  v155 = swift_allocObject();
  *(_QWORD *)(v155 + 16) = v272;
  *(_QWORD *)(v155 + 24) = v147;
  v156 = v266;
  v157 = v257;
  v257(v155 + v266, v148, v139);
  (*(void (**)(unint64_t, char *, uint64_t))(v151 + 32))(v155 + v154, v152, v153);
  v158 = v238;
  v159 = v249;
  v160 = v267;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v248 + 8))(v160, v159);
  v161 = v270;
  sub_2413D25F4(v139, (uint64_t)&v283);
  v277 = v283;
  v278 = v284;
  v269(v148, v161, v139);
  v162 = swift_allocObject();
  v163 = v271;
  *(_QWORD *)(v162 + 16) = v272;
  *(_QWORD *)(v162 + 24) = v163;
  v157(v162 + v156, v148, v139);
  v165 = v236;
  v164 = v237;
  v166 = v246;
  v167 = v239;
  v168 = v235;
  sub_2414B4564();
  swift_release();
  sub_2412C68C0(v277, *((uint64_t *)&v277 + 1));
  (*(void (**)(char *, uint64_t))(v241 + 8))(v158, v166);
  sub_2414B4A38();
  *(_QWORD *)&v283 = v166;
  *((_QWORD *)&v283 + 1) = v167;
  *(_QWORD *)&v284 = v165;
  *((_QWORD *)&v284 + 1) = v168;
  v169 = swift_getOpaqueTypeConformance2();
  sub_2413D675C();
  v170 = (uint64_t)v242;
  v171 = v243;
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v240 + 8))(v164, v171);
  v172 = sub_2412C8FC4(qword_257126DB0, &qword_257126DA8, MEMORY[0x24BDEDC10]);
  v276[0] = v169;
  v276[1] = v172;
  v173 = v247;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v247, v276);
  v174 = v244;
  sub_2412FBF34(v170, v173, v244);
  v175 = *(void (**)(uint64_t, uint64_t))(v245 + 8);
  v175(v170, v173);
  sub_2412EEA1C(v174, v173, v263);
  return ((uint64_t (*)(uint64_t, uint64_t))v175)(v174, v173);
}

uint64_t sub_2413D4378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413D689C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2413D2E90, a3, a4);
}

unint64_t sub_2413D4384()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25437D6F0;
  if (!qword_25437D6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
    v2 = sub_2413036B4();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25437D6F0);
  }
  return result;
}

uint64_t sub_2413D43E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v29 = a5;
  v7 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - v10;
  v12 = MEMORY[0x24BEE1328];
  v30 = a2;
  v31 = MEMORY[0x24BEE1328];
  v13 = MEMORY[0x24BEE1340];
  v32 = a3;
  v33 = MEMORY[0x24BEE1340];
  v26[2] = MEMORY[0x242695A94](255, &v30, MEMORY[0x24BDF3908], 0, v9);
  v30 = a2;
  v31 = v12;
  v32 = a3;
  v33 = v13;
  v26[1] = swift_getOpaqueTypeConformance2();
  v14 = sub_2414B3B68();
  v27 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v26 - v19;
  v21 = v7;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v28, v7, v18);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23 + v22, v11, v21);
  sub_2414B3B5C();
  MEMORY[0x242695AE8](MEMORY[0x24BDEFE20], v14);
  sub_2412FBF34((uint64_t)v16, v14, (uint64_t)v20);
  v24 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24(v16, v14);
  sub_2412EEA1C((uint64_t)v20, v14, v29);
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, v14);
}

uint64_t sub_2413D45EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v48 = a2;
  v54 = a5;
  v44 = a4;
  v8 = type metadata accessor for NowPlayingQueue(0, a3, a4, a4);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v41 - v9;
  v10 = sub_2414B35BC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(_QWORD *)(a3 - 8);
  v13 = v47;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v17;
  v55 = a3;
  v56 = MEMORY[0x24BEE1328];
  v57 = a4;
  v58 = MEMORY[0x24BEE1340];
  v51 = MEMORY[0x242695A94](0, &v55, MEMORY[0x24BDF3908], 0, v15);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v45 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v52 = (uint64_t)&v41 - v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v23 = v48;
  v22(v17, v48, a3, v20);
  LOBYTE(v55) = sub_2414B35B0() & 1;
  v24 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v25 = v49;
  v26 = v46;
  v27 = v23;
  v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v46, v27, v50);
  v29 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v30 = (v12 + *(unsigned __int8 *)(v25 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v31 = swift_allocObject();
  v32 = v44;
  *(_QWORD *)(v31 + 16) = a3;
  *(_QWORD *)(v31 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v31 + v29, v42, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v30, v26, v28);
  v33 = (uint64_t)v45;
  v34 = MEMORY[0x24BEE1328];
  v35 = MEMORY[0x24BEE1340];
  v36 = v43;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, a3);
  v55 = a3;
  v56 = v34;
  v57 = v32;
  v58 = v35;
  swift_getOpaqueTypeConformance2();
  v38 = v51;
  v37 = v52;
  sub_2412FBF34(v33, v51, v52);
  v39 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v39(v33, v38);
  sub_2412EEA1C(v37, v38, v54);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v37, v38);
}

uint64_t sub_2413D4914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;

  result = sub_2414B35B0();
  if ((result & 1) != 0)
  {
    v8 = type metadata accessor for NowPlayingQueue(0, a3, a4, v7);
    v9 = sub_2413D64B8(v8);
    KeyPath = swift_getKeyPath();
    v11 = swift_getKeyPath();
    swift_retain();
    v12 = sub_24143F304(1, v9, KeyPath, v11);
    MEMORY[0x24BDAC7A8](v12);
    sub_2414B4AC8();
    sub_2414B3328();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413D4A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;

  v4 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  v5 = sub_2413D64B8(v4);
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  swift_retain();
  return sub_24143F304(1, v5, KeyPath, v7);
}

double sub_2413D4A88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  v2 = sub_2414B4648();
  if (qword_2571208E0 != -1)
    swift_once();
  sub_2414B4A44();
  sub_2414B31B4();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  result = *(double *)&v8;
  *(_OWORD *)(a1 + 40) = v8;
  return result;
}

uint64_t sub_2413D4B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  sub_2413D25F4(v4, (uint64_t)&v11);
  v5 = v12;
  sub_2412C68C0(v11, v12);
  v6 = sub_2413D64B8(v4);
  v7 = v5 == 1;
  KeyPath = swift_getKeyPath();
  v9 = swift_getKeyPath();
  swift_retain();
  return sub_24143F304(v7, v6, KeyPath, v9);
}

uint64_t sub_2413D4BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;

  v4 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  v5 = sub_2413D64B8(v4);
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  swift_retain();
  return sub_24143F304(0, v5, KeyPath, v7);
}

uint64_t sub_2413D4C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;

  v4 = type metadata accessor for NowPlayingQueue(0, a3, a4, a4);
  result = sub_2413D644C(v4);
  v6 = *(unsigned __int8 *)(result + 16);
  if ((v6 - 1) >= 3)
  {
    if ((v6 - 4) >= 2)
      sub_2414B3538();
    v7 = sub_2413D64B8(v4);
    KeyPath = swift_getKeyPath();
    v9 = swift_getKeyPath();
    swift_retain();
    return sub_24143F304(0, v7, KeyPath, v9);
  }
  return result;
}

uint64_t sub_2413D4DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  sub_2413D25F4(v4, (uint64_t)&v13);
  v5 = v14;
  sub_2412C68C0(v13, v14);
  v6 = sub_2413D64B8(v4);
  if (v5 == 1)
  {
    KeyPath = swift_getKeyPath();
    v8 = swift_getKeyPath();
    swift_retain();
    return sub_24143F304(1, v6, KeyPath, v8);
  }
  else
  {
    v10 = swift_getKeyPath();
    v11 = swift_getKeyPath();
    swift_retain();
    v12 = sub_24143F304(0, v6, v10, v11);
    MEMORY[0x24BDAC7A8](v12);
    sub_2414B4AC8();
    sub_2414B3328();
    return swift_release();
  }
}

uint64_t sub_2413D4F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;

  v4 = type metadata accessor for NowPlayingQueue(0, a2, a3, a4);
  v5 = sub_2413D64B8(v4);
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  swift_retain();
  return sub_24143F304(0, v5, KeyPath, v7);
}

double sub_2413D4F84@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  uint64_t v5;

  KeyPath = swift_getKeyPath();
  _s5DebugCMa();
  sub_2412F0B40((unint64_t *)&qword_25437F060, 255, (uint64_t (*)(uint64_t))_s5DebugCMa, (uint64_t)&unk_2414C3E98);
  v3 = sub_2414B3658();
  *(_QWORD *)a1 = KeyPath;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_WORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v3;
  *(_QWORD *)(a1 + 88) = v5;
  return result;
}

uint64_t sub_2413D5014()
{
  sub_2414B3880();
  if (qword_257120B88 != -1)
    swift_once();
  sub_2414B4648();
  if (qword_257120B90 != -1)
    swift_once();
  sub_2414B4A44();
  sub_2414B31B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126E38);
  sub_2412C8FC4(&qword_257126E40, &qword_257126E38, MEMORY[0x24BDF4498]);
  sub_2414B439C();
  return swift_release();
}

uint64_t sub_2413D516C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_2413D519C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2413D51AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s5QueueCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_2413D51E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413D5218()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2413D52A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t *v35;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v27 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v35 = a1;
    v13 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)(v10 + 16);
    v15 = *(_QWORD *)(v10 + 24);
    v16 = *(_QWORD *)(v10 + 32);
    v17 = *(_QWORD *)(v10 + 40);
    v18 = *(_QWORD *)(v10 + 48);
    v19 = *(_QWORD *)(v10 + 56);
    v32 = *(_QWORD *)(v10 + 64);
    v33 = *(_BYTE *)(v10 + 72);
    v34 = *(_BYTE *)(v10 + 73);
    sub_2412C6F48(*(_QWORD *)v10, v12, v14, v15, v16, v17, v18, v19, v32, v33, v34);
    *(_QWORD *)v13 = v11;
    *(_QWORD *)(v13 + 8) = v12;
    *(_QWORD *)(v13 + 16) = v14;
    *(_QWORD *)(v13 + 24) = v15;
    *(_QWORD *)(v13 + 32) = v16;
    *(_QWORD *)(v13 + 40) = v17;
    *(_QWORD *)(v13 + 48) = v18;
    *(_QWORD *)(v13 + 56) = v19;
    *(_QWORD *)(v13 + 64) = v32;
    *(_BYTE *)(v13 + 72) = v33;
    *(_BYTE *)(v13 + 73) = v34;
    v20 = (v13 + 81) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v10 + 81) & 0xFFFFFFFFFFFFFFF8;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    LOBYTE(v16) = *(_BYTE *)(v21 + 32);
    sub_2412C72F4(*(_QWORD *)v21, v23, v24, v25, v16);
    *(_QWORD *)v20 = v22;
    *(_QWORD *)(v20 + 8) = v23;
    *(_QWORD *)(v20 + 16) = v24;
    *(_QWORD *)(v20 + 24) = v25;
    *(_BYTE *)(v20 + 32) = v16;
    v26 = v13 + 121;
    v27 = v35;
    v26 &= 0xFFFFFFFFFFFFFFF8;
    v28 = (_QWORD *)((v10 + 121) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v26 = *v28;
    *(_QWORD *)(v26 + 8) = v28[1];
    v29 = (_QWORD *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v29[1] = v30[1];
    swift_retain();
  }
  swift_retain();
  return v27;
}

uint64_t sub_2413D5488(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2412C823C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_BYTE *)(v4 + 72), *(_BYTE *)(v4 + 73));
  sub_2412C68A4(*(_QWORD *)((v4 + 81) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 24), *(_BYTE *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 32));
  swift_release();
  return swift_release();
}

uint64_t sub_2413D5528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  char v29;
  char v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v13 = *(_QWORD *)(v8 + 32);
  v14 = *(_QWORD *)(v8 + 40);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(_QWORD *)(v8 + 56);
  v28 = *(_QWORD *)(v8 + 64);
  v29 = *(_BYTE *)(v8 + 72);
  v30 = *(_BYTE *)(v8 + 73);
  sub_2412C6F48(*(_QWORD *)v8, v10, v11, v12, v13, v14, v15, v16, v28, v29, v30);
  *(_QWORD *)v7 = v9;
  *(_QWORD *)(v7 + 8) = v10;
  *(_QWORD *)(v7 + 16) = v11;
  *(_QWORD *)(v7 + 24) = v12;
  *(_QWORD *)(v7 + 32) = v13;
  *(_QWORD *)(v7 + 40) = v14;
  *(_QWORD *)(v7 + 48) = v15;
  *(_QWORD *)(v7 + 56) = v16;
  *(_QWORD *)(v7 + 64) = v28;
  *(_BYTE *)(v7 + 72) = v29;
  *(_BYTE *)(v7 + 73) = v30;
  v17 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_QWORD *)(v18 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  LOBYTE(v13) = *(_BYTE *)(v18 + 32);
  sub_2412C72F4(*(_QWORD *)v18, v20, v21, v22, v13);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = v22;
  *(_BYTE *)(v17 + 32) = v13;
  v23 = (_QWORD *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2413D56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  char v45;
  char v46;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v13 = *(_QWORD *)(v8 + 32);
  v14 = *(_QWORD *)(v8 + 40);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(_QWORD *)(v8 + 56);
  v44 = *(_QWORD *)(v8 + 64);
  v45 = *(_BYTE *)(v8 + 72);
  v46 = *(_BYTE *)(v8 + 73);
  sub_2412C6F48(*(_QWORD *)v8, v10, v11, v12, v13, v14, v15, v16, v44, v45, v46);
  v17 = *(_QWORD *)v7;
  v18 = *(_QWORD *)(v7 + 8);
  v19 = *(_QWORD *)(v7 + 16);
  v20 = *(_QWORD *)(v7 + 24);
  v21 = *(_QWORD *)(v7 + 32);
  v22 = *(_QWORD *)(v7 + 40);
  v23 = *(_QWORD *)(v7 + 48);
  v24 = *(_QWORD *)(v7 + 56);
  v25 = *(_QWORD *)(v7 + 64);
  v26 = *(_BYTE *)(v7 + 72);
  v27 = *(_BYTE *)(v7 + 73);
  *(_QWORD *)v7 = v9;
  *(_QWORD *)(v7 + 8) = v10;
  *(_QWORD *)(v7 + 16) = v11;
  *(_QWORD *)(v7 + 24) = v12;
  *(_QWORD *)(v7 + 32) = v13;
  *(_QWORD *)(v7 + 40) = v14;
  *(_QWORD *)(v7 + 48) = v15;
  *(_QWORD *)(v7 + 56) = v16;
  *(_QWORD *)(v7 + 64) = v44;
  *(_BYTE *)(v7 + 72) = v45;
  *(_BYTE *)(v7 + 73) = v46;
  sub_2412C823C(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  v28 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = *(_QWORD *)(v29 + 24);
  LOBYTE(v13) = *(_BYTE *)(v29 + 32);
  sub_2412C72F4(*(_QWORD *)v29, v31, v32, v33, v13);
  v34 = *(_QWORD *)v28;
  v35 = *(_QWORD *)(v28 + 8);
  v36 = *(_QWORD *)(v28 + 16);
  v37 = *(_QWORD *)(v28 + 24);
  v38 = *(_BYTE *)(v28 + 32);
  *(_QWORD *)v28 = v30;
  *(_QWORD *)(v28 + 8) = v31;
  *(_QWORD *)(v28 + 16) = v32;
  *(_QWORD *)(v28 + 24) = v33;
  *(_BYTE *)(v28 + 32) = v13;
  sub_2412C68A4(v34, v35, v36, v37, v38);
  v39 = (_QWORD *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)((v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  swift_retain();
  swift_release();
  v39[1] = v40[1];
  v41 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  swift_retain();
  swift_release();
  v41[1] = v42[1];
  return a1;
}

uint64_t sub_2413D5878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v10 = v8[2];
  v11 = v8[3];
  *(_OWORD *)((char *)v7 + 58) = *(_OWORD *)((char *)v8 + 58);
  v7[2] = v10;
  v7[3] = v11;
  v7[1] = v9;
  v12 = ((unint64_t)v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)v13;
  v15 = *(_OWORD *)(v13 + 16);
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_OWORD *)v12 = v14;
  *(_OWORD *)(v12 + 16) = v15;
  v16 = (_OWORD *)(((unint64_t)v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413D5934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v6) = *(_BYTE *)(v7 + 72);
  v10 = *(_BYTE *)(v7 + 73);
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(_QWORD *)(v9 + 16);
  v14 = *(_QWORD *)(v9 + 24);
  v15 = *(_QWORD *)(v9 + 32);
  v16 = *(_QWORD *)(v9 + 40);
  v17 = *(_QWORD *)(v9 + 48);
  v18 = *(_QWORD *)(v9 + 56);
  v19 = *(_QWORD *)(v9 + 64);
  v20 = *(_BYTE *)(v9 + 72);
  v21 = *(_BYTE *)(v9 + 73);
  v22 = *(_OWORD *)(v7 + 16);
  v23 = *(_OWORD *)(v7 + 32);
  v24 = *(_OWORD *)(v7 + 48);
  *(_OWORD *)v9 = *(_OWORD *)v7;
  *(_OWORD *)(v9 + 16) = v22;
  *(_OWORD *)(v9 + 32) = v23;
  *(_OWORD *)(v9 + 48) = v24;
  *(_QWORD *)(v9 + 64) = v8;
  *(_BYTE *)(v9 + 72) = v6;
  *(_BYTE *)(v9 + 73) = v10;
  sub_2412C823C(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v25 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_BYTE *)(v25 + 32);
  v27 = (v9 + 81) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v30 = *(_QWORD *)(v27 + 16);
  v31 = *(_QWORD *)(v27 + 24);
  v32 = *(_BYTE *)(v27 + 32);
  v33 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v25;
  *(_OWORD *)(v27 + 16) = v33;
  *(_BYTE *)(v27 + 32) = v26;
  sub_2412C68A4(v28, v29, v30, v31, v32);
  v34 = (_QWORD *)((v9 + 121) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  swift_release();
  v34[1] = v35[1];
  v36 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  swift_release();
  v36[1] = v37[1];
  return a1;
}

uint64_t sub_2413D5A64(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;
  int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      v13 = v12 - 1;
      if (v13 < 0)
        v13 = -1;
      return (v13 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2413D5AF0 + 4 * byte_2414C2C34[v10]))();
  }
}

void sub_2413D5B88(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 121) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 121) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_2413D5C8C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413D5D14);
}

void sub_2413D5C94(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2413D5C9CLL);
  JUMPOUT(0x2413D5D14);
}

void sub_2413D5CE8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D5D14);
}

void sub_2413D5CF0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D5D14);
}

uint64_t sub_2413D5CF8(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x2413D5D14);
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 <= 0x7FFFFFFE)
      JUMPOUT(0x2413D5D10);
    JUMPOUT(0x2413D5D04);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_2413D5D2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  ValueMetadata *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  uint64_t v56;
  ValueMetadata *v57;
  uint64_t v58;
  unint64_t v59;

  v2 = a1[1];
  v3 = (ValueMetadata *)MEMORY[0x24BEE1328];
  v56 = *a1;
  v1 = v56;
  v57 = (ValueMetadata *)MEMORY[0x24BEE1328];
  v4 = MEMORY[0x24BEE1340];
  v58 = v2;
  v59 = MEMORY[0x24BEE1340];
  MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF3908], 0);
  v56 = v1;
  v57 = v3;
  v58 = v2;
  v59 = v4;
  swift_getOpaqueTypeConformance2();
  v5 = sub_2414B3B68();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDEFE20], v5);
  v56 = MEMORY[0x24BEE4078];
  v57 = (ValueMetadata *)v5;
  v58 = MEMORY[0x24BEE4088];
  v59 = v6;
  v7 = sub_2414B3F88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D88);
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v9 = sub_2414B3514();
  v55[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF1A30], v7);
  v55[1] = sub_2412C8FC4(&qword_257126D90, &qword_257126D88, MEMORY[0x24BDEEC88]);
  v10 = MEMORY[0x24BDED308];
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v55);
  v12 = MEMORY[0x24BDF1028];
  v54[0] = v11;
  v54[1] = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v13 = MEMORY[0x242695AE8](v10, v9, v54);
  v56 = v9;
  v57 = (ValueMetadata *)v13;
  v14 = MEMORY[0x24BDF23B8];
  v15 = MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF23B8], 0);
  v56 = v9;
  v57 = (ValueMetadata *)v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v56 = v15;
  v57 = (ValueMetadata *)OpaqueTypeConformance2;
  v17 = MEMORY[0x242695A94](255, &v56, v14, 0);
  v56 = v15;
  v57 = (ValueMetadata *)OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeConformance2();
  v56 = v17;
  v57 = (ValueMetadata *)v18;
  MEMORY[0x242695A94](255, &v56, v14, 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126D98);
  v19 = sub_2414B3514();
  v56 = v17;
  v57 = (ValueMetadata *)v18;
  v53[0] = swift_getOpaqueTypeConformance2();
  v53[1] = sub_2412C8FC4(&qword_257126DA0, &qword_257126D98, v12);
  v20 = MEMORY[0x242695AE8](v10, v19, v53);
  v56 = v19;
  v57 = (ValueMetadata *)v20;
  v21 = MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF26D8], 0);
  v22 = sub_2414B33F4();
  v56 = v19;
  v57 = (ValueMetadata *)v20;
  v23 = swift_getOpaqueTypeConformance2();
  v56 = v21;
  v57 = (ValueMetadata *)v22;
  v24 = MEMORY[0x24BDEC9F8];
  v58 = v23;
  v59 = MEMORY[0x24BDEC9F8];
  v25 = MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF3A80], 0);
  v56 = v21;
  v57 = (ValueMetadata *)v22;
  v58 = v23;
  v59 = v24;
  v26 = swift_getOpaqueTypeConformance2();
  v56 = v25;
  v57 = (ValueMetadata *)v26;
  MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF31A0], 0);
  v27 = sub_2414B3514();
  v28 = sub_2414B3514();
  sub_2414B3DB4();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v30 = sub_2414B3514();
  v31 = sub_2414B3514();
  v32 = sub_2414B3514();
  v56 = v25;
  v57 = (ValueMetadata *)v26;
  v33 = swift_getOpaqueTypeConformance2();
  v34 = MEMORY[0x24BDECC60];
  v52[0] = v33;
  v52[1] = MEMORY[0x24BDECC60];
  v51[0] = MEMORY[0x242695AE8](v10, v27, v52);
  v51[1] = v34;
  v50[0] = MEMORY[0x242695AE8](v10, v28, v51);
  v50[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v29, MEMORY[0x24BDF1078]);
  v35 = MEMORY[0x242695AE8](v10, v30, v50);
  v36 = MEMORY[0x24BDF0910];
  v49[0] = v35;
  v49[1] = MEMORY[0x24BDF0910];
  v48[0] = MEMORY[0x242695AE8](v10, v31, v49);
  v48[1] = v36;
  v37 = MEMORY[0x242695AE8](v10, v32, v48);
  v38 = sub_2412DC440();
  v56 = v32;
  v57 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v58 = v37;
  v59 = v38;
  v39 = MEMORY[0x24BDF3908];
  v40 = MEMORY[0x242695A94](255, &v56, MEMORY[0x24BDF3908], 0);
  v41 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
  v56 = v32;
  v57 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v58 = v37;
  v59 = v38;
  v42 = swift_getOpaqueTypeConformance2();
  v43 = sub_2413D4384();
  v56 = v40;
  v57 = (ValueMetadata *)v41;
  v58 = v42;
  v59 = v43;
  MEMORY[0x242695A94](255, &v56, v39, 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126DA8);
  v44 = sub_2414B3514();
  v56 = v40;
  v57 = (ValueMetadata *)v41;
  v58 = v42;
  v59 = v43;
  v47[0] = swift_getOpaqueTypeConformance2();
  v47[1] = sub_2412C8FC4(qword_257126DB0, &qword_257126DA8, MEMORY[0x24BDEDC10]);
  MEMORY[0x242695AE8](v10, v44, v47);
  v45 = sub_2414B35D4();
  return MEMORY[0x242695AE8](MEMORY[0x24BDEDA10], v45);
}

ValueMetadata *type metadata accessor for PlayingItemPlaceholder()
{
  return &type metadata for PlayingItemPlaceholder;
}

uint64_t sub_2413D62D4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413D62E4()
{
  qword_257136FD0 = 0x4034000000000000;
}

void sub_2413D62F4()
{
  qword_257136FD8 = 0x4030000000000000;
}

void sub_2413D6304()
{
  qword_257136FE0 = 0x4050000000000000;
}

void sub_2413D6314()
{
  qword_257136FE8 = 0x4030000000000000;
}

void sub_2413D6324()
{
  qword_257136FF0 = 0x4028000000000000;
}

uint64_t sub_2413D6334@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2413D43E8(v2[4], v2[2], v2[3], a1, a2);
}

unint64_t sub_2413D6340()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383ED0;
  if (!qword_254383ED0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EE0);
    v2[0] = MEMORY[0x24BDF3E20];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383ED0);
  }
  return result;
}

uint64_t sub_2413D63A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B3778();
  *a1 = v3;
  return result;
}

uint64_t sub_2413D63CC()
{
  return sub_2414B3784();
}

uint64_t sub_2413D63F0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_24143F304(v2, v3, KeyPath, v5);
}

uint64_t sub_2413D644C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  if (!result)
  {
    type metadata accessor for NowPlayingViewModel.Lifecycle();
    sub_2412F0B40(&qword_25437F7B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2413D64B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  if (!result)
  {
    _s5QueueCMa();
    sub_2412F0B40(&qword_25437F1A8, v3, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2413D6524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413D66FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2413D4B38, a2, a3, a4);
}

uint64_t sub_2413D6534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413D66FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2413D4BF0, a2, a3, a4);
}

uint64_t sub_2413D6540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for NowPlayingQueue(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = sub_2414B3544();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = v4 + v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v13, v5);
  v14 = v13 + *(int *)(v6 + 36);
  sub_2412C823C(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), *(_QWORD *)(v14 + 48), *(_QWORD *)(v14 + 56), *(_QWORD *)(v14 + 64), *(_BYTE *)(v14 + 72), *(_BYTE *)(v14 + 73));
  v15 = v13 + *(int *)(v6 + 40);
  sub_2412C68A4(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_BYTE *)(v15 + 32));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v4 + v12, v10);
  return swift_deallocObject();
}

uint64_t sub_2413D6670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for NowPlayingQueue(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3544() - 8) + 80);
  return sub_2413D4C5C(v4 + v8, v4 + ((v8 + v9 + v10) & ~v10), v5, v6);
}

uint64_t sub_2413D66F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413D66FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2413D4DB0, a2, a3, a4);
}

uint64_t sub_2413D66FC(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingQueue(0, v5, v6, a4) - 8) + 80);
  return a1(v4 + ((v7 + 32) & ~v7), v5, v6);
}

unint64_t sub_2413D675C()
{
  unint64_t result;

  result = qword_257126E48;
  if (!qword_257126E48)
  {
    result = MEMORY[0x242695AE8](&unk_2414C4234, &type metadata for GradientBottomMask);
    atomic_store(result, (unint64_t *)&qword_257126E48);
  }
  return result;
}

uint64_t sub_2413D67A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_2413D67E4(char *a1, uint64_t *a2)
{
  return sub_2413D63F0(a1, a2);
}

uint64_t sub_2413D6808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_2413D4F0C(v4[4], v4[2], v4[3], a4);
}

uint64_t sub_2413D6824@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_2413D6868(char *a1, uint64_t *a2)
{
  return sub_2413D63F0(a1, a2);
}

uint64_t sub_2413D6890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2413D689C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2413D45EC, a3, a4);
}

uint64_t sub_2413D689C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingQueue(0, v6, v7, a4) - 8) + 80);
  return a2(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_2413D6914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_2414B35BC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v8 = type metadata accessor for NowPlayingQueue(0, v2, v1, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v6 + v9) & ~v9;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + v10, v2);
  v11 = v0 + v10 + *(int *)(v8 + 36);
  sub_2412C823C(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), *(_BYTE *)(v11 + 72), *(_BYTE *)(v11 + 73));
  v12 = v0 + v10 + *(int *)(v8 + 40);
  sub_2412C68A4(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_BYTE *)(v12 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413D6A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_2414B35BC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingQueue(0, v1, v2, v6) - 8) + 80);
  return sub_2413D4914(v0 + v4, v0 + ((v5 + v7) & ~v7), v1, v2);
}

uint64_t sub_2413D6AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_2413D4A10(v4[4], v4[2], v4[3], a4);
}

unint64_t sub_2413D6AE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257126E50;
  if (!qword_257126E50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257126E58);
    v2[0] = sub_2412C8FC4(&qword_257126E40, &qword_257126E38, MEMORY[0x24BDF4498]);
    v2[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257126E50);
  }
  return result;
}

uint64_t MarkupParser.Element.name.getter()
{
  uint64_t v0;

  v0 = sub_2413D8BF8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t MarkupParser.Element.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x24BDAC7A8](a1);
  v3 = *(_QWORD *)(v1 + 32);
  (*(void (**)(char *))(v4 + 16))((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_2414B4E58();
  if (*(_QWORD *)(v3 + 16) && (v7 = sub_2412CD2DC(v5, v6), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 32 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MarkupParser.markup.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MarkupParser.entityMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MarkupParser.entityMap.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*MarkupParser.entityMap.modify())(_QWORD, _QWORD)
{
  return CGSizeMake;
}

uint64_t sub_2413D6D40()
{
  uint64_t v0;

  if ((unint64_t)sub_2414B53C8() >> 14 >= *(_QWORD *)(v0 + 24) >> 14)
    return 0;
  sub_2414B53C8();
  return sub_2414B53EC();
}

unint64_t sub_2413D6DC8()
{
  uint64_t v0;
  unint64_t result;

  result = *(_QWORD *)(v0 + 128);
  if (*(_QWORD *)(v0 + 56) >> 14 >= result >> 14)
    return sub_2414B5404();
  __break(1u);
  return result;
}

unint64_t sub_2413D6DEC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  char v10;

  v1 = sub_2413D6DC8() >> 14;
  if (v1 == v2 >> 14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return sub_2413D6DC8();
  }
  v3 = sub_2414B53D4();
  if (sub_2414B53EC() == 32 && v4 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v5 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_6:
    if (v1 != v3 >> 14)
    {
      while (1)
      {
        v3 = sub_2414B53D4();
        if (sub_2414B53EC() == 32 && v8 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = sub_2414B57D0();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
            goto LABEL_17;
        }
        if (v1 == v3 >> 14)
          goto LABEL_7;
      }
    }
    goto LABEL_7;
  }
LABEL_17:
  result = swift_bridgeObjectRelease();
  if (v3 >> 14 >= *(_QWORD *)(v0 + 128) >> 14)
  {
    swift_bridgeObjectRetain();
    sub_2414B53C8();
    v6 = sub_2414B5404();
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_2413D6FE4()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  unint64_t result;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v1 = swift_allocObject();
  v3 = *v0;
  v2 = v0[1];
  *(_QWORD *)(v1 + 16) = *v0;
  v4 = v0[3];
  v39 = v0[2];
  if (sub_2413D73A0() == 35 && v5 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v8 = v0[4];
      v9 = MEMORY[0x24269463C](v3, v2, v39, v4);
      if (!*(_QWORD *)(v8 + 16) || (v11 = sub_2412CD2DC(v9, v10), (v12 & 1) == 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v11);
      swift_bridgeObjectRetain();
      swift_release();
LABEL_20:
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  v14 = sub_2414B53C8();
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v14;
  if (sub_2413D73A0() == 120 && v15 == 0xE100000000000000)
    goto LABEL_12;
  v16 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_17;
  if (sub_2413D73A0() == 88 && v17 == 0xE100000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_17:
    result = sub_2414B53C8();
    *(_QWORD *)(v1 + 16) = result;
    if (v2 >> 14 >= result >> 14)
    {
      swift_bridgeObjectRetain();
      v20 = sub_2414B5404();
      v22 = v21;
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = v20;
      v28 = v22;
      v29 = v24;
      v30 = v26;
      v31 = 16;
LABEL_19:
      v13 = sub_2413D8A4C(v27, v28, v29, v30, v31);
      swift_release();
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_26;
  }
  v18 = sub_2414B57D0();
  result = swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_17;
  if (v2 >> 14 >= v14 >> 14)
  {
    swift_bridgeObjectRetain();
    v32 = sub_2414B5404();
    v34 = v33;
    v36 = v35;
    v38 = v37;
    swift_bridgeObjectRelease();
    v27 = v32;
    v28 = v34;
    v29 = v36;
    v30 = v38;
    v31 = 10;
    goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2413D730C(_QWORD *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = a1[3];
  if (v6)
  {
    if (a1[2] == a4 && v6 == a5 && *a1 >> 16 == a2 >> 16 && a1[1] >> 16 == a3 >> 16)
      return 1;
    else
      return sub_2414B5794() & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_2413D73A0()
{
  swift_beginAccess();
  return sub_2414B53EC();
}

uint64_t sub_2413D740C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_2414B4E40();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24269469C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_2413D7484(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_2414B2B30();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_2412C8030(&qword_257126EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_2414B4C78();
  return sub_2413D7820(a1, v3, v2, &qword_257126EF8, MEMORY[0x24BDCEA98]);
}

unint64_t sub_2413D751C(double a1)
{
  uint64_t v2;

  v2 = sub_2414B58C0();
  return sub_2413D7788(v2, a1);
}

unint64_t sub_2413D7550(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_2414B2A88();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  sub_2412C8030(&qword_257126EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v3 = sub_2414B4C78();
  return sub_2413D7820(a1, v3, v2, &qword_257121D40, MEMORY[0x24BDCDB00]);
}

unint64_t sub_2413D75EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2414B5320();
  return sub_2413D7950(a1, v2);
}

unint64_t sub_2413D761C(uint64_t a1)
{
  uint64_t v2;

  sub_2414B4D68();
  sub_2414B58CC();
  sub_2414B4DD4();
  v2 = sub_2414B58FC();
  swift_bridgeObjectRelease();
  return sub_2413D7A58(a1, v2);
}

unint64_t sub_2413D769C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2414B550C();
  return sub_2413D7BCC(a1, v2);
}

unint64_t sub_2413D76CC(uint64_t a1)
{
  uint64_t v2;

  sub_2414B4D68();
  sub_2414B58CC();
  sub_2414B4DD4();
  v2 = sub_2414B58FC();
  swift_bridgeObjectRelease();
  return sub_2413D7A58(a1, v2);
}

unint64_t sub_2413D7758(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2414B58C0();
  return sub_2413D7C90(a1, v2);
}

unint64_t sub_2413D7788(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2413D7820(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      sub_2412C8030(v22, v21, v23);
      v18 = sub_2414B4CE4();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_2413D7950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_2413D9430();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_2414B532C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_2414B532C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_2413D7A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2414B4D68();
    v8 = v7;
    if (v6 == sub_2414B4D68() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2414B4D68();
          v15 = v14;
          if (v13 == sub_2414B4D68() && v15 == v16)
            break;
          v18 = sub_2414B57D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2413D7BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24133BDA4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x242694D98](v9, a1);
      sub_24133ADE0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2413D7C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_2413D7D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_2413D952C();
  swift_bridgeObjectRetain();
  v7 = sub_2414B4E58();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_2413D809C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_2414B55CC();
  }
LABEL_7:
  v13 = sub_2413D7E1C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_2413D7E1C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2413D809C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2414B4E64();
  v4 = sub_2413D8118(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2413D8118(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_2413D825C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2412E4D5C(v9, 0);
      v12 = sub_2413D8348((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x242694648](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x242694648);
LABEL_9:
      sub_2414B55CC();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x242694648]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2413D825C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_2413D740C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_2413D740C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2414B4E28();
  }
  __break(1u);
  return result;
}

unint64_t sub_2413D8348(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_2413D740C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2414B4E34();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2414B55CC();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_2413D740C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_2414B4E10();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2413D8558(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  _QWORD v13[2];
  unsigned __int8 v14;

  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_2414B55CC();
  }
  result = sub_2413D8628((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_2413D8628(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  unsigned __int8 v30;
  unint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 *v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  unint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned int v45;
  char v46;
  unint64_t v47;
  unsigned __int8 v48;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_2413D740C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_104;
  result = sub_2414B4E28();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_2413D740C(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_2413D740C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_100;
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  result = sub_2414B4E28();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v34 = a6 + 55;
        }
        else
        {
          v33 = 97;
          v34 = 65;
        }
        if (a6 <= 10)
          v35 = a6 + 48;
        else
          v35 = 58;
        if (v19)
        {
          v24 = 0;
          v36 = v19 + 1;
          v37 = result - 1;
          do
          {
            v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                v29 = 0;
                v30 = 1;
                if (v38 < 0x61 || v38 >= v33)
                  return v29 | ((unint64_t)v30 << 32);
                v39 = -87;
              }
              else
              {
                v39 = -55;
              }
            }
            else
            {
              v39 = -48;
            }
            v40 = v24 * (unint64_t)a6;
            if ((v40 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_96;
            v41 = v38 + v39;
            v24 = v40 + v41;
            if (__CFADD__((_DWORD)v40, v41))
              goto LABEL_96;
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          v30 = 0;
          v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v42 = a6 + 87;
      if (a6 > 10)
      {
        v43 = a6 + 55;
      }
      else
      {
        v42 = 97;
        v43 = 65;
      }
      if (a6 <= 10)
        v44 = a6 + 48;
      else
        v44 = 58;
      if (v19)
      {
        v24 = 0;
        while (1)
        {
          v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              v29 = 0;
              v30 = 1;
              if (v45 < 0x61 || v45 >= v42)
                return v29 | ((unint64_t)v30 << 32);
              v46 = -87;
            }
            else
            {
              v46 = -55;
            }
          }
          else
          {
            v46 = -48;
          }
          v47 = v24 * (unint64_t)a6;
          if ((v47 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_96;
          v48 = v45 + v46;
          v24 = v47 + v48;
          if (__CFADD__((_DWORD)v47, v48))
            goto LABEL_96;
          ++v19;
          if (!--result)
            goto LABEL_94;
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    v29 = 0;
    v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 87;
      if (a6 > 10)
      {
        v22 = a6 + 55;
      }
      else
      {
        v21 = 97;
        v22 = 65;
      }
      if (a6 <= 10)
        v23 = a6 + 48;
      else
        v23 = 58;
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              v30 = 1;
              if (v27 < 0x61 || v27 >= v21)
                return v29 | ((unint64_t)v30 << 32);
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v31 = v24 * (unint64_t)a6;
          if ((v31 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_96;
          v32 = v27 + v28;
          v24 = v31 - v32;
          if (v31 < v32)
            goto LABEL_96;
          ++v25;
          if (!--v26)
            goto LABEL_94;
        }
      }
LABEL_95:
      v29 = 0;
      v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_2413D8A4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t result;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;

  if ((unint64_t)(a5 - 37) < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a2 ^ a1) < 0x4000)
    return 0;
  v11 = sub_2413D8558(a1, a2, a3, a4, a5);
  if ((v11 & 0x10000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2413D7D2C(a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    if ((v5 & 0x100000000) != 0)
      return 0;
  }
  else
  {
    LODWORD(v5) = v11;
    if ((v11 & 0x100000000) != 0)
      return 0;
  }
  result = 0;
  if (WORD1(v5) <= 0x10u && (v5 & 0xFFFFF800) != 0xD800)
  {
    if ((v5 & 0xFFFFFF80) == 0)
    {
      if (v5 > 0xFF)
      {
        __break(1u);
        return result;
      }
      v13 = (v5 + 1);
      goto LABEL_12;
    }
LABEL_15:
    v14 = (v5 & 0x3F) << 8;
    v13 = (v14 | (v5 >> 6)) + 33217;
    v15 = (v14 | (v5 >> 6) & 0x3F) << 8;
    v16 = (((v15 | (v5 >> 12) & 0x3F) << 8) | (v5 >> 18)) - 2122219023;
    v17 = (v15 | (v5 >> 12)) + 8487393;
    if (WORD1(v5))
      v17 = v16;
    if (v5 >= 0x800)
      v13 = v17;
LABEL_12:
    v18 = (v13 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v13) >> 3)) & 7)));
    return MEMORY[0x242694648](&v18);
  }
  return result;
}

uint64_t sub_2413D8BF8()
{
  _QWORD *v0;
  uint64_t result;

  if (v0[3])
    return *v0;
  __break(1u);
  return result;
}

uint64_t *sub_2413D8C10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2413D8CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2413D8D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413D8D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413D8DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413D8E50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2413D8ECC + 4 * byte_2414C2F00[v10]))();
  }
}

void sub_2413D8F50(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_2413D9044()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413D90B8);
}

void sub_2413D904C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2413D9054);
  JUMPOUT(0x2413D90B8);
}

void sub_2413D9094()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D90B8);
}

void sub_2413D909C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413D90B8);
}

uint64_t sub_2413D90A4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x2413D90B8);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x2413D90B4);
    JUMPOUT(0x2413D90B0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_2413D90E0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2413D9128(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2413D9170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRetain();
LABEL_3:
      result = swift_bridgeObjectRetain();
      break;
    case 4:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2413D91D8(uint64_t a1)
{
  return sub_2412D8520(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_2413D91F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_2413D9170(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_2413D9268(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_2413D9170(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_2412D8520(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t sub_2413D92F4(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_2412D8520(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_2413D9348(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_2413D9390(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_2413D93E4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_2413D93FC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

uint64_t type metadata accessor for MarkupParser.Parser.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupParser.Parser.State);
}

unint64_t sub_2413D9430()
{
  unint64_t result;

  result = qword_257126EE8;
  if (!qword_257126EE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257126EE8);
  }
  return result;
}

uint64_t sub_2413D946C()
{
  uint64_t v0;

  sub_2412D8520(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_2413D949C(_QWORD *a1)
{
  uint64_t v1;

  return sub_2413D730C(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56)) & 1;
}

uint64_t type metadata accessor for MarkupParser.EntityDecoder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupParser.EntityDecoder);
}

uint64_t sub_2413D94CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413D94F4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413D951C()
{
  return swift_deallocObject();
}

unint64_t sub_2413D952C()
{
  unint64_t result;

  result = qword_257126F00[0];
  if (!qword_257126F00[0])
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, qword_257126F00);
  }
  return result;
}

uint64_t sub_2413D9570()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413D9598(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2413D95DC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413D9650(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryButtonState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryButtonState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void NowPlayingFooterConfiguration.init<A, B>(_:_:compact:regular:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v13 = a3;
  v14 = a4;
  v11 = a2;
  v12 = a5;
  v15 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8[2] = (char *)v8 - v6;
  v7 = sub_2413D9A54();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = &type metadata for NowPlayingButtonID;
  v17 = AssociatedTypeWitness;
  v18 = v7;
  v19 = AssociatedConformanceWitness;
  type metadata accessor for ContentLookupItem();
}

void sub_2413D980C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 216) = (char *)&a9 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 144) = v9;
  *(_QWORD *)(v11 - 136) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 128) = v10;
  *(_QWORD *)(v11 - 120) = AssociatedConformanceWitness;
  type metadata accessor for ContentLookupItem();
}

void sub_2413D98AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  (*(void (**)(uint64_t, uint64_t, double))(v9 + 24))(v10, v9, v12);
  v15 = *(_QWORD *)(v11 - 136);
  *(_QWORD *)(v11 - 96) = *(_QWORD *)(v11 - 144);
  *(_QWORD *)(v11 - 88) = v15;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v10, v9);
  sub_24136DDF0(v11 - 96, (uint64_t)&type metadata for NowPlayingButtonID, (uint64_t)v14);
}

void sub_2413D992C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 - 184);
  (*(void (**)(uint64_t, uint64_t))(v0 + 24))(v2, v0);
  v5 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 144);
  *(_QWORD *)(v3 - 88) = v5;
  (*(void (**)(uint64_t, uint64_t))(v0 + 32))(v2, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4, v2);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(*(_QWORD *)(v3 - 152), v1);
  sub_24136DDF0(v3 - 96, (uint64_t)&type metadata for NowPlayingButtonID, *(_QWORD *)(v3 - 216));
}

void sub_2413D99BC()
{
  ContentLookup.init<A, B>(_:_:)();
}

void sub_2413D99EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 136) = v4;
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v1;
  type metadata accessor for ContentLookup2();
}

uint64_t sub_2413D9A08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  MEMORY[0x242695AE8](&protocol conformance descriptor for ContentLookup2<A, B, C>, a1);
  v4 = *(_QWORD **)(v3 - 176);
  *v4 = *(_QWORD *)(v3 - 168);
  v4[1] = v2;
  v5 = *(_QWORD *)(v3 - 160);
  v4[2] = v1;
  v4[3] = v5;
  v4[4] = v2;
  v4[5] = v1;
  return swift_retain();
}

unint64_t sub_2413D9A54()
{
  unint64_t result;

  result = qword_257126F88;
  if (!qword_257126F88)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingButtonID, &type metadata for NowPlayingButtonID);
    atomic_store(result, (unint64_t *)&qword_257126F88);
  }
  return result;
}

void NowPlayingFooterConfiguration.init<A, B, C>(_:_:_:compact:regular:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[10];
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v18 = a4;
  v19 = a5;
  v16 = a3;
  v13[7] = a2;
  v20 = a1;
  v17 = a7;
  v13[5] = a10;
  v13[6] = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13[9] = (char *)v13 - v11;
  v12 = sub_2413D9A54();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21 = &type metadata for NowPlayingButtonID;
  v22 = AssociatedTypeWitness;
  v23 = v12;
  v24 = AssociatedConformanceWitness;
  type metadata accessor for ContentLookupItem();
}

void sub_2413D9B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 256) = (char *)&a9 - v13;
  *(_QWORD *)(v12 - 304) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v12 - 296) = (char *)&a9 - v15;
  v17 = v16;
  *(_QWORD *)(v12 - 184) = v16;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v12 - 288) = AssociatedConformanceWitness;
  *(_QWORD *)(v12 - 168) = v11;
  *(_QWORD *)(v12 - 160) = v17;
  *(_QWORD *)(v12 - 152) = v10;
  *(_QWORD *)(v12 - 144) = AssociatedConformanceWitness;
  type metadata accessor for ContentLookupItem();
}

void sub_2413D9C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 192) = (char *)&a9 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v12 - 320) = v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v12 - 168) = v10;
  *(_QWORD *)(v12 - 160) = AssociatedTypeWitness;
  *(_QWORD *)(v12 - 152) = v9;
  *(_QWORD *)(v12 - 144) = AssociatedConformanceWitness;
  type metadata accessor for ContentLookupItem();
}

void sub_2413D9D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v12 - 312) = (char *)&a9 - v14;
  (*(void (**)(uint64_t, uint64_t, double))(v11 + 24))(v9, v11, v13);
  v16 = *(_QWORD *)(v12 - 160);
  *(_QWORD *)(v12 - 104) = *(_QWORD *)(v12 - 168);
  *(_QWORD *)(v12 - 96) = v16;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v9, v11);
  sub_24136DDF0(v12 - 104, v10, (uint64_t)v15);
}

void sub_2413D9D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 304);
  (*(void (**)(uint64_t, uint64_t))(v0 + 24))(v3, v0);
  v4 = *(_QWORD *)(v2 - 160);
  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 168);
  *(_QWORD *)(v2 - 96) = v4;
  (*(void (**)(uint64_t, uint64_t))(v0 + 32))(v3, v0);
  sub_24136DDF0(v2 - 104, v1, *(_QWORD *)(v2 - 192));
}

void sub_2413D9DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 - 280);
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 272);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v5, v3);
  v6 = *(_QWORD *)(v2 - 160);
  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 168);
  *(_QWORD *)(v2 - 96) = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v5, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 - 320) - 8) + 8))(*(_QWORD *)(v2 - 176));
  sub_24136DDF0(v2 - 104, (uint64_t)&type metadata for NowPlayingButtonID, *(_QWORD *)(v2 - 256));
}

void sub_2413D9EB4()
{
  ContentLookup.init<A, B, C>(_:_:_:)();
}

void sub_2413D9EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 - 168) = v6;
  *(_QWORD *)(v8 - 160) = v2;
  *(_QWORD *)(v8 - 152) = v7;
  *(_QWORD *)(v8 - 144) = v0;
  *(_QWORD *)(v8 - 136) = v3;
  *(_QWORD *)(v8 - 128) = v5;
  *(_QWORD *)(v8 - 120) = v4;
  *(_QWORD *)(v8 - 112) = v1;
  type metadata accessor for ContentLookup3();
}

uint64_t sub_2413D9F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  MEMORY[0x242695AE8](&protocol conformance descriptor for ContentLookup3<A, B, C, D>, a1);
  v4 = *(_QWORD **)(v3 - 216);
  *v4 = *(_QWORD *)(v3 - 208);
  v4[1] = v2;
  v5 = *(_QWORD *)(v3 - 200);
  v4[2] = v1;
  v4[3] = v5;
  v4[4] = v2;
  v4[5] = v1;
  return swift_retain();
}

uint64_t sub_2413D9F68@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  v35 = a3;
  v6 = *(_QWORD *)(a2 + 24);
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - v10;
  v13 = *(_QWORD *)(v12 + 16);
  v31 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - v18;
  v20 = sub_2414B3A90();
  v33 = *(_QWORD *)(v20 - 8);
  v34 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v30 - v21;
  if (*a1)
  {
    v23 = v3 + *(int *)(a2 + 52);
    v24 = *(_QWORD *)(a2 + 40);
    sub_2412FBF34(v23, v6, (uint64_t)v11);
    sub_2412EEA1C((uint64_t)v11, v6, (uint64_t)v8);
    v25 = *(_QWORD *)(a2 + 32);
    sub_2412F1584((uint64_t)v8, v13, v6);
    v26 = *(void (**)(char *, uint64_t))(v32 + 8);
    v26(v8, v6);
    v26(v11, v6);
  }
  else
  {
    v25 = *(_QWORD *)(a2 + 32);
    sub_2412FBF34(v3, v13, (uint64_t)v19);
    sub_2412EEA1C((uint64_t)v19, v13, (uint64_t)v16);
    v24 = *(_QWORD *)(a2 + 40);
    sub_24132F340((uint64_t)v16, v13);
    v27 = *(void (**)(char *, uint64_t))(v31 + 8);
    v27(v16, v13);
    v27(v19, v13);
  }
  v36[0] = v25;
  v36[1] = v24;
  v28 = v34;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v34, v36);
  sub_2412EEA1C((uint64_t)v22, v28, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v22, v28);
}

uint64_t NowPlayingFooterContent.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  __int128 v21;
  uint64_t KeyPath;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD v30[2];
  uint64_t v31;
  ValueMetadata *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  v27 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126F90);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_2414B3514();
  v6 = sub_2414B3A90();
  v24 = sub_2413DA404();
  v23 = sub_2413D9A54();
  v31 = v25;
  v32 = &type metadata for NowPlayingButtonID;
  v33 = v6;
  v34 = v24;
  v35 = v23;
  v7 = sub_2414B4954();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - v11;
  v13 = *((_QWORD *)v2 + 2);
  v21 = *v2;
  v31 = v21;
  KeyPath = swift_getKeyPath();
  v14 = swift_allocObject();
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = v15;
  *(_OWORD *)(v14 + 32) = v21;
  *(_QWORD *)(v14 + 48) = v13;
  v16 = sub_24133D09C();
  v30[0] = v15;
  v30[1] = v16;
  swift_bridgeObjectRetain_n();
  swift_retain();
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v30);
  v29[0] = MEMORY[0x24BDF4610];
  v29[1] = v17;
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v6, v29);
  sub_2414B493C();
  v28 = v20;
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v7, &v28);
  sub_2412FBF34((uint64_t)v9, v7, (uint64_t)v12);
  v18 = *(void (**)(char *, uint64_t))(v26 + 8);
  v18(v9, v7);
  sub_2412EEA1C((uint64_t)v12, v7, v27);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v7);
}

unint64_t sub_2413DA404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257126F98[0];
  if (!qword_257126F98[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126F90);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, qword_257126F98);
  }
  return result;
}

uint64_t sub_2413DA450@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  ValueMetadata *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v23 = a3;
  v22 = a2;
  v27 = a6;
  v24 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = sub_2414B3514();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_2414B3A90();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - v12;
  v15 = *a1;
  v14 = a1[1];
  if ((v15 != 0x726563617073 || v14 != 0xE600000000000000) && (sub_2414B57D0() & 1) == 0)
  {
    v37 = v22;
    v38 = v23;
    v35 = v15;
    v36 = v14;
    v17 = sub_2413D9A54();
    v31 = &type metadata for NowPlayingButtonID;
    v32 = a4;
    v33 = v17;
    v34 = a5;
    v21 = a5;
    type metadata accessor for ContentLookup();
  }
  v31 = 0;
  LOBYTE(v32) = 1;
  v16 = sub_24133D09C();
  v28[0] = a5;
  v28[1] = v16;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v28);
  sub_24132F340((uint64_t)&v31, MEMORY[0x24BDF4638]);
  v18 = sub_24133D09C();
  v30[0] = a5;
  v30[1] = v18;
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v30);
  v29[0] = MEMORY[0x24BDF4610];
  v29[1] = v19;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v11, v29);
  sub_2412EEA1C((uint64_t)v13, v11, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v11);
}

uint64_t sub_2413DA810()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413DA83C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2413DA450(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t sub_2413DA84C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413DA884(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2413DA960 + 4 * byte_2414C3080[v17 - 1]))();
}

void sub_2413DA9DC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for NowPlayingFooterConfiguration()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2413DABEC()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2413DAC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_2413DAC54(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2413DACB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for NowPlayingFooterContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingFooterContent);
}

uint64_t sub_2413DAD00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[2];
  _QWORD v10[7];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126F90);
  v3 = sub_2414B3514();
  v4 = sub_2414B3A90();
  v10[2] = v2;
  v10[3] = &type metadata for NowPlayingButtonID;
  v10[4] = v4;
  v10[5] = sub_2413DA404();
  v10[6] = sub_2413D9A54();
  v5 = sub_2414B4954();
  v10[0] = v1;
  v10[1] = sub_24133D09C();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v10);
  v9[0] = MEMORY[0x24BDF4610];
  v9[1] = v6;
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v4, v9);
  return MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v5, &v8);
}

void sub_2413DADF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2414B5494();
    sub_2412CB438();
    sub_2412C8030((unint64_t *)&qword_254381568, (uint64_t (*)(uint64_t))sub_2412CB438, MEMORY[0x24BEE5BD8]);
    sub_2414B50BC();
    v1 = v26;
    v25 = v27;
    v2 = v28;
    v3 = v29;
    v4 = v30;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v6 = ~v5;
    v7 = -v5;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v2 = v6;
    v3 = 0;
  }
  v23 = v2;
  v24 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_2414B54E8())
    goto LABEL_36;
  sub_2412CB438();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v9 = v31;
  swift_unknownObjectRelease();
  v10 = v3;
  v11 = v4;
  if (!v31)
    goto LABEL_36;
  while (1)
  {
    v16 = objc_msgSend(v9, sel_session, v23);
    v17 = objc_msgSend(v16, sel_role);

    v18 = sub_2414B4D68();
    v20 = v19;
    if (v18 == sub_2414B4D68() && v20 == v21)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    v22 = sub_2414B57D0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_36;

    v3 = v10;
    v4 = v11;
    if (v1 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v4)
      break;
    v11 = (v4 - 1) & v4;
    v12 = __clz(__rbit64(v4)) | (v3 << 6);
    v10 = v3;
LABEL_29:
    v9 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    if (!v9)
      goto LABEL_36;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v24)
    goto LABEL_36;
  v14 = *(_QWORD *)(v25 + 8 * v13);
  v10 = v3 + 1;
  if (v14)
    goto LABEL_28;
  v10 = v3 + 2;
  if (v3 + 2 >= v24)
    goto LABEL_36;
  v14 = *(_QWORD *)(v25 + 8 * v10);
  if (v14)
    goto LABEL_28;
  v10 = v3 + 3;
  if (v3 + 3 >= v24)
    goto LABEL_36;
  v14 = *(_QWORD *)(v25 + 8 * v10);
  if (v14)
    goto LABEL_28;
  v10 = v3 + 4;
  if (v3 + 4 >= v24)
    goto LABEL_36;
  v14 = *(_QWORD *)(v25 + 8 * v10);
  if (v14)
    goto LABEL_28;
  v10 = v3 + 5;
  if (v3 + 5 >= v24)
    goto LABEL_36;
  v14 = *(_QWORD *)(v25 + 8 * v10);
  if (v14)
  {
LABEL_28:
    v11 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_29;
  }
  v15 = v3 + 6;
  while (v24 != v15)
  {
    v14 = *(_QWORD *)(v25 + 8 * v15++);
    if (v14)
    {
      v10 = v15 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_2413C648C();
}

uint64_t sub_2413DB18C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  return swift_release();
}

uint64_t sub_2413DB1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v17 = a1;
  v18 = a3;
  v6 = sub_2414B2F44();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_241302648;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412CBF8C;
  aBlock[3] = &block_descriptor_11;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend(v9, sel_addObserverForName_object_queue_usingBlock_, v17, v18, v10, v14);
  _Block_release(v14);

  result = swift_getObjectType();
  a4[3] = result;
  *a4 = v15;
  return result;
}

uint64_t sub_2413DB3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_2412E4960(v4, (uint64_t)v9);
      v5 = objc_msgSend(v3, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      objc_msgSend(v5, sel_removeObserver_, sub_2414B57C4());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v6 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel__scenePhase;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2413DB500()
{
  return type metadata accessor for HostedScenePhaseModel();
}

uint64_t assignWithCopy for HostedScenePhaseSupport(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2412D0590();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2412C8C2C();
  return a1;
}

uint64_t assignWithTake for HostedScenePhaseSupport(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2412C8C2C();
  return a1;
}

uint64_t sub_2413DB5A8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  return swift_release();
}

uint64_t sub_2413DB614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = sub_2414B2F44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  sub_2414B2E48();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_2413DB71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_2413DB1F0(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_2413DB724(uint64_t a1, void (*a2)(_OWORD *__return_ptr, _QWORD, char *))
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v13[2];
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_2412FFBBC(0, v2, 0);
    v3 = v14;
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381500);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (char *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v9 = *(_QWORD *)(v7 + 72);
    do
    {
      a2(v13, *(_QWORD *)v8, &v8[*(int *)(v6 + 48)]);
      v14 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2412FFBBC(v10 > 1, v11 + 1, 1);
        v3 = v14;
      }
      v8 += v9;
      *(_QWORD *)(v3 + 16) = v11 + 1;
      sub_2412D8D3C(v13, (_OWORD *)(v3 + 32 * v11 + 32));
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_2413DB840()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2413DB864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2414B2F44();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_2413DB8DC(_BYTE *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  char v8;
  char v9;
  char v10;
  char v11;
  const char *v12;
  void *v13;

  v8 = a5 & 1;
  v9 = a3 & 1;
  sub_2412C7080(a2, a3 & 1);
  v10 = sub_2412F9C24(a2, v9);
  sub_2412C821C(a2, v9);
  a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = v10 & 1;
  if ((v10 & 1) != 0)
    objc_msgSend(a1, sel_addSublayer_, *(_QWORD *)&a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer]);
  else
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer], sel_removeFromSuperlayer);
  sub_2412C7080(a4, v8);
  v11 = sub_2412F9C24(a4, v8);
  sub_2412C821C(a4, v8);
  a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = v11 & 1;
  if ((v11 & 1) != 0)
  {
    v12 = sel_addSublayer_;
    v13 = a1;
  }
  else
  {
    v12 = sel_removeFromSuperlayer;
    v13 = *(void **)&a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer];
  }
  return objc_msgSend(v13, v12, *(_QWORD *)&a1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer]);
}

char *sub_2413DB9FC()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v1 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer;
  v2 = objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.ColorAdjustmentsLayer()), sel_init);

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  v5 = (char *)objc_msgSendSuper2(&v9, sel_init);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer];
  v7 = v5;
  objc_msgSend(v7, sel_addSublayer_, v6);
  objc_msgSend(v7, sel_addSublayer_, *(_QWORD *)&v7[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer]);

  return v7;
}

id sub_2413DBB14(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v3 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer;
  v4 = objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.ColorAdjustmentsLayer()), sel_init);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_2414B57C4();
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  v8 = objc_msgSendSuper2(&v10, sel_initWithLayer_, v7);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

id sub_2413DBC5C()
{
  char *v0;
  void *v1;
  void *v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  objc_msgSendSuper2(&v4, sel_layoutSublayers);
  v1 = (void *)objc_opt_self();
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer], sel_setFrame_, sub_2413DBD80());
  v2 = *(void **)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);
  return objc_msgSend(v1, sel_commit);
}

double sub_2413DBD80()
{
  void *v0;
  CGRect v2;
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v2);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v3);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v4);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v5);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v6);
  return 0.0;
}

id sub_2413DBE38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2413DBEA4()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v1, sel_setAllowsInPlaceFiltering_, 1);
  __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2414B72B0;
  v3 = v1;
  v4 = sub_2413DD458();
  *(_QWORD *)(v2 + 56) = sub_2412CC884(0, &qword_254381570);
  *(_QWORD *)(v2 + 32) = v4;
  v5 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setFilters_, v5);

  return v3;
}

void sub_2413DC014()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  if (qword_2543846C8 != -1)
    swift_once();
  v0 = (id)qword_25438E910;
  v1 = (void *)sub_2414B4D44();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_withConfiguration_, v1, v0, 0);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_CGImage);

    if (v3)
    {
      qword_2571270A0 = (uint64_t)v3;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2413DC114()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super *v3;
  char *v4;
  objc_super v5;
  objc_super v6;
  objc_super v7;
  objc_super v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  objc_super v26[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29121ColorAdjustmentsLayer_dimmingMatrix];
  *(_OWORD *)v2 = xmmword_2414C32E0;
  *((_OWORD *)v2 + 1) = xmmword_2414C32F0;
  *((_OWORD *)v2 + 2) = xmmword_2414C3300;
  *((_OWORD *)v2 + 3) = xmmword_2414C3310;
  *((_OWORD *)v2 + 4) = xmmword_2414BDDF0;
  v3 = (objc_super *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29121ColorAdjustmentsLayer_saturationMatrix];
  v4 = v0;
  CAColorMatrixMakeSaturation();
  v5 = v26[2];
  v6 = v26[3];
  v7 = v26[4];
  v8 = v26[5];
  *v3 = v26[1];
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v8;

  v26[0].receiver = v4;
  v26[0].super_class = ObjectType;
  v9 = -[objc_super init](v26, sel_init);
  v10 = *MEMORY[0x24BDE5C48];
  v11 = v9;
  objc_msgSend(v11, sel_setType_, v10);
  v12 = qword_257120908;
  v13 = v11;
  if (v12 != -1)
    swift_once();
  sub_2413DC4D0(qword_2571270A8);
  v14 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setColors_, v14);

  v15 = qword_257120910;
  v16 = v13;
  if (v15 != -1)
    swift_once();
  sub_2412CC884(0, &qword_2543843E8);
  v17 = (void *)sub_2414B4EB8();
  objc_msgSend(v16, sel_setLocations_, v17);

  v18 = qword_257120918;
  v19 = v16;
  if (v18 != -1)
    swift_once();
  sub_2412CC884(0, &qword_257127178);
  v20 = (void *)sub_2414B4EB8();
  objc_msgSend(v19, sel_setInterpolations_, v20);

  __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2414B72B0;
  v22 = v19;
  v23 = sub_2413DC700();
  *(_QWORD *)(v21 + 56) = sub_2412CC884(0, &qword_254381570);
  *(_QWORD *)(v21 + 32) = v23;
  v24 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setFilters_, v24);

  return v22;
}

uint64_t sub_2413DC408(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  int *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_2413BEE70(0, v2, 0);
    result = v8;
    v4 = (int *)(a1 + 32);
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 24);
      if (v5 >= v7 >> 1)
      {
        sub_2413BEE70(v7 > 1, v5 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v5 + 1;
      *(_DWORD *)(result + 4 * v5 + 32) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_2413DC4D0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2414B56C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_2412FFBBC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x242694E34](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2412FFBBC(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2412FFBBC(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_2412D8D3C(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2412FFBBC(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_2412FFBBC(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_2412D8D3C(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

id sub_2413DC700()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[5];

  CAColorMatrixConcat();
  sub_2414B4D68();
  v0 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v1 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithType_, v1);

  v11[0] = v6;
  v11[1] = v7;
  v11[2] = v8;
  v11[3] = v9;
  v11[4] = v10;
  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v11);
  v4 = (void *)sub_2414B4D44();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  return v2;
}

void sub_2413DC9AC()
{
  swift_unknownObjectRetain();
  sub_2414B544C();
  swift_unknownObjectRelease();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2413DCA08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + 24) = v2;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 40) = v4;
  sub_2412C7080(v1, v2);
  sub_2412C7080(v3, v4);
  return sub_2414B31A8();
}

uint64_t sub_2413DCAB0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2414BE320;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_blackColor);
  v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.54);

  v4 = objc_msgSend(v3, sel_CGColor);
  *(_QWORD *)(v0 + 32) = v4;
  v5 = objc_msgSend(v1, sel_blackColor);
  v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, 0.0);

  v7 = objc_msgSend(v6, sel_CGColor);
  *(_QWORD *)(v0 + 40) = v7;
  v8 = objc_msgSend(v1, sel_blackColor);
  v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 1.0);

  v10 = objc_msgSend(v9, sel_CGColor);
  *(_QWORD *)(v0 + 48) = v10;
  result = sub_2414B4EDC();
  qword_2571270A8 = v0;
  return result;
}

uint64_t sub_2413DCC40()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2414BE320;
  sub_2412CC884(0, &qword_2543843E8);
  *(_QWORD *)(v0 + 32) = sub_2414B5308();
  *(_QWORD *)(v0 + 40) = sub_2414B5308();
  *(_QWORD *)(v0 + 48) = sub_2414B5308();
  result = sub_2414B4EDC();
  qword_2571270B0 = v0;
  return result;
}

uint64_t sub_2413DCCE4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2414BE330;
  v1 = (void *)*MEMORY[0x24BDE5D28];
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_functionWithName_, v3);

  *(_QWORD *)(v0 + 32) = v4;
  v5 = (id)*MEMORY[0x24BDE5D18];
  v6 = objc_msgSend(v2, sel_functionWithName_, v5);

  *(_QWORD *)(v0 + 40) = v6;
  result = sub_2414B4EDC();
  qword_2571270B8 = v0;
  return result;
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.getter()
{
  return sub_2413183E0((void (*)(void))sub_2413DCDEC);
}

unint64_t sub_2413DCDEC()
{
  unint64_t result;

  result = qword_2571270C0;
  if (!qword_2571270C0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C346C, &type metadata for NowPlayingBackgroundEffectBlurEnabledKey);
    atomic_store(result, (unint64_t *)&qword_2571270C0);
  }
  return result;
}

uint64_t sub_2413DCE30@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413DCDEC, a1);
}

uint64_t sub_2413DCE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413DCDEC);
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.setter(uint64_t a1)
{
  return sub_2413DCF6C(a1, (void (*)(void))sub_2413DCDEC);
}

uint64_t (*MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_2413DCDEC();
  sub_2414B3838();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_2413DCECC;
}

uint64_t sub_2413DCECC(uint64_t a1)
{
  return sub_2413DD018(a1);
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.getter()
{
  return sub_2413183E0((void (*)(void))sub_2413DCEEC);
}

unint64_t sub_2413DCEEC()
{
  unint64_t result;

  result = qword_2571270C8;
  if (!qword_2571270C8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C3434, &type metadata for NowPlayingBackgroundColorAdjustmentEnabledKey);
    atomic_store(result, (unint64_t *)&qword_2571270C8);
  }
  return result;
}

uint64_t sub_2413DCF30@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413DCEEC, a1);
}

uint64_t sub_2413DCF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413DCEEC);
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.setter(uint64_t a1)
{
  return sub_2413DCF6C(a1, (void (*)(void))sub_2413DCEEC);
}

uint64_t sub_2413DCF6C(uint64_t a1, void (*a2)(void))
{
  a2();
  return sub_2414B3844();
}

uint64_t (*MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_2413DCEEC();
  sub_2414B3838();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_2413DD00C;
}

uint64_t sub_2413DD00C(uint64_t a1)
{
  return sub_2413DD018(a1);
}

uint64_t sub_2413DD018(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_2414B3844();
}

uint64_t sub_2413DD044@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413DCDEC, a1);
}

uint64_t sub_2413DD058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413DCDEC);
}

uint64_t sub_2413DD06C()
{
  return 0;
}

uint64_t sub_2413DD07C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2413DCEEC, a1);
}

uint64_t sub_2413DD090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2413DCEEC);
}

uint64_t sub_2413DD0A4()
{
  return 0;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.ColorAdjustmentsLayer()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundColorAdjustmentEnabledKey()
{
  return &type metadata for NowPlayingBackgroundColorAdjustmentEnabledKey;
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundEffectBlurEnabledKey()
{
  return &type metadata for NowPlayingBackgroundEffectBlurEnabledKey;
}

uint64_t destroy for NowPlayingArtworkBackgroundEffect(uint64_t a1)
{
  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_2412C821C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_2412C7080(v6, v2);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_2412C7080(v8, v2);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v2;
  sub_2412C821C(v9, v10);
  return a1;
}

uint64_t assignWithTake for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_2412C821C(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtworkBackgroundEffect(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtworkBackgroundEffect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2413DD330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413DD340()
{
  uint64_t v0;

  sub_2412C821C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_2412C821C(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

id sub_2413DD374(_BYTE *a1)
{
  uint64_t v1;

  return sub_2413DB8DC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

void sub_2413DD394()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v1 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer()), sel_init);
  v2 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_colorAdjustmentLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.ColorAdjustmentsLayer()), sel_init);

  sub_2414B5674();
  __break(1u);
}

id sub_2413DD458()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  sub_2414B4D68();
  v0 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v1 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithType_, v1);

  if (qword_257120900 != -1)
    swift_once();
  v3 = (id)qword_2571270A0;
  v4 = (void *)sub_2414B4D44();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  v5 = (void *)sub_2414B4F84();
  v6 = (void *)sub_2414B4D44();
  objc_msgSend(v2, sel_setValue_forKey_, v5, v6);

  v7 = (void *)sub_2414B4F84();
  v8 = (void *)sub_2414B4D44();
  objc_msgSend(v2, sel_setValue_forKey_, v7, v8);

  v9 = (void *)sub_2414B2BC0();
  v10 = (void *)sub_2414B4D44();
  objc_msgSend(v2, sel_setValue_forKey_, v9, v10);

  return v2;
}

uint64_t sub_2413DD63C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v1[3] = sub_2414B4FC0();
  v1[4] = sub_2414B4FB4();
  v1[5] = sub_2414B4F90();
  v1[6] = v2;
  return swift_task_switch();
}

uint64_t sub_2413DD6AC()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  _QWORD *v17;

  v1 = (void *)v0[2];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  v0[7] = v2;
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, sel_setBounds_, v5, v7, v9, v11);
  objc_msgSend(v2, sel_setOpaque_, 1);
  objc_msgSend(v2, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v2, sel_setDrawsAsynchronously_, 1);
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkMirrorReplicatorLayer()), (SEL)&selRef_setVertexBytes_length_atIndex_);
  v0[8] = v12;
  v13 = *(void **)&v12[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image];
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image] = v1;
  v14 = v1;

  sub_2414AA544();
  objc_msgSend(v12, sel_setOpaque_, 1);
  v15 = v12;
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v15, sel_setBounds_);

  objc_msgSend(v15, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v15, sel_setDrawsAsynchronously_, 1);
  objc_msgSend(v2, sel_addSublayer_, v15);
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer()), sel_init);
  v0[9] = v16;
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v16, sel_setBounds_);
  objc_msgSend(v16, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v16, sel_setDrawsAsynchronously_, 1);
  objc_msgSend(v2, sel_addSublayer_, v16);
  v2;
  v0[10] = sub_2414B4FB4();
  v17 = (_QWORD *)swift_task_alloc();
  v0[11] = v17;
  *v17 = v0;
  v17[1] = sub_2413DD928;
  return sub_2414AFFB0();
}

uint64_t sub_2413DD928(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 104) = a1;
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413DD9D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_release();

  return swift_task_switch();
}

uint64_t sub_2413DDA10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 104);

  swift_release();
  v2 = *(void **)(v0 + 64);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2413DDA60()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 56);
  swift_release();

  return swift_task_switch();
}

uint64_t sub_2413DDAAC()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 64);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

unint64_t sub_2413DDAFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257127188;
  if (!qword_257127188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127190);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEBEC0], v1);
    atomic_store(result, (unint64_t *)&qword_257127188);
  }
  return result;
}

uint64_t assignWithTake for ArtworkStyleModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  v8 = a2[10];
  v9 = *((_BYTE *)a2 + 88);
  v10 = *((_BYTE *)a2 + 89);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_BYTE *)(a1 + 88);
  v21 = *(_BYTE *)(a1 + 89);
  v22 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v22;
  v23 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 64) = v23;
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 89) = v10;
  sub_2412C823C(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 96) = a2[12];
  swift_release();
  *(_QWORD *)(a1 + 104) = a2[13];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkStyleModifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 96);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkStyleModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 96) = a2;
  }
  return result;
}

uint64_t *sub_2413DDCC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_2413DDD50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_2413DDD88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2413DDDE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2413DDE40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2413DDE9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_2413DDEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_2413DDF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

_QWORD *assignWithCopy for ArtworkStyleModifier.AppliedArtworkStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for ArtworkStyleModifier.AppliedArtworkStyle(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t sub_2413DE02C(double a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __int128 v17;
  _QWORD v18[2];
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v8 = *a3;
  v17 = *(_OWORD *)(a3 + 1);
  v9 = a3[3];
  v10 = a3[4];
  v11 = sub_2414B3514();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18[-2] - v13;
  *(double *)v19 = a1;
  v19[1] = v8;
  v20 = v17;
  v21 = v9;
  v22 = v10;
  MEMORY[0x242693DC0](v19, a4, &type metadata for ArtworkStyleModifier.AppliedArtworkStyle, a5);
  swift_getKeyPath();
  v15 = sub_241302EC4();
  v18[0] = a5;
  v18[1] = v15;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v18);
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2413DE170(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  char v6;

  KeyPath = swift_getKeyPath();
  v6 = 0;
  MEMORY[0x242693DC0](&KeyPath, a1, &type metadata for VideoPlayerStyleModifier, a2);
  return swift_release();
}

double sub_2413DE1FC()
{
  double result;

  qword_257136FF8 = sub_2414B463C();
  *(_OWORD *)&qword_257137000 = xmmword_2414C34B0;
  result = 0.0;
  *(_OWORD *)&qword_257137010 = xmmword_2414C34C0;
  return result;
}

double sub_2413DE234()
{
  double result;

  qword_257137020 = sub_2414B463C();
  *(_OWORD *)&qword_257137028 = xmmword_2414C34D0;
  result = 0.0;
  *(_OWORD *)&qword_257137038 = xmmword_2414C34E0;
  return result;
}

double sub_2413DE26C()
{
  double result;

  qword_257137048 = sub_2414B463C();
  *(_OWORD *)&qword_257137050 = xmmword_2414BE340;
  result = 0.0;
  *(_OWORD *)&qword_257137060 = xmmword_2414C34F0;
  return result;
}

double sub_2413DE2A4()
{
  double result;

  qword_257137070 = sub_2414B463C();
  *(_OWORD *)&qword_257137078 = xmmword_2414C3500;
  result = 0.0;
  *(_OWORD *)&qword_257137088 = xmmword_2414C3510;
  return result;
}

double sub_2413DE2DC()
{
  double result;

  qword_257137098 = sub_2414B463C();
  *(_OWORD *)&qword_2571370A0 = xmmword_2414C3520;
  result = 0.0;
  *(_OWORD *)&qword_2571370B0 = xmmword_2414C3530;
  return result;
}

BOOL sub_2413DE314(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10;
  _BOOL8 result;

  v2 = a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v4 = a1[4];
  v6 = a2[1];
  v7 = a2[2];
  v9 = a2[3];
  v8 = a2[4];
  v10 = sub_2414B4624();
  result = 0;
  if ((v10 & 1) != 0 && v2 == v6 && v3 == v7 && v5 == v9)
    return v4 == v8;
  return result;
}

uint64_t sub_2413DE38C()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_2571370C0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_2571370C0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v2, sel_displayCornerRadius);
  v4 = v3;

  v5 = (char *)v1 + *(int *)(v0 + 20);
  v6 = *MEMORY[0x24BDEEB68];
  v7 = sub_2414B38C8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  *v1 = v4;
  return result;
}

uint64_t sub_2413DE450()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_2571370D8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_2571370D8);
  v2 = (char *)v1 + *(int *)(v0 + 20);
  v3 = *MEMORY[0x24BDEEB78];
  v4 = sub_2414B38C8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  *v1 = 0;
  return result;
}

uint64_t sub_2413DE4D4()
{
  sub_2412C8334();
  return sub_2414B3838();
}

uint64_t sub_2413DE508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  sub_2412C7080(*(_QWORD *)a1, v6);
  sub_2412EF52C(v5, v6, &v11);
  result = sub_2412C821C(v5, v6);
  if (v11 == 1)
  {
    v8 = *(_QWORD *)(a1 + 96);
    if (v8)
    {
      if (*(unsigned __int8 *)(v8 + 16) - 1 < 3)
      {
        if (qword_257120958 != -1)
          swift_once();
        v9 = __swift_project_value_buffer(v2, (uint64_t)qword_2571370D8);
        type metadata accessor for ArtworkCornerModifier(0);
        sub_2412C6A50(v9, (uint64_t)v4, type metadata accessor for ArtworkCornerStyle);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
        return sub_2414B47B0();
      }
    }
    else
    {
      type metadata accessor for NowPlayingViewModel.Lifecycle();
      sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
      result = sub_2414B364C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2413DE684(char *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  uint64_t v20;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_2414B4B94();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4BB8();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkCornerModifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = type metadata accessor for ArtworkCornerStyle(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v29 - v17);
  v19 = *a1;
  v36 = *a2;
  v20 = *(_QWORD *)(v3 + 64);
  LOBYTE(a2) = *(_BYTE *)(v3 + 72);
  sub_2412C7080(v20, (char)a2);
  sub_2412FA328(v20, (char)a2, aBlock);
  sub_2412C821C(v20, (char)a2);
  if (LOBYTE(aBlock[0]))
  {
    LOBYTE(aBlock[0]) = v36;
    sub_2412CC030(aBlock, v18);
    sub_2412C6A50((uint64_t)v18, (uint64_t)v16, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    sub_2414B47B0();
    return sub_2412C68F4((uint64_t)v18, type metadata accessor for ArtworkCornerStyle);
  }
  else
  {
    LOBYTE(aBlock[0]) = v19;
    sub_2412CC030(aBlock, v18);
    sub_2412C6A50((uint64_t)v18, (uint64_t)v16, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    sub_2414B47B0();
    sub_2412C68F4((uint64_t)v18, type metadata accessor for ArtworkCornerStyle);
    sub_2412FFFC8();
    v22 = (void *)sub_2414B5230();
    sub_2412C6A50(v3, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkCornerModifier);
    v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v24 = swift_allocObject();
    sub_2412DC3B8((uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for ArtworkCornerModifier);
    *(_BYTE *)(v24 + v23 + v12) = v36;
    aBlock[4] = sub_2413E0A5C;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2413002C8;
    aBlock[3] = &block_descriptor_12;
    v25 = _Block_copy(aBlock);
    swift_release();
    v26 = v30;
    sub_2414B4BAC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
    sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
    v27 = v33;
    v28 = v35;
    sub_2414B5464();
    MEMORY[0x242694ABC](0, v26, v27, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v26, v32);
  }
}

uint64_t sub_2413DEA60(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  _QWORD v6[3];
  uint64_t v7;

  sub_2412EFAC0((uint64_t)v6);
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  LOBYTE(v2) = sub_241387790(v2);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)a1;
    v5 = *(_BYTE *)(a1 + 8);
    sub_2412C7080(*(_QWORD *)a1, v5);
    sub_2412EF52C(v4, v5, v6);
    result = sub_2412C821C(v4, v5);
    if (!LOBYTE(v6[0]))
    {
      MEMORY[0x24BDAC7A8](result);
      sub_2414B4AC8();
      sub_2414B3328();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2413DEB5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = type metadata accessor for ArtworkCornerStyle(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v14 - v6);
  v8 = *(_QWORD *)(a1 + 80);
  if (v8)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v8 + 16) & 1) != 0)
    {
      if (qword_257120958 != -1)
        swift_once();
      v9 = __swift_project_value_buffer(v2, (uint64_t)qword_2571370D8);
      sub_2412C6A50(v9, (uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
    }
    else
    {
      v10 = (char *)v7 + *(int *)(v2 + 20);
      v11 = *MEMORY[0x24BDEEB78];
      v12 = sub_2414B38C8();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
      *v7 = 0x4024000000000000;
    }
    type metadata accessor for ArtworkCornerModifier(0);
    sub_2412C6A50((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    sub_2414B47B0();
    return sub_2412C68F4((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
  }
  else
  {
    _s14DefaultArtworkCMa();
    sub_2412C8030(&qword_25437F478, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2413DED28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;

  v22 = a2;
  v21 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArtworkCornerModifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v20 = sub_2414B3D24();
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_defaultSheetMetrics);

  v13 = objc_msgSend(v12, sel_transitionSpringParametersHighSpeed_, 0);
  objc_msgSend(v13, sel__response);
  objc_msgSend(v13, sel__dampingRatio);
  v14 = sub_2414B4ABC();

  sub_2414B3D18();
  v23 = v21;
  LOBYTE(v13) = v22;
  v24 = v22;
  sub_2412C6A50(v21, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkCornerModifier);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = (_BYTE)v13;
  sub_2412DC3B8((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for ArtworkCornerModifier);
  v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v10, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v17);
  sub_2412DECAC(v14, 1, (uint64_t)v4, (uint64_t)sub_2413E0BA0);
  sub_2412CBE78((uint64_t)v4, &qword_25437DBC0);
  sub_2414B3550();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

uint64_t sub_2413DEFD4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[15];
  char v11;

  v3 = type metadata accessor for ArtworkCornerStyle(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v10[-v7];
  v11 = a2;
  sub_2412CC030(&v11, (uint64_t *)&v10[-v7]);
  type metadata accessor for ArtworkCornerModifier(0);
  sub_2412C6A50((uint64_t)v8, (uint64_t)v6, type metadata accessor for ArtworkCornerStyle);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  sub_2414B47B0();
  return sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_2413DF0C4(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = type metadata accessor for ArtworkCornerStyle(0);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 1)
  {
    v8 = *(_QWORD *)(a2 + 96);
    if (v8)
    {
      if (*(unsigned __int8 *)(v8 + 16) - 1 < 3)
      {
        if (qword_257120958 != -1)
        {
          v10 = result;
          swift_once();
          result = v10;
        }
        v9 = __swift_project_value_buffer(result, (uint64_t)qword_2571370D8);
        type metadata accessor for ArtworkCornerModifier(0);
        sub_2412C6A50(v9, (uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
        return sub_2414B47B0();
      }
    }
    else
    {
      type metadata accessor for NowPlayingViewModel.Lifecycle();
      sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
      result = sub_2414B364C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2413DF208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v21 = a1;
  v23 = a2;
  v22 = type metadata accessor for ArtworkInnerStrokeModifier(0);
  MEMORY[0x24BDAC7A8](v22);
  v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571271D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571271E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)v2;
  v15 = *(_BYTE *)(v2 + 8);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  swift_storeEnumTagMultiPayload();
  sub_2412DC3B8((uint64_t)v7, (uint64_t)&v10[*(int *)(v8 + 36)], type metadata accessor for ArtworkClipShape);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571271E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v21, v16);
  sub_2414B463C();
  sub_2412C7080(v14, v15);
  sub_2412EF52C(v14, v15, &v25);
  sub_2412C821C(v14, v15);
  v17 = sub_2414B466C();
  swift_release();
  sub_2412C7080(v14, v15);
  sub_2412EF52C(v14, v15, &v24);
  sub_2412C821C(v14, v15);
  sub_241303A14();
  *v4 = v17;
  v4[1] = v18;
  v19 = (uint64_t *)((char *)v4 + *(int *)(v22 + 24));
  *v19 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_2412DC3FC((uint64_t)v10, (uint64_t)v13, &qword_2571271D8);
  sub_2412DC3B8((uint64_t)v4, (uint64_t)&v13[*(int *)(v11 + 36)], type metadata accessor for ArtworkInnerStrokeModifier);
  sub_2412CBE78((uint64_t)v10, &qword_2571271D8);
  return sub_2412EAEA4((uint64_t)v13, v23, &qword_2571271E0);
}

uint64_t sub_2413DF4BC()
{
  sub_2412C8030(&qword_2571271C8, type metadata accessor for ArtworkCornerStyle, (uint64_t)&unk_2414C3614);
  return sub_2414B3340();
}

uint64_t sub_2413DF524()
{
  sub_2412C8334();
  return sub_2414B3838();
}

ValueMetadata *type metadata accessor for ArtworkCornerStyleKey()
{
  return &type metadata for ArtworkCornerStyleKey;
}

uint64_t sub_2413DF574(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v10 = (char *)v7 + v9;
      v11 = (char *)v8 + v9;
      v12 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2413DF67C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v10 = (char *)v7 + v9;
      v11 = (char *)v8 + v9;
      v12 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413DF794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v6 = *v7;
    v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v10 = (char *)v6 + v9;
    v11 = (char *)v7 + v9;
    v12 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2413DF868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_2412CBE78(a1 + v6, &qword_254380B28);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v10 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413DF96C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413DF978(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2413DF9F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2413DFA04(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t *sub_2413DFA7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v10 = (char *)v7 + v9;
      v11 = (char *)v8 + v9;
      v12 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2413DFB7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v10 = (char *)v7 + v9;
      v11 = (char *)v8 + v9;
      v12 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2413DFC7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v5 = *v6;
    v8 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v9 = (char *)v5 + v8;
    v10 = (char *)v6 + v8;
    v11 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2413DFD48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B28);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v10 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413DFE44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413DFE50(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2413DFED0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2413DFEDC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t *sub_2413DFF54(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380B28) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2413E0038(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2413E00EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_254380B28);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413E01B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413E01C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2413E0204()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413E0210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_257127198);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t destroy for ArtworkShadow()
{
  return swift_release();
}

uint64_t initializeWithCopy for ArtworkShadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ArtworkShadow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ArtworkShadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkShadow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkShadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_2413E03F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2412C7080(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = (_QWORD *)(a1 + 16);
    v10 = (_QWORD *)(a2 + 16);
    v11 = *(_BYTE *)(a2 + 56);
    if ((v11 & 1) != 0)
    {
      v12 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v12;
      (**(void (***)(_QWORD *, _QWORD *))(v12 - 8))(v9, v10);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    *(_BYTE *)(a1 + 56) = v11;
    v14 = *(_QWORD *)(a2 + 64);
    v15 = *(_BYTE *)(a2 + 72);
    sub_2412C7080(v14, v15);
    *(_QWORD *)(a1 + 64) = v14;
    *(_BYTE *)(a1 + 72) = v15;
    v16 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v16;
    v17 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v17;
    v18 = *(int *)(a3 + 36);
    v19 = a1 + v18;
    v20 = a2 + v18;
    *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
    v21 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v22 = v19 + v21;
    v23 = v20 + v21;
    v24 = sub_2414B38C8();
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_retain();
    swift_retain();
    v25(v22, v23, v24);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    *(_QWORD *)(v19 + *(int *)(v26 + 28)) = *(_QWORD *)(v20 + *(int *)(v26 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_2413E0568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v10 = v7 + v9;
  v11 = v8 + v9;
  v12 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  *(_QWORD *)(v7 + *(int *)(v13 + 28)) = *(_QWORD *)(v8 + *(int *)(v13 + 28));
  return a1;
}

uint64_t sub_2413E0630(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    sub_2412CBE78(a1 + 16, &qword_254380B40);
    v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  v11 = *((_BYTE *)a2 + 72);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_BYTE *)(a1 + 72) = v11;
  sub_2412C821C(v12, v13);
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_release();
  v14 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v14;
  swift_release();
  *(_QWORD *)(a1 + 104) = a2[13];
  v15 = *(int *)(a3 + 36);
  v16 = a1 + v15;
  v17 = (uint64_t)a2 + v15;
  *(_QWORD *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  v18 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v19 = v16 + v18;
  v20 = v17 + v18;
  v21 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  *(_QWORD *)(v16 + *(int *)(v22 + 28)) = *(_QWORD *)(v17 + *(int *)(v22 + 28));
  swift_release();
  return a1;
}

