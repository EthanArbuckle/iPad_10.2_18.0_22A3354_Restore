ValueMetadata *type metadata accessor for UIView.Corner()
{
  return &type metadata for UIView.Corner;
}

uint64_t _s6CornerVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s6CornerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SplitPercentageLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13HostedContentC10TransitionVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

__C::CGRect __swiftcall CGRect.applyingLayoutDirection(_:inBounds:)(UIUserInterfaceLayoutDirection _, __C::CGRect inBounds)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat MinY;
  CGFloat v9;
  double MaxX;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  __C::CGRect result;

  v6 = v5;
  v7 = v4;
  MinY = v3;
  v9 = v2;
  if (_ == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    MaxX = CGRectGetMaxX((CGRect)inBounds);
    v17.origin.x = v9;
    v17.origin.y = MinY;
    v17.size.width = v7;
    v17.size.height = v6;
    v11 = MaxX - CGRectGetMinX(v17);
    v18.origin.x = v9;
    v18.origin.y = MinY;
    v18.size.width = v7;
    v18.size.height = v6;
    v12 = v11 - CGRectGetWidth(v18);
    v19.origin.x = v9;
    v19.origin.y = MinY;
    v19.size.width = v7;
    v19.size.height = v6;
    MinY = CGRectGetMinY(v19);
    v9 = v12;
  }
  v13 = v9;
  v14 = MinY;
  v15 = v7;
  v16 = v6;
  result.size.height = v16;
  result.size.width = v15;
  result.origin.y = v14;
  result.origin.x = v13;
  return result;
}

double CGFloat.roundValue(scale:)(double a1, double a2)
{
  double v2;
  double v3;

  v2 = 1.0;
  if (a1 > 0.0)
  {
    v3 = fabs(a1);
    v2 = a1;
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
    {
      v2 = 1.0;
      if (v3 > fmax(v3 * 2.22044605e-16, COERCE_DOUBLE(1)))
        v2 = a1;
    }
  }
  return round(a1 * a2) / v2;
}

double CGFloat.ceilingValue(scale:)(double a1, double a2)
{
  double v2;
  double v3;

  v2 = 1.0;
  if (a1 > 0.0)
  {
    v3 = fabs(a1);
    v2 = a1;
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
    {
      v2 = 1.0;
      if (v3 > fmax(v3 * 2.22044605e-16, COERCE_DOUBLE(1)))
        v2 = a1;
    }
  }
  return ceil(a1 * a2) / v2;
}

_QWORD *sub_2412C42AC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*a2)
  {
    v3 = a2[1];
    v4 = a2[2];
    *a1 = *a2;
    a1[1] = v3;
    a1[2] = v4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  return a1;
}

uint64_t sub_2412C4310(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t static ApproximatelyComparable<>.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2412E25E0(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for UIView.Corner.Radius()
{
  return &type metadata for UIView.Corner.Radius;
}

uint64_t sub_2412C4370(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 274))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 248);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t static ApproximatelyComparable<>.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2412E25E0(a1, a2, a3, a4, a5);
}

uint64_t sub_2412C43D8(uint64_t a1)
{
  return sub_2412C8228(*(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t type metadata accessor for PublishedOnChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PublishedOnChange);
}

BOOL sub_2412C43F4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  _BOOL8 result;
  _BOOL4 v7;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 2)
  {
    if (v4 == 2)
      return v3 == *(_QWORD *)(a2 + 16);
    return 0;
  }
  if (v4 == 2)
    return 0;
  result = 0;
  v7 = (v2 & 1) == 0;
  if (*(double *)a1 == *(double *)a2 && ((v7 ^ v4) & 1) != 0)
    return v3 == *(_QWORD *)(a2 + 16);
  return result;
}

void UIView.Corner.radius.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_2412C4470(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t getEnumTagSinglePayload for TransportButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for DeviceMetrics.Layout(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11PlayerStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for ClientDefinedMotionCacheIndices(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2412C463C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

id static UIFont.shortPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_2412E209C(a1, 256);
}

uint64_t destroy for OpacityModifier(uint64_t a1)
{
  return sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.PlayerStyle()
{
  return &type metadata for NowPlayingViewModel.PlayerStyle;
}

__C::CGRect __swiftcall CGRect.removingLayoutDirection(_:inBounds:)(UIUserInterfaceLayoutDirection _, __C::CGRect inBounds)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double MaxX;
  double v11;
  double v12;
  double v13;
  double v14;
  CGRect v15;
  __C::CGRect result;

  v6 = v5;
  v7 = v4;
  v8 = v3;
  v9 = v2;
  if (_ == UIUserInterfaceLayoutDirectionRightToLeft)
  {
    MaxX = CGRectGetMaxX((CGRect)inBounds);
    v15.origin.x = v9;
    v15.origin.y = v8;
    v15.size.width = v7;
    v15.size.height = v6;
    v9 = MaxX - CGRectGetMaxX(v15);
  }
  v11 = v9;
  v12 = v8;
  v13 = v7;
  v14 = v6;
  result.size.height = v14;
  result.size.width = v13;
  result.origin.y = v12;
  result.origin.x = v11;
  return result;
}

ValueMetadata *type metadata accessor for MotionMode()
{
  return &type metadata for MotionMode;
}

uint64_t getEnumTagSinglePayload for DeviceMetrics(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 253);
  if (*(unsigned __int8 *)(a1 + 18) <= 3u)
    v3 = 3;
  else
    v3 = *(unsigned __int8 *)(a1 + 18);
  v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 18) < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t sub_2412C474C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtwork.Placement(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_2412C4808()
{
  sub_2412C4858();
  return sub_2414B3340();
}

unint64_t sub_2412C4858()
{
  unint64_t result;

  result = qword_2543809A0;
  if (!qword_2543809A0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2543809A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingHostedContentID()
{
  return &type metadata for NowPlayingHostedContentID;
}

uint64_t sub_2412C48AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2412C48B8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2412C48D8()
{
  sub_2412C8620(&qword_254381498, &qword_254381490, (uint64_t (*)(void))sub_2412C4858, MEMORY[0x24BEE04D0]);
  return sub_2414B3340();
}

uint64_t _s11PlayerStyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2412C4994 + 4 * byte_2414B909D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2412C49C8 + 4 * byte_2414B9098[v4]))();
}

uint64_t sub_2412C49C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C49D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412C49D8);
  return result;
}

uint64_t sub_2412C49E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412C49ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2412C49F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C49F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C4A04()
{
  sub_2412C4AD4(&qword_25437D868, &qword_25437D860, (uint64_t (*)(void))sub_241301C80);
  return sub_2414B3340();
}

uint64_t sub_2412C4A6C()
{
  sub_2412C4AD4((unint64_t *)&qword_25437D6F0, &qword_25437D6E8, (uint64_t (*)(void))sub_2413036B4);
  return sub_2414B3340();
}

uint64_t sub_2412C4AD4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

__C::CGRect __swiftcall CGRect.offset(by:)(UIOffset by)
{
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat vertical;
  CGFloat horizontal;
  CGRect v7;

  vertical = by.vertical;
  horizontal = by.horizontal;
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  return (__C::CGRect)CGRectOffset(v7, horizontal, vertical);
}

__C::CGRect __swiftcall CGRect.inset(by:for:)(NSDirectionalEdgeInsets by, UIUserInterfaceLayoutDirection a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double trailing;
  double v8;
  double v9;
  double v10;
  double v11;
  __C::CGRect result;

  v6 = v3;
  if (a2 == UIUserInterfaceLayoutDirectionRightToLeft)
    trailing = by.trailing;
  else
    trailing = by.leading;
  v8 = UIEdgeInsetsInsetRect(v2, v6, v4, v5, by.top, trailing);
  result.size.height = v11;
  result.size.width = v10;
  result.origin.y = v9;
  result.origin.x = v8;
  return result;
}

double NSDirectionalEdgeInsets.vertical.getter(double a1, double a2, double a3)
{
  return a1 + a3;
}

double NSDirectionalEdgeInsets.horizontal.getter(double a1, double a2, double a3, double a4)
{
  return a2 + a4;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.Placement()
{
  return &type metadata for NowPlayingArtwork.Placement;
}

BOOL sub_2412C4BB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

ValueMetadata *type metadata accessor for DeviceMetrics()
{
  return &type metadata for DeviceMetrics;
}

double UIEdgeInsets.horizontal.getter(double a1, double a2, double a3, double a4)
{
  return a2 + a4;
}

_BYTE *sub_2412C4BE4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_2412C4BEC(unsigned __int8 *a1)
{
  return *a1;
}

id static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(uint64_t a1)
{
  return sub_2412E209C(a1, 1280);
}

uint64_t sub_2412C4BFC()
{
  sub_2412C4C4C();
  return sub_2414B3340();
}

unint64_t sub_2412C4C4C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2543814D8;
  if (!qword_2543814D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543814D0);
    v2 = sub_2412C8030(&qword_2543814C0, (uint64_t (*)(uint64_t))type metadata accessor for CAFrameRateRange, MEMORY[0x24BEE5CB0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2543814D8);
  }
  return result;
}

uint64_t sub_2412C4CC8()
{
  sub_2412C4D18();
  return sub_2414B3340();
}

unint64_t sub_2412C4D18()
{
  unint64_t result;

  result = qword_2543802F8;
  if (!qword_2543802F8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MarqueeAnimationDirection, &type metadata for MarqueeAnimationDirection);
    atomic_store(result, (unint64_t *)&qword_2543802F8);
  }
  return result;
}

void sub_2412C4D5C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_2412C4F0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2412C4FBC + 4 * byte_2414CA660[(v7 - 1)]))();
}

uint64_t storeEnumTagSinglePayload for DeviceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 18) = a2 + 3;
  }
  return result;
}

double UIEdgeInsets.vertical.getter(double a1, double a2, double a3)
{
  return a1 + a3;
}

uint64_t storeEnumTagSinglePayload for DeviceMetrics.Layout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2412C50B8 + 4 * byte_2414B951F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2412C50EC + 4 * byte_2414B951A[v4]))();
}

uint64_t sub_2412C50EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C50F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412C50FCLL);
  return result;
}

uint64_t sub_2412C5108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412C5110);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2412C5114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C511C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s18MiniPlayerSubtitleOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

ValueMetadata *type metadata accessor for MarqueeMaskModifier()
{
  return &type metadata for MarqueeMaskModifier;
}

uint64_t sub_2412C5174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtwork.Placement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2412C51F0 + 4 * byte_2414BEA45[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2412C5224 + 4 * byte_2414BEA40[v4]))();
}

uint64_t sub_2412C5224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C522C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412C5234);
  return result;
}

uint64_t sub_2412C5240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412C5248);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2412C524C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C5254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for ClientDefinedMotionCacheIndices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2412C52A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_2412C52AC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.Lifecycle.TransitionPhase()
{
  return &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TrailingTransportButtonConfiguration()
{
  return &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.LeadingTransportButtonConfiguration()
{
  return &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration;
}

ValueMetadata *_s26CenterTransportButtonStateOMa()
{
  return &_s26CenterTransportButtonStateON;
}

ValueMetadata *_s13HostedContentC10TransitionVMa()
{
  return &_s13HostedContentC10TransitionVN;
}

uint64_t getEnumTagSinglePayload for MetalTextureSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

BOOL sub_2412C5354(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2412C5368()
{
  return sub_2414B3340();
}

uint64_t sub_2412C5374()
{
  return sub_2414B3340();
}

uint64_t sub_2412C5384()
{
  return sub_2414B3340();
}

ValueMetadata *type metadata accessor for NowPlayingArtworkBackgroundEffect()
{
  return &type metadata for NowPlayingArtworkBackgroundEffect;
}

uint64_t sub_2412C53A0(double *a1, double *a2)
{
  if (*a1 == *a2)
    return sub_2414B38BC();
  else
    return 0;
}

ValueMetadata *type metadata accessor for DeviceMetrics.Layout()
{
  return &type metadata for DeviceMetrics.Layout;
}

uint64_t storeEnumTagSinglePayload for TransportControlsPlacement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2412C5424 + 4 * byte_2414BFF6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2412C5458 + 4 * byte_2414BFF6A[v4]))();
}

uint64_t sub_2412C5458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C5460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412C5468);
  return result;
}

uint64_t sub_2412C5474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412C547CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2412C5480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C5488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412C5498(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

uint64_t sub_2412C54C4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2412C54E8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t dispatch thunk of MarkupRenderer.attributedString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

ValueMetadata *type metadata accessor for BubbleImage()
{
  return &type metadata for BubbleImage;
}

void type metadata accessor for CAFrameRateRange(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543814C8);
}

uint64_t sub_2412C5520@<X0>(_QWORD *a1@<X8>)
{
  return sub_2412CC8BC(&qword_254380F68, &qword_254380F58, a1);
}

void sub_2412C553C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

ValueMetadata *type metadata accessor for EmbeddedBadgeModifier()
{
  return &type metadata for EmbeddedBadgeModifier;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle()
{
  return &type metadata for NowPlayingViewModel.MiniPlayerSubtitle;
}

uint64_t sub_2412C556C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

ValueMetadata *type metadata accessor for MarqueeBadgeModel()
{
  return &type metadata for MarqueeBadgeModel;
}

ValueMetadata *type metadata accessor for ArtworkGeometryID()
{
  return &type metadata for ArtworkGeometryID;
}

uint64_t sub_2412C559C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void *v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, char *, uint64_t);
  uint64_t v210;
  void (*v211)(char *, uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  _QWORD v218[2];
  __int128 v219;
  __int128 v220;
  char v221;

  v4 = v3;
  v166 = a1;
  v196 = a3;
  v202 = sub_2414B2F44();
  v195 = *(_QWORD *)(v202 - 8);
  MEMORY[0x24BDAC7A8](v202);
  v194 = (uint64_t)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_2414B3934();
  v193 = *(_QWORD *)(v200 - 8);
  v7 = MEMORY[0x24BDAC7A8](v200);
  v186 = (uint64_t)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = *(void (**)(uint64_t, char *, uint64_t))(a2 - 8);
  v213 = *((_QWORD *)v209 + 8);
  MEMORY[0x24BDAC7A8](v7);
  v205 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x242695AE8](&unk_2414CB568, a2);
  v10 = sub_2414B3B08();
  v152 = v10;
  v11 = sub_2414B3514();
  v165 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v153 = (char *)&v148 - v12;
  v149 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v10);
  v218[0] = v149;
  v218[1] = MEMORY[0x24BDF0910];
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v218);
  v14 = sub_2412DC440();
  *(_QWORD *)&v219 = v11;
  *((_QWORD *)&v219 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  v15 = v11;
  v148 = v11;
  *(_QWORD *)&v220 = v13;
  *((_QWORD *)&v220 + 1) = v14;
  v16 = v13;
  v151 = v13;
  v17 = v14;
  v150 = v14;
  v18 = MEMORY[0x24BDF3908];
  v19 = MEMORY[0x242695A94](0, &v219, MEMORY[0x24BDF3908], 0);
  v167 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v197 = (char *)&v148 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
  *(_QWORD *)&v219 = v15;
  *((_QWORD *)&v219 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  *(_QWORD *)&v220 = v16;
  *((_QWORD *)&v220 + 1) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = sub_2412C4AD4((unint64_t *)&qword_25437D6F0, &qword_25437D6E8, (uint64_t (*)(void))sub_2413036B4);
  *(_QWORD *)&v219 = v19;
  *((_QWORD *)&v219 + 1) = v21;
  v154 = v19;
  v24 = v21;
  v157 = v21;
  *(_QWORD *)&v220 = OpaqueTypeConformance2;
  *((_QWORD *)&v220 + 1) = v23;
  v156 = OpaqueTypeConformance2;
  v25 = v23;
  v155 = v23;
  v26 = MEMORY[0x242695A94](0, &v219, v18, 0);
  v169 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v198 = (char *)&v148 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D860);
  *(_QWORD *)&v219 = v19;
  *((_QWORD *)&v219 + 1) = v24;
  *(_QWORD *)&v220 = OpaqueTypeConformance2;
  *((_QWORD *)&v220 + 1) = v25;
  v29 = swift_getOpaqueTypeConformance2();
  v30 = sub_2412C4AD4(&qword_25437D868, &qword_25437D860, (uint64_t (*)(void))sub_241301C80);
  *(_QWORD *)&v219 = v26;
  *((_QWORD *)&v219 + 1) = v28;
  v158 = v26;
  v161 = v28;
  *(_QWORD *)&v220 = v29;
  *((_QWORD *)&v220 + 1) = v30;
  v160 = v29;
  v31 = v30;
  v159 = v30;
  v32 = MEMORY[0x242695A94](0, &v219, v18, 0);
  v177 = *(_QWORD *)(v32 - 8);
  v33 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v199 = (char *)&v148 - v34;
  *(_QWORD *)&v219 = v26;
  *((_QWORD *)&v219 + 1) = v28;
  *(_QWORD *)&v220 = v29;
  *((_QWORD *)&v220 + 1) = v31;
  v35 = v18;
  v36 = swift_getOpaqueTypeConformance2();
  v37 = sub_2412C8030(&qword_25437DB58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], MEMORY[0x24BDEEE28]);
  v38 = v33;
  v162 = v33;
  v39 = v200;
  *(_QWORD *)&v219 = v33;
  *((_QWORD *)&v219 + 1) = v200;
  *(_QWORD *)&v220 = v36;
  *((_QWORD *)&v220 + 1) = v37;
  v164 = v36;
  v40 = v37;
  v163 = v37;
  v41 = MEMORY[0x242695A94](0, &v219, v18, 0);
  v178 = *(_QWORD *)(v41 - 8);
  v42 = v41;
  MEMORY[0x24BDAC7A8](v41);
  v201 = (char *)&v148 - v43;
  type metadata accessor for OSThermalPressureLevel(255);
  v45 = v44;
  *(_QWORD *)&v219 = v38;
  *((_QWORD *)&v219 + 1) = v39;
  *(_QWORD *)&v220 = v36;
  *((_QWORD *)&v220 + 1) = v40;
  v46 = swift_getOpaqueTypeConformance2();
  v47 = sub_2412C8030(&qword_254381538, (uint64_t (*)(uint64_t))type metadata accessor for OSThermalPressureLevel, (uint64_t)&unk_2414B7B38);
  v174 = v42;
  *(_QWORD *)&v219 = v42;
  *((_QWORD *)&v219 + 1) = v45;
  v168 = v45;
  *(_QWORD *)&v220 = v46;
  *((_QWORD *)&v220 + 1) = v47;
  v176 = v46;
  v48 = v47;
  v175 = v47;
  v49 = MEMORY[0x242695A94](0, &v219, v18, 0);
  v181 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v173 = (char *)&v148 - v50;
  *(_QWORD *)&v219 = v42;
  *((_QWORD *)&v219 + 1) = v45;
  *(_QWORD *)&v220 = v46;
  *((_QWORD *)&v220 + 1) = v48;
  v51 = swift_getOpaqueTypeConformance2();
  v52 = sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  v170 = v49;
  v53 = v202;
  *(_QWORD *)&v219 = v49;
  *((_QWORD *)&v219 + 1) = v202;
  *(_QWORD *)&v220 = v51;
  *((_QWORD *)&v220 + 1) = v52;
  v54 = v51;
  v172 = v51;
  v171 = v52;
  v55 = MEMORY[0x242695A94](0, &v219, v35, 0);
  v185 = *(_QWORD *)(v55 - 8);
  v56 = v55;
  v179 = v55;
  MEMORY[0x24BDAC7A8](v55);
  v203 = (char *)&v148 - v57;
  v58 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380A50);
  v183 = v58;
  v59 = sub_2412C8FC4(&qword_254380A48, &qword_254380A50, MEMORY[0x24BDB9AF8]);
  v182 = v59;
  *(_QWORD *)&v219 = v49;
  *((_QWORD *)&v219 + 1) = v53;
  *(_QWORD *)&v220 = v54;
  *((_QWORD *)&v220 + 1) = v52;
  v180 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v219 = v58;
  *((_QWORD *)&v219 + 1) = v56;
  *(_QWORD *)&v220 = v59;
  *((_QWORD *)&v220 + 1) = v180;
  v60 = sub_2414B35E0();
  v192 = *(_QWORD *)(v60 - 8);
  v189 = v60;
  MEMORY[0x24BDAC7A8](v60);
  v204 = (char *)&v148 - v61;
  v187 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v60);
  *(_QWORD *)&v219 = v60;
  *((_QWORD *)&v219 + 1) = MEMORY[0x24BEE1328];
  *(_QWORD *)&v220 = v187;
  *((_QWORD *)&v220 + 1) = MEMORY[0x24BEE1340];
  v190 = MEMORY[0x242695A94](0, &v219, v35, 0);
  v191 = *(_QWORD *)(v190 - 8);
  v62 = MEMORY[0x24BDAC7A8](v190);
  v184 = (char *)&v148 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v188 = (uint64_t)&v148 - v64;
  v65 = v209;
  v211 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v209 + 2);
  v66 = v205;
  v211(v205, v4, a2);
  v67 = *((unsigned __int8 *)v65 + 80);
  v213 += (v67 + 32) & ~v67;
  v68 = (v67 + 32) & ~v67;
  v208 = v68;
  v207 = v67 | 7;
  v69 = swift_allocObject();
  v70 = *(_QWORD *)(a2 + 16);
  v71 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v69 + 16) = v70;
  *(_QWORD *)(v69 + 24) = v71;
  v72 = v70;
  v206 = v70;
  v73 = v71;
  v212 = v71;
  v74 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v65 + 4);
  v74(v69 + v68, v66, a2);
  v75 = v153;
  sub_2414B454C();
  swift_release();
  v210 = v4;
  LOBYTE(v219) = *(_BYTE *)(sub_2412E1ECC() + 16);
  v211(v66, v4, a2);
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = v72;
  *(_QWORD *)(v76 + 24) = v73;
  v77 = v208;
  v74(v76 + v208, v66, a2);
  v209 = v74;
  v78 = v148;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v75, v78);
  v79 = v210;
  v80 = *(_OWORD *)(v210 + 104);
  v219 = *(_OWORD *)(v210 + 88);
  v220 = v80;
  v221 = *(_BYTE *)(v210 + 120);
  sub_2412C8378((uint64_t)&v219, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
  sub_2412E1CCC((uint64_t)&v216);
  sub_2412C8378((uint64_t)&v219, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
  v214 = v216;
  v215 = v217;
  v81 = a2;
  v82 = a2;
  v83 = v211;
  v211(v66, v79, v82);
  v84 = swift_allocObject();
  v85 = v206;
  v86 = v212;
  *(_QWORD *)(v84 + 16) = v206;
  *(_QWORD *)(v84 + 24) = v86;
  v87 = v81;
  v74(v84 + v77, v66, v81);
  v88 = v154;
  v89 = v197;
  sub_2414B4564();
  swift_release();
  sub_2412C68C0(v214, *((uint64_t *)&v214 + 1));
  (*(void (**)(char *, uint64_t))(v167 + 8))(v89, v88);
  v90 = v79 + *(int *)(v87 + 68);
  v91 = *(_QWORD *)v90;
  v92 = *(_QWORD *)(v90 + 8);
  LOBYTE(v74) = *(_BYTE *)(v90 + 16);
  sub_2412C72E4(*(_QWORD *)v90, v92, (char)v74);
  sub_2412EEDF4(v91, v92, (char)v74, (uint64_t *)&v216);
  sub_2412C822C(v91, v92, (char)v74);
  v214 = v216;
  v83(v66, v79, v87);
  v93 = swift_allocObject();
  v94 = v85;
  v95 = v212;
  *(_QWORD *)(v93 + 16) = v85;
  *(_QWORD *)(v93 + 24) = v95;
  v96 = v208;
  v209(v93 + v208, v66, v87);
  v97 = v158;
  v98 = v198;
  sub_2414B4564();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v98, v97);
  v99 = v210;
  v100 = v186;
  sub_2412C8A04(v186);
  v211(v66, v99, v87);
  v101 = swift_allocObject();
  *(_QWORD *)(v101 + 16) = v94;
  *(_QWORD *)(v101 + 24) = v95;
  v102 = v209;
  v209(v101 + v96, v66, v87);
  v103 = v100;
  v104 = v162;
  v105 = v200;
  v106 = v199;
  sub_2414B4564();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v103, v105);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v106, v104);
  v107 = v210;
  type metadata accessor for EnvironmentMonitor();
  sub_2412C8030((unint64_t *)&unk_25437E800, (uint64_t (*)(uint64_t))type metadata accessor for EnvironmentMonitor, (uint64_t)&unk_2414CB074);
  v108 = (void *)sub_2414B3040();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();

  swift_release();
  swift_release();
  v109 = v211;
  v211(v66, v107, v87);
  v110 = swift_allocObject();
  v111 = v212;
  *(_QWORD *)(v110 + 16) = v206;
  *(_QWORD *)(v110 + 24) = v111;
  v112 = v208;
  v102(v110 + v208, v66, v87);
  swift_checkMetadataState();
  v113 = v173;
  v114 = v174;
  v115 = v201;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v178 + 8))(v115, v114);
  v116 = v210;
  v117 = v194;
  sub_2412C8890(v194);
  v118 = v205;
  v109(v205, v116, v87);
  v119 = swift_allocObject();
  v120 = v206;
  v121 = v212;
  *(_QWORD *)(v119 + 16) = v206;
  *(_QWORD *)(v119 + 24) = v121;
  v102(v119 + v112, v118, v87);
  v122 = v117;
  v123 = v170;
  v124 = v202;
  sub_2414B4564();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v122, v124);
  (*(void (**)(char *, uint64_t))(v181 + 8))(v113, v123);
  v125 = v210;
  sub_2412C84FC(*(_QWORD *)(v210 + 40));
  v126 = *(void (**)(uint64_t, uint64_t))(v121 + 208);
  swift_unknownObjectRetain();
  v126(v120, v121);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  v127 = sub_2412C8A74();
  swift_release();
  *(_QWORD *)&v216 = v127;
  v128 = v205;
  v129 = v211;
  v211(v205, v125, v87);
  v130 = swift_allocObject();
  *(_QWORD *)(v130 + 16) = v120;
  *(_QWORD *)(v130 + 24) = v121;
  v131 = v208;
  v209(v130 + v208, v128, v87);
  v132 = v179;
  v133 = v203;
  sub_2414B45B8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v185 + 8))(v133, v132);
  LOBYTE(v133) = *(_BYTE *)(v125 + 80);
  v134 = swift_retain();
  v135 = sub_2412F0D3C(v134, (char)v133);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v216 = v135;
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  LOBYTE(v127) = *(_BYTE *)(v135 + 136);
  swift_release();
  LOBYTE(v216) = v127;
  v129(v128, v125, v87);
  v136 = swift_allocObject();
  v137 = v212;
  *(_QWORD *)(v136 + 16) = v206;
  *(_QWORD *)(v136 + 24) = v137;
  v209(v136 + v131, v128, v87);
  v138 = (uint64_t)v184;
  v139 = v189;
  v140 = MEMORY[0x24BEE1328];
  v141 = v187;
  v142 = MEMORY[0x24BEE1340];
  v143 = v204;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v143, v139);
  *(_QWORD *)&v216 = v139;
  *((_QWORD *)&v216 + 1) = v140;
  *(_QWORD *)&v217 = v141;
  *((_QWORD *)&v217 + 1) = v142;
  swift_getOpaqueTypeConformance2();
  v144 = v188;
  v145 = v190;
  sub_2412FBF34(v138, v190, v188);
  v146 = *(void (**)(uint64_t, uint64_t))(v191 + 8);
  v146(v138, v145);
  sub_2412EEA1C(v144, v145, v196);
  return ((uint64_t (*)(uint64_t, uint64_t))v146)(v144, v145);
}

uint64_t sub_2412C675C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2412C68B0(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_2412C68A4(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  if ((*(_BYTE *)(a1 + 168) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  else
    swift_release();
  sub_2412C821C(*(_QWORD *)(a1 + 176), *(_BYTE *)(a1 + 184));
  v4 = a1 + a2[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_2412C822C(*(_QWORD *)(a1 + a2[17]), *(_QWORD *)(a1 + a2[17] + 8), *(_BYTE *)(a1 + a2[17] + 16));
  v6 = a1 + a2[18];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_2412C68A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_2412C68C0(a1, a2);
  else
    return swift_release();
}

void sub_2412C68B0(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_2412C68C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2412C68F4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2412C6930(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = a1 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v3 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_2412C69A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  else
    swift_release();
  sub_2412C821C(*(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  return swift_release();
}

uint64_t sub_2412C6A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_QWORD *sub_2412C6A94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t type metadata accessor for ArtworkCornerModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437FD30);
}

uint64_t sub_2412C6B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = (_QWORD *)(a1 + 16);
  v9 = (_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 56);
  if ((v10 & 1) != 0)
  {
    v11 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v11;
    (**(void (***)(_QWORD *, _QWORD *))(v11 - 8))(v8, v9);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  *(_BYTE *)(a1 + 56) = v10;
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_BYTE *)(a2 + 72);
  sub_2412C7080(v12, v13);
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  v16 = *(int *)(a3 + 36);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v19 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = sub_2414B38C8();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_retain();
  swift_retain();
  v23(v20, v21, v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  *(_QWORD *)(v17 + *(int *)(v24 + 28)) = *(_QWORD *)(v18 + *(int *)(v24 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_2412C6CA0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ArtworkCornerStyle(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437E770);
}

uint64_t sub_2412C6CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_2412C6F44(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_2412C6D34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  _QWORD *v6;
  _QWORD *v7;
  char v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  sub_2412C6F44(*a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = (_QWORD *)(a1 + 16);
  v7 = a2 + 2;
  v8 = *((_BYTE *)a2 + 56);
  if ((v8 & 1) != 0)
  {
    v9 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v9;
    (**(void (***)(_QWORD *, _QWORD *))(v9 - 8))(v6, v7);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  *(_BYTE *)(a1 + 56) = v8;
  v10 = a2 + 8;
  if ((a2[13] & 1) != 0)
  {
    v11 = (_OWORD *)(a1 + 64);
    v12 = a2[11];
    if (v12)
    {
      v13 = a2[12];
      *(_QWORD *)(a1 + 88) = v12;
      *(_QWORD *)(a1 + 96) = v13;
      (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v11, v10);
    }
    else
    {
      v14 = *((_OWORD *)a2 + 5);
      *v11 = *v10;
      *(_OWORD *)(a1 + 80) = v14;
      *(_QWORD *)(a1 + 96) = a2[12];
    }
    *(_BYTE *)(a1 + 104) = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)v10;
    *(_BYTE *)(a1 + 104) = 0;
    swift_retain();
  }
  v15 = a2[14];
  v16 = a2[15];
  v17 = a2[16];
  v18 = a2[17];
  v19 = a2[18];
  v20 = a2[19];
  v21 = a2[20];
  v22 = a2[21];
  v29 = a2[22];
  v30 = *((_BYTE *)a2 + 184);
  v31 = *((_BYTE *)a2 + 185);
  sub_2412C6F48(v15, v16, v17, v18, v19, v20, v21, v22, v29, v30, v31);
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = v17;
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 152) = v20;
  *(_QWORD *)(a1 + 160) = v21;
  *(_QWORD *)(a1 + 168) = v22;
  *(_QWORD *)(a1 + 176) = v29;
  *(_BYTE *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 185) = v31;
  v23 = a2[24];
  LOBYTE(v16) = *((_BYTE *)a2 + 200);
  sub_2412C6F44(v23, v16);
  *(_QWORD *)(a1 + 192) = v23;
  *(_BYTE *)(a1 + 200) = v16;
  v24 = a2[26];
  LOBYTE(v16) = *((_BYTE *)a2 + 216);
  sub_2412C6F44(v24, v16);
  *(_QWORD *)(a1 + 208) = v24;
  *(_BYTE *)(a1 + 216) = v16;
  v25 = a2[28];
  v26 = a2[29];
  LOBYTE(v17) = *((_BYTE *)a2 + 240);
  sub_2412C72E4(v25, v26, v17);
  *(_QWORD *)(a1 + 224) = v25;
  *(_QWORD *)(a1 + 232) = v26;
  *(_BYTE *)(a1 + 240) = v17;
  v27 = a2[32];
  *(_QWORD *)(a1 + 248) = a2[31];
  *(_QWORD *)(a1 + 256) = v27;
  LOBYTE(v27) = *((_BYTE *)a2 + 272);
  *(_QWORD *)(a1 + 264) = a2[33];
  *(_BYTE *)(a1 + 272) = v27;
  *(_BYTE *)(a1 + 273) = *((_BYTE *)a2 + 273);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2412C6F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  uint64_t result;

  if ((a11 & 1) == 0)
    return swift_retain();
  return result;
}

_QWORD *sub_2412C6F58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = v9[8];
  sub_2412C7080(*(_QWORD *)v9, v11);
  *(_QWORD *)v8 = v10;
  v8[8] = v11;
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_2412C7080(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  v17 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = v19[16];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2412C7080(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_2412C708C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  sub_2412C7300(*(_QWORD *)a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  LOBYTE(v10) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_BYTE *)(a2 + 120);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_2412C72F4(v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  *(_BYTE *)(a1 + 120) = v15;
  v16 = (_QWORD *)(a1 + 128);
  v17 = (_QWORD *)(a2 + 128);
  v18 = *(_BYTE *)(a2 + 168);
  if ((v18 & 1) != 0)
  {
    v19 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 152) = v19;
    (**(void (***)(_QWORD *, _QWORD *))(v19 - 8))(v16, v17);
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  *(_BYTE *)(a1 + 168) = v18;
  v20 = *(_QWORD *)(a2 + 176);
  v21 = *(_BYTE *)(a2 + 184);
  sub_2412C7080(v20, v21);
  *(_QWORD *)(a1 + 176) = v20;
  *(_BYTE *)(a1 + 184) = v21;
  v22 = a3[16];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_2414B2F44();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = a3[17];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  v31 = *(_BYTE *)(v28 + 16);
  sub_2412C72E4(*(_QWORD *)v28, v30, v31);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(v27 + 8) = v30;
  *(_BYTE *)(v27 + 16) = v31;
  v32 = a3[18];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v35 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  else
  {
    *v33 = *v34;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2412C72E4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_2412C72F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_2412C7310(a1, a2);
  else
    return swift_retain();
}

id sub_2412C7300(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t sub_2412C7310(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 88))
    swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MotionPlayerView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571238A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571238B0);
  swift_release();
  v5 = v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B2A88();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_2412C822C(*(_QWORD *)(v3 + *(int *)(v1 + 24)), *(_QWORD *)(v3 + *(int *)(v1 + 24) + 8), *(_BYTE *)(v3 + *(int *)(v1 + 24) + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for ParallaxEffectViewModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B382C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_2412C821C(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for NowPlayingArtworkBackground(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v4 + v8;
  v10 = sub_2414B2A88();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4 + v8, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4 + v8, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v6 + 40), v5);
  v12 = v9 + *(int *)(v6 + 48);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Scrubber(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  swift_release();
  sub_2412E6C04(*(_QWORD *)(v8 + 16), *(unsigned __int8 *)(v8 + 24));
  v9 = v8 + *(int *)(v6 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 60), v5);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for NowPlayingQueue(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  v9 = v8 + *(int *)(v6 + 36);
  sub_2412C823C(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(_BYTE *)(v9 + 72), *(_BYTE *)(v9 + 73));
  v10 = v8 + *(int *)(v6 + 40);
  sub_2412C68A4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_BYTE *)(v10 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ArtworkCornerModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_2412C821C(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  if ((*(_BYTE *)(v3 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  else
    swift_release();
  sub_2412C821C(*(_QWORD *)(v3 + 64), *(_BYTE *)(v3 + 72));
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for DraggableViewModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24134E088(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(_BYTE *)(v3 + 96));
  v4 = v3 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3484();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;

  sub_2412C821C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void objectdestroyTm_13()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_2412C7C8C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v6 = v1 + ((v5 + 64) & ~v5);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6 + a1[17], v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + a1[18], v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6 + a1[19]);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = sub_2414B3C70();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  v7 = v0 + ((v3 + v4 + v6) & ~v6) + *(int *)(v5 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v0;

  swift_release();
  sub_2412C68A4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242695AD0]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242695ADC](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t type metadata accessor for ArtworkClipShape(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437E3A0);
}

uint64_t sub_2412C8030(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x242695AE8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2412C8070(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412C80AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_2412C821C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
  sub_2412C821C(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
  swift_release();
  return swift_release();
}

uint64_t sub_2412C8150(uint64_t a1)
{
  sub_2412C8228(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  else
    swift_release();
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (*(_QWORD *)(a1 + 88))
      __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  else
  {
    swift_release();
  }
  sub_2412C823C(*(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_BYTE *)(a1 + 184), *(_BYTE *)(a1 + 185));
  sub_2412C8228(*(_QWORD *)(a1 + 192), *(unsigned __int8 *)(a1 + 200));
  sub_2412C8228(*(_QWORD *)(a1 + 208), *(unsigned __int8 *)(a1 + 216));
  sub_2412C822C(*(_QWORD *)(a1 + 224), *(_QWORD *)(a1 + 232), *(_BYTE *)(a1 + 240));
  swift_release();
  return swift_release();
}

uint64_t sub_2412C821C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_2412C822C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_2412C823C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  uint64_t result;

  if ((a11 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_2412C824C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TransportButtonStyle()
{
  uint64_t result;

  result = qword_25437D738;
  if (!qword_25437D738)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2412C82CC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2412C8334()
{
  unint64_t result;

  result = qword_25437FDA8;
  if (!qword_25437FDA8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C3868, &type metadata for ArtworkCornerStyleKey);
    atomic_store(result, (unint64_t *)&qword_25437FDA8);
  }
  return result;
}

uint64_t sub_2412C8378(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

unint64_t sub_2412C83B0()
{
  unint64_t result;

  result = qword_254380500;
  if (!qword_254380500)
  {
    result = MEMORY[0x242695AE8](&unk_2414C0358, &type metadata for TransportControlsPlacementKey);
    atomic_store(result, (unint64_t *)&qword_254380500);
  }
  return result;
}

uint64_t sub_2412C83F4()
{
  sub_2412C8430();
  return sub_2414B3838();
}

unint64_t sub_2412C8430()
{
  unint64_t result;

  result = qword_25437E848;
  if (!qword_25437E848)
  {
    result = MEMORY[0x242695AE8](&unk_2414BF120, &type metadata for ArtworkTreatmentKey);
    atomic_store(result, (unint64_t *)&qword_25437E848);
  }
  return result;
}

unint64_t sub_2412C8474()
{
  unint64_t result;

  result = qword_254380F90;
  if (!qword_254380F90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9490, &_s28MarqueeAnimationDirectionKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F90);
  }
  return result;
}

unint64_t sub_2412C84B8()
{
  unint64_t result;

  result = qword_254380F80;
  if (!qword_254380F80)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9500, &_s21MarqueeRepeatCountKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F80);
  }
  return result;
}

uint64_t sub_2412C84FC(uint64_t result)
{
  if (!result)
  {
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2412C8514@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  sub_2412C85DC();
  result = sub_2414B3838();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = v10;
    result = sub_2412CBE78((uint64_t)v6, qword_25437D4A0);
    *a2 = v9;
  }
  return result;
}

unint64_t sub_2412C85DC()
{
  unint64_t result;

  result = qword_25437FCD8;
  if (!qword_25437FCD8)
  {
    result = MEMORY[0x242695AE8](&unk_2414CAC08, &type metadata for OptionalNamespaceKey);
    atomic_store(result, (unint64_t *)&qword_25437FCD8);
  }
  return result;
}

uint64_t sub_2412C8620(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x242695AE8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2412C8684()
{
  unint64_t result;

  result = qword_25437E850;
  if (!qword_25437E850)
  {
    result = MEMORY[0x242695AE8](&unk_2414CADF4, &type metadata for HasBeenPresentedKey);
    atomic_store(result, (unint64_t *)&qword_25437E850);
  }
  return result;
}

unint64_t sub_2412C86C8()
{
  unint64_t result;

  result = qword_25437D870;
  if (!qword_25437D870)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE6EC, &type metadata for UpdateContentSelectionKey);
    atomic_store(result, (unint64_t *)&qword_25437D870);
  }
  return result;
}

_QWORD *sub_2412C870C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v6 = *v7;
    v8 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v9 = (char *)v6 + v8;
    v10 = (char *)v7 + v8;
    v11 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t type metadata accessor for ArtworkInnerStrokeModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_254380368);
}

void type metadata accessor for OSThermalPressureLevel(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_2543843B8);
}

uint64_t sub_2412C8800@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C884C();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

unint64_t sub_2412C884C()
{
  unint64_t result;

  result = qword_2543802F0;
  if (!qword_2543802F0)
  {
    result = MEMORY[0x242695AE8](&unk_2414CAE64, &type metadata for ActiveArtworkPlacementKey);
    atomic_store(result, (unint64_t *)&qword_2543802F0);
  }
  return result;
}

uint64_t sub_2412C8890@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_254380B48, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB1F0], 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_2412C88BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_2412C89C0()
{
  unint64_t result;

  result = qword_254380F50;
  if (!qword_254380F50)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9338, &_s19MarqueeMaskStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F50);
  }
  return result;
}

uint64_t sub_2412C8A04@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_25437DAA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEEE00], 0xD000000000000013, 0x80000002414CEC30, a1);
}

unint64_t sub_2412C8A30()
{
  unint64_t result;

  result = qword_254380518;
  if (!qword_254380518)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5AA8, &type metadata for CAPackageViewForegroundColorKey);
    atomic_store(result, (unint64_t *)&qword_254380518);
  }
  return result;
}

uint64_t sub_2412C8A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 112))
  {
    v1 = *(_QWORD *)(v0 + 112);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380A70);
    sub_2412C8FC4(&qword_254380A68, &qword_254380A70, MEMORY[0x24BDB9D10]);
    v1 = sub_2414B2E60();
    *(_QWORD *)(v2 + 112) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

unint64_t sub_2412C8B18()
{
  unint64_t result;

  result = qword_25437E768;
  if (!qword_25437E768)
  {
    result = MEMORY[0x242695AE8](&unk_2414CAE2C, &type metadata for WindowAspectRatio);
    atomic_store(result, (unint64_t *)&qword_25437E768);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingStandardArtworkTreatment()
{
  return &type metadata for NowPlayingStandardArtworkTreatment;
}

ValueMetadata *type metadata accessor for TransportControlsPlacement()
{
  return &type metadata for TransportControlsPlacement;
}

uint64_t static NowPlayingArtworkTreatment<>.standard.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2412DD598((uint64_t)&unk_2511631D8);
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for AnimatedTransportButton()
{
  return &type metadata for AnimatedTransportButton;
}

ValueMetadata *type metadata accessor for ArtworkStyleModifier.AppliedArtworkStyle()
{
  return &type metadata for ArtworkStyleModifier.AppliedArtworkStyle;
}

void sub_2412C8BF0(char *a1)
{
  sub_2412D0748(*a1);
}

void sub_2412C8BFC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for TransportButton()
{
  return &type metadata for TransportButton;
}

ValueMetadata *type metadata accessor for OpacityModifier()
{
  return &type metadata for OpacityModifier;
}

uint64_t sub_2412C8C2C()
{
  return swift_release();
}

uint64_t destroy for HostedScenePhaseSupport()
{
  return sub_2412C8C2C();
}

void sub_2412C8C44()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8D30(319, (unint64_t *)&qword_2543842A0);
  if (v0 <= 0x3F)
  {
    sub_2412C8D30(319, &qword_25437D1A0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_2412C8D30(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2414B2E54();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_2412C8D74()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8EDC(319, (unint64_t *)&qword_254380B60, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
  if (v0 <= 0x3F)
  {
    sub_2412C8EDC(319, &qword_254380B50, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2412C8E34()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8EDC(319, (unint64_t *)&qword_254380B60, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
  if (v0 <= 0x3F)
  {
    sub_2412C8EDC(319, (unint64_t *)&qword_25437DAA8, (void (*)(uint64_t))MEMORY[0x24BDEEE00]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2412C8EDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2414B2FD4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_2412C8F28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380CA8;
  if (!qword_254380CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CB0);
    v2[0] = sub_2412C8FC4(&qword_254381118, &qword_254381120, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_2543812A8, &qword_2543812B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380CA8);
  }
  return result;
}

uint64_t sub_2412C8FC4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x242695AE8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2412C9004()
{
  sub_2412C8620(&qword_2543809B8, &qword_2543809B0, (uint64_t (*)(void))sub_2412C4858, MEMORY[0x24BEE4AB8]);
  return sub_2414B3340();
}

uint64_t sub_2412C9074()
{
  sub_2412C8620(&qword_254381470, &qword_254381468, (uint64_t (*)(void))sub_241300338, MEMORY[0x24BEE4AB8]);
  return sub_2414B3340();
}

uint64_t sub_2412C90E4@<X0>(uint64_t a1@<X8>)
{
  if (qword_25437E408 != -1)
    swift_once();
  return sub_2412FE934((uint64_t)&xmmword_25437D078, a1);
}

uint64_t sub_2412C9134()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B38C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2412C91AC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC70);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2412D943C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2412C92C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for NowPlayingViewControllerProxy(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t type metadata accessor for NowPlayingViewModel.PlaybackPosition()
{
  return objc_opt_self();
}

uint64_t sub_2412C9334()
{
  sub_2412C884C();
  return sub_2414B3844();
}

uint64_t sub_2412C937C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_2412C9444(a7);
    sub_2412C9444(a9);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2412C9444(a3);
    sub_2412C9444(a5);
    a11 = a7;
  }
  return sub_2412C9444(a11);
}

uint64_t sub_2412C9444(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2412C9454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;

  v9 = &type metadata for NowPlayingStandardArtworkTreatment;
  v10 = sub_2413018E4();
  *(_QWORD *)&v8 = a1;
  swift_beginAccess();
  sub_2412F1B18(a2 + 16, (uint64_t)v6);
  v4 = v7;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  LOBYTE(v4) = NowPlayingArtworkTreatment.isEqual(_:)((uint64_t)&v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((v4 & 1) == 0)
    sub_241481C84(v8, *(_QWORD *)(a2 + 56), a2);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(a2 + 16);
  sub_2412FAA04(&v8, a2 + 16);
  return swift_endAccess();
}

uint64_t sub_2412C9538@<X0>(uint64_t a1@<X8>)
{
  if (qword_254380F48 != -1)
    swift_once();
  return sub_2412F1B18((uint64_t)&unk_254380F18, a1);
}

uint64_t assignWithCopy for OpacityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t sub_2412C95E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D0);
  v6 = sub_2414B56E0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_31;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_31;
          v20 = v9[v15];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_31:
              swift_release();
              v3 = v2;
              if ((v32 & 1) != 0)
              {
                v31 = 1 << *(_BYTE *)(v5 + 32);
                if (v31 >= 64)
                  bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_38;
                if (v15 >= v12)
                  goto LABEL_31;
                v20 = v9[v15];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v15 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      sub_2414B58CC();
      sub_2414B3394();
      sub_2414B58E4();
      result = sub_2414B58FC();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2412C98B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_2414B3E44();
  sub_2414B2F20();
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 40) = v8;
  *(_BYTE *)(a2 + 48) = 0;
  return swift_retain();
}

unint64_t sub_2412C9900()
{
  unint64_t result;

  result = qword_2543814B0;
  if (!qword_2543814B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543814B0);
  }
  return result;
}

void sub_2412C993C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380B70)
  {
    sub_2414B3484();
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380B70);
  }
}

uint64_t sub_2412C9990(uint64_t a1, void (*a2)(void), void (*a3)(void), uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;

  a2();
  a3();
  v6 = sub_2414B3F1C();
  result = swift_release();
  *a4 = v6;
  return result;
}

uint64_t sub_2412C99DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s13HostedContentCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s13HostedContentCMa()
{
  uint64_t result;

  result = qword_25437D708;
  if (!qword_25437D708)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412C9A54()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2412C9AD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AB0)
  {
    sub_2414B2F44();
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AB0);
  }
}

uint64_t sub_2412C9B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_24145CB04(a1, (uint64_t)sub_2412FFBA8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

void sub_2412C9BA4(void *a1)
{
  id v1;

  v1 = a1;
  sub_2412CDD54();

}

uint64_t sub_2412C9BD8()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_25438E7B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25438E7B8);
  return sub_2414B2C98();
}

uint64_t View.marqueeFeathering(_:_:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v8 = a1 & 1;
  v9 = a3 & 1;
  v10 = type metadata accessor for MCUINamespace(0, a4, a3, a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 - v12;
  View.mcui.getter(a4, (uint64_t)&v15 - v12);
  MCUINamespace<A>.marqueeFeathering(_:_:)(v8, a2, v9, v10, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_2412C9D1C()
{
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

double sub_2412C9DA8(uint64_t a1, _QWORD *a2, double *a3, _QWORD *a4)
{
  double result;

  if (*a2 != -1)
    swift_once();
  result = *a3;
  *a4 = *(_QWORD *)a3;
  return result;
}

id sub_2412C9DEC(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  objc_super v6;

  v4 = objc_allocWithZone((Class)type metadata accessor for CollapsedViewController());
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC23CollapsedViewController____lazy_storage___miniPlayerContainer] = 0;
  v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC23CollapsedViewController_hidesMiniPlayer] = 0;
  v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_isActive] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_contentView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_backdropView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_windowProperties] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_statusBarStyle] = a2;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for ContentViewController();
  return objc_msgSendSuper2(&v6, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_2412C9EA4()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_25438E770);
  __swift_project_value_buffer(v0, (uint64_t)qword_25438E770);
  return sub_2414B2C98();
}

uint64_t sub_2412C9F24(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 112);
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_24143F444(a1, v3, KeyPath, v5);
}

void sub_2412C9F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x242695CC8](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_2412D8580();

  }
}

uint64_t sub_2412C9FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + qword_254380258;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2412CA034()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_2412CA0B4(__n128 a1, uint64_t a2, __n128 *a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  __n128 v14;

  v14 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3EEC();
  v11 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = sub_2414B3F04();
  sub_2412CBE78((uint64_t)v10, &qword_254381398);
  result = v14.n128_f64[0];
  *a3 = v14;
  *a4 = 0x403E000000000000;
  *a5 = v12;
  return result;
}

uint64_t type metadata accessor for PassthroughView()
{
  return objc_opt_self();
}

uint64_t sub_2412CA1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  char v8;
  uint64_t v9;
  _BYTE v11[40];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a3;
  v14 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_beginAccess();
  sub_2412F1B18(a2 + 64, (uint64_t)v11);
  v8 = NowPlayingArtworkTreatment.isEqual(_:)((uint64_t)v11, a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if ((v8 & 1) == 0)
  {
    _s7ArtworkCMa();
    sub_2412F0B40(&qword_25437F540, v9, (uint64_t (*)(uint64_t))_s7ArtworkCMa, (uint64_t)&unk_2414BEE10);
    sub_2414B2DA0();
    sub_2414B2DE8();
    swift_release();
    sub_2414B2DC4();
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(a2 + 64);
  sub_2412FAA04(&v12, a2 + 64);
  return swift_endAccess();
}

uint64_t _s11MediaCoreUI20TransportButtonImageOwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2412FAF1C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2412FAF80();
  return a1;
}

uint64_t initializeWithCopy for ArtworkStyleModifier.AppliedArtworkStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_2412CA368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for ViewState();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2412CA3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void (*v8)(uint64_t *, _QWORD);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (!a2)
  {
    if (!v12)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (!v12)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v11 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v6 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  _s13HostedContentCMa();
  sub_2412C8030(&qword_25437D700, (uint64_t (*)(uint64_t))_s13HostedContentCMa, (uint64_t)&unk_2414BE51C);
  sub_2414B2D94();
  sub_2414B2DE8();
  swift_release();
  v13 = a3;
  swift_retain();
  v8 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
  v10 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v10 = a1;
  v10[1] = a2;
  v8(&v11, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_2412CA594(char a1)
{
  uint64_t v1;
  void *v3;
  void *v4;

  objc_msgSend(*(id *)(v1 + qword_2543801F8), sel_removeFromSuperview);
  if ((a1 & 1) != 0)
  {
    v3 = *(void **)(v1 + qword_2543801F8);
    *(_QWORD *)(v1 + qword_2543801F8) = 0;

  }
  objc_msgSend(*(id *)(v1 + qword_254380110), sel_removeFromSuperview);
  v4 = *(void **)(v1 + qword_254380110);
  *(_QWORD *)(v1 + qword_254380110) = 0;

}

uint64_t sub_2412CA604@<X0>(uint64_t a1@<X8>)
{
  if (qword_25437E838 != -1)
    swift_once();
  return sub_2412F1B18((uint64_t)&qword_25437E810, a1);
}

uint64_t sub_2412CA658(char a1, uint64_t a2)
{
  void (*v4)(_QWORD *, _QWORD);
  _BYTE *v5;
  _QWORD v7[4];
  uint64_t v8;

  v7[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (((a1 & 1) == 0) == v8)
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_2412C8030(&qword_2543816E0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v8 = a2;
    swift_retain();
    v4 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    *v5 = a1 & 1;
    v4(v7, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return swift_release();
}

id sub_2412CA784()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EnvironmentMonitor()), sel_init);
  qword_25438E8C0 = (uint64_t)result;
  return result;
}

void sub_2412CA7B4()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  double v13;
  id v14;
  int v15;
  id v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  id v22;
  void *v23;
  double v24;
  id v25;
  void *v26;
  double Height;
  double v28;
  double v29;
  void *v30;
  id v31;
  char *v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  id v51;
  void *v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double Width;
  double v62;
  double v63;
  void *v64;
  double v65;
  id v66;
  _BYTE *v67;
  int v68;
  int v69;
  id v70;
  void *v71;
  void *v72;
  uint64_t v73;
  id v74;
  unsigned __int8 *v75;
  double v76;
  uint64_t v77;
  objc_class *v78;
  double v79;
  double v80;
  objc_super v81;
  _BYTE v82[80];
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v1 = *(void **)&v0[qword_25437D840];
  if (!v1)
  {
    __break(1u);
    goto LABEL_40;
  }
  v2 = v0;
  v3 = *(_QWORD *)v0;
  v4 = *MEMORY[0x24BEE4EA0];
  v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_topAnchor);

  v8 = sub_2412D8AA0();
  if (!v8
    || (v9 = v8, v10 = objc_msgSend(v8, sel_topAnchor), v9, !v10))
  {
    sub_241490CE8();
    v12 = v11;
    v10 = objc_msgSend(v11, sel_bottomAnchor);

  }
  sub_2412D8B78();
  v14 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v10, -v13);

  sub_2412CD93C(v14);
  sub_241490AE4((uint64_t)v82);
  v15 = v82[18];
  v16 = objc_msgSend(v2, sel_view);
  if (!v16)
    goto LABEL_41;
  v17 = v16;
  v18 = objc_msgSend(v16, sel_effectiveUserInterfaceLayoutDirection);

  v19 = *(double *)&v2[qword_2543829B0 + 24];
  if (v18 != (id)1)
    v19 = *(double *)&v2[qword_2543829B0 + 8];
  v20 = -v19;
  if (v18 == (id)1)
    v21 = v20;
  else
    v21 = *(double *)&v2[qword_2543829B0 + 8];
  v22 = sub_24148E224();
  v23 = v22;
  v24 = v21 * 0.5;
  if (v15 != 2)
    v24 = 0.0;
  objc_msgSend(v22, sel_setConstant_, v24);

  v25 = sub_2412D8AA0();
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, sel_bounds);
    Height = CGRectGetHeight(v83);

    v28 = Height + 6.0;
    v29 = 12.0;
  }
  else
  {
    v29 = 24.0;
    v28 = 24.0;
  }
  v30 = *(void **)&v2[qword_25437D840];
  if (!v30)
    goto LABEL_42;
  v31 = v30;
  v32 = (char *)sub_2412DA58C();

  v33 = (double *)&v32[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  v35 = *(double *)&v32[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  v34 = *(double *)&v32[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets + 8];
  v37 = *(double *)&v32[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets + 16];
  v36 = *(double *)&v32[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets + 24];
  *v33 = 0.0;
  v33[1] = v29;
  v33[2] = v28;
  v33[3] = v29;
  if (v35 != 0.0 || v29 != v34 || v28 != v37 || v29 != v36)
    objc_msgSend(v32, sel_setNeedsLayout, v36, v37, v34);

  v38 = objc_msgSend(v2, sel_view);
  if (!v38)
    goto LABEL_43;
  v39 = v38;
  v40 = objc_msgSend(v38, sel_window);

  if (v40)
  {
    v41 = objc_msgSend(v40, sel_screen);

  }
  else
  {
    v42 = objc_msgSend(v2, sel_view);
    if (!v42)
    {
LABEL_47:
      __break(1u);
      return;
    }
    v41 = v42;
  }
  objc_msgSend(v41, sel_bounds);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v79 = v29;
  v80 = v21;

  v51 = objc_msgSend(v2, sel_view);
  if (!v51)
    goto LABEL_44;
  v52 = v51;
  objc_msgSend(v51, sel_bounds);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  v84.origin.x = v54;
  v84.origin.y = v56;
  v84.size.width = v58;
  v84.size.height = v60;
  Width = CGRectGetWidth(v84);
  v85.origin.x = v44;
  v85.origin.y = v46;
  v85.size.width = v48;
  v85.size.height = v50;
  v62 = CGRectGetWidth(v85);
  v86.origin.x = v44;
  v86.origin.y = v46;
  v86.size.width = v48;
  v86.size.height = v50;
  v63 = CGRectGetHeight(v86);
  if (v63 >= v62)
    v63 = v62;
  v64 = *(void **)&v2[qword_25437D840];
  if (!v64)
    goto LABEL_45;
  v65 = (v79 + v79) * 0.5 + v63;
  v66 = v64;
  v67 = sub_2412DA58C();

  v68 = v65 < Width - v80;
  v69 = v67[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows];
  v67[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows] = v68;
  if (v68 != v69)
    objc_msgSend(v67, sel_setNeedsLayout);

  v70 = sub_24148E334();
  v71 = *(void **)&v2[qword_25437D840];
  if (!v71)
    goto LABEL_46;
  v72 = v70;
  v73 = v4 & v3;
  v74 = v71;
  v75 = (unsigned __int8 *)sub_2412DA58C();

  LODWORD(v74) = v75[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows];
  if ((_DWORD)v74)
    v76 = v65;
  else
    v76 = Width - v80;
  objc_msgSend(v72, sel_setConstant_, v76, *(_QWORD *)&v79, *(_QWORD *)&v80);

  v78 = (objc_class *)type metadata accessor for NowPlayingViewController(0, *(_QWORD *)(v73 + 80), *(_QWORD *)(v73 + 88), v77);
  v81.receiver = v2;
  v81.super_class = v78;
  objc_msgSendSuper2(&v81, sel_updateViewConstraints);
}

uint64_t sub_2412CACF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2412CAD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&unk_2414C8D10, a3);
  return sub_2414B3A54();
}

double sub_2412CADC8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  double v10;
  double v11;
  _BYTE v13[16];

  v6 = sub_2414B32BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414B33AC();
  v13[8] = a2 & 1;
  v13[0] = a4 & 1;
  sub_2414B3298();
  v11 = v10;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t sub_2412CAEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  char v16;

  v12 = *(_QWORD *)(a1 + 32);
  v13 = type metadata accessor for NowPlayingViewControllerProxy(0, a2, a3, a4);
  MEMORY[0x242695AE8](&unk_2414CCC70, v13);
  sub_2412C84FC(v12);
  *(double *)v15 = a5;
  *(double *)&v15[1] = a6;
  *(double *)&v15[2] = a7;
  *(double *)&v15[3] = a8;
  v16 = 0;
  swift_retain();
  sub_2413019EC((uint64_t)v15);
  return swift_release();
}

uint64_t sub_2412CAF40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  char v20;
  _QWORD v21[6];
  char v22;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *((unsigned __int8 *)a1 + 48);
  result = swift_beginAccess();
  v10 = *(_OWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v13 = *(_OWORD *)(v1 + 56);
  v14 = *(unsigned __int8 *)(v1 + 72);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v5;
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 64) = v7;
  *(_BYTE *)(v1 + 72) = v8;
  if (v8 == 2)
  {
    if (v14 == 2)
      return result;
LABEL_6:
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412F0B40(&qword_25437ECC0, v15, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    return swift_release();
  }
  v21[0] = v2;
  v21[1] = v3;
  v21[2] = v4;
  v21[3] = v5;
  v21[4] = v6;
  v21[5] = v7;
  v22 = v8;
  if (v14 == 2)
    goto LABEL_6;
  v16 = v10;
  v17 = v12;
  v18 = v11 & 1;
  v19 = v13;
  v20 = v14 & 1;
  result = _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)&v16);
  if ((result & 1) == 0)
    goto LABEL_6;
  return result;
}

uint64_t sub_2412CB058@<X0>(char *a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7[4];

  v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  swift_bridgeObjectRetain();
  v5 = sub_2414B4708();
  sub_2412D2418(v5, v7, a1);
  return swift_release();
}

uint64_t sub_2412CB0C0@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t v1;
  __int128 *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(__int128 **)(v1 + 32);
  v4 = (_OWORD *)swift_allocObject();
  v4[1] = *(_OWORD *)(v1 + 16);
  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  *(_OWORD *)((char *)v4 + 73) = *(__int128 *)((char *)v3 + 41);
  v4[3] = v6;
  v4[4] = v7;
  v4[2] = v5;
  *a1 = sub_2412FF4F8;
  a1[1] = (uint64_t (*)(uint64_t))v4;
  return sub_2412FA354((uint64_t)v3);
}

uint64_t sub_2412CB12C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_254380510 != -1)
    swift_once();
  *a1 = qword_254380508;
  return swift_retain();
}

uint64_t sub_2412CB17C()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_25437D9C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25437D9C0);
  return sub_2414B2C98();
}

uint64_t sub_2412CB1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&unk_2414C8D10, a3);
  return sub_2414B3A00();
}

void sub_2412CB258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380B60)
  {
    sub_2414B2F8C();
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380B60);
  }
}

double sub_2412CB2AC@<D0>(uint64_t a1@<X8>)
{
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  char v6;
  double result;

  if (qword_25437E470 != -1)
    swift_once();
  v2 = byte_25437E430;
  v3 = *(_WORD *)algn_25437E431;
  v4 = qword_25437E438;
  v5 = byte_25437E440;
  v6 = byte_25437E468;
  *(_OWORD *)a1 = xmmword_25437E420;
  *(_BYTE *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 17) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = unk_25437E448;
  result = dbl_25437E458[0];
  *(_OWORD *)(a1 + 56) = *(_OWORD *)dbl_25437E458;
  *(_BYTE *)(a1 + 72) = v6;
  return result;
}

uint64_t sub_2412CB338()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B3484();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_2412CB3E4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_25437E758 != -1)
    swift_once();
  result = *(double *)&xmmword_254381808;
  v3 = unk_254381818;
  *a1 = xmmword_254381808;
  a1[1] = v3;
  return result;
}

unint64_t sub_2412CB438()
{
  unint64_t result;

  result = qword_254381560;
  if (!qword_254381560)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254381560);
  }
  return result;
}

uint64_t sub_2412CB474()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_2412CB510()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_254380D10;
  if (!qword_254380D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D18);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381400);
    v2[3] = type metadata accessor for TransportButtonStyle();
    v2[4] = sub_2412C8FC4(&qword_2543813F8, &qword_254381400, MEMORY[0x24BDF43B0]);
    v2[5] = sub_2412F0B40((unint64_t *)&unk_25437FCE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TransportButtonStyle, (uint64_t)&unk_2414C0548);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D10);
  }
  return result;
}

uint64_t _s11ContextMenuCMa()
{
  return objc_opt_self();
}

unint64_t sub_2412CB640()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380D88;
  if (!qword_254380D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D90);
    v2[0] = sub_2412C8FC4(&qword_254381408, &qword_254381410, MEMORY[0x24BDF43B0]);
    v2[1] = sub_2412C8FC4(&qword_254381058, &qword_254381060, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D88);
  }
  return result;
}

unint64_t sub_2412CB6DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380BC8;
  if (!qword_254380BC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380BD0);
    v2[0] = sub_2412C8FC4(&qword_254380B80, &qword_254380B88, MEMORY[0x24BDEB9A8]);
    v2[1] = sub_2412C8FC4(&qword_254381480, &qword_254381488, MEMORY[0x24BDF5428]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380BC8);
  }
  return result;
}

unint64_t sub_2412CB778()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C68;
  if (!qword_254380C68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C70);
    v2[0] = sub_2412C8FC4(&qword_2543810D8, &qword_2543810E0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254381318, &qword_254381320, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C68);
  }
  return result;
}

unint64_t sub_2412CB814()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254381048;
  if (!qword_254381048)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381050);
    v2[0] = sub_2412C8FC4(&qword_254381418, &qword_254381420, MEMORY[0x24BDF4498]);
    v2[1] = sub_2412C8FC4(&qword_2543810C8, &qword_2543810D0, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254381048);
  }
  return result;
}

unint64_t sub_2412CB8B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380D98;
  if (!qword_254380D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380DA0);
    v2[0] = sub_2412C8FC4(&qword_254381428, &qword_254381430, MEMORY[0x24BDF4498]);
    v2[1] = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D98);
  }
  return result;
}

id sub_2412CB94C(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _CAPackageView() - 8) + 80);
  return sub_2412E3570(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_2412CB988(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _CAPackageView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2412CB9C4()
{
  sub_2412DC4EC();
  return sub_2414B3340();
}

unint64_t sub_2412CBA14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C78;
  if (!qword_254380C78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C80);
    v2[0] = sub_2412C8FC4(&qword_2543810E8, &qword_2543810F0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254380EC8, &qword_254380ED0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C78);
  }
  return result;
}

unint64_t sub_2412CBAB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C98;
  if (!qword_254380C98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CA0);
    v2[0] = sub_2412C8FC4(&qword_254381108, &qword_254381110, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C98);
  }
  return result;
}

void sub_2412CBB4C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(v1
                + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_backdropView);
  v5 = a1;
  v4 = v3;
  sub_241302698(a1);
  sub_2412CE1E8(v3);

}

void sub_2412CBBAC()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_2414B4D44();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleWithIdentifier_, v0);

  if (!v2)
    v2 = objc_msgSend(v1, sel_mainBundle);
  qword_25438E910 = (uint64_t)v2;
}

uint64_t sub_2412CBC44(uint64_t a1, uint64_t a2)
{
  char v4;
  void (*v6)(_QWORD *, _QWORD);
  uint64_t v7;
  _BYTE v8[56];
  _BYTE v9[56];
  _QWORD v10[6];
  unsigned __int8 v11;
  __int128 v12[3];
  unsigned __int8 v13;
  _QWORD v14[8];

  v14[7] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  sub_2412CBEB4(a1, (uint64_t)v10);
  sub_2412CBEB4((uint64_t)v14, (uint64_t)v12);
  if (v11 == 255)
  {
    if (v13 == 255)
    {
      sub_2412CBE78((uint64_t)v10, &qword_25437F040);
      sub_2412CBE78((uint64_t)v14, &qword_25437F040);
      goto LABEL_7;
    }
  }
  else
  {
    sub_2412CBEB4((uint64_t)v10, (uint64_t)v9);
    if (v13 != 255)
    {
      sub_24133AD8C(v12, (uint64_t)v8);
      v4 = _s11MediaCoreUI19NowPlayingViewModelC18MiniPlayerSubtitleO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v8);
      sub_24133AD60((uint64_t)v8);
      sub_24133AD60((uint64_t)v9);
      sub_2412CBE78((uint64_t)v10, &qword_25437F040);
      sub_2412CBE78((uint64_t)v14, &qword_25437F040);
      if ((v4 & 1) == 0)
        goto LABEL_10;
LABEL_7:
      swift_release();
      swift_release();
      swift_release();
      return sub_2412CBE78(a1, &qword_25437F040);
    }
    sub_24133AD60((uint64_t)v9);
  }
  sub_2412CBE78((uint64_t)v10, &qword_2543816E8);
  sub_2412CBE78((uint64_t)v14, &qword_25437F040);
LABEL_10:
  _s18MiniPlayerMetadataCMa();
  sub_2412C8030(&qword_25437EF28, (uint64_t (*)(uint64_t))_s18MiniPlayerMetadataCMa, (uint64_t)&unk_2414BA9A8);
  sub_2414B2D94();
  sub_2414B2DE8();
  swift_release();
  v14[0] = a2;
  swift_retain();
  v6 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
  sub_24143F89C(a1, v7);
  v6(v10, 0);
  swift_release();
  swift_release();
  swift_release();
  sub_2412CBE78(a1, &qword_25437F040);
  return swift_release();
}

uint64_t sub_2412CBE78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2412CBEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437F040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412CBEFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C8684();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

double sub_2412CBF48@<D0>(_QWORD *a1@<X2>, double *a2@<X3>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

uint64_t sub_2412CBF8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_2414B28D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_2414B28CC();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2412CC030@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, _QWORD, uint64_t);
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _QWORD v26[3];
  ValueMetadata *v27;
  unint64_t v28;

  v3 = v2;
  v6 = type metadata accessor for ArtworkCornerModifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 - 2 < 3)
  {
    v27 = &type metadata for Features;
    v28 = sub_2412FD4AC();
    v9 = swift_allocObject();
    v26[0] = v9;
    *(_QWORD *)(v9 + 16) = "MediaCoreUI";
    *(_QWORD *)(v9 + 24) = 11;
    *(_BYTE *)(v9 + 32) = 2;
    *(_QWORD *)(v9 + 40) = "Catamaran";
    *(_QWORD *)(v9 + 48) = 9;
    *(_BYTE *)(v9 + 56) = 2;
    v10 = sub_2414B2BCC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v11 = (char *)a2 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v12 = sub_2414B38C8();
    v13 = *(uint64_t (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104);
    if ((v10 & 1) != 0)
    {
      result = v13(v11, *MEMORY[0x24BDEEB68], v12);
      v15 = 0x401A000000000000;
    }
    else
    {
      result = v13(v11, *MEMORY[0x24BDEEB78], v12);
      v15 = 0x4014000000000000;
    }
    goto LABEL_18;
  }
  if (*a1)
  {
    if (qword_257120950 != -1)
      swift_once();
    v19 = type metadata accessor for ArtworkCornerStyle(0);
    v20 = qword_2571370C0;
    goto LABEL_15;
  }
  sub_2412EFAC0((uint64_t)v26);
  v16 = (uint64_t)v27;
  __swift_project_boxed_opaque_existential_1(v26, (uint64_t)v27);
  LOBYTE(v16) = sub_241387790(v16);
  sub_2412C6A50(v3, (uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
  if ((v16 & 1) == 0)
  {
    sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    goto LABEL_17;
  }
  v17 = *((_QWORD *)v8 + 10);
  if (v17)
  {
    swift_beginAccess();
    v18 = *(_BYTE *)(v17 + 16);
    sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if ((v18 & 1) != 0)
    {
      if (qword_257120958 != -1)
        swift_once();
      v19 = type metadata accessor for ArtworkCornerStyle(0);
      v20 = qword_2571370D8;
LABEL_15:
      v21 = __swift_project_value_buffer(v19, (uint64_t)v20);
      return sub_2412C6A50(v21, (uint64_t)a2, type metadata accessor for ArtworkCornerStyle);
    }
LABEL_17:
    v22 = (char *)a2 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v23 = *MEMORY[0x24BDEEB78];
    v24 = sub_2414B38C8();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
    v15 = 0x4024000000000000;
LABEL_18:
    *a2 = v15;
    return result;
  }
  _s14DefaultArtworkCMa();
  sub_2412C8030(&qword_25437F478, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_2412CC340()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2412CC400()
{
  return sub_2414B373C();
}

uint64_t sub_2412CC420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EnvironmentMonitor();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for EnvironmentMonitor()
{
  uint64_t result;

  result = qword_254384308;
  if (!qword_254384308)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412CC498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25437FDA0 != -1)
    swift_once();
  v2 = type metadata accessor for ArtworkCornerStyle(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25437D0D8);
  return sub_2412C6A50(v3, a1, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_2412CC504(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for ArtworkCornerStyle(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2412C6A50(a1, (uint64_t)&v9 - v6, type metadata accessor for ArtworkCornerStyle);
  sub_2412C6A50((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
  sub_2412C8334();
  sub_2414B3844();
  return sub_2412C68F4((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_2412CC5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v11;
  __int16 v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;

  v11 = a3 & 1;
  v12 = a3 & 0x100;
  sub_2412E6F7C(a2, a3 & 1);
  v13 = sub_2412E7474(a2, v11);
  sub_2412E6BF8(a2, v11);
  if ((a5 & 1) != 0)
  {
    sub_2412E6F7C(a2, v11);
    v16 = sub_24145D3CC(v13, a2, v12 | (v11 != 0));
    sub_2412E6BF8(a2, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2414B72B0;
    *(_BYTE *)(inited + 32) = HIBYTE(v12);
    *(_QWORD *)(inited + 40) = a4;
    v15 = sub_2412CCE8C(inited);
    v16 = sub_2412C9B28(v15, v13);
  }
  KeyPath = swift_getKeyPath();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a6, a1, v18);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C70);
  v20 = (uint64_t *)(a6 + *(int *)(result + 36));
  *v20 = KeyPath;
  v20[1] = v16;
  return result;
}

uint64_t sub_2412CC73C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for ContentLookupItem();
  return result;
}

void type metadata accessor for ContentLookupItem()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2412CC838()
{
  swift_getObjCClassMetadata();
  sub_2412CC85C();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_2412CC85C()
{
  return sub_2412CC884(0, &qword_2543814E8);
}

uint64_t sub_2412CC884(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2412CC8BC@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2412CC900()
{
  sub_2412C8334();
  return sub_2414B3838();
}

uint64_t sub_2412CC93C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

double sub_2412CCAA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  sub_2412CCC6C();
  sub_2414B3838();
  v11[0] = v11[1];
  v8 = v12;
  v9 = v13;
  sub_241314A7C((uint64_t)v6);
  result = *(double *)v11;
  *(_OWORD *)a2 = v11[0];
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_2412CCB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_OWORD *)a1;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = sub_2414B382C();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a2, v9);
  v12[1] = v12[0];
  v13 = v7;
  v14 = v8;
  sub_2412CCC6C();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
}

unint64_t sub_2412CCC6C()
{
  unint64_t result;

  result = qword_25437E760;
  if (!qword_25437E760)
  {
    result = MEMORY[0x242695AE8](&unk_2414B96F4, &type metadata for SafeAreaInsetsKey);
    atomic_store(result, (unint64_t *)&qword_25437E760);
  }
  return result;
}

double sub_2412CCCB0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_2412C86C8();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t _s6BannerCMa()
{
  return objc_opt_self();
}

double sub_2412CCD1C()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  xmmword_25437E420 = 0uLL;
  byte_25437E430 = 1;
  *(_WORD *)algn_25437E431 = 777;
  qword_25437E438 = (uint64_t)v1;
  byte_25437E440 = 0;
  result = 0.0;
  unk_25437E448 = 0u;
  unk_25437E458 = 0u;
  byte_25437E468 = 0;
  return result;
}

uint64_t sub_2412CCDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412E6F7C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412E6BF8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_2412CBE78(a1 + v10, &qword_254380B68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_2412CCE8C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D0);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    result = sub_2412E7920(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double sub_2412CCF8C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;

  sub_2412CCFE0();
  sub_2414B3838();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

unint64_t sub_2412CCFE0()
{
  unint64_t result;

  result = qword_254380F88;
  if (!qword_254380F88)
  {
    result = MEMORY[0x242695AE8](&unk_2414C92C8, &_s24MarqueeEmbeddedBadgesKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F88);
  }
  return result;
}

uint64_t sub_2412CD024(uint64_t a1, uint64_t a2)
{
  char v4;
  void (*v5)(uint64_t *, _QWORD);
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v9[4];
  uint64_t v10;

  v9[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v4 = sub_241300104(a1, v10);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_2412C8030(&qword_2543816E0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v10 = a2;
    swift_retain();
    v5 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v7 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v7 = a1;
    v5(v9, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2412CD18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.CurrentItem(0);
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel.CurrentItem(uint64_t a1)
{
  return sub_2412C6CA0(a1, (uint64_t *)&unk_25437E928);
}

void sub_2412CD1DC(void *a1)
{
  a1;
  sub_2412E7570();
}

void sub_2412CD1FC()
{
  void *v0;

}

uint64_t assignWithCopy for MarqueeMaskModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_2412CBE78(a1, &qword_254380B20);
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  return a1;
}

void sub_2412CD294(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)

}

unint64_t sub_2412CD2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2414B58CC();
  sub_2414B4DD4();
  v4 = sub_2414B58FC();
  return sub_2412D94B0(a1, a2, v4);
}

unint64_t sub_2412CD340(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254382CC0);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2412CD2DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

__n128 sub_2412CD460@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 result;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[136];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[40];
  __int128 v52;
  __n128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char v60;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v8 = v6;
  v9 = v7;
  if ((v10 & 1) != 0)
  {
    v17 = a1[8];
    v18 = a1[9];
    v19 = a1[10];
    v20 = a1[11];
    v32 = a1[7];
    v33 = a1[6];
    sub_2412D2824(v33);
    sub_2412D2824(v17);
    sub_2412D2824(v19);
    sub_2414B4798();
    v31 = v52;
    v30 = *((_QWORD *)&v52 + 1);
    LOBYTE(v35) = 0;
    sub_2414B4798();
    v21 = v52;
    v22 = *((_QWORD *)&v52 + 1);
    sub_2412F1B18((uint64_t)a1, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571252D0);
    v23 = 1.0;
    if (swift_dynamicCast())
    {
      sub_2412FAF80();
      v23 = -1.0;
    }
    sub_2414B4B64();
    LOBYTE(v35) = v31;
    v36 = v30;
    LOBYTE(v37) = v21;
    v38 = v22;
    v39 = v8;
    v40 = v9;
    v41 = v33;
    v42 = v32;
    v43 = v17;
    v44 = v18;
    v45 = v19;
    v46 = v20;
    v47 = v23;
    v48 = 0x3FF0000000000000;
    v49 = v24;
    v50 = v25;
    sub_24139921C((uint64_t)&v35);
    sub_2412EAEA4((uint64_t)&v35, (uint64_t)v34, (uint64_t *)&unk_25437DB70);
  }
  else
  {
    v11 = a1[6];
    v12 = a1[7];
    v13 = a1[8];
    v14 = a1[9];
    v15 = a1[10];
    v16 = a1[11];
    v35 = v6;
    v36 = v7;
    v37 = v11;
    v38 = v12;
    v39 = v13;
    v40 = v14;
    v41 = v15;
    v42 = v16;
    sub_241399228((uint64_t)&v35);
    sub_2412EAEA4((uint64_t)&v35, (uint64_t)v34, (uint64_t *)&unk_25437DB70);
    sub_2412D2824(v11);
    sub_2412D2824(v13);
    sub_2412D2824(v15);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380C00);
  sub_241302488();
  sub_2412DC484(&qword_254380BF8, &qword_254380C00, (uint64_t (*)(void))sub_241302378, MEMORY[0x24BDEBF50]);
  sub_2414B3A84();
  v26 = v59;
  *(_OWORD *)(a2 + 96) = v58;
  *(_OWORD *)(a2 + 112) = v26;
  *(_BYTE *)(a2 + 128) = v60;
  v27 = v55;
  *(_OWORD *)(a2 + 32) = v54;
  *(_OWORD *)(a2 + 48) = v27;
  v28 = v57;
  *(_OWORD *)(a2 + 64) = v56;
  *(_OWORD *)(a2 + 80) = v28;
  result = v53;
  *(_OWORD *)a2 = v52;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_2412CD6E0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  result = sub_2414B4D80();
  qword_25438E7F8 = result;
  unk_25438E800 = v4;
  return result;
}

void sub_2412CD804()
{
  swift_release();
  swift_release();
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

void sub_2412CD870(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);

}

_QWORD *sub_2412CD8B0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2412CD93C(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + qword_2543801C8);
  *(_QWORD *)(v1 + qword_2543801C8) = a1;
  v3 = a1;
  sub_2412CD984(v2);

}

id sub_2412CD984(void *a1)
{
  uint64_t v1;
  id result;

  if (a1)
    objc_msgSend(a1, sel_setActive_, 0);
  result = *(id *)(v1 + qword_2543801C8);
  if (result)
    return objc_msgSend(result, sel_setActive_, 1);
  __break(1u);
  return result;
}

uint64_t sub_2412CD9CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2412CDA58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;

  v5 = *a1;
  v6 = a1[1];
  v7 = *(_QWORD *)(v4 + 96);
  v8 = *((unsigned __int8 *)a1 + 16);
  KeyPath = swift_getKeyPath();
  v10 = swift_getKeyPath();
  swift_retain();
  return a4(v5, v6, v8, v7, KeyPath, v10);
}

uint64_t sub_2412CDAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  sub_2412C7080(v4, v5);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  sub_2412C821C(v6, v7);
  if (a1 != a2)
  {
    v8 = (__int128 *)(a2 + 48);
    sub_2412CBE78(a1 + 48, &qword_254380B78);
    if ((*(_BYTE *)(a2 + 88) & 1) != 0)
    {
      v9 = *(_QWORD *)(a2 + 72);
      if (v9)
      {
        *(_QWORD *)(a1 + 72) = v9;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
      }
      else
      {
        v10 = *v8;
        v11 = *(_OWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 48) = v10;
        *(_OWORD *)(a1 + 64) = v11;
      }
      *(_BYTE *)(a1 + 88) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)v8;
      *(_BYTE *)(a1 + 88) = 0;
      swift_retain();
    }
  }
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_BYTE *)(a2 + 104);
  sub_2412E6F7C(v12, v13);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  *(_BYTE *)(a1 + 104) = v13;
  sub_2412E6BF8(v14, v15);
  return a1;
}

uint64_t assignWithCopy for TransportButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (v4)
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = v9;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  v11 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v13;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  return a1;
}

void sub_2412CDD54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;

  v1 = v0;
  v2 = *MEMORY[0x24BEE4EA0] & *(_QWORD *)v0;
  type metadata accessor for PassthroughView();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v1, sel_setView_, v3);

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v2 + 88);
  _s12BackdropViewCMa(0, v4, v5, v6);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  v8 = sub_24147B43C(v7);
  v9 = *(void **)&v1[qword_2543801C0];
  *(_QWORD *)&v1[qword_2543801C0] = v8;

}

void sub_2412CDE18(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];
  __int128 v14[2];

  v9 = *a1;
  v10 = (void *)objc_opt_self();
  sub_2412F1B18(a2, (uint64_t)v14);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  *(_BYTE *)(v11 + 32) = v9;
  *(_QWORD *)(v11 + 40) = a3;
  sub_2412FAA04(v14, v11 + 48);
  aBlock[4] = sub_241302070;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_23;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_, v12, 0.2);
  _Block_release(v12);
}

uint64_t sub_2412CDFCC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  char v29;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  v4 = v2[2];
  v5 = *((_BYTE *)v2 + 24);
  sub_2412C7080(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_2412C821C(v6, v7);
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = v2[8];
  v13 = v2[9];
  v14 = v2[10];
  v15 = v2[11];
  v28 = v2[12];
  v29 = *((_BYTE *)v2 + 104);
  LOBYTE(v2) = *((_BYTE *)v2 + 105);
  sub_2412C6F48(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29, (char)v2);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v24 = *(_QWORD *)(a1 + 96);
  v25 = *(_BYTE *)(a1 + 104);
  v26 = *(_BYTE *)(a1 + 105);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v28;
  *(_BYTE *)(a1 + 104) = v29;
  *(_BYTE *)(a1 + 105) = (_BYTE)v2;
  sub_2412C823C(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  return a1;
}

void sub_2412CE104(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(id *)(v4 + qword_25437D790);

    objc_msgSend(v6, sel_setHidden_, v2 ^ 1u);
  }
}

uint64_t sub_2412CE188()
{
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

void sub_2412CE1E8(void *a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;

  objc_msgSend(a1, sel_removeFromSuperview);
  v2 = (char *)sub_2412DA58C();
  v3 = *(void **)(v1
                + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_backdropView);
  v4 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView;
  v7 = v2;
  v5 = *(void **)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView] = v3;
  v6 = v3;
  objc_msgSend(v5, sel_removeFromSuperview);
  if (*(_QWORD *)&v7[v4])
    objc_msgSend(v7, sel_addSubview_);

}

void sub_2412CE288()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  void *v4;
  uint64_t v5;
  id v6;
  CGRect v7;

  objc_msgSend(v0, sel_bounds);
  v1 = 1.0 / CGRectGetWidth(v7);
  objc_msgSend(v0, sel_contentInset);
  v3 = v1 * v2;
  v4 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x98));
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2414BE320;
  sub_2412CC884(0, &qword_2543843E8);
  *(_QWORD *)(v5 + 32) = sub_2414B5314();
  *(_QWORD *)(v5 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 1.0 - v3);
  *(_QWORD *)(v5 + 48) = sub_2414B5314();
  sub_2414B4EDC();
  v6 = (id)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLocations_, v6);

}

id static UIFont.font(forTextStyle:symbolicTraits:)(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, a1);
  v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v4)
  {
    v5 = v4;

    v3 = v5;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v3, 0.0);

  return v6;
}

uint64_t sub_2412CE474()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = (void *)sub_2414B4D44();
  v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2)
  {
    v3 = (void *)sub_2414B4D44();
    v2 = objc_msgSend(v0, sel_stringForKey_, v3);

    if (!v2)
      return 0;
  }
  v4 = sub_2414B4D68();

  return v4;
}

uint64_t sub_2412CE554(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = v2[5];
  v4 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_2412C7080(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_2412C821C(v5, v6);
  return a1;
}

void sub_2412CE608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v2 & 0xFF0000;
    if ((v2 & 0xFF0000) == 0x40000)
    {
      v7 = (id)v4;
    }
    else
    {
      v8 = *(void **)(v4 + qword_2543801C0);
      if (!v8)
      {
        __break(1u);
        return;
      }
      v7 = v8;
      if (v6)
      {
        sub_2412D8B78();
        v10 = v9;
      }
      else
      {
        v10 = 0;
      }
      sub_241302148(v10, v6 == 0);

    }
  }
}

uint64_t sub_2412CE6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_2412C6F44(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_2412C8228(v5, v6);
  return a1;
}

void sub_2412CE714(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char *v7;
  void *v8;
  id v9;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + qword_25437D768);
    v7 = v6;

    if (v6)
    {
      v8 = *(void **)&v7[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image];
      *(_QWORD *)&v7[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image] = v2;
      v9 = v2;

      sub_24143763C();
    }
  }
}

uint64_t sub_2412CE7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = sub_2414B3658();
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = swift_getKeyPath();
  *(_BYTE *)(a3 + 64) = 0;
  v8 = (int *)type metadata accessor for NowPlayingView(0, a1, a2, v7);
  v9 = (uint64_t *)(a3 + v8[11]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v10 = a3 + v8[12];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_WORD *)(v10 + 72) = 0;
  v11 = a3 + v8[13];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  v12 = a3 + v8[14];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a3 + v8[15];
  result = swift_getKeyPath();
  *(_QWORD *)v13 = result;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  return result;
}

id sub_2412CE8D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id result;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD *v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DC78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B8AC0;
  v4 = *(void **)(v1 + qword_25437D760);
  *(_QWORD *)(inited + 32) = v4;
  v5 = *(void **)(v1 + qword_25437D788);
  *(_QWORD *)(inited + 40) = v5;
  v6 = *(void **)(v1 + qword_25437D768);
  *(_QWORD *)(inited + 48) = v6;
  v15 = (_QWORD *)inited;
  v7 = v6;
  result = (id)sub_2414B4EDC();
  v9 = v15[2];
  if (!v9)
    goto LABEL_12;
  v10 = (void *)v15[4];
  if (v10)
  {
    v11 = v4;
    v12 = v5;
    result = objc_msgSend(v10, sel_setHidden_, a1 == 1);
    v9 = v15[2];
    if (v9 >= 2)
      goto LABEL_4;
    goto LABEL_11;
  }
  v14 = v4;
  result = v5;
  if (v9 < 2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_4:
  result = (id)v15[5];
  if (result)
  {
    result = objc_msgSend(result, sel_setHidden_, a1 == 1);
    v9 = v15[2];
  }
  if (v9 < 3)
    goto LABEL_13;
  v13 = (void *)v15[6];
  if (v13)
    objc_msgSend(v13, sel_setHidden_, a1 == 1);
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(v1 + qword_25437D7A0), sel_setHidden_, a1 != 1);
}

uint64_t sub_2412CEACC()
{
  sub_2412C86C8();
  swift_retain();
  return sub_2414B3844();
}

uint64_t sub_2412CEB28(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x756F72676B636162;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA0000000000646ELL;
  if ((a2 & 1) != 0)
    v5 = 0x756F72676B636162;
  else
    v5 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000646ELL;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2412CEBD0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x242695CC8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + qword_25437D768);
    v7 = v6;

    if (v6)
    {
      v8 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
      v7[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused] = v2;
      v9 = *(void **)&v7[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView];
      if (v9)
      {
        v10 = v9;
        if (objc_msgSend(v10, sel_isPaused) != v7[v8])
        {
          objc_msgSend(v10, sel_setPaused_);
          objc_msgSend(v10, sel_setEnableSetNeedsDisplay_, v7[v8]);
        }

      }
      else
      {
        v10 = v7;
      }

    }
  }
}

uint64_t sub_2412CECB4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  void (*v13)(char *, uint64_t);
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v4 = sub_2414B2F44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
    v12 = sub_2414B4CE4();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v10, v4);
    if ((v12 & 1) == 0)
    {
      v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v14(v10, a3, v4);
      swift_getKeyPath();
      swift_getKeyPath();
      v14(v7, v10, v4);
      swift_retain();
      sub_2414B2E48();
      v13(v10, v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2412CEE70@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  __int128 v21;
  _OWORD v22[3];
  _OWORD v23[2];
  _QWORD v24[10];

  v24[3] = &type metadata for Features;
  v24[4] = sub_2412FD4AC();
  v4 = swift_allocObject();
  v24[0] = v4;
  *(_QWORD *)(v4 + 16) = "MediaCoreUI";
  *(_QWORD *)(v4 + 24) = 11;
  *(_BYTE *)(v4 + 32) = 2;
  *(_QWORD *)(v4 + 40) = "Catamaran";
  *(_QWORD *)(v4 + 48) = 9;
  *(_BYTE *)(v4 + 56) = 2;
  v5 = sub_2414B2BCC();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v7 = 0uLL;
  if ((v5 & 1) != 0)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v13 = a1[5];
    v22[2] = a1[4];
    v23[0] = v13;
    *(_OWORD *)((char *)v23 + 10) = *(_OWORD *)((char *)a1 + 90);
    v14 = a1[3];
    v22[0] = a1[2];
    v22[1] = v14;
    sub_2413139F4((uint64_t)v22, (uint64_t)v24);
    sub_2412FD220((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v17);
    result = sub_2412FD220((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    if (BYTE2(v19) == 3 || BYTE2(v19))
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel__barHairlineShadowColor);
      v8 = MEMORY[0x242693F58](v15);
      v16 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
      objc_msgSend(v16, sel_displayScale);

      sub_2414B4A44();
      result = sub_2414B31B4();
      v9 = v17;
      v10 = v18;
      v11 = v19;
      v12 = v20;
      v7 = v21;
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v7 = 0uLL;
    }
  }
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 40) = v7;
  return result;
}

uint64_t sub_2412CF090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412DFCA8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

unint64_t sub_2412CF0DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C58;
  if (!qword_254380C58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C60);
    v2[0] = sub_2412C8FC4(&qword_2543810B8, &qword_2543810C0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254380FE8, &qword_254380FF0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C58);
  }
  return result;
}

unint64_t sub_2412CF178()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C48;
  if (!qword_254380C48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C50);
    v2[0] = sub_2412C8FC4(&qword_2543810A8, &qword_2543810B0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254381198, &qword_2543811A0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C48);
  }
  return result;
}

uint64_t MarkupRenderer.__deallocating_deinit()
{
  MarkupRenderer.deinit();
  return swift_deallocClassInstance();
}

uint64_t MarkupRenderer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = sub_2414B295C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

id sub_2412CF298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_2414B2A28();
  v7 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_2414B4C00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v17[0] = 0;
  v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_packageWithContentsOfURL_type_options_error_, v6, v7, v8, v17);

  v10 = v17[0];
  if (v9)
  {
    v11 = sub_2414B2A88();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v13 = v10;
    v12(a1, v11);
  }
  else
  {
    v14 = v17[0];
    sub_2414B29D4();

    swift_willThrow();
    v15 = sub_2414B2A88();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  return v9;
}

_QWORD *ScopeBar.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t ObjectType;
  _QWORD *v3;
  _QWORD *v4;
  _OWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  _QWORD *v15;
  id v16;
  id v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  objc_super v27;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v0);
  v5 = (_OWORD *)((char *)v0 + v4[12]);
  *v5 = 0u;
  v5[1] = 0u;
  v6 = (char *)v0 + *(_QWORD *)((*v3 & *v0) + 0x68);
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v6[32] = 1;
  v7 = *(_QWORD *)((*v3 & *v0) + 0x70);
  v8 = v4[10];
  v9 = v0;
  *(_QWORD *)((char *)v1 + v7) = sub_2414B4F00();
  v10 = &v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0x78)];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0x80)];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(&v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0x88)], 1, 1, v8);
  *(_QWORD *)&v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0x90)] = 0;
  v12 = *(_QWORD *)((*v3 & *(_QWORD *)v9) + 0x98);
  *(_QWORD *)&v9[v12] = sub_2412D0BB4();
  *(_QWORD *)&v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0xA0)] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0xA8)] = 0;
  *(_QWORD *)&v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0xB0)] = 0;
  v9[*(_QWORD *)((*v3 & *(_QWORD *)v9) + 0xB8)] = 0;

  v14 = (objc_class *)type metadata accessor for ScopeBar(0, v8, v4[11], v13);
  v27.receiver = v9;
  v27.super_class = v14;
  v15 = objc_msgSendSuper2(&v27, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v15, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v15, sel_setAlwaysBounceHorizontal_, 1);
  v16 = objc_msgSend(v15, sel_traitCollection);
  v17 = objc_msgSend(v16, sel_horizontalSizeClass);

  v18 = 20.0;
  if (v17 != (id)2)
    v18 = 0.0;
  *(double *)((char *)v15 + *(_QWORD *)((*v3 & *v15) + 0x90)) = v18;
  v19 = objc_msgSend(v15, sel_layer);
  objc_msgSend(v19, sel_setMask_, *(_QWORD *)((char *)v15 + *(_QWORD *)((*v3 & *v15) + 0x98)));

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384408);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2414B9400;
  v21 = sub_2414B2D28();
  v22 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v22;
  v23 = sub_2414B2D10();
  v24 = MEMORY[0x24BEBC608];
  *(_QWORD *)(v20 + 48) = v23;
  *(_QWORD *)(v20 + 56) = v24;
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v25 = v15;
  sub_2414B52D8();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v25;
}

uint64_t *MarkupRenderer.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_2414B2950();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 96), a1);
  return v1;
}

void sub_2412CF7D4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  unsigned int v16;
  double v17;
  id v18;

  v2 = v1;
  v4 = (void *)v2[8];
  if (v4)
  {
    if (a1)
    {
      sub_2412CC884(0, &qword_254381550);
      v5 = a1;
      v6 = v4;
      v7 = sub_2414B532C();

      if ((v7 & 1) != 0)
        return;
    }
  }
  else if (!a1)
  {
    return;
  }
  v8 = (void *)v2[6];
  if (v8)
  {
    v9 = (void *)v2[8];
    if (v9)
    {
      v10 = (void *)v2[7];
      v11 = v8;
      v18 = v9;
      v12 = objc_msgSend(v10, sel_rootLayer);
      if (v12)
      {
        v13 = v12;
        v14 = (void *)objc_opt_self();
        v15 = v18;
        v18 = v13;
        v16 = objc_msgSend(v14, sel_areAnimationsEnabled);
        LODWORD(v17) = 0;
        if (v16)
          *(float *)&v17 = 1.0;
        objc_msgSend(v11, sel_setState_ofLayer_transitionSpeed_, v15, v18, v17);

        v11 = v18;
      }

    }
  }
}

char *sub_2412CF938()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  objc_class *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  objc_super v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384320);
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v0[OBJC_IVAR____TtC11MediaCoreUI36NowPlayingArtworkRestrictionsMonitor__isMotionDisabled];
  LOBYTE(v29) = 1;
  v15 = v0;
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MediaCoreUI36NowPlayingArtworkRestrictionsMonitor_networkConstrainingObserver] = 0;

  v16 = (objc_class *)type metadata accessor for NowPlayingArtworkRestrictionsMonitor();
  v30.receiver = v15;
  v30.super_class = v16;
  v17 = objc_msgSendSuper2(&v30, sel_init);
  v18 = (void *)objc_opt_self();
  v19 = v17;
  v20 = objc_msgSend(v18, sel_standardUserDefaults);
  v21 = (char *)v19;
  v22 = (void *)sub_2414B4D44();
  objc_msgSend(v20, sel_addObserver_forKeyPath_options_context_, v21, v22, 1, 0);

  if (qword_254384300 != -1)
    swift_once();
  swift_beginAccess();
  sub_2414B2E18();
  swift_endAccess();
  sub_2412FFFC8();
  v29 = (id)sub_2414B5230();
  v23 = sub_2414B520C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  sub_2412C8FC4(&qword_254384328, &qword_254384330, MEMORY[0x24BDB9EE8]);
  sub_2412C8030((unint64_t *)&qword_2543843B0, (uint64_t (*)(uint64_t))sub_2412FFFC8, MEMORY[0x24BEE5670]);
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v3, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2412C8FC4(&qword_254384318, &qword_254384320, MEMORY[0x24BDB9A08]);
  v24 = sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  *(_QWORD *)&v21[OBJC_IVAR____TtC11MediaCoreUI36NowPlayingArtworkRestrictionsMonitor_networkConstrainingObserver] = v24;
  swift_release();
  sub_2412D4B14();

  return v21;
}

uint64_t sub_2412CFD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  char v15;
  void (*v17)(_QWORD *, _QWORD);
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v20[4];
  uint64_t v21;

  v21 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v20[0] == a1 && v20[1] == a2)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      a6(0);
      sub_2412C8030(a7, a6, a8);
      sub_2414B2D94();
      sub_2414B2DE8();
      swift_release();
      v21 = a3;
      swift_retain();
      v17 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v19 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      v17(v20, 0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
}

id sub_2412CFEE0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  void *v16;
  id v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v22;
  _BYTE v23[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_2414B2A88();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v23[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v23[-v13];
  v15 = (void *)sub_2414B4D44();
  v16 = (void *)sub_2414B4D44();
  v17 = objc_msgSend(v1, sel_URLForResource_withExtension_, v15, v16);

  if (!v17)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_2414B2A64();

  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v18(v4, v12, v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_2412CBE78((uint64_t)v4, &qword_2543844C0);
    return 0;
  }
  v18(v14, v4, v5);
  sub_2412CC884(0, &qword_254381578);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v14, v5);
  v19 = sub_2414B4D68();
  v22 = sub_2412CF298((uint64_t)v9, v19, v20, 0);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v5);
  return v22;
}

uint64_t sub_2412D0154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s7ArtworkCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s7ArtworkCMa()
{
  return objc_opt_self();
}

uint64_t sub_2412D01AC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2412D0220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = a3;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2412D9ECC;
    aBlock[3] = a4;
    v9 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_getActiveRouteWithCompletion_, v9);
    _Block_release(v9);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel.PrimaryMetadata()
{
  return objc_opt_self();
}

uint64_t sub_2412D0334@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v7 = a1 & 1;
  v8 = sub_2414B4648();
  v9 = a3 & 1;
  sub_2412C6F44(a2, v9);
  v10 = sub_2412F0F50(a2, v9);
  sub_2412C8228(a2, v9);
  LODWORD(v9) = sub_2414B3CA0();
  result = sub_2414B4B64();
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 8) = v7;
  *(_QWORD *)(a4 + 16) = v10;
  *(_DWORD *)(a4 + 24) = v9;
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = v13;
  *(_BYTE *)(a4 + 48) = 1;
  return result;
}

uint64_t sub_2412D03C8(uint64_t *a1)
{
  sub_2412C7310(*a1, a1[1]);
  sub_2412D046C();
  return sub_2414B3844();
}

double sub_2412D0420@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_2412D046C();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

unint64_t sub_2412D046C()
{
  unint64_t result;

  result = qword_25437D878;
  if (!qword_25437D878)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE6B4, &type metadata for ContentActiveTransitionKey);
    atomic_store(result, (unint64_t *)&qword_25437D878);
  }
  return result;
}

uint64_t keypath_getTm@<X0>(void (*a1)(void)@<X3>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  a1();
  result = sub_2414B3838();
  *a2 = v4;
  return result;
}

unint64_t sub_2412D0504()
{
  unint64_t result;

  result = qword_254380FA8;
  if (!qword_254380FA8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for EnvironmentValues.MarqueeBoundsRestrictedEdgesKey, &type metadata for EnvironmentValues.MarqueeBoundsRestrictedEdgesKey);
    atomic_store(result, (unint64_t *)&qword_254380FA8);
  }
  return result;
}

uint64_t _s11MediaCoreUI23HostedScenePhaseSupportVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2412D0590();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_2412D0590()
{
  return swift_retain();
}

void sub_2412D0598(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  void (*v10)(_QWORD);
  id v11;
  void *v12;
  void (*v13)(void *);
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;

  v3 = *(void **)(v1 + qword_2543801D8);
  if (!v3)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v4 = v1;
  v5 = objc_msgSend(v3, sel_parentViewController);
  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v5)
  {
    v7 = v5;
    type metadata accessor for ContentViewController();
    v8 = (_QWORD *)swift_dynamicCastClass();
    v9 = v8;
    if (v8)
    {
      *((_BYTE *)v8 + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_isActive) = 0;
      v10 = *(void (**)(_QWORD))((*v6 & *v8) + 0xC0);
      v11 = v7;
      v10(0);
    }

  }
  else
  {
    v9 = 0;
  }
  v12 = *(void **)(v1 + qword_2543801C0);
  v13 = *(void (**)(void *))((*v6 & *a1) + 0xC0);
  v14 = v12;
  v13(v12);
  if (!*(_QWORD *)(v4 + qword_2543801D8))
    goto LABEL_13;
  objc_msgSend(a1, sel_addChildViewController_);
  v15 = *(void **)(v4 + qword_2543801D8);
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_2413026A4(objc_msgSend(v15, sel_view));
  v16 = *(void **)(v4 + qword_2543801D8);
  if (!v16)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v16, sel_didMoveToParentViewController_, a1);
  *((_BYTE *)a1 + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_isActive) = 1;
  v17 = objc_msgSend(a1, sel_view);
  if (v17)
  {
    v18 = v17;
    sub_2412EB7E8(v17);

    return;
  }
LABEL_16:
  __break(1u);
}

void sub_2412D0748(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2412D07A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2412D0848 + 4 * byte_2414C0C96[a2]))(0xD000000000000020);
}

uint64_t sub_2412D0848(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000020 && v1 == 0x80000002414CDF00)
    v2 = 1;
  else
    v2 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2412D0940(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v14[11];
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v19[11];
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v8 = *a3;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_2412EB55C(a1, a2, (uint64_t)a3, (uint64_t)v19);
  v14[0] = v19[0];
  v14[1] = v19[1];
  v14[2] = v19[2];
  v14[3] = v19[3];
  v14[4] = v19[4];
  v14[5] = v19[5];
  v14[6] = v19[6];
  v14[7] = v19[7];
  v14[8] = v19[8];
  v14[9] = v19[9];
  v14[10] = v19[10];
  v15 = v20;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  v10 = type metadata accessor for NowPlayingEnvironmentModifier(0, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), v9);
  MEMORY[0x242693DC0](v14, a4, v10, a5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_2412D0A84(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE v19[16];
  CGRect v20;
  CGRect v21;

  v14 = sub_2414B32BC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414B33AC();
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetMidX(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetMidY(v21);
  sub_2414B4B64();
  v19[8] = a6 & 1;
  v19[0] = a8 & 1;
  sub_2414B32A4();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
}

id sub_2412D0BB4()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  objc_msgSend(v0, sel_setStartPoint_, 0.0, 0.5);
  objc_msgSend(v0, sel_setEndPoint_, 1.0, 0.5);
  __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2414B8AC0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_blackColor);
  v4 = objc_msgSend(v3, sel_CGColor);

  type metadata accessor for CGColor(0);
  v6 = v5;
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 32) = v4;
  v7 = objc_msgSend(v2, sel_blackColor);
  v8 = objc_msgSend(v7, sel_CGColor);

  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v8;
  v9 = objc_msgSend(v2, sel_clearColor);
  v10 = objc_msgSend(v9, sel_CGColor);

  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 96) = v10;
  v11 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setColors_, v11);

  return v0;
}

__C::CGRect __swiftcall CGRect.centeringAlong(axes:in:)(UIAxis axes, UIView *in)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  char v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  __C::CGRect result;

  v6 = v5;
  v26 = v4;
  v7 = v3;
  v8 = v2;
  v10 = axes;
  -[UIView bounds](in, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = -[UIView traitCollection](in, sel_traitCollection);
  objc_msgSend(v19, sel_displayScale);
  v21 = v20;

  v22 = CGRect.centeringAlong(axes:bounds:scale:)(v10, v12, v14, v16, v18, v21, v8, v7, v26, v6);
  result.size.height = v25;
  result.size.width = v24;
  result.origin.y = v23;
  result.origin.x = v22;
  return result;
}

uint64_t sub_2412D0E30@<X0>(char *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t result;
  char v6;
  unint64_t v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_2414B4D44();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_2414B544C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_2412FFB60((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    result = sub_2412CBE78((uint64_t)v9, &qword_25437D280);
    goto LABEL_10;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_10:
    v6 = 2;
    goto LABEL_11;
  }
  if (v7 >= 3)
    v6 = 2;
  else
    v6 = v7;
LABEL_11:
  *a1 = v6;
  return result;
}

uint64_t type metadata accessor for NowPlayingArtworkMirrorReplicatorLayer()
{
  return objc_opt_self();
}

uint64_t sub_2412D0F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v5 = sub_2414B4A44();
  v7 = v6;
  v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380C80) + 36);
  sub_2412D1008(v2, v8);
  v9 = (uint64_t *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380ED0) + 36));
  *v9 = v5;
  v9[1] = v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
}

uint64_t sub_2412D1008@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _BYTE v24[24];
  __int128 v25;
  uint64_t v26;

  v4 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)&v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_2414B35A4();
  v8 = MEMORY[0x24BDED998];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for ArtworkInnerStrokeModifier(0);
  sub_2412FA3B4((uint64_t)v6);
  v11 = *v6;
  v12 = (char *)v6 + *(int *)(v4 + 20);
  v13 = (char *)v10 + *(int *)(v7 + 20);
  v14 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  *v10 = v11;
  v10[1] = v11;
  sub_2412C68F4((uint64_t)v6, type metadata accessor for ArtworkCornerStyle);
  v15 = *a1;
  swift_retain();
  sub_2414B304C();
  sub_2412C6A50((uint64_t)v10, a2, (uint64_t (*)(_QWORD))v8);
  v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380BC0) + 36);
  v17 = v25;
  *(_OWORD *)v16 = *(_OWORD *)&v24[8];
  *(_OWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v16 + 32) = v26;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B08);
  *(_QWORD *)(a2 + *(int *)(v18 + 52)) = v15;
  *(_WORD *)(a2 + *(int *)(v18 + 56)) = 256;
  v19 = sub_2414B4A44();
  v21 = v20;
  v22 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380CB8) + 36));
  *v22 = v19;
  v22[1] = v21;
  return sub_2412C68F4((uint64_t)v10, (uint64_t (*)(_QWORD))v8);
}

uint64_t sub_2412D11F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  char v14;
  uint64_t KeyPath;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  _OWORD v26[8];
  __int128 v27;
  __int128 v28;

  v24[1] = a1;
  v24[0] = sub_2414B3A9C();
  v25 = *(_QWORD *)(v24[0] - 8);
  MEMORY[0x24BDAC7A8](v24[0]);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DBB0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B361C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAF8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (_OWORD *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2412CD460((_QWORD *)v1, (uint64_t)v26);
  v14 = *(_BYTE *)(v1 + 40);
  KeyPath = swift_getKeyPath();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = (v14 & 1) == 0;
  *((_QWORD *)&v27 + 1) = KeyPath;
  *(_QWORD *)&v28 = sub_2412FE994;
  *((_QWORD *)&v28 + 1) = v16;
  sub_2414B3610();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v6[*(int *)(v4 + 40)], v10, v7);
  *(_QWORD *)v6 = 0xC014000000000000;
  v6[8] = 0;
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v13 + *(int *)(v11 + 36), (uint64_t *)&unk_25437DBB0);
  v17 = v26[7];
  v13[6] = v26[6];
  v13[7] = v17;
  v18 = v28;
  v13[8] = v27;
  v13[9] = v18;
  v19 = v26[3];
  v13[2] = v26[2];
  v13[3] = v19;
  v20 = v26[5];
  v13[4] = v26[4];
  v13[5] = v20;
  v21 = v26[1];
  *v13 = v26[0];
  v13[1] = v21;
  sub_24139911C((uint64_t)v26);
  sub_2412CBE78((uint64_t)v6, (uint64_t *)&unk_25437DBB0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24139919C((uint64_t)v26);
  sub_2414B3634();
  sub_2413007C8();
  sub_2412F0B40(&qword_254382BA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v22 = v24[0];
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v22);
  return sub_2412CBE78((uint64_t)v13, &qword_25437DAF8);
}

_QWORD *sub_2412D14AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = v12[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    sub_2412CBE78((uint64_t)a1 + v14, &qword_254380B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2412D1668()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  swift_beginAccess();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    v2 = sub_2414B4D44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = (void *)sub_2414B4D44();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);

  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2414B2DAC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for DebugDimensionText(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t assignWithCopy for ArtworkStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  char v29;
  char v30;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_BYTE *)(a2 + 88);
  v30 = *(_BYTE *)(a2 + 89);
  sub_2412C6F48(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29, v30);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  v24 = *(_QWORD *)(a1 + 80);
  v25 = *(_BYTE *)(a1 + 88);
  v26 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v28;
  *(_BYTE *)(a1 + 88) = v29;
  *(_BYTE *)(a1 + 89) = v30;
  sub_2412C823C(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

unint64_t DeviceMetrics.description.getter()
{
  _BYTE *v0;
  unint64_t result;
  BOOL v2;

  if ((v0[16] & 1) != 0)
    return 0xD00000000000001DLL;
  result = 0xD00000000000001DLL;
  v2 = v0[17] == 9 || v0[18] == 3;
  if (!v2 && (v0[32] & 1) == 0)
  {
    sub_2414B5578();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B508C();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B565C();
    sub_2414B4DF8();
    sub_2414B565C();
    sub_2414B4DF8();
    type metadata accessor for UIUserInterfaceIdiom(0);
    sub_2414B565C();
    return 0;
  }
  return result;
}

void sub_2412D1B34(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;

  v3 = objc_msgSend(v1, sel_layer);
  v4 = objc_msgSend(*(id *)a1, sel_CGColor);
  objc_msgSend(v3, sel_setShadowColor_, v4);

  v5 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v5, sel_setShadowOffset_, *(double *)(a1 + 24), *(double *)(a1 + 32));

  v6 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v6, sel_setShadowRadius_, *(double *)(a1 + 16));

  v8 = objc_msgSend(v1, sel_layer);
  v7 = *(double *)(a1 + 8);
  *(float *)&v7 = v7;
  objc_msgSend(v8, sel_setShadowOpacity_, v7);
  sub_2412FFD64((id *)a1);

}

void sub_2412D1C4C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v1 = (void *)v0[7];
  if (!v1 || (v2 = objc_msgSend(v1, sel_rootLayer)) == 0)
  {
    v14 = (void *)v0[6];
    v0[6] = 0;
LABEL_18:

    return;
  }
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5788]), sel_initWithLayer_, v2);
  v5 = (void *)v0[6];
  v0[6] = v4;

  v6 = (void *)v0[7];
  if (!v6)
    goto LABEL_7;
  v7 = objc_msgSend(v6, sel_rootLayer);
  if (!v7
    || (v8 = v7, v9 = objc_msgSend(v7, sel_states), v8, !v9)
    || (v10 = sub_2414B4EC4(), v9, v11 = sub_2412D301C(v10), swift_bridgeObjectRelease(), !v11))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  if (!(v11 >> 62))
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_16:
    swift_bridgeObjectRelease();
    v13 = 0;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v15 = sub_2414B56C8();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_16;
LABEL_10:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x242694E34](0, v11);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_13:
    v13 = v12;
    swift_bridgeObjectRelease();
LABEL_17:
    v16 = (void *)v0[8];
    v0[8] = v13;
    v17 = v13;
    sub_2412CF7D4(v16);

    v14 = v17;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_2412D1E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA90);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl__segments;
  v22 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC48);
  sub_2414B2E0C();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  v7 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_pptScrubberInteractionState;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381838);
  swift_allocObject();
  *(_QWORD *)(v1 + v7) = sub_2414B2DB8();
  v8 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition;
  type metadata accessor for NowPlayingViewModel.PlaybackPosition();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 0;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_BYTE *)(v9 + 72) = 2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA60);
  swift_allocObject();
  v10 = sub_2414B2DB8();
  *(_QWORD *)(v9 + 80) = v10;
  v22 = v10;
  sub_2412C8FC4((unint64_t *)&unk_25437DA50, (uint64_t *)&unk_25437DA60, MEMORY[0x24BDB9CB0]);
  *(_QWORD *)(v9 + 88) = sub_2414B2E60();
  *(_QWORD *)(v1 + v8) = v9;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPositionObserver) = 0;
  v11 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_activeScrubPositionSubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA40);
  swift_allocObject();
  *(_QWORD *)(v1 + v11) = sub_2414B2DB8();
  v12 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_elapsedTimeFormatter;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB26B8]), sel_init);
  objc_msgSend(v13, sel_setStyle_, 1);
  *(_QWORD *)(v1 + v12) = v13;
  v14 = OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_remainingTimeFormatter;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB26B8]), sel_init);
  objc_msgSend(v15, sel_setStyle_, 2);
  *(_QWORD *)(v1 + v14) = v15;
  sub_2412F0B40(&qword_25437ECC0, v16, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
  v22 = sub_2414B2DA0();
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_241448A0C;
  *(_QWORD *)(v18 + 24) = v17;
  sub_2414B2DF4();
  v19 = sub_2414B2EB4();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPositionObserver) = v19;
  swift_release();
  return v1;
}

void sub_2412D2100()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];

  v1 = objc_msgSend(v0, sel_tabBar);
  v2 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  v3 = objc_msgSend(v0, sel_tabBar);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  objc_msgSend(v3, sel__setBackgroundView_, v4);

  v7[3] = &type metadata for Features;
  v7[4] = sub_2412FD4AC();
  v5 = swift_allocObject();
  v7[0] = v5;
  *(_QWORD *)(v5 + 16) = "MediaCoreUI";
  *(_QWORD *)(v5 + 24) = 11;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = "Catamaran";
  *(_QWORD *)(v5 + 48) = 9;
  *(_BYTE *)(v5 + 56) = 2;
  LOBYTE(v3) = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if ((v3 & 1) == 0)
  {
    v6 = objc_msgSend(v0, sel_tabBar);
    if (qword_254381518 != -1)
      swift_once();
    objc_msgSend(v6, sel_addSubview_, qword_254381510);

  }
}

void sub_2412D22A0(void *a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *a2;
  v4 = *(void **)&v2[*a2];
  *(_QWORD *)&v2[*a2] = a1;
  v9 = a1;
  objc_msgSend(v4, sel_removeFromSuperview);
  v5 = *(void **)&v2[v3];
  if (!v5)
    goto LABEL_4;
  v6 = v5;
  v7 = objc_msgSend(v2, sel_view);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_addSubview_, v6);

    v4 = v6;
    v9 = v8;
LABEL_4:

    return;
  }
  __break(1u);
}

uint64_t sub_2412D2350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2412D2824(a7);
    sub_2412D2824(a9);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2412D2824(a3);
    sub_2412D2824(a5);
    a11 = a7;
  }
  return sub_2412D2824(a11);
}

uint64_t sub_2412D2418@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  __int128 v58;

  v53 = a3;
  v49 = type metadata accessor for TransportButtonStyle();
  v5 = MEMORY[0x24BDAC7A8](v49);
  v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v42 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381410);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D90);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813A8);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v48 = (char *)&v42 - v16;
  v58 = *a2;
  v17 = *((_QWORD *)a2 + 2);
  v18 = *((_QWORD *)a2 + 4);
  v42 = *((_QWORD *)a2 + 6);
  v19 = (_OWORD *)swift_allocObject();
  v20 = a2[1];
  v19[1] = *a2;
  v19[2] = v20;
  v21 = a2[3];
  v19[3] = a2[2];
  v19[4] = v21;
  swift_retain();
  sub_2412EAEE8((uint64_t)&v58);
  sub_2412D2824(v17);
  sub_2412D2824(v18);
  sub_2412D2824(v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380D78);
  sub_241300998();
  sub_2414B47D4();
  v23 = v45;
  v22 = v46;
  v24 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v43, v11, v46);
  *(_BYTE *)(v24 + *(int *)(v44 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
  v54 = 0;
  sub_2414B48F4();
  v25 = v55;
  v26 = v56;
  LOBYTE(v18) = v57;
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v27 = (int *)v49;
  v28 = (char *)v7 + *(int *)(v49 + 20);
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  v29 = (char *)v7 + v27[6];
  *(_QWORD *)v29 = swift_getKeyPath();
  v29[8] = 0;
  *(uint64_t *)((char *)v7 + v27[7]) = 0x3FF0000000000000;
  v30 = (char *)v7 + v27[8];
  *(_QWORD *)v30 = v25;
  *((_QWORD *)v30 + 1) = v26;
  v30[16] = v18;
  v31 = v52;
  sub_2412F9DDC((uint64_t)v7, v52);
  sub_2412CB640();
  sub_2412F0B40((unint64_t *)&unk_25437FCE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TransportButtonStyle, (uint64_t)&unk_2414C0548);
  v32 = v47;
  sub_2414B41A4();
  sub_2412C8070(v31);
  sub_2412CBE78(v24, &qword_254380D90);
  v34 = v50;
  v33 = v51;
  v35 = v48;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v48, v32, v51);
  v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v37 = v34;
  v36(v32, v35, v33);
  v38 = v53;
  *(_QWORD *)v53 = a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D80);
  v36(&v38[*(int *)(v39 + 48)], v32, v33);
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_retain();
  v40(v35, v33);
  v40(v32, v33);
  return swift_release();
}

uint64_t sub_2412D2824(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

_QWORD *sub_2412D2834(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_254380B28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_2414B38C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

id sub_2412D28FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  objc_class *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v21;
  objc_super v22;
  int v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384340);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v0[OBJC_IVAR____TtC11MediaCoreUI18EnvironmentMonitor__isNetworkConstrained];
  LOBYTE(v23) = 0;
  v13 = v0;
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v14 = &v13[OBJC_IVAR____TtC11MediaCoreUI18EnvironmentMonitor__thermalLevel];
  v23 = 0;
  type metadata accessor for OSThermalPressureLevel(0);
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v7, v4);

  v15 = (objc_class *)type metadata accessor for EnvironmentMonitor();
  v22.receiver = v13;
  v22.super_class = v15;
  v16 = objc_msgSendSuper2(&v22, sel_init);
  v17 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v16;
  v19 = v16;
  sub_24135F590((uint64_t)v3, (uint64_t)&unk_25712A088, (uint64_t)v18);
  swift_release();
  sub_2412D7894((uint64_t)v3);
  return v19;
}

uint64_t sub_2412D2AFC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_2412D2B68(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_2412D2BB8(void *a1)
{
  id v1;
  id v2;
  double v3;
  double v4;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  if (v1 == (id)2)
    return objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 0.133333333, 0.133333333, 0.145098039, 0.6);
  else
    return objc_msgSend(v2, sel_initWithWhite_alpha_, 1.0, 0.6, v3, v4);
}

uint64_t sub_2412D2C44()
{
  sub_2412D2CEC();
  swift_bridgeObjectRetain();
  return sub_2414B3844();
}

double sub_2412D2CA0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_2412D2CEC();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

unint64_t sub_2412D2CEC()
{
  unint64_t result;

  result = qword_25437D6B8;
  if (!qword_25437D6B8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE724, &type metadata for SelectedContentKey);
    atomic_store(result, (unint64_t *)&qword_25437D6B8);
  }
  return result;
}

uint64_t sub_2412D2D30(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD v22[6];

  v7 = sub_2414B3AFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B8C();
  sub_2414B3268();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22[5] = sub_2414B4648();
  v22[1] = v12;
  v22[2] = v14;
  v22[3] = v16;
  v22[4] = v18;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  v20 = a2[1];
  *(_OWORD *)(v19 + 32) = *a2;
  *(_OWORD *)(v19 + 48) = v20;
  *(_OWORD *)(v19 + 64) = a2[2];
  *(_OWORD *)(v19 + 73) = *(_OWORD *)((char *)a2 + 41);
  *(_QWORD *)(v19 + 96) = v12;
  *(_QWORD *)(v19 + 104) = v14;
  *(_QWORD *)(v19 + 112) = v16;
  *(_QWORD *)(v19 + 120) = v18;
  sub_2412FA354((uint64_t)a2);
  type metadata accessor for CGRect(0);
  sub_2412F0B40(&qword_254381540, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD830]);
  sub_2414B4564();
  swift_release();
  return swift_release();
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543843C8);
}

char *sub_2412D2EDC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_254380B58);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B2F8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  v13 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  sub_2412C821C(v12, v13);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)v16;
  LOBYTE(v16) = v16[8];
  v18 = *(_QWORD *)v15;
  v19 = v15[8];
  *(_QWORD *)v15 = v17;
  v15[8] = (char)v16;
  sub_2412C821C(v18, v19);
  v20 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)v22;
  swift_release();
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_release();
  v21[16] = v22[16];
  return a1;
}

uint64_t sub_2412D301C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_2414B5608();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_2412E4960(i, (uint64_t)v5);
    sub_2412CC884(0, &qword_254381550);
    if (!swift_dynamicCast())
      break;
    sub_2414B55F0();
    sub_2414B5614();
    sub_2414B5620();
    sub_2414B55FC();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

void *sub_2412D3134(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  _OWORD *v4;
  __int128 v5;
  _OWORD *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = 0;
  v4 = &v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  v5 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *v4 = *MEMORY[0x24BEBE158];
  v4[1] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView] = 0;
  v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows] = 0;
  v6 = &v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  *v6 = 0u;
  v6[1] = 0u;
  v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = 0;
  v1[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_style] = a1 & 1;
  v19.receiver = v1;
  v19.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = v7;
  if ((a1 & 1) != 0)
  {
    v10 = objc_allocWithZone(MEMORY[0x24BEBDB38]);
    v11 = v8;
    v12 = objc_msgSend(v10, sel_init);
    objc_msgSend(v11, sel_addSubview_, v12);
    v13 = *(void **)&v11[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView];
    *(_QWORD *)&v11[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = v12;

    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
    v15 = *(void **)&v11[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer];
    *(_QWORD *)&v11[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = v14;
    v16 = v14;

    v17 = objc_msgSend(v11, sel_layer);
    objc_msgSend(v17, sel_addSublayer_, v16);

  }
  else
  {
    v9 = v7;
  }
  objc_msgSend(v8, sel_setInsetsLayoutMarginsFromSafeArea_, 0);

  return v8;
}

void UITabBarController.installNowPlayingViewController<A>(_:)(char *a1)
{
  void *v1;
  id v3;

  v3 = v1;
  sub_24148CEE8(a1);

}

uint64_t sub_2412D332C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(v2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(v2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 88);
  v5 = *(_QWORD *)(v2 + 96);
  LOBYTE(v2) = *(_BYTE *)(v2 + 104);
  sub_2412EE9B0();
  *(_QWORD *)(a1 + 88) = v4;
  *(_QWORD *)(a1 + 96) = v5;
  *(_BYTE *)(a1 + 104) = v2;
  sub_2412EEDAC();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t destroy for SymbolTransportButton(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (a1[2])
    result = swift_release();
  if (a1[4])
    result = swift_release();
  if (a1[6])
    return swift_release();
  return result;
}

uint64_t sub_2412D35A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v6 = *(_QWORD *)a2;
  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_2412C7300(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_2412C68B0(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_BYTE *)(a2 + 120);
  sub_2412C72F4(v13, v14, v15, v16, v17);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 112);
  v22 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_BYTE *)(a1 + 120) = v17;
  sub_2412C68A4(v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 128, &qword_254380B40);
    if ((*(_BYTE *)(a2 + 168) & 1) != 0)
    {
      v23 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 152) = v23;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 128, a2 + 128);
      *(_BYTE *)(a1 + 168) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 168) = 0;
      swift_retain();
    }
  }
  v24 = *(_QWORD *)(a2 + 176);
  v25 = *(_BYTE *)(a2 + 184);
  sub_2412C7080(v24, v25);
  v26 = *(_QWORD *)(a1 + 176);
  v27 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v24;
  *(_BYTE *)(a1 + 184) = v25;
  sub_2412C821C(v26, v27);
  if (a1 != a2)
  {
    v28 = a3[16];
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    sub_2412CBE78(a1 + v28, &qword_254380B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v32 = a3[17];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *(_QWORD *)(v34 + 8);
  v37 = *(_BYTE *)(v34 + 16);
  sub_2412C72E4(*(_QWORD *)v34, v36, v37);
  v38 = *(_QWORD *)v33;
  v39 = *(_QWORD *)(v33 + 8);
  v40 = *(_BYTE *)(v33 + 16);
  *(_QWORD *)v33 = v35;
  *(_QWORD *)(v33 + 8) = v36;
  *(_BYTE *)(v33 + 16) = v37;
  sub_2412C822C(v38, v39, v40);
  if (a1 != a2)
  {
    v41 = a3[18];
    v42 = (_QWORD *)(a1 + v41);
    v43 = (_QWORD *)(a2 + v41);
    sub_2412CBE78(a1 + v41, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *v42 = *v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

BOOL CGRect.isContained(in:percentage:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v24.size.height = a4;
  v24.origin.x = a1;
  v22.origin.x = a6;
  v22.origin.y = a7;
  v22.size.width = a8;
  v22.size.height = a9;
  v24.origin.y = a2;
  v24.size.width = a3;
  v23 = CGRectIntersection(v22, v24);
  return a8 * a9 * a5 <= v23.size.width * v23.size.height;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX;
  CGRect v10;

  MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

uint64_t sub_2412D3978(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  __int16 v48;
  char v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  char v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[40];
  char v58;

  v2 = v1;
  v45 = sub_2414B2CA4();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v40 = a1[7];
  v39 = a1[8];
  v41 = *((unsigned __int8 *)a1 + 72);
  swift_getKeyPath();
  v12 = v2 + OBJC_IVAR____TtC11MediaCoreUI16WindowProperties___observationRegistrar;
  *(_QWORD *)&v55 = v2;
  v42 = sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  v43 = v12;
  sub_2414B2B84();
  result = swift_release();
  v14 = *(_QWORD *)(v2 + 32);
  if ((v8 & 0xFF0000) == 0x40000)
  {
    v15 = v45;
    v16 = v44;
    v17 = v46;
    if ((v14 & 0xFF0000) == 0x40000)
      return result;
  }
  else
  {
    v18 = *(_OWORD *)(v2 + 16);
    v20 = *(_QWORD *)(v2 + 40);
    v19 = *(_QWORD *)(v2 + 48);
    v21 = *(_OWORD *)(v2 + 56);
    v22 = *(_OWORD *)(v2 + 72);
    v23 = *(_BYTE *)(v2 + 88);
    *(_QWORD *)&v55 = v5;
    *((_QWORD *)&v55 + 1) = v6;
    *(_QWORD *)&v56 = v8;
    *((_QWORD *)&v56 + 1) = v7;
    *(_QWORD *)v57 = v9;
    *(_QWORD *)&v57[8] = v10;
    *(_QWORD *)&v57[16] = v11;
    *(_QWORD *)&v57[24] = v40;
    *(_QWORD *)&v57[32] = v39;
    v58 = v41;
    if ((v14 & 0xFF0000) == 0x40000)
    {
      v15 = v45;
      v16 = v44;
      v17 = v46;
    }
    else
    {
      v47 = v18;
      v48 = v14 & 0xFF01;
      v49 = BYTE2(v14);
      v50 = v20;
      v51 = v19 & 1;
      v52 = v21;
      v53 = v22;
      v54 = v23 & 1;
      result = _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v47);
      v15 = v45;
      v16 = v44;
      v17 = v46;
      if ((result & 1) != 0)
        return result;
    }
  }
  if (qword_2543809C0 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v15, (uint64_t)qword_25438E7B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v17, v24, v15);
  swift_retain_n();
  v25 = sub_2414B2C8C();
  v26 = sub_2414B51B8();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    *(_QWORD *)&v47 = v28;
    *(_DWORD *)v27 = 136446210;
    swift_getKeyPath();
    *(_QWORD *)&v55 = v2;
    sub_2414B2B84();
    swift_release();
    v29 = *(_QWORD *)(v2 + 32);
    if ((v29 & 0xFF0000) == 0x40000)
    {
      result = swift_release();
      __break(1u);
      return result;
    }
    v30 = *(_BYTE *)(v2 + 88);
    v31 = *(_DWORD *)(v2 + 48);
    v32 = *(_QWORD *)(v2 + 40);
    v55 = *(_OWORD *)(v2 + 16);
    LOWORD(v56) = v29 & 0xFF01;
    BYTE2(v56) = BYTE2(v29);
    *((_QWORD *)&v56 + 1) = v32;
    v57[0] = v31 & 1;
    *(_OWORD *)&v57[8] = *(_OWORD *)(v2 + 56);
    *(_OWORD *)&v57[24] = *(_OWORD *)(v2 + 72);
    v58 = v30 & 1;
    v33 = DeviceMetrics.description.getter();
    *(_QWORD *)&v55 = sub_2412E4890(v33, v34, (uint64_t *)&v47);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v25, v26, "Updated device metrics: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v28, -1, -1);
    MEMORY[0x242695BD8](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v46, v15);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v15);
  }
  swift_getKeyPath();
  *(_QWORD *)&v55 = v2;
  sub_2414B2B84();
  swift_release();
  v35 = *(_QWORD *)(v2 + 80);
  v36 = *(_BYTE *)(v2 + 88);
  v37 = *(_OWORD *)(v2 + 32);
  v55 = *(_OWORD *)(v2 + 16);
  v56 = v37;
  v38 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)v57 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)&v57[16] = v38;
  *(_QWORD *)&v57[32] = v35;
  v58 = v36;
  return sub_2414B2DC4();
}

uint64_t sub_2412D3E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412D3FCC(0, 0, v0);
  if (qword_25437EB48 != -1)
    swift_once();
  v1 = qword_25438E7F8;
  v2 = unk_25438E800;
  KeyPath = swift_getKeyPath();
  v4 = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2413039CC(v1, v2, v0, KeyPath, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412CD024(MEMORY[0x24BEE4AF8], v0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412D3FCC(0, 0, v0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2412CA658(0, v0);
}

uint64_t sub_2412D3FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7;
  void (*v8)(uint64_t *, _QWORD);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (a2)
  {
    if (v12)
    {
      if (v11 == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v7 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
LABEL_11:
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_2412C8030(&qword_2543816E0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v13 = a3;
    swift_retain();
    v8 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v10 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v10 = a1;
    v10[1] = a2;
    v8(&v11, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_10:
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2412D4198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for HostedScenePhaseModel();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for HostedScenePhaseModel()
{
  uint64_t result;

  result = qword_25437FE68;
  if (!qword_25437FE68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412D4210()
{
  sub_2412D42A4();
  return sub_2414B3844();
}

uint64_t sub_2412D4258@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412D42A4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

unint64_t sub_2412D42A4()
{
  unint64_t result;

  result = qword_25437E2A0;
  if (!qword_25437E2A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9174, &type metadata for PlayerStyleKey);
    atomic_store(result, (unint64_t *)&qword_25437E2A0);
  }
  return result;
}

double sub_2412D42E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  double result;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  __int128 v55;

  v2 = sub_2414B3484();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543815E0);
  v9 = swift_allocObject();
  v34 = xmmword_2414B9400;
  *(_OWORD *)(v9 + 16) = xmmword_2414B9400;
  *(_QWORD *)(v9 + 32) = sub_2414B4648();
  *(_QWORD *)(v9 + 40) = sub_2414B463C();
  v51 = v9;
  sub_2414B4EDC();
  MEMORY[0x242694258](v51);
  sub_2414B4B70();
  sub_2414B4B7C();
  sub_2414B33B8();
  v36 = v37;
  v35 = v38;
  v10 = v39;
  v11 = v40;
  type metadata accessor for MaskView(0);
  sub_2412D4710((uint64_t)v8);
  v12 = *MEMORY[0x24BDED100];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v13(v6, v12, v2);
  sub_2414B3478();
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  v14(v8, v2);
  sub_2414B4A44();
  sub_2414B31B4();
  v33 = v41;
  v28 = v42;
  v32 = v43;
  v27 = v44;
  v31 = v45;
  v30 = v46;
  v29 = sub_2414B463C();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v34;
  *(_QWORD *)(v15 + 32) = sub_2414B463C();
  *(_QWORD *)(v15 + 40) = sub_2414B4648();
  v51 = v15;
  sub_2414B4EDC();
  MEMORY[0x242694258](v51);
  sub_2414B4B70();
  sub_2414B4B7C();
  sub_2414B33B8();
  v16 = v47;
  v34 = v48;
  v17 = v49;
  v18 = v50;
  sub_2412D4710((uint64_t)v8);
  v13(v6, v12, v2);
  sub_2414B3478();
  v14(v6, v2);
  v14(v8, v2);
  sub_2414B4A44();
  sub_2414B31B4();
  v19 = v51;
  v20 = v52;
  v21 = v53;
  v22 = v54;
  v23 = v28;
  v24 = v27;
  *(_QWORD *)a1 = v36;
  *(_OWORD *)(a1 + 8) = v35;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v33;
  *(_BYTE *)(a1 + 48) = v23;
  *(_QWORD *)(a1 + 56) = v32;
  *(_BYTE *)(a1 + 64) = v24;
  v25 = v30;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_BYTE *)(a1 + 144) = v20;
  *(_QWORD *)(a1 + 152) = v21;
  *(_BYTE *)(a1 + 160) = v22;
  result = *(double *)&v55;
  *(_OWORD *)(a1 + 168) = v55;
  return result;
}

uint64_t sub_2412D4710@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_254380B68, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

CGFloat CGRect.aspectFit(in:scale:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  double Width;
  double v25;
  double v26;
  double Height;
  double v29;
  double v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double MinX;
  double MinY;
  CGFloat v47;
  double v48;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  if (Width == 0.0)
    return a6;
  v48 = a5;
  v25 = fabs(Width);
  v26 = fmax(v25 * 2.22044605e-16, COERCE_DOUBLE(1));
  if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) != 0 && v25 <= v26)
    return a6;
  v50.origin.x = a1;
  v50.origin.y = a2;
  v50.size.width = a3;
  v50.size.height = a4;
  Height = CGRectGetHeight(v50);
  if (Height == 0.0)
    return a6;
  v31 = fabs(Height);
  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) != 0 && v31 <= fmax(v31 * 2.22044605e-16, COERCE_DOUBLE(1)))
    return a6;
  v32 = a1;
  v51.origin.x = a1;
  v51.origin.y = a2;
  v33 = a2;
  v51.size.width = a3;
  v34 = a4;
  v51.size.height = a4;
  v43 = CGRectGetWidth(v51);
  v52.origin.x = a6;
  v52.origin.y = a7;
  v52.size.width = a8;
  v52.size.height = a9;
  v44 = v43 / CGRectGetWidth(v52);
  v47 = v33;
  v53.origin.x = v32;
  v53.origin.y = v33;
  v53.size.width = a3;
  v53.size.height = a4;
  v42 = CGRectGetHeight(v53);
  v54.origin.x = a6;
  v54.origin.y = a7;
  v54.size.width = a8;
  v54.size.height = a9;
  v35 = v42 / CGRectGetHeight(v54);
  if (v35 >= v44)
    v35 = v44;
  v36 = v35 * a8;
  v37 = v35 * a9;
  v55.origin.x = v32;
  v55.origin.y = v33;
  v55.size.width = a3;
  v55.size.height = a4;
  MinX = CGRectGetMinX(v55);
  v56.origin.x = v32;
  v38 = v32;
  v56.origin.y = v33;
  v56.size.width = a3;
  v56.size.height = v34;
  v39 = CGRectGetWidth(v56);
  v57.origin.x = a6;
  v57.origin.y = a7;
  v57.size.width = v36;
  v57.size.height = v37;
  v40 = MinX + (v39 - CGRectGetWidth(v57)) * 0.5;
  v29 = round(v40 * v48) / sub_2412E2570(v48);
  v58.origin.x = v38;
  v58.origin.y = v47;
  v58.size.width = a3;
  v58.size.height = v34;
  MinY = CGRectGetMinY(v58);
  v59.origin.x = v38;
  v59.origin.y = v47;
  v59.size.width = a3;
  v59.size.height = v34;
  v41 = CGRectGetHeight(v59);
  v60.origin.x = v29;
  v60.origin.y = a7;
  v60.size.width = v36;
  v60.size.height = v37;
  round((MinY + (v41 - CGRectGetHeight(v60)) * 0.5) * v48);
  sub_2412E2570(v48);
  return v29;
}

uint64_t sub_2412D49C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_retain();
  swift_release();
  v7[1] = v8[1];
  swift_retain();
  swift_release();
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v7) = *(_BYTE *)(v10 + 8);
  sub_2412E6F7C(*(_QWORD *)v10, (char)v7);
  v12 = *(_QWORD *)v9;
  v13 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = (_BYTE)v7;
  sub_2412E6BF8(v12, v13);
  return a1;
}

uint64_t sub_2412D4A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2412D4B14()
{
  void *v0;
  int v1;
  char v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  sub_2412D0E30((char *)&v19);
  v1 = v19;
  if (qword_254384300 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v2 = (v1 == 0) | v19;
  v3 = (v1 == 0) | v19 & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  if (v3 != v19)
  {
    if (qword_25437D278 != -1)
      swift_once();
    v5 = sub_2414B2CA4();
    __swift_project_value_buffer(v5, (uint64_t)qword_25438E7D0);
    v6 = v0;
    v7 = sub_2414B2C8C();
    v8 = sub_2414B51B8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v19 = v10;
      *(_DWORD *)v9 = 67110146;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2414B2E3C();
      swift_release();
      swift_release();

      sub_2414B541C();
      *(_WORD *)(v9 + 8) = 1024;
      LODWORD(v18) = v2 & 1;
      sub_2414B541C();
      *(_WORD *)(v9 + 14) = 2082;
      sub_2412D0E30((char *)&v18);
      v11 = 0xE200000000000000;
      v12 = 28271;
      if (v18 == 1)
      {
        v12 = 0x796C6E4F69666977;
        v11 = 0xE800000000000000;
      }
      if ((_BYTE)v18)
        v13 = v12;
      else
        v13 = 6710895;
      if ((_BYTE)v18)
        v14 = v11;
      else
        v14 = 0xE300000000000000;
      v18 = sub_2412E4890(v13, v14, &v19);
      sub_2414B541C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v9 + 24) = 1024;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2414B2E3C();
      swift_release();
      swift_release();
      LODWORD(v18) = v18;
      sub_2414B541C();
      *(_WORD *)(v9 + 30) = 2080;
      if ((v2 & 1) != 0)
        v15 = 0xD00000000000005BLL;
      else
        v15 = 0;
      if ((v2 & 1) != 0)
        v16 = 0x80000002414D44E0;
      else
        v16 = 0xE000000000000000;
      v18 = sub_2412E4890(v15, v16, &v19);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2412C1000, v7, v8, "NowPlayingRestrictionsMonitor: isMotionDisabled updated from %{BOOL}d to %{BOOL}d: motionMode=%{public}s isNetworkConstrained=%{BOOL}d. %s", (uint8_t *)v9, 0x28u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v10, -1, -1);
      MEMORY[0x242695BD8](v9, -1, -1);
    }
    else
    {

    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v19) = v2 & 1;
    v17 = v6;
    return sub_2414B2E48();
  }
  return result;
}

_QWORD *initializeWithCopy for SymbolTransportButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  v8 = a2[4];
  if (v8)
  {
    v9 = a2[5];
    a1[4] = v8;
    a1[5] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v10 = a2[6];
  if (v10)
  {
    v11 = a2[7];
    a1[6] = v10;
    a1[7] = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  return a1;
}

_QWORD *NowPlayingViewModel.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[72];
  char v41;
  char v42[48];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A98);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AE8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  if (qword_25437EB48 != -1)
    swift_once();
  v12 = unk_25438E800;
  *(_QWORD *)(v11 + 32) = qword_25438E7F8;
  *(_QWORD *)(v11 + 40) = v12;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v11 + 56) = 0;
  *(_QWORD *)(v11 + 64) = 0;
  *(_QWORD *)(v11 + 48) = v13;
  *(_BYTE *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 104) = &type metadata for MetadataAutomaticStyle;
  *(_QWORD *)(v11 + 112) = sub_2413023BC();
  v1[2] = v11;
  type metadata accessor for NowPlayingViewModel.Metrics();
  v14 = swift_allocObject();
  _s32HostedContentToggleButtonMetricsCMa();
  v15 = swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v15 + 16) = sub_2412C91AC(v13);
  *(_QWORD *)(v14 + 16) = v15;
  sub_2414B2BA8();
  v1[3] = v14;
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = 5;
  v1[4] = v16;
  type metadata accessor for Geometry();
  v17 = swift_allocObject();
  *(_QWORD *)v40 = MEMORY[0x24BEE4B08];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437D1A8);
  sub_2414B2E0C();
  v1[5] = v17;
  type metadata accessor for NowPlayingViewModel.CurrentItem(0);
  v18 = swift_allocObject();
  v19 = v18 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11CurrentItem__id;
  memset(v40, 0, 40);
  sub_2412DC3FC((uint64_t)v40, (uint64_t)v42, (uint64_t *)&unk_254381590);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381590);
  sub_2414B2E0C();
  sub_2412CBE78((uint64_t)v40, (uint64_t *)&unk_254381590);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19, v10, v7);
  v1[6] = v18;
  _s8BackdropCMa();
  v20 = swift_allocObject();
  *(_QWORD *)v40 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381558);
  sub_2414B2E0C();
  v40[0] = 0;
  sub_2414B2E0C();
  v1[7] = v20;
  _s7ArtworkCMa();
  swift_allocObject();
  v1[8] = sub_2412DD484();
  _s18MiniPlayerMetadataCMa();
  v21 = swift_allocObject();
  v22 = unk_25438E800;
  *(_QWORD *)(v21 + 16) = qword_25438E7F8;
  *(_QWORD *)(v21 + 24) = v22;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_OWORD *)(v21 + 64) = 0u;
  *(_WORD *)(v21 + 80) = 511;
  v1[9] = v21;
  _s11ContextMenuCMa();
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 16) = 0;
  v1[10] = v23;
  _s11TimeControlCMa();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v1[11] = sub_2412D1E08();
  _s17TransportControlsCMa();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_WORD *)(v24 + 32) = 255;
  *(_QWORD *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 48) = 0;
  *(_WORD *)(v24 + 56) = 255;
  *(_BYTE *)(v24 + 58) = 0;
  v1[12] = v24;
  v1[13] = 0;
  _s6BannerCMa();
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 16) = 0;
  v1[14] = v25;
  _s5QueueCMa();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  *(_BYTE *)(v26 + 32) = 0;
  v1[15] = v26;
  _s5DebugCMa();
  v27 = swift_allocObject();
  *(_WORD *)(v27 + 16) = 0;
  *(_BYTE *)(v27 + 18) = 0;
  v40[0] = 0;
  sub_2414B2E0C();
  v1[16] = v27;
  type metadata accessor for WindowProperties();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 32) = 0x40000;
  *(_OWORD *)(v28 + 40) = 0u;
  *(_OWORD *)(v28 + 56) = 0u;
  *(_OWORD *)(v28 + 72) = 0u;
  *(_BYTE *)(v28 + 88) = 0;
  *(_OWORD *)v40 = 0uLL;
  *(_QWORD *)&v40[16] = 0x40000;
  memset(&v40[24], 0, 48);
  v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA78);
  swift_allocObject();
  *(_QWORD *)(v28 + 96) = sub_2414B2DD0();
  *(_OWORD *)(v28 + 104) = 0u;
  *(_OWORD *)(v28 + 120) = 0u;
  *(_WORD *)(v28 + 136) = 0;
  sub_2414B2BA8();
  v1[17] = v28;
  v29 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel__hasBeenPresented;
  v40[0] = 0;
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v29, v6, v36);
  v30 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel__playerStyle;
  v40[0] = 0;
  v31 = v37;
  sub_2414B2E0C();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v30, v31, v39);
  v32 = OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_pendingTransition;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380A60);
  swift_allocObject();
  *(_QWORD *)((char *)v1 + v32) = sub_2414B2DB8();
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isLive) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying) = 0;
  *(_QWORD *)v40 = *(_QWORD *)(v1[11]
                             + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_activeScrubPositionSubject);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA40);
  sub_24147E5BC();
  v1[18] = sub_2414B2E60();
  _s13HostedContentCMa();
  swift_allocObject();
  swift_retain();
  v1[13] = sub_24138291C();
  swift_release();
  return v1;
}

void sub_2412D5680(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_2412D56B4((uint64_t)v4, v1, v2, v3);

}

id sub_2412D56B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v24[5];
  objc_super v25;

  v5 = (objc_class *)_s12BackdropViewCMa(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v25.receiver = v4;
  v25.super_class = v5;
  objc_msgSendSuper2(&v25, sel_layoutSubviews);
  objc_msgSend(v4, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v24[3] = &type metadata for Features;
  v24[4] = sub_2412FD4AC();
  v14 = swift_allocObject();
  v24[0] = v14;
  *(_QWORD *)(v14 + 16) = "MediaCoreUI";
  *(_QWORD *)(v14 + 24) = 11;
  *(_BYTE *)(v14 + 32) = 2;
  *(_QWORD *)(v14 + 40) = "Catamaran";
  *(_QWORD *)(v14 + 48) = 9;
  *(_BYTE *)(v14 + 56) = 2;
  v15 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if ((v15 & 1) == 0 && !*((_BYTE *)v4 + qword_25437D770 + 8))
    v13 = *(double *)((char *)v4 + qword_25437D770);
  objc_msgSend(*(id *)((char *)v4 + qword_25437D778), sel_setFrame_, v7, v9, v11, v13);
  v16 = *(void **)((char *)v4 + qword_25437D768);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v4, sel_bounds);
    objc_msgSend(v17, sel_setFrame_);

  }
  v18 = *(void **)((char *)v4 + qword_25437D760);
  objc_msgSend(v4, sel_bounds);
  objc_msgSend(v18, sel_setFrame_);
  v19 = *(void **)((char *)v4 + qword_25437D7A0);
  objc_msgSend(v4, sel_bounds);
  objc_msgSend(v19, sel_setFrame_);
  v20 = *(void **)((char *)v4 + qword_25437D790);
  objc_msgSend(v4, sel_bounds);
  objc_msgSend(v20, sel_setFrame_);
  v21 = *(void **)((char *)v4 + qword_25437D788);
  objc_msgSend(v4, sel_bounds);
  objc_msgSend(v21, sel_setFrame_);
  v22 = *(void **)((char *)v4 + qword_25437D780);
  objc_msgSend(v4, sel_bounds);
  return objc_msgSend(v22, sel_setFrame_);
}

uint64_t _s12BackdropViewCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12BackdropViewCMn);
}

uint64_t *sub_2412D58E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v46;
  char v47;
  char v48;
  char *v49;

  v49 = (char *)(a2 + 34);
  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  sub_2412C6F44(*a2, v5);
  v6 = *a1;
  v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  sub_2412C8228(v6, v7);
  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)(a1 + 2), &qword_254380B40);
    v8 = *((_BYTE *)a2 + 56);
    if ((v8 & 1) != 0)
    {
      v9 = a2[5];
      a1[5] = v9;
      a1[6] = a2[6];
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
    }
    else
    {
      a1[2] = a2[2];
      swift_retain();
    }
    *((_BYTE *)a1 + 56) = v8;
    v10 = (__int128 *)(a2 + 8);
    sub_2412CBE78((uint64_t)(a1 + 8), &qword_254380B78);
    if ((a2[13] & 1) != 0)
    {
      v11 = a2[11];
      if (v11)
      {
        a1[11] = v11;
        a1[12] = a2[12];
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
      }
      else
      {
        v12 = *v10;
        v13 = *((_OWORD *)a2 + 5);
        a1[12] = a2[12];
        *((_OWORD *)a1 + 4) = v12;
        *((_OWORD *)a1 + 5) = v13;
      }
      *((_BYTE *)a1 + 104) = 1;
    }
    else
    {
      a1[8] = *(_QWORD *)v10;
      *((_BYTE *)a1 + 104) = 0;
      swift_retain();
    }
  }
  v14 = a2[14];
  v15 = a2[15];
  v16 = a2[16];
  v17 = a2[17];
  v18 = a2[18];
  v19 = a2[19];
  v20 = a2[20];
  v21 = a2[21];
  v46 = a2[22];
  v47 = *((_BYTE *)a2 + 184);
  v48 = *((_BYTE *)a2 + 185);
  sub_2412C6F48(v14, v15, v16, v17, v18, v19, v20, v21, v46, v47, v48);
  v22 = a1[14];
  v23 = a1[15];
  v24 = a1[16];
  v25 = a1[17];
  v26 = a1[18];
  v27 = a1[19];
  v28 = a1[20];
  v29 = a1[21];
  v30 = a1[22];
  v31 = *((_BYTE *)a1 + 184);
  v32 = *((_BYTE *)a1 + 185);
  a1[14] = v14;
  a1[15] = v15;
  a1[16] = v16;
  a1[17] = v17;
  a1[18] = v18;
  a1[19] = v19;
  a1[20] = v20;
  a1[21] = v21;
  a1[22] = v46;
  *((_BYTE *)a1 + 184) = v47;
  *((_BYTE *)a1 + 185) = v48;
  sub_2412C823C(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = a2[24];
  LOBYTE(v15) = *((_BYTE *)a2 + 200);
  sub_2412C6F44(v33, v15);
  v34 = a1[24];
  v35 = *((unsigned __int8 *)a1 + 200);
  a1[24] = v33;
  *((_BYTE *)a1 + 200) = v15;
  sub_2412C8228(v34, v35);
  v36 = a2[26];
  LOBYTE(v15) = *((_BYTE *)a2 + 216);
  sub_2412C6F44(v36, v15);
  v37 = a1[26];
  v38 = *((unsigned __int8 *)a1 + 216);
  a1[26] = v36;
  *((_BYTE *)a1 + 216) = v15;
  sub_2412C8228(v37, v38);
  v39 = a2[28];
  v40 = a2[29];
  LOBYTE(v16) = *((_BYTE *)a2 + 240);
  sub_2412C72E4(v39, v40, v16);
  v41 = a1[28];
  v42 = a1[29];
  v43 = *((_BYTE *)a1 + 240);
  a1[28] = v39;
  a1[29] = v40;
  *((_BYTE *)a1 + 240) = v16;
  sub_2412C822C(v41, v42, v43);
  a1[31] = a2[31];
  swift_retain();
  swift_release();
  a1[32] = a2[32];
  v44 = *v49;
  a1[33] = a2[33];
  *((_BYTE *)a1 + 272) = v44;
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + 273) = v49[1];
  return a1;
}

uint64_t sub_2412D5BAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int16 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v19 = *a1;
  v8 = *((_BYTE *)a1 + 16);
  v9 = *(_WORD *)((char *)a1 + 17);
  v10 = a1[3];
  v11 = *((_BYTE *)a1 + 32);
  v18 = *(_OWORD *)(a1 + 5);
  v12 = a1[7];
  v17 = a1[8];
  HIDWORD(v16) = *((unsigned __int8 *)a1 + 72);
  v13 = sub_2414B382C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, a2, v13);
  v20 = v19;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v26 = v18;
  v27 = v12;
  v28 = v17;
  v29 = BYTE4(v16);
  sub_2412D5DE0();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v6, v13);
}

double sub_2412D5CF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  char v11;
  char v12;
  double result;
  __int128 v14;
  char v15;
  __int16 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  sub_2412D5DE0();
  sub_2414B3838();
  sub_241314A7C((uint64_t)v6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = v18;
  v12 = v21;
  *(_OWORD *)a2 = v14;
  *(_BYTE *)(a2 + 16) = v8;
  *(_WORD *)(a2 + 17) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_BYTE *)(a2 + 32) = v11;
  *(_OWORD *)(a2 + 40) = v19;
  result = *(double *)&v20;
  *(_OWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 72) = v12;
  return result;
}

unint64_t sub_2412D5DE0()
{
  unint64_t result;

  result = qword_25437E478;
  if (!qword_25437E478)
  {
    result = MEMORY[0x242695AE8](&unk_2414B972C, &type metadata for DeviceMetricsKey);
    atomic_store(result, (unint64_t *)&qword_25437E478);
  }
  return result;
}

uint64_t sub_2412D5E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 16, &qword_254380B40);
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
    {
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      *(_BYTE *)(a1 + 56) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 56) = 0;
      swift_retain();
    }
  }
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_BYTE *)(a2 + 72);
  sub_2412C7080(v11, v12);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v12;
  sub_2412C821C(v13, v14);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v15 = *(int *)(a3 + 36);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v18 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v19 = v16 + v18;
  v20 = v17 + v18;
  v21 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  *(_QWORD *)(v16 + *(int *)(v22 + 28)) = *(_QWORD *)(v17 + *(int *)(v22 + 28));
  swift_retain();
  swift_release();
  return a1;
}

void sub_2412D5FF8()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  double Height;
  double v22;
  CGFloat x;
  CGFloat y;
  CGFloat v25;
  CGFloat v26;
  double MidX;
  CGFloat v28;
  CGFloat v29;
  double Width;
  CATransform3D v31;
  CGAffineTransform m;
  objc_super v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for CAPackageViewLayer();
  objc_msgSendSuper2(&v33, sel_layoutSublayers);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_bounds);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;
    objc_msgSend(v2, sel_bounds);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v34.origin.x = v4;
    v34.origin.y = v6;
    v34.size.width = v8;
    v34.size.height = v10;
    Width = CGRectGetWidth(v34);
    v28 = v4;
    v35.origin.x = v4;
    v35.origin.y = v6;
    v29 = v10;
    v35.size.width = v8;
    v35.size.height = v10;
    v19 = Width / CGRectGetHeight(v35);
    v36.origin.x = v12;
    v36.origin.y = v14;
    v36.size.width = v16;
    v36.size.height = v18;
    v20 = CGRectGetWidth(v36);
    v37.origin.x = v12;
    v37.origin.y = v14;
    v37.size.width = v16;
    v37.size.height = v18;
    if (v19 >= v20 / CGRectGetHeight(v37))
    {
      v40.origin.x = v28;
      v40.origin.y = v6;
      v40.size.width = v8;
      v40.size.height = v29;
      Height = CGRectGetHeight(v40);
      v41.origin.x = v12;
      v41.origin.y = v14;
      v41.size.width = v16;
      v41.size.height = v18;
      v22 = CGRectGetHeight(v41);
    }
    else
    {
      v38.origin.x = v28;
      v38.origin.y = v6;
      v38.size.width = v8;
      v38.size.height = v29;
      Height = CGRectGetWidth(v38);
      v39.origin.x = v12;
      v39.origin.y = v14;
      v39.size.width = v16;
      v39.size.height = v18;
      v22 = CGRectGetWidth(v39);
    }
    CGAffineTransformMakeScale((CGAffineTransform *)&v31, Height / v22, Height / v22);
    *(_OWORD *)&m.a = *(_OWORD *)&v31.m11;
    *(_OWORD *)&m.c = *(_OWORD *)&v31.m13;
    *(_OWORD *)&m.tx = *(_OWORD *)&v31.m21;
    CATransform3DMakeAffineTransform(&v31, &m);
    objc_msgSend(v2, sel_setTransform_, &v31);
    objc_msgSend(v0, sel_bounds);
    x = v42.origin.x;
    y = v42.origin.y;
    v25 = v42.size.width;
    v26 = v42.size.height;
    MidX = CGRectGetMidX(v42);
    v43.origin.x = x;
    v43.origin.y = y;
    v43.size.width = v25;
    v43.size.height = v26;
    objc_msgSend(v2, sel_setPosition_, MidX, CGRectGetMidY(v43));

  }
}

uint64_t sub_2412D621C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id aBlock[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_2414B526C();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A40);
  v8 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v36 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AD8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver__route;
  aBlock[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381588);
  sub_2414B2E0C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v16 = v0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_routeDidChange) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_subscriptions) = MEMORY[0x24BEE4B08];
  v17 = (void *)objc_opt_self();
  v18 = (void *)swift_allocObject();
  v28 = v16;
  swift_weakInit();
  aBlock[4] = sub_2413022A8;
  aBlock[5] = v18;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_2412D9ECC;
  aBlock[3] = &block_descriptor_18;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v17, sel_getActiveRouteWithCompletion_, v19);
  _Block_release(v19);
  v33 = (id)objc_opt_self();
  v20 = objc_msgSend(v33, sel_defaultCenter);
  sub_2414B5278();

  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  aBlock[0] = (id)sub_2414B5230();
  v21 = sub_2414B520C();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v32(v3, 1, 1, v21);
  v31 = sub_2412C8030((unint64_t *)&unk_254381520, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  v30 = sub_241300004();
  v22 = v34;
  sub_2414B2E84();
  sub_2412D6724((uint64_t)v3);

  v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v6, v22);
  swift_allocObject();
  swift_weakInit();
  v27 = sub_2413010CC();
  v23 = v35;
  sub_2414B2EB4();
  swift_release();
  v36 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v10, v23);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v24 = objc_msgSend(v33, sel_defaultCenter);
  sub_2414B5278();

  aBlock[0] = (id)sub_2414B5230();
  v32(v3, 1, 1, v21);
  sub_2414B2E84();
  sub_2412D6724((uint64_t)v3);

  v29(v6, v22);
  swift_allocObject();
  v25 = v28;
  swift_weakInit();
  sub_2414B2EB4();
  swift_release();
  ((void (*)(char *, uint64_t))v36)(v10, v23);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  return v25;
}

uint64_t sub_2412D6724(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_2412D6764(char a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  __int128 v35;
  void *v36;
  id (*v37)(void *);
  uint64_t v38;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 10);
    v23 = objc_msgSend(v3, sel_initWithEffect_, v22);

    return v23;
  }
  else
  {
    v4 = objc_msgSend(v2, sel_init);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_2414BE330;
    v6 = (void *)objc_opt_self();
    v7 = v4;
    *(_QWORD *)(v5 + 32) = objc_msgSend(v6, sel_effectWithStyle_, 10);
    *(_QWORD *)(v5 + 40) = objc_msgSend((id)objc_opt_self(), sel_colorEffectSaturate_, 1.6);
    sub_2414B4EDC();
    sub_2412CC884(0, &qword_25437DC50);
    v8 = (void *)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setBackgroundEffects_, v8, v5);

    v9 = objc_msgSend(v7, sel_contentView);
    v10 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v37 = sub_2412D2BB8;
    v38 = 0;
    v34 = (id)MEMORY[0x24BDAC760];
    *(_QWORD *)&v35 = 1107296256;
    *((_QWORD *)&v35 + 1) = sub_2412D2B68;
    v36 = &block_descriptor_6;
    v11 = _Block_copy(&v34);
    v12 = objc_msgSend(v10, sel_initWithDynamicProvider_, v11);
    _Block_release(v11);
    swift_release();
    objc_msgSend(v9, sel_setBackgroundColor_, v12);

    v13 = v7;
    objc_msgSend(v13, sel_bounds);
    objc_msgSend(v13, sel_bounds);
    v14 = (void *)*MEMORY[0x24BDE58E8];
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = sub_2414B4D68();
      v19 = v18;
      if (v17 == sub_2414B4D68() && v19 == v20)
        v21 = 1;
      else
        v21 = sub_2414B57D0();
      v30 = v14;
      v29 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel__setCornerRadius_continuous_maskedCorners_, v21 & 1, 15, 14.0);
    }
    else
    {
      v25 = v14;
      v26 = objc_msgSend(v13, sel_layer);
      objc_msgSend(v13, sel_bounds);
      v27 = v25;
      objc_msgSend(v26, sel_setCornerCurve_, v27);

      v28 = objc_msgSend(v13, sel_layer);
      objc_msgSend(v13, sel_bounds);
      objc_msgSend(v28, sel_setCornerRadius_, 14.0);

      v29 = objc_msgSend(v13, sel_layer);
      objc_msgSend(v29, sel_setMaskedCorners_, 15);
    }

    v31 = (void *)objc_opt_self();
    v32 = v13;
    v34 = objc_msgSend(v31, sel_blackColor);
    v35 = xmmword_2414BE340;
    v36 = 0;
    v37 = 0;
    sub_2412D1B34((uint64_t)&v34);

    v33 = objc_msgSend(v32, sel_layer);
    objc_msgSend(v33, sel_setShadowPathIsBounds_, 1);

    return v32;
  }
}

uint64_t sub_2412D6BD4(uint64_t *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(_QWORD *, uint64_t);
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;
  uint64_t aBlock;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  uint64_t (*v96)();
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B4B94();
  v86 = *(_QWORD *)(v9 - 8);
  v87 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v85 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_2414B4BB8();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_2414B4B88();
  v80 = *(_QWORD *)(v82 - 8);
  v13 = MEMORY[0x24BDAC7A8](v82);
  v81 = (uint64_t *)((char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v77 = (uint64_t *)((char *)&v72 - v15);
  v16 = sub_2414B4BD0();
  v79 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v78 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v88 = (char *)&v72 - v19;
  v20 = a1[1];
  v90 = (uint64_t (*)(uint64_t))*a1;
  if (qword_2543809C0 != -1)
    swift_once();
  v21 = sub_2414B2CA4();
  __swift_project_value_buffer(v21, (uint64_t)qword_25438E7B8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v22 = sub_2414B2C8C();
  v23 = sub_2414B51B8();
  if (os_log_type_enabled(v22, v23))
  {
    v75 = v12;
    v76 = (uint64_t)v8;
    v24 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    aBlock = v73;
    *(_DWORD *)v24 = 136446722;
    swift_beginAccess();
    v25 = *(_QWORD *)(v3 + 24);
    v89 = v16;
    v74 = a2;
    v26 = (uint64_t)v90;
    if (v25)
    {
      v27 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = 7104878;
      v25 = 0xE300000000000000;
    }
    v98 = sub_2412E4890(v27, v25, &aBlock);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    if (v20)
      v34 = v26;
    else
      v34 = 7104878;
    if (v20)
      v35 = v20;
    else
      v35 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v98 = sub_2412E4890(v34, v35, &aBlock);
    sub_2414B541C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 1024;
    v36 = v74;
    LODWORD(v98) = v74 & 1;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v22, v23, "Selected content changing from %{public}s to %{public}s, animated=%{BOOL}d", (uint8_t *)v24, 0x1Cu);
    v37 = v73;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v37, -1, -1);
    MEMORY[0x242695BD8](v24, -1, -1);

    v8 = (char *)v76;
    v12 = v75;
    v16 = v89;
    if ((v36 & 1) != 0)
    {
LABEL_18:
      result = swift_beginAccess();
      v39 = *(_QWORD *)(v3 + 24);
      if (v39)
      {
        if (v20)
        {
          result = *(_QWORD *)(v3 + 16);
          if ((uint64_t (*)(uint64_t))result == v90 && v39 == v20)
            return result;
          result = sub_2414B57D0();
          if ((result & 1) != 0)
            return result;
          goto LABEL_34;
        }
        swift_bridgeObjectRetain();
      }
      else if (!v20)
      {
        return result;
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2414B2E3C();
      swift_release();
      swift_release();
      v49 = v93;
      result = sub_2412C68C0(aBlock, v93);
      if (v49 == 1)
      {
        v51 = *(_QWORD *)(v3 + 16);
        v50 = *(_QWORD *)(v3 + 24);
        swift_getKeyPath();
        swift_getKeyPath();
        aBlock = v51;
        v93 = v50;
        v94 = v90;
        v95 = (void *)v20;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2414B2E48();
        sub_2412FFFC8();
        v76 = sub_2414B5230();
        v52 = v78;
        sub_2414B4BC4();
        v53 = v77;
        *v77 = 600;
        v54 = v80;
        v55 = v82;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v80 + 104))(v53, *MEMORY[0x24BEE5410], v82);
        v56 = v81;
        sub_241413548(v81);
        v57 = *(void (**)(_QWORD *, uint64_t))(v54 + 8);
        v57(v53, v55);
        MEMORY[0x24269445C](v52, v56);
        v57(v56, v55);
        v58 = *(void (**)(char *, uint64_t))(v79 + 8);
        v58(v52, v16);
        v59 = v58;
        v60 = (_QWORD *)swift_allocObject();
        v61 = (uint64_t)v90;
        v60[2] = v3;
        v60[3] = v61;
        v60[4] = v20;
        v96 = sub_241383CB0;
        v97 = v60;
        aBlock = MEMORY[0x24BDAC760];
        v93 = 1107296256;
        v94 = sub_2413002C8;
        v95 = &block_descriptor_7;
        v62 = _Block_copy(&aBlock);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2414B4BAC();
        v91 = MEMORY[0x24BEE4AF8];
        sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
        v89 = v16;
        v63 = v12;
        sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
        v64 = v85;
        v65 = v87;
        sub_2414B5464();
        v66 = v88;
        v67 = (void *)v76;
        MEMORY[0x242694A80](v88, v63, v64, v62);
        _Block_release(v62);

        (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v65);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v84);
        v59(v66, v89);
        v68 = swift_release();
        if (qword_257120730 != -1)
          v68 = swift_once();
        MEMORY[0x24BDAC7A8](v68);
        v69 = (uint64_t)v90;
        *(&v72 - 4) = v3;
        *(&v72 - 3) = v69;
        *(&v72 - 2) = v20;
        v70 = sub_2414B3D24();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v8, 1, 1, v70);
        v71 = swift_retain();
        sub_2412DECAC(v71, 1, (uint64_t)v8, 0);
        sub_2412CBE78((uint64_t)v8, &qword_25437DBC0);
        sub_2414B3550();
        swift_release();
        return swift_release();
      }
      return result;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    if ((a2 & 1) != 0)
      goto LABEL_18;
  }
  v28 = qword_2571370F0;
  if (qword_2571370F0)
  {
    v29 = MEMORY[0x242695CC8](qword_2571370F0 + 32);
    if (v29)
    {
      v30 = (void *)v29;
      v31 = *(_QWORD *)(v28 + 40);
      ObjectType = swift_getObjectType();
      v33 = *(void (**)(uint64_t, uint64_t))(v31 + 24);
      swift_retain();
      v33(ObjectType, v31);

    }
    else
    {
      swift_retain();
    }
  }
  result = swift_weakLoadStrong();
  if (result)
  {
    v40 = *(_QWORD *)(result + 96);
    swift_retain();
    swift_release();
    KeyPath = swift_getKeyPath();
    v42 = swift_getKeyPath();
    sub_241303978(0, v40, KeyPath, v42);
    swift_beginAccess();
    v44 = *(_QWORD *)(v3 + 16);
    v43 = *(_QWORD *)(v3 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2412CA3D0((uint64_t)v90, v20, v3);
    v98 = v44;
    v99 = v43;
    sub_2412D1668();
    result = swift_bridgeObjectRelease();
    if (v28)
    {
      v45 = MEMORY[0x242695CC8](v28 + 32);
      if (v45)
      {
        v46 = (void *)v45;
        v47 = *(_QWORD *)(v28 + 40);
        v48 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v47 + 16))(v48, v47);

      }
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2412D75EC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    v18 = v2;
    objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v3 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_2414BD5E0;
    v5 = objc_msgSend(v1, sel_leadingAnchor);
    v6 = objc_msgSend(v18, sel_leadingAnchor);
    v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

    *(_QWORD *)(v4 + 32) = v7;
    v8 = objc_msgSend(v1, sel_trailingAnchor);
    v9 = objc_msgSend(v18, sel_trailingAnchor);
    v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

    *(_QWORD *)(v4 + 40) = v10;
    v11 = objc_msgSend(v1, sel_topAnchor);
    v12 = objc_msgSend(v18, sel_topAnchor);
    v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(_QWORD *)(v4 + 48) = v13;
    v14 = objc_msgSend(v1, sel_bottomAnchor);
    v15 = objc_msgSend(v18, sel_bottomAnchor);
    v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(_QWORD *)(v4 + 56) = v16;
    sub_2414B4EDC();
    sub_2412FFF8C();
    v17 = (void *)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_activateConstraints_, v17);

    objc_msgSend(v1, sel_setNeedsUpdateConstraints);
  }
}

uint64_t sub_2412D7894(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412D78D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412D791C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[56];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v1 = v0;
  if (qword_2543809C0 != -1)
    swift_once();
  v2 = sub_2414B2CA4();
  __swift_project_value_buffer(v2, (uint64_t)qword_25438E7B8);
  v3 = sub_2414B2C8C();
  v4 = sub_2414B51B8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2412C1000, v3, v4, "NowPlayingViewModel clearing current item", v5, 2u);
    MEMORY[0x242695BD8](v5, -1, -1);
  }

  sub_2412D3E30();
  v6 = v1[9];
  if (qword_25437EB48 != -1)
    swift_once();
  v7 = qword_25438E7F8;
  v8 = unk_25438E800;
  KeyPath = swift_getKeyPath();
  v10 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2413039B0(v7, v8, v6, KeyPath, v10);
  v22 = 0u;
  v23 = 0u;
  v21 = 0u;
  v24 = -1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2412DC3FC((uint64_t)&v21, (uint64_t)v20, &qword_25437F040);
  swift_retain();
  sub_2412CBC44((uint64_t)v20, v6);
  sub_2412CBE78((uint64_t)&v21, &qword_25437F040);
  v11 = v1[12];
  v12 = swift_getKeyPath();
  v13 = swift_getKeyPath();
  swift_retain();
  sub_241303978(0, v11, v12, v13);
  v14 = v1[10];
  v15 = swift_getKeyPath();
  v16 = swift_getKeyPath();
  swift_retain();
  sub_241303994(0, v14, v15, v16);
  v17 = v1[8];
  sub_2412DD598((uint64_t)&unk_251168320);
  v18 = swift_bridgeObjectRetain();
  sub_2412C9454(v18, v17);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v21 = 0;
  swift_retain();
  sub_2414B2E48();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v21 = 0;
  swift_retain();
  sub_2414B2E48();
  *(_QWORD *)&v23 = 0;
  v21 = 0u;
  v22 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2412DC3FC((uint64_t)&v21, (uint64_t)v20, (uint64_t *)&unk_254381590);
  swift_retain();
  sub_2414B2E48();
  return sub_2412CBE78((uint64_t)&v21, (uint64_t *)&unk_254381590);
}

uint64_t sub_2412D7C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v5 = *v6;
    v7 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    v8 = (char *)v5 + v7;
    v9 = (char *)v6 + v7;
    v10 = sub_2414B38C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2412D7D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(unint64_t, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  void (*v32)(unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  void *v38;
  _QWORD *v39;
  char *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  unsigned int v55;
  unsigned int v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  void *v65;
  unsigned int v66;
  void (*v67)(unint64_t, uint64_t, uint64_t);

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AA8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2F44();
  v6 = *(_QWORD **)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v55 - v10;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v55 - v14;
  v16 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel__scenePhase;
  v17 = (void (*)(unint64_t, uint64_t, uint64_t))v6[13];
  v66 = *MEMORY[0x24BDEB1D0];
  v67 = v17;
  ((void (*)(char *, double))v17)((char *)&v55 - v14, v13);
  v64 = (void (*)(char *, char *, uint64_t))v6[2];
  v64(v11, v15, v5);
  sub_2414B2E0C();
  v18 = (void (*)(char *, uint64_t))v6[1];
  v18(v15, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v16, v4, v1);
  v19 = OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers) = MEMORY[0x24BEE4AF8];
  v20 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v21 = objc_msgSend(v20, sel_connectedScenes);

  sub_2412CB438();
  sub_2412C8030((unint64_t *)&qword_254381568, (uint64_t (*)(uint64_t))sub_2412CB438, MEMORY[0x24BEE5BD8]);
  v22 = sub_2414B50A4();

  sub_2413DADF8(v22);
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    v61 = v18;
    v62 = v15;
    v63 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815F8);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381500);
    v26 = *(_QWORD *)(v25 - 8);
    v65 = v24;
    v27 = *(_QWORD *)(v26 + 72);
    v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_2414C3180;
    v30 = (_QWORD *)(v29 + v28);
    v31 = v29 + v28 + *(int *)(v25 + 48);
    v58 = (id)*MEMORY[0x24BEBE6E8];
    *v30 = v58;
    v56 = *MEMORY[0x24BDEB1E0];
    v59 = 0;
    v32 = v67;
    ((void (*)(unint64_t))v67)(v31);
    v33 = v29 + v28 + v27 + *(int *)(v25 + 48);
    v57 = (id)*MEMORY[0x24BEBE708];
    *(_QWORD *)((char *)v30 + v27) = v57;
    v34 = *MEMORY[0x24BDEB1E8];
    v32(v33, v34, v5);
    v60 = v19;
    v35 = v0;
    v36 = (_QWORD *)((char *)v30 + 2 * v27);
    v37 = (char *)v36 + *(int *)(v25 + 48);
    v38 = (void *)*MEMORY[0x24BEBE710];
    *v36 = *MEMORY[0x24BEBE710];
    v55 = v34;
    v32((unint64_t)v37, v34, v5);
    v39 = (_QWORD *)((char *)v30 + 3 * v27);
    v40 = (char *)v39 + *(int *)(v25 + 48);
    v41 = (void *)*MEMORY[0x24BEBE6F0];
    *v39 = *MEMORY[0x24BEBE6F0];
    v42 = ((uint64_t (*)(char *, _QWORD, uint64_t))v32)(v40, v66, v5);
    MEMORY[0x24BDAC7A8](v42);
    *((_QWORD *)&v55 - 2) = v65;
    *((_QWORD *)&v55 - 1) = v35;
    v43 = v58;
    v44 = v57;
    v45 = v38;
    v46 = v41;
    v0 = v35;
    v47 = v65;
    v48 = sub_2413DB724(v29, (void (*)(_OWORD *__return_ptr, _QWORD, char *))sub_2413DB71C);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)(v35 + v60) = v48;
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v47, sel_activationState);
    if (v49 == (id)1)
    {
      v53 = v55;
      v51 = v62;
      v50 = v63;
      v52 = v61;
    }
    else
    {
      v51 = v62;
      v50 = v63;
      v52 = v61;
      v53 = v66;
      if (!v49)
        v53 = v56;
    }
    v67((unint64_t)v50, v53, v5);
    swift_getKeyPath();
    swift_getKeyPath();
    v64(v51, v50, v5);
    swift_retain();
    sub_2414B2E48();
    v52(v50, v5);

  }
  return v0;
}

uint64_t sub_2412D821C()
{
  uint64_t v0;

  return sub_2412D8234(v0);
}

uint64_t sub_2412D8234(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t KeyPath;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 120);
  v2 = (_BYTE *)(a1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  LOBYTE(v2) = *v2;
  KeyPath = swift_getKeyPath();
  v4 = swift_getKeyPath();
  swift_retain();
  return sub_2412D83F8((char)v2, v1, KeyPath, v4);
}

uint64_t sub_2412D82CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  int v11;
  void (*v12)(_QWORD *, _QWORD);
  _BYTE *v13;
  _QWORD v15[4];
  uint64_t v16;

  v11 = a1 & 1;
  v15[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v16 == v11)
  {
    swift_release();
    swift_release();
  }
  else
  {
    a5(0);
    sub_2412C8030(a6, a5, a7);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v16 = a2;
    swift_retain();
    v12 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    *v13 = v11;
    v12(v15, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2412D83F8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, &qword_25437F478, (uint64_t)&unk_2414BF6D8);
}

id static UIContentSizeCategory.default.getter()
{
  if (qword_25437CE68 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_25437D290;
}

uint64_t sub_2412D847C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2412D84AC()
{
  sub_2412D84C8();
  return swift_deallocClassInstance();
}

uint64_t sub_2412D84C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2412D8520(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2412D8520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_2;
    case 2:
      swift_bridgeObjectRelease();
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_2412D8580()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BYTE v21[40];

  v1 = v0;
  v2 = *v0;
  v3 = *MEMORY[0x24BEE4EA0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 != (id)1 && !*(_QWORD *)((char *)v1 + qword_254380208))
  {
    v9 = v3 & v2;
    v11 = *(_QWORD *)((v3 & v2) + 0x50);
    v10 = *(_QWORD *)(v9 + 88);
    v12 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 208))(v11, v10) + 64);
    swift_retain();
    swift_release();
    swift_beginAccess();
    sub_2412F1B18(v12 + 64, (uint64_t)v21);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8);
    if (swift_dynamicCast())
    {
      v13 = v20;
      if (v20)
      {
        v14 = sub_2414B4FE4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
        v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = 0;
        v16[3] = 0;
        v16[4] = v11;
        v16[5] = v10;
        v16[6] = v15;
        v16[7] = v13;
        v17 = v13;
        v18 = sub_24135F590((uint64_t)v6, (uint64_t)&unk_25712ADC8, (uint64_t)v16);
        sub_2412CBE78((uint64_t)v6, (uint64_t *)&unk_254384360);
        sub_2412D8898(v18);
        swift_bridgeObjectRelease();

      }
      else
      {
        sub_2412D87D4();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_2412D87D4();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
}

uint64_t sub_2412D87D4()
{
  _QWORD *v0;

  (*(uint64_t (**)(_QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x58) + 208))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x50));
  swift_retain();
  swift_release();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E48();
  return sub_2412D8898(0);
}

uint64_t sub_2412D8898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_254380208);
  *(_QWORD *)(v1 + qword_254380208) = a1;
  swift_retain();
  if (v2)
    sub_2414B5050();
  swift_release();
  return swift_release();
}

uint64_t Optional<A>.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  int internalBuild;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD v13[2];

  v3 = sub_2414B2CA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    v8 = (void *)result;
    internalBuild = MobileGestalt_get_internalBuild();

    if (internalBuild && BSIsBeingDebugged())
    {
      sub_2414B2C98();
      v10 = sub_2414B2C8C();
      v11 = sub_2414B51A0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_2412C1000, v10, v11, "If you're seeing this, you're impacted by rdar://124036991. If your log is using String(describing:), this error will go away in 18.1. If not, please use String(describing:). To resolve this error immediately, log an unwrapped String instead.", v12, 2u);
        MEMORY[0x242695BD8](v12, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    if (a2)
    {
      v13[0] = 60;
      v13[1] = 0xE100000000000000;
      sub_2414B4DF8();
      sub_2414B4DF8();
      return v13[0];
    }
    else
    {
      return 15932;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2412D8AA0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = objc_msgSend(v0, sel_traitCollection);
  v2 = objc_msgSend(v1, sel_horizontalSizeClass);

  if (v2 != (id)1)
    return 0;
  v3 = (void *)sub_241490B90();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_tabBar);

  v6 = objc_msgSend(v5, sel_superview);
  if (!v6)
    return 0;

  v7 = (void *)sub_241490B90();
  if (!v7)
    return 0;
  v8 = v7;
  v9 = objc_msgSend(v7, sel_tabBar);

  return v9;
}

void sub_2412D8B78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[5];

  v8[3] = &type metadata for Features;
  v8[4] = sub_2412FD4AC();
  v1 = swift_allocObject();
  v8[0] = v1;
  *(_QWORD *)(v1 + 16) = "MediaCoreUI";
  *(_QWORD *)(v1 + 24) = 11;
  *(_BYTE *)(v1 + 32) = 2;
  *(_QWORD *)(v1 + 40) = "Catamaran";
  *(_QWORD *)(v1 + 48) = 9;
  *(_BYTE *)(v1 + 56) = 2;
  v2 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((v2 & 1) != 0)
  {

    if (qword_254380328 != -1)
      swift_once();
  }
  else
  {
    v3 = MEMORY[0x242695CC8](v0 + qword_254380130);
    if (v3)
    {
      v4 = (void *)v3;
      objc_opt_self();
      v5 = (void *)swift_dynamicCastObjCClass();
      if (v5)
      {
        v6 = objc_msgSend(v5, sel_viewControllerForColumn_, 2);

        if (v6)
        {
          v7 = objc_msgSend(v6, sel_view);

          if (v7)
          {
            objc_msgSend(v7, sel_safeAreaInsets);

          }
          else
          {
            __break(1u);
          }
        }
      }
      else
      {

      }
    }
  }
}

_OWORD *sub_2412D8D3C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

double UIFontMetrics.scaledValue(for:traitCollection:noSmallerThan:noLargerThan:where:)(void *a1, void *a2, void *a3, uint64_t (*a4)(void), double a5)
{
  void *v5;
  id v10;
  double v11;

  v10 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v11 = sub_2412D8DD0(v10, a2, a3, v5, a4, a5);

  return v11;
}

double sub_2412D8DD0(void *a1, void *a2, void *a3, void *a4, uint64_t (*a5)(void), double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  id v26;
  id v27;
  double v28;

  if ((a5() & 1) != 0)
  {
    v11 = sub_2414B4D68();
    v13 = v12;
    if (v11 == sub_2414B4D68() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      v17 = a1;
    }
    else
    {
      v16 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = a1;
      if ((v16 & 1) == 0)
      {
        if ((sub_2414B52B4() & 1) != 0)
          v17 = a1;
        else
          v17 = a2;
      }
    }
    v18 = v17;
    v19 = sub_2414B4D68();
    v21 = v20;
    if (v19 == sub_2414B4D68() && v21 == v22)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        if ((sub_2414B52A8() & 1) != 0)
          v25 = a1;
        else
          v25 = a3;
        v26 = v25;

        v18 = v26;
      }
    }
    v27 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v18);
    objc_msgSend(a4, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, a6);
    a6 = v28;

  }
  return a6;
}

_QWORD *sub_2412D8FA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = v9[8];
  sub_2412C7080(*(_QWORD *)v9, v11);
  v12 = *(_QWORD *)v8;
  v13 = v8[8];
  *(_QWORD *)v8 = v10;
  v8[8] = v11;
  sub_2412C821C(v12, v13);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = v16[8];
  sub_2412C7080(*(_QWORD *)v16, v18);
  v19 = *(_QWORD *)v15;
  v20 = v15[8];
  *(_QWORD *)v15 = v17;
  v15[8] = v18;
  sub_2412C821C(v19, v20);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_retain();
  swift_release();
  v22[16] = v23[16];
  return a1;
}

UIEdgeInsets __swiftcall CGRect.insets(from:)(__C::CGRect from)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  double MinY;
  double MinX;
  double MaxY;
  double v15;
  double MaxX;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat height;
  CGFloat v22;
  double v23;
  double v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  UIEdgeInsets result;

  v5 = v4;
  v6 = v3;
  v7 = v2;
  v8 = v1;
  height = from.size.height;
  x = from.origin.x;
  y = from.origin.y;
  width = from.size.width;
  v22 = from.size.width;
  MinY = CGRectGetMinY((CGRect)from);
  v25.origin.x = v8;
  v25.origin.y = v7;
  v25.size.width = v6;
  v25.size.height = v5;
  v24 = MinY - CGRectGetMinY(v25);
  v26.origin.x = x;
  v26.origin.y = y;
  v26.size.width = width;
  v26.size.height = height;
  MinX = CGRectGetMinX(v26);
  v27.origin.x = v8;
  v27.origin.y = v7;
  v27.size.width = v6;
  v27.size.height = v5;
  v23 = MinX - CGRectGetMinX(v27);
  v28.origin.x = v8;
  v28.origin.y = v7;
  v28.size.width = v6;
  v28.size.height = v5;
  MaxY = CGRectGetMaxY(v28);
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = v22;
  v29.size.height = height;
  v15 = MaxY - CGRectGetMaxY(v29);
  v30.origin.x = v8;
  v30.origin.y = v7;
  v30.size.width = v6;
  v30.size.height = v5;
  MaxX = CGRectGetMaxX(v30);
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = v22;
  v31.size.height = height;
  v17 = MaxX - CGRectGetMaxX(v31);
  v19 = v23;
  v18 = v24;
  v20 = v15;
  result.right = v17;
  result.bottom = v20;
  result.left = v19;
  result.top = v18;
  return result;
}

uint64_t NowPlayingViewModel.Metrics.on(_:for:handler:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t result;
  uint64_t v30;

  v8 = *a2;
  v7 = a2[1];
  v9 = *(_QWORD *)(v4 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = (_QWORD *)(v9 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v9 + 16) = 0x8000000000000000;
  v15 = sub_2412D943C(v8, v7);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_11;
  }
  LOBYTE(v9) = v14;
  if (*(_QWORD *)(v13 + 24) >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_11:
    sub_24140B404();
    goto LABEL_6;
  }
  sub_2412D9728(v18, isUniquelyReferenced_nonNull_native);
  v19 = sub_2412D943C(v8, v7);
  if ((v9 & 1) != (v20 & 1))
    goto LABEL_13;
  v15 = v19;
LABEL_6:
  *v11 = v13;
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)*v11;
  if ((v9 & 1) != 0)
  {
LABEL_9:
    v27 = v21[7];
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v30 = *(_QWORD *)(v27 + 8 * v15);
    *(_QWORD *)(v27 + 8 * v15) = 0x8000000000000000;
    sub_2412D9590((uint64_t)sub_24143C124, v10, v28);
    *(_QWORD *)(v27 + 8 * v15) = v30;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  v22 = sub_2413130BC(MEMORY[0x24BEE4AF8]);
  v21[(v15 >> 6) + 8] |= 1 << v15;
  v23 = (uint64_t *)(v21[6] + 16 * v15);
  *v23 = v8;
  v23[1] = v7;
  *(_QWORD *)(v21[7] + 8 * v15) = v22;
  v24 = v21[2];
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    v21[2] = v26;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  __break(1u);
LABEL_13:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

unint64_t sub_2412D943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  v4 = sub_2414B58FC();
  return sub_2412D94B0(a1, a2, v4);
}

unint64_t sub_2412D94B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2414B57D0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2414B57D0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2412D9590(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2412D96B8();
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_24140B26C();
LABEL_7:
    v16 = *v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = (_QWORD *)(*(_QWORD *)(v16 + 56) + 16 * v10);
      result = swift_release();
      *v17 = a1;
      v17[1] = a2;
      return result;
    }
LABEL_11:
    *(_QWORD *)(v16 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    v19 = (_QWORD *)(*(_QWORD *)(v16 + 56) + 16 * v10);
    *v19 = a1;
    v19[1] = a2;
    v20 = *(_QWORD *)(v16 + 16);
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      *(_QWORD *)(v16 + 16) = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2412D9A4C(result, a3 & 1);
  result = sub_2412D96B8();
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = *v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_2412D96B8()
{
  uint64_t v0;

  sub_2414B58CC();
  sub_2414B58D8();
  v0 = sub_2414B58FC();
  return sub_2412D96FC(v0);
}

uint64_t sub_2412D96FC(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

uint64_t sub_2412D9728(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC70);
  v36 = a2;
  v6 = sub_2414B56E0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2414B58CC();
    swift_bridgeObjectRetain();
    sub_2414B4DD4();
    swift_bridgeObjectRelease();
    result = sub_2414B58FC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2412D9A4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC68);
  result = sub_2414B56E0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v29 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_2414B58CC();
      sub_2414B58D8();
      result = sub_2414B58FC();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

void UIView.Corner.init(view:insetBy:)(void *a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  double v22;
  id v23;
  uint64_t v24;
  double v25;
  BOOL v26;
  id v27;

  v6 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v6, sel_cornerRadius);
  v8 = v7;

  v9 = v8 - a3;
  if (v9 <= 0.0)
  {

    v22 = 0.0;
    v23 = 0;
    v24 = 3;
  }
  else
  {
    objc_msgSend(a1, sel_bounds);
    v11 = v10;
    v13 = v12;
    v14 = objc_msgSend(a1, sel_layer);
    v15 = objc_msgSend(v14, sel_cornerCurve);

    v16 = sub_2414B4D68();
    v18 = v17;
    if (v16 == sub_2414B4D68() && v18 == v19)
      v21 = 1;
    else
      v21 = sub_2414B57D0() & 1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13 >= v11)
      v25 = v11;
    else
      v25 = v13;
    v26 = sub_2412FE7EC(v25 * 0.5, v9);
    v27 = objc_msgSend(a1, sel_layer);
    v23 = objc_msgSend(v27, sel_maskedCorners);

    if (v26)
      v22 = 0.0;
    else
      v22 = v9;
    v24 = 2;
    if (!v26)
      v24 = v21;
  }
  *a2 = v22;
  *((_QWORD *)a2 + 1) = v24;
  *((_QWORD *)a2 + 2) = v23;
}

void sub_2412D9ECC(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_2412D9F20(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a1)
      v2 = a1;
    else
      v2 = objc_msgSend((id)objc_opt_self(), sel_systemRoute);
    swift_getKeyPath();
    swift_getKeyPath();
    v3 = a1;
    sub_2414B2E3C();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    v4 = v2;
    sub_2414B2E48();
    sub_2412DA060(v5);
    swift_release();

  }
}

void sub_2412DA060(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B526C();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A40);
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v13 = v24;
  if (v24)
  {
    if (a1)
    {
      sub_2412CC884(0, &qword_254381580);
      v14 = a1;
      v15 = v13;
      v16 = sub_2414B532C();

      if ((v16 & 1) != 0)
        return;
    }
    else
    {

    }
LABEL_8:
    v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    v18 = v24;
    sub_2414B5278();

    sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
    v24 = (id)sub_2414B5230();
    v19 = sub_2414B520C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
    sub_2412C8030((unint64_t *)&unk_254381520, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    sub_241300004();
    sub_2414B2E84();
    sub_2412D6724((uint64_t)v6);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    swift_allocObject();
    swift_weakInit();
    sub_2413010CC();
    v20 = sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver_routeDidChange) = v20;
    swift_release();
    return;
  }
  if (a1)
    goto LABEL_8;
}

void sub_2412DA3F8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  id v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double Height;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  objc_super v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v34.receiver = v0;
  v34.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v34, sel_viewDidLayoutSubviews);
  v1 = sub_2412DA58C();
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  objc_msgSend(v2, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v35.origin.x = v5;
  v35.origin.y = v7;
  v35.size.width = v9;
  v35.size.height = v11;
  Width = CGRectGetWidth(v35);
  v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14 = v13;
  objc_msgSend(v13, sel_bounds);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v36.origin.x = v16;
  v36.origin.y = v18;
  v36.size.width = v20;
  v36.size.height = v22;
  Height = CGRectGetHeight(v36);
  v24 = objc_msgSend(v0, sel_view);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_frame);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v37.origin.x = v27;
    v37.origin.y = v29;
    v37.size.width = v31;
    v37.size.height = v33;
    objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, Width, Height - CGRectGetMinY(v37));

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_2412DA58C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[5];

  v1 = OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC23CollapsedViewController____lazy_storage___miniPlayerContainer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC23CollapsedViewController____lazy_storage___miniPlayerContainer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC23CollapsedViewController____lazy_storage___miniPlayerContainer);
  }
  else
  {
    v4 = v0;
    v12[3] = &type metadata for Features;
    v12[4] = sub_2412FD4AC();
    v5 = swift_allocObject();
    v12[0] = v5;
    *(_QWORD *)(v5 + 16) = "MediaCoreUI";
    *(_QWORD *)(v5 + 24) = 11;
    *(_BYTE *)(v5 + 32) = 2;
    *(_QWORD *)(v5 + 40) = "Catamaran";
    *(_QWORD *)(v5 + 48) = 9;
    *(_BYTE *)(v5 + 56) = 2;
    v6 = sub_2414B2BCC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v7 = objc_allocWithZone((Class)type metadata accessor for MiniPlayerContainerView());
    v8 = sub_2412D3134(v6 & 1);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_2412DA6AC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ContentViewController();
  objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  if (v0[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_isActive] == 1)
  {
    v2 = objc_msgSend(v0, sel_view);
    if (!v2)
    {
LABEL_9:
      __break(1u);
      return;
    }
    v3 = v2;
    sub_2412EB7E8(v2);

  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_contentView];
  if (!v4)
    return;
  v5 = v4;
  v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  objc_msgSend(v6, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v5, sel_setFrame_, v9, v11, v13, v15);
}

uint64_t type metadata accessor for ContentViewController()
{
  return objc_opt_self();
}

void sub_2412DA820()
{
  char *v0;
  char *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;
  _QWORD v38[4];
  char v39;
  CGRect v40;
  CGRect v41;

  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v37, sel_layoutSubviews);
  v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  v2 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  v3 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 8];
  v4 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 16];
  v5 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 24];
  objc_msgSend(v0, sel_bounds);
  v41.origin.x = v6;
  v41.origin.y = v7;
  v41.size.width = v8;
  v41.size.height = v9;
  v40.origin.x = v2;
  v40.origin.y = v3;
  v40.size.width = v4;
  v40.size.height = v5;
  v10 = CGRectEqualToRect(v40, v41);
  objc_msgSend(v0, sel_bounds);
  *(_QWORD *)v1 = v11;
  *((_QWORD *)v1 + 1) = v12;
  *((_QWORD *)v1 + 2) = v13;
  *((_QWORD *)v1 + 3) = v14;
  v15 = v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows];
  v16 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows;
  v17 = v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows];
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = v17;
  v18 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView];
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v19, sel_setFrame_, UIEdgeInsetsInsetRect(v20, v21, v22, v23, *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets], *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets + 8]));

  }
  sub_24138180C(v0[v16]);
  if (!v10 || v15 != v17)
  {
    v25 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView;
    v26 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView];
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v27, sel_setFrame_);

      v28 = *(void **)&v0[v25];
      if (v28)
      {
        if (v0[v16] == 1)
        {
          v29 = v28;
          v30 = 0;
        }
        else
        {
          v31 = v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_style];
          v32 = v28;
          objc_msgSend(v0, sel_bounds);
          v38[0] = v33;
          v38[1] = v34;
          v38[2] = v35;
          v38[3] = v36;
          v39 = 0;
          v30 = sub_241381C20((uint64_t)v38, v31);
        }
        objc_msgSend(v28, sel_setEffect_, v30);

      }
    }
  }
}

uint64_t sub_2412DAA14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v10;
  uint64_t *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;

  v10 = (int *)type metadata accessor for _CAPackageView();
  v11 = (_QWORD *)((char *)a5 + v10[6]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v12 = (char *)a5 + v10[7];
  *(_QWORD *)v12 = swift_getKeyPath();
  v12[8] = 0;
  v13 = (_QWORD *)((char *)a5 + v10[8]);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  *a5 = a3;
  a5[1] = a4;
  type metadata accessor for ViewState();
  sub_2412C8030(&qword_254380840, (uint64_t (*)(uint64_t))type metadata accessor for ViewState, (uint64_t)&unk_2414C5844);
  swift_retain();
  a5[2] = sub_2414B33C4();
  a5[3] = v14;
  if (qword_2543846C8 != -1)
    swift_once();
  v15 = (id)qword_25438E910;
  sub_2412DAB8C(a1, a2);

  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_2412DAB8C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!v2[7])
  {
    v3 = v2;
    v6 = sub_2412CFEE0();
    v7 = (void *)v2[7];
    v3[7] = v6;
    v8 = v6;

    sub_2412D1C4C();
    v3[2] = a1;
    v3[3] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = v3[5];
    if (v9)
    {
      v10 = v3[4];
      v11 = qword_25437D9E8;
      swift_bridgeObjectRetain();
      if (v11 != -1)
        swift_once();
      v12 = sub_2414B2CA4();
      __swift_project_value_buffer(v12, (uint64_t)qword_25438E770);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v13 = sub_2414B2C8C();
      v14 = sub_2414B51B8();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v16 = swift_slowAlloc();
        v17 = v16;
        *(_DWORD *)v15 = 136446466;
        swift_bridgeObjectRetain();
        sub_2412E4890(v10, v9, &v17);
        sub_2414B541C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_2412E4890(a1, a2, &v17);
        sub_2414B541C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2412C1000, v13, v14, "%{public}s: %{public}s ViewState loaded package ", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v16, -1, -1);
        MEMORY[0x242695BD8](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t sub_2412DADEC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  type metadata accessor for ViewState();
  sub_2412C8030(&qword_254380840, (uint64_t (*)(uint64_t))type metadata accessor for ViewState, (uint64_t)&unk_2414C5844);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2414B3040();
  return sub_2412DAA14(v3, v4, v5, v6, a1);
}

uint64_t sub_2412DAEA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ViewState();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ViewState()
{
  return objc_opt_self();
}

void sub_2412DAF00(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[7];
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[4] = a1;
  v3 = sub_2414B382C();
  MEMORY[0x24BDAC7A8](v3);
  v11 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a2[2];
  v6 = a2[4];
  v7 = a2[5];
  v9 = a2[3];
  v10 = v5;
  v12 = v5;
  v13 = v9;
  v8[5] = v6;
  v14 = v6;
  v15 = v7;
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

void sub_2412DAF8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[112];

  *(_QWORD *)(v4 - 144) = a1;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 176) = &v26[-v7];
  v8 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_254382AD8 != -1)
    swift_once();
  v11 = sub_2414B2CA4();
  __swift_project_value_buffer(v11, (uint64_t)qword_254382AB8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v1);
  v12 = sub_2414B2C8C();
  v13 = sub_2414B5188();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v3;
    *(_QWORD *)(v4 - 208) = v5;
    *(_QWORD *)(v4 - 200) = v2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)(v4 - 216) = v16;
    *(_QWORD *)(v4 - 128) = v16;
    *(_DWORD *)v15 = 136446210;
    v17 = &v10[*(int *)(v1 + 56)];
    v18 = *(_QWORD *)v17;
    v19 = v17[8];
    sub_2412E6F7C(*(_QWORD *)v17, v19);
    v20 = sub_241345070(v18, v19);
    sub_2412E6BF8(v18, v19);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v1);
    if (*(_QWORD *)(v20 + 16))
    {
      *(_QWORD *)(v4 - 136) = v20;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
      sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
      v21 = sub_2414B4CB4();
      v23 = v22;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v23 = 0xE400000000000000;
      v21 = 1701736270;
    }
    v3 = v14;
    *(_QWORD *)(v4 - 136) = sub_2412E4890(v21, v23, (uint64_t *)(v4 - 128));
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v12, v13, "[Context: %{public}s] Creating MarqueeUIView", v15, 0xCu);
    v24 = *(_QWORD *)(v4 - 216);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v24, -1, -1);
    MEMORY[0x242695BD8](v15, -1, -1);

  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v1);

  }
  v25 = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 160);
  *(_QWORD *)(v4 - 120) = v25;
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 184);
  *(_QWORD *)(v4 - 104) = v3;
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView();
}

double sub_2412DB34C()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
  sub_2414B48DC();
  return v1;
}

void type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2412DB3B0(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v7 = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 45) = *(_QWORD *)((char *)a2 + 45);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  v8 = a3[19];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  *(_OWORD *)a1 = v6;
  v11 = sub_2414B3484();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2412DB45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4A44();
  v10 = v9;
  v11 = (uint64_t)&v7[*(int *)(v5 + 36)];
  sub_2412DB550(v2, v11);
  v12 = (uint64_t *)(v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380FF0) + 36));
  *v12 = v8;
  v12[1] = v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, a1, v13);
  sub_2412DC3FC((uint64_t)v7, a2, &qword_254380C60);
  return sub_2412CBE78((uint64_t)v7, &qword_254380C60);
}

uint64_t sub_2412DB550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  float64x2_t v22;
  char v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a2;
  v3 = sub_2414B38A4();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v41 - v6;
  v43 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v43);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = sub_2414B3598();
  MEMORY[0x24BDAC7A8](v42);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380CC0);
  MEMORY[0x24BDAC7A8](v44);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380DE8);
  v53 = *(_QWORD *)(v19 - 8);
  v54 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(float64x2_t *)(a1 + 8);
  v51 = *(float64x2_t *)(a1 + 24);
  v52 = v22;
  if (qword_25437DC88 != -1)
    swift_once();
  v49 = *(float64x2_t *)&qword_25438E7A0;
  v50 = *(float64x2_t *)((char *)&xmmword_25438E788 + 8);
  v23 = sub_2414B4624();
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v52, v50), (int32x4_t)vceqq_f64(v51, v49))), 0xFuLL))) & 1) != 0&& (v23 & 1) != 0)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v55, 1, 1, v54);
  }
  type metadata accessor for ArtworkShadowModifier(0);
  sub_2412FA3B4((uint64_t)v8);
  v25 = *v8;
  v26 = (char *)v8 + *(int *)(v43 + 20);
  v27 = (char *)v11 + *(int *)(v9 + 20);
  v28 = sub_2414B38C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v26, v28);
  *v11 = v25;
  v11[1] = v25;
  sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
  v29 = MEMORY[0x24BDED998];
  sub_2412C6A50((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v13[*(int *)(v42 + 20)] = 0x3FF0000000000000;
  sub_2412C68F4((uint64_t)v11, (uint64_t (*)(_QWORD))v29);
  v30 = sub_2414B4654();
  v31 = MEMORY[0x24BDED970];
  sub_2412C6A50((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))MEMORY[0x24BDED970]);
  *(_QWORD *)&v16[*(int *)(v14 + 52)] = v30;
  *(_WORD *)&v16[*(int *)(v14 + 56)] = 256;
  sub_2412C68F4((uint64_t)v13, (uint64_t (*)(_QWORD))v31);
  v32 = sub_2414B466C();
  v52 = *(float64x2_t *)(a1 + 16);
  v33 = *(_QWORD *)(a1 + 32);
  sub_2412DC3FC((uint64_t)v16, (uint64_t)v18, &qword_254380B10);
  v34 = &v18[*(int *)(v44 + 36)];
  *(_QWORD *)v34 = v32;
  *(float64x2_t *)(v34 + 8) = v52;
  *((_QWORD *)v34 + 3) = v33;
  sub_2412CBE78((uint64_t)v16, &qword_254380B10);
  v35 = v46;
  sub_2414B3898();
  v37 = v47;
  v36 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v45, v35, v48);
  sub_2412C8030(&qword_2571271D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE9A8], MEMORY[0x24BDEE998]);
  v38 = sub_2414B3220();
  sub_2412DC3FC((uint64_t)v18, (uint64_t)v21, &qword_254380CC0);
  v39 = v54;
  *(_QWORD *)&v21[*(int *)(v54 + 36)] = v38;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  sub_2412CBE78((uint64_t)v18, &qword_254380CC0);
  v40 = v55;
  sub_2412EAEA4((uint64_t)v21, v55, &qword_254380DE8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v40, 0, 1, v39);
}

uint64_t type metadata accessor for ArtworkShadowModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437FDE0);
}

uint64_t sub_2412DBA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a1;
  v29 = a2;
  v28 = type metadata accessor for ArtworkShadowModifier(0);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArtworkInnerStrokeModifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C30);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380DC0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  swift_storeEnumTagMultiPayload();
  sub_2412DC3B8((uint64_t)v10, (uint64_t)&v13[*(int *)(v11 + 36)], type metadata accessor for ArtworkClipShape);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381090);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v27, v17);
  sub_2414B463C();
  v18 = sub_2414B466C();
  swift_release();
  v19 = *(_QWORD *)v2;
  *v7 = v18;
  v7[1] = v19;
  v20 = (uint64_t *)((char *)v7 + *(int *)(v5 + 24));
  *v20 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_2412DC3FC((uint64_t)v13, (uint64_t)v16, &qword_254380C30);
  sub_2412DC3B8((uint64_t)v7, (uint64_t)&v16[*(int *)(v14 + 36)], type metadata accessor for ArtworkInnerStrokeModifier);
  sub_2412CBE78((uint64_t)v13, &qword_254380C30);
  *(_QWORD *)v4 = *(_QWORD *)(v2 + 8);
  v21 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v4 + 24) = v21;
  v22 = (uint64_t *)&v4[*(int *)(v28 + 20)];
  *v22 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v23 = v29;
  sub_2412DC3FC((uint64_t)v16, v29, &qword_254380DC0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E68);
  sub_2412DC3B8((uint64_t)v4, v23 + *(int *)(v24 + 36), type metadata accessor for ArtworkShadowModifier);
  swift_retain();
  return sub_2412CBE78((uint64_t)v16, &qword_254380DC0);
}

uint64_t sub_2412DBD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t result;
  uint64_t (*v52)();
  unint64_t *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];
  uint64_t v71;
  ValueMetadata *v72;
  uint64_t v73;
  unint64_t v74;
  char v75;

  v58 = a1;
  v69 = a2;
  v3 = type metadata accessor for ArtworkCornerModifier(0);
  v59 = *(char **)(v3 - 8);
  v4 = *((_QWORD *)v59 + 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380DD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813B8);
  v61 = *(_QWORD *)(v15 - 8);
  v62 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v60 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813B0);
  v67 = *(_QWORD *)(v17 - 8);
  v68 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v66 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813C0);
  v64 = *(_QWORD *)(v19 - 8);
  v65 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v63 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v22 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  sub_2414B47A4();
  v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543811A0);
  sub_2412C6A50((uint64_t)v8, (uint64_t)v23 + *(int *)(v24 + 28), type metadata accessor for ArtworkCornerStyle);
  *v23 = KeyPath;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v11, v58, v25);
  sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
  v26 = v22;
  sub_2412C6A50(v22, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
  v27 = v59[80];
  v28 = (v27 + 16) & ~v27;
  v29 = v28 + v4;
  v30 = v27 | 7;
  v31 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v5, v31 + v28, type metadata accessor for ArtworkCornerModifier);
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v14, &qword_254380C50);
  v56 = v12;
  v32 = *(int *)(v12 + 36);
  v59 = v14;
  v33 = (uint64_t (**)())&v14[v32];
  v34 = v26;
  *v33 = sub_2413028C8;
  v33[1] = (uint64_t (*)())v31;
  v33[2] = 0;
  v33[3] = 0;
  sub_2412CBE78((uint64_t)v11, &qword_254380C50);
  v35 = *(_QWORD *)(v26 + 96);
  if (v35)
  {
    LOBYTE(v71) = *(_BYTE *)(v35 + 16);
    sub_2412C6A50(v26, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
    v36 = swift_allocObject();
    sub_2412DC3B8((uint64_t)v5, v36 + v28, type metadata accessor for ArtworkCornerModifier);
    v55 = sub_2412DC484(&qword_254380DC8, &qword_254380DD0, (uint64_t (*)(void))sub_2412CF178, MEMORY[0x24BDF0910]);
    v37 = sub_2412DC440();
    v38 = v60;
    v39 = v56;
    v40 = (uint64_t)v59;
    sub_2414B4564();
    swift_release();
    sub_2412CBE78(v40, &qword_254380DD0);
    v41 = *(_QWORD *)v34;
    LOBYTE(v40) = *(_BYTE *)(v34 + 8);
    sub_2412C7080(*(_QWORD *)v34, v40);
    sub_2412EF52C(v41, v40, v70);
    sub_2412C821C(v41, v40);
    v75 = v70[0];
    sub_2412C6A50(v34, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
    v57 = v30;
    v58 = v29;
    v42 = swift_allocObject();
    v59 = (char *)v28;
    sub_2412DC3B8((uint64_t)v5, v42 + v28, type metadata accessor for ArtworkCornerModifier);
    v71 = v39;
    v72 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
    v73 = v55;
    v74 = v37;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v44 = sub_2412DC4EC();
    v45 = v66;
    v46 = v62;
    sub_2414B4558();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v46);
    v47 = *(_QWORD *)(v34 + 80);
    if (v47)
    {
      swift_beginAccess();
      v75 = *(_BYTE *)(v47 + 16);
      sub_2412C6A50(v34, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
      v48 = swift_allocObject();
      sub_2412DC3B8((uint64_t)v5, (uint64_t)&v59[v48], type metadata accessor for ArtworkCornerModifier);
      v71 = v46;
      v72 = &type metadata for NowPlayingArtwork.Placement;
      v73 = OpaqueTypeConformance2;
      v74 = v44;
      swift_getOpaqueTypeConformance2();
      v49 = v63;
      v50 = v68;
      sub_2414B4564();
      swift_release();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v50);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v69, v49, v65);
    }
    _s14DefaultArtworkCMa();
    v52 = _s14DefaultArtworkCMa;
    v53 = &qword_25437F478;
    v54 = &unk_2414BF6D8;
  }
  else
  {
    type metadata accessor for NowPlayingViewModel.Lifecycle();
    v52 = type metadata accessor for NowPlayingViewModel.Lifecycle;
    v53 = &qword_25437F7B0;
    v54 = &unk_2414CBCE8;
  }
  sub_2412C8030(v53, (uint64_t (*)(uint64_t))v52, (uint64_t)v54);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_2412DC3B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2412DC3FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2412DC440()
{
  unint64_t result;

  result = qword_25437F7A0;
  if (!qword_25437F7A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414CBCC0, &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase);
    atomic_store(result, (unint64_t *)&qword_25437F7A0);
  }
  return result;
}

uint64_t sub_2412DC484(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2412DC4EC()
{
  unint64_t result;

  result = qword_25437E6D0[0];
  if (!qword_25437E6D0[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingArtwork.Placement, &type metadata for NowPlayingArtwork.Placement);
    atomic_store(result, qword_25437E6D0);
  }
  return result;
}

uint64_t sub_2412DC530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_2412DC58C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  void *v31;
  _BYTE *v32;
  _OWORD *v33;
  objc_class *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  char v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  void *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (**v131)(uint64_t, uint64_t);
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  char v140;
  ValueMetadata *v141;
  unint64_t v142;
  objc_super v143;
  objc_super v144;

  v1 = v0;
  v2 = *MEMORY[0x24BEE4EA0] & *(_QWORD *)v0;
  v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382B40);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v113 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382B28);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v121 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382C08);
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v110 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382B10);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382BF8);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v107 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382AF0);
  v120 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v119 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + 80);
  v16 = *(_QWORD *)(v2 + 88);
  v18 = type metadata accessor for NowPlayingView(0, v15, v16, v17);
  v131 = *(void (***)(uint64_t, uint64_t))(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v129 = (uint64_t)&v101 - v19;
  v21 = type metadata accessor for NowPlayingEnvironmentModifier(255, v15, v16, v20);
  v123 = v18;
  v125 = v21;
  v22 = sub_2414B3514();
  v130 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v127 = (char *)&v101 - v23;
  v124 = v24;
  v126 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v126);
  v128 = (char *)&v101 - v25;
  v27 = (objc_class *)type metadata accessor for NowPlayingViewController(0, v15, v16, v26);
  v144.receiver = v1;
  v144.super_class = v27;
  objc_msgSendSuper2(&v144, sel_viewDidLoad);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 208);
  v133 = *(id *)&v1[qword_254380120];
  v134 = v16;
  v135 = v15;
  v29 = *(_QWORD *)(v28(v15, v16) + 136);
  swift_retain_n();
  swift_release();
  v30 = sub_2412C9DEC(v29, 0);
  v31 = *(void **)&v1[qword_25437D840];
  *(_QWORD *)&v1[qword_25437D840] = v30;

  v32 = objc_allocWithZone((Class)type metadata accessor for ExpandedViewController());
  v33 = &v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC22ExpandedViewController_lastSeenBounds];
  *v33 = 0u;
  v33[1] = 0u;
  v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_isActive] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_contentView] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_backdropView] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_windowProperties] = v29;
  *(_QWORD *)&v32[OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_statusBarStyle] = 0;
  v34 = (objc_class *)type metadata accessor for ContentViewController();
  v143.receiver = v32;
  v143.super_class = v34;
  swift_retain();
  v35 = objc_msgSendSuper2(&v143, sel_initWithNibName_bundle_, 0, 0);
  v36 = *(void **)&v1[qword_25437D838];
  *(_QWORD *)&v1[qword_25437D838] = v35;

  v37 = *(void **)&v1[qword_25437D840];
  if (!v37)
  {
    __break(1u);
    goto LABEL_18;
  }
  v136 = objc_msgSend(v37, sel_view);
  if (!v136)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v141 = &type metadata for Features;
  v142 = sub_2412FD4AC();
  v38 = swift_allocObject();
  v139[0] = v38;
  *(_QWORD *)(v38 + 16) = "MediaCoreUI";
  *(_QWORD *)(v38 + 24) = 11;
  *(_BYTE *)(v38 + 32) = 2;
  *(_QWORD *)(v38 + 40) = "Catamaran";
  *(_QWORD *)(v38 + 48) = 9;
  *(_BYTE *)(v38 + 56) = 2;
  v39 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
  if ((v39 & 1) == 0)
    objc_msgSend(v136, sel_setClipsToBounds_, 1);
  if (!*(_QWORD *)&v1[qword_25437D840])
    goto LABEL_19;
  objc_msgSend(v1, sel_addChildViewController_);
  v40 = objc_msgSend(v1, sel_view);
  if (!v40)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v41 = v40;
  v106 = v6;
  v42 = v136;
  objc_msgSend(v40, sel_addSubview_, v136);

  v43 = *(void **)&v1[qword_25437D840];
  if (!v43)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v122 = v29;
  v102 = v5;
  v103 = v12;
  v104 = v10;
  v105 = v9;
  objc_msgSend(v43, sel_didMoveToParentViewController_, v1);
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384420);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_2414BE320;
  v45 = objc_msgSend(v42, sel_heightAnchor);
  v46 = objc_msgSend(v1, (SEL)&stru_251189148);
  if (!v46)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v47 = v46;
  v48 = (void *)objc_opt_self();
  v49 = objc_msgSend(v47, sel_heightAnchor);

  v50 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v49);
  *(_QWORD *)(v44 + 32) = v50;
  *(_QWORD *)(v44 + 40) = sub_24148E224();
  *(_QWORD *)(v44 + 48) = sub_24148E334();
  v139[0] = v44;
  sub_2414B4EDC();
  sub_2412CC884(0, (unint64_t *)&qword_2543814F0);
  v51 = (void *)sub_2414B4EB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v48, sel_activateConstraints_, v51);

  v52 = v123;
  v53 = MEMORY[0x242695AE8](&unk_2414CABB8, v123);
  v54 = MEMORY[0x242695AE8](&unk_2414BCB18, v125);
  v138[0] = v53;
  v138[1] = v54;
  v55 = MEMORY[0x24BDED308];
  v56 = v124;
  v57 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v124, v138);
  v58 = sub_2413022D0();
  v137[0] = v57;
  v137[1] = v58;
  MEMORY[0x242695AE8](v55, v126, v137);
  v126 = sub_2414B39D0();
  v59 = v129;
  v61 = v134;
  v60 = v135;
  sub_2412CE7B4(v135, v134, v129);
  v62 = *(_QWORD *)&v1[qword_2543801E0];
  type metadata accessor for NowPlayingViewControllerProxy(0, v60, v61, v63);
  v67 = (uint64_t *)sub_2412C92C4((uint64_t)v1, v64, v65, v66);
  swift_retain();
  v68 = v127;
  sub_2412D0940((uint64_t)v133, v62, v67, v52, v53);
  swift_release();
  swift_release();
  v131[1](v59, v52);
  v139[0] = sub_241302314;
  v139[1] = 0;
  v140 = 0;
  MEMORY[0x242693DC0](v139, v56, &type metadata for HostedScenePhaseSupport, v57);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v68, v56);
  v69 = (void *)sub_2414B39AC();
  sub_2414B352C();
  sub_2414B39A0();
  v70 = objc_msgSend(v69, sel_view);
  if (!v70)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v71 = v70;
  v72 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v71, sel_setBackgroundColor_, v72);

  v73 = *(void **)&v1[qword_2543801D8];
  *(_QWORD *)&v1[qword_2543801D8] = v69;
  v74 = v69;

  v75 = *(void **)&v1[qword_25437D840];
  v76 = v136;
  if (!v75)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v77 = v75;
  sub_2412D0598(v77);

  v78 = (*(uint64_t (**)(uint64_t))(v134 + 288))(v135);
  swift_unknownObjectRelease();
  if (v78)
  {
    v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD500]), sel_initWithDelegate_, v1);
    objc_msgSend(v76, sel_addInteraction_, v79);
    v80 = *(void **)&v1[qword_25437D850];
    *(_QWORD *)&v1[qword_25437D850] = v79;

  }
  sub_2412D8580();
  v81 = sub_241490B90();
  if (v81)
  {
    v82 = (void *)v81;
    swift_getKeyPath();
    v83 = v107;
    sub_2414B29E0();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = v82;
    sub_2412CC884(0, &qword_2543814E0);
    sub_2412C8FC4((unint64_t *)&unk_254382BE8, &qword_254382BF8, MEMORY[0x24BDD0230]);
    v131 = v82;
    v84 = v119;
    v133 = v74;
    v85 = v109;
    sub_2414B2E6C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v83, v85);
    swift_getKeyPath();
    v86 = v110;
    sub_2414B29E0();
    swift_release();
    sub_2412C8FC4(&qword_254382C00, (uint64_t *)&unk_254382C08, MEMORY[0x24BDD0230]);
    v87 = v103;
    v88 = v112;
    sub_2414B2E6C();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v86, v88);
    v89 = MEMORY[0x24BDB94C8];
    sub_2412C8FC4(&qword_254382AE8, (uint64_t *)&unk_254382AF0, MEMORY[0x24BDB94C8]);
    sub_2412C8FC4((unint64_t *)&unk_254382B00, (uint64_t *)&unk_254382B10, v89);
    v90 = v113;
    v91 = v105;
    v92 = v84;
    sub_2414B2E78();
    sub_2412C8FC4(&qword_254382B38, (uint64_t *)&unk_254382B40, MEMORY[0x24BDB9798]);
    sub_241363A3C(&qword_254382BE0, &qword_2543814E0, 0x24BEBDB08, MEMORY[0x24BEE5BE0]);
    v93 = v116;
    v94 = v115;
    sub_2414B2EA8();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v90, v94);
    sub_2414B2D64();
    __swift_instantiateConcreteTypeFromMangledName(qword_254382C28);
    sub_2412C8FC4(&qword_254382B20, (uint64_t *)&unk_254382B28, MEMORY[0x24BDB9658]);
    sub_2412C8FC4((unint64_t *)&unk_254382C18, qword_254382C28, MEMORY[0x24BDD0230]);
    v95 = v121;
    v96 = v118;
    sub_2414B2EC0();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v93, v96);
    v97 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v98 = (_QWORD *)swift_allocObject();
    v99 = v134;
    v98[2] = v135;
    v98[3] = v99;
    v98[4] = v97;
    sub_2412C8FC4((unint64_t *)&unk_254382B50, &qword_254382B60, MEMORY[0x24BDB98F0]);
    v100 = v102;
    sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v95, v100);
    swift_beginAccess();
    sub_2414B2D70();
    swift_endAccess();
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v87, v91);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v92, v132);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_2412DD3E0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2412DD448(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return sub_2412C821C(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

_QWORD *sub_2412DD484()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v0[5] = &type metadata for NowPlayingStandardArtworkTreatment;
  v2 = sub_2413018E4();
  v1[6] = v2;
  v1[2] = sub_2412DD598((uint64_t)&unk_251163200);
  v1[7] = -1;
  v1[11] = &type metadata for NowPlayingStandardArtworkTreatment;
  v1[12] = v2;
  v1[8] = sub_2412DD598((uint64_t)&unk_251163228);
  sub_2412DD598((uint64_t)&unk_251163250);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380A70);
  swift_allocObject();
  v1[13] = sub_2414B2DD0();
  v1[14] = 0;
  _s14DefaultArtworkCMa();
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = 0;
  v1[15] = v3;
  _s7ArtworkC17BackgroundArtworkCMa();
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381558);
  sub_2414B2E0C();
  v1[16] = v4;
  return v1;
}

uint64_t sub_2412DD598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815B8);
    v3 = sub_2414B5560();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_2414B58CC();
      sub_2414B58D8();
      result = sub_2414B58FC();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2412DD6D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _OWORD *v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  char *v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  void *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t ObjectType;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  __int128 v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  id v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  objc_super v114;

  ObjectType = swift_getObjectType();
  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  v88 = sub_2414B526C();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v86 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A40);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437D9F8);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA10);
  v101 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v99 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543809E8);
  v98 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v96 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A08);
  v95 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v93 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v1 + qword_2543801D8) = 0;
  *(_QWORD *)((char *)v1 + qword_25437D840) = 0;
  *(_QWORD *)((char *)v1 + qword_25437D838) = 0;
  *(_QWORD *)((char *)v1 + qword_2543801E8) = MEMORY[0x24BEE4B08];
  v13 = qword_2543801E0;
  type metadata accessor for NowPlayingRouteObserver();
  swift_allocObject();
  v14 = v1;
  *(_QWORD *)((char *)v1 + v13) = sub_2412D621C();
  *(_QWORD *)((char *)v14 + qword_254380258 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)((char *)v14 + qword_254380248) = 0;
  *(_QWORD *)((char *)v14 + qword_25437D850) = 0;
  *(_QWORD *)((char *)v14 + qword_254380208) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)((char *)v14 + qword_254381828) = 0;
  *(_QWORD *)((char *)v14 + qword_2543829A0) = 0;
  *(_QWORD *)((char *)v14 + qword_2543801C8) = 0;
  v15 = (_OWORD *)((char *)v14 + qword_2543829B0);
  v16 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *v15 = *MEMORY[0x24BEBE158];
  v15[1] = v16;
  *(_QWORD *)((char *)v14 + qword_254380218) = 0;
  *(_QWORD *)((char *)v14 + qword_2543801C0) = 0;
  *(_QWORD *)((char *)v14 + qword_2543801F8) = 0;
  *(_QWORD *)((char *)v14 + qword_254380110) = 0;
  *(_QWORD *)((char *)v14 + qword_254380238) = 0;
  *((_BYTE *)v14 + qword_254380220) = 0;
  v17 = (char *)v14 + qword_254380228;
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[32] = 1;
  *(_QWORD *)((char *)v14 + qword_254380120) = a1;
  v109 = a1;
  swift_unknownObjectRetain();

  v19 = *(_QWORD *)(v3 + 88);
  v107 = *(_QWORD *)(v3 + 80);
  v18 = v107;
  v21 = (objc_class *)type metadata accessor for NowPlayingViewController(0, v107, v19, v20);
  v114.receiver = v14;
  v114.super_class = v21;
  v22 = objc_msgSendSuper2(&v114, sel_initWithNibName_bundle_, 0, 0);
  v106 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 208);
  v23 = v106;
  v108 = v22;
  v24 = *(void **)(v23(v18, v19) + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_pendingTransition);
  swift_retain();
  swift_release();
  v111 = v24;
  v102 = sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v110 = (id)sub_2414B5230();
  *(_QWORD *)&v105 = sub_2414B520C();
  v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56);
  v103(v11, 1, 1, v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380A60);
  sub_2412C8FC4(&qword_254380A58, &qword_254380A60, MEMORY[0x24BDB9CB0]);
  v104 = sub_241363A3C((unint64_t *)&qword_2543843B0, (unint64_t *)&qword_254384FC0, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v25 = v93;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_2543842B0);

  swift_release();
  v26 = swift_allocObject();
  v27 = v108;
  swift_unknownObjectWeakInit();
  v28 = (_QWORD *)swift_allocObject();
  v29 = v107;
  v28[2] = v107;
  v28[3] = v19;
  v28[4] = v26;
  sub_2412C8FC4((unint64_t *)&unk_2543809F8, &qword_254380A08, MEMORY[0x24BDB9A08]);
  v30 = v94;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v25, v30);
  v31 = (uint64_t)v27 + qword_2543801E8;
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v106(v29, v19);
  swift_retain();
  swift_release();
  v32 = (void *)sub_2412C8A74();
  swift_release();
  v111 = v32;
  v110 = (id)sub_2414B5230();
  v103(v11, 1, 1, v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380A50);
  sub_2412C8FC4(&qword_254380A48, &qword_254380A50, MEMORY[0x24BDB9AF8]);
  v33 = v96;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_2543842B0);

  swift_release();
  v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v35 = (_QWORD *)swift_allocObject();
  v36 = v107;
  v35[2] = v107;
  v35[3] = v19;
  v35[4] = v34;
  sub_2412C8FC4(&qword_2543809E0, (uint64_t *)&unk_2543809E8, MEMORY[0x24BDB9A08]);
  v37 = v97;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v33, v37);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v38 = v106;
  v39 = *(_QWORD *)(v106(v36, v19) + 136);
  swift_retain();
  swift_release();
  v40 = *(void **)(v39 + 96);
  swift_retain();
  swift_release();
  v111 = v40;
  v110 = (id)sub_2414B5230();
  v103(v11, 1, 1, v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA78);
  sub_2412C8FC4(&qword_25437DA70, &qword_25437DA78, MEMORY[0x24BDB9D10]);
  v41 = v99;
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_2543842B0);

  swift_release();
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v36;
  v43[3] = v19;
  v43[4] = v42;
  sub_2412C8FC4((unint64_t *)&unk_25437DA00, &qword_25437DA10, MEMORY[0x24BDB9A08]);
  v44 = v100;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v41, v44);
  swift_beginAccess();
  v100 = v31;
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v101 = v19;
  v45 = *(_QWORD *)(v38(v36, v19) + 104);
  swift_retain();
  result = swift_release();
  if (v45)
  {
    v47 = *(void **)(v45 + 32);
    swift_retain();
    swift_release();
    v111 = v47;
    v110 = (id)sub_2414B5230();
    v48 = v105;
    v49 = v103;
    v103(v11, 1, 1, v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DA20);
    sub_2412C8FC4(&qword_25437DA18, (uint64_t *)&unk_25437DA20, MEMORY[0x24BDB9CB0]);
    v50 = v83;
    sub_2414B2E84();
    sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_2543842B0);

    swift_release();
    v51 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v52 = (_QWORD *)swift_allocObject();
    v53 = v101;
    v52[2] = v107;
    v52[3] = v53;
    v52[4] = v51;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = sub_24149633C;
    *(_QWORD *)(v54 + 24) = v52;
    v55 = MEMORY[0x24BDB9A08];
    sub_2412C8FC4(&qword_25437D9F0, &qword_25437D9F8, MEMORY[0x24BDB9A08]);
    v56 = v85;
    sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v50, v56);
    swift_beginAccess();
    sub_2414B2D70();
    swift_endAccess();
    swift_release();
    v57 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v58 = v86;
    sub_2414B5278();

    v111 = (id)sub_2414B5230();
    v49(v11, 1, 1, v48);
    sub_2412C8030((unint64_t *)&unk_254381520, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    v59 = v89;
    v60 = v88;
    sub_2414B2E84();
    sub_2412CBE78((uint64_t)v11, (uint64_t *)&unk_2543842B0);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v58, v60);
    v61 = swift_allocObject();
    v62 = v108;
    swift_unknownObjectWeakInit();
    v63 = (_QWORD *)swift_allocObject();
    v64 = v107;
    v65 = v101;
    v63[2] = v107;
    v63[3] = v65;
    v63[4] = v61;
    sub_2412C8FC4((unint64_t *)&qword_254380A30, &qword_254380A40, v55);
    v66 = v91;
    sub_2414B2EB4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v66);
    swift_beginAccess();
    sub_2414B2D70();
    swift_endAccess();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384408);
    v67 = swift_allocObject();
    v105 = xmmword_2414B72B0;
    *(_OWORD *)(v67 + 16) = xmmword_2414B72B0;
    v68 = sub_2414B2D04();
    v69 = MEMORY[0x24BEBC428];
    *(_QWORD *)(v67 + 32) = v68;
    *(_QWORD *)(v67 + 40) = v69;
    v70 = swift_allocObject();
    v71 = ObjectType;
    *(_QWORD *)(v70 + 16) = v109;
    *(_QWORD *)(v70 + 24) = v71;
    swift_unknownObjectRetain();
    v72 = v62;
    sub_2414B51DC();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v105;
    v74 = sub_2414B2D1C();
    v75 = MEMORY[0x24BEBC7E0];
    *(_QWORD *)(v73 + 32) = v74;
    *(_QWORD *)(v73 + 40) = v75;
    *(_QWORD *)(swift_allocObject() + 16) = v71;
    v76 = v72;
    sub_2414B51DC();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v77 = *(_QWORD *)(v106(v64, v65) + 64);
    swift_retain();
    swift_release();
    v78 = objc_msgSend(v76, sel_traitCollection);
    v79 = objc_msgSend(v78, sel_accessibilityContrast);

    if (*(id *)(v77 + 56) != v79)
    {
      swift_beginAccess();
      sub_2412F1B18(v77 + 16, (uint64_t)&v111);
      v80 = v112;
      v81 = v113;
      v82 = __swift_project_boxed_opaque_existential_1(&v111, v112);
      sub_2413031AC((uint64_t)v82, (uint64_t)v79, v77, v80, v81);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
    }
    *(_QWORD *)(v77 + 56) = v79;
    swift_release();

    swift_unknownObjectRelease();
    return (uint64_t)v76;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s11MediaCoreUI15OpacityModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t sub_2412DE6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t initializeWithCopy for ArtworkStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_BYTE *)(a2 + 88);
  v18 = *(_BYTE *)(a2 + 89);
  sub_2412C6F48(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17, v18);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = v17;
  *(_BYTE *)(a1 + 89) = v18;
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CAPackageView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[4];
  v5 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_2412D0590();
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_2412C8C2C();
  return a1;
}

uint64_t initializeWithCopy for CAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412D0590();
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  return a1;
}

uint64_t sub_2412DE990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C7080(v6, v7);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  return a1;
}

uint64_t sub_2412DEA08(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_2412C821C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_2412C823C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104), *(_BYTE *)(a1 + 105));
}

void sub_2412DEA6C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD v14[12];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543809C0 != -1)
    swift_once();
  v7 = sub_2414B2CA4();
  __swift_project_value_buffer(v7, (uint64_t)qword_25438E7B8);
  swift_retain();
  v8 = sub_2414B2C8C();
  v9 = sub_2414B51B8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    *(_DWORD *)v10 = 67109376;
    v14[4] = a1 & 1;
    sub_2414B541C();
    *(_WORD *)(v10 + 8) = 1024;
    v11 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
    swift_beginAccess();
    v14[3] = *v11;
    sub_2414B541C();
    swift_release();
    _os_log_impl(&dword_2412C1000, v8, v9, "ViewModel.isPlaying was changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v10, 0xEu);
    MEMORY[0x242695BD8](v10, -1, -1);

  }
  else
  {

    swift_release();
  }
  v12 = sub_2414B4AC8();
  v13 = sub_2414B3D24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_2412DECAC(v12, 1, (uint64_t)v6, 0);
  sub_2412CBE78((uint64_t)v6, &qword_25437DBC0);
  sub_2414B3550();
  swift_release();
  swift_release();
  sub_2412DEEE4();
}

uint64_t sub_2412DECAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[8];
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_2414B3D24();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  v15 = sub_2414B3094();
  if (qword_25437D758 != -1)
    swift_once();
  sub_2414B307C();
  v14[4] = 0;
  sub_2414B3064();
  sub_2412DEE9C(a3, (uint64_t)v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2412DEE5C((uint64_t)v8);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (a4)
    {
      swift_retain();
      sub_2414B3070();
      sub_2412C9444(a4);
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v15;
}

uint64_t sub_2412DEE5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412DEE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2412DEEE4()
{
  uint64_t v0;
  char *v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = (char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  v2 = *v1;
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isLive);
  swift_beginAccess();
  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 96);
    if ((*v3 & 1) != 0)
    {
      swift_beginAccess();
      v5 = *(_BYTE *)(v4 + 33);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      v6 = 2;
    }
    else
    {
      swift_beginAccess();
      v5 = *(_BYTE *)(v4 + 33);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      v6 = 1;
    }
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 96);
    swift_beginAccess();
    v5 = *(_BYTE *)(v4 + 33);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    v6 = 0;
  }
  sub_2412DF37C(v6, v4);
  sub_2412DF040(v5);
}

void sub_2412DF040(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v3 = (_BYTE *)(v1 + 33);
  swift_beginAccess();
  v4 = 0xE500000000000000;
  v5 = 0x6573756170;
  if (*(_BYTE *)(v1 + 33) != 1)
  {
    v5 = 1886352499;
    v4 = 0xE400000000000000;
  }
  if (*(_BYTE *)(v1 + 33))
    v6 = v5;
  else
    v6 = 2036427888;
  if (*(_BYTE *)(v1 + 33))
    v7 = v4;
  else
    v7 = 0xE400000000000000;
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6573756170;
    else
      v8 = 1886352499;
    if (a1 == 1)
      v9 = 0xE500000000000000;
    else
      v9 = 0xE400000000000000;
    if (v6 != v8)
      goto LABEL_21;
  }
  else
  {
    v9 = 0xE400000000000000;
    if (v6 != 2036427888)
      goto LABEL_21;
  }
  if (v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_21:
  v10 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    if (qword_2543809C0 != -1)
      swift_once();
    v11 = sub_2414B2CA4();
    __swift_project_value_buffer(v11, (uint64_t)qword_25438E7B8);
    swift_retain_n();
    v12 = sub_2414B2C8C();
    v13 = sub_2414B51B8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v22 = v15;
      *(_DWORD *)v14 = 136446466;
      if (a1)
      {
        if (a1 == 1)
          v16 = 0x6573756170;
        else
          v16 = 1886352499;
        if (a1 == 1)
          v17 = 0xE500000000000000;
        else
          v17 = 0xE400000000000000;
      }
      else
      {
        v17 = 0xE400000000000000;
        v16 = 2036427888;
      }
      sub_2412E4890(v16, v17, &v22);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      v18 = 0xE500000000000000;
      v19 = 0x6573756170;
      if (*v3 != 1)
      {
        v19 = 1886352499;
        v18 = 0xE400000000000000;
      }
      if (*v3)
        v20 = v19;
      else
        v20 = 2036427888;
      if (*v3)
        v21 = v18;
      else
        v21 = 0xE400000000000000;
      sub_2412E4890(v20, v21, &v22);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2412C1000, v12, v13, "TransportControls.center button changed from %{public}s to %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v15, -1, -1);
      MEMORY[0x242695BD8](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_2412DF37C(char a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(_QWORD *, _QWORD);
  _BYTE *v12;
  _QWORD v14[4];
  uint64_t v15;

  v14[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6573756170;
    else
      v4 = 1886352499;
    if (a1 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 2036427888;
  }
  v6 = 0xE500000000000000;
  v7 = 0x6573756170;
  if (v15 != 1)
  {
    v7 = 1886352499;
    v6 = 0xE400000000000000;
  }
  if ((_BYTE)v15)
    v8 = v7;
  else
    v8 = 2036427888;
  if ((_BYTE)v15)
    v9 = v6;
  else
    v9 = 0xE400000000000000;
  if (v4 == v8 && v5 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      _s17TransportControlsCMa();
      sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
      sub_2414B2D94();
      sub_2414B2DE8();
      swift_release();
      v15 = a2;
      swift_retain();
      v11 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      *v12 = a1;
      v11(v14, 0);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  swift_release();
  swift_release();
  return swift_release();
}

void sub_2412DF568(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[8];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  MEMORY[0x24BDAC7A8](v4);
  v9[4] = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a3[2];
  v7 = a3[4];
  v8 = a3[5];
  v10 = a3[3];
  v11 = v6;
  v12 = v6;
  v13 = v10;
  v9[6] = v8;
  v9[7] = v7;
  v14 = v7;
  v15 = v8;
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

void sub_2412DF5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v25[96];

  *(_QWORD *)(v5 - 128) = a1;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = &v25[-v7];
  v9 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_254382AD8 != -1)
    swift_once();
  v12 = sub_2414B2CA4();
  __swift_project_value_buffer(v12, (uint64_t)qword_254382AB8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v1);
  v13 = sub_2414B2C8C();
  v14 = sub_2414B5188();
  if (os_log_type_enabled(v13, v14))
  {
    *(_QWORD *)(v5 - 200) = v4;
    *(_QWORD *)(v5 - 192) = v3;
    *(_QWORD *)(v5 - 184) = v2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)(v5 - 208) = v16;
    *(_QWORD *)(v5 - 112) = v16;
    *(_DWORD *)v15 = 136446210;
    v17 = &v11[*(int *)(v1 + 56)];
    v18 = *(_QWORD *)v17;
    v19 = v17[8];
    sub_2412E6F7C(*(_QWORD *)v17, v19);
    v20 = sub_241345070(v18, v19);
    sub_2412E6BF8(v18, v19);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v1);
    if (*(_QWORD *)(v20 + 16))
    {
      *(_QWORD *)(v5 - 120) = v20;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
      sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
      v21 = sub_2414B4CB4();
      v23 = v22;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v23 = 0xE400000000000000;
      v21 = 1701736270;
    }
    *(_QWORD *)(v5 - 120) = sub_2412E4890(v21, v23, (uint64_t *)(v5 - 112));
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v13, v14, "[Context: %{public}s] Updating MarqueeUIView", v15, 0xCu);
    v24 = *(_QWORD *)(v5 - 208);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v24, -1, -1);
    MEMORY[0x242695BD8](v15, -1, -1);

  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v1);

  }
  MEMORY[0x242695AE8](&unk_2414C8D10, v1);
  sub_2414B3CF4();
  sub_2414B3CE8();
  sub_2412DF964((uint64_t)v8);
}

uint64_t sub_2412DF910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 76);
  v3 = sub_2414B3484();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void sub_2412DF964(uint64_t a1@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  sub_2412DFBDC();
  sub_2414B3838();
  *(_QWORD *)a1 = v2;
  sub_2412DFC64();
  sub_2414B3838();
  *(_QWORD *)(a1 + 8) = v2;
  sub_2412DFC20();
  sub_2414B3838();
  *(_QWORD *)(a1 + 16) = v2;
  sub_2412DFB98();
  sub_2414B3838();
  *(_BYTE *)(a1 + 24) = v2;
  sub_2412C84B8();
  sub_2414B3838();
  *(_QWORD *)(a1 + 32) = v2;
  sub_2412DFB54();
  sub_2414B3838();
  *(_QWORD *)(a1 + 40) = v2;
  *(_DWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 52) = v4;
  sub_2412DFD8C();
  sub_2414B3838();
  *(_QWORD *)(a1 + 56) = v2;
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

uint64_t sub_2412DFAB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_2414B370C();
  sub_2412C8474();
  sub_2414B3838();
  *(_BYTE *)(v1 + *(int *)(a1 + 80)) = v6;
  sub_24145D5E8();
  sub_2414B3838();
  v4 = sub_2414B382C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  *(_QWORD *)(v1 + *(int *)(a1 + 84)) = v6;
  return result;
}

void type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration()
{
  JUMPOUT(0x242695A4CLL);
}

unint64_t sub_2412DFB54()
{
  unint64_t result;

  result = qword_254380FB0;
  if (!qword_254380FB0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C94C8, &_s33MarqueePreferredFrameRateRangeKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380FB0);
  }
  return result;
}

unint64_t sub_2412DFB98()
{
  unint64_t result;

  result = qword_254380F78;
  if (!qword_254380F78)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9538, &_s21MarqueeIsAnimatingKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F78);
  }
  return result;
}

unint64_t sub_2412DFBDC()
{
  unint64_t result;

  result = qword_254380F08;
  if (!qword_254380F08)
  {
    result = MEMORY[0x242695AE8](&unk_2414C95E0, &_s17MarqueeSpacingKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F08);
  }
  return result;
}

unint64_t sub_2412DFC20()
{
  unint64_t result;

  result = qword_254380EF0;
  if (!qword_254380EF0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9570, &_s15MarqueeDelayKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380EF0);
  }
  return result;
}

unint64_t sub_2412DFC64()
{
  unint64_t result;

  result = qword_254380EE8;
  if (!qword_254380EE8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C95A8, &_s14MarqueeRateKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380EE8);
  }
  return result;
}

unint64_t sub_2412DFCA8()
{
  unint64_t result;

  result = qword_254380F10;
  if (!qword_254380F10)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9300, &_s18MarqueeIsBadgedKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F10);
  }
  return result;
}

uint64_t sub_2412DFCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  swift_bridgeObjectRetain();
  return sub_2414B3844();
}

unint64_t sub_2412DFD48()
{
  unint64_t result;

  result = qword_254380F70;
  if (!qword_254380F70)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9290, &_s20MarqueeFeatheringKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F70);
  }
  return result;
}

unint64_t sub_2412DFD8C()
{
  unint64_t result;

  result = qword_254380F98;
  if (!qword_254380F98)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9618, &_s30MarqueeAnimationDurationMaxKeyVN);
    atomic_store(result, (unint64_t *)&qword_254380F98);
  }
  return result;
}

void sub_2412DFDD0(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  swift_beginAccess();
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

void sub_2412DFE74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 24))(v6, v5, a1);
  swift_endAccess();
  v9 = *(_QWORD *)((*v8 & *v1) + 0x80);
  v10 = *(void **)((char *)v1 + v9);
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v3, v4);
    v11 = v10;
    sub_2414B39C4();
    goto LABEL_6;
  }
  sub_2414B39D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v3, v4);
  v12 = (void *)sub_2414B39AC();
  sub_2412E008C(v12);
  v13 = sub_2412E2058();
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v14, sel_setBackgroundColor_, v15);

    v16 = *(void **)((char *)v1 + v9);
    if (v16)
    {
      v11 = v16;
      sub_2414B39A0();
LABEL_6:

      sub_241457004();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2412DFFC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = a3[19];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2414B3484();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2412E008C(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x80);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;
  v4 = a1;
  sub_2412E00E4(v3);

}

void sub_2412E00E4(void *a1)
{
  _QWORD *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  if (a1)
  {
    v2 = objc_msgSend(a1, sel_view);
    if (!v2)
      goto LABEL_9;
    v3 = v2;
    objc_msgSend(v2, sel_removeFromSuperview);

  }
  v4 = *(void **)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x80));
  if (v4)
  {
    v5 = objc_msgSend(v4, sel_view);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v1, sel_addSubview_);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

id static UIFont.preferredFont(forTextStyle:weight:)(uint64_t a1, double a2)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, a1, a2);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_2412E01F0()
{
  return sub_2414B50E0();
}

BOOL static CGSize.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_2412E2718(a1, a2, a3, a4);
}

uint64_t sub_2412E0234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(_s25BackdropConditionObserverVMa(0, v5, v6, a4) - 8) + 80);
  return sub_2412E0288(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_2412E0288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD v6[2];
  uint64_t v7;

  v4 = _s25BackdropConditionObserverVMa(0, a2, a3, a4);
  memset(v6, 0, sizeof(v6));
  v7 = 0;
  sub_2412E02DC((uint64_t)v6, v4);
  return sub_2412CBE78((uint64_t)v6, &qword_2543803E0);
}

uint64_t sub_2412E02DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  _DWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  void (*v82)(char *, uint64_t);
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  void *v105;
  uint8_t *v106;
  _QWORD v108[10];
  uint64_t v109;
  char *v110;
  char *v111;
  _QWORD *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  void (*v118)(char *, uint64_t, uint64_t);
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char v129[8];
  _OWORD v130[2];
  char v131;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v6);
  v108[4] = (char *)v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_2414B3934();
  v108[9] = *(_QWORD *)(v109 - 8);
  v8 = MEMORY[0x24BDAC7A8](v109);
  v108[8] = (char *)v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v108[7] = (char *)v108 - v10;
  v116 = sub_2414B2F44();
  v11 = *(_QWORD *)(v116 - 8);
  v12 = MEMORY[0x24BDAC7A8](v116);
  v14 = (char *)v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v115 = (uint64_t)v108 - v15;
  v121 = sub_2414B2CA4();
  v122 = *(_QWORD *)(v121 - 8);
  v16 = MEMORY[0x24BDAC7A8](v121);
  v108[3] = (char *)v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v108[1] = (char *)v108 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v108[5] = (char *)v108 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v108[6] = (char *)v108 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v111 = (char *)v108 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v114 = (char *)v108 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v120 = (char *)v108 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v108 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)v108 - v34;
  v36 = *(_QWORD **)(a2 - 8);
  v37 = v36[8];
  v38 = MEMORY[0x24BDAC7A8](v33);
  v108[2] = (char *)v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v110 = (char *)v108 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v113 = (char *)v108 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v119 = (char *)v108 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)v108 - v45;
  sub_2412E1F2C(a1, (uint64_t)&v127);
  v47 = (void (*)(char *, uint64_t, uint64_t))v36[2];
  v123 = v3;
  v118 = v47;
  v47(v46, v3, a2);
  v112 = v36;
  if (v128)
  {
    v48 = a2;
    v117 = (void (*)(char *, uint64_t))v36[1];
    v117(v46, a2);
    sub_2412FAA04(&v127, (uint64_t)v129);
  }
  else
  {
    sub_2412EFAC0((uint64_t)v129);
    v48 = a2;
    v117 = (void (*)(char *, uint64_t))v36[1];
    v117(v46, a2);
    sub_2412CBE78((uint64_t)&v127, &qword_2543803E0);
  }
  v49 = v123;
  v50 = *(_BYTE *)(v123 + 80);
  v51 = swift_retain();
  v52 = sub_2412F0D3C(v51, v50);
  swift_release();
  swift_getKeyPath();
  v125 = v52;
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  v53 = *(unsigned __int8 *)(v52 + 136);
  swift_release();
  if (v53 == 1)
  {
    sub_2412E1F74();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    swift_release();
    if ((v125 & 1) == 0)
    {
      if (qword_25437D9D8 != -1)
        swift_once();
      v54 = v121;
      v55 = __swift_project_value_buffer(v121, (uint64_t)qword_25437D9C0);
      v56 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v35, v55, v54);
      v57 = sub_2414B2C8C();
      v58 = sub_2414B51B8();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v59 = 0;
        _os_log_impl(&dword_2412C1000, v57, v58, "Pausing backdrop during view transition", v59, 2u);
        MEMORY[0x242695BD8](v59, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v54);
LABEL_40:
      sub_2412E1F74();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v125) = 1;
      swift_retain();
      sub_2414B2E48();
    }
  }
  else
  {
    v60 = *(_OWORD *)(v49 + 104);
    v130[0] = *(_OWORD *)(v49 + 88);
    v130[1] = v60;
    v131 = *(_BYTE *)(v49 + 120);
    sub_2412C8378((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
    sub_2412E1CCC((uint64_t)&v125);
    sub_2412C8378((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
    v61 = v126;
    sub_2412C68C0(v125, v126);
    v62 = v48;
    if (v61 == 1)
    {
      v63 = *(unsigned __int8 *)(sub_2412E1ECC() + 16);
      if (v63 > 4 || v63 == 2)
      {
        v79 = v115;
        sub_2412C8890(v115);
        v80 = v116;
        (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BDEB1E0], v116);
        sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
        v81 = sub_2414B4CE4();
        v82 = *(void (**)(char *, uint64_t))(v11 + 8);
        v82(v14, v80);
        v82((char *)v79, v80);
        if ((v81 & 1) != 0)
        {
          type metadata accessor for EnvironmentMonitor();
          sub_2412C8030((unint64_t *)&unk_25437E800, (uint64_t (*)(uint64_t))type metadata accessor for EnvironmentMonitor, (uint64_t)&unk_2414CB074);
          v83 = (void *)sub_2414B3040();
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2414B2E3C();

          swift_release();
          swift_release();
          if (v125 < 0x14)
          {
            v84 = (char *)&loc_2412E0D6C + 4 * word_2414CB15C[*(unsigned __int8 *)(sub_2412E1ECC() + 16)];
            __asm { BR              X10 }
          }
          sub_2412E1F74();
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_2414B2E3C();
          swift_release();
          swift_release();
          swift_release();
          if ((v125 & 1) == 0)
          {
            v96 = v49;
            if (qword_25437D9D8 != -1)
              swift_once();
            v97 = v121;
            v98 = __swift_project_value_buffer(v121, (uint64_t)qword_25437D9C0);
            v99 = v122;
            v100 = v111;
            (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v111, v98, v97);
            v101 = v110;
            v118(v110, v96, v62);
            v102 = sub_2414B2C8C();
            v103 = sub_2414B51B8();
            if (os_log_type_enabled(v102, v103))
            {
              v104 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v104 = 67240192;
              v120 = (char *)(v104 + 4);
              v105 = (void *)sub_2414B3040();
              swift_getKeyPath();
              swift_getKeyPath();
              sub_2414B2E3C();

              swift_release();
              swift_release();
              LODWORD(v105) = v125;
              v117(v101, v62);
              LODWORD(v125) = (_DWORD)v105;
              v99 = v122;
              v97 = v121;
              sub_2414B541C();
              _os_log_impl(&dword_2412C1000, v102, v103, "Pausing backdrop for thermal pressure: %{public}u", v104, 8u);
              v106 = v104;
              v100 = v111;
              MEMORY[0x242695BD8](v106, -1, -1);
            }
            else
            {
              v117(v101, v62);
            }

            (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v97);
            goto LABEL_40;
          }
        }
        else
        {
          sub_2412E1F74();
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_2414B2E3C();
          swift_release();
          swift_release();
          swift_release();
          if ((v125 & 1) == 0)
          {
            if (qword_25437D9D8 != -1)
              swift_once();
            v85 = v121;
            v86 = __swift_project_value_buffer(v121, (uint64_t)qword_25437D9C0);
            v87 = v122;
            v88 = v114;
            (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v114, v86, v85);
            v89 = v113;
            v118(v113, v49, v62);
            v90 = sub_2414B2C8C();
            v91 = sub_2414B51B8();
            if (os_log_type_enabled(v90, v91))
            {
              v92 = (uint8_t *)swift_slowAlloc();
              v93 = swift_slowAlloc();
              v125 = v93;
              *(_DWORD *)v92 = 136446210;
              sub_2412C8890(v115);
              v94 = sub_2414B4D8C();
              v124 = sub_2412E4890(v94, v95, &v125);
              sub_2414B541C();
              swift_bridgeObjectRelease();
              v117(v113, v62);
              _os_log_impl(&dword_2412C1000, v90, v91, "Pausing backdrop for scenePhase: %{public}s", v92, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x242695BD8](v93, -1, -1);
              MEMORY[0x242695BD8](v92, -1, -1);

              (*(void (**)(char *, uint64_t))(v122 + 8))(v114, v85);
            }
            else
            {
              v117(v89, v62);

              (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v85);
            }
            goto LABEL_40;
          }
        }
      }
      else
      {
        sub_2412E1F74();
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_2414B2E3C();
        swift_release();
        swift_release();
        swift_release();
        if ((v125 & 1) == 0)
        {
          if (qword_25437D9D8 != -1)
            swift_once();
          v64 = v121;
          v65 = __swift_project_value_buffer(v121, (uint64_t)qword_25437D9C0);
          v66 = v122;
          v67 = v120;
          (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v120, v65, v64);
          v68 = v119;
          v118(v119, v49, v48);
          v69 = sub_2414B2C8C();
          v70 = sub_2414B51B8();
          if (os_log_type_enabled(v69, v70))
          {
            v71 = (_DWORD *)swift_slowAlloc();
            v125 = swift_slowAlloc();
            *v71 = 136446210;
            v72 = (char *)&loc_2412E0A9C + 4 * word_2414CB150[*(unsigned __int8 *)(sub_2412E1ECC() + 16)];
            __asm { BR              X10 }
          }
          v117(v68, v48);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v64);
          goto LABEL_40;
        }
      }
    }
    else
    {
      sub_2412E1F74();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_2414B2E3C();
      swift_release();
      swift_release();
      swift_release();
      if ((v125 & 1) == 0)
      {
        if (qword_25437D9D8 != -1)
          swift_once();
        v73 = v121;
        v74 = __swift_project_value_buffer(v121, (uint64_t)qword_25437D9C0);
        v75 = v122;
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v32, v74, v73);
        v76 = sub_2414B2C8C();
        v77 = sub_2414B51B8();
        if (os_log_type_enabled(v76, v77))
        {
          v78 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v78 = 0;
          _os_log_impl(&dword_2412C1000, v76, v77, "Pausing backdrop during queue transition", v78, 2u);
          MEMORY[0x242695BD8](v78, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v75 + 8))(v32, v73);
        goto LABEL_40;
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
}

uint64_t sub_2412E1CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    v8 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_QWORD *)(a1 + 24) = v8;
    return sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
  }
  else
  {
    sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
    v10 = sub_2414B51AC();
    v11 = sub_2414B3E08();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16[1] = v7;
      v15 = v14;
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[0] = v13 + 4;
      v16[2] = sub_2412E4890(0xD000000000000014, 0x80000002414CEBC0, &v17);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v15, -1, -1);
      MEMORY[0x242695BD8](v13, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_2412E1ECC()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 56);
  if (!result)
  {
    type metadata accessor for NowPlayingViewModel.Lifecycle();
    sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2412E1F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543803E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412E1F74()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 24);
  if (!result)
  {
    _s8BackdropCMa();
    sub_2412C8030(&qword_25437F680, (uint64_t (*)(uint64_t))_s8BackdropCMa, (uint64_t)&unk_2414CB25C);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2412E1FD4()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  return swift_dynamicCastObjCClassUnconditional();
}

uint64_t sub_2412E2028()
{
  return sub_2414B39F4();
}

id sub_2412E2058()
{
  _QWORD *v0;
  id result;

  result = *(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x80));
  if (result)
    return objc_msgSend(result, sel_view);
  __break(1u);
  return result;
}

id sub_2412E209C(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, a1, a2);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_2412E20EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_2412C7080(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_QWORD *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v14 = *(_QWORD *)(v2 + 88);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = *(_BYTE *)(v2 + 104);
  LOBYTE(v2) = *(_BYTE *)(v2 + 105);
  sub_2412C6F48(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v2);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 105) = v2;
  return a1;
}

uint64_t sub_2412E21D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  int *v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = (_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 64);
  swift_unknownObjectRetain();
  if ((v8 & 1) != 0)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 48) = v9;
    (**(void (***)(uint64_t, _QWORD *))(v9 - 8))(a1 + 24, v7);
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *v7;
    swift_retain();
  }
  *(_BYTE *)(a1 + 64) = v8;
  v10 = a3[11];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v42 = a3;
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  v21 = *(_QWORD *)(v16 + 32);
  v22 = *(_QWORD *)(v16 + 40);
  v23 = *(_QWORD *)(v16 + 48);
  v38 = *(_QWORD *)(v16 + 56);
  v39 = *(_QWORD *)(v16 + 64);
  v40 = *(_BYTE *)(v16 + 72);
  v41 = *(_BYTE *)(v16 + 73);
  sub_2412C6F48(*(_QWORD *)v16, v18, v19, v20, v21, v22, v23, v38, v39, v40, v41);
  *(_QWORD *)v15 = v17;
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v20;
  *(_QWORD *)(v15 + 32) = v21;
  *(_QWORD *)(v15 + 40) = v22;
  *(_QWORD *)(v15 + 48) = v23;
  *(_QWORD *)(v15 + 56) = v38;
  *(_QWORD *)(v15 + 64) = v39;
  *(_BYTE *)(v15 + 72) = v40;
  *(_BYTE *)(v15 + 73) = v41;
  v24 = v42[13];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  LOBYTE(v17) = *(_BYTE *)(v26 + 8);
  sub_2412C7080(*(_QWORD *)v26, v17);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v17;
  v28 = v42[14];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)v30;
  LOBYTE(v17) = *(_BYTE *)(v30 + 8);
  sub_2412C7080(*(_QWORD *)v30, v17);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v17;
  v32 = v42[15];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *(_QWORD *)(v34 + 8);
  LOBYTE(v17) = *(_BYTE *)(v34 + 16);
  sub_2412C72E4(*(_QWORD *)v34, v36, v17);
  *(_QWORD *)v33 = v35;
  *(_QWORD *)(v33 + 8) = v36;
  *(_BYTE *)(v33 + 16) = v17;
  return a1;
}

double CGRect.centeringAlong(axes:bounds:scale:)(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double v17;
  double Width;
  double v27;
  double MinY;
  double Height;
  double rect_8;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v17 = a7;
  if ((a1 & 1) != 0)
  {
    rect_8 = CGRectGetMinX(*(CGRect *)&a2);
    v37.origin.x = a2;
    v37.origin.y = a3;
    v37.size.width = a4;
    v37.size.height = a5;
    Width = CGRectGetWidth(v37);
    v38.origin.x = a7;
    v38.origin.y = a8;
    v38.size.width = a9;
    v38.size.height = a10;
    v27 = round((rect_8 + (Width - CGRectGetWidth(v38)) * 0.5) * a6);
    v17 = v27 / sub_2412E2570(a6);
  }
  if ((a1 & 2) != 0)
  {
    v39.origin.x = a2;
    v39.origin.y = a3;
    v39.size.width = a4;
    v39.size.height = a5;
    MinY = CGRectGetMinY(v39);
    v40.origin.x = a2;
    v40.origin.y = a3;
    v40.size.width = a4;
    v40.size.height = a5;
    Height = CGRectGetHeight(v40);
    v41.origin.x = v17;
    v41.origin.y = a8;
    v41.size.width = a9;
    v41.size.height = a10;
    round((MinY + (Height - CGRectGetHeight(v41)) * 0.5) * a6);
    sub_2412E2570(a6);
  }
  return v17;
}

double sub_2412E2570(double result)
{
  double v1;
  double v2;

  if (result <= 0.0)
    return 1.0;
  v1 = fabs(result);
  v2 = fmax(v1 * 2.22044605e-16, COERCE_DOUBLE(1));
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) != 0 && v1 <= v2)
    return 1.0;
  return result;
}

BOOL static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((*(uint64_t (**)(void))(a4 + 8))() & 1) == 0;
}

uint64_t sub_2412E25E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v22 - v14;
  v17 = v16(v13);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v15, a1, a3);
  v18(v12, a2, a3);
  if ((v17 & 1) != 0)
    v19 = 1;
  else
    v19 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(a5 + 8))(v15, v12, a3, a5);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, a3);
  v20(v15, a3);
  return v19 & 1;
}

BOOL sub_2412E26EC(double *a1, double *a2)
{
  return sub_2412FE7EC(*a1, *a2);
}

BOOL sub_2412E26F8(double *a1, double *a2)
{
  return sub_2412E2718(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_2412E2718(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;

  if (a1 == a3)
    return sub_2412FE7EC(a2, a4);
  v4 = vabdd_f64(a1, a3);
  v5 = fabs(a1);
  v6 = fabs(a3);
  if (v5 <= v6)
    v5 = v6;
  return (~*(_QWORD *)&v4 & 0x7FF0000000000000) != 0
      && v4 <= fmax(v5 * 2.22044605e-16, COERCE_DOUBLE(1))
      && sub_2412FE7EC(a2, a4);
}

BOOL _sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12;
  double v13;
  double v14;

  if (a1 != a5)
  {
    v12 = vabdd_f64(a1, a5);
    v13 = fabs(a1);
    v14 = fabs(a5);
    if (v13 <= v14)
      v13 = v14;
    if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0 || v12 > fmax(v13 * 2.22044605e-16, COERCE_DOUBLE(1)))
      return 0;
  }
  return sub_2412FE7EC(a2, a6) && sub_2412FE7EC(a3, a7) && sub_2412FE7EC(a4, a8);
}

BOOL sub_2412E2830(double *a1, double *a2)
{
  return _sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_2412E2844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  swift_retain();
  swift_retain();
  sub_2412E6F7C(v11, v12);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v12;
  return a1;
}

uint64_t CGSize.hash(into:)()
{
  sub_2414B58F0();
  return sub_2414B58F0();
}

void sub_2412E2938(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = sub_2414B2F44();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _CAPackageView();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v31 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = a1[3];
  v15 = *(_QWORD *)(v14 + 40);
  if (v15)
  {
    v36 = *(_QWORD *)(v14 + 32);
    v16 = qword_25437D9E8;
    swift_bridgeObjectRetain();
    if (v16 != -1)
      swift_once();
    v17 = sub_2414B2CA4();
    __swift_project_value_buffer(v17, (uint64_t)qword_25438E770);
    sub_2412E3C04((uint64_t)a1, (uint64_t)v13);
    sub_2412E3C04((uint64_t)a1, (uint64_t)v11);
    sub_2412E3C04((uint64_t)a1, (uint64_t)v8);
    swift_bridgeObjectRetain();
    v18 = sub_2414B2C8C();
    v19 = sub_2414B51B8();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      v34 = v19;
      v35 = v2;
      v20 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v38 = v32;
      *(_DWORD *)v20 = 136446978;
      swift_bridgeObjectRetain();
      v37 = sub_2412E4890(v36, v15, &v38);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      v21 = *((_QWORD *)v13 + 3);
      v22 = *(_QWORD *)(v21 + 24);
      v33 = v18;
      if (v22)
      {
        v23 = *(_QWORD *)(v21 + 16);
        v24 = v22;
      }
      else
      {
        v23 = 7104878;
        v24 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      v37 = sub_2412E4890(v23, v24, &v38);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v13);
      *(_WORD *)(v20 + 22) = 2082;
      sub_2412C8890((uint64_t)v4);
      v25 = sub_2414B4D8C();
      v37 = sub_2412E4890(v25, v26, &v38);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v11);
      *(_WORD *)(v20 + 32) = 2082;
      if (v8[1])
      {
        v27 = *v8;
        v28 = v8[1];
      }
      else
      {
        v27 = 7104878;
        v28 = 0xE300000000000000;
      }
      v29 = v32;
      v18 = v33;
      swift_bridgeObjectRetain();
      v37 = sub_2412E4890(v27, v28, &v38);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v8);
      _os_log_impl(&dword_2412C1000, v18, (os_log_type_t)v34, "%{public}s: %{public}s CAPackageView scene phase changed to %{public}s, updating state to %{public}s", (uint8_t *)v20, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v29, -1, -1);
      MEMORY[0x242695BD8](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2412E3AE0((uint64_t)v13);
      sub_2412E3AE0((uint64_t)v11);
      sub_2412E3AE0((uint64_t)v8);
    }

  }
  v30 = a1[1];
  if (v30)
    sub_2412E41FC(*a1, v30);
}

void sub_2412E2D28(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for _CAPackageView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - v6;
  v8 = a1[3];
  v9 = *(_QWORD *)(v8 + 40);
  if (v9)
  {
    v10 = *(_QWORD *)(v8 + 32);
    v11 = qword_25437D9E8;
    swift_bridgeObjectRetain();
    if (v11 != -1)
      swift_once();
    v12 = sub_2414B2CA4();
    __swift_project_value_buffer(v12, (uint64_t)qword_25438E770);
    sub_2412E3C04((uint64_t)a1, (uint64_t)v7);
    sub_2412E3C04((uint64_t)a1, (uint64_t)v5);
    swift_bridgeObjectRetain();
    v13 = sub_2414B2C8C();
    v14 = sub_2414B51B8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v24 = v16;
      *(_DWORD *)v15 = 136446722;
      swift_bridgeObjectRetain();
      v23 = sub_2412E4890(v10, v9, &v24);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      v17 = *((_QWORD *)v7 + 3);
      if (*(_QWORD *)(v17 + 24))
      {
        v18 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
      }
      else
      {
        v18 = 7104878;
        v19 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      v23 = sub_2412E4890(v18, v19, &v24);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v7);
      *(_WORD *)(v15 + 22) = 2082;
      if (v5[1])
      {
        v20 = *v5;
        v21 = v5[1];
      }
      else
      {
        v20 = 7104878;
        v21 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      v23 = sub_2412E4890(v20, v21, &v24);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v5);
      _os_log_impl(&dword_2412C1000, v13, v14, "%{public}s: %{public}s CAPackageView appeared, updating state to %{public}s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v16, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2412E3AE0((uint64_t)v7);
      sub_2412E3AE0((uint64_t)v5);
    }

  }
  v22 = a1[1];
  if (v22)
    sub_2412E41FC(*a1, v22);
}

uint64_t sub_2412E3038@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v2 = v1;
  v40 = a1;
  v39 = sub_2414B2F44();
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (uint64_t)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for _CAPackageView();
  v4 = *(_QWORD *)(v35 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380BA8);
  v7 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380CD0);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC18);
  v38 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v43 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CAPackageViewLayer();
  sub_2412E3C04((uint64_t)v2, (uint64_t)v6);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 16) & ~v13;
  v33[0] = v14 + v5;
  v15 = v13 | 7;
  v16 = swift_allocObject();
  sub_2412E3444((uint64_t)v6, v16 + v14);
  sub_2414B31A8();
  sub_2412E3C04((uint64_t)v2, (uint64_t)v6);
  v33[1] = v15;
  v17 = swift_allocObject();
  sub_2412E3444((uint64_t)v6, v17 + v14);
  v18 = v7;
  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v20 = v34;
  v19(v11, v9, v34);
  v21 = (uint64_t (**)())&v11[*(int *)(v42 + 36)];
  *v21 = sub_241303F08;
  v21[1] = (uint64_t (*)())v17;
  v21[2] = 0;
  v21[3] = 0;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v20);
  v22 = v2[1];
  v44 = *v2;
  v45 = v22;
  sub_2412E3C04((uint64_t)v2, (uint64_t)v6);
  v23 = swift_allocObject();
  sub_2412E3444((uint64_t)v6, v23 + v14);
  swift_bridgeObjectRetain();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844E0);
  v25 = sub_2412E3504();
  v26 = sub_2412E34A8();
  sub_2414B4558();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2412CBE78((uint64_t)v11, &qword_254380CD0);
  v27 = v37;
  sub_2412C8890(v37);
  sub_2412E3C04((uint64_t)v2, (uint64_t)v6);
  v28 = swift_allocObject();
  sub_2412E3444((uint64_t)v6, v28 + v14);
  v44 = v42;
  v45 = v24;
  v46 = v25;
  v47 = v26;
  swift_getOpaqueTypeConformance2();
  sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  v29 = v39;
  v30 = v36;
  v31 = v43;
  sub_2414B4564();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v27, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v30);
}

uint64_t sub_2412E3444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CAPackageViewLayer()
{
  return objc_opt_self();
}

unint64_t sub_2412E34A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2543844E8;
  if (!qword_2543844E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844E0);
    v2 = MEMORY[0x24BEE0D28];
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2543844E8);
  }
  return result;
}

unint64_t sub_2412E3504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380CC8;
  if (!qword_254380CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CD0);
    v2[0] = sub_241300D70();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380CC8);
  }
  return result;
}

id sub_2412E3570(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id result;
  unint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  int v50;
  os_log_t v51;
  uint64_t *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_2414B2F8C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for _CAPackageView();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 24);
  result = objc_msgSend(*(id *)(v14 + 56), sel_rootLayer);
  if (!result)
    return result;
  v55 = v7;
  v56 = result;
  v54 = v8;
  v16 = *(_QWORD *)(v14 + 40);
  if (v16)
  {
    v52 = *(uint64_t **)(v14 + 32);
    v17 = *(void **)(v14 + 48);
    swift_bridgeObjectRetain();
    if (v17)
      v18 = objc_msgSend(v17, sel_stateOfLayer_, v56);
    else
      v18 = 0;
    if (qword_25437D9E8 != -1)
      swift_once();
    v19 = sub_2414B2CA4();
    __swift_project_value_buffer(v19, (uint64_t)qword_25438E770);
    sub_2412E3C04(a2, (uint64_t)v13);
    v53 = v18;
    v20 = v18;
    swift_bridgeObjectRetain();
    v21 = v20;
    v22 = sub_2414B2C8C();
    v23 = sub_2414B51B8();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      v50 = v23;
      v51 = v22;
      v24 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v58 = v49;
      *(_DWORD *)v24 = 136446722;
      swift_bridgeObjectRetain();
      v57 = sub_2412E4890((uint64_t)v52, v16, &v58);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      v25 = *((_QWORD *)v13 + 3);
      v26 = *(_QWORD *)(v25 + 24);
      v48 = v21;
      if (v26)
      {
        v27 = *(_QWORD *)(v25 + 16);
        v28 = v26;
      }
      else
      {
        v28 = 0xE300000000000000;
        v27 = 7104878;
      }
      swift_bridgeObjectRetain();
      v57 = sub_2412E4890(v27, v28, &v58);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412E3AE0((uint64_t)v13);
      *(_WORD *)(v24 + 22) = 2082;
      v52 = &v58;
      if (v53)
      {
        v29 = v48;
        v30 = objc_msgSend(v48, sel_name);
        if (v30)
        {
          v31 = v30;
          v32 = sub_2414B4D68();
          v34 = v33;

LABEL_19:
          v57 = sub_2412E4890(v32, v34, &v58);
          sub_2414B541C();

          swift_bridgeObjectRelease();
          v35 = v51;
          _os_log_impl(&dword_2412C1000, v51, (os_log_type_t)v50, "%{public}s: %{public}s CAPackageView _CALayerView update closure called with state %{public}s", (uint8_t *)v24, 0x20u);
          v36 = v49;
          swift_arrayDestroy();
          MEMORY[0x242695BD8](v36, -1, -1);
          MEMORY[0x242695BD8](v24, -1, -1);

          goto LABEL_20;
        }
        v34 = 0xE300000000000000;
      }
      else
      {
        v34 = 0xE300000000000000;
        v29 = v48;
      }
      v32 = 7104878;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease_n();

    sub_2412E3AE0((uint64_t)v13);
  }
LABEL_20:
  sub_2414B3820();
  sub_2412FA2F8((uint64_t)v6);
  sub_2414B3694();
  v37 = *(_BYTE *)(a2 + *(int *)(v11 + 28) + 8);
  v38 = swift_retain();
  sub_2412E4048(v38, v37);
  swift_release();
  sub_2414B4684();
  swift_release();
  v39 = (void *)sub_2414B4690();
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithCGColor_, v39);

  v41 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor] = v40;
  v42 = v40;

  sub_2412E3DDC();
  v43 = OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer;
  v44 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer];
  v45 = v56;
  *(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer] = v56;
  v46 = v45;
  objc_msgSend(v44, sel_removeFromSuperlayer);
  if (*(_QWORD *)&a1[v43])
    objc_msgSend(a1, sel_addSublayer_);
  sub_2412E3DDC();

  return (id)(*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v10, v55);
}

uint64_t sub_2412E3AE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412E3B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v6 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B2F44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_2412E3C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _CAPackageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _CAPackageView()
{
  uint64_t result;

  result = qword_25437E2E8;
  if (!qword_25437E2E8)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2412E3C84(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = v15[8];
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v15;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2414B2F44();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

id sub_2412E3DDC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v1 = (void *)objc_opt_self();
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_foregroundColor);
  if (v2)
  {
    sub_2414B4D68();
    v3 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
    v4 = v2;
    v5 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v3, sel_initWithType_, v5);

    v7 = (void *)sub_2414B50C8();
    objc_msgSend(v6, sel_setValue_forKey_, v7, *MEMORY[0x24BDE5AB8]);

    v8 = (void *)sub_2414B50C8();
    objc_msgSend(v6, sel_setValue_forKey_, v8, *MEMORY[0x24BDE5AA8]);

    v9 = objc_msgSend(v4, sel_CGColor);
    objc_msgSend(v6, sel_setValue_forKey_, v9, *MEMORY[0x24BDE5AD0]);

    v10 = *(void **)(v0
                   + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer);
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_2414B72B0;
      *(_QWORD *)(v11 + 56) = sub_2412CC884(0, &qword_254381570);
      *(_QWORD *)(v11 + 32) = v6;
      v12 = v10;
      v13 = v6;
      v14 = (void *)sub_2414B4EB8();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setFilters_, v14);

    }
    goto LABEL_6;
  }
  v15 = *(void **)(v0
                 + OBJC_IVAR____TtC11MediaCoreUIP33_F4C8615D44A19A30266CA641FD3263FC18CAPackageViewLayer_packageLayer);
  if (v15)
  {
    v6 = v15;
    v4 = (id)sub_2414B4EB8();
    objc_msgSend(v6, sel_setFilters_, v4);
LABEL_6:

  }
  return objc_msgSend(v1, sel_commit);
}

uint64_t sub_2412E4048(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_2414B51AC();
    v9 = sub_2414B3E08();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_2412E4890(0x726F6C6F43, 0xE500000000000000, &v15);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v12, -1, -1);
      MEMORY[0x242695BD8](v11, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

void sub_2412E41FC(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  id v35;
  unsigned int v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;

  v3 = (void *)v2[6];
  if (!v3)
    return;
  v4 = v2;
  v7 = (void *)v2[7];
  v41 = v3;
  v8 = objc_msgSend(v7, sel_rootLayer);
  if (!v8)
    goto LABEL_22;
  v40 = v8;
  v9 = (void *)sub_2414B4D44();
  v10 = objc_msgSend(v40, sel_stateWithName_, v9);

  if (!v10)
  {

    return;
  }
  v11 = objc_msgSend(v41, sel_stateOfLayer_, v40);
  if (v11)
  {
    v12 = v11;
    sub_2412CC884(0, &qword_254381550);
    v13 = v10;
    v14 = v12;
    LOBYTE(v12) = sub_2414B532C();

    if ((v12 & 1) != 0)
    {
      v15 = v4[5];
      if (v15)
      {
        v16 = v4[4];
        v17 = qword_25437D9E8;
        swift_bridgeObjectRetain();
        if (v17 != -1)
          swift_once();
        v18 = sub_2414B2CA4();
        __swift_project_value_buffer(v18, (uint64_t)qword_25438E770);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v19 = sub_2414B2C8C();
        v20 = sub_2414B51B8();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          v38 = swift_slowAlloc();
          v42 = v38;
          *(_DWORD *)v21 = 136446722;
          swift_bridgeObjectRetain();
          sub_2412E4890(v16, v15, &v42);
          sub_2414B541C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2082;
          if (v4[3])
          {
            v22 = v4[2];
            v23 = v4[3];
          }
          else
          {
            v22 = 7104878;
            v23 = 0xE300000000000000;
          }
          swift_bridgeObjectRetain();
          sub_2412E4890(v22, v23, &v42);
          sub_2414B541C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 22) = 2082;
          swift_bridgeObjectRetain();
          sub_2412E4890(a1, a2, &v42);
          sub_2414B541C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2412C1000, v19, v20, "%{public}s: %{public}s ViewState ignoring update to %{public}s: state already set", (uint8_t *)v21, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x242695BD8](v38, -1, -1);
          MEMORY[0x242695BD8](v21, -1, -1);

          return;
        }

        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }

LABEL_22:
      return;
    }
  }
  v24 = v4[5];
  if (v24)
  {
    v25 = v4[4];
    v26 = qword_25437D9E8;
    swift_bridgeObjectRetain();
    if (v26 != -1)
      swift_once();
    v27 = sub_2414B2CA4();
    __swift_project_value_buffer(v27, (uint64_t)qword_25438E770);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v28 = sub_2414B2C8C();
    v29 = sub_2414B51B8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v42 = v39;
      *(_DWORD *)v30 = 136446722;
      swift_bridgeObjectRetain();
      sub_2412E4890(v25, v24, &v42);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      if (v4[3])
      {
        v31 = v4[2];
        v32 = v4[3];
      }
      else
      {
        v31 = 7104878;
        v32 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_2412E4890(v31, v32, &v42);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_2412E4890(a1, a2, &v42);
      sub_2414B541C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2412C1000, v28, v29, "%{public}s: %{public}s ViewState updating stateController to %{public}s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v39, -1, -1);
      MEMORY[0x242695BD8](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
  v33 = (void *)objc_opt_self();
  v34 = v10;
  v35 = v40;
  v36 = objc_msgSend(v33, sel_areAnimationsEnabled);
  LODWORD(v37) = 0;
  if (v36)
    *(float *)&v37 = 1.0;
  objc_msgSend(v41, sel_setState_ofLayer_transitionSpeed_, v34, v35, v37);

}

uint64_t sub_2412E4890(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2412E499C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2412E4960((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2412E4960((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2412E4960(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2412E499C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2414B5428();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2412E4B54(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2414B55CC();
  if (!v8)
  {
    sub_2414B5668();
    __break(1u);
LABEL_17:
    result = sub_2414B56F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2412E4B54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2412E4BE8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2412FFBD8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2412FFBD8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2412E4BE8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2412E4D5C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2414B5584();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2414B5668();
      __break(1u);
LABEL_10:
      v2 = sub_2414B4E04();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2414B56F8();
    __break(1u);
LABEL_14:
    result = sub_2414B5668();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2412E4D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254385040);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t CGRect.hash(into:)()
{
  sub_2414B58F0();
  sub_2414B58F0();
  sub_2414B58F0();
  return sub_2414B58F0();
}

uint64_t sub_2412E4E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD v23[2];

  v23[0] = a3;
  v23[1] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810D0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381020);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381420);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && *(_QWORD *)(a2 + 16))
  {
    v18 = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = v23[0];
    swift_retain();
    *(_QWORD *)v17 = sub_2414B385C();
    *((_QWORD *)v17 + 1) = 0;
    v17[16] = 0;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129448);
    sub_2414589DC(a1, a2, v19, v18, &v17[*(int *)(v20 + 44)]);
    sub_2412DC3FC((uint64_t)v17, (uint64_t)v14, &qword_254381420);
    swift_storeEnumTagMultiPayload();
    sub_2412C8FC4(&qword_254381418, &qword_254381420, MEMORY[0x24BDF4498]);
    sub_2412C8FC4(&qword_2543810C8, &qword_2543810D0, MEMORY[0x24BDEFB78]);
    sub_2414B3A84();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_2412CBE78((uint64_t)v17, &qword_254381420);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v22(v11, a1, v8);
    v22(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_2412C8FC4(&qword_254381418, &qword_254381420, MEMORY[0x24BDF4498]);
    sub_2412C8FC4(&qword_2543810C8, &qword_2543810D0, MEMORY[0x24BDEFB78]);
    sub_2414B3A84();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2412E50DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[3];
  _QWORD v55[3];

  v41[1] = a1;
  v51 = a5;
  v5 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, a2, a3, a4);
  MEMORY[0x242695AE8](&unk_2414BB0D0, v5);
  v6 = sub_2414B3B08();
  v7 = sub_2414B3514();
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381350);
  v9 = sub_2414B3514();
  v12 = type metadata accessor for MCUINamespace(0, v9, v10, v11);
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v46 = (uint64_t)v41 - v13;
  v41[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v41 - v15;
  v42 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v41 - v18;
  v44 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)v41 - v21;
  v22 = sub_2414B3514();
  v48 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v45 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v47 = (uint64_t)v41 - v25;
  sub_2414B4A50();
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v6);
  sub_2414B44B0();
  sub_2414B3E80();
  if (qword_25437E690 != -1)
    swift_once();
  v55[0] = v26;
  v55[1] = MEMORY[0x24BDEDBB8];
  v27 = MEMORY[0x24BDED308];
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v55);
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v41[0] + 8))(v16, v7);
  swift_getKeyPath();
  v54[2] = 1;
  v54[0] = v28;
  v54[1] = MEMORY[0x24BDECC60];
  v29 = MEMORY[0x242695AE8](v27, v8, v54);
  v30 = v43;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v8);
  v31 = sub_2412C8FC4(&qword_254381348, &qword_254381350, MEMORY[0x24BDF1028]);
  v53[0] = v29;
  v53[1] = v31;
  v32 = MEMORY[0x242695AE8](v27, v9, v53);
  v33 = v46;
  View.mcui.getter(v9, v46);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v9);
  v34 = v33;
  if (qword_25437E6A8 != -1)
    swift_once();
  v35 = (uint64_t)v45;
  v36 = v50;
  MCUINamespace<A>.marqueeFeathering(_:_:)(1, qword_25437E698, 0, v50, v32);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v34, v36);
  v37 = sub_241301CC8();
  v52[0] = v32;
  v52[1] = v37;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v22, v52);
  v38 = v47;
  sub_2412FBF34(v35, v22, v47);
  v39 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v39(v35, v22);
  sub_2412EEA1C(v38, v22, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v38, v22);
}

uint64_t destroy for MarqueeFeatheringModifier(uint64_t a1)
{
  return sub_2412E6BF8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_2412E55A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[11];
  uint64_t v57;
  _OWORD v58[12];
  char v59;
  __int128 v60;
  _OWORD v61[12];

  v55 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543812E0);
  MEMORY[0x24BDAC7A8](v50);
  v3 = (uint64_t *)((char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_2414B3484();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380DA0);
  MEMORY[0x24BDAC7A8](v49);
  v7 = (_OWORD *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E48);
  MEMORY[0x24BDAC7A8](v52);
  v48 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)v1;
  v10 = *(_BYTE *)(v1 + 8);
  sub_2412E6F7C(*(_QWORD *)v1, v10);
  v11 = sub_2412E7474(v9, v10);
  sub_2412E6BF8(v9, v10);
  if (!*(_QWORD *)(v11 + 16) || (sub_2412E7920(0), (v12 & 1) == 0))
  {
    if (qword_25437E358 != -1)
      swift_once();
  }
  swift_bridgeObjectRelease();
  sub_2412E6F7C(v9, v10);
  v13 = sub_2412E7474(v9, v10);
  sub_2412E6BF8(v9, v10);
  if (!*(_QWORD *)(v13 + 16) || (sub_2412E7920(1), (v14 & 1) == 0))
  {
    if (qword_25437E358 != -1)
      swift_once();
  }
  swift_bridgeObjectRelease();
  v15 = sub_2414B3880();
  sub_2412D42E8((uint64_t)v56);
  *(_OWORD *)((char *)&v58[8] + 7) = v56[8];
  *(_OWORD *)((char *)&v58[9] + 7) = v56[9];
  *(_OWORD *)((char *)&v58[10] + 7) = v56[10];
  *(_QWORD *)((char *)&v58[11] + 7) = v57;
  *(_OWORD *)((char *)&v58[4] + 7) = v56[4];
  *(_OWORD *)((char *)&v58[5] + 7) = v56[5];
  *(_OWORD *)((char *)&v58[6] + 7) = v56[6];
  *(_OWORD *)((char *)&v58[7] + 7) = v56[7];
  *(_OWORD *)((char *)v58 + 7) = v56[0];
  *(_OWORD *)((char *)&v58[1] + 7) = v56[1];
  *(_OWORD *)((char *)&v58[2] + 7) = v56[2];
  *(_OWORD *)((char *)&v58[3] + 7) = v56[3];
  *(_OWORD *)((char *)&v61[8] + 1) = v58[8];
  *(_OWORD *)((char *)&v61[9] + 1) = v58[9];
  *(_OWORD *)((char *)&v61[10] + 1) = v58[10];
  v61[11] = *(_OWORD *)((char *)&v58[10] + 15);
  *(_OWORD *)((char *)&v61[4] + 1) = v58[4];
  *(_OWORD *)((char *)&v61[5] + 1) = v58[5];
  *(_OWORD *)((char *)&v61[6] + 1) = v58[6];
  *(_OWORD *)((char *)&v61[7] + 1) = v58[7];
  *(_OWORD *)((char *)v61 + 1) = v58[0];
  *(_OWORD *)((char *)&v61[1] + 1) = v58[1];
  *(_OWORD *)((char *)&v61[2] + 1) = v58[2];
  v59 = 0;
  v60 = (unint64_t)v15;
  LOBYTE(v61[0]) = 0;
  *(_OWORD *)((char *)&v61[3] + 1) = v58[3];
  KeyPath = swift_getKeyPath();
  v18 = v53;
  v17 = v54;
  v19 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v51, *MEMORY[0x24BDED100], v54);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))((char *)v3 + *(int *)(v50 + 28), v19, v17);
  *v3 = KeyPath;
  sub_2412DC3FC((uint64_t)v3, (uint64_t)v7 + *(int *)(v49 + 36), (uint64_t *)&unk_2543812E0);
  v20 = v61[10];
  v7[10] = v61[9];
  v7[11] = v20;
  v7[12] = v61[11];
  v21 = v61[6];
  v7[6] = v61[5];
  v7[7] = v21;
  v22 = v61[8];
  v7[8] = v61[7];
  v7[9] = v22;
  v23 = v61[2];
  v7[2] = v61[1];
  v7[3] = v23;
  v24 = v61[4];
  v7[4] = v61[3];
  v7[5] = v24;
  v25 = v61[0];
  *v7 = v60;
  v7[1] = v25;
  sub_24145F198((uint64_t)&v60);
  sub_2412CBE78((uint64_t)v3, (uint64_t *)&unk_2543812E0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
  sub_24145F1DC((uint64_t)v56);
  LOBYTE(KeyPath) = sub_2414B3E68();
  sub_2414B2F20();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = v48;
  sub_2412DC3FC((uint64_t)v7, v48, &qword_254380DA0);
  v35 = v34 + *(int *)(v52 + 36);
  *(_BYTE *)v35 = KeyPath;
  *(_QWORD *)(v35 + 8) = v27;
  *(_QWORD *)(v35 + 16) = v29;
  *(_QWORD *)(v35 + 24) = v31;
  *(_QWORD *)(v35 + 32) = v33;
  *(_BYTE *)(v35 + 40) = 0;
  sub_2412CBE78((uint64_t)v7, &qword_254380DA0);
  LOBYTE(KeyPath) = sub_2414B3E80();
  sub_2414B2F20();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v44 = v55;
  sub_2412DC3FC(v34, v55, &qword_254380E48);
  v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380E90) + 36);
  *(_BYTE *)v45 = KeyPath;
  *(_QWORD *)(v45 + 8) = v37;
  *(_QWORD *)(v45 + 16) = v39;
  *(_QWORD *)(v45 + 24) = v41;
  *(_QWORD *)(v45 + 32) = v43;
  *(_BYTE *)(v45 + 40) = 0;
  return sub_2412CBE78(v34, &qword_254380E48);
}

uint64_t sub_2412E5ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];

  v29 = a1;
  v31 = a2;
  v2 = type metadata accessor for MaskView(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - v6;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C10);
  v8 = MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381018);
  MEMORY[0x24BDAC7A8](v28);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BackdropMaskModifier(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C20);
  MEMORY[0x24BDAC7A8](v27);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412E6078((uint64_t)v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437E480);
  if (swift_dynamicCast())
  {
    *(_QWORD *)v17 = sub_24145754C;
    *((_QWORD *)v17 + 1) = 0;
    v17[16] = 0;
    *((_QWORD *)v17 + 3) = swift_getKeyPath();
    v17[32] = 0;
    v20 = (uint64_t *)&v17[*(int *)(v15 + 24)];
    *v20 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    swift_storeEnumTagMultiPayload();
    sub_2412DC3B8((uint64_t)v17, (uint64_t)&v19[*(int *)(v27 + 36)], type metadata accessor for BackdropMaskModifier);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381080);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v29, v21);
    v22 = &qword_254380C20;
    sub_2412DC3FC((uint64_t)v19, (uint64_t)v14, &qword_254380C20);
    swift_storeEnumTagMultiPayload();
    sub_2412E5F40();
    sub_2412E5FDC();
    sub_2414B3A84();
    v23 = (uint64_t)v19;
  }
  else
  {
    *(_QWORD *)v5 = swift_getKeyPath();
    v5[8] = 0;
    v24 = (uint64_t *)&v5[*(int *)(v2 + 20)];
    *v24 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    swift_storeEnumTagMultiPayload();
    sub_2412DC3B8((uint64_t)v5, (uint64_t)v7, type metadata accessor for MaskView);
    sub_24145E900((uint64_t)v7, (uint64_t)&v10[*(int *)(v30 + 36)]);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381080);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v10, v29, v25);
    sub_24145E944((uint64_t)v7);
    v22 = &qword_254380C10;
    sub_2412EAEA4((uint64_t)v10, (uint64_t)v12, &qword_254380C10);
    sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_254380C10);
    swift_storeEnumTagMultiPayload();
    sub_2412E5F40();
    sub_2412E5FDC();
    sub_2414B3A84();
    v23 = (uint64_t)v12;
  }
  sub_2412CBE78(v23, v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
}

uint64_t type metadata accessor for BackdropMaskModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437FC70);
}

uint64_t type metadata accessor for MaskView(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_2543807D8);
}

unint64_t sub_2412E5ED4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254381038;
  if (!qword_254381038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381040);
    v2[0] = sub_2412E5F40();
    v2[1] = sub_2412E5FDC();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254381038);
  }
  return result;
}

unint64_t sub_2412E5F40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C18;
  if (!qword_254380C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C20);
    v2[0] = sub_2412C8FC4(&qword_254381078, &qword_254381080, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8030(qword_25437FC38, type metadata accessor for BackdropMaskModifier, (uint64_t)&unk_2414C9240);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C18);
  }
  return result;
}

unint64_t sub_2412E5FDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C08;
  if (!qword_254380C08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C10);
    v2[0] = sub_2412C8FC4(&qword_254381078, &qword_254381080, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254380B90, &qword_254380B98, MEMORY[0x24BDEB9D0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C08);
  }
  return result;
}

uint64_t sub_2412E6078@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA5E4(&qword_254380B20, (uint64_t (*)(_QWORD *, uint64_t))sub_2412FAA04, 0xD000000000000010, 0x80000002414CEF10, a1);
}

uint64_t sub_2412E60A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  return sub_2412E6BF8(*(_QWORD *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t destroy for EmbeddedBadgeModifier(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t destroy for MarqueeMaskModifier(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  else
    return swift_release();
}

void type metadata accessor for Marquee.MarqueeAnimationView()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t type metadata accessor for Marquee(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Marquee);
}

uint64_t sub_2412E6170(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1);
  else
    swift_release();
  return a1;
}

unint64_t sub_2412E61AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380CE8;
  if (!qword_254380CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CF0);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380CE8);
  }
  return result;
}

uint64_t Marquee.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v45 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  type metadata accessor for Marquee.RegularContent(255, v6, v7, a2);
  sub_2414B3514();
  v40 = v6;
  v44 = v7;
  type metadata accessor for Marquee.MarqueeingContent(255, v6, v7, v8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381340);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381370);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381320);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  v41 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v42 = v9;
  v10 = sub_2414B319C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v43 = (uint64_t)&v36 - v16;
  v17 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254382AD8 != -1)
    swift_once();
  v20 = sub_2414B2CA4();
  __swift_project_value_buffer(v20, (uint64_t)qword_254382AB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v4, a1);
  v21 = sub_2414B2C8C();
  v22 = sub_2414B5188();
  if (os_log_type_enabled(v21, v22))
  {
    v38 = v11;
    v39 = v4;
    v23 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v47 = v37;
    *(_DWORD *)v23 = 136446210;
    v24 = sub_241454290(a1);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a1);
    if (*(_QWORD *)(v24 + 16))
    {
      v46 = v24;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
      sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
      v25 = sub_2414B4CB4();
      v27 = v26;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v27 = 0xE400000000000000;
      v25 = 1701736270;
    }
    v28 = v40;
    v46 = sub_2412E4890(v25, v27, &v47);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v21, v22, "[Context: %{public}s] Marquee body evaluated", v23, 0xCu);
    v30 = v37;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v30, -1, -1);
    MEMORY[0x242695BD8](v23, -1, -1);

    v29 = v45;
    v11 = v38;
    v4 = v39;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a1);

    v28 = v40;
    v29 = v45;
  }
  v31 = sub_2414B3E14();
  MEMORY[0x24BDAC7A8](v31);
  v32 = v44;
  *(&v36 - 4) = v28;
  *(&v36 - 3) = v32;
  *(&v36 - 2) = v4;
  sub_2414B3190();
  MEMORY[0x242695AE8](MEMORY[0x24BDEBE40], v10);
  v33 = v43;
  sub_2412FBF34((uint64_t)v14, v10, v43);
  v34 = *(void (**)(char *, uint64_t))(v11 + 8);
  v34(v14, v10);
  sub_2412EEA1C(v33, v10, v29);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v10);
}

uint64_t sub_2412E66E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  int v11;
  BOOL v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_2414B58CC();
  sub_2414B3394();
  sub_2414B58E4();
  v3 = sub_2414B58FC();
  v4 = -1 << *(_BYTE *)(a2 + 32);
  v5 = v3 & ~v4;
  v6 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
    return 0;
  v7 = sub_2414B3394();
  if (v7 == sub_2414B3394())
    return 1;
  v9 = ~v4;
  v10 = (v5 + 1) & v9;
  if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return 0;
  do
  {
    v11 = sub_2414B3394();
    v12 = v11 == sub_2414B3394();
    result = v12;
    if (v12)
      break;
    v10 = (v10 + 1) & v9;
  }
  while (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_2412E6804(uint64_t a1, char a2)
{
  return sub_241346384(a1, a2, 0xD000000000000013, 0x80000002414CED40);
}

unint64_t sub_2412E6820()
{
  unint64_t result;

  result = qword_25437FE48;
  if (!qword_25437FE48)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9408, &type metadata for EmbeddedBadgeModifier);
    atomic_store(result, (unint64_t *)&qword_25437FE48);
  }
  return result;
}

uint64_t sub_2412E6864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  sub_2412E6F8C(*(_QWORD *)v10, v12, v13, v14);
  v15 = *(_QWORD *)v9;
  v16 = *(_QWORD *)(v9 + 8);
  v17 = *(_QWORD *)(v9 + 16);
  v18 = *(_BYTE *)(v9 + 24);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 24) = v14;
  sub_2412E6C0C(v15, v16, v17, v18);
  v19 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  LOBYTE(v12) = *(_BYTE *)(v20 + 8);
  j__swift_retain();
  v22 = *(_QWORD *)v19;
  v23 = *(unsigned __int8 *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v12;
  sub_2412E6C04(v22, v23);
  v24 = (v7 + 55) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v8 + 55) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v12) = *(_BYTE *)(v25 + 8);
  sub_2412E6F7C(*(_QWORD *)v25, v12);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v12;
  sub_2412E6BF8(v27, v28);
  v29 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  LOBYTE(v12) = *(_BYTE *)(v30 + 8);
  sub_2412E6F7C(*(_QWORD *)v30, v12);
  v32 = *(_QWORD *)v29;
  v33 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v12;
  sub_2412E6BF8(v32, v33);
  v34 = (v7 + 87) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v8 + 87) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  LOBYTE(v12) = *(_BYTE *)(v35 + 8);
  sub_2412C7080(*(_QWORD *)v35, v12);
  v37 = *(_QWORD *)v34;
  v38 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v12;
  sub_2412C821C(v37, v38);
  v39 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v40;
  LOBYTE(v12) = *(_BYTE *)(v40 + 8);
  sub_2412E6F7C(*(_QWORD *)v40, v12);
  v42 = *(_QWORD *)v39;
  v43 = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v39 = v41;
  *(_BYTE *)(v39 + 8) = v12;
  sub_2412E6BF8(v42, v43);
  v44 = (v7 + 119) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v8 + 119) & 0xFFFFFFFFFFFFFFF8;
  v46 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  *(_QWORD *)v44 = v46;
  v47 = (_QWORD *)((v7 + 135) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)((v8 + 135) & 0xFFFFFFFFFFFFFFF8);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_retain();
  swift_release();
  v49 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8);
  v50 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFF8);
  *v49 = *v50;
  v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  *v51 = *v52;
  v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  v55 = *(_QWORD *)(v54 + 12);
  *(_QWORD *)(v53 + 17) = *(_QWORD *)(v54 + 17);
  *(_QWORD *)(v53 + 12) = v55;
  return a1;
}

uint64_t sub_2412E6AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412E6BF8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3484();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2412E6B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  sub_2412E6C0C(*(_QWORD *)((v4 + 7) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  sub_2412E6C04(*(_QWORD *)((v4 + 39) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v4 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412E6BF8(*(_QWORD *)((v4 + 55) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 55) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412E6BF8(*(_QWORD *)((v4 + 71) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 71) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412C821C(*(_QWORD *)((v4 + 87) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 87) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412E6BF8(*(_QWORD *)((v4 + 103) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 103) & 0xFFFFFFFFFFFFFFF8) + 8));
  return swift_release();
}

uint64_t sub_2412E6BF8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_2412E6C0C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_2412E6C18(result);
  else
    return swift_release();
}

uint64_t sub_2412E6C18(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for MarqueeFeatheringModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412E6F7C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_2412E6CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412E6F7C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B3484();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2412E6D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  sub_2412E6F8C(*(_QWORD *)v10, v12, v13, v14);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 24) = v14;
  v15 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  LOBYTE(v12) = *(_BYTE *)(v16 + 8);
  j__swift_retain();
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v12;
  v18 = (v7 + 55) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v8 + 55) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  LOBYTE(v12) = *(_BYTE *)(v19 + 8);
  sub_2412E6F7C(*(_QWORD *)v19, v12);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v12;
  v21 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v12) = *(_BYTE *)(v22 + 8);
  sub_2412E6F7C(*(_QWORD *)v22, v12);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v12;
  v24 = (v7 + 87) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v8 + 87) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v12) = *(_BYTE *)(v25 + 8);
  sub_2412C7080(*(_QWORD *)v25, v12);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v12;
  v27 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  LOBYTE(v12) = *(_BYTE *)(v28 + 8);
  sub_2412E6F7C(*(_QWORD *)v28, v12);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v12;
  v30 = (v7 + 119) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v8 + 119) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = v32;
  v33 = (_QWORD *)((v7 + 135) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)((v8 + 135) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v33[1] = v34[1];
  v35 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFF8);
  v36 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  v41 = *(_QWORD *)(v40 + 17);
  *(_QWORD *)(v39 + 12) = *(_QWORD *)(v40 + 12);
  *(_QWORD *)(v39 + 17) = v41;
  swift_retain();
  return a1;
}

uint64_t sub_2412E6F7C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_2412E6F8C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_2412E6F98(result);
  else
    return swift_retain();
}

uint64_t sub_2412E6F98(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2412E6FD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    sub_2412E6F98(a1);
  }
  else
  {
    swift_retain();
    v12 = sub_2414B51AC();
    v13 = sub_2414B3E08();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v15 = 136315138;
      v18 = v15 + 4;
      v20 = sub_2412E4890(0xD000000000000042, 0x80000002414CED60, &v21);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v16, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412E6C0C(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v21;
  }
  return a1;
}

double sub_2412E71C8()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47BC();
  return v1;
}

uint64_t sub_2412E7220(uint64_t a1, char a2)
{
  return sub_2412E724C(a1, a2, 0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, (void (*)(_QWORD, _QWORD))sub_2412E6C04);
}

uint64_t sub_2412E724C(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  unint64_t v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;

  v10 = sub_2414B382C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v14 = sub_2414B51AC();
    v15 = sub_2414B3E08();
    if (os_log_type_enabled(v15, v14))
    {
      v23 = a4;
      v16 = swift_slowAlloc();
      v24 = a5;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v19 = a3;
      v20 = v18;
      v26 = v18;
      *(_DWORD *)v17 = 136315138;
      v25 = sub_2412E4890(v19, v23, &v26);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v20, -1, -1);
      v21 = v17;
      a5 = v24;
      MEMORY[0x242695BD8](v21, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

uint64_t sub_2412E7418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 56);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_2412E6F7C(*(_QWORD *)v2, v4);
  v5 = sub_2412E7474(v3, v4);
  sub_2412E6BF8(v3, v4);
  return v5;
}

uint64_t sub_2412E7474(uint64_t a1, char a2)
{
  return sub_241346384(a1, a2, 0xD000000000000023, 0x80000002414CECB0);
}

unint64_t sub_2412E7490()
{
  unint64_t result;

  result = qword_2543803E8;
  if (!qword_2543803E8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C93C0, &type metadata for MarqueeAnimationDurationKey);
    atomic_store(result, (unint64_t *)&qword_2543803E8);
  }
  return result;
}

uint64_t initializeWithCopy for MarqueeMaskModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  v3 = *(_BYTE *)(a2 + 40);
  if ((v3 & 1) != 0)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
  }
  *(_BYTE *)(a1 + 40) = v3;
  return a1;
}

unint64_t sub_2412E752C()
{
  unint64_t result;

  result = qword_25437E858;
  if (!qword_25437E858)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9370, &type metadata for MarqueeMaskModifier);
    atomic_store(result, (unint64_t *)&qword_25437E858);
  }
  return result;
}

void sub_2412E7570()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _DWORD *v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_254382AD8 != -1)
    swift_once();
  v2 = sub_2414B2CA4();
  __swift_project_value_buffer(v2, (uint64_t)qword_254382AB8);
  v3 = v0;
  v4 = sub_2414B2C8C();
  v5 = sub_2414B5188();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v6 = 136446466;
    sub_24145D118();
  }

  v7.receiver = v3;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  sub_241457004();
}

unint64_t sub_2412E7920(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_2414B58CC();
  sub_2414B3394();
  sub_2414B58E4();
  v2 = sub_2414B58FC();
  return sub_2412E797C(v1, v2);
}

unint64_t sub_2412E797C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  int v6;
  uint64_t v7;
  int v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = sub_2414B3394();
    if (v6 != sub_2414B3394())
    {
      v7 = ~v4;
      for (i = (i + 1) & v7; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v7)
      {
        v8 = sub_2414B3394();
        if (v8 == sub_2414B3394())
          break;
      }
    }
  }
  return i;
}

void sub_2412E7A64()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2414B3484();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  swift_beginAccess();
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

uint64_t sub_2412E7B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  void (*v8)(uint64_t, uint64_t);

  v6 = *(unsigned __int8 *)(v3 + *(int *)(a1 + 80));
  if (v6 == 1)
  {
    v7 = 1;
  }
  else if (v6 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v3 + *(int *)(a1 + 76), v1);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BDED118], v1);
    v7 = sub_2414B3478();
    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8(v4, v1);
    v8(v2, v1);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

void sub_2412E7BC0()
{
  _QWORD *v0;
  double *v1;
  double v2;
  double v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;

  v1 = (double *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x78));
  swift_beginAccess();
  if (*((_BYTE *)v1 + 24) == 1)
  {
    sub_2414573A8();
    v3 = (v2 + *v1) / v1[1];
    v4 = (void *)sub_2414B4D44();
    v5 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v4);

    if ((*((_BYTE *)v1 + 52) & 1) == 0)
    {
      LODWORD(v7) = *((_DWORD *)v1 + 11);
      LODWORD(v8) = *((_DWORD *)v1 + 12);
      LODWORD(v6) = *((_DWORD *)v1 + 10);
      objc_msgSend(v5, sel_setPreferredFrameRateRange_, v6, v7, v8);
    }
    objc_msgSend(v5, sel_setDuration_, v3);
    v9 = (void *)sub_2414B50C8();
    objc_msgSend(v5, sel_setFromValue_, v9);

    sub_2412E7A64();
  }
  v10 = sub_2412E2058();
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_layer);

    v13 = (void *)sub_2414B4D44();
    objc_msgSend(v12, sel_removeAnimationForKey_, v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t MarkupParser.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;

  v8 = *(int *)(type metadata accessor for MarkupParser(0, a2, a3, a4) + 36);
  if (qword_254382CB8 != -1)
    swift_once();
  *(_QWORD *)(a5 + v8) = qword_254382EA8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2412E7FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v8 + 88);
  v11 = type metadata accessor for MarkupParser(0, v4, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v18[-v13];
  sub_2414B2920();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), v4);
  MarkupParser.init(_:)((uint64_t)v7, v4, v9, v15, (uint64_t)v14);
  v19 = v4;
  v20 = v9;
  v21 = a2;
  MarkupParser.parse(_:)((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2412EA018, (uint64_t)v18, v11, v16);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for MarkupParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupParser);
}

uint64_t sub_2412E812C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t MarkupParser.parse(_:)(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for MarkupParser.Parser(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v7 = *(_QWORD *)(v4 + *(int *)(a3 + 36));
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_2412E81F0(v4, v7, v8, v9);
  sub_2412E8358(a1);
  return swift_release();
}

uint64_t sub_2412E81F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for MarkupParser.Element(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  *(_QWORD *)(v4 + 64) = sub_2414B4BF4();
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_BYTE *)(v4 + 120) = 5;
  *(_OWORD *)(v4 + 136) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  *(_QWORD *)(v4 + 168) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + 48) = a2;
  sub_2414B5128();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254382EB8);
  sub_2412E8300();
  sub_2414B514C();
  *(_OWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 40) = v9;
  sub_2414B50F8();
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 128) = v7;
  return v4;
}

uint64_t type metadata accessor for MarkupParser.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupParser.Element);
}

unint64_t sub_2412E8300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254382EB0;
  if (!qword_254382EB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382EB8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE2C68], v1);
    atomic_store(result, (unint64_t *)&qword_254382EB0);
  }
  return result;
}

uint64_t type metadata accessor for MarkupParser.Parser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupParser.Parser);
}

uint64_t sub_2412E8358(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;

  v14 = v1 + 8;
  swift_beginAccess();
  swift_beginAccess();
  v2 = v1[3] >> 14;
  if (v2 > v1[7] >> 14)
    __asm { BR              X9 }
  if (v2 < v1[16] >> 14)
  {
    __break(1u);
    JUMPOUT(0x2412E9FF4);
  }
  swift_bridgeObjectRetain();
  sub_2414B5404();
  swift_bridgeObjectRelease();
  v3 = sub_2414B53E0();
  result = swift_bridgeObjectRelease();
  if (v3 >= 1)
  {
    if (v2 < v1[16] >> 14)
    {
      __break(1u);
      JUMPOUT(0x2412E9FFCLL);
    }
    swift_bridgeObjectRetain();
    v5 = sub_2414B5404();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = *v14;
    swift_bridgeObjectRetain();
    a1(v5, v7, v9, v11, v12);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2412EA018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_2412EA024(a1, a2, a3, a4, a5, v5[4], v5[2], v5[3]);
}

uint64_t sub_2412EA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v69 = a8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126AD0);
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2414B295C();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_2414B2938();
  v63 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_2414B2950();
  sub_2414B2944();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v19 = sub_2412EA7E8();
  v64 = v18;
  sub_2414B2908();
  v20 = a5;
  swift_release();
  if ((_BYTE)v73)
    v22 = 0;
  else
    v22 = v72;
  v23 = type metadata accessor for MarkupParser.Element(0, a7, v69, v21);
  v24 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2426947D4](v24, v23))
  {
    swift_bridgeObjectRelease();
    v55 = v63;
LABEL_39:
    v56 = swift_getKeyPath();
    *(&v58 - 2) = (char *)MEMORY[0x24BDAC7A8](v56);
    swift_getKeyPath();
    v72 = v22;
    LOBYTE(v73) = 0;
    v57 = v64;
    sub_2414B2914();
    sub_2412EA7A0();
    sub_2414B292C();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v57, v16);
  }
  v60 = v19;
  v61 = v16;
  v62 = a6;
  v25 = 0;
  v26 = (uint64_t *)(v20 + 64);
  v66 = v20;
  v67 = v23;
  while (1)
  {
    v27 = sub_2414B4F18();
    result = sub_2414B4EE8();
    if ((v27 & 1) == 0)
      break;
    if (__OFADD__(v25, 1))
      goto LABEL_41;
    v68 = v25 + 1;
    v69 = v22;
    v30 = *(v26 - 4);
    v29 = *(v26 - 3);
    v31 = *(v26 - 2);
    v32 = *(v26 - 1);
    v33 = *v26;
    v72 = v30;
    v73 = v29;
    v65 = v31;
    v74 = v31;
    v75 = v32;
    v76 = v33;
    sub_2413D8BF8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = sub_2414B53BC();
    v36 = v35;
    swift_bridgeObjectRelease();
    v72 = v34;
    v73 = v36;
    v38 = sub_2414B4E58();
    v39 = v37;
    if (v38 == 0x676E6F727473 && v37 == 0xE600000000000000
      || (sub_2414B57D0() & 1) != 0
      || v38 == 98 && v39 == 0xE100000000000000
      || (sub_2414B57D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v41 = v66;
      v40 = v67;
      v42 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v69 | 2;
    }
    else if (v38 == 28005 && v39 == 0xE200000000000000
           || (sub_2414B57D0() & 1) != 0
           || v38 == 105 && v39 == 0xE100000000000000
           || (sub_2414B57D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v41 = v66;
      v40 = v67;
      v42 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v69 | 1;
    }
    else if (v38 == 117 && v39 == 0xE100000000000000 || (sub_2414B57D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v41 = v66;
      v42 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = swift_getKeyPath();
      *(&v58 - 2) = (char *)MEMORY[0x24BDAC7A8](v43);
      swift_getKeyPath();
      v44 = v59;
      sub_2414B40B4();
      v45 = sub_2414B40D8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
      sub_2413C97F8();
      sub_2414B2914();
      v22 = v69;
      v40 = v67;
    }
    else
    {
      if (v38 == 97 && v39 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        v72 = v30;
        v73 = v29;
        v74 = v65;
        v75 = v32;
        v76 = v33;
        v71[0] = 1717924456;
        v71[1] = 0xE400000000000000;
        sub_2412F6D88();
        v40 = v67;
        v47 = MarkupParser.Element.subscript.getter((uint64_t)v71);
        v49 = v48;
        v51 = v50;
        v53 = v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53)
        {
          v54 = swift_getKeyPath();
          *(&v58 - 2) = (char *)MEMORY[0x24BDAC7A8](v54);
          swift_getKeyPath();
          MEMORY[0x24269463C](v47, v49, v51, v53);
          swift_bridgeObjectRelease();
          sub_2414B2A7C();
          swift_bridgeObjectRelease();
          sub_2413C9730();
          v40 = v67;
          sub_2414B2914();
        }
        v41 = v66;
        v42 = v68;
        v22 = v69;
        goto LABEL_15;
      }
      v46 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0)
        goto LABEL_34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v66;
      v40 = v67;
      v42 = v68;
      v22 = v69;
    }
LABEL_15:
    ++v25;
    v26 += 5;
    if (v42 == MEMORY[0x2426947D4](v41, v40))
    {
      swift_bridgeObjectRelease();
      v16 = v61;
      v55 = v63;
      goto LABEL_39;
    }
  }
  result = sub_2414B55A8();
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_2412EA7A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257126AE0;
  if (!qword_257126AE0)
  {
    v1 = sub_2414B2938();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDCC588], v1);
    atomic_store(result, (unint64_t *)&qword_257126AE0);
  }
  return result;
}

unint64_t sub_2412EA7E8()
{
  unint64_t result;

  result = qword_257126AD8;
  if (!qword_257126AD8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDCC078], MEMORY[0x24BDCC088]);
    atomic_store(result, (unint64_t *)&qword_257126AD8);
  }
  return result;
}

uint64_t sub_2412EA82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2412EA864(a1, a2);
}

uint64_t sub_2412EA864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  int *v25;
  char v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  _BYTE v73[16];
  __int128 v74;
  __int128 v75;

  v3 = v2;
  v63 = a2;
  v62 = sub_2414B3A9C();
  v64 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_2414B361C();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for TransportButtonStyle();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t)&v49 - v11;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381400);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813A0);
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v50 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D18);
  MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAE8);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v3;
  v74 = v3[1];
  v75 = v19;
  sub_2412EAEA4((uint64_t)(v3 + 2), (uint64_t)v73, &qword_2543844E0);
  v20 = swift_allocObject();
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v20 + 24) = v22;
  v23 = v3[1];
  *(_OWORD *)(v20 + 32) = *v3;
  *(_OWORD *)(v20 + 48) = v23;
  *(_OWORD *)(v20 + 64) = v3[2];
  v65 = v21;
  v66 = v22;
  v67 = v3;
  sub_2412EAF10((uint64_t)&v75);
  sub_2412EAFBC((uint64_t)&v74);
  sub_2412EAEE8((uint64_t)v73);
  sub_2412EB518();
  sub_2414B47D4();
  v72 = 0;
  sub_2414B48F4();
  v24 = v68;
  v25 = v69;
  v26 = v70;
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v27 = (char *)v10 + v7[5];
  *(_QWORD *)v27 = swift_getKeyPath();
  v27[8] = 0;
  v28 = (char *)v10 + v7[6];
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  *(uint64_t *)((char *)v10 + v7[7]) = 0x3FED70A3D70A3D71;
  v29 = (char *)v10 + v7[8];
  *(_QWORD *)v29 = v24;
  *((_QWORD *)v29 + 1) = v25;
  v29[16] = v26;
  sub_2412F9DDC((uint64_t)v10, v12);
  v30 = sub_2412C8FC4(&qword_2543813F8, &qword_254381400, MEMORY[0x24BDF43B0]);
  v31 = sub_2412F0B40((unint64_t *)&unk_25437FCE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TransportButtonStyle, (uint64_t)&unk_2414C0548);
  v32 = v50;
  v33 = v51;
  sub_2414B41A4();
  sub_2412C8070(v12);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v33);
  swift_retain();
  v34 = sub_24139806C();
  v36 = v35;
  LOBYTE(v12) = v37;
  swift_release();
  v68 = v33;
  v69 = v7;
  v70 = v30;
  v71 = v31;
  swift_getOpaqueTypeConformance2();
  v38 = (uint64_t)v52;
  v39 = v56;
  sub_2414B4330();
  sub_2412F6D78(v34, v36, v12 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v39);
  v40 = v58;
  sub_2414B3610();
  v41 = (uint64_t)v54;
  v42 = &v54[*(int *)(v55 + 36)];
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DBB0);
  v44 = v59;
  v45 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(&v42[*(int *)(v43 + 40)], v40, v60);
  *(_QWORD *)v42 = 0xC024000000000000;
  v42[8] = 0;
  sub_2412DC3FC(v38, v41, &qword_254380D18);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v45);
  sub_2412CBE78(v38, &qword_254380D18);
  v46 = v61;
  sub_2414B3634();
  sub_2412EAF38();
  sub_2412F0B40(&qword_254382BA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v47 = v62;
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v47);
  return sub_2412CBE78(v41, &qword_25437DAE8);
}

uint64_t destroy for CAPackageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2412C8C2C();
}

uint64_t sub_2412EAEA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2412EAEE8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2412EAF10(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

unint64_t sub_2412EAF38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25437DAE0;
  if (!qword_25437DAE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DAE8);
    v2[0] = sub_2412CB510();
    v2[1] = sub_2412C8FC4(&qword_25437DBA8, (uint64_t *)&unk_25437DBB0, MEMORY[0x24BDF0960]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25437DAE0);
  }
  return result;
}

uint64_t sub_2412EAFBC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_2412EAFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  _QWORD v46[2];
  char v47;
  _OWORD v48[2];
  _BYTE v49[25];

  v44 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380EA8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  _s21CenterTransportButtonVMa(255, v5, v4, v6);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v7 = sub_2414B4B1C();
  v36 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v7);
  v8 = sub_2414B4804();
  v37 = *(uint64_t **)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381260);
  v11 = sub_2414B3514();
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v38 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FE0);
  v42 = v11;
  v13 = sub_2414B3514();
  v43 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v39 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (uint64_t)&v36 - v16;
  *(_OWORD *)&v49[9] = *(_OWORD *)((char *)v2 + 41);
  v17 = v2[1];
  v48[0] = *v2;
  v48[1] = v17;
  *(_OWORD *)v49 = v2[2];
  v18 = *(_QWORD *)&v49[16];
  LOBYTE(v11) = v49[24];
  sub_2412C7080(*(uint64_t *)&v49[16], v49[24]);
  sub_2412FA328(v18, v11, &v47);
  sub_2412C821C(v18, v11);
  if (v47)
  {
    if (qword_254381728 != -1)
      swift_once();
    v19 = &qword_254381700;
  }
  else
  {
    if (qword_254380100 != -1)
      swift_once();
    v19 = &qword_2543800E0;
  }
  v20 = v19[3];
  v22 = v19[1];
  v21 = v19[2];
  v23 = *v19;
  v24 = swift_retain();
  MEMORY[0x24BDAC7A8](v24);
  *(&v36 - 8) = v5;
  *(&v36 - 7) = v4;
  *(&v36 - 6) = (uint64_t)v48;
  *(&v36 - 5) = v23;
  *(&v36 - 4) = v22;
  *(&v36 - 3) = v21;
  *(&v36 - 2) = v20;
  sub_2414B3880();
  sub_2414B47F8();
  swift_getKeyPath();
  v47 = 0;
  v25 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v8);
  v26 = v38;
  sub_2414B41C8();
  swift_release();
  v27 = ((uint64_t (*)(char *, uint64_t))v37[1])(v10, v8);
  v37 = &v36;
  MEMORY[0x24BDAC7A8](v27);
  *(&v36 - 4) = v5;
  *(&v36 - 3) = v4;
  *(&v36 - 2) = (uint64_t)v48;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380BE0);
  v28 = sub_2412C8FC4(&qword_254381258, &qword_254381260, MEMORY[0x24BDF1028]);
  v46[0] = v25;
  v46[1] = v28;
  v29 = v42;
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v42, v46);
  sub_2412C8FC4(&qword_254380BD8, &qword_254380BE0, MEMORY[0x24BDEC6F8]);
  v31 = (uint64_t)v39;
  sub_2414B4120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v29);
  v32 = sub_2412C8FC4(&qword_254380FD8, &qword_254380FE0, MEMORY[0x24BDEF370]);
  v45[0] = v30;
  v45[1] = v32;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v45);
  v33 = v41;
  sub_2412FBF34(v31, v13, v41);
  v34 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v34(v31, v13);
  sub_2412EEA1C(v33, v13, v44);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v13);
}

unint64_t sub_2412EB518()
{
  unint64_t result;

  result = qword_25437DC90;
  if (!qword_25437DC90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C588C, &type metadata for CAPackageView);
    atomic_store(result, (unint64_t *)&qword_25437DC90);
  }
  return result;
}

uint64_t sub_2412EB55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v8 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v9 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  sub_2414B4798();
  sub_2414B4798();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 208);
  swift_unknownObjectRetain();
  v26 = a2;
  swift_retain();
  v25 = v10(v8, v9);
  v10(v8, v9);
  swift_retain();
  swift_release();
  _s7ArtworkCMa();
  sub_2412C8030(&qword_25437F540, (uint64_t (*)(uint64_t))_s7ArtworkCMa, (uint64_t)&unk_2414BEE10);
  v11 = sub_2414B33C4();
  v23 = v12;
  v24 = v11;
  v10(v8, v9);
  swift_retain();
  swift_release();
  type metadata accessor for NowPlayingViewModel.CurrentItem(0);
  sub_2412C8030(&qword_25437E920, type metadata accessor for NowPlayingViewModel.CurrentItem, (uint64_t)&unk_2414CBC88);
  v13 = sub_2414B33C4();
  v15 = v14;
  v16 = *(_QWORD *)(v10(v8, v9) + 104);
  swift_retain();
  result = swift_release();
  if (v16)
  {
    _s13HostedContentCMa();
    sub_2412C8030(&qword_25437D700, (uint64_t (*)(uint64_t))_s13HostedContentCMa, (uint64_t)&unk_2414BE51C);
    v18 = sub_2414B33C4();
    v20 = v19;
    swift_retain();
    v21 = v10(v8, v9);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    v22 = *(_QWORD *)(v21 + 136);
    swift_retain();
    result = swift_release();
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = v26;
    *(_QWORD *)(a4 + 16) = v25;
    *(_QWORD *)(a4 + 24) = a3;
    *(_QWORD *)(a4 + 32) = v22;
    *(_QWORD *)(a4 + 40) = v24;
    *(_QWORD *)(a4 + 48) = v23;
    *(_QWORD *)(a4 + 56) = v13;
    *(_QWORD *)(a4 + 64) = v15;
    *(_QWORD *)(a4 + 72) = v18;
    *(_QWORD *)(a4 + 80) = v20;
    *(_BYTE *)(a4 + 88) = v27;
    *(_QWORD *)(a4 + 96) = v28;
    *(_BYTE *)(a4 + 104) = v27;
    *(_QWORD *)(a4 + 112) = v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2412EB7E8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  uint64_t KeyPath;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  double v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  double v38;
  double v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 aBlock;
  _BYTE v61[57];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v53 = sub_2414B4B94();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_2414B4BB8();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  *(_QWORD *)&aBlock = v1;
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  result = swift_release();
  if ((*(_BYTE *)(v1 + 137) & 1) == 0)
  {
    v6 = objc_msgSend(a1, sel_window);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_safeAreaInsets);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v16 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v17 = objc_msgSend(v16, sel_userInterfaceLayoutDirection);

      v18 = v17 == (id)1 ? v15 : v11;
      if (v17 != (id)1)
        v11 = v15;
    }
    else
    {
      v9 = 0;
      v18 = 0.0;
      v13 = 0;
      v11 = 0.0;
    }
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v37 - 6) = (id)v1;
    *(&v37 - 5) = v9;
    *((double *)&v37 - 4) = v18;
    *(&v37 - 3) = v13;
    *((double *)&v37 - 2) = v11;
    *(_QWORD *)&aBlock = v1;
    sub_2414B2B78();
    v47 = 0;
    swift_release();
    sub_2413812F0(a1, (uint64_t)&aBlock);
    v20 = aBlock;
    v21 = v61[0];
    v62 = *(_OWORD *)&v61[1];
    v63 = *(_OWORD *)&v61[17];
    v64 = *(_OWORD *)&v61[33];
    v65 = *(_QWORD *)&v61[49];
    v46 = v61[1];
    v22 = v61[2];
    v23 = *(_QWORD *)&v61[8];
    v45 = v61[16];
    v44 = *(_QWORD *)&v61[24];
    v43 = *(_QWORD *)&v61[32];
    v42 = *(_QWORD *)&v61[40];
    v41 = *(_QWORD *)&v61[48];
    v40 = v61[56];
    swift_getKeyPath();
    *(_QWORD *)&aBlock = v1;
    sub_2414B2B84();
    swift_release();
    v24 = *(_QWORD *)(v1 + 32);
    if ((v24 & 0xFF0000) == 0x40000)
      goto LABEL_12;
    aBlock = *(_OWORD *)(v1 + 16);
    *(_OWORD *)&v61[8] = *(_OWORD *)(v1 + 40);
    *(_OWORD *)&v61[24] = *(_OWORD *)(v1 + 56);
    *(_OWORD *)&v61[40] = *(_OWORD *)(v1 + 72);
    v56 = v62;
    v25 = *(_BYTE *)(v1 + 88);
    *(_QWORD *)v61 = v24;
    v61[56] = v25;
    v54 = v20;
    v55 = v21;
    v57 = v63;
    v58 = v64;
    v59 = v65;
    result = _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0((uint64_t)&aBlock, (uint64_t)&v54);
    if ((result & 1) == 0)
    {
LABEL_12:
      v38 = *((double *)&v20 + 1);
      v39 = *(double *)&v20;
      swift_getKeyPath();
      *(_QWORD *)&aBlock = v1;
      sub_2414B2B84();
      swift_release();
      if ((unint64_t)*(unsigned __int8 *)(v1 + 34) << 16 != 0x40000)
      {
        swift_getKeyPath();
        *(_QWORD *)&aBlock = v1;
        sub_2414B2B84();
        swift_release();
        if ((unint64_t)*(unsigned __int8 *)(v1 + 34) << 16 == 0x40000 || (*(_BYTE *)(v1 + 32) & 1) != 0)
        {
          if ((v21 & 1) == 0)
            goto LABEL_20;
        }
        else if ((v21 & 1) != 0 || *(double *)(v1 + 16) != v39 || *(double *)(v1 + 24) != v38)
        {
LABEL_20:
          swift_getKeyPath();
          *(_QWORD *)&aBlock = v1;
          sub_2414B2B84();
          swift_release();
          if (*(_BYTE *)(v1 + 136) == 1)
          {
            v26 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
            v37 = objc_msgSend(v26, sel_applicationState);

            if (!v37)
            {
              v28 = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](v28);
              *(&v37 - 2) = (id)v1;
              *((_BYTE *)&v37 - 8) = 1;
              *(_QWORD *)&aBlock = v1;
              sub_2414B2B78();
              swift_release();
              sub_2412FFFC8();
              v29 = (void *)sub_2414B5230();
              v30 = swift_allocObject();
              v31 = v63;
              *(_OWORD *)(v30 + 41) = v62;
              v32 = v39;
              *(_QWORD *)(v30 + 16) = v1;
              *(double *)(v30 + 24) = v32;
              *(double *)(v30 + 32) = v38;
              *(_BYTE *)(v30 + 40) = v21;
              *(_OWORD *)(v30 + 57) = v31;
              *(_OWORD *)(v30 + 73) = v64;
              *(_QWORD *)(v30 + 89) = v65;
              *(_QWORD *)&v61[16] = sub_241381768;
              *(_QWORD *)&v61[24] = v30;
              *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
              *((_QWORD *)&aBlock + 1) = 1107296256;
              *(_QWORD *)v61 = sub_2413002C8;
              *(_QWORD *)&v61[8] = &block_descriptor_5;
              v33 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              v34 = v48;
              sub_2414B4BAC();
              *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
              sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
              sub_241381774();
              v35 = v51;
              v36 = v53;
              sub_2414B5464();
              MEMORY[0x242694ABC](0, v34, v35, v33);
              _Block_release(v33);

              (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
              return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v34, v50);
            }
          }
        }
      }
      *(double *)&aBlock = v39;
      *((double *)&aBlock + 1) = v38;
      *(_QWORD *)v61 = v21 & 1 | (unint64_t)(v46 << 8) | (v22 << 16);
      *(_QWORD *)&v61[8] = v23;
      *(_QWORD *)&v61[16] = v45;
      *(_QWORD *)&v61[24] = v44;
      *(_QWORD *)&v61[32] = v43;
      *(_QWORD *)&v61[40] = v42;
      *(_QWORD *)&v61[48] = v41;
      v61[56] = v40;
      v27 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v27);
      *(&v37 - 2) = (id)v1;
      *(&v37 - 1) = &aBlock;
      *(_QWORD *)&v54 = v1;
      sub_2414B2B78();
      return swift_release();
    }
  }
  return result;
}

uint64_t _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  int v10;
  int v11;
  char v12;

  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 17);
  v5 = *(unsigned __int8 *)(a1 + 18);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 72);
  result = *(unsigned __int8 *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 17);
  v11 = *(unsigned __int8 *)(a2 + 18);
  if ((v3 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 16))
      return result;
  }
  else
  {
    if ((result & 1) != 0)
      return 0;
    result = 0;
    if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
      return result;
  }
  if (v4 == 9)
  {
    if (v10 != 9)
      return 0;
  }
  else
  {
    result = 0;
    if (v10 == 9 || v4 != v10)
      return result;
  }
  if (v5 == 3)
  {
    if (v11 != 3)
      return 0;
LABEL_17:
    if ((v7 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 32))
        return 0;
    }
    else
    {
      if (v6 == *(_QWORD *)(a2 + 24))
        v12 = *(_BYTE *)(a2 + 32);
      else
        v12 = 1;
      if ((v12 & 1) != 0)
        return 0;
    }
    if ((v8 & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 72) & 1) == 0)
        return 0;
    }
    else if ((*(_BYTE *)(a2 + 72) & 1) != 0 || (sub_2414B2F14() & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  result = 0;
  if (v11 != 3 && v5 == v11)
    goto LABEL_17;
  return result;
}

void sub_2412EC168(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  char v3;
  char v4;
  char v5;

  if (a2 > 428.0)
    v3 = 6;
  else
    v3 = 5;
  if (a2 > 414.0)
    v4 = v3;
  else
    v4 = 4;
  if (a3 > 844.0)
    v5 = 3;
  else
    v5 = 2;
  if (a2 <= 393.0)
    v4 = v5;
  if (a2 <= 375.0)
    v4 = a3 > 667.0;
  *a1 = v4;
}

uint64_t sub_2412EC1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t OpaqueTypeConformance2;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t result;
  uint64_t v215;
  char v216;
  int v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  char *v222;
  __int128 v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(uint64_t, uint64_t);
  _QWORD v243[4];
  char *v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  char *v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  __int128 *v376;
  uint64_t v377;
  uint64_t v378;
  char v379;
  __int128 v380;
  __int128 v381;
  _OWORD v382[5];
  uint64_t v383;
  __int128 v384;
  __int128 v385;
  _QWORD v386[2];
  _QWORD v387[2];
  _QWORD v388[2];
  _QWORD v389[2];
  _QWORD v390[2];
  _QWORD v391[2];
  _QWORD v392[2];
  _QWORD v393[2];
  _QWORD v394[2];
  _QWORD v395[2];
  _QWORD v396[2];
  _QWORD v397[2];
  _QWORD v398[2];
  _QWORD v399[2];
  _QWORD v400[2];
  _QWORD v401[2];
  _QWORD v402[2];
  _QWORD v403[2];
  _QWORD v404[2];
  _QWORD v405[2];
  _QWORD v406[2];
  _QWORD v407[2];
  _QWORD v408[2];
  _QWORD v409[2];
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  _OWORD v415[3];
  __int128 v416;

  v314 = a1;
  v259 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v343 = *(_QWORD *)(v4 - 8);
  v5 = v4;
  v309 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v329 = (char *)v243 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A80);
  v312 = *(_QWORD *)(v7 - 8);
  v8 = v7;
  v302 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v298 = (char *)v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x242695AE8](&unk_2414BCB18, a2);
  v10 = a2;
  v11 = sub_2414B3B08();
  v301 = v11;
  v12 = MEMORY[0x24BDB9EE8];
  v13 = sub_2412C8FC4(&qword_254380A78, &qword_254380A80, MEMORY[0x24BDB9EE8]);
  v303 = v13;
  v300 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v11);
  *(_QWORD *)&v410 = v8;
  *((_QWORD *)&v410 + 1) = v11;
  *(_QWORD *)&v411 = v13;
  *((_QWORD *)&v411 + 1) = v300;
  v14 = sub_2414B35E0();
  v308 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v296 = (char *)v243 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811B0);
  v299 = v14;
  v16 = sub_2414B3514();
  v321 = *(_QWORD *)(v16 - 8);
  v306 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v304 = (char *)v243 - v17;
  v18 = sub_2412C8FC4(&qword_254384328, &qword_254384330, v12);
  v310 = v18;
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v14);
  v297 = v19;
  v20 = MEMORY[0x24BDF1028];
  v21 = sub_2412C8FC4(&qword_2543811A8, &qword_2543811B0, MEMORY[0x24BDF1028]);
  v409[0] = v19;
  v409[1] = v21;
  v22 = MEMORY[0x24BDED308];
  v307 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v409);
  *(_QWORD *)&v410 = v5;
  *((_QWORD *)&v410 + 1) = v16;
  *(_QWORD *)&v411 = v18;
  *((_QWORD *)&v411 + 1) = v307;
  v23 = sub_2414B35E0();
  v318 = *(_QWORD *)(v23 - 8);
  v362 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v305 = (char *)v243 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v25 = sub_2414B3514();
  v326 = *(_QWORD *)(v25 - 8);
  v364 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v311 = (char *)v243 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381380);
  v27 = sub_2414B3514();
  v324 = *(_QWORD *)(v27 - 8);
  v363 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v316 = (char *)v243 - v28;
  v29 = *(_QWORD *)(v10 + 16);
  v357 = v10;
  v378 = v29;
  sub_2414B53B0();
  v294 = sub_2414B3DA8();
  v30 = sub_2414B3514();
  v325 = *(_QWORD *)(v30 - 8);
  v358 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v313 = (char *)v243 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381230);
  v32 = sub_2414B3514();
  v328 = *(_QWORD *)(v32 - 8);
  v365 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v315 = (char *)v243 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D0F8);
  v34 = sub_2414B3514();
  v331 = *(_QWORD *)(v34 - 8);
  v366 = v34;
  MEMORY[0x24BDAC7A8](v34);
  v317 = (char *)v243 - v35;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811D0);
  v36 = sub_2414B3514();
  v333 = *(_QWORD *)(v36 - 8);
  v367 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v319 = (char *)v243 - v37;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381220);
  v38 = sub_2414B3514();
  v335 = *(_QWORD *)(v38 - 8);
  v368 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v320 = (char *)v243 - v39;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381270);
  v40 = sub_2414B3514();
  v336 = *(_QWORD *)(v40 - 8);
  v369 = v40;
  MEMORY[0x24BDAC7A8](v40);
  v322 = (char *)v243 - v41;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811C0);
  v42 = sub_2414B3514();
  v338 = *(_QWORD *)(v42 - 8);
  v370 = v42;
  MEMORY[0x24BDAC7A8](v42);
  v323 = (char *)v243 - v43;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBE0);
  v44 = sub_2414B3514();
  v339 = *(_QWORD *)(v44 - 8);
  v372 = v44;
  MEMORY[0x24BDAC7A8](v44);
  v327 = (char *)v243 - v45;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811E0);
  v46 = sub_2414B3514();
  v341 = *(_QWORD *)(v46 - 8);
  v373 = v46;
  MEMORY[0x24BDAC7A8](v46);
  v330 = (char *)v243 - v47;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381210);
  v48 = sub_2414B3514();
  v340 = *(_QWORD *)(v48 - 8);
  v371 = v48;
  MEMORY[0x24BDAC7A8](v48);
  v332 = (char *)v243 - v49;
  v377 = *(_QWORD *)(v10 + 24);
  v334 = type metadata accessor for NowPlayingViewControllerProxy(255, v29, v377, v50);
  sub_2414B53B0();
  v292 = sub_2414B3DA8();
  v51 = sub_2414B3514();
  v344 = *(_QWORD *)(v51 - 8);
  v374 = v51;
  MEMORY[0x24BDAC7A8](v51);
  v375 = (char *)v243 - v52;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBD0);
  v53 = sub_2414B3514();
  v346 = *(_QWORD *)(v53 - 8);
  v359 = v53;
  MEMORY[0x24BDAC7A8](v53);
  v337 = (char *)v243 - v54;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DBF8);
  v55 = sub_2414B3514();
  v350 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v342 = (char *)v243 - v56;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DC08);
  v287 = v55;
  v57 = sub_2414B3514();
  v351 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v345 = (char *)v243 - v58;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811F0);
  v289 = v57;
  v59 = sub_2414B3514();
  v352 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v347 = (char *)v243 - v60;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381200);
  v291 = v59;
  v61 = sub_2414B3514();
  v354 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v348 = (char *)v243 - v62;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381250);
  v293 = v61;
  v63 = sub_2414B3514();
  v356 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v349 = (char *)v243 - v64;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381190);
  v295 = v63;
  v361 = sub_2414B3514();
  v355 = *(_QWORD *)(v361 - 8);
  MEMORY[0x24BDAC7A8](v361);
  v353 = (char *)v243 - v65;
  v360 = type metadata accessor for WindowProperties();
  v66 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v362);
  v268 = v66;
  v67 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, v20);
  v408[0] = v66;
  v408[1] = v67;
  v68 = MEMORY[0x242695AE8](v22, v364, v408);
  v269 = v68;
  v69 = sub_2412C8FC4(&qword_254381378, &qword_254381380, v20);
  v407[0] = v68;
  v407[1] = v69;
  v70 = MEMORY[0x242695AE8](v22, v363, v407);
  v270 = v70;
  v71 = MEMORY[0x242695AE8](v20, v294);
  v406[0] = v70;
  v406[1] = v71;
  v72 = MEMORY[0x242695AE8](v22, v358, v406);
  v271 = v72;
  v73 = sub_2412C8FC4(&qword_254381228, &qword_254381230, v20);
  v405[0] = v72;
  v405[1] = v73;
  v74 = MEMORY[0x242695AE8](v22, v365, v405);
  v272 = v74;
  v75 = sub_2412C8FC4(&qword_25437DBE8, &qword_25437D0F8, v20);
  v404[0] = v74;
  v404[1] = v75;
  v76 = MEMORY[0x242695AE8](v22, v366, v404);
  v273 = v76;
  v77 = sub_2412C8FC4(&qword_2543811C8, &qword_2543811D0, v20);
  v403[0] = v76;
  v403[1] = v77;
  v78 = MEMORY[0x242695AE8](v22, v367, v403);
  v274 = v78;
  v79 = sub_2412C8FC4(&qword_254381218, &qword_254381220, v20);
  v402[0] = v78;
  v402[1] = v79;
  v80 = MEMORY[0x242695AE8](v22, v368, v402);
  v275 = v80;
  v81 = sub_2412C8FC4(&qword_254381268, &qword_254381270, v20);
  v401[0] = v80;
  v401[1] = v81;
  v82 = MEMORY[0x242695AE8](v22, v369, v401);
  v277 = v82;
  v83 = sub_2412C8FC4(&qword_2543811B8, &qword_2543811C0, v20);
  v400[0] = v82;
  v400[1] = v83;
  v84 = MEMORY[0x242695AE8](v22, v370, v400);
  v278 = v84;
  v85 = sub_2412C8FC4(&qword_25437DBD8, &qword_25437DBE0, v20);
  v399[0] = v84;
  v399[1] = v85;
  v86 = MEMORY[0x242695AE8](v22, v372, v399);
  v279 = v86;
  v87 = sub_2412C8FC4(&qword_2543811D8, &qword_2543811E0, v20);
  v398[0] = v86;
  v398[1] = v87;
  v88 = MEMORY[0x242695AE8](v22, v373, v398);
  v280 = v88;
  v89 = sub_2412C8FC4(&qword_254381208, &qword_254381210, v20);
  v397[0] = v88;
  v397[1] = v89;
  v90 = MEMORY[0x242695AE8](v22, v371, v397);
  v281 = v90;
  v91 = MEMORY[0x242695AE8](v20, v292);
  v396[0] = v90;
  v396[1] = v91;
  v92 = MEMORY[0x242695AE8](v22, v374, v396);
  v282 = v92;
  v93 = sub_2412C8FC4(&qword_25437DBC8, &qword_25437DBD0, v20);
  v395[0] = v92;
  v395[1] = v93;
  v94 = MEMORY[0x242695AE8](v22, v359, v395);
  v283 = v94;
  v95 = sub_2412C8FC4(&qword_25437DBF0, &qword_25437DBF8, v20);
  v394[0] = v94;
  v394[1] = v95;
  v96 = MEMORY[0x242695AE8](v22, v55, v394);
  v286 = v96;
  v97 = sub_2412C8FC4(&qword_25437DC00, &qword_25437DC08, v20);
  v393[0] = v96;
  v393[1] = v97;
  v98 = MEMORY[0x242695AE8](v22, v57, v393);
  v288 = v98;
  v99 = sub_2412C8FC4(&qword_2543811E8, &qword_2543811F0, v20);
  v392[0] = v98;
  v392[1] = v99;
  v100 = MEMORY[0x242695AE8](v22, v59, v392);
  v290 = v100;
  v101 = sub_2412C8FC4(&qword_2543811F8, &qword_254381200, v20);
  v391[0] = v100;
  v391[1] = v101;
  v102 = MEMORY[0x242695AE8](v22, v61, v391);
  v292 = v102;
  v103 = sub_2412C8FC4(&qword_254381248, &qword_254381250, v20);
  v390[0] = v102;
  v390[1] = v103;
  v104 = MEMORY[0x242695AE8](v22, v63, v390);
  v294 = v104;
  v105 = sub_2412C8FC4(&qword_254381188, &qword_254381190, v20);
  v389[0] = v104;
  v389[1] = v105;
  v106 = v22;
  v107 = v361;
  v108 = MEMORY[0x242695AE8](v106, v361, v389);
  v109 = sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  v110 = v360;
  *(_QWORD *)&v410 = v107;
  *((_QWORD *)&v410 + 1) = v360;
  *(_QWORD *)&v411 = v108;
  *((_QWORD *)&v411 + 1) = v109;
  v284 = v109;
  v285 = v108;
  v111 = MEMORY[0x242695A94](0, &v410, MEMORY[0x24BDF2358], 0);
  v262 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v276 = (char *)v243 - v112;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381170);
  v263 = v111;
  v113 = sub_2414B3514();
  v265 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v264 = (char *)v243 - v114;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812A0);
  v115 = sub_2414B3514();
  v256 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v266 = (char *)v243 - v116;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381290);
  v117 = sub_2414B3514();
  v255 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v254 = (char *)v243 - v118;
  v119 = type metadata accessor for NowPlayingViewModel.Metrics();
  *(_QWORD *)&v410 = v107;
  *((_QWORD *)&v410 + 1) = v110;
  *(_QWORD *)&v411 = v108;
  *((_QWORD *)&v411 + 1) = v109;
  v120 = MEMORY[0x24BDF2358];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v122 = MEMORY[0x24BDF1028];
  v123 = sub_2412C8FC4(&qword_254381168, &qword_254381170, MEMORY[0x24BDF1028]);
  v260 = OpaqueTypeConformance2;
  v388[0] = OpaqueTypeConformance2;
  v388[1] = v123;
  v124 = MEMORY[0x24BDED308];
  v267 = v113;
  v125 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v113, v388);
  v126 = sub_2412C8FC4(&qword_254381298, &qword_2543812A0, v122);
  v261 = v125;
  v387[0] = v125;
  v387[1] = v126;
  v258 = v115;
  v127 = MEMORY[0x242695AE8](v124, v115, v387);
  v128 = sub_2412C8FC4(&qword_254381288, &qword_254381290, v122);
  v243[1] = v127;
  v386[0] = v127;
  v386[1] = v128;
  v129 = MEMORY[0x242695AE8](v124, v117, v386);
  v130 = sub_2412C8030(&qword_25437D0B8, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Metrics, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.Metrics);
  *(_QWORD *)&v410 = v117;
  *((_QWORD *)&v410 + 1) = v119;
  *(_QWORD *)&v411 = v129;
  *((_QWORD *)&v411 + 1) = v130;
  v131 = MEMORY[0x242695A94](0, &v410, v120, 0);
  v250 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v249 = (char *)v243 - v132;
  v257 = v117;
  *(_QWORD *)&v410 = v117;
  *((_QWORD *)&v410 + 1) = v119;
  v252 = v119;
  v243[2] = v130;
  v243[3] = v129;
  *(_QWORD *)&v411 = v129;
  *((_QWORD *)&v411 + 1) = v130;
  v133 = swift_getOpaqueTypeConformance2();
  v134 = sub_2412F837C();
  v253 = v131;
  *(_QWORD *)&v410 = v131;
  *((_QWORD *)&v410 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  v248 = v133;
  *(_QWORD *)&v411 = v133;
  *((_QWORD *)&v411 + 1) = v134;
  v245 = v134;
  v251 = MEMORY[0x242695A94](0, &v410, MEMORY[0x24BDF3908], 0);
  v247 = *(_QWORD *)(v251 - 8);
  v135 = MEMORY[0x24BDAC7A8](v251);
  v244 = (char *)v243 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v135);
  v246 = (uint64_t)v243 - v137;
  v138 = v376[5];
  v414 = v376[4];
  v415[0] = v138;
  v415[1] = v376[6];
  *(_QWORD *)&v415[2] = *((_QWORD *)v376 + 14);
  v139 = v376[1];
  v410 = *v376;
  v411 = v139;
  v140 = v376[3];
  v412 = v376[2];
  v413 = v140;
  v376 = (__int128 *)v139;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380A98);
  v141 = v298;
  sub_2414B2E18();
  swift_endAccess();
  v142 = swift_allocObject();
  v143 = v378;
  v144 = v377;
  *(_QWORD *)(v142 + 16) = v378;
  *(_QWORD *)(v142 + 24) = v144;
  v145 = v415[0];
  *(_OWORD *)(v142 + 96) = v414;
  *(_OWORD *)(v142 + 112) = v145;
  *(_OWORD *)(v142 + 128) = v415[1];
  *(_QWORD *)(v142 + 144) = *(_QWORD *)&v415[2];
  v146 = v411;
  *(_OWORD *)(v142 + 32) = v410;
  *(_OWORD *)(v142 + 48) = v146;
  v147 = v413;
  *(_OWORD *)(v142 + 64) = v412;
  *(_OWORD *)(v142 + 80) = v147;
  sub_2412EE350((uint64_t)&v410);
  v148 = v296;
  v149 = v302;
  sub_2414B45B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v312 + 8))(v141, v149);
  swift_getKeyPath();
  v416 = *(_OWORD *)((char *)&v415[1] + 8);
  v380 = *(_OWORD *)((char *)&v415[1] + 8);
  v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC38);
  sub_2414B47A4();
  LOBYTE(v380) = v384;
  v150 = v304;
  v151 = v299;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v308 + 8))(v148, v151);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v152 = v329;
  sub_2414B2E18();
  swift_endAccess();
  v153 = swift_allocObject();
  *(_QWORD *)(v153 + 16) = v143;
  *(_QWORD *)(v153 + 24) = v144;
  v154 = v415[0];
  *(_OWORD *)(v153 + 96) = v414;
  *(_OWORD *)(v153 + 112) = v154;
  *(_OWORD *)(v153 + 128) = v415[1];
  *(_QWORD *)(v153 + 144) = *(_QWORD *)&v415[2];
  v155 = v411;
  *(_OWORD *)(v153 + 32) = v410;
  *(_OWORD *)(v153 + 48) = v155;
  v156 = v413;
  *(_OWORD *)(v153 + 64) = v412;
  *(_OWORD *)(v153 + 80) = v156;
  sub_2412EE350((uint64_t)&v410);
  v157 = v305;
  v158 = v306;
  v159 = v309;
  sub_2414B45B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v343 + 8))(v152, v159);
  (*(void (**)(char *, uint64_t))(v321 + 8))(v150, v158);
  swift_getKeyPath();
  v380 = *(_OWORD *)((char *)v415 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  LOBYTE(v380) = v384;
  v160 = v311;
  v161 = v362;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v318 + 8))(v157, v161);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v162 = v316;
  v163 = v364;
  sub_2414B41C8();
  swift_release();
  sub_2412EE5C0((uint64_t)&v380);
  (*(void (**)(char *, uint64_t))(v326 + 8))(v160, v163);
  v164 = v313;
  v165 = v363;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v324 + 8))(v162, v165);
  type metadata accessor for NowPlayingRouteObserver();
  sub_2412C8030(&qword_25437FFB0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
  v166 = v315;
  v167 = v358;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v325 + 8))(v164, v167);
  type metadata accessor for NowPlayingViewModel(0);
  sub_2412C8030(&qword_25437D730, type metadata accessor for NowPlayingViewModel, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel);
  v168 = v317;
  v169 = v365;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v328 + 8))(v166, v169);
  _s5DebugCMa();
  sub_2412C8030((unint64_t *)&qword_25437F060, (uint64_t (*)(uint64_t))_s5DebugCMa, (uint64_t)&unk_2414C3E98);
  v170 = v319;
  v171 = v366;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v331 + 8))(v168, v171);
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
  v172 = v320;
  v173 = v367;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v333 + 8))(v170, v173);
  type metadata accessor for Geometry();
  sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
  v174 = v322;
  v175 = v368;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v335 + 8))(v172, v175);
  _s11TimeControlCMa();
  sub_2412C8030(&qword_25437EA10, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  v176 = v323;
  v177 = v369;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v336 + 8))(v174, v177);
  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  v178 = v327;
  v179 = v370;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v338 + 8))(v176, v179);
  _s5QueueCMa();
  sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
  v180 = v330;
  v181 = v372;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v339 + 8))(v178, v181);
  _s8BackdropCMa();
  sub_2412C8030(&qword_25437F680, (uint64_t (*)(uint64_t))_s8BackdropCMa, (uint64_t)&unk_2414CB25C);
  v182 = v332;
  v183 = v373;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v341 + 8))(v180, v183);
  MEMORY[0x242695AE8](&unk_2414CCC70, v334);
  v184 = v371;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v340 + 8))(v182, v184);
  swift_getKeyPath();
  v185 = *(_QWORD *)&v415[0];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v186 = v380;
  v384 = v380;
  v385 = v381;
  v187 = v337;
  v188 = v374;
  v189 = v375;
  sub_2414B41C8();
  swift_release();
  sub_2412C68C0(v186, *((uint64_t *)&v186 + 1));
  (*(void (**)(char *, uint64_t))(v344 + 8))(v189, v188);
  swift_getKeyPath();
  swift_beginAccess();
  v190 = *(_QWORD *)(v185 + 16);
  v191 = *(_QWORD *)(v185 + 24);
  *(_QWORD *)&v380 = v190;
  *((_QWORD *)&v380 + 1) = v191;
  swift_bridgeObjectRetain();
  v192 = v342;
  v193 = v359;
  v194 = v187;
  v195 = v276;
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v346 + 8))(v194, v193);
  swift_getKeyPath();
  v196 = swift_allocObject();
  v197 = v377;
  *(_QWORD *)(v196 + 16) = v378;
  *(_QWORD *)(v196 + 24) = v197;
  v198 = v415[0];
  *(_OWORD *)(v196 + 96) = v414;
  *(_OWORD *)(v196 + 112) = v198;
  *(_OWORD *)(v196 + 128) = v415[1];
  *(_QWORD *)(v196 + 144) = *(_QWORD *)&v415[2];
  v199 = v411;
  *(_OWORD *)(v196 + 32) = v410;
  *(_OWORD *)(v196 + 48) = v199;
  v200 = v413;
  *(_OWORD *)(v196 + 64) = v412;
  *(_OWORD *)(v196 + 80) = v200;
  *(_QWORD *)&v380 = sub_241364A04;
  *((_QWORD *)&v380 + 1) = v196;
  sub_2412EE350((uint64_t)&v410);
  v201 = v345;
  v202 = v287;
  sub_2414B41C8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v350 + 8))(v192, v202);
  v203 = v413;
  _s7ArtworkC17BackgroundArtworkCMa();
  sub_2412C8030((unint64_t *)&unk_25437F380, (uint64_t (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa, (uint64_t)&unk_2414BEDD8);
  v204 = v347;
  v205 = v289;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v351 + 8))(v201, v205);
  _s14DefaultArtworkCMa();
  sub_2412C8030(&qword_25437F478, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
  v206 = v348;
  v207 = v291;
  sub_2414B430C();
  (*(void (**)(char *, uint64_t))(v352 + 8))(v204, v207);
  swift_getKeyPath();
  swift_beginAccess();
  sub_2412F1B18(v203 + 64, (uint64_t)&v380);
  v208 = v349;
  v209 = v293;
  sub_2414B41C8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v380);
  (*(void (**)(char *, uint64_t))(v354 + 8))(v206, v209);
  swift_getKeyPath();
  v382[2] = v414;
  v382[3] = v415[0];
  v382[4] = v415[1];
  v383 = *(_QWORD *)&v415[2];
  v380 = v410;
  v381 = v411;
  v382[0] = v412;
  v382[1] = v413;
  sub_2412EE600(&v379);
  v210 = v353;
  v211 = v295;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v356 + 8))(v208, v211);
  v212 = v412;
  swift_checkMetadataState();
  v213 = v361;
  sub_2414B41BC();
  (*(void (**)(char *, uint64_t))(v355 + 8))(v210, v213);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v380 = v212;
  sub_2414B2B84();
  result = swift_release();
  v215 = *(_QWORD *)(v212 + 32);
  if ((v215 & 0xFF0000) == 0x40000)
  {
    __break(1u);
    goto LABEL_6;
  }
  v216 = *(_BYTE *)(v212 + 88);
  v217 = *(_DWORD *)(v212 + 48);
  v218 = *(_QWORD *)(v212 + 40);
  v219 = *(_OWORD *)(v212 + 56);
  v220 = *(_OWORD *)(v212 + 72);
  v380 = *(_OWORD *)(v212 + 16);
  LOWORD(v381) = v215 & 0xFF01;
  BYTE2(v381) = BYTE2(v215);
  *((_QWORD *)&v381 + 1) = v218;
  LOBYTE(v382[0]) = v217 & 1;
  *(_OWORD *)((char *)v382 + 8) = v219;
  *(_OWORD *)((char *)&v382[1] + 8) = v220;
  BYTE8(v382[2]) = v216 & 1;
  v221 = v263;
  v222 = v264;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v262 + 8))(v195, v221);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v380 = v212;
  sub_2414B2B84();
  swift_release();
  v223 = *(_OWORD *)(v212 + 120);
  v380 = *(_OWORD *)(v212 + 104);
  v381 = v223;
  v225 = v266;
  v224 = v267;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v265 + 8))(v222, v224);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v380 = v212;
  sub_2414B2B84();
  result = swift_release();
  v226 = *(_QWORD *)(v212 + 32);
  if ((v226 & 0xFF0000) == 0x40000)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((v226 & 1) == 0)
  {
    *(_QWORD *)&v380 = CGSize.aspectRatio.getter(*(double *)(v212 + 16), *(double *)(v212 + 24));
    BYTE8(v380) = 0;
    v227 = v254;
    v228 = v258;
    sub_2414B41C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v256 + 8))(v225, v228);
    swift_checkMetadataState();
    v229 = v249;
    v230 = v257;
    sub_2414B41BC();
    (*(void (**)(char *, uint64_t))(v255 + 8))(v227, v230);
    v380 = v416;
    sub_2414B47A4();
    LOBYTE(v380) = v379;
    v231 = swift_allocObject();
    v232 = v377;
    *(_QWORD *)(v231 + 16) = v378;
    *(_QWORD *)(v231 + 24) = v232;
    v233 = v415[0];
    *(_OWORD *)(v231 + 96) = v414;
    *(_OWORD *)(v231 + 112) = v233;
    *(_OWORD *)(v231 + 128) = v415[1];
    *(_QWORD *)(v231 + 144) = *(_QWORD *)&v415[2];
    v234 = v411;
    *(_OWORD *)(v231 + 32) = v410;
    *(_OWORD *)(v231 + 48) = v234;
    v235 = v413;
    *(_OWORD *)(v231 + 64) = v412;
    *(_OWORD *)(v231 + 80) = v235;
    sub_2412EE350((uint64_t)&v410);
    v237 = (uint64_t)v244;
    v236 = v245;
    v238 = v253;
    v239 = v248;
    sub_2414B4564();
    swift_release();
    (*(void (**)(char *, uint64_t))(v250 + 8))(v229, v238);
    *(_QWORD *)&v380 = v238;
    *((_QWORD *)&v380 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
    *(_QWORD *)&v381 = v239;
    *((_QWORD *)&v381 + 1) = v236;
    swift_getOpaqueTypeConformance2();
    v240 = v246;
    v241 = v251;
    sub_2412FBF34(v237, v251, v246);
    v242 = *(void (**)(uint64_t, uint64_t))(v247 + 8);
    v242(v237, v241);
    sub_2412EEA1C(v240, v241, v259);
    return ((uint64_t (*)(uint64_t, uint64_t))v242)(v240, v241);
  }
LABEL_7:
  __break(1u);
  return result;
}

double CGSize.aspectRatio.getter(double a1, double a2)
{
  double result;
  double v4;
  double v5;

  result = 0.0;
  if (a2 != 0.0)
  {
    v4 = fabs(a2);
    v5 = fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
    if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0 || v4 > v5)
      return a1 / a2;
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_25437D110);
}

uint64_t sub_2412EE350(uint64_t a1)
{
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s5DebugCMa()
{
  uint64_t result;

  result = qword_25437F068;
  if (!qword_25437F068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412EE438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingRouteObserver();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for NowPlayingRouteObserver()
{
  uint64_t result;

  result = qword_25437FFB8;
  if (!qword_25437FFB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412EE4B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s7ArtworkC17BackgroundArtworkCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s7ArtworkC17BackgroundArtworkCMa()
{
  uint64_t result;

  result = qword_25437F390;
  if (!qword_25437F390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for Geometry()
{
  uint64_t result;

  result = qword_2543806D0;
  if (!qword_2543806D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s5QueueCMa()
{
  return objc_opt_self();
}

uint64_t _s11TimeControlCMa()
{
  uint64_t result;

  result = qword_25437D0A0;
  if (!qword_25437D0A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412EE5C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412EE600@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  char *v16;
  char v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  char v22;
  __int128 v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 80);
  v3 = *(_BYTE *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 48) + 64;
  swift_beginAccess();
  sub_2412F1B18(v5, (uint64_t)v31);
  v6 = v32;
  v7 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  swift_getKeyPath();
  *(_QWORD *)&v23 = v2;
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  result = swift_release();
  v9 = *(_QWORD *)(v2 + 32);
  if ((v9 & 0xFF0000) == 0x40000)
  {
    __break(1u);
  }
  else
  {
    v10 = *(_BYTE *)(v2 + 88);
    v11 = *(_DWORD *)(v2 + 48);
    v12 = *(_QWORD *)(v2 + 40);
    v23 = *(_OWORD *)(v2 + 16);
    v24 = v9 & 0xFF01;
    v25 = BYTE2(v9);
    v26 = v12;
    v27 = v11 & 1;
    v28 = *(_OWORD *)(v2 + 56);
    v29 = *(_OWORD *)(v2 + 72);
    v30 = v10 & 1;
    v13 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v7 + 16))(&v23, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    LOBYTE(v23) = v3;
    *((_QWORD *)&v23 + 1) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC38);
    sub_2414B47A4();
    if ((v22 & 1) == 0)
    {
      v18 = sub_2412F662C(4u, v13);
      result = swift_bridgeObjectRelease();
      if (v18)
        v17 = 4;
      else
        v17 = 0;
      v16 = a1;
      goto LABEL_17;
    }
    swift_beginAccess();
    if (!*(_QWORD *)(v20 + 24))
    {
      if (sub_2412F662C(1u, v13))
      {
        result = swift_bridgeObjectRelease();
        v17 = 1;
        v16 = a1;
        goto LABEL_17;
      }
      v19 = sub_2412F662C(0, v13);
      result = swift_bridgeObjectRelease();
      v17 = 0;
      v16 = a1;
      if (v19)
        goto LABEL_17;
LABEL_16:
      v17 = 0;
      goto LABEL_17;
    }
    v14 = sub_2412F662C(2u, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!v14)
    {
      result = swift_bridgeObjectRelease();
      v16 = a1;
      goto LABEL_16;
    }
    swift_getKeyPath();
    v31[0] = v2;
    sub_2414B2B84();
    result = swift_release();
    v15 = (unint64_t)*(unsigned __int8 *)(v2 + 34) << 16;
    if (v15 != 0x40000)
    {
      result = swift_bridgeObjectRelease();
      v16 = a1;
      if (v15 != 0x20000)
      {
        v17 = 2;
LABEL_17:
        *v16 = v17;
        return result;
      }
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel.Metrics()
{
  uint64_t result;

  result = qword_25437D0C0;
  if (!qword_25437D0C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412EE910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(v2 + 49);
  v5 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(v2 + 88);
  v8 = *(_QWORD *)(v2 + 96);
  LOBYTE(v2) = *(_BYTE *)(v2 + 104);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_2412EE9B0();
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v2;
  return a1;
}

uint64_t sub_2412EE9B0()
{
  return swift_retain();
}

uint64_t destroy for ArtworkStyleModifier(uint64_t a1)
{
  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_2412C823C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  return swift_release();
}

uint64_t sub_2412EEA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

unint64_t sub_2412EEA34()
{
  unint64_t result;

  result = qword_2543802E8;
  if (!qword_2543802E8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C3A4C, &type metadata for VideoPlayerStyleModifier);
    atomic_store(result, (unint64_t *)&qword_2543802E8);
  }
  return result;
}

uint64_t sub_2412EEA78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  _QWORD v27[2];
  _QWORD v28[2];
  __int128 v29;
  uint64_t v30[3];
  char v31;
  char v32;
  char v33;
  __int128 v34[2];
  char v35;
  _BYTE v36[136];
  _BYTE v37[18];
  char v38;
  _OWORD v39[3];
  _OWORD v40[2];

  v8 = *a1;
  v9 = *((unsigned __int8 *)a1 + 8);
  sub_2412C6F44(*a1, v9);
  sub_2412EF52C(v8, v9, &v35);
  sub_2412C8228(v8, v9);
  sub_2412EFAC0((uint64_t)v34);
  v10 = *((_OWORD *)a1 + 10);
  v39[2] = *((_OWORD *)a1 + 9);
  v40[0] = v10;
  *(_OWORD *)((char *)v40 + 10) = *(_OWORD *)((char *)a1 + 170);
  v11 = *((_OWORD *)a1 + 8);
  v39[0] = *((_OWORD *)a1 + 7);
  v39[1] = v11;
  sub_2412FD220((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v37);
  result = sub_2412FD220((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  if (v38 == 3)
  {
    __break(1u);
  }
  else
  {
    v33 = v38;
    v13 = a1[26];
    v14 = *((unsigned __int8 *)a1 + 216);
    sub_2412C6F44(v13, v14);
    sub_2412F65C0(v13, v14, &v32);
    sub_2412C8228(v13, v14);
    v31 = v32;
    v15 = a1[28];
    v16 = a1[29];
    v17 = *((_BYTE *)a1 + 240);
    sub_2412C72E4(v15, v16, v17);
    sub_2412EEDF4(v15, v16, v17, v30);
    sub_2412C822C(v15, v16, v17);
    v29 = *(_OWORD *)v30;
    sub_2412F14F4(&v35, v34, &v33, &v31, (uint64_t *)&v29, (uint64_t)v36);
    _s11ArtworkViewVMa(0, a2, a3, v18);
    sub_2412EEFE0();
    v20 = _s31PrimaryArtworkViewOrVideoPlayerVMa(0, a2, a3, v19);
    v21 = MEMORY[0x242695AE8](&unk_2414BF3E4, v20);
    sub_2414B44F8();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v36, v20);
    LOBYTE(v34[0]) = sub_2412EEFE0();
    v22 = sub_2414B3514();
    v28[0] = v21;
    v28[1] = MEMORY[0x24BDECC38];
    v23 = MEMORY[0x24BDED308];
    v24 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v22, v28);
    sub_2414B457C();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v37, v22);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
    v25 = sub_2414B3514();
    v27[0] = v24;
    v27[1] = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
    MEMORY[0x242695AE8](v23, v25, v27);
    sub_2412FBF34((uint64_t)v36, v25, (uint64_t)v37);
    v26 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
    v26(v36, v25);
    sub_2412EEA1C((uint64_t)v37, v25, a4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v26)(v37, v25);
  }
  return result;
}

uint64_t sub_2412EEDAC()
{
  return swift_release();
}

uint64_t sub_2412EEDB8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return sub_2412EEDAC();
}

uint64_t sub_2412EEDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_2412C72E4(a1, a2, 1);
  }
  else
  {
    sub_2412C72E4(a1, a2, 0);
    v12 = sub_2414B51AC();
    v13 = sub_2414B3E08();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v15 = 136315138;
      v18 = v15 + 4;
      v20 = sub_2412E4890(0xD000000000000023, 0x80000002414CEC00, &v21);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v16, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C822C(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

BOOL sub_2412EEFE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL8 result;
  void *v4;
  _BYTE v5[40];

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 8);
  sub_2412C6F44(*v0, v2);
  sub_2412EF52C(v1, v2, v5);
  sub_2412C8228(v1, v2);
  result = 0;
  if (v5[0] == 1)
  {
    sub_2412EFAC0((uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      if (!v4)
        return 1;
    }
  }
  return result;
}

uint64_t sub_2412EF098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC30);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DB00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412EF558(a1, (uint64_t)v5);
  v12 = *(_QWORD *)a1;
  v13 = *(unsigned __int8 *)(a1 + 8);
  sub_2412C6F44(v12, v13);
  sub_2412EF52C(v12, v13, &v23);
  sub_2412C8228(v12, v13);
  if (v23 == 1)
    v14 = 1.0;
  else
    v14 = 0.0;
  sub_2412DC3FC((uint64_t)v5, (uint64_t)v8, &qword_25437DC30);
  *(double *)&v8[*(int *)(v6 + 36)] = v14;
  sub_2412CBE78((uint64_t)v5, &qword_25437DC30);
  sub_2412C6F44(v12, v13);
  sub_2412EF52C(v12, v13, &v22);
  sub_2412C8228(v12, v13);
  sub_2412C6F44(v12, v13);
  sub_2412EF52C(v12, v13, &v21);
  sub_2412C8228(v12, v13);
  sub_2414B4A68();
  v15 = sub_2414B4A8C();
  swift_release();
  sub_2412C6F44(v12, v13);
  sub_2412EF52C(v12, v13, &v20);
  sub_2412C8228(v12, v13);
  v16 = v20;
  sub_2412DC3FC((uint64_t)v8, (uint64_t)v11, &qword_25437DAC8);
  v17 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v17 = v15;
  v17[8] = v16;
  sub_2412CBE78((uint64_t)v8, &qword_25437DAC8);
  return sub_2412EAEA4((uint64_t)v11, v19, &qword_25437DB00);
}

uint64_t sub_2412EF34C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, _QWORD)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[2];
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_2414B382C();
  v15 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a7 = a1;
  }
  else
  {
    v28 = a4;
    a3(a1, 0);
    v19 = sub_2414B51AC();
    v20 = sub_2414B3E08();
    if (os_log_type_enabled(v20, v19))
    {
      v26[1] = (unint64_t)a7;
      v21 = swift_slowAlloc();
      v26[0] = a5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v27 = a6;
      v24 = v23;
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      v29 = sub_2412E4890(v28, v26[0], &v30);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      a6 = v27;
      MEMORY[0x242695BD8](v25, -1, -1);
      MEMORY[0x242695BD8](v22, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

uint64_t sub_2412EF52C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412EF34C(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C6F44, 0x6E656D6563616C50, 0xE900000000000074, (void (*)(_QWORD, _QWORD))sub_2412C8228, a3);
}

uint64_t sub_2412EF558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48[5];

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DB98);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAB0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DAB8);
  v7 = MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (uint64_t)v38 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DB80);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B4714();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 248))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    swift_release();
    if (v48[0])
    {
      v18 = v48[0];
      sub_2414B46FC();
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BDF3FD0], v14);
      v19 = sub_2414B4738();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      *(_QWORD *)v13 = v19;
      *((_QWORD *)v13 + 1) = 0;
      *((_WORD *)v13 + 8) = 257;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257124AD0);
      sub_2412FDF24(&qword_257122AE0, (uint64_t *)&unk_257124AD0, MEMORY[0x24BDF40E8]);
      sub_241389BE8();
      v20 = v45;
      sub_2414B3A84();
      swift_release();

      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DB88);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
    }
    sub_2412EFAC0((uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v47;
      if (v47)
      {
        v38[1] = v46;
        type metadata accessor for NowPlayingArtworkMirrorReplicatorLayer();
        *(_QWORD *)(swift_allocObject() + 16) = v23;
        v38[0] = v23;
        v24 = v39;
        sub_2414B31A8();
        v25 = sub_2414B4A44();
        v27 = v26;
        KeyPath = swift_getKeyPath();
        v29 = swift_getKeyPath();
        v30 = v40;
        v31 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v9, v24, v41);
        v32 = &v9[*(int *)(v44 + 36)];
        *(_QWORD *)v32 = KeyPath;
        v32[8] = 0;
        *((_QWORD *)v32 + 2) = v29;
        v32[24] = 0;
        *((_QWORD *)v32 + 4) = v25;
        *((_QWORD *)v32 + 5) = v27;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
        v33 = v42;
        sub_2412EAEA4((uint64_t)v9, v42, (uint64_t *)&unk_25437DAB8);
        sub_2412DC3FC(v33, (uint64_t)v13, (uint64_t *)&unk_25437DAB8);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257124AD0);
        sub_2412FDF24(&qword_257122AE0, (uint64_t *)&unk_257124AD0, MEMORY[0x24BDF40E8]);
        sub_241389BE8();
        v34 = (uint64_t)v43;
        sub_2414B3A84();
        v35 = v38[0];

        swift_bridgeObjectRelease();
        sub_2412CBE78(v33, (uint64_t *)&unk_25437DAB8);
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DB88);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
        return sub_2412EAEA4(v34, v45, &qword_25437DB98);
      }
      swift_bridgeObjectRelease();
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DB88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v45, 1, 1, v37);
  }
  else
  {
    _s7ArtworkC17BackgroundArtworkCMa();
    sub_2412F0B40((unint64_t *)&unk_25437F380, 255, (uint64_t (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa, (uint64_t)&unk_2414BEDD8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2412EFAC0@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA5E4(&qword_254380B40, (uint64_t (*)(_QWORD *, uint64_t))sub_2412FAA04, 0xD00000000000001ALL, 0x80000002414CEBE0, a1);
}

uint64_t sub_2412EFAEC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t KeyPath;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38[24];
  uint64_t v39;
  char v40;
  _OWORD v41[3];
  _OWORD v42[3];

  v36 = a2;
  v5 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380FF8);
  MEMORY[0x24BDAC7A8](v34);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D30);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E38);
  MEMORY[0x24BDAC7A8](v35);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[10];
  v41[2] = a1[9];
  v42[0] = v17;
  *(_OWORD *)((char *)v42 + 10) = *(_OWORD *)((char *)a1 + 170);
  v18 = a1[8];
  v41[0] = a1[7];
  v41[1] = v18;
  sub_2412FD220((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v38);
  sub_2412FD220((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  if ((v40 & 1) != 0 || v39 != 1)
  {
    v20 = sub_2414B4648();
    v21 = sub_2414B4A2C();
    v32 = a3;
    v22 = v21;
    v23 = v14;
    v24 = v13;
    v26 = v25;
    sub_2412EF098((uint64_t)a1, (uint64_t)v9);
    v27 = &v9[*(int *)(v34 + 36)];
    *(_QWORD *)v27 = v22;
    *((_QWORD *)v27 + 1) = v26;
    v13 = v24;
    v14 = v23;
    v28 = v37;
    sub_2412DC3FC((uint64_t)v9, (uint64_t)v37 + *(int *)(v33 + 36), &qword_254380FF8);
    *v28 = v20;
    sub_2412CBE78((uint64_t)v9, &qword_254380FF8);
    *v7 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
    swift_storeEnumTagMultiPayload();
    sub_2412EFF3C((uint64_t)v7, (uint64_t)&v12[*(int *)(v35 + 36)]);
    sub_2412EAEA4((uint64_t)v28, (uint64_t)v12, &qword_254380D30);
    KeyPath = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)v12, (uint64_t)v16, &qword_254380E38);
    v30 = &v16[*(int *)(v13 + 36)];
    *(_QWORD *)v30 = KeyPath;
    a3 = v32;
    v30[8] = 1;
    sub_2412CBE78((uint64_t)v12, &qword_254380E38);
    sub_2412EAEA4((uint64_t)v16, a3, &qword_254380E80);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, v19, 1, v13);
}

uint64_t _s11ArtworkViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s11ArtworkViewVMn);
}

uint64_t sub_2412EFE4C(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_2412DC3FC(a1, (uint64_t)v3, (uint64_t *)&unk_254381590);
  sub_2412DC3FC((uint64_t)v3, (uint64_t)&v2, (uint64_t *)&unk_254381590);
  sub_2412EFEF8();
  sub_2414B3844();
  return sub_2412CBE78((uint64_t)v3, (uint64_t *)&unk_254381590);
}

uint64_t sub_2412EFEBC()
{
  sub_2412EFEF8();
  return sub_2414B3838();
}

unint64_t sub_2412EFEF8()
{
  unint64_t result;

  result = qword_25437E418;
  if (!qword_25437E418)
  {
    result = MEMORY[0x242695AE8](&unk_2414CAE9C, &type metadata for CurrentItemIDKey);
    atomic_store(result, (unint64_t *)&qword_25437E418);
  }
  return result;
}

uint64_t sub_2412EFF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkClipShape(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412EFF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  unint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _OWORD *v133;
  _QWORD v134[2];
  _QWORD v135[2];
  _QWORD v136[4];
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];

  v130 = a2;
  v129 = v2 + 272;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381010);
  MEMORY[0x24BDAC7A8](v128);
  v118 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D48);
  MEMORY[0x24BDAC7A8](v104);
  v123 = (uint64_t *)((char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 24);
  v120 = *(_QWORD *)(a1 + 16);
  v119 = v6;
  v8 = _s31PrimaryArtworkViewOrVideoPlayerVMa(255, v120, v6, v7);
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
  v10 = sub_2414B3514();
  v144[0] = MEMORY[0x242695AE8](&unk_2414BF3E4, v8);
  v144[1] = MEMORY[0x24BDECC38];
  v11 = MEMORY[0x24BDED308];
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v144);
  v13 = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
  v143[0] = v12;
  v143[1] = v13;
  v110 = v10;
  v111 = MEMORY[0x242695AE8](v11, v10, v143);
  v14 = sub_2414B3A6C();
  v15 = sub_2414B3514();
  v126 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v105 = (char *)&v85 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381130);
  v90 = v15;
  v17 = sub_2414B3514();
  v125 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v113 = (char *)&v85 - v18;
  v94 = v17;
  v19 = sub_2414B3514();
  v122 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v115 = (char *)&v85 - v20;
  type metadata accessor for ArtworkCornerModifier(255);
  v95 = v19;
  v21 = sub_2414B3514();
  v121 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v112 = (char *)&v85 - v22;
  v91 = v21;
  v23 = sub_2414B3514();
  v124 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v108 = (char *)&v85 - v24;
  v102 = v23;
  v25 = sub_2414B3514();
  v127 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v114 = (char *)&v85 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
  v101 = v27;
  v28 = sub_2412F142C();
  v85 = v28;
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v14);
  v142[0] = v28;
  v142[1] = v29;
  v30 = MEMORY[0x242695AE8](v11, v15, v142);
  v87 = v30;
  v31 = sub_2412C8FC4(&qword_254381128, &qword_254381130, MEMORY[0x24BDEFFA0]);
  v141[0] = v30;
  v141[1] = v31;
  v93 = MEMORY[0x242695AE8](v11, v17, v141);
  v140[0] = v93;
  v140[1] = MEMORY[0x24BDF1050];
  v32 = MEMORY[0x242695AE8](v11, v19, v140);
  v88 = v32;
  v33 = sub_2412F0B40(qword_25437FCF0, 255, type metadata accessor for ArtworkCornerModifier, (uint64_t)&unk_2414C39A0);
  v139[0] = v32;
  v139[1] = v33;
  v89 = MEMORY[0x242695AE8](v11, v21, v139);
  v138[0] = v89;
  v138[1] = MEMORY[0x24BDF0390];
  v34 = MEMORY[0x242695AE8](v11, v23, v138);
  v97 = v34;
  v35 = sub_24130CB04();
  v137[0] = v34;
  v137[1] = v35;
  v98 = v25;
  v36 = MEMORY[0x242695AE8](v11, v25, v137);
  v100 = v36;
  v99 = sub_2412F1100();
  v136[0] = v25;
  v136[1] = v27;
  v136[2] = v36;
  v136[3] = v99;
  v37 = sub_2414B4810();
  v103 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v92 = (char *)&v85 - v38;
  v39 = sub_2414B3514();
  v40 = *(_QWORD *)(v39 - 8);
  v107 = v39;
  v116 = v40;
  MEMORY[0x24BDAC7A8](v39);
  v96 = (char *)&v85 - v41;
  v42 = sub_2414B3514();
  v117 = *(_QWORD *)(v42 - 8);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v106 = (char *)&v85 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v109 = (uint64_t)&v85 - v45;
  v46 = sub_2414B4648();
  v47 = sub_2414B4A2C();
  v49 = v48;
  v50 = v118;
  v51 = v86;
  v52 = v120;
  v53 = v119;
  sub_2412EFAEC(v86, v120, v118);
  v54 = (uint64_t *)(v50 + *(int *)(v128 + 36));
  *v54 = v47;
  v54[1] = v49;
  v55 = v123;
  sub_2412DC3FC(v50, (uint64_t)v123 + *(int *)(v104 + 36), &qword_254381010);
  *v55 = v46;
  sub_2412CBE78(v50, &qword_254381010);
  sub_2414B4A2C();
  v131 = v52;
  v132 = v53;
  v133 = v51;
  v56 = v105;
  sub_2414B4120();
  sub_2412CBE78((uint64_t)v55, &qword_254380D48);
  LOBYTE(v136[0]) = *(_BYTE *)(v129 + 1);
  v57 = *((_QWORD *)v51 + 24);
  v58 = *((unsigned __int8 *)v51 + 200);
  sub_2412C6F44(v57, v58);
  sub_2412F0F50(v57, v58);
  sub_2412C8228(v57, v58);
  sub_2414B3CA0();
  sub_2414B4B64();
  sub_2412F14B0();
  v59 = v113;
  v60 = v90;
  sub_2414B43D8();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v56, v60);
  sub_2414B3520();
  sub_2414B3E44();
  v61 = v115;
  v62 = v94;
  sub_2414B42D0();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v59, v62);
  v63 = v112;
  v64 = v95;
  sub_2412F115C(v95, v88);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v61, v64);
  v65 = v108;
  v66 = v91;
  sub_2414B42E8();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v63, v66);
  v67 = *((_QWORD *)v51 + 26);
  v68 = *((unsigned __int8 *)v51 + 216);
  sub_2412C6F44(v67, v68);
  sub_2412F65C0(v67, v68, v136);
  sub_2412C8228(v67, v68);
  v69 = v114;
  v70 = v102;
  sub_2414B42DC();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v65, v70);
  sub_2412F0D64((uint64_t)v136);
  v71 = v92;
  v72 = v98;
  sub_2414B4450();
  sub_2412CBE78((uint64_t)v136, (uint64_t *)&unk_254381590);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v69, v72);
  v73 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v37);
  v74 = v96;
  sub_2414B445C();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v71, v37);
  LOBYTE(v71) = *((_BYTE *)v51 + 272);
  v75 = swift_retain();
  v76 = sub_2412F0D3C(v75, (char)v71);
  swift_release();
  swift_getKeyPath();
  v136[0] = v76;
  sub_2412F0B40((unint64_t *)&qword_25437E490, 255, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  swift_release();
  v77 = sub_2413182B8();
  v135[0] = v73;
  v135[1] = v77;
  v78 = MEMORY[0x24BDED308];
  v79 = v107;
  v80 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v107, v135);
  v81 = (uint64_t)v106;
  sub_2414B44F8();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v74, v79);
  v134[0] = v80;
  v134[1] = MEMORY[0x24BDECC38];
  MEMORY[0x242695AE8](v78, v42, v134);
  v82 = v109;
  sub_2412FBF34(v81, v42, v109);
  v83 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
  v83(v81, v42);
  sub_2412EEA1C(v82, v42, v130);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v82, v42);
}

uint64_t sub_2412F0B40(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x242695AE8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2412F0B80(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v12 = sub_2414B51AC();
    v13 = sub_2414B3E08();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v21 = a4;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = a3;
      v18 = v16;
      v23 = v16;
      *(_DWORD *)v15 = 136315138;
      v22 = sub_2412E4890(v17, v21, &v23);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v18, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_2412F0D3C(uint64_t a1, char a2)
{
  return sub_2412F0B80(a1, a2, 0xD000000000000010, 0x80000002414CEED0);
}

uint64_t _s31PrimaryArtworkViewOrVideoPlayerVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s31PrimaryArtworkViewOrVideoPlayerVMn);
}

uint64_t sub_2412F0D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  _QWORD v17[5];
  char v18;

  v2 = v1;
  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v2, (uint64_t)v17, &qword_254380B78);
  if (v18 == 1)
    return sub_2412EAEA4((uint64_t)v17, a1, (uint64_t *)&unk_254381590);
  v9 = sub_2414B51AC();
  v10 = sub_2414B3E08();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[1] = a1;
    v14 = v13;
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15[2] = sub_2412E4890(0xD000000000000015, 0x80000002414CEEF0, &v16);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v14, -1, -1);
    MEMORY[0x242695BD8](v12, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2412F0F50(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_2414B51AC();
    v9 = sub_2414B3E08();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_2412E4890(17481, 0xE200000000000000, &v15);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v12, -1, -1);
      MEMORY[0x242695BD8](v11, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C821C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

unint64_t sub_2412F1100()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2543815A0;
  if (!qword_2543815A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
    v2 = MEMORY[0x24BEE23D8];
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2543815A0);
  }
  return result;
}

uint64_t sub_2412F115C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = a2;
  v3 = type metadata accessor for ArtworkCornerStyle(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v9 = type metadata accessor for ArtworkCornerModifier(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = swift_getKeyPath();
  v11[8] = 0;
  *((_QWORD *)v11 + 2) = swift_getKeyPath();
  v11[56] = 0;
  *((_QWORD *)v11 + 8) = swift_getKeyPath();
  v11[72] = 0;
  _s14DefaultArtworkCMa();
  sub_2412C8030(&qword_25437F478, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
  *((_QWORD *)v11 + 10) = sub_2414B3658();
  *((_QWORD *)v11 + 11) = v12;
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
  *((_QWORD *)v11 + 12) = sub_2414B3658();
  *((_QWORD *)v11 + 13) = v13;
  *v8 = 0;
  v14 = (char *)v8 + *(int *)(v3 + 20);
  v15 = *MEMORY[0x24BDEEB78];
  v16 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  sub_2412C6A50((uint64_t)v8, (uint64_t)v6, type metadata accessor for ArtworkCornerStyle);
  sub_2414B4798();
  sub_2412C68F4((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
  MEMORY[0x242693DC0](v11, a1, v9, v18);
  return sub_2412C68F4((uint64_t)v11, type metadata accessor for ArtworkCornerModifier);
}

uint64_t sub_2412F137C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.Lifecycle();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for NowPlayingViewModel.Lifecycle()
{
  return objc_opt_self();
}

uint64_t sub_2412F13D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s14DefaultArtworkCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s14DefaultArtworkCMa()
{
  return objc_opt_self();
}

unint64_t sub_2412F142C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254380D38;
  if (!qword_254380D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D48);
    v2 = sub_2412C8FC4((unint64_t *)&unk_254381000, &qword_254381010, MEMORY[0x24BDEF370]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254380D38);
  }
  return result;
}

unint64_t sub_2412F14B0()
{
  unint64_t result;

  result = qword_25437E658;
  if (!qword_25437E658)
  {
    result = MEMORY[0x242695AE8](&unk_2414BF3A4, &type metadata for ArtworkGeometryID);
    atomic_store(result, (unint64_t *)&qword_25437E658);
  }
  return result;
}

uint64_t sub_2412F14F4@<X0>(_BYTE *a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = *a4;
  v9 = *a5;
  v10 = a5[1];
  *(_BYTE *)a6 = *a1;
  sub_2412FAA04(a2, a6 + 8);
  *(_BYTE *)(a6 + 48) = v7;
  *(_BYTE *)(a6 + 49) = v8;
  *(_QWORD *)(a6 + 56) = v9;
  *(_QWORD *)(a6 + 64) = v10;
  *(_QWORD *)(a6 + 72) = sub_2414B3658();
  *(_QWORD *)(a6 + 80) = v11;
  result = swift_getKeyPath();
  *(_QWORD *)(a6 + 88) = result;
  *(_QWORD *)(a6 + 96) = 0;
  *(_BYTE *)(a6 + 104) = 0;
  return result;
}

uint64_t sub_2412F1584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_2414B3A78();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_2414B3A84();
}

uint64_t sub_2412F1648(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;

  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  _s14DefaultArtworkCMa();
  sub_2412C8030(&qword_25437F478, (uint64_t (*)(uint64_t))_s14DefaultArtworkCMa, (uint64_t)&unk_2414BF6D8);
  v8 = KeyPath;
  v9 = 0;
  v10 = v5;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = sub_2414B3658();
  v17 = v6;
  MEMORY[0x242693DC0](&v8, a1, &type metadata for ArtworkStyleModifier, a2);
  sub_2412C821C(KeyPath, 0);
  sub_2412C823C(v5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return swift_release();
}

uint64_t sub_2412F1768(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_2412F1B18(a1, (uint64_t)v3);
  sub_2412F1B18((uint64_t)v3, (uint64_t)&v2);
  sub_2412C8430();
  sub_2414B3844();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t NowPlayingArtworkTreatment.isEqual(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char v14;
  _BYTE v17[40];

  v4 = sub_2414B53B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v17[-v7 - 8];
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2412F1B18(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    v14 = sub_2414B4CE4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_2412F192C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_2414B58CC();
    sub_2414B58D8();
    result = sub_2414B58FC();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_2412F1B0C(uint64_t *a1, uint64_t *a2)
{
  return sub_2412F192C(*a1, *a2);
}

uint64_t sub_2412F1B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2412F1B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  _QWORD v132[2];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  ValueMetadata *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v126 = a2;
  v124 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v123 = v3;
  v122 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_2414B3CD0();
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v119 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v125 = a1;
  v127 = _s25BackdropConditionObserverVMa(0, v5, v6, v7);
  v117 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v116 = (uint64_t)&v90 - v8;
  _s18ArtworkPlaceholderVMa(255, v5, v6, v9);
  sub_2414B3514();
  v137 = sub_2414B53B0();
  _s11ArtworkViewVMa(255, v5, v6, v10);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381070);
  sub_2414B3514();
  v138 = (ValueMetadata *)sub_2414B53B0();
  _s21FullScreenContentViewVMa(255, v5, v6, v11);
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_2414B3604();
  v133 = sub_2414B3514();
  v134 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25437D630);
  _s19HeaderDismissButtonVMa(255, v5, v6, v12);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  v135 = sub_2414B3514();
  v115 = v6;
  _s9DebugViewVMa(255, v5, v6, v13);
  sub_2414B3514();
  sub_2414B3514();
  v136 = sub_2414B53B0();
  swift_getTupleTypeMetadata();
  sub_2414B4B1C();
  v139 = sub_2414B3A90();
  _s21MiniPlayerContentViewVMa(255, v5, v6, v14);
  sub_2414B3514();
  sub_2414B3514();
  v140 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  sub_2414B3514();
  v141 = sub_2414B53B0();
  swift_getTupleTypeMetadata();
  v110 = sub_2414B4B1C();
  v109 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v110);
  v15 = sub_2414B48AC();
  v111 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v90 - v16;
  v106 = v15;
  v18 = v127;
  v19 = sub_2414B3514();
  v112 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v107 = (char *)&v90 - v20;
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDF4750], v15);
  v105 = v21;
  v22 = MEMORY[0x242695AE8](&unk_2414CB568, v18);
  v132[0] = v21;
  v132[1] = v22;
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v19, v132);
  v137 = v19;
  v138 = (ValueMetadata *)v23;
  v24 = v19;
  v103 = v19;
  v25 = (ValueMetadata *)v23;
  v104 = v23;
  v26 = MEMORY[0x242695A94](0, &v137, MEMORY[0x24BDF2F10], 0);
  v113 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v102 = (char *)&v90 - v27;
  v137 = v24;
  v138 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v137 = v26;
  v138 = (ValueMetadata *)OpaqueTypeConformance2;
  v29 = MEMORY[0x24BDF3718];
  v30 = MEMORY[0x242695A94](255, &v137, MEMORY[0x24BDF3718], 0);
  v114 = v26;
  v137 = v26;
  v138 = (ValueMetadata *)OpaqueTypeConformance2;
  v108 = OpaqueTypeConformance2;
  v31 = swift_getOpaqueTypeConformance2();
  v137 = v30;
  v138 = (ValueMetadata *)v31;
  v32 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v30;
  v138 = (ValueMetadata *)v31;
  v33 = swift_getOpaqueTypeConformance2();
  v137 = v32;
  v138 = (ValueMetadata *)v33;
  v34 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v32;
  v138 = (ValueMetadata *)v33;
  v35 = swift_getOpaqueTypeConformance2();
  v137 = v34;
  v138 = (ValueMetadata *)v35;
  v36 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v34;
  v138 = (ValueMetadata *)v35;
  v37 = swift_getOpaqueTypeConformance2();
  v137 = v36;
  v138 = (ValueMetadata *)v37;
  v38 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v36;
  v138 = (ValueMetadata *)v37;
  v39 = swift_getOpaqueTypeConformance2();
  v137 = v38;
  v138 = (ValueMetadata *)v39;
  v40 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v38;
  v138 = (ValueMetadata *)v39;
  v41 = swift_getOpaqueTypeConformance2();
  v137 = v40;
  v138 = (ValueMetadata *)v41;
  v42 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v40;
  v138 = (ValueMetadata *)v41;
  v43 = swift_getOpaqueTypeConformance2();
  v137 = v42;
  v138 = (ValueMetadata *)v43;
  v44 = MEMORY[0x242695A94](255, &v137, v29, 0);
  v137 = v42;
  v138 = (ValueMetadata *)v43;
  v45 = swift_getOpaqueTypeConformance2();
  v137 = v44;
  v138 = (ValueMetadata *)v45;
  v46 = MEMORY[0x242695A94](0, &v137, v29, 0);
  v92 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v91 = (uint64_t)&v90 - v47;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381310);
  v93 = v46;
  v48 = sub_2414B3514();
  v101 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v100 = (char *)&v90 - v49;
  v137 = v44;
  v138 = (ValueMetadata *)v45;
  v50 = swift_getOpaqueTypeConformance2();
  v51 = sub_2412C8FC4((unint64_t *)&unk_254381300, &qword_254381310, MEMORY[0x24BDF1028]);
  v90 = v50;
  v131[0] = v50;
  v131[1] = v51;
  v52 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v48, v131);
  v53 = sub_2412F837C();
  v137 = v48;
  v138 = &type metadata for NowPlayingViewModel.PlayerStyle;
  v98 = v52;
  v139 = v52;
  v140 = v53;
  v95 = v53;
  v99 = MEMORY[0x242695A94](0, &v137, MEMORY[0x24BDF3908], 0);
  v97 = *(_QWORD *)(v99 - 8);
  v54 = MEMORY[0x24BDAC7A8](v99);
  v94 = (char *)&v90 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v96 = (uint64_t)&v90 - v56;
  sub_2414B4A2C();
  v57 = v115;
  v128 = v5;
  v129 = v115;
  v58 = v118;
  v130 = v118;
  sub_2414B48A0();
  v59 = v116;
  v110 = v5;
  v60 = v5;
  v61 = v57;
  sub_2412F84B0(v60, v57, v116);
  v62 = v107;
  v63 = v106;
  v64 = v127;
  MEMORY[0x242693DC0](v59, v106, v127, v105);
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v59, v64);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v17, v63);
  v65 = v119;
  sub_2414B3CC4();
  v66 = v102;
  v67 = v103;
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v121);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v62, v67);
  if (*(_QWORD *)(v58 + 8))
  {
    v68 = swift_unknownObjectRetain();
    v69 = v91;
    v70 = v114;
    v71 = v110;
    sub_2412F2878(v68, v114, v110, v108, v61, v91);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v66, v70);
    swift_getKeyPath();
    v137 = sub_2414B4B10();
    LOBYTE(v138) = 0;
    v72 = v100;
    v73 = v93;
    sub_2414B41C8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v69, v73);
    v74 = v125;
    v75 = v58 + *(int *)(v125 + 56);
    v76 = *(_QWORD *)v75;
    v77 = *(_BYTE *)(v75 + 8);
    sub_2412C7080(*(_QWORD *)v75, v77);
    sub_2412F65C0(v76, v77, &v137);
    sub_2412C821C(v76, v77);
    LOBYTE(v133) = v137;
    v78 = v124;
    v79 = v61;
    v80 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v122, v58, v74);
    v81 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = v71;
    *(_QWORD *)(v82 + 24) = v79;
    (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v82 + v81, v80, v74);
    v83 = (uint64_t)v94;
    v84 = v98;
    v85 = v95;
    sub_2414B4564();
    swift_release();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v72, v48);
    v137 = v48;
    v138 = &type metadata for NowPlayingViewModel.PlayerStyle;
    v139 = v84;
    v140 = v85;
    swift_getOpaqueTypeConformance2();
    v86 = v96;
    v87 = v99;
    sub_2412FBF34(v83, v99, v96);
    v88 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v88(v83, v87);
    sub_2412EEA1C(v86, v87, v126);
    return ((uint64_t (*)(uint64_t, uint64_t))v88)(v86, v87);
  }
  else
  {
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t _s9DebugViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s9DebugViewVMn);
}

uint64_t _s21MiniPlayerContentViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21MiniPlayerContentViewVMn);
}

uint64_t sub_2412F2878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v152 = a3;
  v144 = a6;
  v10 = *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
  v142 = *(_QWORD *)(a2 - 8);
  v143 = v10;
  MEMORY[0x24BDAC7A8](a1);
  v141 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_2414B3010();
  v149 = *(void (**)(char *, uint64_t))(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v13 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = a2;
  v156 = a4;
  v14 = MEMORY[0x24BDF3718];
  v15 = MEMORY[0x242695A94](0, &v155, MEMORY[0x24BDF3718], 0);
  v121 = *(_QWORD *)(v15 - 8);
  v16 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v111 = (char *)&v110 - v17;
  v155 = a2;
  v156 = a4;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v155 = v16;
  v156 = OpaqueTypeConformance2;
  v19 = v16;
  v113 = v16;
  v20 = OpaqueTypeConformance2;
  v114 = OpaqueTypeConformance2;
  v21 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v125 = *(_QWORD *)(v21 - 8);
  v22 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v112 = (char *)&v110 - v23;
  v155 = v19;
  v156 = v20;
  v24 = swift_getOpaqueTypeConformance2();
  v155 = v22;
  v156 = v24;
  v25 = v22;
  v115 = v22;
  v26 = v24;
  v116 = v24;
  v27 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v129 = *(_QWORD *)(v27 - 8);
  v28 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v145 = (char *)&v110 - v29;
  v155 = v25;
  v156 = v26;
  v30 = swift_getOpaqueTypeConformance2();
  v155 = v28;
  v156 = v30;
  v31 = v28;
  v119 = v28;
  v32 = v30;
  v120 = v30;
  v33 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v133 = *(_QWORD *)(v33 - 8);
  v34 = v33;
  MEMORY[0x24BDAC7A8](v33);
  v118 = (char *)&v110 - v35;
  v155 = v31;
  v156 = v32;
  v36 = swift_getOpaqueTypeConformance2();
  v155 = v34;
  v156 = v36;
  v123 = v34;
  v37 = v36;
  v124 = v36;
  v38 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v134 = *(_QWORD *)(v38 - 8);
  v39 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v122 = (char *)&v110 - v40;
  v155 = v34;
  v156 = v37;
  v41 = swift_getOpaqueTypeConformance2();
  v155 = v39;
  v156 = v41;
  v127 = v39;
  v42 = v41;
  v128 = v41;
  v43 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v137 = *(_QWORD *)(v43 - 8);
  v44 = v43;
  MEMORY[0x24BDAC7A8](v43);
  v126 = (char *)&v110 - v45;
  v155 = v39;
  v156 = v42;
  v46 = swift_getOpaqueTypeConformance2();
  v155 = v44;
  v156 = v46;
  v47 = v44;
  v131 = v44;
  v48 = v46;
  v132 = v46;
  v49 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v138 = *(_QWORD *)(v49 - 8);
  v50 = v49;
  v135 = v49;
  MEMORY[0x24BDAC7A8](v49);
  v130 = (char *)&v110 - v51;
  v155 = v47;
  v156 = v48;
  v136 = swift_getOpaqueTypeConformance2();
  v155 = v50;
  v156 = v136;
  v52 = MEMORY[0x242695A94](0, &v155, v14, 0);
  v53 = *(_QWORD *)(v52 - 8);
  v139 = v52;
  v140 = v53;
  MEMORY[0x24BDAC7A8](v52);
  v146 = (char *)&v110 - v54;
  sub_2414B301C();
  v55 = (_QWORD *)swift_allocObject();
  v56 = v152;
  v55[2] = a2;
  v55[3] = v56;
  v55[4] = a4;
  v55[5] = a5;
  v154 = a1;
  v55[6] = a1;
  swift_unknownObjectRetain();
  v57 = v111;
  v151 = a4;
  sub_2414B44D4();
  swift_release();
  v58 = (void (*)(char *, uint64_t))*((_QWORD *)v149 + 1);
  v59 = v153;
  v58(v13, v153);
  v149 = v58;
  v117 = 0xD00000000000001FLL;
  sub_2414B301C();
  v60 = (_QWORD *)swift_allocObject();
  v60[2] = a2;
  v60[3] = v56;
  v150 = a2;
  v60[4] = a4;
  v60[5] = a5;
  v148 = a5;
  v60[6] = v154;
  swift_unknownObjectRetain();
  v61 = v112;
  v62 = v113;
  sub_2414B44D4();
  swift_release();
  v58(v13, v59);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v57, v62);
  sub_2414B301C();
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = a2;
  v65 = v151;
  v64 = v152;
  v63[3] = v152;
  v63[4] = v65;
  v63[5] = a5;
  v63[6] = v154;
  swift_unknownObjectRetain();
  v66 = v115;
  sub_2414B44D4();
  swift_release();
  v67 = v149;
  v149(v13, v59);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v61, v66);
  sub_2414B301C();
  v68 = (_QWORD *)swift_allocObject();
  v69 = v150;
  v68[2] = v150;
  v68[3] = v64;
  v68[4] = v65;
  v70 = v148;
  v68[5] = v148;
  v68[6] = v154;
  swift_unknownObjectRetain();
  v71 = v118;
  v72 = v119;
  v73 = v145;
  sub_2414B44D4();
  swift_release();
  v67(v13, v59);
  v74 = v67;
  (*(void (**)(char *, uint64_t))(v129 + 8))(v73, v72);
  sub_2414B301C();
  v75 = (_QWORD *)swift_allocObject();
  v76 = v69;
  v77 = v151;
  v78 = v152;
  v75[2] = v69;
  v75[3] = v78;
  v75[4] = v77;
  v75[5] = v70;
  v75[6] = v154;
  swift_unknownObjectRetain();
  v79 = v122;
  v80 = v123;
  sub_2414B44D4();
  swift_release();
  v81 = v153;
  v74(v13, v153);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v71, v80);
  sub_2414B301C();
  v82 = (_QWORD *)swift_allocObject();
  v82[2] = v76;
  v82[3] = v78;
  v83 = v78;
  v84 = v151;
  v85 = v148;
  v82[4] = v151;
  v82[5] = v85;
  v82[6] = v154;
  swift_unknownObjectRetain();
  v86 = v126;
  v87 = v127;
  v88 = v79;
  sub_2414B44D4();
  swift_release();
  v89 = v149;
  v149(v13, v81);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v88, v87);
  sub_2414B301C();
  v90 = (_QWORD *)swift_allocObject();
  v90[2] = v150;
  v90[3] = v83;
  v91 = v84;
  v90[4] = v84;
  v90[5] = v85;
  v90[6] = v154;
  swift_unknownObjectRetain();
  v92 = v130;
  v93 = v131;
  sub_2414B44D4();
  swift_release();
  v89(v13, v153);
  v94 = v89;
  (*(void (**)(char *, uint64_t))(v137 + 8))(v86, v93);
  sub_2414B301C();
  v95 = (_QWORD *)swift_allocObject();
  v96 = v150;
  v97 = v152;
  v95[2] = v150;
  v95[3] = v97;
  v95[4] = v91;
  v95[5] = v85;
  v98 = v154;
  v95[6] = v154;
  swift_unknownObjectRetain();
  v99 = v135;
  v100 = v136;
  sub_2414B44D4();
  swift_release();
  v94(v13, v153);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v92, v99);
  sub_2414B301C();
  v102 = v141;
  v101 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v141, v147, v96);
  v103 = (*(unsigned __int8 *)(v101 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  v104 = (char *)swift_allocObject();
  v105 = v152;
  *((_QWORD *)v104 + 2) = v96;
  *((_QWORD *)v104 + 3) = v105;
  v106 = v148;
  *((_QWORD *)v104 + 4) = v151;
  *((_QWORD *)v104 + 5) = v106;
  *((_QWORD *)v104 + 6) = v98;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v104[v103], v102, v96);
  swift_unknownObjectRetain();
  v155 = v99;
  v156 = v100;
  swift_getOpaqueTypeConformance2();
  v107 = v139;
  v108 = v146;
  sub_2414B44D4();
  swift_release();
  v149(v13, v153);
  return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v108, v107);
}

uint64_t sub_2412F33EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD *v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(__int128 *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  char *v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (**v234)(char *, uint64_t);
  id v235;
  void *v236;
  char internalBuild;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (**v267)(char *, uint64_t);
  uint64_t v268;
  uint64_t v269;
  void (*v270)(uint64_t, uint64_t);
  uint64_t v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  char v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  _QWORD *v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  void (*v291)(char *, uint64_t);
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  __int128 v296;
  __int128 v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  void (*v314)(uint64_t, uint64_t);
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char v318;
  char *v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  void (*v339)(uint64_t, uint64_t);
  uint64_t v340;
  void (*v341)(char *, uint64_t);
  void (*v342)(char *, uint64_t);
  uint64_t v343;
  void (*v344)(__int128 *, uint64_t);
  uint64_t result;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  unint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  void (**v375)(char *, uint64_t);
  uint64_t v376;
  char *v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  __int128 v389;
  uint64_t KeyPath;
  char *v391;
  char *v392;
  __int128 v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  _OWORD *v398;
  char *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  char *v404;
  char *v405;
  uint64_t v406;
  char *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  _QWORD *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  int v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD v441[2];
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  _OWORD v449[12];
  _QWORD v450[2];
  _QWORD v451[2];
  _QWORD v452[2];
  _QWORD v453[2];
  uint64_t v454;
  _QWORD v455[2];
  _QWORD v456[2];
  _QWORD v457[2];
  _QWORD v458[2];
  _QWORD v459[2];
  _QWORD v460[2];
  _QWORD v461[2];
  _QWORD v462[2];
  _QWORD v463[2];
  _QWORD v464[2];
  _QWORD v465[2];
  _QWORD v466[2];
  _QWORD v467[2];
  _QWORD v468[2];
  _QWORD v469[2];
  uint64_t v470;
  _QWORD v471[2];
  _QWORD v472[2];
  uint64_t v473;
  _QWORD v474[2];
  _QWORD v475[2];
  uint64_t v476;
  _QWORD v477[7];
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char v482;
  _QWORD v483[2];
  __int128 v484;
  char *v485;
  char *v486;
  uint64_t v487;
  __int128 v488;
  __int128 v489;
  char v490;
  _QWORD v491[3];
  uint64_t v492;
  uint64_t v493;
  _QWORD v494[2];
  _QWORD v495[2];
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  _OWORD v503[2];
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  _OWORD v510[3];
  _QWORD v511[2];
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  _OWORD v518[2];
  _QWORD v519[2];
  _QWORD v520[2];
  _OWORD v521[5];
  __int128 v522;
  _OWORD v523[9];
  uint64_t v524;
  uint64_t v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  uint64_t v530;
  uint64_t v531;
  unsigned __int8 v532;
  __int128 v533;
  __int128 v534;
  char v535;
  _QWORD v536[2];
  _BYTE v537[40];
  __int128 v538;
  __int128 v539;
  _OWORD v540[3];
  _OWORD v541[2];
  _OWORD v542[3];
  _OWORD v543[3];

  v440 = a1;
  v410 = a4;
  v351 = sub_2414B2F8C();
  v349 = *(_QWORD *)(v351 - 8);
  MEMORY[0x24BDAC7A8](v351);
  v407 = (char *)&v346 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11ArtworkViewVMa(255, a2, a3, v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v436 = v8;
  v9 = sub_2414B3514();
  v408 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v350 = (char *)&v346 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v352 = (uint64_t)&v346 - v12;
  v423 = v13;
  v432 = sub_2414B53B0();
  v409 = *(_QWORD *)(v432 - 8);
  v14 = MEMORY[0x24BDAC7A8](v432);
  v424 = (uint64_t)&v346 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v422 = (uint64_t)&v346 - v16;
  v400 = _s21MiniPlayerContentViewVMa(255, a2, a3, v17);
  v401 = sub_2414B3514();
  v18 = sub_2414B3514();
  sub_2414B3DB4();
  v402 = v18;
  v431 = sub_2414B3514();
  v420 = *(_QWORD *)(v431 - 8);
  v19 = MEMORY[0x24BDAC7A8](v431);
  v421 = (char *)&v346 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v403 = (char *)&v346 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v404 = (char *)&v346 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v405 = (char *)&v346 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v430 = (uint64_t)&v346 - v27;
  _s21FullScreenContentViewVMa(255, a2, a3, v28);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  KeyPath = AssociatedTypeWitness;
  *(_QWORD *)&v389 = AssociatedConformanceWitness;
  v31 = sub_2414B3604();
  *(_QWORD *)&v529 = sub_2414B3514();
  *((_QWORD *)&v529 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25437D630);
  _s19HeaderDismissButtonVMa(255, a2, a3, v32);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381070);
  v530 = sub_2414B3514();
  *(_QWORD *)&v393 = _s9DebugViewVMa(255, a2, a3, v33);
  v394 = sub_2414B3514();
  sub_2414B3514();
  v531 = sub_2414B53B0();
  swift_getTupleTypeMetadata();
  v34 = sub_2414B4B1C();
  v348 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v347 = (char *)&v346 - v35;
  v37 = _s19HeaderDismissButtonVMa(0, a2, a3, v36);
  v372 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v371 = (uint64_t)&v346 - v38;
  v373 = v39;
  v40 = sub_2414B3514();
  v375 = *(void (***)(char *, uint64_t))(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v374 = (char *)&v346 - v41;
  v376 = v42;
  v43 = sub_2414B3514();
  v378 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v377 = (char *)&v346 - v44;
  v380 = v45;
  v46 = sub_2414B3514();
  v381 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v379 = (char *)&v346 - v47;
  v383 = v48;
  v49 = sub_2414B3514();
  v385 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v382 = (char *)&v346 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381070);
  v386 = v49;
  v428 = v51;
  v415 = sub_2414B3514();
  v396 = *(_QWORD *)(v415 - 8);
  v52 = MEMORY[0x24BDAC7A8](v415);
  v392 = (char *)&v346 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v384 = (char *)&v346 - v55;
  MEMORY[0x24BDAC7A8](v54);
  v414 = (uint64_t)&v346 - v56;
  v58 = type metadata accessor for NowPlayingView(0, a2, a3, v57);
  v357 = *(_QWORD *)(v58 - 8);
  v59 = MEMORY[0x24BDAC7A8](v58);
  v369 = (char *)&v346 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v59);
  v356 = (char *)&v346 - v61;
  v425 = (_QWORD *)sub_2414B391C();
  v416 = *(v425 - 1);
  v62 = MEMORY[0x24BDAC7A8](v425);
  v399 = (char *)&v346 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = MEMORY[0x24BDAC7A8](v62);
  v370 = (char *)&v346 - v65;
  MEMORY[0x24BDAC7A8](v64);
  v360 = (char *)&v346 - v66;
  v68 = _s21FullScreenContentViewVMa(0, a2, a3, v67);
  v354 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v353 = (uint64_t)&v346 - v69;
  v355 = v70;
  v71 = sub_2414B3514();
  v358 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v411 = (uint64_t)&v346 - v72;
  v359 = v73;
  v74 = sub_2414B3514();
  v362 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v361 = (char *)&v346 - v75;
  v363 = v76;
  v77 = (int *)v58;
  v78 = sub_2414B3514();
  v365 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v364 = (char *)&v346 - v79;
  v366 = v80;
  v81 = sub_2414B3514();
  v387 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v367 = (char *)&v346 - v82;
  v388 = v83;
  *((_QWORD *)&v389 + 1) = v31;
  v413 = sub_2414B3514();
  v395 = *(_QWORD *)(v413 - 8);
  v84 = MEMORY[0x24BDAC7A8](v413);
  v391 = (char *)&v346 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = MEMORY[0x24BDAC7A8](v84);
  v368 = (char *)&v346 - v87;
  MEMORY[0x24BDAC7A8](v86);
  v412 = (uint64_t)&v346 - v88;
  v419 = v34;
  v406 = sub_2414B3A90();
  v417 = *(_QWORD *)(v406 - 8);
  v89 = MEMORY[0x24BDAC7A8](v406);
  v418 = (char *)&v346 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v89);
  v429 = (char *)&v346 - v91;
  v92 = v440 + *(int *)(v58 + 60);
  v93 = *(_QWORD *)v92;
  v94 = *(_QWORD *)(v92 + 8);
  v346 = v92;
  LOBYTE(v31) = *(_BYTE *)(v92 + 16);
  sub_2412C72E4(v93, v94, v31);
  sub_2412EEDF4(v93, v94, v31, (uint64_t *)&v529);
  sub_2412C822C(v93, v94, v31);
  v95 = *((_QWORD *)&v529 + 1);
  swift_bridgeObjectRelease();
  v97 = MEMORY[0x24BDF1050];
  v439 = a2;
  v427 = v58;
  if (v95
    || (v98 = v440 + *(int *)(v58 + 56),
        v99 = *(_QWORD *)v98,
        v100 = *(_BYTE *)(v98 + 8),
        sub_2412C7080(*(_QWORD *)v98, v100),
        sub_2412F65C0(v99, v100, &v529),
        sub_2412C821C(v99, v100),
        v529 != 1))
  {
    *(_QWORD *)&v521[0] = 2;
    v117 = _s18ArtworkPlaceholderVMa(255, a2, a3, v96);
    v118 = sub_2414B3514();
    memset((char *)v521 + 8, 0, 25);
    v536[0] = MEMORY[0x242695AE8](&unk_2414BF158, v117);
    v536[1] = v97;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v118, v536);
    sub_2412F65F0((uint64_t)v521, (uint64_t)&v529);
    v438 = *((_QWORD *)&v529 + 1);
    v435 = v529;
    v434 = v530;
    v426 = v531;
    v116 = v532;
  }
  else
  {
    v101 = sub_2412FB568(1);
    v103 = v102;
    LOBYTE(v529) = v101 & 1;
    v105 = v104 & 1;
    *((_QWORD *)&v529 + 1) = v102;
    LOBYTE(v530) = v104 & 1;
    sub_2414B3520();
    sub_2414B3E44();
    v107 = _s18ArtworkPlaceholderVMa(0, a2, a3, v106);
    v108 = MEMORY[0x242695AE8](&unk_2414BF158, v107);
    sub_2414B42D0();
    sub_2412C821C(v103, v105);
    v109 = *((_QWORD *)&v521[0] + 1);
    v110 = v521[1];
    LOBYTE(v442) = v521[0];
    *((_QWORD *)&v442 + 1) = *((_QWORD *)&v521[0] + 1);
    LOBYTE(v443) = v521[1];
    *((_QWORD *)&v443 + 1) = *((_QWORD *)&v521[1] + 1);
    LOBYTE(v444) = v521[2];
    v77 = (int *)v427;
    v111 = sub_2414B3514();
    v441[0] = v108;
    v97 = MEMORY[0x24BDF1050];
    v441[1] = MEMORY[0x24BDF1050];
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v111, v441);
    sub_2412FBF34((uint64_t)&v442, v111, (uint64_t)&v529);
    sub_2412C821C(v109, v110);
    v112 = *((_QWORD *)&v529 + 1);
    v113 = v530;
    LOBYTE(v521[0]) = v529;
    *((_QWORD *)&v521[0] + 1) = *((_QWORD *)&v529 + 1);
    LOBYTE(v521[1]) = v530;
    *((_QWORD *)&v521[1] + 1) = v531;
    LOBYTE(v521[2]) = v532;
    sub_2412EEA1C((uint64_t)v521, v111, (uint64_t)&v442);
    sub_2412C821C(v112, v113);
    v114 = *((_QWORD *)&v442 + 1);
    v115 = v443;
    *(_QWORD *)&v504 = v442;
    *((_QWORD *)&v504 + 1) = *((_QWORD *)&v442 + 1);
    *(_QWORD *)&v505 = v443;
    *((_QWORD *)&v505 + 1) = *((_QWORD *)&v443 + 1);
    LOBYTE(v506) = v444;
    sub_2412F65F0((uint64_t)&v504, (uint64_t)v521);
    sub_2412C821C(v114, v115);
    v438 = *((_QWORD *)&v521[0] + 1);
    v435 = *(_QWORD *)&v521[0];
    v426 = *((_QWORD *)&v521[1] + 1);
    v434 = *(_QWORD *)&v521[1];
    v116 = LOBYTE(v521[2]);
  }
  v433 = v116;
  v119 = v440;
  v397 = v440 + 24;
  sub_2412EFAC0((uint64_t)&v442);
  v120 = *((_QWORD *)&v443 + 1);
  v121 = v444;
  __swift_project_boxed_opaque_existential_1(&v442, *((uint64_t *)&v443 + 1));
  v122 = (_OWORD *)(v119 + v77[12]);
  v123 = v122[3];
  v542[2] = v122[2];
  v543[0] = v123;
  *(_OWORD *)((char *)v543 + 10) = *(_OWORD *)((char *)v122 + 58);
  v125 = *v122;
  v124 = v122[1];
  v398 = v122;
  v542[0] = v125;
  v542[1] = v124;
  sub_2412FD220((uint64_t)v542, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v529);
  sub_2412FD220((uint64_t)v542, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v521[0] = v529;
  LOBYTE(v521[1]) = v530;
  *(_WORD *)((char *)&v521[1] + 1) = *(_WORD *)((char *)&v530 + 1);
  *((_QWORD *)&v521[1] + 1) = v531;
  LOBYTE(v521[2]) = v532;
  *(_OWORD *)((char *)&v521[2] + 8) = v533;
  *(_OWORD *)((char *)&v521[3] + 8) = v534;
  BYTE8(v521[4]) = v535;
  v126 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v121 + 16))(v521, v120, v121);
  v127 = sub_2412F662C(1u, v126);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v442);
  if (v127)
  {
    v128 = v439;
    sub_2412F8744(1, (uint64_t)&v529);
    sub_2414B3520();
    sub_2414B3E44();
    v129 = v436;
    v130 = v97;
    v131 = MEMORY[0x242695AE8](&unk_2414BF0D0, v436);
    sub_2414B42D0();
    (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v129 - 8) + 8))(&v529, v129);
    v77 = (int *)v427;
    v132 = sub_2414B3514();
    v451[0] = v131;
    v451[1] = v130;
    v133 = MEMORY[0x24BDED308];
    v134 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v132, v451);
    sub_2414B44E0();
    (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 8))(v521, v132);
    v135 = sub_2414B3514();
    v136 = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
    v450[0] = v134;
    v450[1] = v136;
    MEMORY[0x242695AE8](v133, v135, v450);
    sub_2412FBF34((uint64_t)&v529, v135, (uint64_t)v521);
    v137 = *(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v135 - 8) + 8);
    v137(&v529, v135);
    sub_2412EEA1C((uint64_t)v521, v135, (uint64_t)&v442);
    v137(v521, v135);
    sub_2412F65F0((uint64_t)&v442, (uint64_t)&v529);
    v138 = sub_2414B53B0();
    (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(&v442, v138);
  }
  else
  {
    memset(v523, 0, sizeof(v523));
    v522 = 0u;
    memset(v521, 0, sizeof(v521));
    v524 = 0;
    v525 = 1;
    v139 = v436;
    v140 = sub_2414B3514();
    v141 = sub_2414B3514();
    v526 = 0u;
    v527 = 0u;
    v528 = 0u;
    v520[0] = MEMORY[0x242695AE8](&unk_2414BF0D0, v139);
    v520[1] = v97;
    v142 = MEMORY[0x24BDED308];
    v143 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v140, v520);
    v144 = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
    v519[0] = v143;
    v519[1] = v144;
    MEMORY[0x242695AE8](v142, v141, v519);
    sub_2412F65F0((uint64_t)v521, (uint64_t)&v529);
    v145 = sub_2414B53B0();
    (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 8))(v521, v145);
    v128 = v439;
  }
  v146 = v119 + v77[13];
  v147 = *(_QWORD *)v146;
  v148 = *(_BYTE *)(v146 + 8);
  sub_2412C7080(*(_QWORD *)v146, v148);
  v149 = sub_2412F9C24(v147, v148);
  sub_2412C821C(v147, v148);
  v437 = a3;
  if ((v149 & 1) != 0)
  {
    v150 = v353;
    sub_24144CD28(v128, a3, v353);
    LOBYTE(v521[0]) = 1;
    v151 = v355;
    v152 = MEMORY[0x242695AE8](&unk_2414C8360, v355);
    sub_2412F83C0((char *)v521, v151, v152);
    (*(void (**)(uint64_t, uint64_t))(v354 + 8))(v150, v151);
    v153 = v119 + v77[14];
    v154 = *(_QWORD *)v153;
    v355 = v153;
    LOBYTE(v151) = *(_BYTE *)(v153 + 8);
    sub_2412C7080(v154, v151);
    sub_2412F65C0(v154, v151, v521);
    sub_2412C821C(v154, v151);
    LODWORD(v154) = LOBYTE(v521[0]);
    v156 = v356;
    v155 = v357;
    v354 = *(_QWORD *)(v357 + 16);
    ((void (*)(char *, uint64_t, int *))v354)(v356, v119, v77);
    if ((_DWORD)v154 == 1)
    {
      v157 = &v156[v77[15]];
      v158 = *(_QWORD *)v157;
      v159 = *((_QWORD *)v157 + 1);
      v160 = v157[16];
      sub_2412C72E4(*(_QWORD *)v157, v159, v160);
      sub_2412EEDF4(v158, v159, v160, (uint64_t *)v521);
      sub_2412C822C(v158, v159, v160);
      v357 = *(_QWORD *)(v155 + 8);
      ((void (*)(char *, int *))v357)(v156, v77);
      v161 = *((_QWORD *)&v521[0] + 1);
      swift_bridgeObjectRelease();
      if (!v161)
      {
        v162 = v360;
        sub_2414B38F8();
        v163 = v425;
        goto LABEL_15;
      }
    }
    else
    {
      v357 = *(_QWORD *)(v155 + 8);
      ((void (*)(char *, int *))v357)(v156, v77);
    }
    v162 = v360;
    *(_QWORD *)&v521[0] = MEMORY[0x24BEE4AF8];
    sub_2412C8030(&qword_254384048, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841E8);
    sub_2412C8FC4(&qword_2543841F0, &qword_2543841E8, MEMORY[0x24BEE12C8]);
    v163 = v425;
    sub_2414B5464();
LABEL_15:
    v165 = sub_2412F8460();
    v468[0] = v152;
    v356 = (char *)v165;
    v468[1] = v165;
    v166 = MEMORY[0x24BDED308];
    v167 = v359;
    v168 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v359, v468);
    v169 = v361;
    v170 = v411;
    sub_2414B43F0();
    v360 = *(char **)(v416 + 8);
    ((void (*)(char *, _QWORD *))v360)(v162, v163);
    (*(void (**)(uint64_t, uint64_t))(v358 + 8))(v170, v167);
    v171 = *(_QWORD *)v355;
    v172 = *(_BYTE *)(v355 + 8);
    sub_2412C7080(*(_QWORD *)v355, v172);
    sub_2412F65C0(v171, v172, v521);
    sub_2412C821C(v171, v172);
    v173 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v467[0] = v168;
    v467[1] = v173;
    v174 = v363;
    v175 = MEMORY[0x242695AE8](v166, v363, v467);
    v176 = v364;
    sub_2414B445C();
    (*(void (**)(char *, unint64_t))(v362 + 8))(v169, v174);
    v177 = sub_2413182B8();
    v466[0] = v175;
    v363 = v177;
    v466[1] = v177;
    v178 = v366;
    v179 = MEMORY[0x242695AE8](v166, v366, v466);
    v180 = v367;
    sub_2414B442C();
    v181 = (*(uint64_t (**)(char *, uint64_t))(v365 + 8))(v176, v178);
    MEMORY[0x24BDAC7A8](v181);
    sub_2414B4A44();
    v465[0] = v179;
    v411 = v173;
    v465[1] = v173;
    v182 = v388;
    v183 = MEMORY[0x242695AE8](v166, v388, v465);
    v184 = (uint64_t)v368;
    sub_2414B4504();
    (*(void (**)(char *, uint64_t))(v387 + 8))(v180, v182);
    v185 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], *((_QWORD *)&v389 + 1));
    v464[0] = v183;
    v464[1] = v185;
    v186 = v413;
    v366 = MEMORY[0x242695AE8](v166, v413, v464);
    sub_2412FBF34(v184, v186, v412);
    v187 = *(void (**)(uint64_t, uint64_t))(v395 + 8);
    v188 = v184;
    v189 = v355;
    v187(v188, v186);
    v190 = *(_QWORD *)v189;
    LOBYTE(v183) = *(_BYTE *)(v189 + 8);
    sub_2412C7080(*(_QWORD *)v189, v183);
    sub_2412F65C0(v190, v183, v521);
    sub_2412C821C(v190, v183);
    v367 = (char *)v187;
    if (LOBYTE(v521[0]) != 1)
    {
      KeyPath = 0;
      v387 = 0;
      v388 = 0;
      v389 = 1uLL;
      v196 = v439;
      v197 = v437;
      v198 = v440;
      v194 = v374;
      v195 = v369;
      goto LABEL_24;
    }
    v191 = *(_QWORD *)v346;
    v192 = *(_QWORD *)(v346 + 8);
    v193 = *(_BYTE *)(v346 + 16);
    sub_2412C72E4(*(_QWORD *)v346, v192, v193);
    sub_2412EEDF4(v191, v192, v193, (uint64_t *)v521);
    sub_2412C822C(v191, v192, v193);
    v194 = v374;
    v195 = v369;
    if (!*((_QWORD *)&v521[0] + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      KeyPath = 0;
      v387 = 0;
      v388 = 0;
      v389 = 1uLL;
      v196 = v439;
      v197 = v437;
      v198 = v440;
      goto LABEL_24;
    }
    v196 = v439;
    v197 = v437;
    v198 = v440;
    if (v521[0] == __PAIR128__(0xE500000000000000, 0x6575657571))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v199 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      if ((v199 & 1) == 0)
      {
        KeyPath = 0;
        v387 = 0;
        v388 = 0;
        v389 = 1uLL;
LABEL_24:
        v203 = v371;
        sub_24144DEB0(v196, v197, v371);
        LOBYTE(v521[0]) = 1;
        v204 = v373;
        v205 = MEMORY[0x242695AE8](&unk_2414C8310, v373);
        sub_2412F83C0((char *)v521, v204, v205);
        (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v203, v204);
        v206 = *(_QWORD *)v189;
        v207 = *(_BYTE *)(v189 + 8);
        sub_2412C7080(*(_QWORD *)v189, v207);
        sub_2412F65C0(v206, v207, v521);
        sub_2412C821C(v206, v207);
        LODWORD(v206) = LOBYTE(v521[0]);
        v208 = v427;
        ((void (*)(char *, uint64_t, uint64_t))v354)(v195, v198, v427);
        if ((_DWORD)v206 == 1)
        {
          v209 = &v195[*(int *)(v208 + 60)];
          v210 = *(_QWORD *)v209;
          v211 = *((_QWORD *)v209 + 1);
          v212 = v209[16];
          sub_2412C72E4(*(_QWORD *)v209, v211, v212);
          sub_2412EEDF4(v210, v211, v212, (uint64_t *)v521);
          sub_2412C822C(v210, v211, v212);
          ((void (*)(char *, uint64_t))v357)(v195, v427);
          v213 = *((_QWORD *)&v521[0] + 1);
          swift_bridgeObjectRelease();
          v214 = v396;
          if (!v213)
          {
            v215 = v370;
            sub_2414B38F8();
            goto LABEL_29;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t))v357)(v195, v208);
          v214 = v396;
        }
        v215 = v370;
        sub_2414B3904();
LABEL_29:
        v463[0] = v205;
        v463[1] = v356;
        v216 = MEMORY[0x24BDED308];
        v217 = v376;
        v218 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v376, v463);
        v219 = v377;
        sub_2414B43F0();
        ((void (*)(char *, _QWORD *))v360)(v215, v425);
        v375[1](v194, v217);
        v220 = *(_QWORD *)v189;
        LOBYTE(v217) = *(_BYTE *)(v189 + 8);
        sub_2412C7080(*(_QWORD *)v189, v217);
        sub_2412F65C0(v220, v217, v521);
        sub_2412C821C(v220, v217);
        v462[0] = v218;
        v221 = v411;
        v462[1] = v411;
        v222 = v380;
        v223 = MEMORY[0x242695AE8](v216, v380, v462);
        v224 = v379;
        sub_2414B445C();
        (*(void (**)(char *, uint64_t))(v378 + 8))(v219, v222);
        v461[0] = v223;
        v461[1] = v363;
        v225 = v383;
        v226 = MEMORY[0x242695AE8](v216, v383, v461);
        v227 = v382;
        sub_2414B4420();
        (*(void (**)(char *, uint64_t))(v381 + 8))(v224, v225);
        v460[0] = v226;
        v460[1] = v221;
        v228 = v386;
        v229 = MEMORY[0x242695AE8](v216, v386, v460);
        v230 = (uint64_t)v384;
        sub_2414B44E0();
        (*(void (**)(char *, uint64_t))(v385 + 8))(v227, v228);
        v231 = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
        v459[0] = v229;
        v459[1] = v231;
        v232 = v415;
        v233 = MEMORY[0x242695AE8](v216, v415, v459);
        sub_2412FBF34(v230, v232, v414);
        v234 = *(void (***)(char *, uint64_t))(v214 + 8);
        ((void (*)(uint64_t, uint64_t))v234)(v230, v232);
        v235 = (id)MobileGestalt_get_current_device();
        if (v235)
        {
          v236 = v235;
          internalBuild = MobileGestalt_get_internalBuild();

          v238 = v394;
          v239 = v393;
          v374 = (char *)v233;
          v375 = v234;
          v373 = v231;
          if ((internalBuild & 1) == 0
            || (v240 = *(_QWORD *)v189,
                v241 = *(_BYTE *)(v189 + 8),
                sub_2412C7080(*(_QWORD *)v189, v241),
                sub_2412F65C0(v240, v241, v521),
                sub_2412C821C(v240, v241),
                LOBYTE(v521[0]) != 1))
          {
            v254 = sub_2414B3514();
            v442 = 0u;
            v443 = 0u;
            v444 = 0u;
            v445 = 0u;
            v446 = 0u;
            v447 = 0u;
            v458[0] = MEMORY[0x242695AE8](&unk_2414C3F50, v239);
            v458[1] = MEMORY[0x24BDECC60];
            v255 = MEMORY[0x24BDED308];
            v457[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v238, v458);
            v457[1] = v231;
            MEMORY[0x242695AE8](v255, v254, v457);
            sub_2412F65F0((uint64_t)&v442, (uint64_t)v521);
            v252 = *(_QWORD *)&v521[0];
            v386 = *(_QWORD *)&v521[1];
            v384 = (char *)*((_QWORD *)&v521[0] + 1);
            v385 = *((_QWORD *)&v521[1] + 1);
            v411 = *((_QWORD *)&v521[2] + 1);
            v377 = (char *)*((_QWORD *)&v521[3] + 1);
            v378 = *(_QWORD *)&v521[2];
            v382 = *(char **)&v521[4];
            v383 = *(_QWORD *)&v521[3];
            v380 = v522;
            v381 = *((_QWORD *)&v521[4] + 1);
            v253 = (char *)*((_QWORD *)&v522 + 1);
LABEL_37:
            v379 = v253;
            v256 = v391;
            (*(void (**)(void))(v395 + 16))();
            memset((char *)v521 + 8, 0, 72);
            *(_QWORD *)&v521[0] = KeyPath;
            v257 = v389;
            v522 = v389;
            *(_QWORD *)&v523[0] = v388;
            *((_QWORD *)&v523[0] + 1) = v387;
            *(_QWORD *)&v504 = v256;
            *((_QWORD *)&v504 + 1) = v521;
            v258 = v392;
            (*(void (**)(char *, uint64_t, uint64_t))(v396 + 16))(v392, v414, v415);
            v376 = v252;
            *(_QWORD *)&v442 = v252;
            *((_QWORD *)&v442 + 1) = v384;
            *(_QWORD *)&v443 = v386;
            *((_QWORD *)&v443 + 1) = v385;
            *(_QWORD *)&v444 = v378;
            *((_QWORD *)&v444 + 1) = v411;
            *(_QWORD *)&v445 = v383;
            *((_QWORD *)&v445 + 1) = v377;
            *(_QWORD *)&v446 = v382;
            *((_QWORD *)&v446 + 1) = v381;
            *(_QWORD *)&v447 = v380;
            *((_QWORD *)&v447 + 1) = v379;
            *(_QWORD *)&v505 = v258;
            *((_QWORD *)&v505 + 1) = &v442;
            sub_241474E5C(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v257);
            sub_241474EC0(v376);
            v259 = v413;
            *(_QWORD *)&v496 = v413;
            *((_QWORD *)&v496 + 1) = __swift_instantiateConcreteTypeFromMangledName(qword_25437D630);
            v260 = v415;
            *(_QWORD *)&v497 = v415;
            v261 = v394;
            v262 = sub_2414B3514();
            v263 = sub_2414B53B0();
            *((_QWORD *)&v497 + 1) = v263;
            *(_QWORD *)&v512 = v366;
            v264 = MEMORY[0x24BDF5578];
            *((_QWORD *)&v512 + 1) = sub_2412C8620(&qword_257129DE0, qword_25437D630, (uint64_t (*)(void))sub_241474EF8, MEMORY[0x24BDF5578]);
            *(_QWORD *)&v513 = v374;
            v456[0] = MEMORY[0x242695AE8](&unk_2414C3F50, v393);
            v456[1] = MEMORY[0x24BDECC60];
            v265 = MEMORY[0x24BDED308];
            v455[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v261, v456);
            v455[1] = v373;
            v454 = MEMORY[0x242695AE8](v265, v262, v455);
            *((_QWORD *)&v513 + 1) = MEMORY[0x242695AE8](v264, v263, &v454);
            v266 = (uint64_t)v347;
            sub_2412F68CC((uint64_t *)&v504, 4uLL, (uint64_t)&v496);
            sub_241474F3C(v442);
            v267 = v375;
            ((void (*)(char *, uint64_t))v375)(v392, v260);
            sub_241474DF8(*(uint64_t *)&v521[0], *((uint64_t *)&v521[0] + 1), *(uint64_t *)&v521[1], *((uint64_t *)&v521[1] + 1), *(uint64_t *)&v521[2], *((uint64_t *)&v521[2] + 1), *(uint64_t *)&v521[3], *((uint64_t *)&v521[3] + 1), *(uint64_t *)&v521[4], SBYTE8(v521[4]), SBYTE9(v521[4]), v522);
            v268 = v259;
            v269 = v259;
            v270 = (void (*)(uint64_t, uint64_t))v367;
            ((void (*)(char *, uint64_t))v367)(v391, v269);
            v271 = v419;
            MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v419);
            sub_24132F340(v266, v271);
            sub_241474F3C(v376);
            sub_241474DF8(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v389);
            (*(void (**)(uint64_t, uint64_t))(v348 + 8))(v266, v271);
            ((void (*)(uint64_t, uint64_t))v267)(v414, v260);
            v270(v412, v268);
            goto LABEL_38;
          }
          if (*(_QWORD *)(v440 + 8))
          {
            v242 = swift_unknownObjectRetain();
            v243 = v439;
            v244 = v437;
            sub_2413E938C(v242, v439, v437, v537);
            swift_unknownObjectRelease();
            v539 = *(_OWORD *)&v537[24];
            v538 = *(_OWORD *)&v537[8];
            v442 = *(_OWORD *)v537;
            v443 = *(_OWORD *)&v537[16];
            *(_QWORD *)&v444 = *(_QWORD *)&v537[32];
            sub_2414B3E80();
            if (qword_257120B98 != -1)
              swift_once();
            v246 = _s9DebugViewVMa(0, v243, v244, v245);
            v247 = MEMORY[0x242695AE8](&unk_2414C3F50, v246);
            sub_2414B4528();
            swift_unknownObjectRelease();
            sub_2412FAA84((uint64_t)&v538);
            sub_2412FAA84((uint64_t)&v539);
            v504 = v521[0];
            v505 = v521[1];
            *(_QWORD *)&v506 = *(_QWORD *)&v521[2];
            BYTE8(v506) = BYTE8(v521[2]);
            v507 = v521[3];
            v508 = v521[4];
            LOBYTE(v509) = v522;
            v248 = sub_2414B3514();
            v453[0] = v247;
            v453[1] = MEMORY[0x24BDECC60];
            v249 = MEMORY[0x24BDED308];
            v250 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v248, v453);
            sub_2414B44E0();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            v504 = v442;
            v505 = v443;
            *(_QWORD *)&v506 = v444;
            BYTE8(v506) = BYTE8(v444);
            v507 = v445;
            v508 = v446;
            LOBYTE(v509) = v447;
            *((_QWORD *)&v509 + 1) = *((_QWORD *)&v447 + 1);
            v251 = sub_2414B3514();
            v452[0] = v250;
            v452[1] = v231;
            MEMORY[0x242695AE8](v249, v251, v452);
            sub_2412FBF34((uint64_t)&v504, v251, (uint64_t)v521);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            v442 = v521[0];
            v443 = v521[1];
            *(_QWORD *)&v444 = *(_QWORD *)&v521[2];
            BYTE8(v444) = BYTE8(v521[2]);
            v445 = v521[3];
            v446 = v521[4];
            LOBYTE(v447) = v522;
            *((_QWORD *)&v447 + 1) = *((_QWORD *)&v522 + 1);
            sub_2412EEA1C((uint64_t)&v442, v251, (uint64_t)&v504);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            v496 = v504;
            v497 = v505;
            *(_QWORD *)&v498 = v506;
            *((_QWORD *)&v498 + 1) = BYTE8(v506);
            v499 = v507;
            v500 = v508;
            *(_QWORD *)&v501 = v509;
            *((_QWORD *)&v501 + 1) = *((_QWORD *)&v509 + 1);
            sub_2412F65F0((uint64_t)&v496, (uint64_t)&v442);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            v252 = v442;
            v386 = v443;
            v384 = (char *)*((_QWORD *)&v442 + 1);
            v385 = *((_QWORD *)&v443 + 1);
            v411 = *((_QWORD *)&v444 + 1);
            v377 = (char *)*((_QWORD *)&v445 + 1);
            v378 = v444;
            v382 = (char *)v446;
            v383 = v445;
            v380 = v447;
            v381 = *((_QWORD *)&v446 + 1);
            v253 = (char *)*((_QWORD *)&v447 + 1);
            goto LABEL_37;
          }
        }
        else
        {
          sub_241474DF8(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v389);
          sub_2412F6738(v435, v438, v434);
          __break(1u);
        }
        result = sub_2414B364C();
        __break(1u);
        return result;
      }
    }
    KeyPath = swift_getKeyPath();
    _s5DebugCMa();
    sub_2412C8030((unint64_t *)&qword_25437F060, (uint64_t (*)(uint64_t))_s5DebugCMa, (uint64_t)&unk_2414C3E98);
    *(_QWORD *)&v389 = sub_2414B3658();
    *((_QWORD *)&v389 + 1) = v200;
    _s5QueueCMa();
    sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
    v201 = sub_2414B3658();
    v387 = v202;
    v388 = v201;
    goto LABEL_24;
  }
  *(_QWORD *)&v521[0] = sub_2414B4648();
  v164 = v419;
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v419);
  sub_2412F1584((uint64_t)v521, v164, MEMORY[0x24BDF3E48]);
  swift_release();
LABEL_38:
  sub_2412FB140((uint64_t)&v442);
  v272 = v443;
  v273 = BYTE8(v443);
  v414 = *((_QWORD *)&v444 + 1);
  v415 = v444;
  v412 = *((_QWORD *)&v445 + 1);
  v413 = v445;
  v411 = v446;
  v395 = v447;
  v396 = *((_QWORD *)&v446 + 1);
  v394 = *((_QWORD *)&v447 + 1);
  v274 = v448;
  v275 = BYTE8(v448);
  v276 = BYTE9(v448);
  v393 = v442;
  v504 = v442;
  *(_QWORD *)&v505 = v443;
  BYTE8(v505) = BYTE8(v443);
  v506 = v444;
  v507 = v445;
  v508 = v446;
  v509 = v447;
  *(_QWORD *)&v510[0] = v448;
  WORD4(v510[0]) = WORD4(v448);
  sub_2414B3520();
  sub_2414B3E44();
  v277 = MEMORY[0x242695AE8](&unk_2414B94C0, v400);
  sub_2414B42D0();
  swift_unknownObjectRelease();
  sub_2412C821C(v272, v273);
  sub_2412C823C(v415, v414, v413, v412, v411, v396, v395, v394, v274, v275, v276);
  v516 = v521[4];
  v517 = v522;
  v518[0] = v523[0];
  *(_OWORD *)((char *)v518 + 9) = *(_OWORD *)((char *)v523 + 9);
  v512 = v521[0];
  v513 = v521[1];
  v514 = v521[2];
  v515 = v521[3];
  v508 = v521[4];
  v509 = v522;
  v510[0] = v523[0];
  *(_OWORD *)((char *)v510 + 9) = *(_OWORD *)((char *)v523 + 9);
  v504 = v521[0];
  v505 = v521[1];
  v506 = v521[2];
  v507 = v521[3];
  LOBYTE(v496) = 0;
  v511[0] = v277;
  v511[1] = MEMORY[0x24BDF1050];
  v278 = v401;
  v279 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v401, v511);
  sub_2412F83C0((char *)&v496, v278, v279);
  sub_241474C68((uint64_t)&v512);
  v510[0] = v448;
  v510[1] = v449[0];
  *(_OWORD *)((char *)&v510[1] + 10) = *(_OWORD *)((char *)v449 + 10);
  v506 = v444;
  v507 = v445;
  v509 = v447;
  v508 = v446;
  v505 = v443;
  v504 = v442;
  v280 = v440 + *(int *)(v427 + 56);
  v281 = *(_QWORD *)v280;
  LOBYTE(v278) = *(_BYTE *)(v280 + 8);
  sub_2412C7080(*(_QWORD *)v280, v278);
  sub_2412F65C0(v281, v278, v521);
  sub_2412C821C(v281, v278);
  if ((v521[0] & 1) != 0)
  {
    *(_QWORD *)&v521[0] = MEMORY[0x24BEE4AF8];
    sub_2412C8030(&qword_254384048, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841E8);
    sub_2412C8FC4(&qword_2543841F0, &qword_2543841E8, MEMORY[0x24BEE12C8]);
    v282 = v399;
    v283 = v425;
    sub_2414B5464();
    v284 = (uint64_t)v407;
  }
  else
  {
    v282 = v399;
    sub_2414B38F8();
    v284 = (uint64_t)v407;
    v283 = v425;
  }
  v285 = sub_2412F8460();
  v495[0] = v279;
  v495[1] = v285;
  v286 = MEMORY[0x24BDED308];
  v287 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v402, v495);
  v288 = v403;
  sub_2414B43F0();
  (*(void (**)(char *, _QWORD *))(v416 + 8))(v282, v283);
  v502 = v510[0];
  v503[0] = v510[1];
  *(_OWORD *)((char *)v503 + 10) = *(_OWORD *)((char *)&v510[1] + 10);
  v498 = v506;
  v499 = v507;
  v501 = v509;
  v500 = v508;
  v497 = v505;
  v496 = v504;
  sub_241474D1C((uint64_t)&v496);
  v289 = v404;
  v290 = v431;
  sub_2414B34E4();
  v291 = *(void (**)(char *, uint64_t))(v420 + 8);
  v291(v288, v290);
  v292 = (uint64_t)v405;
  sub_2414B34F0();
  v291(v289, v290);
  v293 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v494[0] = v287;
  v494[1] = v293;
  v416 = MEMORY[0x242695AE8](v286, v290, v494);
  sub_2412FBF34(v292, v290, v430);
  v425 = v291;
  v291((char *)v292, v290);
  sub_2412EFAC0((uint64_t)v491);
  v294 = v492;
  v295 = v493;
  __swift_project_boxed_opaque_existential_1(v491, v492);
  v296 = v398[3];
  v540[2] = v398[2];
  v541[0] = v296;
  *(_OWORD *)((char *)v541 + 10) = *(_OWORD *)((char *)v398 + 58);
  v297 = v398[1];
  v540[0] = *v398;
  v540[1] = v297;
  sub_2412FD220((uint64_t)v540, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v521);
  sub_2412FD220((uint64_t)v540, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v484 = v521[0];
  LOBYTE(v485) = v521[1];
  *(_WORD *)((char *)&v485 + 1) = *(_WORD *)((char *)&v521[1] + 1);
  v486 = (char *)*((_QWORD *)&v521[1] + 1);
  LOBYTE(v487) = v521[2];
  v488 = *(_OWORD *)((char *)&v521[2] + 8);
  v489 = *(_OWORD *)((char *)&v521[3] + 8);
  v490 = BYTE8(v521[4]);
  v298 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v295 + 16))(&v484, v294, v295);
  LOBYTE(v294) = sub_2412F662C(1u, v298);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v491);
  if ((v294 & 1) != 0)
  {
    v299 = v424;
    v300 = v423;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v408 + 56))(v424, 1, 1, v423);
    v301 = MEMORY[0x242695AE8](&unk_2414BF0D0, v436);
    v302 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
    v469[0] = v301;
    v469[1] = v302;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v300, v469);
  }
  else
  {
    sub_2412F8744(0, (uint64_t)v521);
    v303 = *(_QWORD *)v280;
    v304 = *(_BYTE *)(v280 + 8);
    sub_2412C7080(*(_QWORD *)v280, v304);
    sub_2412F65C0(v303, v304, &v484);
    sub_2412C821C(v303, v304);
    v305 = v423;
    if ((v484 & 1) != 0)
    {
      v306 = v349;
      v307 = v351;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v349 + 104))(v284, *MEMORY[0x24BDEB3F0], v351);
      v308 = v436;
    }
    else
    {
      sub_2412FA2F8(v284);
      v308 = v436;
      v307 = v351;
      v306 = v349;
    }
    v309 = MEMORY[0x242695AE8](&unk_2414BF0D0, v308);
    v310 = (uint64_t)v350;
    sub_2414B41B0();
    (*(void (**)(uint64_t, uint64_t))(v306 + 8))(v284, v307);
    (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v308 - 8) + 8))(v521, v308);
    v311 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
    v483[0] = v309;
    v483[1] = v311;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v305, v483);
    v312 = v352;
    sub_2412FBF34(v310, v305, v352);
    v313 = v408;
    v314 = *(void (**)(uint64_t, uint64_t))(v408 + 8);
    v314(v310, v305);
    v299 = v424;
    sub_2412EEA1C(v312, v305, v424);
    v314(v312, v305);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v313 + 56))(v299, 0, 1, v305);
  }
  v315 = v422;
  sub_2412F65F0(v299, v422);
  v316 = v409;
  v440 = *(_QWORD *)(v409 + 8);
  ((void (*)(uint64_t, uint64_t))v440)(v299, v432);
  v317 = v435;
  v478 = v435;
  v479 = v438;
  v318 = v434;
  v480 = v434;
  v481 = v426;
  v482 = v433;
  *(_QWORD *)&v484 = &v478;
  v415 = sub_2414B3514();
  v427 = sub_2414B3514();
  v414 = sub_2414B53B0();
  v428 = *(_QWORD *)(v414 - 8);
  (*(void (**)(_OWORD *, __int128 *, uint64_t))(v428 + 16))(v521, &v529, v414);
  *((_QWORD *)&v484 + 1) = v521;
  v319 = v418;
  v320 = v406;
  (*(void (**)(char *, char *, uint64_t))(v417 + 16))(v418, v429, v406);
  v485 = v319;
  v321 = v421;
  v322 = v431;
  (*(void (**)(char *, uint64_t, uint64_t))(v420 + 16))(v421, v430, v431);
  v486 = v321;
  v323 = v315;
  v324 = v432;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v316 + 16))(v299, v323, v432);
  v487 = v299;
  sub_2412F8440(v317, v438, v318);
  v326 = _s18ArtworkPlaceholderVMa(255, v439, v437, v325);
  v327 = sub_2414B3514();
  v328 = sub_2414B53B0();
  v491[0] = v328;
  v329 = v414;
  v491[1] = v414;
  v491[2] = v320;
  v492 = v322;
  v493 = v324;
  v477[0] = MEMORY[0x242695AE8](&unk_2414BF158, v326);
  v330 = MEMORY[0x24BDF1050];
  v477[1] = MEMORY[0x24BDF1050];
  v331 = MEMORY[0x24BDED308];
  v476 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v327, v477);
  v332 = MEMORY[0x24BDF5578];
  v477[2] = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v328, &v476);
  v333 = MEMORY[0x242695AE8](&unk_2414BF0D0, v436);
  v475[0] = v333;
  v475[1] = v330;
  v334 = MEMORY[0x242695AE8](v331, v415, v475);
  v335 = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
  v474[0] = v334;
  v474[1] = v335;
  v473 = MEMORY[0x242695AE8](v331, v427, v474);
  v477[3] = MEMORY[0x242695AE8](v332, v329, &v473);
  v472[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v419);
  v472[1] = MEMORY[0x24BDF3E20];
  v336 = v320;
  v477[4] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v320, v472);
  v477[5] = v416;
  v337 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
  v471[0] = v333;
  v471[1] = v337;
  v470 = MEMORY[0x242695AE8](v331, v423, v471);
  v338 = v432;
  v477[6] = MEMORY[0x242695AE8](v332, v432, &v470);
  sub_2412F68CC((uint64_t *)&v484, 5uLL, (uint64_t)v491);
  sub_2412F6738(v435, v438, v434);
  v339 = (void (*)(uint64_t, uint64_t))v440;
  ((void (*)(uint64_t, uint64_t))v440)(v422, v338);
  v340 = v431;
  v341 = (void (*)(char *, uint64_t))v425;
  ((void (*)(uint64_t, uint64_t))v425)(v430, v431);
  v342 = *(void (**)(char *, uint64_t))(v417 + 8);
  v343 = v336;
  v342(v429, v336);
  v344 = *(void (**)(__int128 *, uint64_t))(v428 + 8);
  v344(&v529, v329);
  v339(v424, v338);
  v341(v421, v340);
  v342(v418, v343);
  v344(v521, v329);
  return sub_2412F6738(v478, v479, v480);
}

uint64_t sub_2412F63DC@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, _QWORD)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[2];
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_2414B382C();
  v15 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a7 = a1 & 1;
  }
  else
  {
    v28 = a4;
    a3(a1, 0);
    v19 = sub_2414B51AC();
    v20 = sub_2414B3E08();
    if (os_log_type_enabled(v20, v19))
    {
      v26[1] = (unint64_t)a7;
      v21 = swift_slowAlloc();
      v26[0] = a5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v27 = a6;
      v24 = v23;
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      v29 = sub_2412E4890(v28, v26[0], &v30);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      a6 = v27;
      MEMORY[0x242695BD8](v25, -1, -1);
      MEMORY[0x242695BD8](v22, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

uint64_t sub_2412F65C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412F63DC(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C7080, 0x7453726579616C50, 0xEB00000000656C79, (void (*)(_QWORD, _QWORD))sub_2412C821C, a3);
}

uint64_t sub_2412F65F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2414B53B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

BOOL sub_2412F662C(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_2414B58CC();
  sub_2414B58D8();
  v4 = sub_2414B58FC();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_2412F6718()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s19HeaderDismissButtonVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s19HeaderDismissButtonVMn);
}

uint64_t _s21FullScreenContentViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21FullScreenContentViewVMn);
}

uint64_t sub_2412F6738(uint64_t result, uint64_t a2, char a3)
{
  if (result != 2)
    return sub_2412C821C(a2, a3 & 1);
  return result;
}

uint64_t sub_2412F6758(uint64_t a1)
{
  swift_release();
  swift_release();
  sub_2412C821C(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (*(_QWORD *)(a1 + 72))
      __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else
  {
    swift_release();
  }
  return sub_2412E6BF8(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

uint64_t sub_2412F67BC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_unknownObjectRelease();
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  else
    swift_release();
  v4 = a1 + a2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[12];
  sub_2412C823C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72), *(_BYTE *)(v6 + 73));
  sub_2412C821C(*(_QWORD *)(a1 + a2[13]), *(_BYTE *)(a1 + a2[13] + 8));
  sub_2412C821C(*(_QWORD *)(a1 + a2[14]), *(_BYTE *)(a1 + a2[14] + 8));
  return sub_2412C822C(*(_QWORD *)(a1 + a2[15]), *(_QWORD *)(a1 + a2[15] + 8), *(_BYTE *)(a1 + a2[15] + 16));
}

uint64_t sub_2412F68CC(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_2414B4B28();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_2414B4B28();
}

uint64_t _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMn);
}

uint64_t _s22MiniPlayerMetadataViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s22MiniPlayerMetadataViewVMn);
}

uint64_t View.marqueeAnimationDirection(_:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[15];
  char v12;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v11[-v8]);
  v12 = (char)a1;
  MCUINamespace<A>.marqueeAnimationDirection(_:)((uint64_t)&v12, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2412F6B54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254380E28;
  if (!qword_254380E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E20);
    v2 = sub_2412F784C(&qword_254380E10, &qword_254380E18, (uint64_t (*)(void))sub_2412F78D4);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254380E28);
  }
  return result;
}

uint64_t sub_2412F6BD0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t *a5@<X5>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  int *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(a5);
  v18 = a6 + v17[9];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)v18 = KeyPath;
  *(_BYTE *)(v18 + 24) = 0;
  v20 = a6 + v17[10];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  v21 = a6 + v17[11];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a6 + v17[12];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  v23 = a6 + v17[13];
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_BYTE *)(v23 + 8) = 0;
  v24 = a6 + v17[14];
  *(_QWORD *)v24 = swift_getKeyPath();
  *(_BYTE *)(v24 + 8) = 0;
  v25 = (_QWORD *)(a6 + v17[16]);
  v26 = sub_2414B4798();
  *v25 = v30;
  v25[1] = v31;
  *(double *)(a6 + v17[17]) = a7;
  *(double *)(a6 + v17[18]) = a8;
  *(double *)(a6 + v17[19]) = a9;
  *(_BYTE *)(a6 + v17[20]) = a1;
  v27 = a6 + v17[21];
  *(_QWORD *)v27 = a2;
  *(_DWORD *)(v27 + 8) = a3;
  *(_BYTE *)(v27 + 12) = BYTE4(a3) & 1;
  result = a4(v26);
  v29 = a6 + v17[15];
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  return result;
}

uint64_t sub_2412F6D78(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_2412F6D88()
{
  unint64_t result;

  result = qword_2543844D8;
  if (!qword_2543844D8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2543844D8);
  }
  return result;
}

uint64_t sub_2412F6DCC()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_2412F6E9C();

  sub_2414B4DF8();
  sub_2414B4DF8();
  sub_2414B4408();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2412F6E9C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[16];
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v29[-v6];
  v32 = 0;
  v33 = 0xE000000000000000;
  v8 = objc_msgSend(v1, sel_bundleIdentifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_2414B4D68();
    v12 = v11;

    v30 = 46;
    v31 = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v13);
    *(_QWORD *)&v29[-16] = &v30;
    swift_bridgeObjectRetain();
    v14 = sub_2412F7160(0x7FFFFFFFFFFFFFFFLL, 1, sub_2412F75FC, (uint64_t)&v29[-32], v10, v12);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (uint64_t *)(v14 + 32 * v15);
      v17 = *v16;
      v18 = v16[1];
      v20 = v16[2];
      v19 = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  v30 = 0;
  v31 = 0xE000000000000000;
  v21 = objc_msgSend(v1, sel_executableURL);
  if (v21)
  {
    v22 = v21;
    sub_2414B2A64();

    v23 = sub_2414B2A88();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
  }
  else
  {
    v23 = sub_2414B2A88();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  }
  sub_2413E10CC((uint64_t)v5, (uint64_t)v7);
  sub_2414B2A88();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v23) == 1)
  {
    sub_24131A14C((uint64_t)v7);
  }
  else
  {
    sub_2414B2A1C();
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v7, v23);
  }
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x242694C78](v30, v31);
  v18 = v25;
  v20 = v26;
  v19 = v27;
LABEL_12:
  MEMORY[0x24269463C](v17, v18, v20, v19);
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_2412F7160(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2413E1114(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_2414B4E4C();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_2414B4DE0();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_2414B4DE0();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_2414B4E64();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_2412F7650(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_2412F7650((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_2414B4DE0();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_2414B4E64();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2412F7650(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_2412F7650((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2414B5668();
  __break(1u);
LABEL_42:
  result = sub_2414B5668();
  __break(1u);
  return result;
}

uint64_t sub_2412F75FC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_2414B57D0() & 1;
}

_QWORD *sub_2412F7650(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254381600);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2412F775C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2412F775C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_2412F784C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2412F78D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254380CF8;
  if (!qword_254380CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D00);
    v2 = sub_2412C8FC4(&qword_254381358, &qword_254381360, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254380CF8);
  }
  return result;
}

uint64_t sub_2412F7958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeConformance2;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(__int128 *, uint64_t, uint64_t);
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[16];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[25];
  char v90;

  v79 = a2;
  v78 = sub_2414B346C();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E20);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9A0);
  v71 = a1;
  v4 = *(_QWORD *)(a1 + 24);
  v69 = *(_QWORD *)(a1 + 16);
  v70 = v4;
  _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, v69, v4, v5);
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381240);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9B0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381180);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381440);
  sub_2414B3A90();
  sub_2414B3A90();
  sub_2414B46F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381150);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381360);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata3();
  v6 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  v7 = sub_2414B4894();
  v73 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v54 - v8;
  v9 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v7);
  v10 = sub_2412F837C();
  *(_QWORD *)&v84 = v7;
  *((_QWORD *)&v84 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  *(_QWORD *)&v85 = v9;
  *((_QWORD *)&v85 + 1) = v10;
  v58 = v9;
  v11 = v10;
  v57 = v10;
  v12 = MEMORY[0x242695A94](0, &v84, MEMORY[0x24BDF3908], 0);
  v75 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v59 = (char *)&v54 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
  *(_QWORD *)&v84 = v7;
  *((_QWORD *)&v84 + 1) = &type metadata for NowPlayingViewModel.PlayerStyle;
  *(_QWORD *)&v85 = v9;
  *((_QWORD *)&v85 + 1) = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v16 = sub_2412F82D0();
  *(_QWORD *)&v84 = v12;
  *((_QWORD *)&v84 + 1) = v14;
  v62 = v12;
  v65 = v14;
  *(_QWORD *)&v85 = OpaqueTypeConformance2;
  *((_QWORD *)&v85 + 1) = v16;
  v17 = OpaqueTypeConformance2;
  v64 = OpaqueTypeConformance2;
  v63 = v16;
  v18 = MEMORY[0x242695A94](0, &v84, MEMORY[0x24BDF38E8], 0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v18;
  v68 = v18;
  v74 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v60 = (char *)&v54 - v21;
  *(_QWORD *)&v84 = v12;
  *((_QWORD *)&v84 + 1) = v14;
  *(_QWORD *)&v85 = v17;
  *((_QWORD *)&v85 + 1) = v16;
  v66 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v84 = v20;
  *((_QWORD *)&v84 + 1) = v66;
  v22 = MEMORY[0x242695A94](0, &v84, MEMORY[0x24BDF27E8], 0);
  v72 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v61 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v67 = (uint64_t)&v54 - v25;
  sub_2414B3970();
  v26 = v69;
  v80 = v69;
  v27 = v70;
  v81 = v70;
  v28 = v56;
  v82 = v56;
  sub_2414B4888();
  v29 = *(_QWORD *)(v28 + 32);
  v30 = *(_BYTE *)(v28 + 40);
  sub_2412C7080(v29, v30);
  sub_2412F65C0(v29, v30, v83);
  sub_2412C821C(v29, v30);
  v90 = v83[0];
  v31 = v71;
  v32 = *(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
  v32(&v84, v28, v71);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v26;
  *(_QWORD *)(v33 + 24) = v27;
  v34 = *(_OWORD *)v89;
  *(_OWORD *)(v33 + 96) = v88;
  *(_OWORD *)(v33 + 112) = v34;
  *(_OWORD *)(v33 + 121) = *(_OWORD *)&v89[9];
  v35 = v85;
  *(_OWORD *)(v33 + 32) = v84;
  *(_OWORD *)(v33 + 48) = v35;
  v36 = v87;
  *(_OWORD *)(v33 + 64) = v86;
  *(_OWORD *)(v33 + 80) = v36;
  v37 = v59;
  v38 = v55;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v7);
  sub_2412F0D64((uint64_t)v83);
  v32(&v84, v28, v31);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v26;
  *(_QWORD *)(v39 + 24) = v27;
  v40 = *(_OWORD *)v89;
  *(_OWORD *)(v39 + 96) = v88;
  *(_OWORD *)(v39 + 112) = v40;
  *(_OWORD *)(v39 + 121) = *(_OWORD *)&v89[9];
  v41 = v85;
  *(_OWORD *)(v39 + 32) = v84;
  *(_OWORD *)(v39 + 48) = v41;
  v42 = v87;
  *(_OWORD *)(v39 + 64) = v86;
  *(_OWORD *)(v39 + 80) = v42;
  v43 = v60;
  v44 = v62;
  sub_2414B4558();
  swift_release();
  sub_2412CBE78((uint64_t)v83, (uint64_t *)&unk_254381590);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v44);
  v45 = v77;
  v46 = v76;
  v47 = v78;
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v76, *MEMORY[0x24BDECF00], v78);
  v48 = (uint64_t)v61;
  v49 = v68;
  v50 = v66;
  sub_2414B42AC();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v49);
  *(_QWORD *)&v84 = v49;
  *((_QWORD *)&v84 + 1) = v50;
  swift_getOpaqueTypeConformance2();
  v51 = v67;
  sub_2412FBF34(v48, v22, v67);
  v52 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v52(v48, v22);
  sub_2412EEA1C(v51, v22, v79);
  return ((uint64_t (*)(uint64_t, uint64_t))v52)(v51, v22);
}

uint64_t sub_2412F819C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_2412C7080(v6, v7);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  v8 = (_OWORD *)(a2 + 48);
  if ((*(_BYTE *)(a2 + 88) & 1) != 0)
  {
    v9 = (_OWORD *)(a1 + 48);
    v10 = *(_QWORD *)(a2 + 72);
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v10;
      *(_QWORD *)(a1 + 80) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v9, v8);
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 64);
      *v9 = *v8;
      *(_OWORD *)(a1 + 64) = v12;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    }
    *(_BYTE *)(a1 + 88) = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v8;
    *(_BYTE *)(a1 + 88) = 0;
    swift_retain();
  }
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_BYTE *)(a2 + 104);
  sub_2412E6F7C(v13, v14);
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = v14;
  return a1;
}

uint64_t sub_2412F8280()
{
  sub_2412F82D0();
  return sub_2414B3340();
}

unint64_t sub_2412F82D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2543815A8;
  if (!qword_2543815A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
    v2 = MEMORY[0x24BEE23E0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2543815A8);
  }
  return result;
}

uint64_t sub_2412F832C()
{
  sub_2412F837C();
  return sub_2414B3340();
}

unint64_t sub_2412F837C()
{
  unint64_t result;

  result = qword_25437EA08;
  if (!qword_25437EA08)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.PlayerStyle, &type metadata for NowPlayingViewModel.PlayerStyle);
    atomic_store(result, (unint64_t *)&qword_25437EA08);
  }
  return result;
}

uint64_t sub_2412F83C0(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t KeyPath;
  char v8;
  char v9;

  v5 = *a1;
  KeyPath = swift_getKeyPath();
  v8 = 0;
  v9 = v5;
  MEMORY[0x242693DC0](&KeyPath, a2, &type metadata for OpacityModifier, a3);
  return swift_release();
}

uint64_t sub_2412F8440(uint64_t result, uint64_t a2, char a3)
{
  if (result != 2)
    return sub_2412C7080(a2, a3 & 1);
  return result;
}

unint64_t sub_2412F8460()
{
  unint64_t result;

  result = qword_25437E388;
  if (!qword_25437E388)
  {
    result = MEMORY[0x242695AE8](&unk_2414B91AC, &type metadata for OpacityModifier);
    atomic_store(result, (unint64_t *)&qword_25437E388);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingView);
}

uint64_t sub_2412F84B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;

  *(_QWORD *)a3 = sub_241304108;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  _s8BackdropCMa();
  sub_2412C8030(&qword_25437F680, (uint64_t (*)(uint64_t))_s8BackdropCMa, (uint64_t)&unk_2414CB25C);
  *(_QWORD *)(a3 + 24) = sub_2414B3658();
  *(_QWORD *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = sub_2414B3658();
  *(_QWORD *)(a3 + 48) = v7;
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_2412C8030(&qword_25437F7B0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle, (uint64_t)&unk_2414CBCE8);
  *(_QWORD *)(a3 + 56) = sub_2414B3658();
  *(_QWORD *)(a3 + 64) = v8;
  type metadata accessor for WindowProperties();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  *(_QWORD *)(a3 + 72) = sub_2414B2FEC();
  *(_BYTE *)(a3 + 80) = v9 & 1;
  *(_QWORD *)(a3 + 88) = swift_getKeyPath();
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_BYTE *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = swift_getKeyPath();
  *(_BYTE *)(a3 + 168) = 0;
  *(_QWORD *)(a3 + 176) = swift_getKeyPath();
  *(_BYTE *)(a3 + 184) = 0;
  v11 = (int *)_s25BackdropConditionObserverVMa(0, a1, a2, v10);
  v12 = (uint64_t *)(a3 + v11[16]);
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  v13 = a3 + v11[17];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v14 = (uint64_t *)(a3 + v11[18]);
  *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s25BackdropConditionObserverVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s25BackdropConditionObserverVMn);
}

uint64_t type metadata accessor for WindowProperties()
{
  uint64_t result;

  result = qword_25437E498;
  if (!qword_25437E498)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412F86CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s8BackdropCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s8BackdropCMa()
{
  uint64_t result;

  result = qword_25437F688;
  if (!qword_25437F688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2412F8744@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = a1 & 1;
  *(_QWORD *)a2 = swift_getKeyPath();
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = swift_getKeyPath();
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = swift_getKeyPath();
  *(_BYTE *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = swift_getKeyPath();
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_WORD *)(a2 + 184) = 0;
  *(_QWORD *)(a2 + 192) = swift_getKeyPath();
  *(_BYTE *)(a2 + 200) = 0;
  *(_QWORD *)(a2 + 208) = swift_getKeyPath();
  *(_BYTE *)(a2 + 216) = 0;
  *(_QWORD *)(a2 + 224) = swift_getKeyPath();
  *(_QWORD *)(a2 + 232) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  _s7ArtworkC17BackgroundArtworkCMa();
  sub_2412F0B40((unint64_t *)&unk_25437F380, 255, (uint64_t (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa, (uint64_t)&unk_2414BEDD8);
  *(_QWORD *)(a2 + 248) = sub_2414B3658();
  *(_QWORD *)(a2 + 256) = v4;
  type metadata accessor for WindowProperties();
  sub_2412F0B40((unint64_t *)&qword_25437E490, 255, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  result = sub_2414B2FEC();
  *(_QWORD *)(a2 + 264) = result;
  *(_BYTE *)(a2 + 272) = v6 & 1;
  *(_BYTE *)(a2 + 273) = v3;
  return result;
}

uint64_t sub_2412F8894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t KeyPath;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  char *v90;
  __int128 v91;
  __int128 v92;
  void (*v93)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t (*v114)();
  uint64_t v115;
  uint64_t (*v116)();
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _BYTE v124[24];
  __int16 v125;
  uint64_t (*v126)();
  char v127;
  uint64_t (*v128)();
  char v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD v136[2];
  _QWORD v137[2];
  _QWORD v138[2];
  __int128 v139;
  __int128 v140;
  _BYTE v141[24];
  __int16 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  _BYTE v151[32];

  v100 = a5;
  v103 = a3;
  v104 = a4;
  v7 = _s21CenterTransportButtonVMa(255, a3, a4, a4);
  *(_QWORD *)&v94 = sub_2414B3514();
  v8 = sub_2414B3514();
  sub_2414B3DB4();
  v95 = v8;
  v108 = sub_2414B3514();
  v105 = *(_QWORD *)(v108 - 8);
  v9 = MEMORY[0x24BDAC7A8](v108);
  v107 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v106 = (uint64_t)&v89 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380EA0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380EA8);
  v15 = MEMORY[0x24BDAC7A8](v96);
  v98 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v99 = (uint64_t)&v89 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v97 = (uint64_t)&v89 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v89 - v21;
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_BYTE *)(a1 + 56);
  sub_2412C7080(v23, v24);
  sub_2412FA328(v23, v24, &v122);
  sub_2412C821C(v23, v24);
  v101 = v12;
  v102 = v22;
  v89 = a2;
  if ((v122 == 1
     || (sub_2412C7080(v23, v24), sub_2412FA328(v23, v24, &v122), sub_2412C821C(v23, v24), v122 == 2))
    && (v25 = *(_QWORD *)(a1 + 8), swift_beginAccess(), v26 = *(unsigned __int8 *)(v25 + 32), v26 != 255))
  {
    v29 = v25 + 16;
    v27 = *(_QWORD *)(v25 + 16);
    v93 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v29 + 8);
    v28 = v93;
    *(_QWORD *)&v92 = v27;
    *((_QWORD *)&v123 + 1) = &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration;
    *(_QWORD *)v124 = sub_241398B54();
    *(_QWORD *)&v122 = v27;
    *((_QWORD *)&v122 + 1) = v28;
    LOBYTE(v123) = v26 & 1;
    v30 = *(_QWORD *)(a1 + 8);
    swift_beginAccess();
    LODWORD(v91) = *(unsigned __int8 *)(v30 + 57);
    v31 = swift_allocObject();
    v32 = v103;
    v33 = v104;
    *(_QWORD *)(v31 + 16) = v103;
    *(_QWORD *)(v31 + 24) = v33;
    v34 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v31 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v31 + 48) = v34;
    *(_OWORD *)(v31 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v31 + 73) = *(_OWORD *)(a1 + 41);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v32;
    *(_QWORD *)(v35 + 24) = v33;
    v36 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v35 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v35 + 48) = v36;
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v35 + 73) = *(_OWORD *)(a1 + 41);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v32;
    *(_QWORD *)(v37 + 24) = v33;
    v38 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v37 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v37 + 48) = v38;
    *(_OWORD *)(v37 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v37 + 73) = *(_OWORD *)(a1 + 41);
    sub_2412FAA04(&v122, (uint64_t)&v109);
    LOBYTE(v112) = v91;
    *((_QWORD *)&v112 + 1) = sub_241398BA0;
    v113 = v31;
    v114 = sub_241398BC8;
    v115 = v35;
    v116 = sub_241398BF0;
    v117 = v37;
    sub_241303CFC((uint64_t)&v109, (uint64_t)&v122);
    *(_QWORD *)&v130 = 0x3FF0000000000000;
    WORD4(v130) = 0;
    sub_2412FA354(a1);
    sub_2412FA354(a1);
    sub_2412FA354(a1);
    sub_2412FAA1C(v92, (uint64_t)v93, v26);
    sub_241303CD0(&v109);
    sub_2414B4A44();
    sub_2414B31B4();
    sub_2412DC3FC((uint64_t)&v122, (uint64_t)&v109, &qword_254380BF0);
    v119 = v143;
    v120 = v144;
    v121 = v145;
    sub_2412CBE78((uint64_t)&v122, &qword_254380BF0);
    KeyPath = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)&v109, (uint64_t)&v122, &qword_254380DB0);
    v131 = KeyPath;
    v132 = v89;
    swift_retain();
    sub_2412CBE78((uint64_t)&v109, &qword_254380DB0);
    v40 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v41 = sub_2412F6E9C();
    v43 = v42;

    *(_QWORD *)&v109 = v41;
    *((_QWORD *)&v109 + 1) = v43;
    sub_2414B4DF8();
    sub_2414B4DF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380E58);
    sub_241300694();
    v44 = (uint64_t)v90;
    v22 = v102;
    sub_2414B4408();
    v12 = v101;
    swift_bridgeObjectRelease();
    sub_2412CBE78((uint64_t)&v122, &qword_254380E58);
    sub_2412EAEA4(v44, (uint64_t)v22, &qword_254380EA0);
    v45 = 0;
  }
  else
  {
    v45 = 1;
  }
  v93 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v13 + 56);
  v93(v22, v45, 1, v12);
  swift_retain();
  v46 = sub_2414B3658();
  v48 = v47;
  _s17TransportControlsCMa();
  sub_2412F0B40((unint64_t *)&qword_25437EDE0, v49, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  v50 = sub_2414B33C4();
  *(_QWORD *)&v146 = v46;
  *((_QWORD *)&v146 + 1) = v48;
  *(_QWORD *)&v147 = v50;
  *((_QWORD *)&v147 + 1) = v51;
  v148 = xmmword_2414BFF30;
  sub_2412EAEA4((uint64_t)&v148, (uint64_t)v151, &qword_2543844E0);
  v149 = v146;
  v150 = v147;
  v122 = v146;
  v123 = v147;
  *(_OWORD *)v124 = v148;
  v52 = MEMORY[0x242695AE8](&unk_2414C0308, v7);
  sub_2414B418C();
  sub_2412FAA5C((uint64_t)&v149);
  sub_2412FAA84((uint64_t)&v150);
  sub_2412FAA34((uint64_t)v151);
  v92 = v109;
  v139 = v109;
  v140 = v110;
  *(_QWORD *)v141 = v111;
  v91 = v112;
  *(_OWORD *)&v141[8] = v112;
  v142 = v113;
  sub_2414B4A44();
  v138[0] = v52;
  v138[1] = MEMORY[0x24BDEEC40];
  v53 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v94, v138);
  sub_2414B44A4();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v94 = v122;
  v109 = v122;
  v110 = v123;
  v111 = *(_QWORD *)v124;
  v92 = *(_OWORD *)&v124[8];
  v112 = *(_OWORD *)&v124[8];
  LOWORD(v113) = v125;
  v114 = v126;
  LOBYTE(v115) = v127;
  v116 = v128;
  LOBYTE(v117) = v129;
  v118 = v130;
  v137[0] = v53;
  v137[1] = MEMORY[0x24BDEBEE0];
  v54 = MEMORY[0x24BDED308];
  v55 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v95, v137);
  v56 = (uint64_t)v107;
  sub_2412F6DCC();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v57 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v136[0] = v55;
  v136[1] = v57;
  v58 = v108;
  v95 = MEMORY[0x242695AE8](v54, v108, v136);
  sub_2412FBF34(v56, v58, v106);
  v59 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
  v59(v56, v58);
  v60 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  v61 = *(unsigned __int8 *)(v60 + 56);
  if (v61 == 255)
  {
    v80 = v97;
    v81 = 1;
  }
  else
  {
    *(_QWORD *)&v94 = v59;
    v63 = *(_QWORD *)(v60 + 40);
    *(_QWORD *)&v92 = *(_QWORD *)(v60 + 48);
    v62 = v92;
    *((_QWORD *)&v123 + 1) = &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration;
    *(_QWORD *)v124 = sub_2413033FC();
    *(_QWORD *)&v122 = v63;
    *((_QWORD *)&v122 + 1) = v62;
    LOBYTE(v123) = v61 & 1;
    v64 = *(_QWORD *)(a1 + 8);
    swift_beginAccess();
    v65 = *(_BYTE *)(v64 + 57);
    v66 = swift_allocObject();
    v67 = v103;
    v68 = v104;
    *(_QWORD *)(v66 + 16) = v103;
    *(_QWORD *)(v66 + 24) = v68;
    v69 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v66 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v66 + 48) = v69;
    *(_OWORD *)(v66 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v66 + 73) = *(_OWORD *)(a1 + 41);
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = v67;
    *(_QWORD *)(v70 + 24) = v68;
    v71 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v70 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v70 + 48) = v71;
    *(_OWORD *)(v70 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v70 + 73) = *(_OWORD *)(a1 + 41);
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = v67;
    *(_QWORD *)(v72 + 24) = v68;
    v73 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v72 + 48) = v73;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v72 + 73) = *(_OWORD *)(a1 + 41);
    sub_2412FAA04(&v122, (uint64_t)&v109);
    LOBYTE(v112) = v65;
    *((_QWORD *)&v112 + 1) = sub_241398ADC;
    v113 = v66;
    v114 = sub_241398B04;
    v115 = v70;
    v116 = sub_241398B2C;
    v117 = v72;
    sub_241303CFC((uint64_t)&v109, (uint64_t)&v122);
    *(_QWORD *)&v130 = 0x3FF0000000000000;
    WORD4(v130) = 0;
    sub_2412FA354(a1);
    sub_2412FA354(a1);
    sub_2412FA354(a1);
    v59 = (void (*)(uint64_t, uint64_t))v94;
    sub_2412FAA1C(v63, v92, v61);
    sub_241303CD0(&v109);
    sub_2414B4A44();
    sub_2414B31B4();
    sub_2412DC3FC((uint64_t)&v122, (uint64_t)&v109, &qword_254380BF0);
    v119 = v139;
    v120 = v140;
    v121 = *(_OWORD *)v141;
    sub_2412CBE78((uint64_t)&v122, &qword_254380BF0);
    v74 = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)&v109, (uint64_t)&v122, &qword_254380DB0);
    v131 = v74;
    v132 = v89;
    swift_retain();
    sub_2412CBE78((uint64_t)&v109, &qword_254380DB0);
    v75 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v76 = sub_2412F6E9C();
    v78 = v77;

    *(_QWORD *)&v109 = v76;
    *((_QWORD *)&v109 + 1) = v78;
    sub_2414B4DF8();
    sub_2414B4DF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380E58);
    sub_241300694();
    v79 = (uint64_t)v90;
    sub_2414B4408();
    swift_bridgeObjectRelease();
    sub_2412CBE78((uint64_t)&v122, &qword_254380E58);
    v80 = v97;
    sub_2412EAEA4(v79, v97, &qword_254380EA0);
    v81 = 0;
  }
  v93(v80, v81, 1, v101);
  v82 = (uint64_t)v102;
  v83 = v99;
  sub_2412DC3FC((uint64_t)v102, v99, &qword_254380EA8);
  *(_QWORD *)&v122 = v83;
  v84 = v106;
  v86 = v107;
  v85 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v107, v106, v108);
  *((_QWORD *)&v122 + 1) = v86;
  v87 = v98;
  sub_2412DC3FC(v80, v98, &qword_254380EA8);
  *(_QWORD *)&v123 = v87;
  *(_QWORD *)&v109 = v96;
  *((_QWORD *)&v109 + 1) = v85;
  *(_QWORD *)&v110 = v96;
  v133 = sub_2412C8620(&qword_254380EB0, &qword_254380EA8, (uint64_t (*)(void))sub_241300588, MEMORY[0x24BDF5578]);
  v134 = v95;
  v135 = v133;
  sub_2412F68CC((uint64_t *)&v122, 3uLL, (uint64_t)&v109);
  sub_2412CBE78(v80, &qword_254380EA8);
  v59(v84, v85);
  sub_2412CBE78(v82, &qword_254380EA8);
  sub_2412CBE78(v87, &qword_254380EA8);
  v59((uint64_t)v86, v85);
  return sub_2412CBE78(v83, &qword_254380EA8);
}

uint64_t sub_2412F9580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  char v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE v63[12];
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;

  v81 = a2;
  v79 = sub_2414B3BEC();
  v78 = *(_QWORD *)(v79 - 8);
  v80 = *(_QWORD *)(v78 + 64);
  MEMORY[0x24BDAC7A8](v79);
  v77 = &v63[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for TransportButtonStyle();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = *(_QWORD *)(v75 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v74 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2414B3BC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380CE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380DF8);
  MEMORY[0x24BDAC7A8](v67);
  v14 = &v63[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E78);
  MEMORY[0x24BDAC7A8](v68);
  v16 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380EC0);
  MEMORY[0x24BDAC7A8](v70);
  v69 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DB30);
  MEMORY[0x24BDAC7A8](v84);
  v82 = &v63[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25437DC20);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = &v63[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414B3BD4();
  v20 = sub_2414B3B38();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v12, v9, v6);
  *(_DWORD *)&v12[*(int *)(v10 + 36)] = v20;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v21 = v4;
  v22 = *(int *)(v4 + 20);
  v23 = v83;
  v24 = v83 + v22;
  v25 = *(_QWORD *)v24;
  LOBYTE(v6) = *(_BYTE *)(v24 + 8);
  sub_2412C7080(*(_QWORD *)v24, v6);
  LOBYTE(v20) = sub_2412F9C24(v25, v6);
  sub_2412C821C(v25, v6);
  if ((v20 & 1) != 0)
    v26 = 1.0;
  else
    v26 = 0.5;
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_254380CE0);
  *(double *)&v14[*(int *)(v67 + 36)] = v26;
  sub_2412CBE78((uint64_t)v12, &qword_254380CE0);
  if ((sub_2414B3BE0() & 1) != 0)
    v27 = *(double *)(v23 + *(int *)(v21 + 28)) * 0.8;
  else
    v27 = *(double *)(v23 + *(int *)(v21 + 28));
  sub_2414B4B64();
  v29 = v28;
  v31 = v30;
  sub_2412DC3FC((uint64_t)v14, (uint64_t)v16, &qword_254380DF8);
  v32 = (double *)&v16[*(int *)(v68 + 36)];
  *v32 = v27;
  v32[1] = v27;
  *((_QWORD *)v32 + 2) = v29;
  *((_QWORD *)v32 + 3) = v31;
  sub_2412CBE78((uint64_t)v14, &qword_254380DF8);
  sub_2414B3BE0();
  v33 = sub_2414B4AD4();
  v66 = a1;
  v34 = sub_2414B3BE0();
  v35 = v69;
  sub_2412DC3FC((uint64_t)v16, (uint64_t)v69, &qword_254380E78);
  v36 = &v35[*(int *)(v70 + 36)];
  *(_QWORD *)v36 = v33;
  v36[8] = v34 & 1;
  sub_2412CBE78((uint64_t)v16, &qword_254380E78);
  v70 = sub_2414B4A44();
  v68 = v37;
  sub_2412F9EA4(v23, (uint64_t)&v85);
  v38 = v85;
  v39 = v86;
  v40 = v87;
  v41 = v88;
  v42 = v89;
  v43 = v90;
  v44 = v91;
  v67 = v92;
  v65 = v93;
  v45 = v94;
  v46 = v95;
  v64 = v96;
  v47 = v82;
  sub_2412DC3FC((uint64_t)v35, (uint64_t)v82, &qword_254380EC0);
  v48 = &v47[*(int *)(v84 + 36)];
  *(_QWORD *)v48 = v38;
  v48[8] = v39;
  v48[9] = v40;
  *((_QWORD *)v48 + 2) = v41;
  v48[24] = v42;
  *((_QWORD *)v48 + 4) = v43;
  v48[40] = v44;
  v49 = v65;
  *((_QWORD *)v48 + 6) = v67;
  *((_QWORD *)v48 + 7) = v49;
  *((_QWORD *)v48 + 8) = v45;
  *((_QWORD *)v48 + 9) = v46;
  v48[80] = v64;
  v50 = v68;
  *((_QWORD *)v48 + 11) = v70;
  *((_QWORD *)v48 + 12) = v50;
  sub_2412CBE78((uint64_t)v35, &qword_254380EC0);
  v51 = v66;
  LOBYTE(v85) = sub_2414B3BE0() & 1;
  v52 = v74;
  sub_2412C824C(v83, (uint64_t)v74);
  v53 = v78;
  v54 = v77;
  v55 = v79;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v78 + 16))(v77, v51, v79);
  v56 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  v57 = v53;
  v58 = (v76 + *(unsigned __int8 *)(v53 + 80) + v56) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v59 = swift_allocObject();
  sub_2412F9DDC((uint64_t)v52, v59 + v56);
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v57 + 32))(v59 + v58, v54, v55);
  sub_2412F9E20();
  v60 = v71;
  v61 = v82;
  sub_2414B4564();
  swift_release();
  sub_2412CBE78((uint64_t)v61, &qword_25437DB30);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v72 + 32))(v81, v60, v73);
}

uint64_t sub_2412F9C24(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_2414B51AC();
  v9 = sub_2414B3E08();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_2412E4890(1819242306, 0xE400000000000000, &v15);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v12, -1, -1);
    MEMORY[0x242695BD8](v11, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  sub_2412C821C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2412F9DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2412F9E20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25437DB28;
  if (!qword_25437DB28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DB30);
    v2[0] = sub_2413004E4();
    v2[1] = sub_2412C8FC4(&qword_25437DB60, &qword_25437DB68, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25437DB28);
  }
  return result;
}

uint64_t sub_2412F9EA4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_2414B2F8C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  sub_2414B3BE0();
  sub_2412FA2F8((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BDEB3F0], v4);
  v11 = sub_2414B2F80();
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  if ((v11 & 1) != 0)
    sub_2414B4654();
  else
    sub_2414B463C();
  v26 = sub_2414B466C();
  swift_release();
  v13 = a1 + *(int *)(type metadata accessor for TransportButtonStyle() + 24);
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_2412C7080(*(_QWORD *)v13, v15);
  sub_2412FA134(v14, v15);
  sub_2412C821C(v14, v15);
  sub_2412C7080(v14, v15);
  sub_2412FA134(v14, v15);
  sub_2412C821C(v14, v15);
  sub_2414B4A44();
  sub_2414B31B4();
  v16 = v27;
  v17 = v28;
  v18 = v29;
  v19 = v30;
  v21 = v31;
  v20 = v32;
  if ((sub_2414B3BE0() & 1) != 0)
    v22 = 1.0;
  else
    v22 = 0.0;
  v23 = sub_2414B4AD4();
  result = sub_2414B3BE0();
  *(_QWORD *)a2 = v26;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v18;
  *(_BYTE *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v20;
  *(double *)(a2 + 64) = v22;
  *(_QWORD *)(a2 + 72) = v23;
  *(_BYTE *)(a2 + 80) = result & 1;
  return result;
}

uint64_t sub_2412FA134(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_2414B51AC();
  v9 = sub_2414B3E08();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_2412E4890(0xD000000000000041, 0x80000002414CEFE0, &v15);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v12, -1, -1);
    MEMORY[0x242695BD8](v11, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  sub_2412C821C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2412FA2F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_254380B58, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_2412FA328@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412EF34C(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C7080, 0xD000000000000010, 0x80000002414CED20, (void (*)(_QWORD, _QWORD))sub_2412C821C, a3);
}

uint64_t sub_2412FA354(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_2412C7080(v2, v3);
  return a1;
}

uint64_t sub_2412FA3B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B28);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v2, (uint64_t)v10, &qword_254380B28);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_2412DC3B8((uint64_t)v10, a1, type metadata accessor for ArtworkCornerStyle);
  v12 = sub_2414B51AC();
  v13 = sub_2414B3E08();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_2412E4890(0xD000000000000012, 0x80000002414CEF50, &v19);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v17, -1, -1);
    MEMORY[0x242695BD8](v15, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2412FA5E4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[3];
  uint64_t v26;
  _QWORD v27[5];
  char v28;

  v10 = v5;
  v12 = sub_2414B382C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v10, (uint64_t)v27, a1);
  if (v28 == 1)
    return a2(v27, a5);
  v17 = v27[0];
  v18 = sub_2414B51AC();
  v19 = sub_2414B3E08();
  if (os_log_type_enabled(v19, v18))
  {
    v25[0] = a4;
    v20 = swift_slowAlloc();
    v25[1] = v17;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v23 = a3;
    v24 = v22;
    v26 = v22;
    *(_DWORD *)v21 = 136315138;
    v25[2] = sub_2412E4890(v23, v25[0], &v26);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v24, -1, -1);
    MEMORY[0x242695BD8](v21, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_2412FA7CC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_2414B382C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_2414B51AC();
    v21 = sub_2414B3E08();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_2412E4890(v28, v26, &v30);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v24, -1, -1);
      MEMORY[0x242695BD8](v23, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_2412FAA04(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2412FAA1C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_2412FAF1C();
  return result;
}

uint64_t sub_2412FAA34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2412FAA5C(uint64_t a1)
{
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_2412FAA84(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_2412FAAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, uint64_t))
{
  int v13;
  void (*v14)(uint64_t *, _QWORD);
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  v27 = a4;
  v13 = ~(_BYTE)a3;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (!v13)
  {
    if (v26 == 255)
      goto LABEL_20;
    goto LABEL_11;
  }
  if (v26 == 255)
  {
    sub_2412FAF1C();
    sub_2412FAF1C();
    sub_2412FAF80();
LABEL_11:
    v22 = a8;
    a8(a1, a2, a3);
    a8(v24, v25, v26);
LABEL_18:
    _s17TransportControlsCMa();
    sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v27 = a4;
    swift_retain();
    v14 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v16 = v15;
    v17 = *v15;
    v18 = v15[1];
    v19 = *((unsigned __int8 *)v15 + 16);
    a7(a1, a2, a3);
    v22(v17, v18, v19);
    *v16 = a1;
    v16[1] = a2;
    *((_BYTE *)v16 + 16) = a3;
    v14(&v24, 0);
    swift_release();
    swift_release();
    swift_release();
    v22(a1, a2, a3);
    return swift_release();
  }
  if ((a3 & 1) != 0)
  {
    if ((v26 & 1) != 0)
    {
      if (v24 != a1 || v25 != a2)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_16:
    a7(a1, a2, a3);
    sub_2412FAF80();
    a8(v24, v25, v26);
LABEL_17:
    v22 = a8;
    goto LABEL_18;
  }
  if ((v26 & 1) != 0)
    goto LABEL_16;
  if (v24 != a1 || v25 != a2)
  {
LABEL_19:
    v21 = sub_2414B57D0();
    a7(a1, a2, a3);
    sub_2412FAF80();
    a8(v24, v25, v26);
    if ((v21 & 1) != 0)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_15:
  a7(a1, a2, a3);
  sub_2412FAF80();
  a8(a1, a2, v26);
LABEL_20:
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a8)(a1, a2, a3);
}

uint64_t initializeWithCopy for TransportButton(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v9 = *(_QWORD *)(a2 + 80);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t _s11MediaCoreUI20TransportButtonImageOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2412FAF1C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_2412FAF1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for TransportButton(_QWORD *a1)
{
  uint64_t result;

  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if (a1[6])
    result = swift_release();
  if (a1[8])
    result = swift_release();
  if (a1[10])
    return swift_release();
  return result;
}

uint64_t sub_2412FAF80()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s35LeadingTransportButtonConfigurationVwxx()
{
  return sub_2412FAF80();
}

uint64_t sub_2412FAF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s17TransportControlsCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s17TransportControlsCMa()
{
  return objc_opt_self();
}

uint64_t sub_2412FAFF4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_2412FAF80();
  return result;
}

uint64_t storeEnumTagSinglePayload for TransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2412FB068@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s21CenterTransportButtonVMa(0, a2, a3, a4);
  v7 = a1[3];
  swift_beginAccess();
  v8 = 8 * *(char *)(v7 + 33);
  v9 = *(_QWORD *)&aPlay_3[v8];
  v10 = *(_QWORD *)((char *)&unk_2414C0780 + v8);
  v12 = a1[4];
  v11 = a1[5];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)a5 = 0xD000000000000018;
  *(_QWORD *)(a5 + 8) = 0x80000002414D0FE0;
  *(_QWORD *)(a5 + 16) = v9;
  *(_QWORD *)(a5 + 24) = v10;
  *(_QWORD *)(a5 + 32) = sub_241304440;
  *(_QWORD *)(a5 + 40) = v13;
  *(_BYTE *)(a5 + 48) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t _s21CenterTransportButtonVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21CenterTransportButtonVMn);
}

double sub_2412FB140@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;

  v2 = sub_2414B3658();
  v4 = v3;
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v6;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_2412FB1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[5];
  char v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51[2];
  char v52[8];
  uint64_t v53;
  char v54;
  char v55[8];
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  sub_2412C7080(v7, v8);
  sub_2412F65C0(v7, v8, &v63);
  sub_2412C821C(v7, v8);
  if ((v63 & 1) != 0)
  {
    v59 = 2;
    _s18ArtworkPlaceholderVMa(255, a2, a3, v9);
    v60 = 0u;
    v61 = 0u;
    v62 = 0;
    swift_getTupleTypeMetadata2();
    v10 = sub_2414B4B1C();
    MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v10);
    sub_2412F65F0((uint64_t)&v59, (uint64_t)&v63);
  }
  else
  {
    v12 = sub_2412FB568(0);
    v14 = v13;
    LOBYTE(v63) = v12 & 1;
    v16 = v15 & 1;
    v64 = v13;
    LOBYTE(v65) = v15 & 1;
    v18 = _s18ArtworkPlaceholderVMa(0, a2, a3, v17);
    v19 = MEMORY[0x242695AE8](&unk_2414BF158, v18);
    sub_2412FBF34((uint64_t)&v63, v18, (uint64_t)v55);
    sub_2412C821C(v14, v16);
    v20 = sub_2412FB568(1);
    v22 = v21;
    LOBYTE(v63) = v20 & 1;
    v24 = v23 & 1;
    v64 = v21;
    LOBYTE(v65) = v23 & 1;
    sub_2412FBF34((uint64_t)&v63, v18, (uint64_t)v52);
    sub_2412C821C(v22, v24);
    v48 = v55[0];
    v49 = v56;
    v50 = v57;
    v25 = v53;
    v26 = v54;
    v45 = v52[0];
    v46 = v53;
    v47 = v54;
    v51[0] = (uint64_t)&v48;
    v51[1] = (uint64_t)&v45;
    sub_2412C7080(v56, v57);
    sub_2412C7080(v25, v26);
    v44[0] = v18;
    v44[1] = v18;
    v42 = v19;
    v43 = v19;
    sub_2412F68CC(v51, 2uLL, (uint64_t)v44);
    sub_2412C821C(v53, v54);
    sub_2412C821C(v56, v57);
    sub_2412C821C(v46, v47);
    sub_2412C821C(v49, v50);
    v27 = v60;
    LOBYTE(v25) = BYTE8(v60);
    v28 = *((_QWORD *)&v61 + 1);
    v29 = v62;
    v40[0] = v59;
    v40[1] = v60;
    v40[2] = BYTE8(v60);
    v40[3] = v61;
    v40[4] = *((_QWORD *)&v61 + 1);
    v41 = v62;
    swift_getTupleTypeMetadata2();
    v30 = sub_2414B4B1C();
    MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v30);
    sub_2412F65F0((uint64_t)v40, (uint64_t)&v63);
    sub_2412C821C(v27, v25);
    sub_2412C821C(v28, v29);
  }
  v31 = v63;
  v32 = v64;
  v33 = v65;
  v34 = v66;
  v35 = v67;
  v36 = v68;
  _s18ArtworkPlaceholderVMa(255, a2, a3, v11);
  swift_getTupleTypeMetadata2();
  v37 = sub_2414B4B1C();
  v38 = sub_2414B53B0();
  v58 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v37);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v38, &v58);
  sub_2412EEA1C((uint64_t)&v63, v38, a4);
  return sub_2412FB5A4(v31, v32, v33, v34, v35, v36);
}

uint64_t _s18ArtworkPlaceholderVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18ArtworkPlaceholderVMn);
}

uint64_t sub_2412FB568(char a1)
{
  uint64_t v1;

  v1 = a1 & 1;
  swift_getKeyPath();
  return v1;
}

uint64_t sub_2412FB5A4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result != 2)
  {
    sub_2412C821C(a2, a3 & 1);
    return sub_2412C821C(a5, a6 & 1);
  }
  return result;
}

uint64_t sub_2412FB5EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  _QWORD *v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  _QWORD v112[2];
  _QWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  __int128 v121;
  _QWORD v122[2];
  _QWORD v123[3];
  _QWORD v124[2];
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  __int128 v132;
  uint64_t v133[3];

  v93 = a5;
  v8 = _s31MiniPlayerTransportControlsViewVMa(255, a2, a3, a4);
  sub_2414B3DB4();
  v87 = v8;
  v92 = sub_2414B3514();
  v88 = *(_QWORD *)(v92 - 8);
  v9 = MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v89 = (uint64_t)&v77 - v11;
  v84 = (_QWORD *)_s22MiniPlayerMetadataViewVMa(255, a2, a3, v12);
  v90 = sub_2414B3514();
  v98 = *(_QWORD *)(v90 - 8);
  v13 = MEMORY[0x24BDAC7A8](v90);
  v100 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v99 = (uint64_t)&v77 - v15;
  v16 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v16);
  v94 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v18);
  v79 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  _s18ArtworkPlaceholderVMa(255, a2, a3, v20);
  swift_getTupleTypeMetadata2();
  v21 = sub_2414B4B1C();
  v22 = sub_2414B53B0();
  v133[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v21);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v22, v133);
  v77 = sub_2414B3604();
  v78 = sub_2414B3514();
  v23 = sub_2414B3514();
  v81 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v95 = (char *)&v77 - v24;
  v82 = v25;
  v26 = sub_2414B3514();
  v96 = *(_QWORD *)(v26 - 8);
  v97 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v80 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v102 = (char *)&v77 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v101 = (uint64_t)&v77 - v31;
  v125 = sub_2414B4648();
  v126 = 0x3FF0000000000000;
  LOWORD(v127) = 0;
  *(_QWORD *)&v85 = a2;
  v103 = a2;
  v104 = a3;
  *(_QWORD *)&v86 = a3;
  v83 = a1;
  v105 = a1;
  sub_2414B4A44();
  v32 = sub_2412FBF38();
  sub_2414B4504();
  swift_release();
  v33 = *((_QWORD *)&v116 + 1);
  v35 = v117;
  v34 = v118;
  v36 = v119;
  LOBYTE(v22) = v120;
  v125 = v114;
  v126 = v115;
  LOWORD(v127) = v116;
  *((_QWORD *)&v127 + 1) = *((_QWORD *)&v116 + 1);
  v128 = v117;
  v129 = v118;
  v130 = v119;
  v131 = v120;
  v132 = v121;
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v77);
  v124[0] = v32;
  v124[1] = v37;
  v38 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v78, v124);
  sub_2412F6DCC();
  swift_release();
  sub_2412FB5A4(v33, v35, SBYTE8(v35), v34, v36, v22);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v39 = (id)qword_25438E910;
  sub_2414B2B3C();
  v114 = sub_2414B4D80();
  v115 = v40;
  v41 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v123[0] = v38;
  v123[1] = v41;
  v42 = v41;
  v94 = (char *)v41;
  v43 = MEMORY[0x24BDED308];
  v44 = v82;
  v45 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v82, v123);
  sub_2412F6D88();
  v46 = v80;
  v47 = v95;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v44);
  v48 = (uint64_t)v102;
  v49 = v97;
  sub_2414B34D8();
  v50 = *(void (**)(char *, uint64_t))(v96 + 8);
  v50(v46, v49);
  v95 = (char *)v50;
  v122[0] = v45;
  v122[1] = v42;
  v82 = MEMORY[0x242695AE8](v43, v49, v122);
  sub_2412FBF34(v48, v49, v101);
  v50((char *)v48, v49);
  v51 = *v83;
  v52 = v86;
  v53 = v85;
  sub_2412C84FC(*v83);
  v81 = *(_QWORD *)(v52 + 208);
  v54 = (void (*)(uint64_t, uint64_t))v81;
  swift_unknownObjectRetain();
  v54(v53, v52);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_2412FC0B0((uint64_t)&v114);
  v55 = v84;
  v56 = MEMORY[0x242695AE8](&unk_2414BAE38, v84);
  v57 = (uint64_t)v100;
  sub_2414B4420();
  (*(void (**)(uint64_t *, _QWORD *))(*(v55 - 1) + 8))(&v114, v55);
  v113[0] = v56;
  v113[1] = v94;
  v58 = v90;
  v83 = (uint64_t *)MEMORY[0x242695AE8](MEMORY[0x24BDED308], v90, v113);
  sub_2412FBF34(v57, v58, v99);
  v84 = *(_QWORD **)(v98 + 8);
  v59 = v57;
  v60 = v58;
  ((void (*)(uint64_t, uint64_t))v84)(v59, v58);
  sub_2412C84FC(v51);
  swift_unknownObjectRetain();
  ((void (*)(uint64_t, uint64_t))v81)(v53, v52);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_2412FBF9C(v53, v52, (uint64_t)&v114);
  v61 = v118;
  LOBYTE(v55) = v119;
  v125 = v114;
  v126 = v115;
  v85 = v116;
  v86 = v117;
  v127 = v116;
  v128 = v117;
  v129 = v118;
  LOBYTE(v130) = v119;
  v62 = MEMORY[0x242695AE8](&unk_2414C0118, v87);
  v63 = (uint64_t)v91;
  sub_2414B4420();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_2412C821C(v61, (char)v55);
  v112[0] = v62;
  v112[1] = v94;
  v64 = v92;
  v94 = (char *)MEMORY[0x242695AE8](MEMORY[0x24BDED308], v92, v112);
  v65 = v89;
  sub_2412FBF34(v63, v64, v89);
  v66 = v88;
  v67 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
  v67(v63, v64);
  v68 = v97;
  v69 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v102, v101, v97);
  v114 = v69;
  v70 = v99;
  v71 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v100, v99, v60);
  v115 = (uint64_t)v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v63, v65, v64);
  v110 = 0x4020000000000000;
  v111 = 0;
  *(_QWORD *)&v116 = v63;
  *((_QWORD *)&v116 + 1) = &v110;
  v125 = v68;
  v126 = v60;
  *(_QWORD *)&v127 = v64;
  *((_QWORD *)&v127 + 1) = MEMORY[0x24BDF4638];
  v106 = v82;
  v107 = v83;
  v108 = v94;
  v109 = MEMORY[0x24BDF4610];
  sub_2412F68CC(&v114, 4uLL, (uint64_t)&v125);
  v67(v65, v64);
  v72 = (void (*)(char *, uint64_t))v84;
  ((void (*)(uint64_t, uint64_t))v84)(v70, v60);
  v73 = v68;
  v74 = v68;
  v75 = (uint64_t (*)(char *, uint64_t))v95;
  ((void (*)(uint64_t, uint64_t))v95)(v101, v73);
  v67(v63, v64);
  v72(v71, v60);
  return v75(v102, v74);
}

unint64_t sub_2412FBF38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380D20;
  if (!qword_254380D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
    v2[0] = MEMORY[0x24BDF3E20];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D20);
  }
  return result;
}

uint64_t sub_2412FBF9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  _s17TransportControlsCMa();
  sub_2412F0B40((unint64_t *)&qword_25437EDE0, v6, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  *(_QWORD *)a3 = sub_2414B33C4();
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = sub_2414B3658();
  *(_QWORD *)(a3 + 24) = v8;
  v10 = type metadata accessor for NowPlayingViewControllerProxy(0, a1, a2, v9);
  MEMORY[0x242695AE8](&unk_2414CCC70, v10);
  *(_QWORD *)(a3 + 32) = sub_2414B3658();
  *(_QWORD *)(a3 + 40) = v11;
  result = swift_getKeyPath();
  *(_QWORD *)(a3 + 48) = result;
  *(_BYTE *)(a3 + 56) = 0;
  return result;
}

uint64_t sub_2412FC064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingViewControllerProxy(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = sub_2414B2DA0();
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for NowPlayingViewControllerProxy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingViewControllerProxy);
}

uint64_t sub_2412FC0B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  _s18MiniPlayerMetadataCMa();
  sub_2412F0B40(&qword_25437EF28, v2, (uint64_t (*)(uint64_t))_s18MiniPlayerMetadataCMa, (uint64_t)&unk_2414BA9A8);
  *(_QWORD *)a1 = sub_2414B33C4();
  *(_QWORD *)(a1 + 8) = v3;
  type metadata accessor for NowPlayingRouteObserver();
  sub_2412F0B40(&qword_25437FFB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
  *(_QWORD *)(a1 + 16) = sub_2414B3658();
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = swift_getKeyPath();
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = swift_getKeyPath();
  *(_BYTE *)(a1 + 88) = 0;
  result = swift_getKeyPath();
  *(_QWORD *)(a1 + 96) = result;
  *(_BYTE *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_2412FC188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s18MiniPlayerMetadataCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t _s18MiniPlayerMetadataCMa()
{
  return objc_opt_self();
}

uint64_t sub_2412FC1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;
  uint64_t v56;
  char v57;
  uint64_t result;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t inited;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  _QWORD v109[2];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __int128 *v164;
  _QWORD v165[2];
  _QWORD v166[2];
  uint64_t v167;
  unint64_t v168;
  char v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  _QWORD v177[2];
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  _OWORD v184[5];
  _OWORD v185[5];
  _OWORD v186[2];
  _OWORD v187[3];
  _OWORD v188[2];
  _BYTE v189[80];
  __int128 v190;
  __int128 v191;
  __int128 v192;
  _OWORD v193[3];

  v151 = a2;
  v4 = sub_2414B3CD0();
  v149 = *(_QWORD *)(v4 - 8);
  v150 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v148 = (char *)v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_2414B3AB4();
  MEMORY[0x24BDAC7A8](v141);
  v140 = (char *)v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_2414B2FC8();
  v144 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v142 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380BB8);
  v145 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v143 = (char *)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  _s18ArtworkPlaceholderVMa(255, v10, v11, v12);
  swift_getTupleTypeMetadata2();
  v13 = sub_2414B4B1C();
  v14 = sub_2414B53B0();
  v15 = MEMORY[0x24BDF5428];
  v178 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v13);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v14, &v178);
  sub_2414B3604();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  *(_QWORD *)&v179 = sub_2414B3514();
  v161 = v10;
  v157 = v11;
  _s22MiniPlayerMetadataViewVMa(255, v10, v11, v16);
  *((_QWORD *)&v179 + 1) = sub_2414B3514();
  _s31MiniPlayerTransportControlsViewVMa(255, v10, v11, v17);
  *(_QWORD *)&v180 = sub_2414B3514();
  *((_QWORD *)&v180 + 1) = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v159 = sub_2414B4B1C();
  v158 = MEMORY[0x242695AE8](v15, v159);
  v18 = sub_2414B4804();
  v153 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v156 = (char *)v109 - v19;
  v20 = sub_2414B3514();
  v112 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v160 = (char *)v109 - v21;
  v22 = sub_2414B3514();
  v116 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v114 = (char *)v109 - v23;
  v24 = sub_2414B3514();
  v117 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v115 = (char *)v109 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381060);
  v26 = sub_2414B3514();
  v122 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v120 = (char *)v109 - v27;
  v154 = v18;
  v152 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v18);
  v177[0] = v152;
  v177[1] = MEMORY[0x24BDEBEE0];
  v28 = MEMORY[0x24BDED308];
  v113 = v20;
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v20, v177);
  v30 = MEMORY[0x24BDECC60];
  v109[1] = v29;
  v176[0] = v29;
  v176[1] = MEMORY[0x24BDECC60];
  v118 = v22;
  v110 = MEMORY[0x242695AE8](v28, v22, v176);
  v175[0] = v110;
  v175[1] = v30;
  v119 = v24;
  v31 = MEMORY[0x242695AE8](v28, v24, v175);
  v32 = sub_2412C8FC4(&qword_254381058, &qword_254381060, MEMORY[0x24BDEFAD8]);
  v111 = v31;
  v174[0] = v31;
  v174[1] = v32;
  v33 = MEMORY[0x242695AE8](v28, v26, v174);
  *(_QWORD *)&v179 = v26;
  *((_QWORD *)&v179 + 1) = v33;
  v34 = MEMORY[0x242695A94](0, &v179, MEMORY[0x24BDF2550], 0);
  v129 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v155 = (char *)v109 - v35;
  v124 = v26;
  *(_QWORD *)&v179 = v26;
  *((_QWORD *)&v179 + 1) = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v37 = sub_2412C8FC4(&qword_254380BB0, &qword_254380BB8, MEMORY[0x24BDEC410]);
  *(_QWORD *)&v179 = v34;
  *((_QWORD *)&v179 + 1) = v8;
  *(_QWORD *)&v180 = OpaqueTypeConformance2;
  *((_QWORD *)&v180 + 1) = v37;
  v38 = MEMORY[0x242695A94](0, &v179, MEMORY[0x24BDF2E88], 0);
  v126 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v125 = (char *)v109 - v39;
  v130 = v34;
  *(_QWORD *)&v179 = v34;
  v147 = v8;
  *((_QWORD *)&v179 + 1) = v8;
  v123 = OpaqueTypeConformance2;
  *(_QWORD *)&v180 = OpaqueTypeConformance2;
  v121 = v37;
  *((_QWORD *)&v180 + 1) = v37;
  v40 = swift_getOpaqueTypeConformance2();
  v128 = v38;
  *(_QWORD *)&v179 = v38;
  *((_QWORD *)&v179 + 1) = v40;
  v41 = MEMORY[0x242695A94](0, &v179, MEMORY[0x24BDF2F10], 0);
  v131 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v127 = (char *)v109 - v42;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25437DB40);
  v132 = v41;
  v43 = sub_2414B3514();
  v134 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v133 = (char *)v109 - v44;
  v135 = v45;
  v46 = v157;
  v47 = v161;
  v48 = sub_2414B3514();
  v138 = *(_QWORD *)(v48 - 8);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v136 = (char *)v109 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v137 = (uint64_t)v109 - v51;
  v52 = v2[5];
  v183 = v2[4];
  v184[0] = v52;
  *(_OWORD *)((char *)v184 + 10) = *(__int128 *)((char *)v2 + 90);
  v53 = v2[1];
  v179 = *v2;
  v180 = v53;
  v54 = v2[3];
  v181 = v2[2];
  v182 = v54;
  v162 = v47;
  v163 = v46;
  v164 = &v179;
  v55 = v156;
  sub_2414B3880();
  sub_2414B47F8();
  *((_QWORD *)&v191 + 1) = &type metadata for Features;
  *(_QWORD *)&v192 = sub_2412FD4AC();
  v56 = swift_allocObject();
  *(_QWORD *)&v190 = v56;
  *(_QWORD *)(v56 + 16) = "MediaCoreUI";
  *(_QWORD *)(v56 + 24) = 11;
  *(_BYTE *)(v56 + 32) = 2;
  *(_QWORD *)(v56 + 40) = "Catamaran";
  *(_QWORD *)(v56 + 48) = 9;
  *(_BYTE *)(v56 + 56) = 2;
  v57 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
  v139 = v48;
  if ((v57 & 1) != 0)
  {
    v187[2] = v183;
    v188[0] = v184[0];
    *(_OWORD *)((char *)v188 + 10) = *(_OWORD *)((char *)v184 + 10);
    v187[1] = v182;
    v187[0] = v181;
    v185[4] = v183;
    v186[0] = v184[0];
    *(_OWORD *)((char *)v186 + 10) = *(_OWORD *)((char *)v184 + 10);
    v185[2] = v181;
    v185[3] = v182;
    sub_2413139F4((uint64_t)v187, (uint64_t)v189);
    sub_2412FD220((uint64_t)v189, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v190);
    result = sub_2412FD220((uint64_t)v187, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    if (BYTE2(v191) == 3)
    {
      __break(1u);
      goto LABEL_12;
    }
  }
  sub_2414B4A44();
  v59 = v154;
  sub_2414B44A4();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v55, v59);
  sub_2414B3E38();
  v192 = v183;
  v193[0] = v184[0];
  *(_OWORD *)((char *)v193 + 10) = *(_OWORD *)((char *)v184 + 10);
  v190 = v181;
  v191 = v182;
  v184[4] = v183;
  v185[0] = v184[0];
  *(_OWORD *)((char *)v185 + 10) = *(_OWORD *)((char *)v184 + 10);
  v184[2] = v181;
  v184[3] = v182;
  sub_2412FD220((uint64_t)&v190, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v170);
  result = sub_2412FD220((uint64_t)&v190, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  if (!v173)
  {
    v60 = v155;
    if ((v172 & 1) == 0)
      goto LABEL_6;
LABEL_12:
    __break(1u);
    return result;
  }
  v60 = v155;
LABEL_6:
  v159 = v40;
  v61 = v114;
  v62 = v113;
  v63 = v160;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v63, v62);
  sub_2414B3E8C();
  if (qword_254380328 != -1)
    swift_once();
  v64 = v115;
  v65 = v118;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v61, v65);
  sub_2412FD5B0();
  v66 = v119;
  v67 = v120;
  sub_2414B4234();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v64, v66);
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = v47;
  *(_QWORD *)(v68 + 24) = v46;
  v69 = v184[0];
  *(_OWORD *)(v68 + 96) = v183;
  *(_OWORD *)(v68 + 112) = v69;
  *(_OWORD *)(v68 + 122) = *(_OWORD *)((char *)v184 + 10);
  v70 = v180;
  *(_OWORD *)(v68 + 32) = v179;
  *(_OWORD *)(v68 + 48) = v70;
  v71 = v182;
  *(_OWORD *)(v68 + 64) = v181;
  *(_OWORD *)(v68 + 80) = v71;
  sub_2412FD4F0((uint64_t)&v179);
  v72 = v124;
  sub_2414B4258();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v67, v72);
  v73 = v60;
  if (qword_254380310 != -1)
    swift_once();
  sub_2414B3B80();
  v74 = v142;
  sub_2414B2FB0();
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = v47;
  *(_QWORD *)(v75 + 24) = v46;
  v76 = v184[0];
  *(_OWORD *)(v75 + 96) = v183;
  *(_OWORD *)(v75 + 112) = v76;
  *(_OWORD *)(v75 + 122) = *(_OWORD *)((char *)v184 + 10);
  v77 = v180;
  *(_OWORD *)(v75 + 32) = v179;
  *(_OWORD *)(v75 + 48) = v77;
  v78 = v182;
  *(_OWORD *)(v75 + 64) = v181;
  *(_OWORD *)(v75 + 80) = v78;
  sub_2412FD4F0((uint64_t)&v179);
  sub_2412C8030(&qword_254382B68, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  v79 = v143;
  v80 = v146;
  sub_2414B4960();
  swift_release();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v74, v80);
  sub_2414B2FF8();
  v81 = v125;
  v82 = v130;
  v83 = v147;
  sub_2414B43A8();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v79, v83);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v73, v82);
  v84 = v148;
  sub_2414B3CC4();
  v85 = v127;
  v86 = v128;
  v87 = v159;
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v84, v150);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v81, v86);
  v88 = sub_2414B4A2C();
  v89 = v46;
  MEMORY[0x24BDAC7A8](v88);
  v109[-4] = v90;
  v109[-3] = v46;
  v109[-2] = &v179;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DB18);
  v170 = v86;
  v171 = v87;
  v91 = swift_getOpaqueTypeConformance2();
  sub_2412FDA58();
  v92 = v133;
  v93 = v132;
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v85, v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B9400;
  v170 = 0;
  v171 = 0xE000000000000000;
  sub_2414B4DF8();
  v95 = v180;
  LOBYTE(v82) = BYTE8(v180);
  sub_2412C7080(v180, SBYTE8(v180));
  sub_2412F65C0(v95, v82, &v167);
  sub_2412C821C(v95, v82);
  v169 = v167;
  sub_2414B565C();
  v96 = v171;
  *(_QWORD *)(inited + 32) = v170;
  *(_QWORD *)(inited + 40) = v96;
  v167 = 0x6E6979616C507369;
  v168 = 0xEA00000000003D67;
  v97 = v161;
  sub_2412C84FC(v179);
  v98 = *(void (**)(uint64_t, uint64_t))(v89 + 208);
  swift_unknownObjectRetain();
  v98(v97, v89);
  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_release();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v99 = v168;
  *(_QWORD *)(inited + 48) = v167;
  *(_QWORD *)(inited + 56) = v99;
  v100 = sub_2412C8FC4(&qword_25437DB38, (uint64_t *)&unk_25437DB40, MEMORY[0x24BDEDC10]);
  v166[0] = v91;
  v166[1] = v100;
  v101 = MEMORY[0x24BDED308];
  v102 = v135;
  v103 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v135, v166);
  v104 = (uint64_t)v136;
  sub_2412FD5F4(0xD000000000000016, 0x80000002414CE1D0, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v92, v102);
  v105 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v165[0] = v103;
  v165[1] = v105;
  v106 = v139;
  MEMORY[0x242695AE8](v101, v139, v165);
  v107 = v137;
  sub_2412FBF34(v104, v106, v137);
  v108 = *(void (**)(uint64_t, uint64_t))(v138 + 8);
  v108(v104, v106);
  sub_2412EEA1C(v107, v106, v151);
  return ((uint64_t (*)(uint64_t, uint64_t))v108)(v107, v106);
}

uint64_t sub_2412FD220(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_WORD *)(a1 + 72));
  return a1;
}

uint64_t sub_2412FD278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 73) == 1)
  {
    v9 = *(_BYTE *)(v1 + 72);
    v10 = *(_DWORD *)(v1 + 32);
    v12 = *(_QWORD *)(v1 + 16);
    v11 = *(_QWORD *)(v1 + 24);
    v13 = *(_QWORD *)(v1 + 8);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v13;
    *(_BYTE *)(a1 + 16) = v12 & 1;
    *(_BYTE *)(a1 + 17) = BYTE1(v12);
    *(_BYTE *)(a1 + 18) = BYTE2(v12);
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v10 & 1;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
    *(_BYTE *)(a1 + 72) = v9 & 1;
  }
  else
  {
    sub_2412FD220(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    v14 = sub_2414B51AC();
    v15 = sub_2414B3E08();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20[1] = v8;
      v19 = v18;
      v21 = v18;
      *(_DWORD *)v17 = 136315138;
      v20[0] = v17 + 4;
      v20[2] = sub_2412E4890(0x654D656369766544, 0xED00007363697274, &v21);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v19, -1, -1);
      MEMORY[0x242695BD8](v17, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412FD220(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

unint64_t sub_2412FD4AC()
{
  unint64_t result;

  result = qword_25437D9B8;
  if (!qword_25437D9B8)
  {
    result = MEMORY[0x242695AE8](&unk_2414BDE1C, &type metadata for Features);
    atomic_store(result, (unint64_t *)&qword_25437D9B8);
  }
  return result;
}

uint64_t sub_2412FD4F0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_BYTE *)(a1 + 104);
  v10 = *(_BYTE *)(a1 + 105);
  swift_unknownObjectRetain();
  sub_2412C7080(v2, v3);
  sub_2412C6F48(v15, v14, v13, v4, v5, v6, v7, v12, v8, v9, v10);
  return a1;
}

uint64_t _s31MiniPlayerTransportControlsViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s31MiniPlayerTransportControlsViewVMn);
}

unint64_t sub_2412FD5B0()
{
  unint64_t result;

  result = qword_254381478;
  if (!qword_254381478)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF52E0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_254381478);
  }
  return result;
}

uint64_t sub_2412FD5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    sub_2412F6E9C();

    sub_2414B4DF8();
    sub_2414B4DF8();
    sub_2414B4DF8();
    v14 = MEMORY[0x24BEE4AF8];
    sub_2412FD870(0, v3, 0);
    v6 = (uint64_t *)(a3 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_2412FD870(v9 > 1, v10 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      --v3;
    }
    while (v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815C8);
    sub_2412FD9F4();
    sub_2414B4CB4();
    swift_release();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    sub_2414B4408();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    sub_2412F6E9C();

    sub_2414B4DF8();
    sub_2414B4DF8();
    sub_2414B4408();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2412FD870(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2412FD88C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2412FD88C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

unint64_t sub_2412FD9F4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2543815C0;
  if (!qword_2543815C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543815C8);
    v2 = sub_2413000B8();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE2598], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2543815C0);
  }
  return result;
}

unint64_t sub_2412FDA58()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25437DB20;
  if (!qword_25437DB20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DB18);
    v2 = sub_241300738();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25437DB20);
  }
  return result;
}

uint64_t sub_2412FDABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[3];

  v35 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = _s9VideoViewVMa(255, v3, v4, v5);
  v7 = sub_2414B3514();
  sub_2414B3DB4();
  v8 = sub_2414B3514();
  swift_getAssociatedTypeWitness();
  v9 = sub_2414B3514();
  v47[0] = swift_getAssociatedConformanceWitness();
  v47[1] = sub_2412FDE80();
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v47);
  v40 = v9;
  v41 = v10;
  MEMORY[0x242695A94](255, &v40, MEMORY[0x24BDF2550], 0);
  v11 = sub_2414B3514();
  v12 = sub_2414B3A90();
  v13 = MEMORY[0x242695AE8](&unk_2414CC120, v6);
  v14 = sub_2412EEA34();
  v46[0] = v13;
  v46[1] = v14;
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v46);
  v17 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v45[0] = v16;
  v45[1] = v17;
  v18 = MEMORY[0x242695AE8](v15, v8, v45);
  v40 = v9;
  v41 = v10;
  v44[0] = swift_getOpaqueTypeConformance2();
  v44[1] = v17;
  v19 = MEMORY[0x242695AE8](v15, v11, v44);
  v43[0] = v18;
  v43[1] = v19;
  v31[1] = v12;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v12, v43);
  v20 = sub_2414B3604();
  v21 = sub_2414B3514();
  v32 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v31 - v25;
  v40 = sub_2414B4648();
  v41 = 0;
  v42 = 1;
  v36 = v3;
  v37 = v4;
  v38 = v34;
  sub_2414B4A44();
  v27 = sub_2412FDF24((unint64_t *)&qword_254380D20, &qword_254380D28, MEMORY[0x24BDF3E20]);
  sub_2414B4504();
  swift_release();
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v20);
  v39[0] = v27;
  v39[1] = v28;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v21, v39);
  sub_2412FBF34((uint64_t)v24, v21, (uint64_t)v26);
  v29 = *(void (**)(char *, uint64_t))(v32 + 8);
  v29(v24, v21);
  sub_2412EEA1C((uint64_t)v26, v21, v35);
  return ((uint64_t (*)(char *, uint64_t))v29)(v26, v21);
}

unint64_t sub_2412FDE80()
{
  unint64_t result;

  result = qword_25437FB90;
  if (!qword_25437FB90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C363C, &type metadata for ArtworkStyleModifier);
    atomic_store(result, (unint64_t *)&qword_25437FB90);
  }
  return result;
}

uint64_t sub_2412FDEC4(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2412FDF24(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3;
    v7[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static ApproximatelyEquatable<>.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[6];

  v22[1] = a1;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v22 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v22 - v15;
  sub_2414B4C6C();
  v17 = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8);
  v22[2] = a3;
  v22[3] = v17;
  v22[4] = a5;
  KeyPath = swift_getKeyPath();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v17;
  v19[3] = a5;
  v19[4] = KeyPath;
  sub_2414B4C54();
  sub_2414B50D4();
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, a3);
  LOBYTE(KeyPath) = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(a2, (uint64_t)v14, (uint64_t)v16, (void (*)(uint64_t))sub_2412FE84C, (uint64_t)v19, a3, a3, *(_QWORD *)(v17 + 8), a5);
  v20(v14, a3);
  v20(v16, a3);
  swift_release();
  return KeyPath & 1;
}

uint64_t AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t);
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;

  v50 = a5;
  v51 = a4;
  v52 = a3;
  v54 = a2;
  v49 = *(_QWORD *)(a6 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v55 = (char *)v47 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v53 = (char *)v47 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v47 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v47 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v47 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v47 - v31;
  v48 = v33;
  v35 = v34;
  if ((sub_2414B4CE4() & 1) != 0)
  {
    v36 = 1;
  }
  else
  {
    v47[0] = v9;
    v47[1] = a9;
    sub_2414B568C();
    v37 = v51;
    v48 = v30;
    v51((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, a6);
    v37(v47[0]);
    v37(v35);
    v38 = v48;
    sub_2414B580C();
    v39 = v56;
    v40 = *(void (**)(char *, uint64_t))(v56 + 8);
    v40(v24, a7);
    v40(v27, a7);
    sub_2414B50D4();
    v41 = v53;
    sub_2414B580C();
    v40(v27, a7);
    v42 = sub_2414B4C60();
    v43 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v44 = v55;
    v43(v55, v32, a7);
    v45 = v57;
    v43(v57, v41, a7);
    if ((v42 & 1) != 0)
      v36 = sub_2414B4CCC();
    else
      v36 = 0;
    v40(v45, a7);
    v40(v44, a7);
    v40(v41, a7);
    v40(v38, a7);
    v40(v32, a7);
  }
  return v36 & 1;
}

void UIView.corner.setter(uint64_t a1)
{
  void *v1;
  double v2;
  uint64_t v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double Width;
  double Height;
  BOOL v20;
  id *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  id v30;
  id *v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  double v41;
  id v42;
  id v43;
  id v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  CGRect v50;
  CGRect v51;

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 == 3)
  {
    v49 = (id)*MEMORY[0x24BDE58E0];
    v4 = objc_msgSend(v1, sel_layer);
    v5 = objc_msgSend(v4, sel_maskedCorners);

    v6 = 0.0;
    goto LABEL_15;
  }
  v5 = *(id *)(a1 + 16);
  objc_msgSend(v1, sel_bounds);
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v6 = v9 * 0.5;
  objc_msgSend(v1, sel_bounds);
  if (v3 == 2)
  {
    v14 = v10;
    v15 = v11;
    v16 = v12;
    v17 = v13;
    Width = CGRectGetWidth(*(CGRect *)&v10);
    v50.origin.x = v14;
    v50.origin.y = v15;
    v50.size.width = v16;
    v50.size.height = v17;
    Height = CGRectGetHeight(v50);
    v20 = sub_2412FE7EC(Width, Height);
    v21 = (id *)MEMORY[0x24BDE58E8];
    if (v20)
      v21 = (id *)MEMORY[0x24BDE58E0];
  }
  else
  {
    v6 = v2;
    if ((v3 & 1) == 0)
    {
      v49 = (id)*MEMORY[0x24BDE58E0];
      v6 = v2;
      goto LABEL_15;
    }
    v21 = (id *)MEMORY[0x24BDE58E8];
  }
  v49 = *v21;
LABEL_15:
  objc_opt_self();
  v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    v23 = (void *)v22;
    v24 = sub_2414B4D68();
    v26 = v25;
    if (v24 == sub_2414B4D68() && v26 == v27)
      v29 = 1;
    else
      v29 = sub_2414B57D0();
    v42 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel__setCornerRadius_continuous_maskedCorners_, v29 & 1, v5, v6);
  }
  else
  {
    v30 = objc_msgSend(v1, sel_layer);
    v31 = (id *)MEMORY[0x24BDE58E0];
    if (v3 != 3)
    {
      objc_msgSend(v1, sel_bounds);
      if (v3 == 2)
      {
        v36 = v32;
        v37 = v33;
        v38 = v34;
        v39 = v35;
        v40 = CGRectGetWidth(*(CGRect *)&v32);
        v51.origin.x = v36;
        v51.origin.y = v37;
        v51.size.width = v38;
        v51.size.height = v39;
        v41 = CGRectGetHeight(v51);
        if (!sub_2412FE7EC(v40, v41))
          v31 = (id *)MEMORY[0x24BDE58E8];
      }
      else if ((v3 & 1) != 0)
      {
        v31 = (id *)MEMORY[0x24BDE58E8];
      }
    }
    v43 = *v31;
    objc_msgSend(v30, sel_setCornerCurve_, v43);

    v44 = objc_msgSend(v1, sel_layer);
    v45 = 0.0;
    if (v3 != 3)
    {
      objc_msgSend(v1, sel_bounds, 0.0);
      if (v3 == 2)
      {
        if (v47 >= v46)
          v48 = v46;
        else
          v48 = v47;
        v45 = v48 * 0.5;
      }
      else
      {
        v45 = v2;
      }
    }
    objc_msgSend(v44, sel_setCornerRadius_, v45);

    v42 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v42, sel_setMaskedCorners_, v5);
  }

}

BOOL sub_2412FE7EC(double a1, double a2)
{
  double v3;
  double v4;
  double v5;

  if (a1 == a2)
    return 1;
  v3 = vabdd_f64(a1, a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
    return 0;
  v4 = fabs(a1);
  v5 = fabs(a2);
  if (v4 <= v5)
    v4 = v5;
  return v3 <= fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

uint64_t sub_2412FE84C(uint64_t a1)
{
  _QWORD *v1;

  return j__swift_getAtKeyPath(a1, v1[4], v1[2], v1[3]);
}

uint64_t static UIView.Corner.value(_:continuous:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(_BYTE *)(a2 + 8) = result;
  *(_QWORD *)(a2 + 16) = 15;
  return result;
}

double static UIEdgeInsets.- infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 - a5;
}

void destroy for BubbleImage(uint64_t a1)
{
  sub_2412CD294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_2412FE898(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for BubbleImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BubbleImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_2412FE934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_2412FE980(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_BYTE *sub_2412FE994(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

void sub_2412FE9AC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 12) = 1;
}

uint64_t sub_2412FE9C0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2412CC8BC(&qword_254380FA0, &qword_25437D100, a1);
}

void sub_2412FE9DC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2412FE9E4@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2412D0504, a1);
}

void sub_2412FE9F8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void sub_2412FEA04(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_2412FEA10(_QWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

void sub_2412FEA1C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2412FEA28@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2412DFD48, a1);
}

double sub_2412FEA3C@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_254380F00, (double *)&qword_254380EF8, a1);
}

void sub_2412FEA58(_QWORD *a1@<X8>)
{
  *a1 = 0x4008000000000000;
}

double sub_2412FEA64@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_254380EE0, (double *)&qword_254380ED8, a1);
}

double sub_2412FEA84@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_2414BE400;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

void sub_2412FEA98(_QWORD *a1@<X8>)
{
  *a1 = CGSizeMake;
  a1[1] = 0;
}

ValueMetadata *type metadata accessor for MarqueeFeatheringModifier()
{
  return &type metadata for MarqueeFeatheringModifier;
}

ValueMetadata *type metadata accessor for MarqueeAnimationDirection()
{
  return &type metadata for MarqueeAnimationDirection;
}

uint64_t type metadata accessor for NowPlayingViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingViewController);
}

ValueMetadata *type metadata accessor for SymbolTransportButton()
{
  return &type metadata for SymbolTransportButton;
}

uint64_t *assignWithCopy for EmbeddedBadgeModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = a2[1];
      swift_retain();
      swift_release();
      a1[2] = a2[2];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24145DD70((uint64_t)a1);
      v6 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v6;
    }
  }
  else if (v5)
  {
    *a1 = v5;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v7;
  }
  return a1;
}

ValueMetadata *type metadata accessor for ArtworkStyleModifier()
{
  return &type metadata for ArtworkStyleModifier;
}

uint64_t storeEnumTagSinglePayload for MetalTextureSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.DurationSnapshot()
{
  return &type metadata for NowPlayingViewModel.DurationSnapshot;
}

ValueMetadata *type metadata accessor for TrailingBadgesView()
{
  return &type metadata for TrailingBadgesView;
}

void sub_2412FEC3C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_2412FEC44()
{
  sub_2412FEC94();
  return sub_2414B3340();
}

unint64_t sub_2412FEC94()
{
  unint64_t result;

  result = qword_254380AF8;
  if (!qword_254380AF8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEB058], MEMORY[0x24BDEB050]);
    atomic_store(result, (unint64_t *)&qword_254380AF8);
  }
  return result;
}

uint64_t sub_2412FECD8(char *a1, char *a2)
{
  return sub_2412CEB28(*a1, *a2);
}

double *sub_2412FECE4()
{
  uint64_t v0;

  return sub_2413810A0(*(double **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

__n128 sub_2412FED04()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  result = *(__n128 *)(v0 + 24);
  v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 104) = result;
  *(_OWORD *)(v1 + 120) = v3;
  return result;
}

uint64_t sub_2412FED1C()
{
  sub_2412FED6C();
  return sub_2414B3340();
}

unint64_t sub_2412FED6C()
{
  unint64_t result;

  result = qword_25437D108;
  if (!qword_25437D108)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for DeviceMetrics, &type metadata for DeviceMetrics);
    atomic_store(result, (unint64_t *)&qword_25437D108);
  }
  return result;
}

uint64_t sub_2412FEDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for ArtworkCornerStyle(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v22 - v8);
  v10 = sub_2414B35A4();
  v11 = MEMORY[0x24BDED998];
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2412FA3B4((uint64_t)v9);
  v14 = *v9;
  sub_2412C68F4((uint64_t)v9, type metadata accessor for ArtworkCornerStyle);
  sub_2412FA3B4((uint64_t)v7);
  v15 = &v7[*(int *)(v4 + 20)];
  v16 = (char *)v13 + *(int *)(v10 + 20);
  v17 = sub_2414B38C8();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v16, v15, v17);
  *v13 = v14;
  v13[1] = v14;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  v19 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380CA0) + 36);
  sub_2412C6A50((uint64_t)v13, v19, (uint64_t (*)(_QWORD))v11);
  *(_WORD *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543844D0) + 36)) = 256;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a2, a1, v20);
  return sub_2412C68F4((uint64_t)v13, (uint64_t (*)(_QWORD))v11);
}

uint64_t sub_2412FEF74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2412EEA78(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for TrailingBadge()
{
  return &type metadata for TrailingBadge;
}

ValueMetadata *type metadata accessor for CAPackageView()
{
  return &type metadata for CAPackageView;
}

ValueMetadata *type metadata accessor for ArtworkShadow()
{
  return &type metadata for ArtworkShadow;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543844F0);
}

void type metadata accessor for UIAccessibilityContrast(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_25437DC60);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254381530);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543814F8);
}

uint64_t sub_2412FF014()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for MarqueeAnimationDurationKey()
{
  return &type metadata for MarqueeAnimationDurationKey;
}

uint64_t destroy for SplitPercentageLayout()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for SplitPercentageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_2412FF088(void **a1)
{
  uint64_t v1;

  sub_2412CE714(a1, *(_QWORD *)(v1 + 32));
}

void sub_2412FF094(char *a1)
{
  uint64_t v1;

  sub_2412CEBD0(a1, *(_QWORD *)(v1 + 32));
}

void sub_2412FF0A0(uint64_t a1)
{
  uint64_t v1;

  sub_2412CE608(a1, *(_QWORD *)(v1 + 32));
}

ValueMetadata *type metadata accessor for HostedScenePhaseSupport()
{
  return &type metadata for HostedScenePhaseSupport;
}

uint64_t sub_2412FF0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_2414B2F44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  type metadata accessor for HostedScenePhaseModel();
  sub_2412C8030(&qword_25437FE60, (uint64_t (*)(uint64_t))type metadata accessor for HostedScenePhaseModel, (uint64_t)&unk_2414C31C8);
  sub_2414B3040();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  swift_release();
  v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380CB0) + 36));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543812B0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v9 + *(int *)(v10 + 28), v7, v4);
  *v9 = KeyPath;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

ValueMetadata *type metadata accessor for SymbolTransportButton.ButtonLayout()
{
  return &type metadata for SymbolTransportButton.ButtonLayout;
}

_QWORD *assignWithTake for EmbeddedBadgeModifier(_QWORD *a1, uint64_t a2)
{
  if (!*a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_24145DD70((uint64_t)a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release();
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t sub_2412FF2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2412E4E38(a1, *v2, v2[1], v2[2], a2);
}

uint64_t NowPlayingViewModel.metrics.getter()
{
  return swift_retain();
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.Metrics.Event()
{
  return &type metadata for NowPlayingViewModel.Metrics.Event;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransitionDestination()
{
  return &type metadata for NowPlayingViewModel.TransitionDestination;
}

uint64_t dispatch thunk of NowPlayingViewModel.playbackPosition.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t sub_2412FF328()
{
  return swift_retain();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t _s16DurationSnapshotVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

uint64_t dispatch thunk of NowPlayingViewModel.backdropImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.SubtitleStyle()
{
  return &type metadata for NowPlayingViewModel.SubtitleStyle;
}

uint64_t sub_2412FF3C0()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for GradientTopMask()
{
  return &type metadata for GradientTopMask;
}

uint64_t sub_2412FF3E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2412F33EC(v1[4], v1[2], v1[3], a1);
}

void sub_2412FF3F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8EDC(319, &qword_254380B50, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
  if (v0 <= 0x3F)
  {
    sub_2412C8EDC(319, (unint64_t *)&qword_25437DAA8, (void (*)(uint64_t))MEMORY[0x24BDEEE00]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2412FF4CC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2412FB068(*(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_2412FF4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2412D0334(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_2412FF4F8(uint64_t a1)
{
  uint64_t v1;

  return sub_2412D2D30(a1, (_OWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2412FF504@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2412F8894(v1[4], v1[8], v1[2], v1[3], a1);
}

uint64_t sub_2412FF520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2412CEE70(*(_OWORD **)(v1 + 32), a1);
}

uint64_t sub_2412FF52C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2412FB5EC(*(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_2412FF538@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2412FB1B8(v1[4], v1[2], v1[3], a1);
}

uint64_t storeEnumTagSinglePayload for DeviceMetrics.SizeClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2412FF594 + 4 * byte_2414B9515[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2412FF5C8 + 4 * byte_2414B9510[v4]))();
}

uint64_t sub_2412FF5C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412FF5D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412FF5D8);
  return result;
}

uint64_t sub_2412FF5E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412FF5ECLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2412FF5F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412FF5F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceMetrics.SizeClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x242695A4C](a1, v6, a5);
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy106_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 90) = *(__int128 *)((char *)a2 + 90);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void *__swift_memcpy274_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x112uLL);
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

double keypath_getTm_0@<D0>(void (*a1)(void)@<X3>, double *a2@<X8>)
{
  double result;
  double v4;

  a1();
  sub_2414B3838();
  result = v4;
  *a2 = v4;
  return result;
}

uint64_t keypath_get_34Tm@<X0>(void (*a1)(void)@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;

  a1();
  result = sub_2414B3838();
  *a2 = v4;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_2412FFB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437D280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2412FFBA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *(_BYTE *)a2 = *(_BYTE *)a1;
  *(double *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2412FFBBC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2412CC93C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2412FFBD8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254385040);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543842E8);
}

void UIView.corner.getter(double *a1@<X8>)
{
  void *v1;

  UIView.Corner.init(view:insetBy:)(v1, a1, 0.0);
}

id *sub_2412FFD64(id *a1)
{

  return a1;
}

void static UIView.Corner.rounded.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 2;
  *(_QWORD *)(a1 + 16) = 15;
}

uint64_t UIView.Corner.init(radius:mask:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *(_BYTE *)(result + 8);
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_BYTE *)(a3 + 8) = v3;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_2412FFDBC(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

double UIView.Corner.Radius.value(in:)(double a1, double a2)
{
  _BYTE *v2;

  if (v2[8] != 2)
    return *(double *)v2;
  if (a2 < a1)
    a1 = a2;
  return a1 * 0.5;
}

uint64_t UIView.Corner.with(corners:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;

  v3 = *(_BYTE *)(v2 + 8);
  if ((result & 1) != 0)
  {
    if ((result & 2) != 0)
    {
      v4 = 3;
      if ((result & 4) == 0)
        goto LABEL_8;
    }
    else
    {
      v4 = 1;
      if ((result & 4) == 0)
        goto LABEL_8;
    }
    goto LABEL_7;
  }
  if ((result & 2) == 0)
  {
    v4 = 0;
    if ((result & 4) == 0)
      goto LABEL_8;
LABEL_7:
    v4 |= 4uLL;
    goto LABEL_8;
  }
  v4 = 2;
  if ((result & 4) != 0)
    goto LABEL_7;
LABEL_8:
  if ((result & 8) != 0)
    v4 |= 8uLL;
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  return result;
}

CGSize __swiftcall CGSize.inset(by:)(UIEdgeInsets by)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  CGSize result;

  v3 = v1 - by.left - by.right;
  v4 = v2 - by.top - by.bottom;
  v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

uint64_t sub_2412FFE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543843D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412FFEC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_2412FFEE8(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id sub_2412FFF1C()
{
  qword_25437D290 = *MEMORY[0x24BEBE0B8];
  return (id)qword_25437D290;
}

uint64_t UITabBarController.installNowPlayingView<A>(controller:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t v8;

  v7 = v3;
  v8 = sub_24148D3E0(a1, a2, a3, (void (*)(void))sub_24148CEE8);

  return v8;
}

unint64_t sub_2412FFF8C()
{
  unint64_t result;

  result = qword_2543814F0;
  if (!qword_2543814F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543814F0);
  }
  return result;
}

unint64_t sub_2412FFFC8()
{
  unint64_t result;

  result = qword_254384FC0;
  if (!qword_254384FC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254384FC0);
  }
  return result;
}

unint64_t sub_241300004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543843B0;
  if (!qword_2543843B0)
  {
    v1 = sub_2412CC884(255, (unint64_t *)&qword_254384FC0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_2543843B0);
  }
  return result;
}

double UIEdgeInsets.init(edges:inset:)(char a1, double a2)
{
  if ((a1 & 1) != 0)
    return a2;
  else
    return 0.0;
}

double static UIEdgeInsets.+ infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

uint64_t static CACornerMask.all.getter()
{
  return 15;
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_254384370);
}

unint64_t sub_2413000B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543814A8;
  if (!qword_2543814A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543814A0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2543814A8);
  }
  return result;
}

uint64_t sub_241300104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2)
      return 1;
    v3 = a2;
    v4 = a1;
    if (a1 == a2)
      return 1;
    v5 = 0;
    while (1)
    {
      v15 = v2;
      v6 = *(_QWORD *)(v4 + v5 + 56);
      v7 = *(_BYTE *)(v4 + v5 + 64);
      v17 = *(_QWORD *)(v4 + v5 + 48);
      v8 = *(_QWORD *)(v3 + v5 + 48);
      v9 = *(_QWORD *)(v3 + v5 + 56);
      v10 = *(_BYTE *)(v3 + v5 + 64);
      if (*(_QWORD *)(v4 + v5 + 32) != *(_QWORD *)(v3 + v5 + 32)
        || *(_QWORD *)(v4 + v5 + 40) != *(_QWORD *)(v3 + v5 + 40))
      {
        v10 = *(_BYTE *)(v3 + v5 + 64);
        v8 = *(_QWORD *)(v3 + v5 + 48);
        v9 = *(_QWORD *)(v3 + v5 + 56);
        if ((sub_2414B57D0() & 1) == 0)
          break;
      }
      swift_bridgeObjectRetain();
      sub_241307638(v17, v6, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_241307638(v8, v9, v10);
      swift_bridgeObjectRetain();
      v16 = sub_2414B406C();
      swift_bridgeObjectRelease();
      sub_2412F6D78(v8, v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2412F6D78(v17, v6, v7);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        break;
      v5 += 48;
      v4 = a1;
      v2 = v15 - 1;
      v3 = a2;
      if (v15 == 1)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_2413002C8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

unint64_t sub_2413002F4()
{
  unint64_t result;

  result = qword_25437DC40;
  if (!qword_25437DC40)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_25437DC40);
  }
  return result;
}

unint64_t sub_241300338()
{
  unint64_t result;

  result = qword_254381460;
  if (!qword_254381460)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5290], MEMORY[0x24BDF5280]);
    atomic_store(result, (unint64_t *)&qword_254381460);
  }
  return result;
}

unint64_t sub_24130037C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543810F8;
  if (!qword_2543810F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381100);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_2543810F8);
  }
  return result;
}

unint64_t sub_2413003C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254381028;
  if (!qword_254381028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381030);
    v2[0] = sub_241302488();
    v2[1] = sub_2412DC484(&qword_254380BF8, &qword_254380C00, (uint64_t (*)(void))sub_241302378, MEMORY[0x24BDEBF50]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254381028);
  }
  return result;
}

void sub_241300454()
{
  qword_25437D100 = MEMORY[0x24BEE4B08];
}

void sub_241300468()
{
  qword_254380F58 = MEMORY[0x24BEE4B00];
}

void sub_24130047C()
{
  qword_254380F30 = (uint64_t)&type metadata for DefaultMarqueeMaskStyle;
  unk_254380F38 = &off_251178640;
}

double sub_24130049C(uint64_t a1)
{
  return sub_2412C9DA8(a1, &qword_25437E380, (double *)&qword_25437E378, &qword_254380EF8);
}

double sub_2413004C0(uint64_t a1)
{
  return sub_2412C9DA8(a1, &qword_25437E370, (double *)&qword_25437E360, &qword_254380ED8);
}

unint64_t sub_2413004E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380EB8;
  if (!qword_254380EB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380EC0);
    v2[0] = sub_2412DC484(&qword_254380E70, &qword_254380E78, sub_24130084C, MEMORY[0x24BDEBF50]);
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380EB8);
  }
  return result;
}

unint64_t sub_241300588()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380E98;
  if (!qword_254380E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380EA0);
    v2[0] = sub_241300694();
    v2[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380E98);
  }
  return result;
}

unint64_t sub_241300610()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380E60;
  if (!qword_254380E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E68);
    v2[0] = sub_241300870();
    v2[1] = sub_2412C8030(qword_25437FDB0, type metadata accessor for ArtworkShadowModifier, (uint64_t)&unk_2414C3818);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380E60);
  }
  return result;
}

unint64_t sub_241300694()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380E50;
  if (!qword_254380E50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E58);
    v2[0] = sub_2412DC484(&qword_254380DA8, &qword_254380DB0, sub_241300D4C, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380E50);
  }
  return result;
}

unint64_t sub_241300738()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25437DB08;
  if (!qword_25437DB08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DB10);
    v2[0] = sub_241300914();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25437DB08);
  }
  return result;
}

uint64_t sub_2413007A4()
{
  return sub_2412DC484(&qword_254380E40, &qword_254380E48, (uint64_t (*)(void))sub_2412CB8B0, MEMORY[0x24BDECC60]);
}

unint64_t sub_2413007C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25437DAF0;
  if (!qword_25437DAF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DAF8);
    v2[0] = sub_2413009FC();
    v2[1] = sub_2412C8FC4(&qword_25437DBA8, (uint64_t *)&unk_25437DBB0, MEMORY[0x24BDF0960]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25437DAF0);
  }
  return result;
}

uint64_t sub_24130084C()
{
  return sub_2412DC484(&qword_254380DF0, &qword_254380DF8, (uint64_t (*)(void))sub_241300B24, MEMORY[0x24BDECC38]);
}

unint64_t sub_241300870()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380DB8;
  if (!qword_254380DB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380DC0);
    v2[0] = sub_241300CB4(&qword_254380C28, &qword_254380C30, &qword_254381088, &qword_254381090);
    v2[1] = sub_2412C8030(qword_254380330, type metadata accessor for ArtworkInnerStrokeModifier, (uint64_t)&unk_2414C37C8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380DB8);
  }
  return result;
}

unint64_t sub_241300914()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25437DAD0;
  if (!qword_25437DAD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DAD8);
    v2[0] = sub_2413002F4();
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25437DAD0);
  }
  return result;
}

unint64_t sub_241300998()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380D70;
  if (!qword_254380D70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D78);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D70);
  }
  return result;
}

unint64_t sub_2413009FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380D60;
  if (!qword_254380D60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D68);
    v2[0] = sub_2412C8620(&qword_2543813C8, &qword_2543813D0, (uint64_t (*)(void))sub_2413003C8, MEMORY[0x24BDF3F50]);
    v2[1] = sub_2412C8FC4(&qword_254381388, &qword_254381390, MEMORY[0x24BDF1248]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380D60);
  }
  return result;
}

unint64_t sub_241300AA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254380D50;
  if (!qword_254380D50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D58);
    v2 = sub_2412C8FC4(&qword_254381128, &qword_254381130, MEMORY[0x24BDEFFA0]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254380D50);
  }
  return result;
}

unint64_t sub_241300B24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380CD8;
  if (!qword_254380CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CE0);
    v2[0] = sub_2412F0B40(&qword_25437D0F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0440], MEMORY[0x24BDF0438]);
    v2[1] = sub_2412C8FC4(&qword_254381138, &qword_254381140, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380CD8);
  }
  return result;
}

unint64_t sub_241300BC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C88;
  if (!qword_254380C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C90);
    v2[0] = sub_24130037C();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C88);
  }
  return result;
}

unint64_t sub_241300C30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380C38;
  if (!qword_254380C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380C40);
    v2[0] = sub_2412C8FC4(&qword_254381098, &qword_2543810A0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_241302EC4();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380C38);
  }
  return result;
}

uint64_t sub_241300CB4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_2412C8FC4(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = sub_2412C8030(&qword_25437E398, type metadata accessor for ArtworkClipShape, (uint64_t)&unk_2414C3778);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241300D4C()
{
  return sub_2412DC484(&qword_254380BE8, &qword_254380BF0, (uint64_t (*)(void))sub_241303D30, MEMORY[0x24BDEEC40]);
}

unint64_t sub_241300D70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254380BA0;
  if (!qword_254380BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380BA8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEBEC0], v1);
    atomic_store(result, (unint64_t *)&qword_254380BA0);
  }
  return result;
}

void sub_241300DBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for ArtworkCornerStyle(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_241300E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AF0);
  }
}

void sub_241300E6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381588);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AE0);
  }
}

void sub_241300EC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381558);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AD0);
  }
}

void sub_241300F1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254384350)
  {
    type metadata accessor for OSThermalPressureLevel(255);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254384350);
  }
}

void sub_241300F70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D1A8);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AB8);
  }
}

void sub_241300FC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543842A0)
  {
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543842A0);
  }
}

void sub_24130101C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254380AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543809B0);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254380AA0);
  }
}

void sub_241301074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25437DA88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D6E8);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25437DA88);
  }
}

unint64_t sub_2413010CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254380A30;
  if (!qword_254380A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380A40);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_254380A30);
  }
  return result;
}

uint64_t sub_241301118()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_25438E7D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25438E7D0);
  return sub_2414B2C98();
}

uint64_t sub_241301188()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_241301194()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B53B0();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t type metadata accessor for ScopeBar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopeBar);
}

_QWORD *sub_241301274()
{
  return ScopeBar.init()();
}

void sub_241301294(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a1;
  sub_2413012F8(a2, a3, a4, a5, (uint64_t)v12, v9, v10, v11);

}

void sub_2413012F8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  objc_super v14;

  v13 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x58), a8);
  v14.receiver = v8;
  v14.super_class = v13;
  objc_msgSendSuper2(&v14, sel_setFrame_, a1, a2, a3, a4);
  sub_2412CE288();
}

double sub_241301378(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;

  v1 = a1;
  sub_2413013D0((uint64_t)v1, v2, v3, v4);
  v6 = v5;

  return v6;
}

id sub_2413013D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_frame);
}

double sub_24130141C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;

  v1 = a1;
  sub_241301474((uint64_t)v1, v2, v3, v4);
  v6 = v5;

  return v6;
}

id sub_241301474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_contentInset);
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t sub_2413014DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x80));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_2412C9444(v6);
}

void sub_241301548()
{
  unint64_t v0;

  sub_2412C993C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2413015C4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413015D4()
{
  unint64_t v0;

  sub_241300F70();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_241301640()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241301678()
{
  JUMPOUT(0x242695AE8);
}

uint64_t sub_241301688()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

uint64_t sub_2413016A0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for NowPlayingHostedViewControllerRepresentable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingHostedViewControllerRepresentable);
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment()
{
  return &type metadata for NowPlayingBackgroundStaticArtworkTreatment;
}

void sub_2413016C4()
{
  unint64_t v0;

  sub_241300FC8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for NowPlayingArtworkRestrictionsMonitor()
{
  uint64_t result;

  result = qword_25437CCD0;
  if (!qword_25437CCD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241301774(uint64_t a1)
{
  uint64_t v1;

  sub_24130177C(a1, v1);
}

void sub_24130177C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x242695CC8](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_2412D4B14();

  }
}

id sub_2413017EC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkRestrictionsMonitor()), sel_init);
  qword_25437D268 = (uint64_t)result;
  return result;
}

id static NowPlayingArtworkRestrictionsMonitor.shared.getter()
{
  if (qword_25437CCC8 != -1)
    swift_once();
  return (id)qword_25437D268;
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.$isMotionDisabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t sub_241301878()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E18();
  return swift_endAccess();
}

uint64_t type metadata accessor for NowPlayingHostedViewControllerStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingHostedViewControllerStack);
}

unint64_t sub_2413018E4()
{
  unint64_t result;

  result = qword_254380538[0];
  if (!qword_254380538[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingStandardArtworkTreatment, &type metadata for NowPlayingStandardArtworkTreatment);
    atomic_store(result, qword_254380538);
  }
  return result;
}

unint64_t sub_241301928()
{
  unint64_t result;

  result = qword_254380528;
  if (!qword_254380528)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingStandardArtworkTreatment, &type metadata for NowPlayingStandardArtworkTreatment);
    atomic_store(result, (unint64_t *)&qword_254380528);
  }
  return result;
}

unint64_t sub_24130196C(uint64_t a1)
{
  unint64_t result;

  result = sub_241301928();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241301990()
{
  uint64_t result;

  result = sub_2414B4678();
  qword_254380508 = result;
  return result;
}

uint64_t sub_2413019AC()
{
  return swift_initClassMetadata2();
}

void sub_2413019EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = MEMORY[0x242695CC8](v1 + 16);
  if (v3)
  {
    v4 = (id)v3;
    sub_2412FFE80(a1, v3 + qword_254380228);

  }
}

uint64_t sub_241301A48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241301A7C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for NowPlayingEnvironmentModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingEnvironmentModifier);
}

uint64_t sub_241301A90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  return sub_2414B47B0();
}

uint64_t sub_241301ADC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC38);
  return sub_2414B47B0();
}

ValueMetadata *type metadata accessor for NowPlayingGeometryIdentifier()
{
  return &type metadata for NowPlayingGeometryIdentifier;
}

unint64_t sub_241301B3C()
{
  unint64_t result;

  result = qword_2543803F0[0];
  if (!qword_2543803F0[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingGeometryIdentifier, &type metadata for NowPlayingGeometryIdentifier);
    atomic_store(result, qword_2543803F0);
  }
  return result;
}

void sub_241301B80()
{
  unint64_t v0;

  sub_241300DBC(319, (unint64_t *)&unk_254380B30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241301C14()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241301C24()
{
  qword_254380318 = 0x4020000000000000;
}

void sub_241301C34()
{
  qword_254380308 = 0x4049000000000000;
}

MediaCoreUI::NowPlayingHostedContentID __swiftcall NowPlayingHostedContentID.init(_:)(MediaCoreUI::NowPlayingHostedContentID result)
{
  MediaCoreUI::NowPlayingHostedContentID *v1;

  *v1 = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NowPlayingButtonID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_241301C80()
{
  unint64_t result;

  result = qword_25437D858;
  if (!qword_25437D858)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentID, &type metadata for NowPlayingHostedContentID);
    atomic_store(result, (unint64_t *)&qword_25437D858);
  }
  return result;
}

unint64_t sub_241301CC8()
{
  unint64_t result;

  result = qword_254380300;
  if (!qword_254380300)
  {
    result = MEMORY[0x242695AE8](&unk_2414C8DA0, &type metadata for MarqueeFeatheringModifier);
    atomic_store(result, (unint64_t *)&qword_254380300);
  }
  return result;
}

uint64_t sub_241301D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_2412CC5D8(a1, *(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

uint64_t sub_241301D40()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for VideoPlayerStyleModifier()
{
  return &type metadata for VideoPlayerStyleModifier;
}

uint64_t sub_241301D60()
{
  return swift_initClassMetadata2();
}

uint64_t dispatch thunk of NowPlayingViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t sub_241301E2C(uint64_t a1, uint64_t a2)
{
  sub_2412C9FD4(a1, a2);
  return swift_unknownObjectRelease();
}

void sub_241301E50(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = a1;
  sub_24148E580((SEL *)&selRef_viewSafeAreaInsetsDidChange, (uint64_t)v3, v1, v2);

}

void sub_241301E90(void *a1)
{
  id v1;

  v1 = a1;
  sub_2412DC58C();

}

uint64_t sub_241301EC4()
{
  return swift_initClassMetadata2();
}

uint64_t _s12GradientViewCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12GradientViewCMn);
}

id sub_241301F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return sub_241301F24(a5, a6, a7, a8, a1, a2, a3, a4);
}

id sub_241301F24(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  objc_super v15;

  v13 = (objc_class *)_s12GradientViewCMa(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x58), a8);
  v15.receiver = v8;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t sub_241301FA0()
{
  swift_getObjCClassMetadata();
  sub_241301FC4();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_241301FC4()
{
  return sub_2412CC884(0, &qword_2543814B8);
}

uint64_t sub_241301FEC()
{
  return swift_initClassMetadata2();
}

void sub_241302064(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_2412CE104(a1, *(_QWORD *)(v1 + 32));
}

void sub_241302070()
{
  uint64_t v0;

  sub_241302084(*(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), (_QWORD *)(v0 + 48));
}

void sub_241302084(char a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  char v9;
  double v10;

  if ((a1 & 1) != 0)
  {
    v4 = a2 + 16;
    swift_beginAccess();
    v5 = MEMORY[0x242695CC8](v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = *(id *)(v5 + qword_25437D760);

      v8 = a3[3];
      __swift_project_boxed_opaque_existential_1(a3, v8);
      v9 = sub_241387790(v8);
      v10 = 0.0;
      if ((v9 & 1) != 0)
        v10 = 1.0;
      objc_msgSend(v7, sel_setAlpha_, v10);

    }
  }
}

void sub_24130213C(char *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2412CDE18(a1, a2, v2[4], v2[2], v2[3]);
}

id sub_241302148(id result, char a2)
{
  _BYTE *v2;
  char *v3;
  double v4;
  char v5;

  v3 = &v2[qword_25437D770];
  v4 = *(double *)&v2[qword_25437D770];
  v5 = v2[qword_25437D770 + 8];
  *(_QWORD *)v3 = result;
  v3[8] = a2 & 1;
  if ((v2[qword_25437D770 + 8] & 1) != 0)
  {
    if ((v5 & 1) != 0)
      return result;
    return objc_msgSend(v2, sel_setNeedsLayout, v4);
  }
  if (*(double *)&v2[qword_25437D770] != v4)
    v5 = 1;
  if ((v5 & 1) != 0)
    return objc_msgSend(v2, sel_setNeedsLayout, v4);
  return result;
}

void sub_2413021A0(void *a1)
{
  id v1;

  v1 = a1;
  sub_2412CA7B4();

}

void sub_2413021D4(uint64_t a1)
{
  uint64_t v1;

  sub_2412C9F84(a1, *(_QWORD *)(v1 + 32));
}

double sub_2413021E0(uint64_t a1)
{
  return sub_2412CA0B4((__n128)xmmword_2414BFF40, a1, (__n128 *)&qword_2543800E0, &qword_2543800F0, &qword_2543800F8);
}

void sub_2413021FC()
{
  unint64_t v0;

  sub_241300E6C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_241302280(uint64_t a1)
{
  uint64_t v1;

  return sub_2412D0220(a1, v1, (uint64_t)sub_2413022A8, (uint64_t)&block_descriptor_7);
}

void sub_2413022A8(void *a1)
{
  sub_2412D9F20(a1);
}

uint64_t type metadata accessor for MiniPlayerContainerView()
{
  return objc_opt_self();
}

unint64_t sub_2413022D0()
{
  unint64_t result;

  result = qword_25437FF90;
  if (!qword_25437FF90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C3200, &type metadata for HostedScenePhaseSupport);
    atomic_store(result, (unint64_t *)&qword_25437FF90);
  }
  return result;
}

uint64_t sub_241302314()
{
  type metadata accessor for HostedScenePhaseModel();
  swift_allocObject();
  return sub_2412D7D74();
}

uint64_t sub_241302348()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for CollapsedViewController()
{
  return objc_opt_self();
}

unint64_t sub_241302378()
{
  unint64_t result;

  result = qword_25437FF88;
  if (!qword_25437FF88)
  {
    result = MEMORY[0x242695AE8](&unk_2414C04A8, &type metadata for AnimatedTransportButton);
    atomic_store(result, (unint64_t *)&qword_25437FF88);
  }
  return result;
}

unint64_t sub_2413023BC()
{
  unint64_t result;

  result = qword_25437FF80;
  if (!qword_25437FF80)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataAutomaticStyle, &type metadata for MetadataAutomaticStyle);
    atomic_store(result, (unint64_t *)&qword_25437FF80);
  }
  return result;
}

unint64_t sub_241302400()
{
  unint64_t result;

  result = qword_25437FF78;
  if (!qword_25437FF78)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataAutomaticStyle, &type metadata for MetadataAutomaticStyle);
    atomic_store(result, (unint64_t *)&qword_25437FF78);
  }
  return result;
}

unint64_t sub_241302444(uint64_t a1)
{
  unint64_t result;

  result = sub_241302400();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ExpandedViewController()
{
  return objc_opt_self();
}

unint64_t sub_241302488()
{
  unint64_t result;

  result = qword_25437FF70;
  if (!qword_25437FF70)
  {
    result = MEMORY[0x242695AE8](&unk_2414C04F8, &type metadata for SymbolTransportButton);
    atomic_store(result, (unint64_t *)&qword_25437FF70);
  }
  return result;
}

uint64_t sub_2413024CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2412C98B0(v1, a1);
}

unint64_t sub_2413024D4()
{
  unint64_t result;

  result = qword_25437FF68;
  if (!qword_25437FF68)
  {
    result = MEMORY[0x242695AE8](&unk_2414C0590, &type metadata for SymbolTransportButton.ButtonLayout);
    atomic_store(result, (unint64_t *)&qword_25437FF68);
  }
  return result;
}

uint64_t sub_241302524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_241302550(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_241302550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t sub_241302588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_241302550(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_2413025C0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413025D0()
{
  unint64_t v0;

  sub_2412C9AD4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_241302648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B2F44() - 8) + 80);
  return sub_2412CECB4(a1, *(_QWORD *)(v1 + 16), (char *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_241302688()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241302698(void *a1)
{
  sub_2412D22A0(a1, &OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_backdropView);
}

void sub_2413026A4(void *a1)
{
  sub_2412D22A0(a1, &OBJC_IVAR____TtC11MediaCoreUIP33_0349A88C813783B152676260F9284CCC21ContentViewController_contentView);
}

uint64_t type metadata accessor for BackdropLayerHostView()
{
  return objc_opt_self();
}

void sub_2413026E8()
{
  unint64_t v0;

  sub_241300DBC(319, (unint64_t *)&unk_254380B30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24130276C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24130277C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_25437D0D8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_25437D0D8);
  *v1 = 0;
  v2 = (char *)v1 + *(int *)(v0 + 20);
  v3 = *MEMORY[0x24BDEEB78];
  v4 = sub_2414B38C8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
}

void sub_2413027F0()
{
  unint64_t v0;

  sub_241300DBC(319, &qword_2543813E0, MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24130288C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkCornerModifier(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_2413028C8()
{
  return sub_24130288C(sub_2413028D4);
}

uint64_t sub_2413028D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  _BYTE v11[15];
  char v12;

  v2 = type metadata accessor for ArtworkCornerStyle(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)&v11[-v6];
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  sub_2412C7080(*(_QWORD *)a1, v9);
  sub_2412EF52C(v8, v9, &v12);
  sub_2412C821C(v8, v9);
  sub_2412CC030(&v12, v7);
  type metadata accessor for ArtworkCornerModifier(0);
  sub_2412C6A50((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  sub_2414B47B0();
  return sub_2412C68F4((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_2413029E0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2413029F0()
{
  float v0;
  double result;

  UIAnimationDragCoefficient();
  result = (float)(0.0083333 / v0);
  qword_25437D748 = *(_QWORD *)&result;
  return result;
}

void sub_241302A20()
{
  unint64_t v0;

  sub_2412CB258();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241302AAC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241302ABC()
{
  unint64_t v0;

  sub_2412C993C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for BackdropMaskModifier.BackdropGroup()
{
  return objc_opt_self();
}

void sub_241302B58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[89];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_2412C7080(*(_QWORD *)v0, v2);
  sub_2412EF52C(v1, v2, v3);
  sub_2412C821C(v1, v2);
  __asm { BR              X10 }
}

uint64_t sub_241302BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  if (qword_25437DC88 != -1)
    result = swift_once();
  v0 = *((_QWORD *)&xmmword_25438E788 + 1);
  v1 = unk_25438E798;
  v2 = qword_25438E7A0;
  v3 = qword_25438E7A8;
  *v5 = xmmword_25438E788;
  v5[1] = v0;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  return result;
}

uint64_t destroy for RotationEffect()
{
  return swift_release();
}

unint64_t sub_241302EC4()
{
  unint64_t result;

  result = qword_25437FB88;
  if (!qword_25437FB88)
  {
    result = MEMORY[0x242695AE8](&unk_2414C35C4, &type metadata for ArtworkStyleModifier.AppliedArtworkStyle);
    atomic_store(result, (unint64_t *)&qword_25437FB88);
  }
  return result;
}

uint64_t sub_241302F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2412DBA30(a1, a2);
}

uint64_t sub_241302F40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241302F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_QWORD *)v2;
  v6 = *(_BYTE *)(v2 + 8);
  v22 = *(_OWORD *)(v2 + 32);
  v23 = *(_OWORD *)(v2 + 16);
  v20 = *(_OWORD *)(v2 + 64);
  v21 = *(_OWORD *)(v2 + 48);
  v7 = *(_QWORD *)(v2 + 80);
  v8 = *(_BYTE *)(v2 + 88);
  v9 = *(_BYTE *)(v2 + 89);
  v10 = *(_QWORD *)(v2 + 96);
  v11 = *(_QWORD *)(v2 + 104);
  sub_2412C7080(*(_QWORD *)v2, v6);
  sub_2412EF52C(v5, v6, &v25);
  sub_2412C821C(v5, v6);
  sub_241303A14();
  v13 = v12;
  v25 = v5;
  v26 = v6;
  v27 = v23;
  v28 = v22;
  v29 = v21;
  v30 = v20;
  v31 = v7;
  v32 = v8;
  v33 = v9;
  v34 = v10;
  v35 = v11;
  sub_241302B58();
  v14 = v36;
  v24 = v37;
  v15 = v38;
  v16 = v39;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a2, a1, v17);
  v18 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254380C40) + 36);
  *(_QWORD *)v18 = v13;
  *(_QWORD *)(v18 + 8) = v14;
  *(_OWORD *)(v18 + 16) = v24;
  *(_QWORD *)(v18 + 32) = v15;
  *(_QWORD *)(v18 + 40) = v16;
  return sub_241304458((uint64_t)&v36);
}

uint64_t sub_2413030AC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413030BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_241300EC4();
  if (v0 <= 0x3F)
  {
    sub_241300FC8();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

unint64_t sub_241303148()
{
  unint64_t result;

  result = qword_25437D720;
  if (!qword_25437D720)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.Metrics.Event, &type metadata for NowPlayingViewModel.Metrics.Event);
    atomic_store(result, (unint64_t *)&qword_25437D720);
  }
  return result;
}

uint64_t _s32HostedContentToggleButtonMetricsCMa()
{
  return objc_opt_self();
}

uint64_t sub_2413031AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20[5];

  v20[3] = a4;
  v20[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (a2 == 1
    && (sub_2412F1B18((uint64_t)v20, (uint64_t)v18),
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543803D8),
        swift_dynamicCast()))
  {
    swift_bridgeObjectRelease();

    sub_2412DD598((uint64_t)&unk_2511682D0);
    v11 = swift_bridgeObjectRetain();
    sub_241481A3C(v11, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2412F1B18((uint64_t)v20, (uint64_t)v18);
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x24BDAC7A8](v12);
    v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v14);
    sub_2412CA1B4((uint64_t)v14, a3, a4, a5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

void sub_24130330C()
{
  unint64_t v0;

  sub_241300EC4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_241303378()
{
  unint64_t v0;

  sub_241300FC8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_2413033FC()
{
  unint64_t result;

  result = qword_25437F050;
  if (!qword_25437F050)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9E40, &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration);
    atomic_store(result, (unint64_t *)&qword_25437F050);
  }
  return result;
}

unint64_t sub_241303440()
{
  unint64_t result;

  result = qword_25437F048;
  if (!qword_25437F048)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.TrailingTransportButtonConfiguration, &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration);
    atomic_store(result, (unint64_t *)&qword_25437F048);
  }
  return result;
}

unint64_t sub_241303484(uint64_t a1)
{
  unint64_t result;

  result = sub_241303440();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward30.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.31739788e242;
  *(_OWORD *)a1 = xmmword_2414C9DC0;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_2413034C0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2412FAF1C();
  return v1;
}

double static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward15.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.29257015e161;
  *(_OWORD *)a1 = xmmword_2414C9D60;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t dispatch thunk of NowPlayingViewModel.trailingTransportButton.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t sub_241303524(uint64_t *a1)
{
  return sub_2412CDA58(a1, (uint64_t)&unk_2414CB938, (uint64_t)&unk_2414CB960, sub_2413039E8);
}

uint64_t dispatch thunk of NowPlayingViewModel.leadingTransportButton.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t sub_24130354C(uint64_t *a1)
{
  return sub_2412CDA58(a1, (uint64_t)&unk_2414CB8F0, (uint64_t)&unk_2414CB918, sub_2413039FC);
}

uint64_t _s18MiniPlayerSubtitleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t dispatch thunk of NowPlayingViewModel.clearCurrentItem()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of NowPlayingViewModel.isBannerVisible.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

void sub_2413035D4()
{
  unint64_t v0;

  sub_241301074();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t _s13HostedContentC10TransitionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

unint64_t sub_2413036B4()
{
  unint64_t result;

  result = qword_25437D6E0;
  if (!qword_25437D6E0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BE554, &_s13HostedContentC10TransitionVN);
    atomic_store(result, (unint64_t *)&qword_25437D6E0);
  }
  return result;
}

_BYTE *sub_2413036F8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_241303704(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, a1 + 8);
}

void sub_241303728()
{
  unint64_t v0;

  sub_241300E14();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t dispatch thunk of NowPlayingViewModel.isPlaying.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

void sub_2413037A0(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  sub_2412DEA6C(v4);
}

uint64_t sub_2413037F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241303808()
{
  uint64_t result;

  qword_25437E828 = (uint64_t)&type metadata for NowPlayingStandardArtworkTreatment;
  qword_25437E830 = sub_2413018E4();
  result = sub_2412DD598((uint64_t)&unk_2511633C0);
  qword_25437E810 = result;
  return result;
}

void static NowPlayingButtonID.queue.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6575657571;
  a1[1] = 0xE500000000000000;
}

void sub_241303864()
{
  unint64_t v0;
  unint64_t v1;

  sub_241300FC8();
  if (v0 <= 0x3F)
  {
    sub_241300F1C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

double sub_241303964()
{
  double result;

  result = 0.0;
  xmmword_254381808 = 0u;
  unk_254381818 = 0u;
  return result;
}

uint64_t sub_241303978(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (unint64_t *)&qword_25437EDE0, (uint64_t)&unk_2414C0048);
}

uint64_t sub_241303994(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s11ContextMenuCMa, &qword_2543816D8, (uint64_t)&unk_2414BDF1C);
}

uint64_t sub_2413039B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2412CFD30(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t))_s18MiniPlayerMetadataCMa, &qword_25437EF28, (uint64_t)&unk_2414BA9A8);
}

uint64_t sub_2413039CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2412CFD30(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, &qword_2543816E0, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
}

uint64_t sub_2413039E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2412FAAAC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t))sub_2413033F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412FB00C);
}

uint64_t sub_2413039FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2412FAAAC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412FAA1C, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412FAFF4);
}

void sub_241303A14()
{
  __asm { BR              X10 }
}

uint64_t sub_241303AC8(uint64_t a1)
{
  return sub_2412C9990(a1, (void (*)(void))MEMORY[0x24BDF1580], (void (*)(void))MEMORY[0x24BDF16D8], &qword_25437E6B0);
}

void sub_241303AE4()
{
  qword_25437E698 = 0x4038000000000000;
}

void sub_241303AF4()
{
  qword_25437E680 = 0x4038000000000000;
}

uint64_t sub_241303B04()
{
  uint64_t result;

  result = sub_2414B4678();
  qword_25437E668 = result;
  return result;
}

unint64_t sub_241303B24()
{
  unint64_t result;

  result = qword_25437E660;
  if (!qword_25437E660)
  {
    result = MEMORY[0x242695AE8](&unk_2414BF37C, &type metadata for ArtworkGeometryID);
    atomic_store(result, (unint64_t *)&qword_25437E660);
  }
  return result;
}

unint64_t sub_241303B68()
{
  unint64_t result;

  result = sub_2412CD340((uint64_t)&unk_2511634B8);
  qword_254382EA8 = result;
  return result;
}

uint64_t sub_241303B8C()
{
  uint64_t v0;

  return sub_241303BA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_241303BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[4];
  uint64_t v10;
  char v11;

  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 48);
  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_BYTE *)(a1 + 88);
  sub_2413043D8(a2, a1 + 16);
  v9[0] = v8;
  v9[1] = v7;
  v9[2] = v6;
  v9[3] = v5;
  v10 = v2;
  v11 = v3;
  return sub_2412D3978((uint64_t *)v9);
}

double sub_241303C30()
{
  double result;

  qword_25437D098 = 0;
  result = 0.0;
  xmmword_25437D078 = 0u;
  unk_25437D088 = 0u;
  return result;
}

void sub_241303C48()
{
  unint64_t v0;

  sub_241300DBC(319, (unint64_t *)&unk_254380B30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241303CC0()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_241303CD0(_QWORD *a1)
{
  destroy for TransportButton(a1);
  return a1;
}

uint64_t sub_241303CFC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TransportButton(a2, a1);
  return a2;
}

unint64_t sub_241303D30()
{
  unint64_t result;

  result = qword_25437E390;
  if (!qword_25437E390)
  {
    result = MEMORY[0x242695AE8](&unk_2414C02B8, &type metadata for TransportButton);
    atomic_store(result, (unint64_t *)&qword_25437E390);
  }
  return result;
}

uint64_t sub_241303D78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241303DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  unsigned __int8 v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  unsigned __int8 v11;

  v5 = *(_QWORD *)v2;
  v6 = *(_BYTE *)(v2 + 8);
  v7 = *(_BYTE *)(v2 + 9);
  sub_2412C7080(v5, v6);
  sub_2412F65C0(v5, v6, &v11);
  sub_2412C821C(v5, v6);
  if (((v7 ^ v11) & 1) != 0)
    v8 = 0.0;
  else
    v8 = 1.0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254380C90);
  *(double *)(a2 + *(int *)(result + 36)) = v8;
  return result;
}

uint64_t sub_241303EBC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241303ECC()
{
  qword_25437E378 = 0x4034000000000000;
}

void sub_241303EDC()
{
  qword_25437E360 = 0x403E000000000000;
}

void sub_241303EEC()
{
  qword_25437E350 = 0x4020000000000000;
}

uint64_t sub_241303EFC()
{
  return sub_2412CB988((uint64_t (*)(uint64_t))sub_2412E2938);
}

uint64_t sub_241303F08()
{
  return sub_2412CB988((uint64_t (*)(uint64_t))sub_2412E2D28);
}

uint64_t sub_241303F14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241303F24()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241303F58()
{
  unint64_t v0;

  sub_2412CB258();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_241304004()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241304038()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_241304044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(_s25BackdropConditionObserverVMa(0, v6, v7, a4) - 8) + 80);
  return sub_24130409C(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_24130409C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];

  sub_2412F1B18(a1, (uint64_t)v9);
  v7 = _s25BackdropConditionObserverVMa(0, a3, a4, v6);
  sub_2412E02DC((uint64_t)v9, v7);
  return sub_2412CBE78((uint64_t)v9, &qword_2543803E0);
}

id sub_241304108()
{
  if (qword_254384300 != -1)
    swift_once();
  return (id)qword_25438E8C0;
}

uint64_t sub_241304148()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24130417C()
{
  sub_2412C8E34();
}

uint64_t sub_241304190()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413041C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413041F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24130422C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2412CAEA4(v4 + 32, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4, *(double *)(v4 + 96), *(double *)(v4 + 104), *(double *)(v4 + 112), *(double *)(v4 + 120));
}

uint64_t sub_241304240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241304274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_2412E50DC(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_241304280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413042B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2413042BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2413042F0()
{
  sub_2412C8E34();
}

uint64_t sub_241304300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241304334()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_2414B295C();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MarkupRenderer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarkupRenderer);
}

void type metadata accessor for ContentLookup2()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_2413043D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437DC98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DeviceMetrics.SizeClass()
{
  return &type metadata for DeviceMetrics.SizeClass;
}

void type metadata accessor for ContentLookup()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_241304440()
{
  uint64_t v0;

  return sub_2412CA368(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_241304448()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241304458(uint64_t a1)
{
  swift_retain();
  return a1;
}

double sub_241304480()
{
  double result;

  *(_QWORD *)&xmmword_25438E788 = sub_2414B4648();
  result = 0.0;
  *(__int128 *)((char *)&xmmword_25438E788 + 8) = 0u;
  *(_OWORD *)&qword_25438E7A0 = 0u;
  return result;
}

uint64_t sub_2413044AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2414B2A88();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void type metadata accessor for MotionViewV2()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_241304560()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2413045D8()
{
  return swift_initClassMetadata2();
}

uint64_t MCUINamespace<A>.debugDimensionLineColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_24130468C()
{
  return sub_2413047B4((void (*)(void))sub_2413069C0);
}

uint64_t sub_2413046A0@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2413069C0, a1);
}

uint64_t sub_2413046B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_2413069C0);
}

uint64_t MCUINamespace<A>.debugDimensionLabelColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_2413046D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  v10[1] = a1;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2413047A0()
{
  return sub_2413047B4((void (*)(void))sub_24130697C);
}

uint64_t sub_2413047B4(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_2414B3838();
  return v2;
}

uint64_t sub_2413047F4@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_24130697C, a1);
}

uint64_t sub_241304808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_24130697C);
}

uint64_t sub_24130481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  swift_retain();
  return sub_2414B3844();
}

uint64_t sub_241304878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257120C10);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8FC4(&qword_257120C18, &qword_257120C10, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257120F20);
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257120F30);
}

void *__swift_memcpy368_16(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t sub_241304928(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 368))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241304948(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 368) = v3;
  return result;
}

void type metadata accessor for Uniforms(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254384518);
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257120F40);
}

__n128 __swift_memcpy80_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_241304A18(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241304A38(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

void type metadata accessor for CAColorMatrix(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257120F48);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_241304A98(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_241304ADC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254382900);
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_241304B48(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)(a1 + 8))
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_241304B8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = 0;
  }
  return result;
}

void type metadata accessor for AudioQueueBuffer(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257120F58);
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_254384508);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257120F60);
}

void type metadata accessor for MPCScriptedLooperStatus(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257120F68);
}

void type metadata accessor for Status(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257120F70);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257120F80);
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254381848);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257120F90);
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_2543843A0);
}

void type metadata accessor for CIImageOption(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543842A8);
}

uint64_t sub_241304CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  _OWORD v16[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121178);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121180);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_2414B3880();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121188);
  sub_241304E44(v1, &v5[*(int *)(v9 + 44)]);
  v10 = *(_BYTE *)(v1 + 16);
  v11 = swift_retain();
  v12 = sub_2412E4048(v11, v10);
  swift_release();
  sub_2412DC3FC((uint64_t)v5, (uint64_t)v8, &qword_257121178);
  *(_QWORD *)&v8[*(int *)(v6 + 36)] = v12;
  sub_2412CBE78((uint64_t)v5, &qword_257121178);
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412DC3FC((uint64_t)v8, a1, &qword_257121180);
  v13 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121190) + 36));
  v14 = v16[1];
  *v13 = v16[0];
  v13[1] = v14;
  v13[2] = v16[2];
  return sub_2412CBE78((uint64_t)v8, &qword_257121180);
}

uint64_t sub_241304E44@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _OWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t KeyPath;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  int v98;
  _BYTE *v99;
  char v100;
  char v101;
  char v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v99 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v3);
  v97 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844D0);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v86);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121198);
  MEMORY[0x24BDAC7A8](v87);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571211A0);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t)&v79 - v11;
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  sub_2412C7080(v12, v13);
  v98 = sub_241344A90(v12, v13);
  sub_2412C821C(v12, v13);
  sub_2412C7080(v12, v13);
  sub_241344A90(v12, v13);
  sub_2412C821C(v12, v13);
  sub_2414B304C();
  v93 = v116;
  v94 = v119;
  v95 = v120;
  v96 = v118;
  v14 = *(double *)a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254385050);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2414B72B0;
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v15 + 64) = sub_24130753C();
  *(double *)(v15 + 32) = round(v14 * 10.0) / 10.0;
  v16 = sub_2414B4D74();
  v82 = v17;
  v83 = v16;
  KeyPath = swift_getKeyPath();
  v81 = sub_2414B3E8C();
  sub_2414B2F20();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v80 = sub_2414B3E38();
  sub_2414B2F20();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v103 = 0;
  v102 = 0;
  v101 = 0;
  v100 = 0;
  LOBYTE(v15) = *(_BYTE *)(a1 + 32);
  v34 = swift_retain();
  v79 = sub_2412E4048(v34, v15);
  swift_release();
  v35 = v103;
  v36 = v102;
  v37 = v101;
  LOBYTE(v15) = v100;
  LOBYTE(a1) = *(_BYTE *)(a1 + 16);
  v38 = swift_retain();
  v39 = sub_2412E4048(v38, a1);
  swift_release();
  v40 = sub_2414B3E44();
  *(_QWORD *)&v104 = v83;
  *((_QWORD *)&v104 + 1) = v82;
  LOBYTE(v105) = v35;
  *((_QWORD *)&v105 + 1) = MEMORY[0x24BEE4AF8];
  LOWORD(v106) = 257;
  *((_QWORD *)&v106 + 1) = KeyPath;
  *(_QWORD *)&v107 = 1;
  BYTE8(v107) = v36;
  LOBYTE(v108) = v81;
  *((_QWORD *)&v108 + 1) = v19;
  *(_QWORD *)&v109 = v21;
  *((_QWORD *)&v109 + 1) = v23;
  *(_QWORD *)&v110 = v25;
  BYTE8(v110) = v37;
  LOBYTE(v111) = v80;
  *((_QWORD *)&v111 + 1) = v27;
  *(_QWORD *)&v112 = v29;
  *((_QWORD *)&v112 + 1) = v31;
  *(_QWORD *)&v113 = v33;
  BYTE8(v113) = v15;
  *(_QWORD *)&v114 = v79;
  *((_QWORD *)&v114 + 1) = v39;
  v115 = v40;
  v41 = v85;
  v42 = &v85[*(int *)(v86 + 20)];
  v43 = *MEMORY[0x24BDEEB68];
  v44 = sub_2414B38C8();
  v45 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  __asm { FMOV            V0.2D, #4.0 }
  *v41 = _Q0;
  v51 = v88;
  sub_241307588((uint64_t)v41, v88);
  *(_WORD *)(v51 + *(int *)(v89 + 36)) = 256;
  sub_2412DC3FC(v51, (uint64_t)&v8[*(int *)(v87 + 36)], &qword_2543844D0);
  v52 = v113;
  *((_OWORD *)v8 + 8) = v112;
  *((_OWORD *)v8 + 9) = v52;
  *((_OWORD *)v8 + 10) = v114;
  v8[176] = v115;
  v53 = v109;
  *((_OWORD *)v8 + 4) = v108;
  *((_OWORD *)v8 + 5) = v53;
  v54 = v111;
  *((_OWORD *)v8 + 6) = v110;
  *((_OWORD *)v8 + 7) = v54;
  v55 = v105;
  *(_OWORD *)v8 = v104;
  *((_OWORD *)v8 + 1) = v55;
  v56 = v107;
  *((_OWORD *)v8 + 2) = v106;
  *((_OWORD *)v8 + 3) = v56;
  sub_2413075CC((uint64_t)&v104);
  sub_2412CBE78(v51, &qword_2543844D0);
  sub_241307648((uint64_t)v41);
  sub_241307684((uint64_t)&v104);
  v57 = sub_2414B3ED4();
  v58 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v97, 1, 1, v57);
  v59 = sub_2414B3F04();
  sub_2412CBE78(v58, &qword_254381398);
  v60 = swift_getKeyPath();
  v61 = v90;
  sub_2412DC3FC((uint64_t)v8, v90, &qword_257121198);
  v62 = (uint64_t *)(v61 + *(int *)(v92 + 36));
  *v62 = v60;
  v62[1] = v59;
  sub_2412CBE78((uint64_t)v8, &qword_257121198);
  v63 = v91;
  sub_2413076F8(v61, v91);
  sub_2412C7080(v12, v13);
  LOBYTE(v59) = sub_241344A90(v12, v13);
  sub_2412C821C(v12, v13);
  sub_2412C7080(v12, v13);
  sub_241344A90(v12, v13);
  sub_2412C821C(v12, v13);
  sub_2414B304C();
  v64 = v121;
  v65 = v123;
  v66 = v124;
  v67 = v125;
  sub_2414B4B64();
  v69 = v68;
  v71 = v70;
  v72 = v63;
  sub_2412DC3FC(v63, v61, (uint64_t *)&unk_2571211A0);
  v73 = v99;
  *v99 = v98;
  v73[1] = v93;
  v73[2] = v45;
  v73[3] = v96;
  v73[4] = v94;
  v73[5] = v95;
  v74 = v73;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571211B8);
  sub_2412DC3FC(v61, (uint64_t)v74 + *(int *)(v75 + 48), (uint64_t *)&unk_2571211A0);
  v76 = (char *)v74 + *(int *)(v75 + 64);
  *v76 = v59;
  v77 = v122;
  *((_QWORD *)v76 + 1) = v64;
  *((_QWORD *)v76 + 2) = v77;
  *((_QWORD *)v76 + 3) = v65;
  *((_QWORD *)v76 + 4) = v66;
  *((_QWORD *)v76 + 5) = v67;
  *((_OWORD *)v76 + 3) = xmmword_2414B72C0;
  *((_QWORD *)v76 + 8) = v69;
  *((_QWORD *)v76 + 9) = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412CBE78(v72, (uint64_t *)&unk_2571211A0);
  swift_bridgeObjectRelease();
  sub_2412CBE78(v61, (uint64_t *)&unk_2571211A0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24130552C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char a6)
{
  uint64_t result;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  CGRectGetMinX(*(CGRect *)&a1);
  if (a6)
  {
    if (a6 != 1)
      goto LABEL_6;
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    CGRectGetMinX(v12);
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    CGRectGetMinY(v13);
    sub_2414B3FB8();
    v14.origin.x = a1;
    v14.origin.y = a2;
    v14.size.width = a3;
    v14.size.height = a4;
    CGRectGetMinX(v14);
    v15.origin.x = a1;
    v15.origin.y = a2;
    v15.size.width = a3;
    v15.size.height = a4;
    CGRectGetMaxY(v15);
  }
  else
  {
    v16.origin.x = a1;
    v16.origin.y = a2;
    v16.size.width = a3;
    v16.size.height = a4;
    CGRectGetMidY(v16);
    sub_2414B3FB8();
    v17.origin.x = a1;
    v17.origin.y = a2;
    v17.size.width = a3;
    v17.size.height = a4;
    CGRectGetHeight(v17);
    v18.origin.x = a1;
    v18.origin.y = a2;
    v18.size.width = a3;
    v18.size.height = a4;
    CGRectGetMinY(v18);
    v19.origin.x = a1;
    v19.origin.y = a2;
    v19.size.width = a3;
    v19.size.height = a4;
    CGRectGetHeight(v19);
  }
  sub_2414B3FD0();
LABEL_6:
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetMidY(v20);
  sub_2414B3FB8();
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetMaxX(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetMidY(v22);
  result = sub_2414B3FD0();
  if (!a6)
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMidY(v23);
    sub_2414B3FB8();
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMaxY(v25);
    v26.origin.x = a1;
    v26.origin.y = a2;
    v26.size.width = a3;
    v26.size.height = a4;
    CGRectGetHeight(v26);
    return sub_2414B3FD0();
  }
  return result;
}

double sub_241305768@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  sub_2414B3FF4();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_2413057CC()
{
  return sub_2414B4750();
}

void (*sub_2413057E4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2414B2ECC();
  return sub_241305840;
}

void sub_241305840(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_24130586C()
{
  sub_241307AEC();
  return sub_2414B478C();
}

uint64_t sub_2413058BC()
{
  sub_241307AEC();
  return sub_2414B475C();
}

uint64_t sub_24130590C()
{
  sub_241307AEC();
  return sub_2414B4774();
}

uint64_t sub_241305944()
{
  return sub_2414B4288();
}

uint64_t sub_24130595C@<X0>(uint64_t a1@<X8>)
{
  return sub_241304CB4(a1);
}

uint64_t _s11MediaCoreUI13DeviceMetricsV9SizeClassO9hashValueSivg_0()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_2413059E0()
{
  return sub_2414B58D8();
}

uint64_t sub_241305A08()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_241305A48()
{
  uint64_t result;

  result = sub_2414B4660();
  qword_257120598 = result;
  return result;
}

uint64_t sub_241305A64@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(&qword_257120590, &qword_257120598, a1);
}

uint64_t sub_241305A80()
{
  uint64_t result;

  result = sub_2414B463C();
  qword_2571205A8 = result;
  return result;
}

uint64_t sub_241305A9C@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(&qword_2571205A0, &qword_2571205A8, a1);
}

uint64_t sub_241305AB8@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_retain();
}

uint64_t sub_241305AFC()
{
  sub_2413074F8();
  return sub_2414B3340();
}

uint64_t sub_241305B4C()
{
  sub_241307140();
  return sub_2414B3340();
}

uint64_t sub_241305B9C()
{
  unsigned __int8 v1;

  sub_2413066C4();
  sub_2414B3838();
  return v1;
}

uint64_t sub_241305BD4(uint64_t a1, uint64_t a2)
{
  return sub_2413067D0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

_QWORD *sub_241305BEC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_241305C00(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_241305C30(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_241305C44(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_241305C58(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_241305C6C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_241305C80@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_241305C90()
{
  return sub_2414B5458();
}

_QWORD *sub_241305CA8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_241305CBC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_241305CD0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_241305CFC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_241305D20(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_241305D34@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_241305D48(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_241305D5C()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_241305D6C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_241305D80@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

id sub_241305D94()
{
  id *v0;

  return *v0;
}

uint64_t sub_241305D9C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_241305DA4(uint64_t a1, uint64_t a2)
{
  return sub_2413067D0(a1, a2, MEMORY[0x24BEE0CD8]);
}

void sub_241305DB0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_241305DBC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2414B4D50();
  *a2 = 0;
  return result;
}

uint64_t sub_241305E30(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2414B4D5C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_241305EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2414B4D68();
  v2 = sub_2414B4D44();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_241305EEC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_241305F00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_241306944(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_241305F3C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_241305F4C()
{
  return sub_2414B4D68();
}

uint64_t sub_241305F5C()
{
  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  return sub_2414B29B0();
}

uint64_t sub_241305F9C()
{
  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  return sub_2414B2980();
}

uint64_t sub_241305FDC(void *a1)
{
  id v2;

  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  v2 = a1;
  return sub_2414B2974();
}

uint64_t sub_241306040()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_2414B5338();

  return v2;
}

uint64_t sub_241306074()
{
  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  return sub_2414B29A4();
}

uint64_t sub_2413060C4()
{
  sub_2414B58CC();
  sub_2414B4C84();
  return sub_2414B58FC();
}

_DWORD *sub_241306120@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_241306134()
{
  sub_2412C8030(&qword_257121148, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2414B84D0);
  sub_2412C8030(&qword_257121150, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2414B8470);
  return sub_2414B5704();
}

uint64_t sub_2413061B8()
{
  sub_2412C8030(&qword_257121238, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B8A44);
  sub_2412C8030(&qword_257121240, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B8998);
  return sub_2414B5704();
}

uint64_t sub_24130623C()
{
  sub_2412C8030(&qword_2571210F8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B82B4);
  return sub_2414B586C();
}

uint64_t sub_24130627C()
{
  sub_2412C8030(&qword_2571210F8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B82B4);
  return sub_2414B5860();
}

uint64_t sub_2413062C0()
{
  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  return sub_2414B2968();
}

uint64_t sub_241306300()
{
  sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
  return sub_2414B298C();
}

uint64_t sub_241306358()
{
  sub_2412C8030((unint64_t *)&qword_254384FD0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B8714);
  sub_2412C8030(&qword_257121170, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B80F8);
  return sub_2414B5704();
}

uint64_t sub_2413063DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B4D68();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241306404()
{
  sub_2412C8030((unint64_t *)&unk_254384380, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B7BA4);
  sub_2412C8030(&qword_257121008, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B764C);
  return sub_2414B5704();
}

uint64_t sub_241306488()
{
  return sub_2412C8030(&qword_257120F98, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B7610);
}

uint64_t sub_2413064B4()
{
  return sub_2412C8030(&qword_257120FA0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B75E4);
}

uint64_t sub_2413064E0()
{
  sub_2412C8030(&qword_257120FF0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B7B60);
  sub_2412C8030((unint64_t *)&unk_257120FF8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B776C);
  return sub_2414B5704();
}

uint64_t sub_241306564()
{
  return sub_2412C8030(&qword_257120FA8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B7730);
}

uint64_t sub_241306590()
{
  return sub_2412C8030(&qword_257120FB0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B7704);
}

uint64_t sub_2413065BC()
{
  return sub_2412C8030(&qword_257120FB8, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2414B78B8);
}

uint64_t sub_2413065E8()
{
  return sub_2412C8030(&qword_257120FC0, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2414B7884);
}

uint64_t sub_241306614()
{
  return sub_2412C8030(&qword_257120FC8, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2414B78E4);
}

uint64_t sub_241306640()
{
  return sub_2412C8030(&qword_257120FD0, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_2414B7920);
}

uint64_t sub_24130666C()
{
  return sub_2412C8030((unint64_t *)&unk_257120FD8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B77A0);
}

uint64_t sub_241306698()
{
  return sub_2412C8030(&qword_254384390, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B7680);
}

unint64_t sub_2413066C4()
{
  unint64_t result;

  result = qword_257120FE8;
  if (!qword_257120FE8)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8758, &type metadata for ArrowStyleKey);
    atomic_store(result, (unint64_t *)&qword_257120FE8);
  }
  return result;
}

uint64_t sub_241306708@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2414B4D44();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24130674C()
{
  sub_2412C8030(&qword_257121158, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2414B85D0);
  sub_2412C8030((unint64_t *)&unk_257121160, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2414B835C);
  return sub_2414B5704();
}

uint64_t sub_2413067D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2414B4D68();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24130680C()
{
  sub_2414B4D68();
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24130684C()
{
  uint64_t v0;

  sub_2414B4D68();
  sub_2414B58CC();
  sub_2414B4DD4();
  v0 = sub_2414B58FC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2413068BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2414B4D68();
  v2 = v1;
  if (v0 == sub_2414B4D68() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_241306944(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_24130697C()
{
  unint64_t result;

  result = qword_257121010;
  if (!qword_257121010)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8598, &type metadata for LabelColorKey);
    atomic_store(result, (unint64_t *)&qword_257121010);
  }
  return result;
}

unint64_t sub_2413069C0()
{
  unint64_t result;

  result = qword_257121018;
  if (!qword_257121018)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8560, &type metadata for LineColor);
    atomic_store(result, (unint64_t *)&qword_257121018);
  }
  return result;
}

ValueMetadata *type metadata accessor for LineColor()
{
  return &type metadata for LineColor;
}

ValueMetadata *type metadata accessor for LabelColorKey()
{
  return &type metadata for LabelColorKey;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_241306A48(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241306A68(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121020);
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121028);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_254385030);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_241306B04(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241306B24(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for CAMeshVertex(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_254384F98);
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CAMeshFace(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254384F90);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s7PaddingVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s7PaddingVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257121030);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17TimeControlActionOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s17TimeControlActionOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2543828F8);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121040);
}

void type metadata accessor for AVError(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257121048);
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121058);
}

void type metadata accessor for Option(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_2543845E0);
}

ValueMetadata *type metadata accessor for ArrowStyleKey()
{
  return &type metadata for ArrowStyleKey;
}

ValueMetadata *type metadata accessor for DebugDimensionArrowStyle()
{
  return &type metadata for DebugDimensionArrowStyle;
}

uint64_t destroy for DebugDimensionText(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_2412C821C(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  sub_2412C7080(v6, v7);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_BYTE *)(v2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(v2 + 40);
  LOBYTE(v2) = *(_BYTE *)(v2 + 48);
  sub_2412C7080(v6, v2);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v2;
  sub_2412C821C(v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugDimensionText(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_release();
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v6;
  sub_2412C821C(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugDimensionText(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugDimensionText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionText()
{
  return &type metadata for DebugDimensionText;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_2412C82CC(a1, qword_254381738);
}

__n128 __swift_memcpy80_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void type metadata accessor for Model(uint64_t a1)
{
  sub_2412C82CC(a1, (unint64_t *)&unk_257121060);
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Vertex(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Vertex(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_254384FB8);
}

uint64_t getEnumTagSinglePayload for WaveformSize(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WaveformSize(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for AudioStreamPacketDescription(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121070);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_257121078);
}

uint64_t sub_24130707C()
{
  return sub_2412C8030(&qword_257121080, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2414B7E5C);
}

uint64_t sub_2413070A8()
{
  return sub_2412C8030(&qword_257121088, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2414B7E28);
}

uint64_t sub_2413070D4()
{
  return sub_2412C8030(&qword_257121090, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2414B7E88);
}

uint64_t sub_241307100()
{
  return sub_2412C8030(&qword_257121098, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_2414B7EC4);
}

uint64_t sub_24130712C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241307140()
{
  unint64_t result;

  result = qword_2571210A0;
  if (!qword_2571210A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414B805C, &type metadata for DebugDimensionArrowStyle);
    atomic_store(result, (unint64_t *)&qword_2571210A0);
  }
  return result;
}

uint64_t sub_241307184()
{
  return sub_2412C8030(&qword_2571210A8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B80BC);
}

uint64_t sub_2413071B0()
{
  return sub_2412C8030(&qword_2571210B0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B8090);
}

uint64_t sub_2413071DC()
{
  return sub_2412C8030(&qword_2571210B8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B81DC);
}

uint64_t sub_241307208()
{
  return sub_2412C8030(&qword_2571210C0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8204);
}

uint64_t sub_241307234()
{
  return sub_2412C8030(&qword_2571210C8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2414B8320);
}

uint64_t sub_241307260()
{
  return sub_2412C8030(&qword_2571210D0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2414B82F4);
}

uint64_t sub_24130728C()
{
  return sub_2412C8030(&qword_2571210D8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2414B8434);
}

uint64_t sub_2413072B8()
{
  return sub_2412C8030(&qword_2571210E0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2414B8408);
}

uint64_t sub_2413072E4()
{
  return sub_2412C8030(&qword_2571210E8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2414B84A4);
}

uint64_t sub_241307310()
{
  return sub_2412C8030(&qword_2571210F0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2414B8390);
}

uint64_t sub_24130733C()
{
  return sub_2412C8030(&qword_2571210F8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B82B4);
}

uint64_t sub_241307368()
{
  return sub_2412C8030(&qword_257121100, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8284);
}

uint64_t sub_241307394()
{
  return sub_2412C8030(&qword_257121108, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8244);
}

uint64_t sub_2413073C0()
{
  return sub_2412C8030(&qword_257121110, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_2414B86B4);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2571211C8);
}

uint64_t sub_241307400()
{
  return sub_2412C8030(&qword_257121118, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_2414B867C);
}

unint64_t sub_241307430()
{
  unint64_t result;

  result = qword_257121120;
  if (!qword_257121120)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257121120);
  }
  return result;
}

uint64_t sub_241307474()
{
  return sub_2412C8030(&qword_257121128, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_2414B86EC);
}

uint64_t sub_2413074A0()
{
  return sub_2412C8030((unint64_t *)&unk_257121130, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2414B8614);
}

uint64_t sub_2413074CC()
{
  return sub_2412C8030(&qword_254384FD8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B812C);
}

unint64_t sub_2413074F8()
{
  unint64_t result;

  result = qword_257121140;
  if (!qword_257121140)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF3E60], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_257121140);
  }
  return result;
}

unint64_t sub_24130753C()
{
  unint64_t result;

  result = qword_2571211B0;
  if (!qword_2571211B0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2571211B0);
  }
  return result;
}

uint64_t sub_241307588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2414B35A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413075CC(uint64_t a1)
{
  sub_241307638(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241307638(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_241307648(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2414B35A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241307684(uint64_t a1)
{
  sub_2412F6D78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413076F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2571211A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2571211C0);
}

uint64_t _s11MediaCoreUI24DebugDimensionArrowStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2413077A0 + 4 * byte_2414B72D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2413077D4 + 4 * byte_2414B72D0[v4]))();
}

uint64_t sub_2413077D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413077DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413077E4);
  return result;
}

uint64_t sub_2413077F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413077F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2413077FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241307804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionText.ArrowLine()
{
  return &type metadata for DebugDimensionText.ArrowLine;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2571211D0);
}

void type metadata accessor for CAPoint3D(uint64_t a1)
{
  sub_2412C82CC(a1, &qword_2571211D8);
}

unint64_t sub_24130784C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571211E0;
  if (!qword_2571211E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121190);
    v2[0] = sub_2413078B8();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571211E0);
  }
  return result;
}

unint64_t sub_2413078B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571211E8;
  if (!qword_2571211E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121180);
    v2[0] = sub_2412C8FC4(&qword_2571211F0, &qword_257121178, MEMORY[0x24BDF4498]);
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571211E8);
  }
  return result;
}

uint64_t sub_241307954()
{
  return sub_2412C8FC4(&qword_2571211F8, (uint64_t *)&unk_257121200, MEMORY[0x24BDEB358]);
}

unint64_t sub_241307984()
{
  unint64_t result;

  result = qword_2571268C0;
  if (!qword_2571268C0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_2571268C0);
  }
  return result;
}

unint64_t sub_2413079CC()
{
  unint64_t result;

  result = qword_257121210;
  if (!qword_257121210)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8890, &type metadata for DebugDimensionText.ArrowLine);
    atomic_store(result, (unint64_t *)&qword_257121210);
  }
  return result;
}

unint64_t sub_241307A14()
{
  unint64_t result;

  result = qword_257121218;
  if (!qword_257121218)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8840, &type metadata for DebugDimensionText.ArrowLine);
    atomic_store(result, (unint64_t *)&qword_257121218);
  }
  return result;
}

uint64_t sub_241307A58()
{
  return sub_2412C8030(&qword_257121220, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B895C);
}

uint64_t sub_241307A84()
{
  return sub_2412C8030(&qword_257121228, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B8930);
}

uint64_t sub_241307AB0()
{
  return sub_2412C8030(&qword_257121230, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2414B89CC);
}

uint64_t sub_241307ADC(uint64_t a1)
{
  uint64_t v1;

  return sub_24130552C(*(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), a1, *(_BYTE *)(v1 + 48));
}

unint64_t sub_241307AEC()
{
  unint64_t result;

  result = qword_257121248;
  if (!qword_257121248)
  {
    result = MEMORY[0x242695AE8](&unk_2414B88E0, &type metadata for DebugDimensionText.ArrowLine);
    atomic_store(result, (unint64_t *)&qword_257121248);
  }
  return result;
}

uint64_t sub_241307BA8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  sub_2414B48DC();
  return v1;
}

uint64_t sub_241307BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];

  v27 = a1;
  v28 = a3;
  MEMORY[0x242695AE8](&unk_2414B8E48);
  v5 = sub_2414B3B08();
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121340);
  v7 = sub_2414B3514();
  v34[0] = *(_QWORD *)(a2 + 24);
  v8 = v34[0];
  v34[1] = sub_2412C8FC4(qword_2571214E8, &qword_257121340, MEMORY[0x24BDF1028]);
  v9 = MEMORY[0x24BDED308];
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v34);
  v12 = type metadata accessor for Popover(255, v7, v10, v11);
  v13 = sub_2414B3514();
  v33[0] = MEMORY[0x242695AE8](&unk_2414B8D80, v12);
  v33[1] = sub_24130CB04();
  MEMORY[0x242695AE8](v9, v13, v33);
  v14 = sub_2414B3A6C();
  v15 = sub_2414B3514();
  v26 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v25 - v19;
  v29 = v6;
  v30 = v8;
  v31 = v3;
  sub_2414B4A44();
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v5);
  sub_2414B4120();
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v14);
  v32[0] = v21;
  v32[1] = v22;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v32);
  sub_2412FBF34((uint64_t)v17, v15, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v17, v15);
  sub_2412EEA1C((uint64_t)v20, v15, v28);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v15);
}

uint64_t sub_241307E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD v38[2];
  __int128 v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  _QWORD v49[2];
  __int128 v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  v7 = sub_241307BA8();
  v30 = v8;
  v31 = v7;
  v29 = v9;
  v36 = *(_QWORD *)(a1 + 24);
  v35 = *(_BYTE *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 80);
  v32 = *(void **)(a1 + 48);
  v33 = *(_QWORD *)(a1 + 72);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  v15 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v14 + 112) = v15;
  *(_QWORD *)(v14 + 128) = *(_QWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 48) = v16;
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 80) = v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121340);
  v18 = sub_2414B3514();
  v49[0] = a3;
  v49[1] = sub_2412C8FC4(qword_2571214E8, &qword_257121340, MEMORY[0x24BDF1028]);
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v49);
  *(_QWORD *)&v68 = v31;
  *((_QWORD *)&v68 + 1) = v30;
  LOBYTE(v69) = v29 & 1;
  *((_QWORD *)&v69 + 1) = v36;
  LOBYTE(v70) = v35;
  *((_QWORD *)&v70 + 1) = v10;
  *(_QWORD *)&v71 = v32;
  *((_QWORD *)&v71 + 1) = v11;
  *(_QWORD *)&v72 = v12;
  *((_QWORD *)&v72 + 1) = v33;
  *(_QWORD *)&v73 = v13;
  *((_QWORD *)&v73 + 1) = sub_24130CB58;
  v74 = v14;
  v64 = v72;
  v65 = v73;
  v66 = v14;
  v60 = v68;
  v61 = v69;
  v62 = v70;
  v63 = v71;
  v20 = v32;
  swift_bridgeObjectRetain();
  sub_2412D2824(v11);
  sub_2412D2824(v33);
  sub_24130CB64(a1);
  v22 = type metadata accessor for Popover(0, v18, v19, v21);
  v23 = MEMORY[0x242695AE8](&unk_2414B8D80, v22);
  sub_2414B42DC();
  sub_24130CBF4(&v68);
  v24 = v55;
  v34 = *((_QWORD *)&v56 + 1);
  v39 = v50;
  v40 = v51;
  v41 = v52;
  v42 = v53;
  v43 = v54;
  v44 = v55;
  v45 = v56;
  v46 = v57;
  v47 = v58;
  v48 = v59;
  v25 = sub_2414B3514();
  v38[0] = v23;
  v38[1] = sub_24130CB04();
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v25, v38);
  sub_2412FBF34((uint64_t)&v39, v25, (uint64_t)&v60);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_2412C9444(*((uint64_t *)&v24 + 1));
  sub_2412C9444(v34);
  swift_release();
  v26 = v63;
  v27 = *((_QWORD *)&v64 + 1);
  v50 = v60;
  v51 = v61;
  v52 = *((_QWORD *)&v61 + 1);
  v53 = v62;
  v54 = *((_QWORD *)&v62 + 1);
  v55 = v63;
  v56 = v64;
  v57 = v65;
  v58 = v66;
  v59 = v67;
  sub_2412EEA1C((uint64_t)&v50, v25, a4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_2412C9444(*((uint64_t *)&v26 + 1));
  sub_2412C9444(v27);
  return swift_release();
}

uint64_t sub_2413081AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];

  v26 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121340);
  v14 = sub_2414B3514();
  v25 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v25 - v19;
  (*(void (**)(double))(a1 + 88))(v18);
  swift_getKeyPath();
  v21 = sub_2414B4A08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  sub_2414B41C8();
  swift_release();
  sub_2412CBE78((uint64_t)v9, &qword_257121330);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a2);
  v22 = sub_2412C8FC4(qword_2571214E8, &qword_257121340, MEMORY[0x24BDF1028]);
  v27[0] = a3;
  v27[1] = v22;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v27);
  sub_2412FBF34((uint64_t)v16, v14, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v25 + 8);
  v23(v16, v14);
  sub_2412EEA1C((uint64_t)v20, v14, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
}

uint64_t sub_2413083D0()
{
  sub_24130CDF0();
  return sub_2414B3838();
}

uint64_t sub_24130840C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_241309910(a1, (uint64_t)&v9 - v6);
  sub_241309910((uint64_t)v7, (uint64_t)v4);
  sub_24130CDF0();
  sub_2414B3844();
  return sub_2412CBE78((uint64_t)v7, &qword_257121330);
}

uint64_t sub_2413084D8()
{
  return sub_2414B3178();
}

uint64_t sub_2413084F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_241307BF8(a1, a2, a3);
}

uint64_t sub_241308538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];

  v41 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v32 - v8;
  v40 = *(_QWORD *)(v9 + 24);
  v10 = sub_2414B2F50();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v35 = (uint64_t)&v32 - v14;
  v15 = sub_2414B394C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2414B3A90();
  v38 = *(_QWORD *)(v19 - 8);
  v39 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v37 = (char *)&v32 - v20;
  v21 = v2;
  sub_241344C50((uint64_t)v18);
  v22 = sub_2414B3940();
  v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if ((v22 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v23);
    v24 = v40;
    *(&v32 - 4) = v4;
    *(&v32 - 3) = v24;
    *(&v32 - 2) = v21;
    sub_2414B3E2C();
    sub_2414B2F5C();
    MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v10);
    v25 = v35;
    sub_2412FBF34((uint64_t)v12, v10, v35);
    v26 = *(void (**)(char *, uint64_t))(v33 + 8);
    v26(v12, v10);
    sub_2412EEA1C(v25, v10, (uint64_t)v12);
    v27 = (uint64_t)v37;
    sub_24132F340((uint64_t)v12, v10);
    v26(v12, v10);
    v26((char *)v25, v10);
  }
  else
  {
    (*(void (**)(uint64_t))(v21 + *(int *)(a1 + 36)))(v23);
    v28 = v36;
    v24 = v40;
    sub_2412FBF34((uint64_t)v6, v4, v36);
    v29 = *(void (**)(char *, uint64_t))(v34 + 8);
    v29(v6, v4);
    sub_2412EEA1C(v28, v4, (uint64_t)v6);
    MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v10);
    v27 = (uint64_t)v37;
    sub_2412F1584((uint64_t)v6, v10, v4);
    v29(v6, v4);
    v29((char *)v28, v4);
  }
  v42[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v10);
  v42[1] = v24;
  v30 = v39;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v39, v42);
  sub_2412EEA1C(v27, v30, v41);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v27, v30);
}

uint64_t sub_2413088B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  v15 = type metadata accessor for AXPopoverContainer(0, v12, v13, v14);
  (*(void (**)(void))(a1 + *(int *)(v15 + 36)))();
  sub_2412FBF34((uint64_t)v8, a2, (uint64_t)v11);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, a2);
  sub_2412EEA1C((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v11, a2);
}

uint64_t sub_2413089A4@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  return swift_storeEnumTagMultiPayload();
}

double sub_2413089EC()
{
  double result;

  result = 30.0;
  xmmword_257121310 = xmmword_2414B8AA0;
  *(_OWORD *)&qword_257121320 = xmmword_2414B8AB0;
  return result;
}

id sub_241308A0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v2 = (_QWORD *)v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Popover.Coordinator(0, v3, *(_QWORD *)(v7 + 24), v8);
  v9 = *(void (**)(uint64_t))(v1 + 88);
  v10 = sub_24130CB64(v1);
  v9(v10);
  v13 = sub_24130AEBC(v1, (uint64_t)v6, v11, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24130CBF4(v2);
  return v13;
}

void sub_241308ACC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  uint64_t (**v28)();
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  void *v71;
  int v72;
  void *v73;
  void (*v74)(void);
  id v75;
  void *v76;
  _QWORD v77[2];
  uint64_t v78;
  void *v79;
  __int128 aBlock;
  uint64_t (*v81)(uint64_t);
  void *v82;
  void (*v83)();
  uint64_t v84;
  char v85[8];
  id v86;
  uint64_t v87;

  v4 = v3;
  v79 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_QWORD *)((char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v78 = type metadata accessor for AXPopoverContainer(0, v11, v10, v12);
  MEMORY[0x24BDAC7A8](v78);
  v14 = (char *)v77 - v13;
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x242695AE8](&unk_2414B8DD0, a3, v16);
  v17 = sub_2414B3DFC();
  sub_2414B3DF0();
  v18 = (void *)aBlock;
  v19 = *(id *)(aBlock + qword_257121368);

  (*(void (**)(void))(v4 + 88))();
  sub_2414B39C4();

  v77[0] = v17;
  v77[1] = a2;
  sub_2414B3DF0();
  v20 = (void *)aBlock;
  v21 = *(id *)(aBlock + qword_257121360);

  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v11;
  *(_QWORD *)(v22 + 24) = v10;
  v23 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v22 + 112) = v23;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v4 + 96);
  v24 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v22 + 48) = v24;
  v25 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v22 + 80) = v25;
  sub_2413089A4(v9);
  v26 = (uint64_t)v9;
  v27 = v79;
  sub_2412EAEA4(v26, (uint64_t)v14, qword_257121578);
  v28 = (uint64_t (**)())&v14[*(int *)(v78 + 36)];
  *v28 = sub_24130CD0C;
  v28[1] = (uint64_t (*)())v22;
  sub_24130CB64(v4);
  sub_2414B39C4();

  aBlock = *(_OWORD *)v4;
  LOBYTE(v81) = *(_BYTE *)(v4 + 16);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v86, v29);
  if (v86 == 1)
  {
    v30 = objc_msgSend(v27, sel_presentedViewController);

    if (!v30)
    {
      sub_2414B3DF0();
      v31 = (void *)aBlock;
      v32 = *(id *)(aBlock + qword_257121360);

      objc_msgSend(v32, sel_setModalPresentationStyle_, 7);
      v33 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v33)
      {
        v34 = v33;
        sub_2414B3DF0();
        v35 = (void *)aBlock;
        objc_msgSend(v34, sel_setDelegate_, (_QWORD)aBlock);

      }
      v36 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v27, sel_view);
        objc_msgSend(v37, sel_setSourceView_, v38);

      }
      v39 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v39)
      {
        v40 = v39;
        v41 = objc_msgSend(v27, sel_view);
        if (!v41)
        {
          __break(1u);
          goto LABEL_33;
        }
        v42 = v41;
        objc_msgSend(v41, sel_bounds);
        v44 = v43;
        v46 = v45;
        v48 = v47;
        v50 = v49;

        objc_msgSend(v40, sel_setSourceRect_, v44, v46, v48, v50);
      }
      v51 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v51)
      {
        v52 = v51;
        objc_msgSend(v51, sel_setPermittedArrowDirections_, *(_QWORD *)(v4 + 24));

      }
      v53 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v53)
      {
        v54 = v53;
        sub_241309D2C();
        v55 = (void *)sub_2414B4EB8();
        objc_msgSend(v54, sel_setPassthroughViews_, v55);

      }
      v56 = objc_msgSend(v32, sel_popoverPresentationController);
      if (v56)
      {
        v57 = v56;
        sub_2412EAEA4(v4 + 48, (uint64_t)v85, &qword_257121688);
        sub_2412EAEA4((uint64_t)v85, (uint64_t)&v86, &qword_257121688);
        if (v86)
        {
          objc_msgSend(v86, sel_safeAreaInsets);
        }
        else
        {
          if (qword_2571205B0 != -1)
            swift_once();
          v59 = *((double *)&xmmword_257121310 + 1);
          v58 = *(double *)&xmmword_257121310;
          v60 = *(double *)&qword_257121320;
          v61 = unk_257121328;
        }
        objc_msgSend(v57, sel_setPopoverLayoutMargins_, v58, v59, v60, v61);

      }
      v62 = swift_allocObject();
      v63 = *(_OWORD *)(v4 + 80);
      *(_OWORD *)(v62 + 80) = *(_OWORD *)(v4 + 64);
      *(_OWORD *)(v62 + 96) = v63;
      v64 = *(_QWORD *)(v4 + 96);
      v65 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v62 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v62 + 32) = v65;
      v66 = *(_OWORD *)(v4 + 48);
      *(_OWORD *)(v62 + 48) = *(_OWORD *)(v4 + 32);
      *(_OWORD *)(v62 + 64) = v66;
      *(_QWORD *)(v62 + 112) = v64;
      *(_QWORD *)(v62 + 120) = v32;
      v83 = sub_24130CD98;
      v84 = v62;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v81 = sub_2413002C8;
      v82 = &block_descriptor;
      v67 = _Block_copy(&aBlock);
      sub_24130CB64(v4);
      v68 = v32;
      swift_release();
      objc_msgSend(v27, sel_presentViewController_animated_completion_, v68, 1, v67);
      _Block_release(v67);

    }
  }
  aBlock = *(_OWORD *)v4;
  LOBYTE(v81) = *(_BYTE *)(v4 + 16);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v87, v69);
  if ((v87 & 1) == 0)
  {
    v70 = objc_msgSend(v27, sel_presentedViewController);
    if (v70)
    {
      v71 = v70;
      sub_2414B3DF0();
      v72 = *(unsigned __int8 *)(aBlock + qword_257121358);

      if (v72 == 2 || (v72 & 1) != 0)
        goto LABEL_30;
      sub_2414B3DF0();
      v73 = (void *)aBlock;
      *(_BYTE *)(aBlock + qword_257121358) = 1;

      v74 = *(void (**)(void))(v4 + 72);
      if (!v74)
      {
LABEL_29:
        objc_msgSend(v27, sel_dismissViewControllerAnimated_completion_, 1, 0);
LABEL_30:

        return;
      }
      v75 = objc_msgSend(v71, sel_view);
      if (v75)
      {
        v76 = v75;
        v74();

        goto LABEL_29;
      }
LABEL_33:
      __break(1u);
    }
  }
}

void sub_241309184(uint64_t a1, id a2)
{
  void (*v2)(void);
  id v3;
  id v4;

  v2 = *(void (**)(void))(a1 + 56);
  if (v2)
  {
    v3 = objc_msgSend(a2, sel_view);
    if (v3)
    {
      v4 = v3;
      v2();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_2413091F0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_257121358);
}

uint64_t sub_241309200(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_257121358) = result;
  return result;
}

id sub_241309210(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  void *v14;
  id result;
  CGRect v16;

  v2 = v1;
  v3 = objc_msgSend(a1, sel_sourceView);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      objc_msgSend(v5, sel_bounds);
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v16.origin.x = v7;
      v16.origin.y = v9;
      v16.size.width = v11;
      v16.size.height = v13;
      CGRectGetWidth(v16);
    }
  }
  v14 = *(void **)(v2 + qword_257121360);
  sub_2414B3988();
  result = objc_msgSend(v14, sel_setPreferredContentSize_);
  *(_BYTE *)(v2 + qword_257121358) = 0;
  return result;
}

void sub_241309310(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_241309210(v4);

}

void sub_241309364(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  void (*v7)(id);
  id v8;
  id v9;

  v6 = *MEMORY[0x24BEE4EA0] & *v4;
  *((_BYTE *)v4 + qword_257121358) = 1;
  v7 = *(void (**)(id))((char *)v4 + qword_257121370 + 72);
  type metadata accessor for Popover(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  sub_2414B48D0();
  if (v7)
  {
    v8 = objc_msgSend(a1, sel_presentedViewController);
    v9 = objc_msgSend(v8, sel_view);

    if (v9)
    {
      v7(v9);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_241309454(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  v7 = a1;
  sub_241309364(v4, (uint64_t)v7, v5, v6);

}

uint64_t sub_2413094A8()
{
  return -1;
}

uint64_t sub_2413094B0()
{
  return sub_24130AF04() & 1;
}

void sub_2413094D4()
{
  sub_24130AF18();
}

id sub_2413094F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Popover.Coordinator(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_24130953C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(a1 + qword_257121370 + 48);
  v3 = *(_QWORD *)(a1 + qword_257121370 + 56);
  v4 = *(_QWORD *)(a1 + qword_257121370 + 72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_2412C9444(v3);
  sub_2412C9444(v4);
  return swift_release();
}

id sub_2413095E4()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB08]), sel_init);
}

void sub_241309608(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241308ACC(a1, a2, a3);
}

id sub_241309658@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_241308A0C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2413096A8()
{
  return sub_2414B3D54();
}

uint64_t sub_2413096E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&unk_2414B8DD0, a3);
  return sub_2414B3D90();
}

uint64_t sub_24130973C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&unk_2414B8DD0, a3);
  return sub_2414B3D60();
}

void sub_241309798(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414B8DD0, a1);
  sub_2414B3D84();
  __break(1u);
}

uint64_t PopoverHostingControllerModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v8 = sub_2414B4A08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121338) + 36));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121340);
  sub_241309910((uint64_t)v6, (uint64_t)v9 + *(int *)(v10 + 28));
  *v9 = KeyPath;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257121348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  return sub_2412CBE78((uint64_t)v6, &qword_257121330);
}

uint64_t sub_2413098D0()
{
  sub_24130CDF0();
  return sub_2414B3838();
}

uint64_t sub_241309910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241309958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v8 = sub_2414B4A08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121338) + 36));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121340);
  sub_241309910((uint64_t)v6, (uint64_t)v9 + *(int *)(v10 + 28));
  *v9 = KeyPath;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257121348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  return sub_2412CBE78((uint64_t)v6, &qword_257121330);
}

uint64_t sub_241309A60()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)v0
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 24);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_241309AC0(char a1)
{
  _QWORD *v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (char *)v1
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 24);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_241309B24())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_241309B84()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)v0
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 32);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_241309BE4(char a1)
{
  _QWORD *v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (char *)v1
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 32);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_241309C48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_241309CA8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_popoverPresentationController);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = v1;
  v3 = objc_msgSend(v1, sel_passthroughViews);

  if (!v3)
    return MEMORY[0x24BEE4AF8];
  sub_241309D2C();
  v4 = sub_2414B4EC4();

  return v4;
}

unint64_t sub_241309D2C()
{
  unint64_t result;

  result = qword_2543843E0;
  if (!qword_2543843E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543843E0);
  }
  return result;
}

void sub_241309D68()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_popoverPresentationController);
  if (v1)
  {
    v2 = v1;
    sub_241309D2C();
    v3 = (id)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPassthroughViews_, v3);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void (*sub_241309DFC(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_241309CA8();
  return sub_241309E30;
}

void sub_241309E30(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_241309D68();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241309D68();
  }
}

void sub_241309E74(id a1)
{
  _QWORD *v1;
  id *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;

  v3 = (id *)((char *)v1
            + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 40));
  swift_beginAccess();
  if (*v3)
  {
    if (a1 && *v3 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v4 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v4)
  {
    v5 = v4;
    v6 = *v3;
    objc_msgSend(v5, sel_setSourceView_, v6);

  }
  v7 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v7)
  {
    v8 = v7;
    if (*v3)
    {
      objc_msgSend(*v3, sel_frame);
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v17 = sub_24130A2C0();
      v19 = UIEdgeInsetsInsetRect(v10, v12, v14, v16, v17, v18);
    }
    else
    {
      v21 = 0.0;
      v22 = 0.0;
      v19 = 0.0;
      v20 = 0.0;
    }
    objc_msgSend(v8, sel_setSourceRect_, v19, v20, v21, v22);

  }
}

void *sub_241309FE8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_24130AF44();
  v1 = v0;
  return v0;
}

void sub_24130A010(void *a1)
{
  _QWORD *v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)((char *)v1
               + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 40));
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  sub_241309E74(v4);

}

void (*sub_24130A098(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)((char *)v1
               + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 40));
  swift_beginAccess();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_24130A128;
}

void sub_24130A128(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    sub_24130A010(v3);

  }
  else
  {
    sub_24130A010(*(void **)(*(_QWORD *)a1 + 24));
  }
  free(v2);
}

void sub_24130A180(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  id v17;
  void *v18;
  id *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;

  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v10 = (double *)((char *)v4
                 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v4) + 48));
  swift_beginAccess();
  v11 = v10[1];
  v12 = v10[2];
  v13 = v10[3];
  if (*v10 != a1 || v11 != a2 || v12 != a3 || v13 != a4)
  {
    v17 = objc_msgSend(v4, sel_popoverPresentationController, *v10, v11, v12, v13);
    if (v17)
    {
      v18 = v17;
      v19 = (id *)((char *)v4 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v9 & *v4) + 40));
      swift_beginAccess();
      if (*v19)
      {
        objc_msgSend(*v19, sel_frame);
        v24 = UIEdgeInsetsInsetRect(v20, v21, v22, v23, *v10, v10[1]);
      }
      else
      {
        v26 = 0.0;
        v27 = 0.0;
        v24 = 0.0;
        v25 = 0.0;
      }
      objc_msgSend(v18, sel_setSourceRect_, v24, v25, v26, v27);

    }
  }
}

double sub_24130A2C0()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 48);
  swift_beginAccess();
  return *(double *)v1;
}

void sub_24130A324(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v9 = (double *)((char *)v4
                + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v4) + 48));
  swift_beginAccess();
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  sub_24130A180(v10, v11, v12, v13);
}

void (*sub_24130A3B4(_QWORD *a1))(double **a1)
{
  _QWORD *v1;
  _QWORD *v3;
  _OWORD *v4;
  __int128 v5;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  v4 = (_OWORD *)((char *)v1
                + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 48));
  swift_beginAccess();
  v5 = v4[1];
  *(_OWORD *)v3 = *v4;
  *((_OWORD *)v3 + 1) = v5;
  return sub_24130A43C;
}

void sub_24130A43C(double **a1)
{
  double *v1;

  v1 = *a1;
  sub_24130A324(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

uint64_t sub_24130A46C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = sub_24130AFA4();
  v3 = v2;
  v5 = v4;
  if (v2)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_24130CDD4;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;
  return sub_2412D2824(v3);
}

uint64_t sub_24130A4D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_24130CDD4;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2412D2824(v1);
  return sub_24130A588((uint64_t)v4, v3);
}

uint64_t sub_24130A558()
{
  uint64_t v0;

  v0 = sub_24130AFA4();
  sub_2412D2824(v0);
  return v0;
}

uint64_t sub_24130A588(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2
                + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v2) + 56));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_2412C9444(v6);
}

uint64_t (*sub_24130A600())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *PopoverViewController.__allocating_init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  id v8;
  _QWORD *v9;

  v4 = v3;
  v8 = objc_allocWithZone(v4);
  v9 = sub_24130B004(a1, a2, a3);

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v4
                                                          + class metadata base offset for PopoverViewController)
                                              - 8)
                                  + 8))(a1);
  return v9;
}

_QWORD *PopoverViewController.init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *MEMORY[0x24BEE4EA0] & *v3;
  v7 = sub_24130B004(a1, a2, a3);

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + class metadata base offset for PopoverViewController)
                                              - 8)
                                  + 8))(a1);
  return v7;
}

id PopoverViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_24130A788(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MediaCoreUI21PopoverViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

uint64_t sub_24130A7AC()
{
  return -1;
}

uint64_t sub_24130A7B4()
{
  return -1;
}

uint64_t sub_24130A7C0()
{
  return sub_241309A60() & 1;
}

void sub_24130A7E8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_24130B6C0();

}

id sub_24130A834()
{
  _QWORD *v0;
  id result;
  double v2;
  double v3;
  _BYTE *v4;

  result = objc_msgSend(v0, sel_preferredContentSize);
  if (v2 != 1.79769313e308)
  {
    result = objc_msgSend(v0, sel_preferredContentSize);
    if (v3 != 0.0)
    {
      v4 = (char *)v0
         + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 32);
      result = (id)swift_beginAccess();
      if (*v4 == 1)
      {
        objc_msgSend(v0, sel_preferredContentSize);
        sub_2414B3988();
        return objc_msgSend(v0, sel_setPreferredContentSize_);
      }
    }
  }
  return result;
}

void PopoverViewController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PopoverViewController.init(rootView:)()
{
  sub_24130B748();
}

void PopoverViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PopoverViewController.init(coder:rootView:)()
{
  sub_24130B774();
}

uint64_t sub_24130A9A8()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  objc_release(*(id *)((char *)v0
                     + *(_QWORD *)(class metadata base offset for PopoverViewController
                                 + (*MEMORY[0x24BEE4EA0] & *v0)
                                 + 16)));

  return sub_2412C9444(*(_QWORD *)((char *)v0
                                 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 56)));
}

id PopoverViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for PopoverViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for PopoverViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for PopoverViewController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_24130AA8C(_QWORD *a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  objc_release(*(id *)((char *)a1
                     + *(_QWORD *)(class metadata base offset for PopoverViewController
                                 + (*MEMORY[0x24BEE4EA0] & *a1)
                                 + 16)));

  return sub_2412C9444(*(_QWORD *)((char *)a1
                                 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v2 & *a1) + 56)));
}

_QWORD *View.popover<A>(isPresented:permittedArrowDirections:isDismissable:passthroughViews:containerView:onAppear:onDismiss:content:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  id v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[6];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  *(_QWORD *)&v22 = a1;
  *((_QWORD *)&v22 + 1) = a2;
  LOBYTE(v23) = a3;
  *((_QWORD *)&v23 + 1) = a4;
  LOBYTE(v24) = a5;
  *((_QWORD *)&v24 + 1) = a6;
  *(_QWORD *)&v25 = a7;
  *((_QWORD *)&v25 + 1) = a8;
  v26 = a9;
  v27 = a10;
  v28 = a11;
  v20[4] = a9;
  v20[5] = a10;
  v21 = a11;
  v20[0] = v22;
  v20[1] = v23;
  v20[2] = v24;
  v20[3] = v25;
  v16 = a7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2412D2824(a8);
  sub_2412D2824(*((uint64_t *)&a9 + 1));
  v18 = type metadata accessor for PopoverViewModifier(0, a13, a15, v17);
  swift_retain();
  MEMORY[0x242693DC0](v20, a12, v18, a14);
  return sub_24130CBF4(&v22);
}

id sub_24130AC44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t (**v26)@<X0>(uint64_t@<X8>);
  _QWORD *v27;
  uint64_t v28;
  objc_class *v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  objc_super v35;

  v34 = a2;
  v4 = *MEMORY[0x24BEE4EA0] & *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - v10;
  v12 = *(_QWORD *)(v4 + 88);
  v14 = type metadata accessor for AXPopoverContainer(0, v7, v12, v13);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - v15;
  *((_BYTE *)v2 + qword_257121358) = 2;
  v17 = (char *)v2 + qword_257121370;
  v18 = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v17 + 5) = v18;
  *((_QWORD *)v17 + 12) = *(_QWORD *)(a1 + 96);
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v17 = *(_OWORD *)a1;
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v17 + 3) = v20;
  MEMORY[0x242695AE8](&unk_2414B8D30, v14);
  v21 = sub_2414B39D0();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v31 = v21;
  v32 = v22;
  v22(v11, v34, v7);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v7;
  *(_QWORD *)(v24 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v11, v7);
  v25 = v33;
  sub_2413089A4(v33);
  sub_2412EAEA4((uint64_t)v25, (uint64_t)v16, qword_257121578);
  v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v16[*(int *)(v14 + 36)];
  *v26 = sub_24130CCDC;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v24;
  v27 = v2;
  sub_24130CB64(a1);
  *(_QWORD *)((char *)v27 + qword_257121360) = sub_2414B39AC();
  sub_2414B39D0();
  v32(v11, v34, v7);
  *(_QWORD *)((char *)v27 + qword_257121368) = sub_2414B39AC();

  v29 = (objc_class *)type metadata accessor for Popover.Coordinator(0, v7, v12, v28);
  v35.receiver = v27;
  v35.super_class = v29;
  return objc_msgSendSuper2(&v35, sel_init);
}

id sub_24130AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;

  v7 = objc_allocWithZone((Class)type metadata accessor for Popover.Coordinator(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_24130AC44(a1, a2);
}

uint64_t sub_24130AF04()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_257121370 + 32);
}

void sub_24130AF18()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24130AF44()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 40);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_24130AFA4()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0
     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 56);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

_QWORD *sub_24130B004(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void **v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  _QWORD *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  _QWORD *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t ObjectType;
  _QWORD v70[5];
  _BYTE v71[48];

  v4 = v3;
  v66 = a3;
  v67 = a1;
  ObjectType = swift_getObjectType();
  v7 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v65 = *MEMORY[0x24BEE4EA0] & *v4;
  sub_2412EAEA4(a3, (uint64_t)v70, (uint64_t *)&unk_257121690);
  v8 = *(double *)v70;
  v9 = *(double *)&v70[1];
  v10 = *(double *)&v70[2];
  v11 = *(double *)&v70[3];
  v12 = sub_2414B3DE4();
  MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = class metadata base offset for PopoverViewController;
  v15 = *(_QWORD *)(v65 + class metadata base offset for PopoverViewController);
  v16 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v16);
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v64 - v19;
  *((_BYTE *)v4 + *(_QWORD *)(v14 + (*v7 & *v4) + 24)) = 1;
  *((_BYTE *)v4 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v7 & *v4) + 32)) = 1;
  v21 = (void **)((char *)v4 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v7 & *v4) + 40));
  *v21 = 0;
  v22 = (double *)((char *)v4 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v7 & *v4) + 48));
  v23 = *MEMORY[0x24BEBE158];
  v24 = *(double *)(MEMORY[0x24BEBE158] + 8);
  v25 = *(double *)(MEMORY[0x24BEBE158] + 16);
  v26 = *(double *)(MEMORY[0x24BEBE158] + 24);
  *v22 = *(double *)MEMORY[0x24BEBE158];
  v22[1] = v24;
  v22[2] = v25;
  v22[3] = v26;
  v27 = (_QWORD *)((char *)v4 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v7 & *v4) + 56));
  *v27 = 0;
  v27[1] = 0;
  swift_beginAccess();
  v28 = *v21;
  *v21 = a2;
  v29 = v4;
  v64 = a2;
  v30 = a2;

  sub_2412EAEA4(v66, (uint64_t)v71, (uint64_t *)&unk_257121690);
  if (v71[32] == 1)
  {
    v8 = v23;
    v9 = v24;
    v10 = v25;
    v11 = v26;
  }
  swift_beginAccess();
  *v22 = v8;
  v22[1] = v9;
  v22[2] = v10;
  v22[3] = v11;
  sub_2414B39D0();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v32 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v31(v20, v67, v15);
  v33 = (void *)sub_2414B39AC();
  *(_QWORD *)((char *)v29 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v32 & *v29) + 16)) = v33;
  v34 = v33;
  sub_2414B3988();

  MEMORY[0x242693DC0]();
  v35 = (id)sub_2414B39B8();
  sub_2414B3DD8();
  sub_2414B3994();
  v36 = v35;
  sub_2414B3988();
  objc_msgSend(v36, sel_setPreferredContentSize_);

  objc_msgSend(v36, sel_setModalPresentationStyle_, 7);
  v37 = objc_msgSend(v36, sel_popoverPresentationController);
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v37, sel_setDelegate_, v36);

  }
  v39 = objc_msgSend(v36, sel_popoverPresentationController);
  objc_msgSend(v39, sel_setSourceView_, v30);

  v40 = objc_msgSend(v36, sel_popoverPresentationController);
  if (v40)
  {
    v41 = v40;
    if (v64)
    {
      objc_msgSend(v30, sel_bounds);
      v43 = v42;
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v50 = (double *)((char *)v36
                     + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v32 & *v36) + 48));
      swift_beginAccess();
      v51 = UIEdgeInsetsInsetRect(v43, v45, v47, v49, *v50, v50[1]);
    }
    else
    {
      v53 = 0.0;
      v54 = 0.0;
      v51 = 0.0;
      v52 = 0.0;
    }
    objc_msgSend(v41, sel_setSourceRect_, v51, v52, v53, v54);

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384408);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_2414B8AC0;
  v56 = sub_2414B2D28();
  v57 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v55 + 32) = v56;
  *(_QWORD *)(v55 + 40) = v57;
  v58 = sub_2414B2D10();
  v59 = MEMORY[0x24BEBC608];
  *(_QWORD *)(v55 + 48) = v58;
  *(_QWORD *)(v55 + 56) = v59;
  v60 = sub_2414B2CF8();
  v61 = MEMORY[0x24BEBC378];
  *(_QWORD *)(v55 + 64) = v60;
  *(_QWORD *)(v55 + 72) = v61;
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v62 = v36;
  sub_2414B51DC();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v62;
}

id sub_24130B5A4()
{
  return sub_24130A834();
}

void _s11MediaCoreUI21PopoverViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _OWORD *v2;
  __int128 v3;
  _QWORD *v4;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  *((_BYTE *)v0 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 24)) = 1;
  *((_BYTE *)v0 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 32)) = 1;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 40)) = 0;
  v2 = (_OWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 48));
  v3 = *(_OWORD *)(MEMORY[0x24BEBE158] + 16);
  *v2 = *MEMORY[0x24BEBE158];
  v2[1] = v3;
  v4 = (_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for PopoverViewController + (*v1 & *v0) + 56));
  *v4 = 0;
  v4[1] = 0;

  sub_2414B5674();
  __break(1u);
}

uint64_t sub_24130B6C0()
{
  _QWORD *v0;
  void (**v1)(uint64_t);
  uint64_t result;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = (void (**)(uint64_t))((char *)v0
                                     + *(_QWORD *)(class metadata base offset for PopoverViewController
                                                 + (*MEMORY[0x24BEE4EA0] & *v0)
                                                 + 56));
  result = swift_beginAccess();
  v3 = *v1;
  if (*v1)
  {
    v4 = swift_retain();
    v3(v4);
    return sub_2412C9444((uint64_t)v3);
  }
  return result;
}

void sub_24130B748()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24130B774()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for PopoverViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverViewController);
}

uint64_t type metadata accessor for PopoverViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverViewModifier);
}

uint64_t sub_24130B7B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24130B7C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241309A60();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24130B7F4(char *a1)
{
  return sub_241309AC0(*a1);
}

uint64_t sub_24130B818()
{
  return 16;
}

__n128 sub_24130B824(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24130B830@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241309B84();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24130B85C(char *a1)
{
  return sub_241309BE4(*a1);
}

uint64_t sub_24130B880()
{
  return 16;
}

__n128 sub_24130B88C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24130B898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_241309CA8();
  *a1 = result;
  return result;
}

void sub_24130B8C0()
{
  swift_bridgeObjectRetain();
  sub_241309D68();
}

uint64_t sub_24130B8E8()
{
  return 16;
}

__n128 sub_24130B8F4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_24130B900@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_24130AF44();
  *a1 = v2;
  return v2;
}

void sub_24130B928(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_24130A010(v1);
}

uint64_t sub_24130B954()
{
  return 16;
}

__n128 sub_24130B960(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_24130B96C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_24130A2C0();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

void sub_24130B998(double *a1)
{
  sub_24130A324(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_24130B9C0()
{
  return 16;
}

__n128 sub_24130B9CC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24130B9E0()
{
  return 16;
}

__n128 sub_24130B9EC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24130B9F8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Popover.Coordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Popover.Coordinator);
}

ValueMetadata *type metadata accessor for PopoverHostingControllerModifier()
{
  return &type metadata for PopoverHostingControllerModifier;
}

uint64_t sub_24130BA6C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PopoverViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 64))();
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 72))();
}

uint64_t dispatch thunk of PopoverViewController.allowDismissal.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 80))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 88))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 96))();
}

uint64_t dispatch thunk of PopoverViewController.automaticallyAdjustsPreferredContentSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 104))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 112))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 120))();
}

uint64_t dispatch thunk of PopoverViewController.passthroughViews.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 128))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 136))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 144))();
}

uint64_t dispatch thunk of PopoverViewController.sourceView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 152))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 160))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 168))();
}

uint64_t dispatch thunk of PopoverViewController.sourceRectInsets.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 176))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 184))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 192))();
}

uint64_t dispatch thunk of PopoverViewController.didDismissPopoverHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 200))();
}

uint64_t dispatch thunk of PopoverViewController.__allocating_init(rootView:sourceView:sourceRectInsets:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t (*v5)(uint64_t, uint64_t, _OWORD *);
  __int128 v6;
  _OWORD v8[2];
  char v9;

  v4 = *(_BYTE *)(a3 + 32);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(class metadata base offset for PopoverViewController
                                                            + v3
                                                            + 208);
  v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  v9 = v4;
  return v5(a1, a2, v8);
}

uint64_t dispatch thunk of PopoverViewController.adaptivePresentationStyle(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 216))();
}

uint64_t dispatch thunk of PopoverViewController.popoverPresentationControllerShouldDismissPopover(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 224))();
}

uint64_t dispatch thunk of PopoverViewController.popoverPresentationControllerDidDismissPopover(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PopoverViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 232))();
}

unint64_t sub_24130BE7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571214D8;
  if (!qword_2571214D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121338);
    v2[0] = sub_2412C8FC4(&qword_2571214E0, (uint64_t *)&unk_257121348, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(qword_2571214E8, &qword_257121340, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571214D8);
  }
  return result;
}

uint64_t sub_24130BF18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for PopoverViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_2414B3514();
  v8[0] = v4;
  v8[1] = MEMORY[0x242695AE8](&unk_2414B8E48, v5);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v8);
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t type metadata accessor for Popover(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Popover);
}

void sub_24130BFE0()
{
  unint64_t v0;

  sub_24130C5D0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_24130C054(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B394C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 36);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24130C134(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_2414B394C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_24130C1A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B394C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

_QWORD *sub_24130C260(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_257121570);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2414B394C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_24130C33C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B394C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 36)] = *(_OWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_24130C3E4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_257121570);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B394C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 36)] = *(_OWORD *)&a2[*(int *)(a3 + 36)];
  swift_release();
  return a1;
}

uint64_t sub_24130C4B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24130C4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24130C53C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24130C548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AXPopoverContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXPopoverContainer);
}

void sub_24130C5D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257121600[0])
  {
    sub_2414B394C();
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, qword_257121600);
  }
}

uint64_t sub_24130C624(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(a1 + 56))
    swift_release();
  if (*(_QWORD *)(a1 + 72))
    swift_release();
  return swift_release();
}

uint64_t sub_24130C684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = v5;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v7;
  }
  v10 = *(_QWORD *)(a2 + 72);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_retain();
  return a1;
}

uint64_t sub_24130C75C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 64) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  v10 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v10;
      *(_QWORD *)(a1 + 80) = v12;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  swift_retain();
  swift_release();
LABEL_15:
  v13 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24130C8C4(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v5 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v5;
      *(_QWORD *)(a1 + 64) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_release();
LABEL_15:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_24130C9E0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24130CA28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_24130CA80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24130CAB4()
{
  return MEMORY[0x24BDF5560];
}

void sub_24130CAC0()
{
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24130CAD0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24130CB04()
{
  unint64_t result;

  result = qword_25437DBA0;
  if (!qword_25437DBA0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_25437DBA0);
  }
  return result;
}

uint64_t sub_24130CB48@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_241307E5C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24130CB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413081AC(v1 + 32, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24130CB64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(id *)(a1 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2412D2824(v2);
  sub_2412D2824(v3);
  swift_retain();
  return a1;
}

_QWORD *sub_24130CBF4(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v3 = (void *)a1[6];
  v2 = a1[7];
  v4 = a1[9];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_2412C9444(v2);
  sub_2412C9444(v4);
  swift_release();
  return a1;
}

uint64_t sub_24130CC84()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_24130CCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_24130CD0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_24130CD2C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24130CD98()
{
  uint64_t v0;

  sub_241309184(v0 + 16, *(id *)(v0 + 120));
}

uint64_t sub_24130CDA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413088B8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24130CDB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24130CDD4()
{
  uint64_t v0;

  return sub_241328114(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24130CDDC()
{
  return swift_deallocObject();
}

unint64_t sub_24130CDF0()
{
  unint64_t result;

  result = qword_2571216A0;
  if (!qword_2571216A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBB18, &type metadata for BubbleTipBackgroundKey);
    atomic_store(result, (unint64_t *)&qword_2571216A0);
  }
  return result;
}

uint64_t sub_24130CE34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];

  v4 = a1[1];
  v5 = type metadata accessor for PopoverViewModifier(255, *a1, v4, a4);
  MEMORY[0x242695AE8](&unk_2414B8E48, v5);
  v6 = sub_2414B3B08();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121340);
  v7 = sub_2414B3514();
  v18[0] = v4;
  v18[1] = sub_2412C8FC4(qword_2571214E8, &qword_257121340, MEMORY[0x24BDF1028]);
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v18);
  v11 = type metadata accessor for Popover(255, v7, v9, v10);
  v12 = sub_2414B3514();
  v17[0] = MEMORY[0x242695AE8](&unk_2414B8D80, v11);
  v17[1] = sub_24130CB04();
  MEMORY[0x242695AE8](v8, v12, v17);
  v13 = sub_2414B3A6C();
  v14 = sub_2414B3514();
  v16[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v6);
  v16[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v13);
  return MEMORY[0x242695AE8](v8, v14, v16);
}

uint64_t sub_24130CFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B2F50();
  v3 = sub_2414B3A90();
  v5[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v2);
  v5[1] = v1;
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v3, v5);
}

uint64_t sub_24130D038@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2413066C4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24130D084()
{
  sub_2413066C4();
  return sub_2414B3844();
}

uint64_t MCUINamespace<A>.debugPadding(_:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  _BYTE v7[8];
  double v8;
  uint64_t KeyPath;
  char v10;
  uint64_t v11;
  char v12;

  v7[0] = a1;
  v8 = a4;
  KeyPath = swift_getKeyPath();
  v10 = 0;
  v11 = swift_getKeyPath();
  v12 = 0;
  MEMORY[0x242693DC0](v7, *(_QWORD *)(a2 + 16), &type metadata for DebugPaddingModifier, a3);
  swift_release();
  return swift_release();
}

uint64_t MCUINamespace<A>.debugPadding(_:)(uint64_t a1, uint64_t a2, double a3)
{
  char v6;

  v6 = sub_2414B3E44();
  return MCUINamespace<A>.debugPadding(_:_:)(v6, a1, a2, a3);
}

uint64_t MCUINamespace<A>.debugPaddingBorderColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_24130D1DC()
{
  return sub_2413047B4((void (*)(void))sub_24130EA34);
}

uint64_t MCUINamespace<A>.debugPaddingOverlayColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2413046D4(a1, a2);
}

uint64_t sub_24130D1FC()
{
  return sub_2413047B4((void (*)(void))sub_24130EA78);
}

uint64_t sub_24130D210@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_24130EA78, a1);
}

uint64_t sub_24130D224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_24130EA78);
}

uint64_t sub_24130D248@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_24130EA34, a1);
}

uint64_t sub_24130D25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24130481C(a1, a2, a3, a4, (void (*)(void))sub_24130EA34);
}

uint64_t sub_24130D280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_24130D2D4();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24130D2D4()
{
  unint64_t result;

  result = qword_257121720;
  if (!qword_257121720)
  {
    result = MEMORY[0x242695AE8](&unk_2414B8F38, &type metadata for DebugPaddingModifier);
    atomic_store(result, (unint64_t *)&qword_257121720);
  }
  return result;
}

uint64_t sub_24130D318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257120C10);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8FC4(&qword_257120C18, &qword_257120C10, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for DebugPaddingModifier()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DebugPaddingModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugPaddingModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugPaddingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPaddingModifier()
{
  return &type metadata for DebugPaddingModifier;
}

uint64_t sub_24130D5B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24130D5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double (*v36)@<D0>(uint64_t@<X8>);
  double (*v37)@<D0>(uint64_t@<X8>);
  _OWORD *v38;
  __int128 v39;
  double (**v40)@<D0>(uint64_t@<X8>);
  uint64_t v41;
  uint64_t (*v42)@<X0>(uint64_t@<X8>);
  uint64_t (*v43)@<X0>(uint64_t@<X8>);
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t (**v47)@<X0>(uint64_t@<X8>);
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v56 = a1;
  v61 = a2;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121728);
  MEMORY[0x24BDAC7A8](v55);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121730);
  MEMORY[0x24BDAC7A8](v57);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121738);
  MEMORY[0x24BDAC7A8](v58);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121740);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B4A44();
  v53 = v11;
  v54 = v10;
  v12 = sub_2414B4648();
  v13 = *(_BYTE *)(v2 + 40);
  v14 = swift_retain();
  v15 = sub_2412E4048(v14, v13);
  swift_release();
  sub_2414B304C();
  v16 = v62;
  v17 = v64;
  v18 = v65;
  v19 = v66;
  v20 = sub_2414B4A44();
  v22 = v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121748);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v4, v56, v23);
  v24 = &v4[*(int *)(v55 + 36)];
  *(_QWORD *)v24 = v12;
  *((double *)v24 + 1) = v16 * 0.5;
  *((double *)v24 + 2) = v16;
  *((_QWORD *)v24 + 3) = v63;
  *((_QWORD *)v24 + 4) = v17;
  *((_QWORD *)v24 + 5) = v18;
  *((_QWORD *)v24 + 6) = v19;
  *((_QWORD *)v24 + 7) = v15;
  *((_WORD *)v24 + 32) = 256;
  *((_QWORD *)v24 + 9) = v20;
  *((_QWORD *)v24 + 10) = v22;
  v24[88] = 0;
  v25 = v53;
  *((_QWORD *)v24 + 12) = v54;
  *((_QWORD *)v24 + 13) = v25;
  LOBYTE(v12) = *(_BYTE *)v2;
  sub_2414B2F20();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2412DC3FC((uint64_t)v4, (uint64_t)v6, &qword_257121728);
  v34 = &v6[*(int *)(v57 + 36)];
  *v34 = v12;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_2412CBE78((uint64_t)v4, &qword_257121728);
  v35 = sub_2414B4A44();
  v37 = v36;
  v67 = *(_QWORD *)(v2 + 16);
  v68 = *(_BYTE *)(v2 + 24);
  v38 = (_OWORD *)swift_allocObject();
  v39 = *(_OWORD *)(v2 + 16);
  v38[1] = *(_OWORD *)v2;
  v38[2] = v39;
  *(_OWORD *)((char *)v38 + 41) = *(_OWORD *)(v2 + 25);
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v8, &qword_257121730);
  v40 = (double (**)@<D0>(uint64_t@<X8>))&v8[*(int *)(v58 + 36)];
  *v40 = sub_24130E938;
  v40[1] = (double (*)@<D0>(uint64_t@<X8>))v38;
  v40[2] = (double (*)@<D0>(uint64_t@<X8>))v35;
  v40[3] = v37;
  swift_retain();
  sub_241304458((uint64_t)&v67);
  sub_2412CBE78((uint64_t)v6, &qword_257121730);
  v41 = sub_2414B4A44();
  v43 = v42;
  v44 = (_OWORD *)swift_allocObject();
  v45 = *(_OWORD *)(v2 + 16);
  v44[1] = *(_OWORD *)v2;
  v44[2] = v45;
  *(_OWORD *)((char *)v44 + 41) = *(_OWORD *)(v2 + 25);
  v46 = v59;
  sub_2412DC3FC((uint64_t)v8, v59, &qword_257121738);
  v47 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v46 + *(int *)(v60 + 36));
  *v47 = sub_24130E944;
  v47[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v44;
  v47[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v41;
  v47[3] = v43;
  swift_retain();
  sub_241304458((uint64_t)&v67);
  sub_2412CBE78((uint64_t)v8, &qword_257121738);
  KeyPath = swift_getKeyPath();
  v49 = v61;
  sub_2412DC3FC(v46, v61, &qword_257121740);
  v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121750) + 36);
  *(_QWORD *)v50 = KeyPath;
  *(_BYTE *)(v50 + 8) = 1;
  return sub_2412CBE78(v46, &qword_257121740);
}

double sub_24130D9C0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  double result;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[11];
  __int128 v107;
  _OWORD v108[11];
  __int128 v109;
  _OWORD v110[12];
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _BYTE v126[200];
  _BYTE v127[200];
  _BYTE v128[176];
  uint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  __int128 v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE v158[184];

  v3 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  v6 = swift_getKeyPath();
  sub_2414B4A44();
  sub_2414B31B4();
  v104 = v129;
  v103 = v130;
  v102 = v131;
  v101 = v132;
  v99 = *((_QWORD *)&v133 + 1);
  v100 = v133;
  v96 = sub_2414B4648();
  v7 = sub_2414B4A50();
  v94 = v8;
  v95 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  v9 = sub_2414B3E38();
  sub_2414B3E74();
  v105 = v5;
  if (sub_2414B3E74() == v9
    || (v10 = sub_2414B3E68(), sub_2414B3E74(), sub_2414B3E74() == v10))
  {
    v11 = sub_2414B4648();
    sub_2414B4A44();
    sub_2414B31B4();
    LOBYTE(v110[0]) = v135;
    v127[0] = v137;
    v126[0] = 0;
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    v128[0] = v130;
    LOBYTE(v152) = v132;
    *(_QWORD *)&v113 = v11;
    *((_QWORD *)&v113 + 1) = v134;
    LOBYTE(v114) = v135;
    *((_QWORD *)&v114 + 1) = v136;
    LOBYTE(v115) = v137;
    *((_QWORD *)&v115 + 1) = v138;
    *(_QWORD *)&v116 = v139;
    *((_QWORD *)&v116 + 1) = v3;
    *(_QWORD *)&v117 = KeyPath;
    BYTE8(v117) = 0;
    *(_QWORD *)&v118 = v5;
    BYTE8(v118) = 0;
    *(_QWORD *)&v119 = v6;
    BYTE8(v119) = 0;
    *(_QWORD *)&v120 = v129;
    BYTE8(v120) = v130;
    *(_QWORD *)&v121 = v131;
    BYTE8(v121) = v132;
    v122 = v133;
    *(_QWORD *)&v123 = sub_2414B4A44();
    *((_QWORD *)&v123 + 1) = v12;
    CGSizeMake(&v113, v12);
    swift_retain();
    swift_retain();
    sub_2412C7080(v6, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_24130E9F0(&v113);
  }
  sub_2412EAEA4((uint64_t)&v113, (uint64_t)v158, &qword_257121758);
  swift_release();
  v13 = sub_2414B4A5C();
  v92 = v14;
  v93 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = sub_2414B3E38();
  sub_2414B3E74();
  if (sub_2414B3E74() == v15
    || (v16 = sub_2414B3E80(), sub_2414B3E74(), sub_2414B3E74() == v16))
  {
    v17 = sub_2414B4648();
    sub_2414B4A44();
    sub_2414B31B4();
    v18 = v140;
    v19 = v141;
    v20 = v142;
    v21 = v143;
    v22 = v144;
    v23 = v145;
    v24 = sub_2414B4A44();
    LOBYTE(v110[0]) = v19;
    v127[0] = v21;
    v126[0] = 0;
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    LOBYTE(v152) = v103;
    LOBYTE(v146) = v101;
    *(_QWORD *)&v113 = v17;
    *((_QWORD *)&v113 + 1) = v18;
    LOBYTE(v114) = v19;
    *((_QWORD *)&v114 + 1) = v20;
    LOBYTE(v115) = v21;
    *((_QWORD *)&v115 + 1) = v22;
    *(_QWORD *)&v116 = v23;
    *((_QWORD *)&v116 + 1) = v3;
    *(_QWORD *)&v117 = KeyPath;
    BYTE8(v117) = 0;
    *(_QWORD *)&v118 = v105;
    BYTE8(v118) = 0;
    *(_QWORD *)&v119 = v6;
    BYTE8(v119) = 0;
    *(_QWORD *)&v120 = v104;
    BYTE8(v120) = v103;
    *(_QWORD *)&v121 = v102;
    BYTE8(v121) = v101;
    *(_QWORD *)&v122 = v100;
    *((_QWORD *)&v122 + 1) = v99;
    *(_QWORD *)&v123 = v24;
    *((_QWORD *)&v123 + 1) = v25;
    CGSizeMake(&v113, v25);
    swift_retain();
    swift_retain();
    sub_2412C7080(v6, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_24130E9F0(&v113);
  }
  sub_2412EAEA4((uint64_t)&v113, (uint64_t)v128, &qword_257121758);
  swift_release();
  v90 = sub_2414B4A2C();
  v91 = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  v27 = sub_2414B3E8C();
  sub_2414B3E74();
  if (sub_2414B3E74() == v27
    || (v28 = sub_2414B3E50(), sub_2414B3E74(), sub_2414B3E74() == v28))
  {
    v88 = sub_2414B4648();
    sub_2414B4A44();
    sub_2414B31B4();
    v29 = v146;
    v30 = v147;
    v31 = v148;
    v32 = v149;
    v33 = KeyPath;
    v34 = v150;
    v35 = v6;
    v36 = v151;
    v86 = sub_2414B4A44();
    v38 = v37;
    sub_2414B4B64();
    LOBYTE(v108[0]) = 0;
    LOBYTE(v106[0]) = 0;
    LOBYTE(v152) = 0;
    LOBYTE(v110[0]) = v30;
    v126[0] = v32;
    *(_QWORD *)&v113 = v88;
    *((_QWORD *)&v113 + 1) = v29;
    LOBYTE(v114) = v30;
    *((_QWORD *)&v114 + 1) = v31;
    LOBYTE(v115) = v32;
    *((_QWORD *)&v115 + 1) = v34;
    KeyPath = v33;
    *(_QWORD *)&v116 = v36;
    v6 = v35;
    *((_QWORD *)&v116 + 1) = v3;
    *(_QWORD *)&v117 = v33;
    BYTE8(v117) = 0;
    *(_QWORD *)&v118 = v105;
    BYTE8(v118) = 0;
    *(_QWORD *)&v119 = v35;
    BYTE8(v119) = 0;
    *(_QWORD *)&v120 = v104;
    BYTE8(v120) = v103;
    *(_QWORD *)&v121 = v102;
    BYTE8(v121) = v101;
    *(_QWORD *)&v122 = v100;
    *((_QWORD *)&v122 + 1) = v99;
    *(_QWORD *)&v123 = 0xBFF921FB54442D18;
    *((_QWORD *)&v123 + 1) = v39;
    *(_QWORD *)&v124 = v40;
    *((_QWORD *)&v124 + 1) = v86;
    *(_QWORD *)&v125 = v38;
    CGSizeMake(&v113, v41);
    swift_retain();
    swift_retain();
    sub_2412C7080(v35, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_24130EA10((uint64_t)&v113);
  }
  sub_2412EAEA4((uint64_t)&v113, (uint64_t)v127, &qword_257121760);
  swift_release();
  v42 = sub_2414B4A38();
  v44 = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  v45 = sub_2414B3E8C();
  sub_2414B3E74();
  if (sub_2414B3E74() == v45
    || (v46 = sub_2414B3E5C(), sub_2414B3E74(), sub_2414B3E74() == v46))
  {
    v97 = sub_2414B4648();
    sub_2414B4A44();
    sub_2414B31B4();
    v47 = KeyPath;
    v48 = v152;
    v49 = v153;
    v50 = v154;
    v51 = v6;
    v52 = v155;
    v98 = v42;
    v53 = v44;
    v54 = v156;
    v55 = v157;
    v56 = sub_2414B4A44();
    v87 = v57;
    v89 = v56;
    sub_2414B4B64();
    LOBYTE(v106[0]) = 0;
    LOBYTE(v110[0]) = v49;
    LOBYTE(v108[0]) = v52;
    *(_QWORD *)&v113 = v97;
    *((_QWORD *)&v113 + 1) = v48;
    LOBYTE(v114) = v49;
    *((_QWORD *)&v114 + 1) = v50;
    LOBYTE(v115) = v52;
    *((_QWORD *)&v115 + 1) = v54;
    v44 = v53;
    *(_QWORD *)&v116 = v55;
    *((_QWORD *)&v116 + 1) = v3;
    *(_QWORD *)&v117 = v47;
    BYTE8(v117) = 0;
    *(_QWORD *)&v118 = v105;
    BYTE8(v118) = 0;
    *(_QWORD *)&v119 = v51;
    BYTE8(v119) = 0;
    *(_QWORD *)&v120 = v104;
    BYTE8(v120) = v103;
    *(_QWORD *)&v121 = v102;
    BYTE8(v121) = v101;
    *(_QWORD *)&v122 = v100;
    v42 = v98;
    *((_QWORD *)&v122 + 1) = v99;
    *(_QWORD *)&v123 = 0xBFF921FB54442D18;
    *((_QWORD *)&v123 + 1) = v58;
    *(_QWORD *)&v124 = v59;
    *((_QWORD *)&v124 + 1) = v89;
    *(_QWORD *)&v125 = v87;
    CGSizeMake(&v113, v60);
    swift_retain();
    swift_retain();
    sub_2412C7080(v51, 0);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    sub_24130EA10((uint64_t)&v113);
  }
  sub_2412EAEA4((uint64_t)&v113, (uint64_t)v126, &qword_257121760);
  sub_2412EAEA4((uint64_t)v158, (uint64_t)v106, &qword_257121758);
  *(_QWORD *)&v107 = v95;
  *((_QWORD *)&v107 + 1) = v94;
  v61 = v106[9];
  *(_OWORD *)(a2 + 136) = v106[8];
  *(_OWORD *)(a2 + 152) = v61;
  v62 = v107;
  *(_OWORD *)(a2 + 168) = v106[10];
  v63 = v106[5];
  *(_OWORD *)(a2 + 72) = v106[4];
  *(_OWORD *)(a2 + 88) = v63;
  v64 = v106[7];
  *(_OWORD *)(a2 + 104) = v106[6];
  *(_OWORD *)(a2 + 120) = v64;
  v65 = v106[1];
  *(_OWORD *)(a2 + 8) = v106[0];
  *(_OWORD *)(a2 + 24) = v65;
  v66 = v106[3];
  *(_OWORD *)(a2 + 40) = v106[2];
  *(_OWORD *)(a2 + 56) = v66;
  *(_OWORD *)(a2 + 184) = v62;
  sub_2412EAEA4((uint64_t)v128, (uint64_t)v108, &qword_257121758);
  *(_QWORD *)&v109 = v93;
  *((_QWORD *)&v109 + 1) = v92;
  v67 = v108[9];
  *(_OWORD *)(a2 + 328) = v108[8];
  *(_OWORD *)(a2 + 344) = v67;
  v68 = v108[5];
  *(_OWORD *)(a2 + 264) = v108[4];
  *(_OWORD *)(a2 + 280) = v68;
  v69 = v108[7];
  *(_OWORD *)(a2 + 296) = v108[6];
  *(_OWORD *)(a2 + 312) = v69;
  v70 = v108[1];
  *(_OWORD *)(a2 + 200) = v108[0];
  *(_OWORD *)(a2 + 216) = v70;
  v71 = v108[3];
  *(_OWORD *)(a2 + 232) = v108[2];
  *(_OWORD *)(a2 + 248) = v71;
  v72 = v109;
  *(_OWORD *)(a2 + 360) = v108[10];
  *(_OWORD *)(a2 + 376) = v72;
  sub_2412EAEA4((uint64_t)v127, (uint64_t)v110, &qword_257121760);
  *((_QWORD *)&v111 + 1) = v90;
  v112 = v91;
  *(_QWORD *)(a2 + 600) = v91;
  v73 = v110[11];
  *(_OWORD *)(a2 + 552) = v110[10];
  *(_OWORD *)(a2 + 568) = v73;
  v74 = v110[7];
  *(_OWORD *)(a2 + 488) = v110[6];
  *(_OWORD *)(a2 + 504) = v74;
  v75 = v110[9];
  *(_OWORD *)(a2 + 520) = v110[8];
  *(_OWORD *)(a2 + 536) = v75;
  v76 = v110[3];
  *(_OWORD *)(a2 + 424) = v110[2];
  *(_OWORD *)(a2 + 440) = v76;
  v77 = v110[5];
  *(_OWORD *)(a2 + 456) = v110[4];
  *(_OWORD *)(a2 + 472) = v77;
  v78 = v110[1];
  *(_OWORD *)(a2 + 392) = v110[0];
  *(_OWORD *)(a2 + 408) = v78;
  *(_OWORD *)(a2 + 584) = v111;
  swift_release();
  swift_release();
  swift_release_n();
  sub_2412EAEA4((uint64_t)v126, (uint64_t)&v113, &qword_257121760);
  *((_QWORD *)&v125 + 1) = v42;
  *(_QWORD *)(a2 + 816) = v44;
  v79 = v124;
  *(_OWORD *)(a2 + 768) = v123;
  *(_OWORD *)(a2 + 784) = v79;
  v80 = v120;
  *(_OWORD *)(a2 + 704) = v119;
  *(_OWORD *)(a2 + 720) = v80;
  v81 = v122;
  *(_OWORD *)(a2 + 736) = v121;
  *(_OWORD *)(a2 + 752) = v81;
  v82 = v116;
  *(_OWORD *)(a2 + 640) = v115;
  *(_OWORD *)(a2 + 656) = v82;
  v83 = v118;
  *(_OWORD *)(a2 + 672) = v117;
  *(_OWORD *)(a2 + 688) = v83;
  v84 = v114;
  *(_OWORD *)(a2 + 608) = v113;
  *(_OWORD *)(a2 + 624) = v84;
  result = *(double *)&v125;
  *(_OWORD *)(a2 + 800) = v125;
  *(_QWORD *)a2 = v96;
  *(_BYTE *)(a2 + 824) = 0;
  return result;
}

uint64_t sub_24130E45C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  uint64_t result;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  unsigned __int8 v85;
  __int128 v86;

  v61 = sub_2414B4648();
  v4 = sub_2414B4A50();
  v62 = v5;
  v63 = v4;
  v6 = sub_2414B3E38();
  sub_2414B3E74();
  if (sub_2414B3E74() == v6
    || (v7 = sub_2414B3E68(), sub_2414B3E74(), sub_2414B3E74() == v7))
  {
    v8 = *(_BYTE *)(a1 + 24);
    v9 = swift_retain();
    v60 = sub_2412E4048(v9, v8);
    swift_release();
    sub_2414B4A44();
    sub_2414B31B4();
    v58 = v65;
    v59 = v64;
    v56 = v67;
    v57 = v66;
    v54 = v69;
    v55 = v68;
  }
  else
  {
    v59 = 0;
    v60 = 0;
    v57 = 0;
    v58 = 0;
    v55 = 0;
    v56 = 0;
    v54 = 0;
  }
  v10 = sub_2414B4A5C();
  v52 = v11;
  v53 = v10;
  v12 = sub_2414B3E38();
  sub_2414B3E74();
  if (sub_2414B3E74() == v12
    || (v13 = sub_2414B3E80(), sub_2414B3E74(), sub_2414B3E74() == v13))
  {
    v14 = *(_BYTE *)(a1 + 24);
    v15 = swift_retain();
    v51 = sub_2412E4048(v15, v14);
    swift_release();
    sub_2414B4A44();
    sub_2414B31B4();
    v49 = v71;
    v50 = v70;
    v47 = v73;
    v48 = v72;
    v45 = v75;
    v46 = v74;
  }
  else
  {
    v50 = 0;
    v51 = 0;
    v48 = 0;
    v49 = 0;
    v46 = 0;
    v47 = 0;
    v45 = 0;
  }
  v16 = sub_2414B4A2C();
  v43 = v17;
  v44 = v16;
  v18 = sub_2414B3E8C();
  sub_2414B3E74();
  if (sub_2414B3E74() == v18
    || (v19 = sub_2414B3E50(), sub_2414B3E74(), sub_2414B3E74() == v19))
  {
    v20 = *(_BYTE *)(a1 + 24);
    v21 = swift_retain();
    v42 = sub_2412E4048(v21, v20);
    swift_release();
    sub_2414B4A44();
    sub_2414B31B4();
    v40 = v77;
    v41 = v76;
    v22 = v78;
    v23 = v79;
    v25 = v80;
    v24 = v81;
  }
  else
  {
    v41 = 0;
    v42 = 0;
    v40 = 0;
    v22 = 0;
    v23 = 0;
    v25 = 0;
    v24 = 0;
  }
  v26 = sub_2414B4A38();
  v28 = v27;
  v29 = sub_2414B3E8C();
  sub_2414B3E74();
  if (sub_2414B3E74() == v29
    || (v30 = sub_2414B3E5C(), sub_2414B3E74(), result = sub_2414B3E74(), result == v30))
  {
    v32 = *(_BYTE *)(a1 + 24);
    v33 = swift_retain();
    v34 = sub_2412E4048(v33, v32);
    swift_release();
    sub_2414B4A44();
    result = sub_2414B31B4();
    v35 = v82;
    v36 = v83;
    v37 = v84;
    v38 = v85;
    v39 = v86;
  }
  else
  {
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0uLL;
  }
  *(_QWORD *)a2 = v61;
  *(_QWORD *)(a2 + 8) = v60;
  *(_QWORD *)(a2 + 16) = v59;
  *(_QWORD *)(a2 + 24) = v58;
  *(_QWORD *)(a2 + 32) = v57;
  *(_QWORD *)(a2 + 40) = v56;
  *(_QWORD *)(a2 + 48) = v55;
  *(_QWORD *)(a2 + 56) = v54;
  *(_QWORD *)(a2 + 64) = v63;
  *(_QWORD *)(a2 + 72) = v62;
  *(_QWORD *)(a2 + 80) = v51;
  *(_QWORD *)(a2 + 88) = v50;
  *(_QWORD *)(a2 + 96) = v49;
  *(_QWORD *)(a2 + 104) = v48;
  *(_QWORD *)(a2 + 112) = v47;
  *(_QWORD *)(a2 + 120) = v46;
  *(_QWORD *)(a2 + 128) = v45;
  *(_QWORD *)(a2 + 136) = v53;
  *(_QWORD *)(a2 + 144) = v52;
  *(_QWORD *)(a2 + 152) = v42;
  *(_QWORD *)(a2 + 160) = v41;
  *(_QWORD *)(a2 + 168) = v40;
  *(_QWORD *)(a2 + 176) = v22;
  *(_QWORD *)(a2 + 184) = v23;
  *(_QWORD *)(a2 + 192) = v25;
  *(_QWORD *)(a2 + 200) = v24;
  *(_QWORD *)(a2 + 208) = v44;
  *(_QWORD *)(a2 + 216) = v43;
  *(_QWORD *)(a2 + 224) = v34;
  *(_QWORD *)(a2 + 232) = v35;
  *(_QWORD *)(a2 + 240) = v36;
  *(_QWORD *)(a2 + 248) = v37;
  *(_QWORD *)(a2 + 256) = v38;
  *(_OWORD *)(a2 + 264) = v39;
  *(_QWORD *)(a2 + 280) = v26;
  *(_QWORD *)(a2 + 288) = v28;
  *(_BYTE *)(a2 + 296) = 0;
  return result;
}

uint64_t sub_24130E88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24130D5C0(a1, a2);
}

uint64_t sub_24130E8C4()
{
  uint64_t result;

  result = sub_2414B4648();
  qword_257121710 = result;
  return result;
}

uint64_t sub_24130E8E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(&qword_2571205B8, &qword_257121710, a1);
}

uint64_t sub_24130E8FC()
{
  uint64_t result;

  result = sub_2414B4648();
  qword_257121718 = result;
  return result;
}

uint64_t sub_24130E918@<X0>(_QWORD *a1@<X8>)
{
  return sub_241305AB8(qword_2571205C0, &qword_257121718, a1);
}

double sub_24130E938@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24130D9C0(v1 + 16, a1);
}

uint64_t sub_24130E944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24130E45C(v1 + 16, a1);
}

uint64_t sub_24130E94C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2413066C4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24130E998()
{
  sub_2413066C4();
  return sub_2414B3844();
}

double sub_24130E9F0(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double sub_24130EA10(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 192) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_24130EA34()
{
  unint64_t result;

  result = qword_257121768;
  if (!qword_257121768)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9058, &type metadata for BorderColorKey);
    atomic_store(result, (unint64_t *)&qword_257121768);
  }
  return result;
}

unint64_t sub_24130EA78()
{
  unint64_t result;

  result = qword_257121770;
  if (!qword_257121770)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9020, &type metadata for OverlayColorKey);
    atomic_store(result, (unint64_t *)&qword_257121770);
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayColorKey()
{
  return &type metadata for OverlayColorKey;
}

ValueMetadata *type metadata accessor for BorderColorKey()
{
  return &type metadata for BorderColorKey;
}

unint64_t sub_24130EAE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121778;
  if (!qword_257121778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121750);
    v2[0] = sub_24130EB64();
    v2[1] = sub_2412C8FC4(&qword_2571217D8, &qword_2571217E0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121778);
  }
  return result;
}

unint64_t sub_24130EB64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121780;
  if (!qword_257121780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121740);
    v2[0] = sub_24130EBE8();
    v2[1] = sub_2412C8FC4(&qword_2571217C8, &qword_2571217D0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121780);
  }
  return result;
}

unint64_t sub_24130EBE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121788;
  if (!qword_257121788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121738);
    v2[0] = sub_24130EC6C();
    v2[1] = sub_2412C8FC4(&qword_2571217B8, &qword_2571217C0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121788);
  }
  return result;
}

unint64_t sub_24130EC6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121790;
  if (!qword_257121790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121730);
    v2[0] = sub_24130ECD8();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121790);
  }
  return result;
}

unint64_t sub_24130ECD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121798;
  if (!qword_257121798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121728);
    v2[0] = sub_2412C8FC4(&qword_2571217A0, &qword_257121748, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_2571217A8, &qword_2571217B0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121798);
  }
  return result;
}

BOOL static NowPlayingViewModel.PlayerStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NowPlayingViewModel.PlayerStyle.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t NowPlayingViewModel.PlayerStyle.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_24130EDFC()
{
  sub_2412D42A4();
  return sub_2414B3838();
}

ValueMetadata *type metadata accessor for PlayerStyleKey()
{
  return &type metadata for PlayerStyleKey;
}

uint64_t assignWithTake for OpacityModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpacityModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpacityModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

double sub_24130EF20@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  double v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = v5;
  return result;
}

uint64_t WaveformState.SamplingMode.ValueProvider.__allocating_init(value:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543827A0);
  sub_2414B2E0C();
  swift_endAccess();
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.init(value:)()
{
  uint64_t v0;

  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543827A0);
  sub_2414B2E0C();
  swift_endAccess();
  return v0;
}

uint64_t sub_24130F0F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t WaveformState.SamplingMode.ValueProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543827D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WaveformState.SamplingMode.ValueProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCOO11MediaCoreUI13WaveformState12SamplingMode13ValueProvider__value;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543827D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24130F22C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for WaveformState.SamplingMode.ValueProvider();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

double sub_24130F268@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  double v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_24130F2F0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

unint64_t destroy for WaveformState(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 2 < 0 && result >= 2)
    return swift_release();
  return result;
}

unint64_t *_s11MediaCoreUI13WaveformStateOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  LODWORD(v4) = -1;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 2 < 0 && v3 >= 2)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for WaveformState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if (*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = v5 - 2;
  v7 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = v4 - 2;
  if ((v6 & 0x80000000) == 0)
  {
    if (v8 < 0 && v7 >= 2)
      v7 = swift_retain();
LABEL_15:
    *a1 = v7;
    return a1;
  }
  if ((v8 & 0x80000000) == 0)
  {
    if (v3 >= 2)
    {
      swift_release();
      v7 = *a2;
    }
    goto LABEL_15;
  }
  if (v3 < 2)
  {
    if (v7 >= 2)
    {
      *a1 = v7;
      swift_retain();
      return a1;
    }
    goto LABEL_15;
  }
  if (v7 >= 2)
  {
    *a1 = v7;
    swift_retain();
    swift_release();
  }
  else
  {
    swift_release();
    *a1 = *a2;
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for WaveformState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v7;

  v3 = *a1;
  v4 = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = v3;
  v5 = *a2;
  if (v4 - 2 >= 0)
    goto LABEL_4;
  LODWORD(v7) = -1;
  if (v5 < 0xFFFFFFFF)
    v7 = *a2;
  if ((int)v7 - 2 < 0)
  {
    if (v3 >= 2)
    {
      if (v5 >= 2)
      {
        *a1 = v5;
        swift_release();
        return a1;
      }
      goto LABEL_13;
    }
  }
  else if (v3 >= 2)
  {
LABEL_13:
    swift_release();
  }
LABEL_4:
  *a1 = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WaveformState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

uint64_t sub_24130F618(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 2;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_24130F63C(_QWORD *result, unsigned int a2)
{
  int v2;

  if (a2 > 0x7FFFFFFD)
  {
    v2 = -2147483646;
  }
  else
  {
    if (!a2)
      return result;
    v2 = 1;
  }
  *result = v2 + a2;
  return result;
}

ValueMetadata *type metadata accessor for WaveformState()
{
  return &type metadata for WaveformState;
}

uint64_t *initializeBufferWithCopyOfBuffer for WaveformState.SamplingMode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for WaveformState.SamplingMode(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_release();
  return result;
}

unint64_t *assignWithCopy for WaveformState.SamplingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_retain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for WaveformState.SamplingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformState.SamplingMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WaveformState.SamplingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_24130F86C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24130F884(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for WaveformState.SamplingMode()
{
  return &type metadata for WaveformState.SamplingMode;
}

uint64_t sub_24130F8B4()
{
  return type metadata accessor for WaveformState.SamplingMode.ValueProvider();
}

uint64_t type metadata accessor for WaveformState.SamplingMode.ValueProvider()
{
  uint64_t result;

  result = qword_254382528;
  if (!qword_254382528)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24130F8F8()
{
  unint64_t v0;

  sub_24130F984();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for WaveformState.SamplingMode.ValueProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of WaveformState.SamplingMode.ValueProvider.update(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

void sub_24130F984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543827E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543827A0);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543827E0);
  }
}

uint64_t sub_24130F9E0()
{
  return 0;
}

uint64_t sub_24130F9E8(uint64_t a1, unsigned int a2, unint64_t a3, unint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v26 = sub_2414B2CA4();
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828E0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1, v14, v17);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v19, v18, v14);
  type metadata accessor for AudioTapQueueProcessor();
  swift_allocObject();
  v21 = sub_24138A4B4(a2, a3, a4, (OpaqueAudioQueue *)sub_24130FEBC, v20, a5);
  swift_retain();
  sub_2414B4FF0();
  v22 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v21;
  sub_2413EE440((uint64_t)v13, (uint64_t)&unk_2571217F0, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_24130FDAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543828E0);
  sub_2414B4FFC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24130FE58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828E0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24130FEBC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543828E0);
  return sub_24130FDAC(a1);
}

uint64_t sub_24130FEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4FE4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_2412CBE78((uint64_t)v5, (uint64_t *)&unk_254384360);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_2414B4F90();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_257121800;
  *(_QWORD *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_2413100D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_2413100E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OpaqueAudioQueue *v3;

  v1 = *(_QWORD *)(v0 + 96) + 144;
  swift_beginAccess();
  sub_241310310(v1, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  sub_2412CBE78(v0 + 16, &qword_25437D280);
  if (v2)
  {
    v3 = *(OpaqueAudioQueue **)(*(_QWORD *)(v0 + 96) + 112);
    if (v3)
      AudioQueueStop(v3, 1u);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_beginAccess();
    sub_241310358(v0 + 16, v1);
    swift_endAccess();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413101A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch();
}

uint64_t sub_2413101BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OpaqueAudioQueue *v4;

  v1 = *(_QWORD *)(v0 + 128) + 144;
  swift_beginAccess();
  sub_241310310(v1, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  sub_2412CBE78(v0 + 16, &qword_25437D280);
  if (!v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v4 = *(OpaqueAudioQueue **)(v3 + 112);
    if (v4)
    {
      AudioQueueStart(v4, 0);
      v3 = *(_QWORD *)(v0 + 128);
    }
    *(_QWORD *)(v0 + 40) = type metadata accessor for AudioTapQueueProcessor();
    *(_QWORD *)(v0 + 16) = v3;
    sub_2412FFB60(v0 + 16, v0 + 48);
    swift_beginAccess();
    swift_retain();
    sub_241310358(v0 + 48, v1);
    swift_endAccess();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413102A4(uint64_t a1)
{
  uint64_t v1;

  return sub_24130FEFC(a1, v1);
}

uint64_t sub_2413102B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310C28;
  v3[16] = v2;
  return swift_task_switch();
}

uint64_t sub_241310310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437D280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241310358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437D280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413103D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310430;
  v3[12] = v2;
  return swift_task_switch();
}

uint64_t sub_241310430()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241310478()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24131049C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_241310430;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257124040 + dword_257124040))(a1, v4);
}

uint64_t sub_24131050C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD v46[2];
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t);
  double v52;
  unint64_t v53;
  uint64_t v54;

  v4 = sub_2414B2CA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)v46 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v46 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v46 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v46 - v16;
  if ((a1 & 0x100000000) != 0)
    a1 = getpid();
  v18 = log2(48000.0 / (a2 + COERCE_DOUBLE(1)));
  v19 = exp2(ceil(v18));
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v19 < 9.22337204e18)
  {
    v47 = v7;
    if (qword_2543827B0 == -1)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_7:
  v20 = __swift_project_value_buffer(v4, (uint64_t)qword_25438E848);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v51(v17, v20, v4);
  v21 = sub_2414B2C8C();
  v22 = sub_2414B51B8();
  v23 = os_log_type_enabled(v21, v22);
  v48 = a1;
  if (v23)
  {
    v24 = a1;
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v54 = v26;
    *(_DWORD *)v25 = 134349314;
    *(_QWORD *)&v52 = v24;
    sub_2414B541C();
    *(_WORD *)(v25 + 12) = 2082;
    v46[1] = v25 + 14;
    v52 = 0.0;
    v53 = 0xE000000000000000;
    sub_2414B5578();
    sub_2414B4DF8();
    sub_2414B5098();
    sub_2414B4DF8();
    v52 = COERCE_DOUBLE(sub_2412E4890(*(uint64_t *)&v52, v53, &v54));
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v21, v22, "AudioTapSetup initialized for pid: %{public}ld, framing: %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v26, -1, -1);
    MEMORY[0x242695BD8](v25, -1, -1);
  }

  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v17, v4);
  v51(v14, v20, v4);
  sub_24130F9E0();
  sub_24130F9E0();
  v28 = sub_2414B2C8C();
  v29 = sub_2414B51B8();
  v30 = os_log_type_enabled(v28, v29);
  v31 = v47;
  if (v30)
  {
    v32 = swift_slowAlloc();
    *(_DWORD *)v32 = 68157952;
    LODWORD(v52) = 0;
    sub_2414B541C();
    *(_WORD *)(v32 + 8) = 2050;
    v52 = 48000.0;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v28, v29, "AudioTapSetup sampleRate: %{public}.*fHz", (uint8_t *)v32, 0x12u);
    MEMORY[0x242695BD8](v32, -1, -1);
  }
  v33 = (uint64_t)v19;

  v27(v14, v4);
  v34 = v49;
  v51(v49, v20, v4);
  sub_24130F9E0();
  sub_24130F9E0();
  v35 = sub_2414B2C8C();
  v36 = sub_2414B51B8();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    *(_DWORD *)v37 = 68157952;
    LODWORD(v52) = 1;
    sub_2414B541C();
    *(_WORD *)(v37 + 8) = 2050;
    v52 = 48000.0 / (double)v33;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v35, v36, "AudioTapSetup actual refresh rate: %{public}.*fHz", (uint8_t *)v37, 0x12u);
    MEMORY[0x242695BD8](v37, -1, -1);
  }

  v27(v34, v4);
  v38 = v50;
  v51(v50, v20, v4);
  v39 = sub_2414B2C8C();
  v40 = sub_2414B51B8();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v41 = 134349056;
    *(_QWORD *)&v52 = (uint64_t)v19;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v39, v40, "AudioTapSetup frameCount: %{public}ld", v41, 0xCu);
    MEMORY[0x242695BD8](v41, -1, -1);
  }

  v27(v38, v4);
  v51(v31, v20, v4);
  v42 = sub_2414B2C8C();
  v43 = sub_2414B51B8();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    *(_DWORD *)v44 = 134349312;
    v52 = (double)v33 / 48000.0 * 1000.0;
    sub_2414B541C();
    *(_WORD *)(v44 + 12) = 2050;
    v52 = 48000.0 / (double)v33;
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v42, v43, "AudioTapSetup FFT info: dt=%{public}f, df=%{public}f", (uint8_t *)v44, 0x16u);
    MEMORY[0x242695BD8](v44, -1, -1);
  }

  v27(v31, v4);
  return v48;
}

uint64_t FittedTextStack.init(totalLineLimit:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v12 = type metadata accessor for FittedTextStack(0);
  sub_2414B4030();
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 36));
  v14 = sub_2414B4798();
  *v13 = v17;
  v13[1] = v18;
  if (a1 <= 1)
    v15 = 1;
  else
    v15 = a1;
  *(_QWORD *)a6 = v15;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  result = a5(v14);
  *(_QWORD *)(a6 + 32) = result;
  return result;
}

uint64_t type metadata accessor for FittedTextStack(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_2571218C8);
}

uint64_t FittedTextStack.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t (*v22)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t (*v23)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v32 = a1;
  v3 = type metadata accessor for FittedTextStack(0);
  v31 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v31 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121810);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B403C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, v2 + *(int *)(v3 + 32), v8, v10);
  v13 = *(_QWORD *)v2;
  v14 = (uint64_t *)(v2 + *(int *)(v3 + 36));
  v15 = *v14;
  v16 = v14[1];
  v33 = v15;
  v34 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  v17 = v35;
  type metadata accessor for FittedTextHeightResolver(0);
  v18 = swift_allocObject();
  v19 = OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_cache;
  *(_QWORD *)(v18 + v19) = sub_2413114C8(MEMORY[0x24BEE4AF8]);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v18 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_measurements, v12, v8);
  *(_QWORD *)(v18
            + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines) = v13;
  *(_QWORD *)(v18
            + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_containerWidth) = v17;
  v20 = *(_BYTE *)(v2 + 24);
  *(_OWORD *)v7 = *(_OWORD *)(v2 + 8);
  v7[16] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121838);
  v33 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121840);
  sub_2414B2B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121848);
  sub_2412C8FC4(&qword_257121850, &qword_257121840, MEMORY[0x24BEE12D8]);
  sub_241311664();
  sub_2413116C0();
  sub_2414B4948();
  v21 = sub_2414B4A44();
  v23 = v22;
  v24 = v30;
  sub_241311708(v2, v30);
  v25 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v26 = swift_allocObject();
  sub_2413117E8(v24, v26 + v25);
  v27 = v32;
  sub_2412DC3FC((uint64_t)v7, v32, &qword_257121810);
  swift_release();
  v28 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v27
                                                                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121868)
                                                                          + 36));
  *v28 = sub_24131182C;
  v28[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26;
  v28[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v21;
  v28[3] = v23;
  return sub_2412CBE78((uint64_t)v7, &qword_257121810);
}

uint64_t type metadata accessor for FittedTextHeightResolver(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257121938);
}

uint64_t sub_241311030@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t result;
  uint64_t v10;
  double v11;
  uint64_t (*v12)(void);

  v4 = type metadata accessor for FittedText();
  v5 = a1 + *(int *)(v4 + 20);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_BYTE *)(v5 + 16);
  result = sub_2413127C0(*(_QWORD *)v5, v7, v8, *(_QWORD *)(v5 + 24), a1);
  v10 = 0;
  if (v11 > 0.0)
  {
    sub_2414B4A44();
    sub_2414B31B4();
    v12 = *(uint64_t (**)(void))(a1 + *(int *)(v4 + 28));
    sub_241307638(v6, v7, v8);
    swift_bridgeObjectRetain();
    sub_241307638(v6, v7, v8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380CF0);
    sub_2412FDEC4((unint64_t *)&qword_254380CE8, &qword_254380CF0, MEMORY[0x24BDF1F80], MEMORY[0x24BDEBEE0]);
    sub_2414B48B8();
    v10 = v12();
    sub_2412F6D78(v6, v7, v8);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  *a2 = v10;
  return result;
}

uint64_t sub_2413111C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a2;
  v26 = a3;
  v5 = sub_2414B3274();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FittedTextStack(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2414B4648();
  sub_241311708(a2, (uint64_t)v12);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13 = v5;
  v24(v8, a1, v5);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v6 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  sub_2413117E8((uint64_t)v12, v16 + v14);
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v17(v16 + v15, v8, v13);
  v28 = v23;
  v29 = sub_241313310;
  v31 = 0;
  v32 = 0;
  v30 = v16;
  sub_2414B325C();
  v27 = v18;
  sub_241311708(v25, (uint64_t)v12);
  v19 = a1;
  v20 = v13;
  v24(v8, v19, v13);
  v21 = swift_allocObject();
  sub_2413117E8((uint64_t)v12, v21 + v14);
  v17(v21 + v15, v8, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254383EF0);
  sub_2412FDEC4((unint64_t *)&qword_254383EE8, &qword_254383EF0, MEMORY[0x24BDF3E20], MEMORY[0x24BDF0910]);
  sub_2412C4858();
  sub_2414B4564();
  swift_release();
  swift_release();
  sub_2412C9444((uint64_t)v29);
  return sub_2412C9444(v31);
}

uint64_t sub_241311418()
{
  uint64_t result;
  double v1;
  double v2;
  double v3;

  result = sub_2414B325C();
  if (v1 != 0.0)
  {
    v2 = v1;
    type metadata accessor for FittedTextStack(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    result = sub_2414B47A4();
    if (v3 != v2)
      return sub_2414B47B0();
  }
  return result;
}

unint64_t sub_2413114C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121AB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121AB8);
  v6 = sub_2414B56EC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2412DC3FC(v12, (uint64_t)v5, &qword_257121AB0);
    result = sub_2413D7484((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2414B2B30();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24131165C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241311030(a1, a2);
}

unint64_t sub_241311664()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257121858;
  if (!qword_257121858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121848);
    v2 = MEMORY[0x24BDF4760];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257121858);
  }
  return result;
}

unint64_t sub_2413116C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257121860;
  if (!qword_257121860)
  {
    v1 = type metadata accessor for FittedText();
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for FittedText, v1);
    atomic_store(result, (unint64_t *)&qword_257121860);
  }
  return result;
}

uint64_t sub_241311708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FittedTextStack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24131174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FittedTextStack(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 32);
  v5 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413117E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FittedTextStack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24131182C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FittedTextStack(0) - 8) + 80);
  return sub_2413111C8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_241311878()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for FittedTextStack(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    v7 = *(int *)(a3 + 32);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2414B403C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 36);
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for FittedTextStack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t initializeWithCopy for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2414B403C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 36);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 36);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for FittedTextStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FittedTextStack()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241311C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2414B403C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FittedTextStack()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241311D0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_2414B403C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_241311D80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B403C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_241311E18(uint64_t a1)
{
  return sub_241311E30(a1, &qword_257121A70);
}

unint64_t sub_241311E24(uint64_t a1)
{
  return sub_241311E30(a1, &qword_257121A78);
}

unint64_t sub_241311E30(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_2414B56EC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_2412CD2DC(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241311F44(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A68);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2412CD2DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241312054(uint64_t a1)
{
  return sub_241312504(a1, &qword_254384FE8, &qword_257121A30, (uint64_t (*)(uint64_t))sub_2413D75E8);
}

unint64_t sub_241312070(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A38);
  v2 = sub_2414B56EC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2412DC3FC(v6, (uint64_t)&v15, &qword_257121A40);
    v7 = v15;
    v8 = v16;
    result = sub_2412CD2DC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2412D8D3C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2413121A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A80);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_2413D75EC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2413122AC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121AA0);
  v2 = sub_2414B56EC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2412DC3FC(v6, (uint64_t)v15, &qword_257121AA8);
    result = sub_2413D769C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_2412D8D3C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2413123EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846D0);
  v2 = (_QWORD *)sub_2414B56EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_BYTE *)v4;
    v6 = *(v4 - 1);
    result = sub_2413D75E8();
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_BYTE *)(v2[7] + result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2413124E8(uint64_t a1)
{
  return sub_241312504(a1, (uint64_t *)&unk_2543843F8, &qword_254384398, (uint64_t (*)(uint64_t))sub_2413D75E8);
}

unint64_t sub_241312504(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_2414B56EC();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2412DC3FC(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_2412D8D3C(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24131262C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121A58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A60);
  v6 = sub_2414B56EC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2412DC3FC(v12, (uint64_t)v5, &qword_257121A58);
    result = sub_2413D7550((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2414B2A88();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2413127C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t, uint64_t, uint64_t);
  double v27;
  double v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  double v34;
  double v35;
  uint64_t *v36;
  double v37;
  double v38;
  uint64_t v39;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  _QWORD *v67;

  v6 = v5;
  v66 = a4;
  v65 = a3;
  v64 = a2;
  v63 = a1;
  v60 = sub_2414B2B30();
  v8 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v54 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121A88);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (unint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)(v5 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_cache);
  swift_beginAccess();
  v18 = *v17;
  v19 = *(_QWORD *)(*v17 + 16);
  v61 = a5;
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = sub_2413D7484(a5);
    if ((v21 & 1) != 0)
    {
      v59 = v6;
      v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v22 + 16))
      {
        sub_2413D751C(*(double *)(v59
                                + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_containerWidth));
        if ((v23 & 1) != 0)
          return swift_bridgeObjectRelease();
      }
      v6 = v59;
    }
    swift_bridgeObjectRelease();
    a5 = v61;
  }
  v56 = v17;
  v55 = v10;
  v57 = v13;
  v58 = v8;
  v25 = sub_2414B400C();
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v16, 1, 1, v25);
  sub_2414B4024();
  v28 = v27;
  sub_2412CBE78(v16, &qword_257121A88);
  v29 = a5 + *(int *)(type metadata accessor for FittedText() + 24);
  v30 = (uint64_t *)(v6
                  + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines);
  if (*(_BYTE *)(v29 + 8))
    v29 = v6
        + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines;
  v31 = *(_QWORD *)v29;
  v32 = *v30;
  if (*v30 < v31)
    v31 = *v30;
  if (v31 >= 1)
  {
    v54 = (uint64_t *)(v6
                    + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_availableLines);
    v33 = 0;
    v62 = v31;
    v34 = (double)v31;
    v59 = v6;
    v35 = 0.0;
    LOBYTE(v6) = v63;
    v36 = &qword_257121A88;
    while (1)
    {
      v26(v16, 1, 1, v25);
      sub_2414B4024();
      v38 = v37;
      sub_2412CBE78(v16, &qword_257121A88);
      v26(v16, 1, 1, v25);
      v39 = sub_2414B4018();
      sub_2412CBE78(v16, &qword_257121A88);
      if (v39 < 0)
        break;
      if ((_QWORD *)v39 != v33)
      {
        v34 = v34 + 1.0;
        v33 = (_QWORD *)v39;
        v35 = v38;
        if (v39 < v62)
          continue;
      }
      v30 = v54;
      v39 = v60;
      v6 = v59;
      v32 = *v54 - (_QWORD)v33;
      if (!__OFSUB__(*v54, v33))
        goto LABEL_18;
      __break(1u);
      break;
    }
    __break(1u);
    goto LABEL_29;
  }
  v35 = 0.0;
  v39 = v60;
LABEL_18:
  *v30 = v32;
  v25 = v58;
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v58 + 16);
  v36 = (uint64_t *)v57;
  ((void (*)(char *))v26)(v57);
  v28 = *(double *)(v6
                  + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_containerWidth);
  v33 = v56;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v67 = (_QWORD *)*v33;
  v41 = v67;
  *v33 = 0x8000000000000000;
  v16 = sub_2413D7484((uint64_t)v36);
  v43 = v41[2];
  v44 = (v42 & 1) == 0;
  v45 = v43 + v44;
  if (__OFADD__(v43, v44))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  LOBYTE(v6) = v42;
  if (v41[3] >= v45)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_30:
      sub_24140A574();
      v41 = v67;
    }
  }
  else
  {
    sub_241408098(v45, isUniquelyReferenced_nonNull_native);
    v41 = v67;
    v46 = sub_2413D7484((uint64_t)v36);
    if ((v6 & 1) != (v47 & 1))
    {
      result = sub_2414B583C();
      __break(1u);
      return result;
    }
    v16 = v46;
  }
  *v33 = v41;
  swift_bridgeObjectRelease();
  v48 = (_QWORD *)*v33;
  swift_bridgeObjectRetain();
  if ((v6 & 1) == 0)
  {
    v49 = sub_241312EF4(MEMORY[0x24BEE4AF8]);
    v50 = (uint64_t)v55;
    ((void (*)(char *, uint64_t *, uint64_t))v26)(v55, v36, v39);
    sub_24143C86C(v16, v50, v49, v48);
  }
  v51 = v48[7];
  swift_bridgeObjectRelease();
  v52 = 8 * v16;
  v53 = swift_isUniquelyReferenced_nonNull_native();
  v67 = *(_QWORD **)(v51 + v52);
  *(_QWORD *)(v51 + v52) = 0x8000000000000000;
  sub_24143CA8C(v53, v35, v28);
  *(_QWORD *)(v51 + v52) = v67;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v36, v39);
  return swift_endAccess();
}

uint64_t sub_241312D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_6CBD87A2320B99A868A4969384204E9624FittedTextHeightResolver_measurements;
  v2 = sub_2414B403C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_241312DC4()
{
  return type metadata accessor for FittedTextHeightResolver(0);
}

uint64_t sub_241312DCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B403C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_241312E58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257121A10;
  if (!qword_257121A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121868);
    v2[0] = sub_2412C8FC4(&qword_257121A18, &qword_257121810, MEMORY[0x24BDF4700]);
    v2[1] = sub_2412C8FC4(&qword_257121A20, &qword_257121A28, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257121A10);
  }
  return result;
}

unint64_t sub_241312EF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double *i;
  double v5;
  double v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121A90);
    v3 = (_QWORD *)sub_2414B56EC();
    for (i = (double *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_2413D751C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(double *)(v3[6] + v9) = v5;
      *(double *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_241312FC8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A98);
  v3 = (_QWORD *)sub_2414B56EC();
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_2413D7758(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_2413D7758(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2413130BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t result;
  char v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC68);
  v3 = sub_2414B56EC();
  v13 = *(_OWORD *)(a1 + 32);
  result = sub_2412D96B8();
  if ((v5 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return v3;
  }
  v6 = (__int128 *)(a1 + 48);
  v7 = v1 - 1;
  while (1)
  {
    *(_QWORD *)(v3 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_OWORD *)(*(_QWORD *)(v3 + 56) + 16 * result) = v13;
    v8 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    *(_QWORD *)(v3 + 16) = v10;
    if (!v7)
      goto LABEL_8;
    v11 = *v6++;
    v13 = v11;
    swift_retain();
    result = sub_2412D96B8();
    --v7;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2413131A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121A48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121A50);
    v7 = (_QWORD *)sub_2414B56EC();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_2412DC3FC(v9, (uint64_t)v5, &qword_257121A48);
      v11 = *v5;
      result = sub_2413D7758(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = sub_2414B2A88();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for FittedTextStack(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2414B3274();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 32);
  v9 = sub_2414B403C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2413133FC()
{
  type metadata accessor for FittedTextStack(0);
  sub_2414B3274();
  return sub_241311418();
}

uint64_t Numeric<>.isApproximatelyEqual(to:relativeTolerance:norm:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  char v19;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;

  v23 = a4;
  v21 = a1;
  v22 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - v16;
  sub_2414B4C54();
  swift_getAssociatedConformanceWitness();
  sub_2414B50D4();
  v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, AssociatedTypeWitness);
  v19 = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(v21, (uint64_t)v17, a2, v22, v23, a5, AssociatedTypeWitness, *(_QWORD *)(a6 + 8), a7);
  v18(v17, AssociatedTypeWitness);
  return v19 & 1;
}

uint64_t Numeric<>.isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  char v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a4;
  v18 = a5;
  v19 = a6;
  v14 = a5;
  v15 = a6;
  KeyPath = swift_getKeyPath();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(a1, a2, a3, (void (*)(uint64_t))sub_2413136D8, (uint64_t)v13, a4, AssociatedTypeWitness, *(_QWORD *)(v14 + 8), v15);
  swift_release();
  return v11 & 1;
}

uint64_t sub_24131368C()
{
  return sub_2414B50E0();
}

uint64_t sub_2413136B8()
{
  return 24;
}

__n128 sub_2413136C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2413136D8()
{
  return swift_getAtKeyPath();
}

uint64_t sub_2413136E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6;

  sub_2412C84FC(*a1);
  v6 = 1;
  swift_unknownObjectRetain();
  NowPlayingController.transition(to:animated:)(&v6, 1, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_241313750(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  double v8;
  unsigned __int8 v9;

  result = sub_2414B2FBC();
  if (v8 < 0.0)
  {
    sub_2412C84FC(*a2);
    v9 = 1;
    swift_unknownObjectRetain();
    NowPlayingController.transition(to:animated:)(&v9, 1, a3, a4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2413137E8(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2412C821C(v5, v6);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_BYTE *)(a2 + 104);
  v9 = *(_BYTE *)(a2 + 105);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_BYTE *)(a1 + 104);
  v20 = *(_BYTE *)(a1 + 105);
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = v8;
  *(_BYTE *)(a1 + 105) = v9;
  sub_2412C823C(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t sub_241313894(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 106))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2413138F0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 106) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 106) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_241313960()
{
  return swift_deallocObject();
}

uint64_t sub_241313974()
{
  uint64_t *v0;

  return sub_2413136E0(v0 + 4, v0[2], v0[3]);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_2412C821C(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_2412C823C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136), *(_BYTE *)(v0 + 137));
  return swift_deallocObject();
}

uint64_t sub_2413139E8(uint64_t a1)
{
  uint64_t *v1;

  return sub_241313750(a1, v1 + 4, v1[2], v1[3]);
}

uint64_t sub_2413139F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241313A3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D28);
  _s18ArtworkPlaceholderVMa(255, v1, v2, v3);
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  v5 = sub_2414B53B0();
  v6 = MEMORY[0x24BDF5428];
  v35 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v5, &v35);
  sub_2414B3604();
  sub_2414B3514();
  sub_2414B3DB4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_2414B3514();
  v36 = sub_2414B3514();
  _s22MiniPlayerMetadataViewVMa(255, v1, v2, v8);
  v37 = sub_2414B3514();
  _s31MiniPlayerTransportControlsViewVMa(255, v1, v2, v9);
  v38 = sub_2414B3514();
  v39 = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v10 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v6, v10);
  v11 = sub_2414B4804();
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381060);
  v15 = sub_2414B3514();
  v34[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v11);
  v34[1] = MEMORY[0x24BDEBEE0];
  v16 = MEMORY[0x24BDED308];
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v34);
  v18 = MEMORY[0x24BDECC60];
  v33[0] = v17;
  v33[1] = MEMORY[0x24BDECC60];
  v32[0] = MEMORY[0x242695AE8](v16, v13, v33);
  v32[1] = v18;
  v31[0] = MEMORY[0x242695AE8](v16, v14, v32);
  v31[1] = sub_2412C8FC4(&qword_254381058, &qword_254381060, MEMORY[0x24BDEFAD8]);
  v19 = MEMORY[0x242695AE8](v16, v15, v31);
  v36 = v15;
  v37 = v19;
  v20 = MEMORY[0x242695A94](255, &v36, MEMORY[0x24BDF2550], 0);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380BB8);
  v36 = v15;
  v37 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = sub_2412C8FC4(&qword_254380BB0, &qword_254380BB8, MEMORY[0x24BDEC410]);
  v36 = v20;
  v37 = v21;
  v38 = OpaqueTypeConformance2;
  v39 = v23;
  v24 = MEMORY[0x242695A94](255, &v36, MEMORY[0x24BDF2E88], 0);
  v36 = v20;
  v37 = v21;
  v38 = OpaqueTypeConformance2;
  v39 = v23;
  v25 = swift_getOpaqueTypeConformance2();
  v36 = v24;
  v37 = v25;
  MEMORY[0x242695A94](255, &v36, MEMORY[0x24BDF2F10], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25437DB40);
  v26 = sub_2414B3514();
  v27 = sub_2414B3514();
  v36 = v24;
  v37 = v25;
  v30[0] = swift_getOpaqueTypeConformance2();
  v30[1] = sub_2412C8FC4(&qword_25437DB38, (uint64_t *)&unk_25437DB40, MEMORY[0x24BDEDC10]);
  v29[0] = MEMORY[0x242695AE8](v16, v26, v30);
  v29[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, v7, MEMORY[0x24BDF1078]);
  return MEMORY[0x242695AE8](v16, v27, v29);
}

BOOL static DeviceMetrics.Layout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceMetrics.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void DeviceMetrics.sizeClass.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

void DeviceMetrics.layout.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 18);
}

uint64_t DeviceMetrics.userInterfaceIdiom.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

__n128 DeviceMetrics.safeAreaInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 72);
  result = *(__n128 *)(v1 + 40);
  v4 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

void sub_241313EDC(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  char v3;
  char v4;
  char v5;

  if (a2 <= 744.0)
  {
    *a1 = 0;
  }
  else if (a2 <= 768.0)
  {
    *a1 = 1;
  }
  else if (a2 <= 810.0)
  {
    *a1 = 2;
  }
  else
  {
    if (a3 > 1112.0)
      v3 = 5;
    else
      v3 = 4;
    if (a2 <= 834.0)
      v4 = v3;
    else
      v4 = 6;
    if (a2 > 820.0)
      v5 = v4;
    else
      v5 = 3;
    *a1 = v5;
  }
}

void sub_241313F94()
{
  qword_25438E810 = 0x4090000000000000;
}

double DeviceMetrics.Layout.horizontalMargins.getter()
{
  char *v0;

  return dbl_2414B9768[*v0];
}

uint64_t DeviceMetrics.Layout.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t MCUINamespace<A>.deviceMetrics.getter()
{
  sub_2412D5DE0();
  return sub_2414B3838();
}

uint64_t MCUINamespace<A>.deviceMetrics.setter()
{
  sub_2412D5DE0();
  return sub_2414B3844();
}

void (*MCUINamespace<A>.deviceMetrics.modify(_QWORD *a1))(_OWORD **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0xB0uLL);
  *a1 = v3;
  v3[20] = v1;
  v3[21] = sub_2412D5DE0();
  sub_2414B3838();
  return sub_2413140F0;
}

void sub_2413140F0(_OWORD **a1)
{
  char *v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  char v6;

  v2 = *((_BYTE *)*a1 + 16);
  v3 = *(_WORD *)((char *)*a1 + 17);
  v4 = *((_QWORD *)*a1 + 3);
  v5 = *((_BYTE *)*a1 + 32);
  v6 = *((_BYTE *)*a1 + 72);
  v1 = (char *)*a1;
  *((_OWORD *)v1 + 5) = **a1;
  v1[96] = v2;
  *(_WORD *)(v1 + 97) = v3;
  *((_QWORD *)v1 + 13) = v4;
  v1[112] = v5;
  *(_OWORD *)(v1 + 120) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(v1 + 56);
  v1[152] = v6;
  sub_2414B3844();
  free(v1);
}

double MCUINamespace<A>.safeAreaInsets.getter()
{
  double v1;

  sub_2412CCC6C();
  sub_2414B3838();
  return v1;
}

double sub_2413141A4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_2412CCC6C();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2413141F0()
{
  sub_2412CCC6C();
  return sub_2414B3844();
}

uint64_t MCUINamespace<A>.safeAreaInsets.setter()
{
  sub_2412CCC6C();
  return sub_2414B3844();
}

void (*MCUINamespace<A>.safeAreaInsets.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 v4;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[8] = v1;
  v3[9] = sub_2412CCC6C();
  sub_2414B3838();
  v4 = *((_OWORD *)v3 + 3);
  *(_OWORD *)v3 = *((_OWORD *)v3 + 2);
  *((_OWORD *)v3 + 1) = v4;
  return sub_2413142E4;
}

void sub_2413142E4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)a1;
  v2 = *(_OWORD *)(*(_QWORD *)a1 + 16);
  v1[2] = *v1;
  v1[3] = v2;
  sub_2414B3844();
  free(v1);
}

uint64_t EnvironmentValues.deviceMetrics.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v0, v4);
  sub_2412D5DE0();
  sub_2414B3838();
  return sub_241314A7C((uint64_t)v3);
}

uint64_t EnvironmentValues.deviceMetrics.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int16 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v19 = *a1;
  v8 = *((_BYTE *)a1 + 16);
  v9 = *(_WORD *)((char *)a1 + 17);
  v10 = a1[3];
  v11 = *((_BYTE *)a1 + 32);
  v18 = *(_OWORD *)(a1 + 5);
  v12 = a1[7];
  v17 = a1[8];
  HIDWORD(v16) = *((unsigned __int8 *)a1 + 72);
  v13 = sub_2414B382C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v2, v13);
  v20 = v19;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v26 = v18;
  v27 = v12;
  v28 = v17;
  v29 = BYTE4(v16);
  sub_2412D5DE0();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v2, v6, v13);
}

void (*EnvironmentValues.deviceMetrics.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);

  v3 = malloc(0x120uLL);
  *a1 = v3;
  v3[30] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[31] = v5;
  v6 = sub_2414B382C();
  v3[32] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[33] = v7;
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[34] = v8;
  v8(v5, v1, v6);
  v3[35] = sub_2412D5DE0();
  sub_2414B3838();
  sub_241314A7C((uint64_t)v5);
  return sub_2413145D4;
}

void sub_2413145D4(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *a1;
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = *((_BYTE *)*a1 + 16);
  v7 = *((_BYTE *)*a1 + 17);
  v13 = *((_BYTE *)*a1 + 18);
  v14 = (*a1)[3];
  v15 = *((_BYTE *)*a1 + 32);
  v16 = (*a1)[5];
  v17 = (*a1)[6];
  v18 = (*a1)[8];
  v19 = (*a1)[7];
  v20 = *((_BYTE *)*a1 + 72);
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[34])((*a1)[31], v3[30], v3[32]);
  v8 = v3[32];
  v9 = v3[33];
  v11 = v3[30];
  v10 = (void *)v3[31];
  if ((a2 & 1) != 0)
  {
    v3[10] = v5;
    v12 = v3 + 10;
  }
  else
  {
    v3[20] = v5;
    v12 = v3 + 20;
  }
  v12[1] = v4;
  *((_BYTE *)v12 + 16) = v6;
  *((_BYTE *)v12 + 17) = v7;
  *((_BYTE *)v12 + 18) = v13;
  v12[3] = v14;
  *((_BYTE *)v12 + 32) = v15;
  v12[5] = v16;
  v12[6] = v17;
  v12[7] = v19;
  v12[8] = v18;
  *((_BYTE *)v12 + 72) = v20;
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v11, v10, v8);
  free(v10);
  free(v3);
}

double EnvironmentValues.safeAreaInsets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v0, v4);
  sub_2412CCC6C();
  sub_2414B3838();
  v5 = v7;
  sub_241314A7C((uint64_t)v3);
  return v5;
}

uint64_t EnvironmentValues.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B382C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v5, v13);
  *(double *)v16 = a1;
  *(double *)&v16[1] = a2;
  *(double *)&v16[2] = a3;
  *(double *)&v16[3] = a4;
  sub_2412CCC6C();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v5, v12, v13);
}

void (*EnvironmentValues.safeAreaInsets.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v3 = malloc(0xB0uLL);
  *a1 = v3;
  v3[16] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[17] = v5;
  v6 = sub_2414B382C();
  v3[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[19] = v7;
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[20] = v8;
  v8(v5, v1, v6);
  v3[21] = sub_2412CCC6C();
  sub_2414B3838();
  v12 = *((_OWORD *)v3 + 2);
  v9 = v3[6];
  v10 = v3[7];
  sub_241314A7C((uint64_t)v5);
  *(_OWORD *)v3 = v12;
  v3[2] = v9;
  v3[3] = v10;
  return sub_2413149B8;
}

void sub_2413149B8(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v3 = *a1;
  v4 = (*a1)[19];
  v6 = **a1;
  v5 = (*a1)[1];
  v8 = (*a1)[2];
  v7 = (*a1)[3];
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[20])((*a1)[17], v3[16], v3[18]);
  v9 = (void *)v3[17];
  v10 = v3[18];
  v11 = v3[16];
  if ((a2 & 1) != 0)
  {
    v3[8] = v6;
    v12 = v3 + 8;
  }
  else
  {
    v3[12] = v6;
    v12 = v3 + 12;
  }
  v12[1] = v5;
  v12[2] = v8;
  v12[3] = v7;
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v10);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v11, v9, v10);
  free(v9);
  free(v3);
}

uint64_t sub_241314A7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241314AC0()
{
  unint64_t result;

  result = qword_257121AC0;
  if (!qword_257121AC0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for DeviceMetrics.SizeClass, &type metadata for DeviceMetrics.SizeClass);
    atomic_store(result, (unint64_t *)&qword_257121AC0);
  }
  return result;
}

unint64_t sub_241314B08()
{
  unint64_t result;

  result = qword_257121AC8;
  if (!qword_257121AC8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for DeviceMetrics.Layout, &type metadata for DeviceMetrics.Layout);
    atomic_store(result, (unint64_t *)&qword_257121AC8);
  }
  return result;
}

uint64_t sub_241314B54()
{
  return 0;
}

uint64_t sub_241314B6C()
{
  return 0;
}

ValueMetadata *type metadata accessor for SafeAreaInsetsKey()
{
  return &type metadata for SafeAreaInsetsKey;
}

ValueMetadata *type metadata accessor for DeviceMetricsKey()
{
  return &type metadata for DeviceMetricsKey;
}

uint64_t static MCUINamespace<A>.motionModeKey.getter()
{
  return 0x6F4D6E6F69746F6DLL;
}

MediaCoreUI::MotionMode_optional __swiftcall MotionMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (MediaCoreUI::MotionMode_optional)rawValue;
}

uint64_t MotionMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

MediaCoreUI::MotionMode_optional sub_241314BF8(Swift::Int *a1)
{
  return MotionMode.init(rawValue:)(*a1);
}

void sub_241314C00(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t MotionMode.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28271;
  if (*v0 == 1)
    v1 = 0x796C6E4F69666977;
  if (*v0)
    return v1;
  else
    return 6710895;
}

uint64_t sub_241314C54()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28271;
  if (*v0 == 1)
    v1 = 0x796C6E4F69666977;
  if (*v0)
    return v1;
  else
    return 6710895;
}

uint64_t static NSUserDefaults.MotionModeKey.getter()
{
  return 0x6F4D6E6F69746F6DLL;
}

unint64_t sub_241314CBC()
{
  unint64_t result;

  result = qword_257121AD0;
  if (!qword_257121AD0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MotionMode, &type metadata for MotionMode);
    atomic_store(result, (unint64_t *)&qword_257121AD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MotionMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241314D4C + 4 * byte_2414B9785[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241314D80 + 4 * byte_2414B9780[v4]))();
}

uint64_t sub_241314D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241314D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241314D90);
  return result;
}

uint64_t sub_241314D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241314DA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241314DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241314DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t SplitPercentageLayout.axis.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SplitPercentageLayout.axis.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t (*SplitPercentageLayout.axis.modify())()
{
  return CGSizeMake;
}

uint64_t SplitPercentageLayout.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SplitPercentageLayout.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SplitPercentageLayout.locations.modify())()
{
  return CGSizeMake;
}

uint64_t SplitPercentageLayout.init(axis:locations:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = result & 1;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

double SplitPercentageLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t SplitPercentageLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, int a4, void (*a5)(_QWORD *, _BYTE *, uint64_t))
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  double v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_QWORD *, _QWORD);
  _BYTE *v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  double v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  double v64;
  uint64_t v65;
  void (*v66)(_QWORD *, _QWORD);
  _BYTE *v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  double v69;
  _QWORD *v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  _BYTE *v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t result;
  _BYTE v83[12];
  int v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  double v93;
  double v94;
  int v95;
  int v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  void (*v100)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v101;
  uint64_t v102;
  _QWORD v103[4];
  uint64_t v104;

  v6 = v5;
  v96 = a4;
  v94 = *(double *)&a3;
  v95 = a2;
  v93 = *(double *)&a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
  MEMORY[0x24BDAC7A8](v8);
  v92 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v91 = &v83[-v11];
  v12 = sub_2414B32BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v90 = &v83[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v99 = &v83[-v16];
  MEMORY[0x24BDAC7A8](v17);
  v89 = &v83[-v18];
  MEMORY[0x24BDAC7A8](v19);
  v98 = &v83[-v20];
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121B40);
  MEMORY[0x24BDAC7A8](v97);
  v88 = &v83[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v22);
  v87 = &v83[-v23];
  v24 = sub_2414B33A0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v101 = &v83[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v29 = &v83[-v28];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121B48);
  MEMORY[0x24BDAC7A8](v30);
  v85 = &v83[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121B50);
  MEMORY[0x24BDAC7A8](v102);
  v33 = &v83[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v34);
  v36 = &v83[-v35];
  v84 = *v6;
  v86 = *((_QWORD *)v6 + 1);
  v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v86 + 16);
  v38 = sub_2413158D0((unint64_t *)&qword_254382810, MEMORY[0x24BDEC7A0]);
  sub_2414B50F8();
  sub_2414B5128();
  v39 = sub_2414B511C();
  v40 = *(_QWORD *)(v25 + 16);
  v100 = v37;
  if (v37 != (void (*)(_BYTE *, _BYTE *, uint64_t))v39)
  {
LABEL_50:
    ((void (*)(_BYTE *, _QWORD, uint64_t))v40)(v101, a5, v24);
    v103[0] = 0;
    v103[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_2414B5578();
    sub_2414B4DF8();
    sub_2414B50F8();
    sub_2414B5128();
    v104 = sub_2414B511C();
    sub_2414B57A0();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v104 = (uint64_t)v100;
    sub_2414B57A0();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    sub_2414B4DF8();
    result = sub_2414B5674();
    __break(1u);
    return result;
  }
  v41 = v85;
  v100 = (void (*)(_BYTE *, _BYTE *, uint64_t))v40;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v40)(v85, a5, v24);
  v101 = (_BYTE *)v25;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v29, v41, v24);
  sub_2413158D0(&qword_257121B58, MEMORY[0x24BDEC798]);
  v42 = v86;
  swift_bridgeObjectRetain();
  if (v84)
  {
    if ((v96 & 1) != 0)
      v43 = 10.0;
    else
      v43 = v94;
    sub_2414B4E70();
    v44 = v102;
    v45 = &v36[*(int *)(v102 + 52)];
    *v45 = v42;
    v45[1] = 0;
    v99 = v45;
    v102 = (uint64_t)&v36[*(int *)(v44 + 56)];
    *(_BYTE *)v102 = 0;
    v46 = (uint64_t *)&v36[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121B60) + 36)];
    v47 = 0.0;
    v48 = v87;
    while (1)
    {
      v49 = *v46;
      sub_2414B5128();
      if (v49 == v103[0])
      {
        v51 = v91;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v91, 1, 1, v12);
LABEL_40:
        v81 = (uint64_t)v51;
        goto LABEL_43;
      }
      v50 = (void (*)(_QWORD *, _QWORD))sub_2414B5164();
      v51 = v91;
      (*(void (**)(_BYTE *))(v13 + 16))(v91);
      v50(v103, 0);
      v100(v29, v36, v24);
      sub_2414B5134();
      (*((void (**)(_BYTE *, uint64_t))v101 + 1))(v29, v24);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v51, 0, 1, v12);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v51, 1, v12) == 1)
        goto LABEL_40;
      a5 = *(void (**)(_QWORD *, _BYTE *, uint64_t))(v13 + 32);
      a5(v98, v51, v12);
      v40 = v99[1];
      v52 = *(void (**)(_QWORD, _QWORD, _QWORD))(*v99 + 16);
      if ((void (*)(_QWORD, _QWORD, _QWORD))v40 == v52)
      {
        (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v98, v12);
        goto LABEL_46;
      }
      if (v40 >= (unint64_t)v52)
        break;
      v53 = *(double *)(*v99 + 8 * v40 + 32);
      v54 = v98;
      v99[1] = v40 + 1;
      v55 = *(int *)(v97 + 48);
      a5(v48, v54, v12);
      *(double *)&v48[v55] = v53;
      v56 = v89;
      a5(v89, v48, v12);
      if (v53 > 0.0)
        v57 = v53;
      else
        v57 = 0.0;
      if (v53 >= 1.0)
        v57 = 1.0;
      v58 = v43 * v57 - v47;
      if (v58 < 0.0)
        v59 = 0.0;
      else
        v59 = v58;
      sub_2414B4B34();
      LOBYTE(v103[0]) = v95 & 1;
      LOBYTE(v104) = 0;
      sub_2414B32A4();
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v56, v12);
      v47 = v47 + v59;
      if ((*(_BYTE *)v102 & 1) != 0)
        return sub_2412CBE78((uint64_t)v36, &qword_257121B50);
    }
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v36 = v33;
  if ((v95 & 1) != 0)
    v60 = 10.0;
  else
    v60 = v93;
  sub_2414B4E70();
  v61 = v102;
  v62 = &v33[*(int *)(v102 + 52)];
  *v62 = v42;
  v62[1] = 0;
  v98 = v62;
  v102 = (uint64_t)&v33[*(int *)(v61 + 56)];
  *(_BYTE *)v102 = 0;
  v63 = (uint64_t *)&v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121B60) + 36)];
  v64 = 0.0;
  while (1)
  {
    v65 = *v63;
    sub_2414B5128();
    if (v65 == v103[0])
      break;
    v66 = (void (*)(_QWORD *, _QWORD))sub_2414B5164();
    v67 = v92;
    (*(void (**)(_BYTE *))(v13 + 16))(v92);
    v66(v103, 0);
    v100(v29, v36, v24);
    sub_2414B5134();
    (*((void (**)(_BYTE *, uint64_t))v101 + 1))(v29, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v67, 0, 1, v12);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v67, 1, v12) == 1)
      goto LABEL_42;
    a5 = *(void (**)(_QWORD *, _BYTE *, uint64_t))(v13 + 32);
    a5(v99, v67, v12);
    v40 = v98[1];
    v68 = *(void (**)(_QWORD, _QWORD, _QWORD))(*v98 + 16);
    if ((void (*)(_QWORD, _QWORD, _QWORD))v40 == v68)
    {
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v99, v12);
      goto LABEL_46;
    }
    if (v40 >= (unint64_t)v68)
      goto LABEL_49;
    v69 = *(double *)(*v98 + 8 * v40 + 32);
    v70 = v99;
    v98[1] = v40 + 1;
    v71 = *(int *)(v97 + 48);
    v72 = v36;
    v73 = v29;
    v74 = v38;
    v75 = v88;
    a5(v88, v70, v12);
    *(double *)&v75[v71] = v69;
    v76 = v90;
    v77 = v75;
    v38 = v74;
    v29 = v73;
    v36 = v72;
    a5(v90, v77, v12);
    if (v69 > 0.0)
      v78 = v69;
    else
      v78 = 0.0;
    if (v69 >= 1.0)
      v78 = 1.0;
    v79 = v60 * v78 - v64;
    if (v79 < 0.0)
      v80 = 0.0;
    else
      v80 = v79;
    sub_2414B4B34();
    LOBYTE(v103[0]) = 0;
    LOBYTE(v104) = v96 & 1;
    sub_2414B32A4();
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v76, v12);
    v64 = v64 + v80;
    if ((*(_BYTE *)v102 & 1) != 0)
      return sub_2412CBE78((uint64_t)v36, &qword_257121B50);
  }
  v67 = v92;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v92, 1, 1, v12);
LABEL_42:
  v81 = (uint64_t)v67;
LABEL_43:
  sub_2412CBE78(v81, &qword_257126950);
LABEL_46:
  *(_BYTE *)v102 = 1;
  return sub_2412CBE78((uint64_t)v36, &qword_257121B50);
}

uint64_t sub_2413158D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2414B33A0();
    result = MEMORY[0x242695AE8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241315914()
{
  unint64_t result;

  result = qword_257121B68;
  if (!qword_257121B68)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for SplitPercentageLayout, &type metadata for SplitPercentageLayout);
    atomic_store(result, (unint64_t *)&qword_257121B68);
  }
  return result;
}

double sub_24131595C(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t sub_24131597C(uint64_t a1, char a2, uint64_t a3, char a4, void (*a5)(_QWORD *, _BYTE *, uint64_t))
{
  return SplitPercentageLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t initializeBufferWithCopyOfBuffer for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SplitPercentageLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SplitPercentageLayout()
{
  return &type metadata for SplitPercentageLayout;
}

uint64_t MaterialView.init(_:placeholder:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  v7 = *a1;
  v8 = a1[1];
  v9 = *((_BYTE *)a1 + 16);
  v10 = (int *)type metadata accessor for MaterialView(0, a3, a4, a3);
  v11 = v10[10];
  __swift_instantiateConcreteTypeFromMangledName(qword_257121BB0);
  sub_2414B4798();
  *(_OWORD *)(a5 + v11) = v15;
  v12 = a5 + v10[11];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a5 + v10[12];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  *(_QWORD *)a5 = v7;
  *(_QWORD *)(a5 + 8) = v8;
  *(_BYTE *)(a5 + 16) = v9;
  return a2();
}

uint64_t type metadata accessor for MaterialView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MaterialView);
}

uint64_t sub_241315B38()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257121C38);
  sub_2414B47A4();
  return v1;
}

uint64_t sub_241315B80()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121C38);
  return sub_2414B47B0();
}

uint64_t sub_241315BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 44);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  j__swift_retain();
  v5 = sub_241344C7C(v3, v4);
  j__swift_release();
  return v5;
}

uint64_t sub_241315C28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2413173D4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241315C74@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2413173D4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241315CC0()
{
  sub_2413173D4();
  swift_retain();
  return sub_2414B3844();
}

uint64_t sub_241315D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 48);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_2412C7080(*(_QWORD *)v2, v4);
  v5 = sub_241344CA0(v3, v4);
  sub_2412C821C(v3, v4);
  return v5;
}

uint64_t sub_241315D7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_241317390();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241315DC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_241317390();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241315E14()
{
  sub_241317390();
  return sub_2414B3844();
}

uint64_t sub_241315E5C()
{
  sub_241317390();
  return sub_2414B3844();
}

uint64_t MaterialView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  _QWORD v58[3];

  v52 = a2;
  v4 = sub_2414B4FE4();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  v44 = *(_QWORD *)(a1 - 8);
  v45 = v6;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = v41;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121B70);
  v14 = sub_2414B3514();
  v48 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v40 - v15;
  sub_2414B32F8();
  v16 = sub_2414B3514();
  v47 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v42 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v46 = (char *)&v40 - v20;
  v21 = *(int *)(a1 + 36);
  v40 = v2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, v2 + v21, v9, v19);
  v22 = *(_QWORD *)(a1 + 24);
  v54 = v9;
  v55 = v22;
  v56 = v2;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121B78);
  sub_24131630C();
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v9);
  v24 = v43;
  v23 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v40, a1);
  v25 = v23;
  v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v9;
  *(_QWORD *)(v27 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v27 + v26, v24, a1);
  v28 = sub_241316744();
  v58[0] = v22;
  v58[1] = v28;
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v58);
  v31 = v49;
  sub_2414B4FCC();
  v32 = v42;
  v33 = v53;
  sub_2414B4480();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v51);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v14);
  v34 = sub_241316790();
  v57[0] = v30;
  v57[1] = v34;
  MEMORY[0x242695AE8](v29, v16, v57);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v37(v46, v32, v16);
  v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v32, v16);
  v37(v52, v36, v16);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v16);
}

void sub_24131622C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  void *v8;
  int64x2_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v7 = type metadata accessor for MaterialView(0, a2, a3, a4);
  v8 = (void *)sub_241315B38();
  v9 = 0uLL;
  if (v8)
  {
    v10 = sub_241315BCC(v7);
    if (v10)
    {
      v11 = v10;
      v13 = *(void **)a1;
      v12 = *(void **)(a1 + 8);
      v14 = *(unsigned __int8 *)(a1 + 16);
      sub_241316AC8(*(void **)a1, v12, *(_BYTE *)(a1 + 16));
      v9 = vdupq_n_s64(0xFuLL);
      v9.i64[0] = v11;
      v15 = &off_2511738F8;
    }
    else
    {

      v13 = 0;
      v12 = 0;
      v14 = 0;
      v8 = 0;
      v15 = 0;
      v9 = 0uLL;
    }
  }
  else
  {
    v13 = 0;
    v12 = 0;
    v14 = 0;
    v15 = 0;
  }
  *(_QWORD *)a5 = v13;
  *(_QWORD *)(a5 + 8) = v12;
  *(_QWORD *)(a5 + 16) = v14;
  *(_QWORD *)(a5 + 24) = v8;
  *(_QWORD *)(a5 + 32) = v15;
  *(int64x2_t *)(a5 + 40) = v9;
}

void sub_241316300(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_24131622C(v2[4], v2[2], v2[3], a1, a2);
}

unint64_t sub_24131630C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_257121B80;
  if (!qword_257121B80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121B78);
    v2 = sub_241316370();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257121B80);
  }
  return result;
}

unint64_t sub_241316370()
{
  unint64_t result;

  result = qword_257121B88;
  if (!qword_257121B88)
  {
    result = MEMORY[0x242695AE8](&unk_2414BFAC4, &type metadata for MetalTextureView);
    atomic_store(result, &qword_257121B88);
  }
  return result;
}

uint64_t sub_2413163B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_2414B4FC0();
  v3[5] = sub_2414B4FB4();
  v3[6] = sub_2414B4F90();
  v3[7] = v4;
  return swift_task_switch();
}

uint64_t sub_241316424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v5 = type metadata accessor for MaterialView(0, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a4);
  *(_QWORD *)(v4 + 64) = v5;
  v6 = (void *)sub_241315B38();

  if (v6 || (v8 = sub_241315BCC(v5), (*(_QWORD *)(v4 + 72) = v8) == 0))
  {
    swift_release();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  else
  {
    v9 = v8;
    swift_retain();
    v10 = sub_241315D20(v5);
    objc_allocWithZone((Class)type metadata accessor for MaterialRenderer());
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 80) = v11;
    *v11 = v4;
    v11[1] = sub_241316500;
    return sub_2413E12A0(v9, v10);
  }
}

uint64_t sub_241316500(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241316558()
{
  uint64_t v0;

  swift_release();
  sub_241315B80();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413165B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for MaterialView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  sub_24131667C(*(void **)v8, *(void **)(v8 + 8), *(_BYTE *)(v8 + 16));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + v6[9], v5);

  swift_release();
  j__swift_release();
  sub_2412C821C(*(_QWORD *)(v8 + v6[12]), *(_BYTE *)(v8 + v6[12] + 8));
  return swift_deallocObject();
}

void sub_24131667C(void *a1, void *a2, char a3)
{

  if ((a3 & 1) == 0)
}

uint64_t sub_2413166C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MaterialView(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_241310430;
  return sub_2413163B4(v9, v6, v7);
}

unint64_t sub_241316744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257121BA0;
  if (!qword_257121BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121B70);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v1);
    atomic_store(result, (unint64_t *)&qword_257121BA0);
  }
  return result;
}

unint64_t sub_241316790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257121BA8;
  if (!qword_257121BA8)
  {
    v1 = sub_2414B32F8();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEC4C8], v1);
    atomic_store(result, (unint64_t *)&qword_257121BA8);
  }
  return result;
}

uint64_t MaterialView<>.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_257121BB0);
  sub_2414B4798();
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  result = sub_2414B4648();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = v7;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_241316884()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413168B8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_241316944(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v11;
  char *v12;
  char *v13;
  char v14;
  _QWORD *v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((v8 + ((v7 + 17) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v7 & 0xF8 ^ 0x1F8) & (v7 + 16)];
    swift_retain();
  }
  else
  {
    v12 = *a2;
    v13 = a2[1];
    v14 = *((_BYTE *)a2 + 16);
    sub_241316AC8(*a2, v13, v14);
    *(_QWORD *)a1 = v12;
    *((_QWORD *)a1 + 1) = v13;
    a1[16] = v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&a1[v7 + 17] & ~v7, ((unint64_t)a2 + v7 + 17) & ~v7, v5);
    v15 = (_QWORD *)((v8 + ((unint64_t)&a1[v7 + 17] & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    v16 = (v8 + (((unint64_t)a2 + v7 + 17) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(void **)v16;
    *v15 = *(_QWORD *)v16;
    v15[1] = *(_QWORD *)(v16 + 8);
    v18 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)v19;
    LOBYTE(v12) = *(_BYTE *)(v19 + 8);
    v21 = v17;
    swift_retain();
    j__swift_retain();
    *(_QWORD *)v18 = v20;
    *(_BYTE *)(v18 + 8) = (_BYTE)v12;
    v22 = ((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8;
    v23 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)v23;
    LOBYTE(v20) = *(_BYTE *)(v23 + 8);
    sub_2412C7080(*(_QWORD *)v23, v20);
    *(_QWORD *)v22 = v24;
    *(_BYTE *)(v22 + 8) = v20;
  }
  return a1;
}

id sub_241316AC8(void *a1, void *a2, char a3)
{
  id v4;

  if ((a3 & 1) == 0)
  {
    v4 = a1;
    a1 = a2;
  }
  return a1;
}

uint64_t sub_241316AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id *v6;

  sub_24131667C(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (id *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);

  swift_release();
  j__swift_release();
  return sub_2412C821C(*(_QWORD *)(((unint64_t)v6 + 39) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)((((unint64_t)v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_241316B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 17 + a1) & ~v10;
  v12 = (v10 + 17 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(void **)v15;
  *v14 = *(_QWORD *)v15;
  v14[1] = *(_QWORD *)(v15 + 8);
  v17 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  LOBYTE(v9) = *(_BYTE *)(v18 + 8);
  v20 = v16;
  swift_retain();
  j__swift_retain();
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v9;
  v21 = ((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v19) = *(_BYTE *)(v22 + 8);
  sub_2412C7080(*(_QWORD *)v22, v19);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v19;
  return a1;
}

uint64_t sub_241316CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_241316AC8(*(void **)a2, v7, v8);
  v9 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_24131667C(v9, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 17 + a1) & ~v13;
  v15 = (v13 + 17 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (v16 + v14) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v16 + v15) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(void **)v17;
  v20 = *(void **)v18;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v21 = v20;

  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_retain();
  swift_release();
  v22 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  LOBYTE(v15) = *(_BYTE *)(v23 + 8);
  j__swift_retain();
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v15;
  j__swift_release();
  v25 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  LOBYTE(v15) = *(_BYTE *)(v26 + 8);
  sub_2412C7080(*(_QWORD *)v26, v15);
  v28 = *(_QWORD *)v25;
  v29 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v15;
  sub_2412C821C(v28, v29);
  return a1;
}

uint64_t sub_241316DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 17 + a1) & ~v5;
  v7 = (v5 + 17 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = ((unint64_t)v9 + 39) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v11) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v11;
  return a1;
}

uint64_t sub_241316EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_24131667C(v7, v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 17 + a1) & ~v11;
  v13 = (v11 + 17 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = *(void **)v15;
  *(_QWORD *)v15 = *v16;

  *(_QWORD *)(v15 + 8) = v16[1];
  swift_release();
  v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v19;
  j__swift_release();
  v21 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = *(_BYTE *)(v22 + 8);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v22;
  sub_2412C821C(v24, v25);
  return a1;
}

uint64_t sub_241316FCC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v15 = (a1 + v7 + 17) & ~v7;
    if (v5 < 0x7FFFFFFE)
    {
      v16 = *(_QWORD *)((v8 + v15) & 0xFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      v17 = v16 - 1;
      if (v17 < 0)
        v17 = -1;
      return (v17 + 1);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v15);
    }
  }
  else
  {
    v9 = ((((v8 + ((v7 + 17) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v6 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24131706C + 4 * byte_2414B9968[v13]))();
  }
}

void sub_241317118(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + 7
         + ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X14 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_241317250()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413172D4);
}

void sub_241317258(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241317260);
  JUMPOUT(0x2413172D4);
}

void sub_2413172A8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413172D4);
}

void sub_2413172B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413172D4);
}

uint64_t sub_2413172B8@<X0>(unsigned int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    JUMPOUT(0x2413172D4);
  if (a2 < 0x7FFFFFFE)
  {
    if (a1 <= 0x7FFFFFFE)
      JUMPOUT(0x2413172D0);
    JUMPOUT(0x2413172C4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))((v6 + v5 + 17) & a3);
}

uint64_t sub_2413172EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121B70);
  v2 = sub_2414B3514();
  sub_2414B32F8();
  v3 = sub_2414B3514();
  v7[0] = v1;
  v7[1] = sub_241316744();
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_241316790();
  return MEMORY[0x242695AE8](v4, v3, v6);
}

unint64_t sub_241317390()
{
  unint64_t result;

  result = qword_257121C40;
  if (!qword_257121C40)
  {
    result = MEMORY[0x242695AE8](&unk_2414CC668, &_s22MaterialContentModeKeyVN);
    atomic_store(result, (unint64_t *)&qword_257121C40);
  }
  return result;
}

unint64_t sub_2413173D4()
{
  unint64_t result;

  result = qword_257128490;
  if (!qword_257128490)
  {
    result = MEMORY[0x242695AE8](&unk_2414C6008, &_s21MetalRenderContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_257128490);
  }
  return result;
}

void MotionView.init(url:previewFrame:fallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[4];

  v13[2] = a6;
  v13[3] = a7;
  v13[1] = a5;
  v8 = sub_2414B2A88();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  sub_241317510((uint64_t)v12);
}

uint64_t sub_2413174DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_241317510(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for MotionView();
}

uint64_t sub_241317594(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = a1[16];
  if (qword_257120A18 != -1)
    swift_once();
  *(_QWORD *)(v2 + v7) = qword_257137178;
  v8 = sub_2414B2A88();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v3, v8);
  v10 = swift_retain();
  v11 = (*(uint64_t (**)(uint64_t))(v5 - 152))(v10);
  (*(void (**)(uint64_t))(v5 - 136))(v11);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 128) + 32))(v2 + a1[14], v4, v1);
  *(_BYTE *)(v2 + a1[15]) = *(_DWORD *)(v5 - 116) & 1;
  return result;
}

uint64_t MotionView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[2];

  v23 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v21 = v3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121C60);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257121C68);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  sub_2414B3A90();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B48AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - v7;
  v9 = sub_2414B3514();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - v14;
  v24 = v21;
  v25 = v20;
  v26 = *(_OWORD *)(a1 + 32);
  v27 = v22;
  sub_2414B4A44();
  sub_2414B48A0();
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDF4750], v5);
  sub_2414B445C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = sub_2413182B8();
  v28[0] = v16;
  v28[1] = v17;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v28);
  sub_2412FBF34((uint64_t)v12, v9, (uint64_t)v15);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  sub_2412EEA1C((uint64_t)v15, v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

void sub_2413178FC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[14];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v31 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v9);
  v27[9] = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121C60);
  v11 = sub_2414B3514();
  v27[2] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v27[1] = (char *)v27 - v12;
  v36 = v13;
  v14 = sub_2414B3514();
  v27[5] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v27[4] = (char *)v27 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257121C68);
  v35 = v14;
  v16 = sub_2414B3514();
  v27[7] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v27[6] = (char *)v27 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v34 = v16;
  v18 = sub_2414B3514();
  v27[8] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v27[10] = (char *)v27 - v20;
  MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v32 = v23;
  v28 = sub_2414B3A90();
  v27[12] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27[13] = (char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v33 = (char *)v27 - v26;
  v27[11] = sub_2414B4648();
  v27[3] = a1;
  v38 = a1;
  v39 = a2;
  v29 = a2;
  v30 = a4;
  v37 = a3;
  v40 = a3;
  v41 = a4;
  type metadata accessor for MotionView();
}

uint64_t sub_241317BAC(int *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);

  v9 = v4;
  v10 = *(_QWORD *)(v4 + a1[16]);
  swift_getKeyPath();
  *(_QWORD *)(v7 - 120) = v10;
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  swift_release();
  if ((*(_BYTE *)(v10 + 33) & 1) != 0)
  {
    v11 = v9;
    *v1 = v9;
    sub_2414B4A44();
    type metadata accessor for MotionPlayerView(0);
    sub_2412C8030(&qword_257121D28, type metadata accessor for MotionPlayerView, (uint64_t)&unk_2414BC240);
    v12 = v1[1];
    v13 = v1[23];
    sub_2414B4504();
    v14 = sub_2412C8FC4(&qword_257121D18, &qword_257121C60, MEMORY[0x24BDEDC10]);
    v1[30] = v13;
    v1[31] = v14;
    v15 = v1[22];
    v16 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v1 + 30);
    v17 = v1[4];
    sub_2414B42E8();
    (*(void (**)(uint64_t, uint64_t))(v1[2] + 8))(v12, v15);
    swift_getKeyPath();
    v18 = sub_2414B2A88();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = v1[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, v11, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
    v1[28] = v16;
    v1[29] = MEMORY[0x24BDF0390];
    v21 = v1[21];
    v22 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v21, v1 + 28);
    v23 = v1[6];
    sub_2414B41C8();
    swift_release();
    sub_24131A14C(v20);
    (*(void (**)(uint64_t, uint64_t))(v1[5] + 8))(v17, v21);
    swift_getKeyPath();
    *(_BYTE *)(v7 - 120) = *(_BYTE *)(*v1 + a1[15]);
    v24 = MEMORY[0x24BDF1028];
    v25 = sub_2412C8FC4(&qword_257121D20, qword_257121C68, MEMORY[0x24BDF1028]);
    v1[26] = v22;
    v1[27] = v25;
    v26 = MEMORY[0x24BDED308];
    v27 = v1[20];
    v28 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v1 + 26);
    sub_2414B41C8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v1[7] + 8))(v23, v27);
    v29 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, v24);
    v1[24] = v28;
    v1[25] = v29;
    v30 = v26;
    v31 = v1[18];
    MEMORY[0x242695AE8](v30, v31, v1 + 24);
    v32 = v1[10];
    sub_2412FBF34(v5, v31, v32);
    v33 = *(void (**)(uint64_t, uint64_t))(v1[8] + 8);
    v33(v5, v31);
    sub_2412EEA1C(v32, v31, v5);
    v34 = v1[16];
    sub_2412F1584(v5, v1[15], v31);
    v33(v5, v31);
    v33(v32, v31);
  }
  else
  {
    v35 = v9 + a1[14];
    v36 = v1[15];
    v34 = v1[16];
    sub_2412FBF34(v35, v36, v6);
    sub_2412EEA1C(v6, v36, v3);
    v37 = sub_2412C8FC4(&qword_257121D18, &qword_257121C60, MEMORY[0x24BDEDC10]);
    v38 = v1[22];
    *(_QWORD *)(v7 - 136) = v1[23];
    *(_QWORD *)(v7 - 128) = v37;
    v39 = MEMORY[0x24BDED308];
    *(_QWORD *)(v7 - 152) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v38, v7 - 136);
    *(_QWORD *)(v7 - 144) = MEMORY[0x24BDF0390];
    v40 = MEMORY[0x242695AE8](v39, v1[21], v7 - 152);
    v41 = v2;
    v42 = MEMORY[0x24BDF1028];
    v43 = sub_2412C8FC4(&qword_257121D20, qword_257121C68, MEMORY[0x24BDF1028]);
    *(_QWORD *)(v7 - 168) = v40;
    *(_QWORD *)(v7 - 160) = v43;
    v44 = MEMORY[0x242695AE8](v39, v1[20], v7 - 168);
    v45 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, v42);
    *(_QWORD *)(v7 - 184) = v44;
    *(_QWORD *)(v7 - 176) = v45;
    MEMORY[0x242695AE8](v39, v1[18], v7 - 184);
    sub_24132F340(v3, v36);
    v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v46(v3, v36);
    v46(v6, v36);
  }
  v47 = v1[12];
  *(_QWORD *)(v7 - 192) = v1[11];
  *(_QWORD *)(v7 - 120) = v7 - 192;
  v49 = v1[13];
  v48 = v1[14];
  v50 = v1[19];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v49, v50, v48);
  *(_QWORD *)(v7 - 112) = v49;
  swift_retain();
  *(_QWORD *)(v7 - 208) = MEMORY[0x24BDF3E48];
  *(_QWORD *)(v7 - 200) = v48;
  *(_QWORD *)(v7 - 224) = MEMORY[0x24BDF3E20];
  v51 = sub_2412C8FC4(&qword_257121D18, &qword_257121C60, MEMORY[0x24BDEDC10]);
  v52 = v1[22];
  *(_QWORD *)(v7 - 240) = v1[23];
  *(_QWORD *)(v7 - 232) = v51;
  v53 = MEMORY[0x24BDED308];
  *(_QWORD *)(v7 - 256) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v52, v7 - 240);
  *(_QWORD *)(v7 - 248) = MEMORY[0x24BDF0390];
  v54 = MEMORY[0x242695AE8](v53, v1[21], v7 - 256);
  v55 = MEMORY[0x24BDF1028];
  v56 = sub_2412C8FC4(&qword_257121D20, qword_257121C68, MEMORY[0x24BDF1028]);
  v1[36] = v54;
  v1[37] = v56;
  v57 = MEMORY[0x242695AE8](v53, v1[20], v1 + 36);
  v58 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, v55);
  v1[34] = v57;
  v1[35] = v58;
  v59 = MEMORY[0x242695AE8](v53, v1[18], v1 + 34);
  v1[32] = v34;
  v1[33] = v59;
  *(_QWORD *)(v7 - 216) = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v48, v1 + 32);
  sub_2412F68CC((uint64_t *)(v7 - 120), 2uLL, v7 - 208);
  v60 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v60(v50, v48);
  swift_release();
  v60(v49, v48);
  return swift_release();
}

void sub_2413181C0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_2413178FC(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_2413181D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for MotionViewDisplayState(0);
  sub_2414B4AEC();
  v2 = type metadata accessor for MotionPlayerView(0);
  v3 = (uint64_t *)(a1 + *(int *)(v2 + 20));
  *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121D30);
  swift_storeEnumTagMultiPayload();
  v4 = a1 + *(int *)(v2 + 24);
  result = swift_getKeyPath();
  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 0;
  return result;
}

uint64_t sub_241318270()
{
  sub_24131A02C();
  return sub_2414B3838();
}

uint64_t sub_2413182A4()
{
  return sub_2413183E0((void (*)(void))sub_24131A070);
}

unint64_t sub_2413182B8()
{
  unint64_t result;

  result = qword_25437DC10;
  if (!qword_25437DC10)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1438], MEMORY[0x24BDF1448]);
    atomic_store(result, (unint64_t *)&qword_25437DC10);
  }
  return result;
}

uint64_t MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  v10[15] = v3;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2413183CC()
{
  return sub_2413183E0((void (*)(void))sub_24131A0F8);
}

uint64_t sub_2413183E0(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_2414B3838();
  return v2;
}

uint64_t sub_241318420@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24131A0F8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24131846C()
{
  sub_24131A0F8();
  return sub_2414B3844();
}

uint64_t sub_2413184B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  __swift_allocate_value_buffer(v0, qword_257121C48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257121C48);
  v2 = sub_2414B2A88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_24131851C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2571205D0 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_257121C48);
  return sub_24131A294(v3, a1);
}

uint64_t sub_24131857C()
{
  sub_24131A218();
  return sub_2414B3340();
}

uint64_t sub_2413185CC()
{
  sub_24131A2DC();
  return sub_2414B3340();
}

uint64_t sub_24131861C()
{
  unsigned __int8 v1;

  sub_24131A0B4();
  sub_2414B3838();
  return v1;
}

uint64_t _s11MediaCoreUI10MotionViewV3url10Foundation3URLVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2414B2A88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s11MediaCoreUI10MotionViewV12previewFramexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t _s11MediaCoreUI10MotionViewV8fallbackq_vg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

void MotionViewV2.init(url:keyframe:fallback:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  v4 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for MotionViewV2();
}

uint64_t sub_241318774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = (*(uint64_t (**)(void))(v8 - 136))();
  (*(void (**)(uint64_t))(v8 - 120))(v10);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + *(int *)(a1 + 56), v7, v1);
}

void MotionViewV2.body.getter()
{
  uint64_t v0;

  v0 = sub_2414B2A88();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for MotionView();
}

void sub_241318860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;

  *(_QWORD *)(v8 - 256) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(uint64_t, uint64_t, _QWORD, double))(v1 + 16))(v3, v2, *(_QWORD *)(v8 - 264), v10);
  *(_QWORD *)(v8 - 160) = v4;
  *(_QWORD *)(v8 - 152) = v5;
  *(_QWORD *)(v8 - 144) = v6;
  *(_QWORD *)(v8 - 136) = v7;
  *(_QWORD *)(v8 - 128) = v2;
  *(_QWORD *)(v8 - 224) = v4;
  *(_QWORD *)(v8 - 216) = v5;
  *(_QWORD *)(v8 - 208) = v6;
  *(_QWORD *)(v8 - 200) = v7;
  *(_QWORD *)(v8 - 192) = v2;
  MotionView.init(url:previewFrame:fallback:)(v3, (uint64_t)sub_2413189A0, v8 - 176, (uint64_t)sub_241318A08, v8 - 240, v4, v5);
}

uint64_t sub_241318914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, v0);
  sub_2412FBF34(v2, v0, v1);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8);
  v4(v2, v0);
  sub_2412EEA1C(v1, v0, *(_QWORD *)(v3 - 248));
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(v1, v0);
}

void type metadata accessor for MotionView()
{
  JUMPOUT(0x242695A4CLL);
}

void sub_2413189A0()
{
  type metadata accessor for MotionViewV2();
}

uint64_t sub_2413189D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v2 + *(int *)(a1 + 52));
}

void sub_241318A08()
{
  type metadata accessor for MotionViewV2();
}

uint64_t sub_241318A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v2 + *(int *)(a1 + 56));
}

uint64_t sub_241318A7C()
{
  return sub_241318A94();
}

uint64_t sub_241318A88()
{
  return sub_241318A94();
}

uint64_t sub_241318A94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241318AC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2414B2A88();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_241318B88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v10 + 64) + v14;
  v16 = *(_QWORD *)(v13 + 64);
  v17 = v14 | *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  if (v17 > 7
    || ((*(_DWORD *)(v13 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((v15 + (v12 & ~v11)) & ~v14) + v16) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
  }
  else
  {
    v21 = ~v11;
    v22 = ~v14;
    v29 = v8;
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    v23 = a2;
    v24 = ((unint64_t)a1 + v12) & v21;
    v25 = ((unint64_t)v23 + v12) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v24, v25, v9);
    v26 = (v24 + v15) & v22;
    v27 = (v25 + v15) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(v26, v27, v29);
    *(_BYTE *)(v26 + v16) = *(_BYTE *)(v27 + v16);
    *(_QWORD *)(((v26 + v16) & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)(((v27 + v16) & 0xFFFFFFFFFFFFF8) + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_241318D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = sub_2414B2A88();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v8
                                                                                            + *(_QWORD *)(v7 + 64)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

uint64_t sub_241318DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 8);
  swift_retain();
  return a1;
}

uint64_t sub_241318E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_241318F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_241319068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 8);
  swift_release();
  return a1;
}

uint64_t sub_241319154(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v9 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v15 = v6;
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = *(_QWORD *)(v7 + 64) + v16;
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = *(_QWORD *)(v13 + 64);
  if (v12 < a2)
  {
    if (((((((v18 + v19 + (v17 & ~v16)) & ~v19) + v20) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v21 = 2;
    else
      v21 = a2 - v12 + 1;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X21 }
  }
  if (v8 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v26 = a1;
    v14 = *(unsigned int *)(v7 + 84);
    v9 = v15;
    return v25(v26, v14, v9);
  }
  v26 = (v17 + a1) & ~v16;
  if (v11 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v14 = *(unsigned int *)(v10 + 84);
    v9 = *(_QWORD *)(a3 + 16);
    return v25(v26, v14, v9);
  }
  v26 = (v26 + v18 + v19) & ~v19;
  if ((_DWORD)v14 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    return v25(v26, v14, v9);
  }
  v27 = *(_QWORD *)(((v26 + v20) & 0xFFFFFFFFFFFFF8) + 8);
  if (v27 >= 0xFFFFFFFF)
    LODWORD(v27) = -1;
  return (v27 + 1);
}

void sub_241319324(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v8 = *(_QWORD *)(sub_2414B2A88() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(unsigned __int8 *)(v11 + 80);
  if (v10 >= a3)
  {
    v16 = 0;
    if (a2 <= v10)
      goto LABEL_21;
  }
  else
  {
    if (((((*(_DWORD *)(v9 + 64) + (_DWORD)v13 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v12) & ~(_DWORD)v12)) & ~(_DWORD)v13)
         + *(_DWORD *)(v11 + 64)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v14 = a3 - v10 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    if (a2 <= v10)
LABEL_21:
      __asm { BR              X22 }
  }
  if (((((*(_DWORD *)(v9 + 64) + (_DWORD)v13 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v12) & ~(_DWORD)v12)) & ~(_DWORD)v13)
       + *(_DWORD *)(v11 + 64)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v17 = ~v10 + a2;
    bzero(a1, ((((*(_QWORD *)(v9 + 64) + v13 + ((*(_QWORD *)(v8 + 64) + v12) & ~v12)) & ~v13) + *(_QWORD *)(v11 + 64)) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_241319478()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x241319534);
}

void sub_241319480()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x241319488);
  JUMPOUT(0x241319534);
}

void sub_2413194CC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x241319534);
}

void sub_2413194D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x241319534);
}

void sub_2413194DC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (v3)
  {
    if (v1 != v2 && v0 != v2)
      JUMPOUT(0x2413194E8);
    JUMPOUT(0x241319504);
  }
  JUMPOUT(0x241319534);
}

uint64_t *sub_24131954C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v10 + 64) + v14;
  v16 = (*(_BYTE *)(v10 + 80) | *(_BYTE *)(v7 + 80) | v14);
  if (v16 <= 7
    && ((v15 + (v12 & ~v11)) & ~(unint64_t)v14) + *(_QWORD *)(v13 + 64) <= 0x18
    && ((*(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80) | v14) & 0x100000) == 0)
  {
    v20 = ~v11;
    v21 = ~(unint64_t)v14;
    v24 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v22 = ((unint64_t)a2 + v12) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v20, v22, v9);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(((((unint64_t)a1 + v12) & v20) + v15) & v21, (v22 + v15) & v21, v24);
  }
  else
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  return a1;
}

uint64_t sub_241319688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = sub_2414B2A88();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_241319714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2413197CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_241319884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_24131993C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2413199F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (!a2)
    return 0;
  v15 = v6;
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = *(_QWORD *)(v7 + 64) + v16;
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(unsigned __int8 *)(v13 + 80);
  if (a2 <= v12)
    goto LABEL_25;
  v20 = ((v18 + v19 + (v17 & ~v16)) & ~v19) + *(_QWORD *)(v13 + 64);
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v23 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v23 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v23 < 2)
    {
LABEL_25:
      if (v12)
      {
        if (v8 == v12)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v15);
        v26 = (v17 + a1) & ~v16;
        if (v11 == v12)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))(v26, *(unsigned int *)(v10 + 84), v9);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v13 + 48))((v26 + v18 + v19) & ~v19, v14, *(_QWORD *)(a3 + 24));
      }
      return 0;
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_25;
LABEL_16:
  v24 = (v22 - 1) << v21;
  if (v20 > 3)
    v24 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v25 = ((v18 + v19 + (v17 & ~(_DWORD)v16)) & ~(_DWORD)v19) + *(_DWORD *)(v13 + 64);
    else
      v25 = 4;
    __asm { BR              X11 }
  }
  return v12 + v24 + 1;
}

void sub_241319BD0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(sub_2414B2A88() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v12 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

uint64_t sub_241319E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121C60);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257121C68);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  sub_2414B3A90();
  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  v1 = sub_2414B48AC();
  v2 = sub_2414B3514();
  v4[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4750], v1);
  v4[1] = sub_2413182B8();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_241319F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

void sub_241319FF0()
{
  type metadata accessor for MotionView();
}

uint64_t sub_24131A010(uint64_t a1)
{
  return MEMORY[0x242695AE8](&protocol conformance descriptor for MotionView<A, B>, a1);
}

unint64_t sub_24131A02C()
{
  unint64_t result;

  result = qword_257121CF0;
  if (!qword_257121CF0)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9DC8, &_s12MotionURLKeyVN);
    atomic_store(result, (unint64_t *)&qword_257121CF0);
  }
  return result;
}

unint64_t sub_24131A070()
{
  unint64_t result;

  result = qword_257121CF8;
  if (!qword_257121CF8)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9D90, &_s32ShouldRenderMotionPlayerLayerKeyVN);
    atomic_store(result, (unint64_t *)&qword_257121CF8);
  }
  return result;
}

unint64_t sub_24131A0B4()
{
  unint64_t result;

  result = qword_257121D00;
  if (!qword_257121D00)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9D58, &_s25MotionPlacementContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_257121D00);
  }
  return result;
}

unint64_t sub_24131A0F8()
{
  unint64_t result;

  result = qword_257121D08;
  if (!qword_257121D08)
  {
    result = MEMORY[0x242695AE8](&unk_2414B9D20, &_s23ShouldResetOnSizeChangeVN);
    atomic_store(result, (unint64_t *)&qword_257121D08);
  }
  return result;
}

uint64_t sub_24131A14C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24131A194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MotionViewDisplayState(0);
  swift_allocObject();
  result = sub_241358BAC();
  *a1 = result;
  return result;
}

ValueMetadata *_s23ShouldResetOnSizeChangeVMa()
{
  return &_s23ShouldResetOnSizeChangeVN;
}

ValueMetadata *_s25MotionPlacementContextKeyVMa()
{
  return &_s25MotionPlacementContextKeyVN;
}

ValueMetadata *_s32ShouldRenderMotionPlayerLayerKeyVMa()
{
  return &_s32ShouldRenderMotionPlayerLayerKeyVN;
}

ValueMetadata *_s12MotionURLKeyVMa()
{
  return &_s12MotionURLKeyVN;
}

unint64_t sub_24131A218()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257121D38;
  if (!qword_257121D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844C0);
    v2 = sub_2412C8030(&qword_257121D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257121D38);
  }
  return result;
}

uint64_t sub_24131A294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24131A2DC()
{
  unint64_t result;

  result = qword_257121D48;
  if (!qword_257121D48)
  {
    result = MEMORY[0x242695AE8](&unk_2414CDD58, &type metadata for MotionPlacementContext);
    atomic_store(result, (unint64_t *)&qword_257121D48);
  }
  return result;
}

uint64_t NowPlayingCustomButton.id.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24131A32C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_24131A35C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_24131A398())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NowPlayingCustomButton.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
}

uint64_t NowPlayingCustomButton.__allocating_init(_:isEnabled:content:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  NowPlayingCustomButton.init(_:isEnabled:content:)(a1);
  return v2;
}

uint64_t NowPlayingCustomButton.init(_:isEnabled:content:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v11;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[1];
  *(_QWORD *)(v1 + 16) = *v4;
  *(_QWORD *)(v1 + 24) = v7;
  *(_BYTE *)(v1 + 32) = v8;
  v9();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), v6, v2);
  return v1;
}

uint64_t NowPlayingCustomButton.__allocating_init(_:isEnabled:content:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = swift_allocObject();
  NowPlayingCustomButton.init(_:isEnabled:content:)((uint64_t)v4);
  return v2;
}

uint64_t *NowPlayingCustomButton.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  return v0;
}

uint64_t NowPlayingCustomButton.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t sub_24131A5EC@<X0>(_QWORD *a1@<X8>)
{
  return NowPlayingCustomButton.id.getter(a1);
}

uint64_t sub_24131A60C@<X0>(uint64_t a1@<X8>)
{
  return NowPlayingCustomButton.content.getter(a1);
}

uint64_t static NowPlayingButton<>.none.getter()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_257121D50);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x726563617073;
  *(_QWORD *)(result + 24) = 0xE600000000000000;
  *(_BYTE *)(result + 32) = 1;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 48) = 1;
  return result;
}

uint64_t sub_24131A678(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_24131A680@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24131A32C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24131A6AC(char *a1)
{
  return sub_24131A35C(*a1);
}

uint64_t sub_24131A6D0()
{
  return 16;
}

__n128 sub_24131A6DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24131A6E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingCustomButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingCustomButton);
}

uint64_t method lookup function for NowPlayingCustomButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of NowPlayingCustomButton.__allocating_init(_:isEnabled:content:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_24131A7B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(v7 + 40));
  v9 = sub_2414B4900();
  MEMORY[0x242694144](v9);
  MEMORY[0x2426944BC](&v11, v6, v8, v3, MEMORY[0x24BEE1768], *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t sub_24131A86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  type metadata accessor for MinimumLayoutMargins();
  return sub_2414B4AEC();
}

uint64_t sub_24131A8D0()
{
  uint64_t v0;

  type metadata accessor for MinimumLayoutMargins();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_2414B2BA8();
  return v0;
}

uint64_t sub_24131A91C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v2 = v1 + *(int *)(a1 + 52);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(unsigned __int8 *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 17);
  sub_241321D28(*(_QWORD *)v2, v4, v5, *(_BYTE *)(v2 + 17));
  v7 = sub_241344E60(v3, v4, v5 | (v6 << 8));
  sub_24132196C(v3, v4, v5, v6);
  return v7;
}

uint64_t ScopePicker.init(selection:scopes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v32 = a4;
  v33 = a2;
  v8 = *(_QWORD *)(a3 - 8);
  v34 = a1;
  v35 = v8;
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_2414B53B0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - v17;
  v20 = (int *)type metadata accessor for ScopePicker(0, a3, a4, v19);
  *(_QWORD *)(a5 + v20[11]) = 0x4034000000000000;
  sub_24131A86C((uint64_t)sub_24131A8D0, 0);
  v21 = a5 + v20[13];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_QWORD *)(v21 + 8) = 0;
  *(_WORD *)(v21 + 16) = 0;
  v22 = sub_2414B4900();
  v28 = *(_QWORD *)(v22 - 8);
  v29 = v22;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(a5, v34);
  v30 = v20;
  v31 = a5;
  v23 = v33;
  *(_QWORD *)(a5 + v20[9]) = v33;
  v24 = v23;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_2414B4F00();
  v40 = sub_2414B4C24();
  v39 = v24;
  v32 = sub_2414B4F60();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12C8], v32);
  sub_2414B4E7C();
  swift_bridgeObjectRelease();
  v38 = v36;
  sub_2414B56BC();
  sub_2414B5698();
  sub_2414B56B0();
  while (1)
  {
    sub_2414B56A4();
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v18, 1, TupleTypeMetadata2) == 1)break;
    v25 = *(_QWORD *)v18;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v10, &v18[*(int *)(TupleTypeMetadata2 + 48)], a3);
    v36 = v25;
    v37 = 0;
    sub_2414B4C30();
    sub_2414B4C48();
  }
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v29);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v31 + v30[10]) = v40;
  return result;
}

uint64_t type metadata accessor for ScopePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker);
}

uint64_t sub_24131ACDC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a3 + 16);
  v27 = sub_2414B53B0();
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v10 = (char *)v26 - v9;
  v11 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v26 - v16;
  v18 = sub_24131A7B0(a3);
  if ((v19 & 1) != 0)
  {
    v26[1] = a1;
    v28 = *(_QWORD *)(v3 + *(int *)(a3 + 36));
    v20 = sub_2414B4F60();
    v26[2] = v3;
    MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v20);
    sub_2414B5140();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v10, v7);
      sub_241323B34((uint64_t)v17, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v7);
    }
    v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  }
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v18);
    v21 = *(_QWORD *)(a3 + 24);
    v26[-4] = v7;
    v26[-3] = v21;
    v26[-2] = v23;
    v26[-1] = v22;
    sub_2414B4AC8();
    sub_2414B3328();
    return swift_release();
  }
  else
  {
    v25 = sub_2414B4900();
    MEMORY[0x242694144](v25);
    sub_2414B3538();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v7);
  }
}

uint64_t sub_24131AF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker(0, v7, v8, v8);
  v9 = sub_2414B4900();
  MEMORY[0x242694144](v9);
  sub_2414B3538();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a3);
}

uint64_t ScopePicker.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  ValueMetadata *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  ValueMetadata *v87;
  _QWORD v88[2];
  _QWORD v89[2];
  uint64_t v90;
  ValueMetadata *v91;
  char v92;
  __int128 v93;
  __int128 v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  __int128 v100;
  _QWORD v101[4];
  char v102;
  uint64_t v103;
  uint64_t v104;
  ValueMetadata *v105;
  char v106;
  __int128 v107;
  __int128 v108;
  char v109;
  uint64_t v110;
  ValueMetadata *v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  _QWORD v122[2];
  _QWORD v123[2];
  _QWORD v124[2];
  _QWORD v125[2];
  _QWORD v126[3];

  v86 = a2;
  v2 = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  v83 = *(_QWORD *)(a1 - 8);
  v84 = v2;
  MEMORY[0x24BDAC7A8](a1);
  v81 = v4;
  v82 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  v87 = (ValueMetadata *)v6;
  v8 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(255, v6, v5, v7);
  v9 = sub_2414B3514();
  v126[0] = MEMORY[0x242695AE8](&unk_2414BA0EC, v8);
  v126[1] = MEMORY[0x24BDECC60];
  v10 = MEMORY[0x24BDED308];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v126);
  v11 = sub_2414B2F50();
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v11);
  v110 = v11;
  v111 = (ValueMetadata *)v12;
  v13 = MEMORY[0x24BDF26D8];
  v14 = MEMORY[0x242695A94](255, &v110, MEMORY[0x24BDF26D8], 0);
  v110 = v11;
  v111 = (ValueMetadata *)v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v110 = v14;
  v111 = (ValueMetadata *)OpaqueTypeConformance2;
  MEMORY[0x242695A94](255, &v110, v13, 0);
  v16 = v6;
  v17 = v5;
  v75 = v5;
  v19 = type metadata accessor for ScopePicker.FadingView(255, v16, v5, v18);
  MEMORY[0x242695AE8](&unk_2414BA09C, v19);
  v20 = sub_2414B3388();
  v21 = sub_2414B3514();
  sub_2414B35EC();
  v22 = sub_2414B3514();
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v20);
  v24 = sub_24130CB04();
  v125[0] = v23;
  v125[1] = v24;
  v124[0] = MEMORY[0x242695AE8](v10, v21, v125);
  v124[1] = MEMORY[0x24BDEDB58];
  MEMORY[0x242695AE8](v10, v22, v124);
  v25 = sub_2414B3604();
  v26 = sub_2414B3514();
  v27 = sub_2414B3514();
  v110 = v14;
  v111 = (ValueMetadata *)OpaqueTypeConformance2;
  v28 = swift_getOpaqueTypeConformance2();
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v25);
  v123[0] = v28;
  v123[1] = v29;
  v122[0] = MEMORY[0x242695AE8](v10, v26, v123);
  v122[1] = MEMORY[0x24BDF0390];
  v30 = MEMORY[0x242695AE8](v10, v27, v122);
  v31 = *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8);
  v32 = v87;
  v110 = v27;
  v111 = v87;
  v112 = v30;
  *(_QWORD *)&v113 = v31;
  v33 = MEMORY[0x24BDF3908];
  v34 = MEMORY[0x242695A94](255, &v110, MEMORY[0x24BDF3908], 0);
  v35 = sub_2414B4F60();
  v110 = v27;
  v111 = v32;
  v112 = v30;
  *(_QWORD *)&v113 = v31;
  v36 = swift_getOpaqueTypeConformance2();
  v121 = v31;
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BEE12C0], v35, &v121);
  v110 = v34;
  v111 = (ValueMetadata *)v35;
  v112 = v36;
  *(_QWORD *)&v113 = v37;
  v38 = MEMORY[0x242695A94](255, &v110, v33, 0);
  v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E40);
  v110 = v34;
  v111 = (ValueMetadata *)v35;
  v112 = v36;
  *(_QWORD *)&v113 = v37;
  v40 = swift_getOpaqueTypeConformance2();
  v41 = sub_2413217B8();
  v110 = v38;
  v111 = (ValueMetadata *)v39;
  v112 = v40;
  *(_QWORD *)&v113 = v41;
  v42 = MEMORY[0x242695A94](255, &v110, v33, 0);
  v110 = v38;
  v111 = (ValueMetadata *)v39;
  v112 = v40;
  *(_QWORD *)&v113 = v41;
  v43 = swift_getOpaqueTypeConformance2();
  v44 = sub_24132181C();
  v110 = v42;
  v111 = &type metadata for HorizontalMargins;
  v112 = v43;
  *(_QWORD *)&v113 = v44;
  MEMORY[0x242695A94](255, &v110, v33, 0);
  v110 = v42;
  v111 = &type metadata for HorizontalMargins;
  v112 = v43;
  *(_QWORD *)&v113 = v44;
  swift_getOpaqueTypeConformance2();
  v45 = sub_2414B35D4();
  v74 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E58);
  v77 = sub_2414B3514();
  sub_2414B3DB4();
  v46 = sub_2414B3514();
  v47 = *(_QWORD *)(v46 - 8);
  v79 = v46;
  v80 = v47;
  MEMORY[0x24BDAC7A8](v46);
  v76 = (char *)&v74 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v78 = (uint64_t)&v74 - v51;
  v53 = v82;
  v52 = v83;
  v54 = v81;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v83 + 16))(v82, v85, v81, v50);
  v55 = v52;
  v56 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v57 = swift_allocObject();
  v58 = v75;
  *(_QWORD *)(v57 + 16) = v87;
  *(_QWORD *)(v57 + 24) = v58;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v57 + v56, v53, v54);
  v110 = sub_2414B35C8();
  v111 = v59;
  sub_2414B3E8C();
  v60 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA10], v45);
  sub_2414B4528();
  swift_release();
  v104 = v90;
  v105 = v91;
  v106 = v92;
  v107 = v93;
  v108 = v94;
  v109 = v95;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121E68);
  sub_2414B4AF8();
  v61 = v110;
  v62 = sub_2414B3520();
  v63 = sub_2414B3E44();
  v101[2] = v61;
  v101[3] = v62;
  v102 = v63;
  v103 = 0;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121E70);
  v101[0] = v60;
  v101[1] = MEMORY[0x24BDECC60];
  v64 = MEMORY[0x24BDED308];
  v65 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v74, v101);
  sub_2412DC484(&qword_257121E78, &qword_257121E70, sub_24132198C, MEMORY[0x24BDECC38]);
  sub_2414B4138();
  swift_release();
  swift_release();
  v90 = v110;
  v91 = v111;
  v92 = v112;
  v93 = v113;
  v94 = v114;
  v95 = v115;
  v96 = v116;
  v97 = v117;
  v98 = v118;
  v99 = v119;
  v100 = v120;
  v66 = sub_2412C8FC4(qword_257121E98, &qword_257121E58, MEMORY[0x24BDEF370]);
  v89[0] = v65;
  v89[1] = v66;
  v67 = MEMORY[0x242695AE8](v64, v77, v89);
  v68 = (uint64_t)v76;
  sub_2412F6DCC();
  swift_release();
  swift_release();
  v69 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v88[0] = v67;
  v88[1] = v69;
  v70 = v79;
  MEMORY[0x242695AE8](v64, v79, v88);
  v71 = v78;
  sub_2412FBF34(v68, v70, v78);
  v72 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
  v72(v68, v70);
  sub_2412EEA1C(v71, v70, v86);
  return ((uint64_t (*)(uint64_t, uint64_t))v72)(v71, v70);
}

uint64_t sub_24131B7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v7)(uint64_t, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  ValueMetadata *v72;
  ValueMetadata *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, uint64_t, uint64_t);
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  ValueMetadata *v131;
  char v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  ValueMetadata *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(char *, uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t, char *, uint64_t);
  void (*v214)(char *, uint64_t, uint64_t);
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  ValueMetadata *v222;
  uint64_t v223;
  unint64_t v224;
  _QWORD v225[2];
  _QWORD v226[2];
  _QWORD v227[2];
  _QWORD v228[2];
  _QWORD v229[2];

  v219 = a2;
  v216 = a1;
  v201 = a5;
  v209 = sub_2414B3544();
  v212 = *(_QWORD *)(v209 - 8);
  MEMORY[0x24BDAC7A8](v209);
  v213 = v7;
  v215 = (char *)&v152 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v199 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_2414B3B2C();
  v210 = *(_QWORD *)(v211 - 8);
  MEMORY[0x24BDAC7A8](v211);
  v158 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(255, a3, a4, v11);
  v13 = sub_2414B3514();
  v229[0] = MEMORY[0x242695AE8](&unk_2414BA0EC, v12);
  v229[1] = MEMORY[0x24BDECC60];
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v229);
  v202 = (void (*)(char *, uint64_t, uint64_t))v13;
  v178 = v15;
  v16 = sub_2414B2F50();
  v192 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v186 = (char *)&v152 - v18;
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v16, v17);
  v221 = v16;
  v222 = (ValueMetadata *)v19;
  v20 = MEMORY[0x24BDF26D8];
  v21 = MEMORY[0x242695A94](0, &v221, MEMORY[0x24BDF26D8], 0);
  v189 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v182 = (char *)&v152 - v22;
  v204 = v16;
  v221 = v16;
  v222 = (ValueMetadata *)v19;
  v175 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v221 = v21;
  v222 = (ValueMetadata *)OpaqueTypeConformance2;
  v24 = MEMORY[0x242695A94](0, &v221, v20, 0);
  v190 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v183 = (char *)&v152 - v25;
  v27 = type metadata accessor for ScopePicker.FadingView(255, a3, a4, v26);
  MEMORY[0x242695AE8](&unk_2414BA09C, v27);
  v28 = sub_2414B3388();
  v29 = sub_2414B3514();
  sub_2414B35EC();
  v30 = sub_2414B3514();
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v28);
  v32 = sub_24130CB04();
  v228[0] = v31;
  v228[1] = v32;
  v227[0] = MEMORY[0x242695AE8](v14, v29, v228);
  v227[1] = MEMORY[0x24BDEDB58];
  v33 = MEMORY[0x242695AE8](v14, v30, v227);
  v169 = v30;
  v163 = v33;
  v34 = sub_2414B3604();
  v203 = v24;
  v35 = sub_2414B3514();
  v164 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v162 = (char *)&v152 - v36;
  v37 = sub_2414B3514();
  v177 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v206 = (char *)&v152 - v38;
  v159 = v21;
  v221 = v21;
  v222 = (ValueMetadata *)OpaqueTypeConformance2;
  v174 = OpaqueTypeConformance2;
  v39 = swift_getOpaqueTypeConformance2();
  v40 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v34);
  v161 = v39;
  v226[0] = v39;
  v226[1] = v40;
  v166 = v35;
  v160 = MEMORY[0x242695AE8](v14, v35, v226);
  v225[0] = v160;
  v225[1] = MEMORY[0x24BDF0390];
  v41 = MEMORY[0x242695AE8](v14, v37, v225);
  v42 = a4;
  v43 = *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8);
  v221 = v37;
  v222 = (ValueMetadata *)a3;
  v223 = v41;
  v224 = v43;
  v44 = MEMORY[0x24BDF3908];
  v45 = MEMORY[0x242695A94](0, &v221, MEMORY[0x24BDF3908], 0);
  v180 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v207 = (char *)&v152 - v46;
  v47 = sub_2414B4F60();
  v179 = v37;
  v221 = v37;
  v222 = (ValueMetadata *)a3;
  v167 = v41;
  v223 = v41;
  v224 = v43;
  v48 = swift_getOpaqueTypeConformance2();
  v165 = v43;
  v220 = v43;
  v49 = MEMORY[0x242695AE8](MEMORY[0x24BEE12C0], v47, &v220);
  v221 = v45;
  v222 = (ValueMetadata *)v47;
  v223 = v48;
  v224 = v49;
  v50 = MEMORY[0x242695A94](0, &v221, v44, 0);
  v193 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v208 = (char *)&v152 - v51;
  v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E40);
  v185 = v45;
  v221 = v45;
  v222 = (ValueMetadata *)v47;
  v170 = v47;
  v171 = v48;
  v223 = v48;
  v224 = v49;
  v168 = v49;
  v53 = swift_getOpaqueTypeConformance2();
  v54 = sub_2413217B8();
  v221 = v50;
  v222 = (ValueMetadata *)v52;
  v223 = v53;
  v224 = v54;
  v55 = MEMORY[0x242695A94](0, &v221, v44, 0);
  v197 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v194 = (char *)&v152 - v56;
  v195 = v50;
  v221 = v50;
  v222 = (ValueMetadata *)v52;
  v176 = v52;
  v173 = v53;
  v223 = v53;
  v224 = v54;
  v172 = v54;
  v57 = swift_getOpaqueTypeConformance2();
  v58 = sub_24132181C();
  v198 = v55;
  v221 = v55;
  v222 = &type metadata for HorizontalMargins;
  v191 = v57;
  v223 = v57;
  v224 = v58;
  v187 = v58;
  v196 = MEMORY[0x242695A94](0, &v221, v44, 0);
  v188 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v181 = (char *)&v152 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60);
  v184 = (uint64_t)&v152 - v61;
  v217 = a3;
  v218 = v42;
  v63 = type metadata accessor for ScopePicker(0, a3, v42, v62);
  v64 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v205 = (char *)&v152 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = v65;
  MEMORY[0x24BDAC7A8](v66);
  v68 = (char *)&v152 - v67;
  v69 = v219;
  v71 = sub_24131A91C(v70);
  v73 = v72;
  LOBYTE(v55) = v74;
  v214 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  v214(v68, v69, v63);
  if ((v55 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121E68);
    sub_2414B4AF8();
    v75 = v221;
    swift_getKeyPath();
    v221 = v75;
    sub_2412C8030((unint64_t *)&qword_257122090, (uint64_t (*)(uint64_t))type metadata accessor for MinimumLayoutMargins, (uint64_t)&unk_2414CBF34);
    sub_2414B2B84();
    swift_release();
    v71 = *(_QWORD *)(v75 + 24);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121E68);
    sub_2414B4AF8();
    v76 = v221;
    swift_getKeyPath();
    v221 = v76;
    sub_2414B2B84();
    swift_release();
    v73 = *(ValueMetadata **)(v76 + 40);
    swift_release();
  }
  v154 = v64;
  v77 = *(void (**)(char *, uint64_t))(v64 + 8);
  v153 = v63;
  v77(v68, v63);
  v78 = sub_2414B3E14();
  MEMORY[0x24BDAC7A8](v78);
  v80 = v217;
  v79 = v218;
  *(&v152 - 4) = v217;
  *(&v152 - 3) = v79;
  *(&v152 - 2) = v219;
  v81 = v186;
  sub_2414B2F5C();
  v82 = sub_2414B3E68();
  v83 = v158;
  sub_2414B3B20();
  v84 = v182;
  v85 = v82;
  v86 = v204;
  MEMORY[0x242693B20](v85, v71, 0, v83, v204, v175);
  v87 = *(void (**)(char *, uint64_t))(v210 + 8);
  v88 = v211;
  v87(v83, v211);
  (*(void (**)(char *, uint64_t))(v192 + 8))(v81, v86);
  v89 = sub_2414B3E80();
  sub_2414B3B20();
  v90 = v71;
  v156 = v71;
  v91 = v183;
  v92 = v89;
  v155 = v73;
  v93 = v159;
  MEMORY[0x242693B20](v92, v73, 0, v83, v159, v174);
  v87(v83, v88);
  v94 = (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v84, v93);
  MEMORY[0x24BDAC7A8](v94);
  v95 = v218;
  *(&v152 - 4) = v80;
  *(&v152 - 3) = v95;
  *(&v152 - 2) = v90;
  *(&v152 - 1) = (uint64_t)v73;
  sub_2414B4A44();
  v96 = v162;
  v97 = v203;
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v190 + 8))(v91, v97);
  v98 = v166;
  sub_2414B42E8();
  (*(void (**)(char *, uint64_t))(v164 + 8))(v96, v98);
  v99 = v153;
  v100 = sub_2414B4900();
  v101 = v199;
  v102 = v219;
  MEMORY[0x242694144](v100);
  v103 = v205;
  v214(v205, v102, v99);
  v104 = v212;
  v202 = *(void (**)(char *, uint64_t, uint64_t))(v212 + 16);
  v202(v215, v216, v209);
  v105 = v154;
  v106 = *(unsigned __int8 *)(v154 + 80);
  v107 = *(unsigned __int8 *)(v104 + 80);
  v108 = (v106 + 32) & ~v106;
  v204 = v108;
  v211 = (uint64_t)v213 + ((v157 + v107 + v108) & ~v107);
  v109 = (v157 + v107 + v108) & ~v107;
  v210 = v109;
  v203 = v106 | v107 | 7;
  v110 = swift_allocObject();
  *(_QWORD *)(v110 + 16) = v80;
  *(_QWORD *)(v110 + 24) = v95;
  v111 = v110 + v108;
  v213 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 32);
  v112 = v103;
  v213(v111, v103, v99);
  v212 = *(_QWORD *)(v104 + 32);
  v113 = v215;
  v114 = v209;
  ((void (*)(uint64_t, char *, uint64_t))v212)(v110 + v109, v215, v209);
  v115 = v179;
  v116 = v206;
  sub_2414B4564();
  swift_release();
  v117 = v80;
  (*(void (**)(char *, uint64_t))(v200 + 8))(v101, v80);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v116, v115);
  v221 = *(_QWORD *)(v219 + *(int *)(v99 + 36));
  v118 = v112;
  v119 = v214;
  ((void (*)(char *))v214)(v112);
  v120 = v113;
  v121 = v113;
  v122 = v216;
  v123 = v114;
  v124 = v114;
  v125 = v202;
  v202(v121, v216, v124);
  v126 = swift_allocObject();
  *(_QWORD *)(v126 + 16) = v117;
  v127 = v218;
  *(_QWORD *)(v126 + 24) = v218;
  v213(v126 + v204, v118, v99);
  ((void (*)(uint64_t, char *, uint64_t))v212)(v126 + v210, v120, v123);
  swift_bridgeObjectRetain();
  swift_checkMetadataState();
  v128 = v185;
  v129 = v207;
  sub_2414B4564();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v180 + 8))(v129, v128);
  v130 = v219;
  v221 = sub_24131A91C(v99);
  v222 = v131;
  LOBYTE(v223) = v132 & 1;
  v133 = v205;
  v119(v205, v130, v99);
  v134 = v215;
  v135 = v123;
  v125(v215, v122, v123);
  v136 = swift_allocObject();
  *(_QWORD *)(v136 + 16) = v217;
  *(_QWORD *)(v136 + 24) = v127;
  v137 = v204;
  v213(v136 + v204, v133, v99);
  v138 = v135;
  ((void (*)(uint64_t, char *, uint64_t))v212)(v136 + v210, v134, v135);
  v139 = v194;
  v140 = v195;
  v141 = v208;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v193 + 8))(v141, v140);
  v221 = v156;
  v222 = v155;
  v214(v133, v219, v99);
  v202(v134, v216, v138);
  v142 = swift_allocObject();
  v143 = v218;
  *(_QWORD *)(v142 + 16) = v217;
  *(_QWORD *)(v142 + 24) = v143;
  v213(v142 + v137, v133, v99);
  ((void (*)(uint64_t, char *, uint64_t))v212)(v142 + v210, v134, v138);
  v144 = (uint64_t)v181;
  v145 = v198;
  v146 = v191;
  v147 = v187;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v197 + 8))(v139, v145);
  v221 = v145;
  v222 = &type metadata for HorizontalMargins;
  v223 = v146;
  v224 = v147;
  swift_getOpaqueTypeConformance2();
  v148 = v184;
  v149 = v196;
  sub_2412FBF34(v144, v196, v184);
  v150 = *(void (**)(uint64_t, uint64_t))(v188 + 8);
  v150(v144, v149);
  sub_2412EEA1C(v148, v149, v201);
  return ((uint64_t (*)(uint64_t, uint64_t))v150)(v148, v149);
}

uint64_t sub_24131C910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v31 = a4;
  v7 = sub_2414B4900();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - v8;
  v26 = a3;
  v11 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, a2, a3, v10);
  v29 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v26 - v12);
  v14 = sub_2414B3514();
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v27 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v28 = (uint64_t)&v26 - v17;
  v19 = type metadata accessor for ScopePicker(0, a2, a3, v18);
  v20 = *(_QWORD *)(a1 + *(int *)(v19 + 36));
  sub_2414B4900();
  swift_bridgeObjectRetain();
  sub_2414B48DC();
  sub_24131CB7C(v20, (uint64_t)v9, *(_QWORD *)(a1 + *(int *)(v19 + 40)), a2, v26, v13);
  swift_bridgeObjectRetain();
  sub_2414B3E8C();
  v21 = MEMORY[0x242695AE8](&unk_2414BA0EC, v11);
  v22 = (uint64_t)v27;
  sub_2414B4528();
  (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v13, v11);
  v32[0] = v21;
  v32[1] = MEMORY[0x24BDECC60];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v32);
  v23 = v28;
  sub_2412FBF34(v22, v14, v28);
  v24 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v24(v22, v14);
  sub_2412EEA1C(v23, v14, v31);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v14);
}

uint64_t sub_24131CB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  *a6 = a1;
  v9 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, a4, a5, a4);
  v10 = (char *)a6 + *(int *)(v9 + 36);
  v11 = sub_2414B4900();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(_QWORD *)((char *)a6 + *(int *)(v9 + 40)) = a3;
  return result;
}

uint64_t sub_24131CC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[2];
  __int128 v38;
  char v39;
  __int128 v40;
  char v41;

  v35 = a3;
  v9 = sub_2414B4AE0();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ScopePicker.FadingView(255, a1, a2, v12);
  MEMORY[0x242695AE8](&unk_2414BA09C, v13);
  v14 = sub_2414B3388();
  v15 = sub_2414B3514();
  sub_2414B35EC();
  v16 = sub_2414B3514();
  v34 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v32 - v20;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(double *)(v22 + 32) = a4;
  *(double *)(v22 + 40) = a5;
  *(_QWORD *)&v38 = sub_2414B337C();
  *((_QWORD *)&v38 + 1) = v23;
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v14);
  sub_2414B42DC();
  swift_release();
  v38 = v40;
  v39 = v41;
  v26 = v32;
  v25 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v11, *MEMORY[0x24BDF50A0], v33);
  v27 = sub_24130CB04();
  v37[0] = v24;
  v37[1] = v27;
  v28 = MEMORY[0x24BDED308];
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v37);
  sub_2414B4588();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  swift_release();
  v36[0] = v29;
  v36[1] = MEMORY[0x24BDEDB58];
  MEMORY[0x242695AE8](v28, v16, v36);
  sub_2412FBF34((uint64_t)v18, v16, (uint64_t)v21);
  v30 = *(void (**)(char *, uint64_t))(v34 + 8);
  v30(v18, v16);
  sub_2412EEA1C((uint64_t)v21, v16, v35);
  return ((uint64_t (*)(char *, uint64_t))v30)(v21, v16);
}

uint64_t sub_24131CEA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;

  sub_2414B3250();
  *(_QWORD *)&v12 = v8;
  *((double *)&v12 + 1) = a4;
  v10 = type metadata accessor for ScopePicker.FadingView(0, a1, a2, v9);
  MEMORY[0x242695AE8](&unk_2414BA09C, v10);
  sub_2412FBF34((uint64_t)&v12, v10, (uint64_t)&v13);
  v12 = v13;
  return sub_2412EEA1C((uint64_t)&v12, v10, a3);
}

uint64_t sub_24131CF50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(v7 + 40));
  v9 = sub_2414B4900();
  MEMORY[0x242694144](v9);
  MEMORY[0x2426944BC](&v11, v6, v8, v3, MEMORY[0x24BEE1768], *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t sub_24131D010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t OpaqueTypeConformance2;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  char *v135;
  uint64_t v136;
  _QWORD v137[2];
  _QWORD v138[2];
  ValueMetadata *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];

  v130 = a2;
  v129 = sub_2414B3CD0();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v127 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v124 = v5;
  v135 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v133 = a1;
  v131 = (void (*)(char *, uint64_t *, uint64_t))sub_2414B4900();
  MEMORY[0x24BDAC7A8](v131);
  v117 = (char *)&v99 - v7;
  v8 = *(_QWORD *)(a1 + 24);
  v132 = v6;
  v10 = type metadata accessor for ScopePicker.ScopeButtons(0, v6, v8, v9);
  v119 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v118 = (char **)((char *)&v99 - v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122038);
  v12 = sub_2414B3514();
  v123 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v122 = (char *)&v99 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122040);
  v14 = sub_2414B3514();
  v15 = sub_2414B3514();
  v136 = v8;
  v17 = type metadata accessor for ScopePicker.ScopeButtonHighlight(255, v6, v8, v16);
  MEMORY[0x242695AE8](&unk_2414BA310, v17);
  v18 = sub_2414B30D0();
  v19 = sub_2414B3514();
  v116 = sub_2414B3DB4();
  v20 = sub_2414B3514();
  v21 = sub_2414B53B0();
  v22 = sub_241323968();
  v120 = v10;
  v23 = MEMORY[0x242695AE8](&unk_2414BA278, v10);
  v24 = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  v106 = v23;
  v148[0] = v23;
  v148[1] = v24;
  v25 = MEMORY[0x24BDED308];
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v148);
  v27 = sub_2412C8FC4(&qword_257122058, &qword_257122040, MEMORY[0x24BDEF370]);
  v147[0] = v26;
  v147[1] = v27;
  v28 = MEMORY[0x242695AE8](v25, v14, v147);
  v29 = sub_24130CB04();
  v146[0] = v28;
  v146[1] = v29;
  v30 = MEMORY[0x242695AE8](v25, v15, v146);
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9D0], v18);
  v145[0] = v30;
  v145[1] = v31;
  v32 = MEMORY[0x242695AE8](v25, v19, v145);
  v33 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v144[0] = v32;
  v144[1] = v33;
  v125 = v33;
  v143 = MEMORY[0x242695AE8](v25, v20, v144);
  v34 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v21, &v143);
  v139 = &type metadata for AnchorKey;
  v140 = v21;
  v114 = v21;
  v112 = v22;
  v141 = v22;
  v142 = v34;
  v35 = v133;
  v36 = v132;
  v102 = v34;
  v37 = sub_2414B3D00();
  v121 = v12;
  v38 = v134;
  v39 = sub_2414B3514();
  v104 = *(_QWORD *)(v39 - 8);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v103 = (char *)&v99 - v41;
  v42 = MEMORY[0x242695AE8](MEMORY[0x24BDF0B70], v37, v40);
  v109 = v26;
  v138[0] = v26;
  v138[1] = v42;
  v43 = MEMORY[0x242695AE8](v25, v39, v138);
  v139 = (ValueMetadata *)v39;
  v140 = v43;
  v105 = v43;
  v44 = MEMORY[0x242695A94](0, &v139, MEMORY[0x24BDF2F10], 0);
  v108 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v99 = (char *)&v99 - v45;
  v107 = v46;
  v47 = sub_2414B3514();
  v111 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v110 = (char *)&v99 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v113 = (char *)&v99 - v50;
  MEMORY[0x24BDAC7A8](v51);
  v115 = (char *)&v99 - v52;
  MEMORY[0x24BDAC7A8](v53);
  v116 = (uint64_t)&v99 - v54;
  v55 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v58 = (char *)&v99 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24131CF50(v35);
  if ((v59 & 1) != 0)
  {
    v101 = 0;
    v100 = 0xE000000000000000;
  }
  else
  {
    MEMORY[0x242694144](v131);
    v101 = (*(uint64_t (**)(uint64_t))(v136 + 16))(v36);
    v100 = v60;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v36);
  }
  v61 = *v38;
  swift_bridgeObjectRetain();
  v62 = (uint64_t)v117;
  sub_2414B48DC();
  v63 = v118;
  sub_24131DB90(v61, v62, v36, v136, v118);
  v64 = v38;
  if (qword_257120618 != -1)
    swift_once();
  v139 = (ValueMetadata *)qword_257121E38;
  v65 = v122;
  v66 = v120;
  sub_2414B42C4();
  (*(void (**)(_QWORD *, uint64_t))(v119 + 8))(v63, v66);
  v67 = v126;
  v131 = *(void (**)(char *, uint64_t *, uint64_t))(v126 + 16);
  v68 = v135;
  v131(v135, v64, v35);
  v69 = *(unsigned __int8 *)(v67 + 80);
  v70 = v35;
  v124 += (v69 + 32) & ~v69;
  v71 = (v69 + 32) & ~v69;
  v120 = v71;
  v119 = v69 | 7;
  v72 = swift_allocObject();
  v73 = v136;
  *(_QWORD *)(v72 + 16) = v36;
  *(_QWORD *)(v72 + 24) = v73;
  v126 = *(_QWORD *)(v67 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v126)(v72 + v71, v68, v70);
  sub_2414B4A44();
  v74 = v103;
  v75 = v121;
  sub_2414B43FC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v65, v75);
  v76 = v127;
  sub_2414B3CB8();
  v77 = v99;
  v78 = v105;
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v76, v129);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v74, v39);
  sub_2414B38B0();
  v79 = sub_2414B40E4();
  v81 = v80;
  LOBYTE(v75) = v82 & 1;
  v139 = (ValueMetadata *)v39;
  v140 = v78;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v84 = v110;
  v85 = v107;
  sub_2414B4330();
  sub_2412F6D78(v79, v81, v75);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v77, v85);
  v139 = (ValueMetadata *)v101;
  v140 = v100;
  sub_2412F6D88();
  v86 = sub_2414B40F0();
  v88 = v87;
  LOBYTE(v65) = v89 & 1;
  v90 = v113;
  sub_2414B34B4();
  sub_2412F6D78(v86, v88, (char)v65);
  swift_bridgeObjectRelease();
  v91 = *(void (**)(char *, uint64_t))(v111 + 8);
  v91(v84, v47);
  v92 = v135;
  v93 = v133;
  v131(v135, v134, v133);
  v94 = swift_allocObject();
  v95 = v136;
  *(_QWORD *)(v94 + 16) = v132;
  *(_QWORD *)(v94 + 24) = v95;
  ((void (*)(uint64_t, char *, uint64_t))v126)(v94 + v120, v92, v93);
  v96 = (uint64_t)v115;
  sub_2414B34FC();
  swift_release();
  v91(v90, v47);
  v137[0] = OpaqueTypeConformance2;
  v137[1] = v125;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v47, v137);
  v97 = v116;
  sub_2412FBF34(v96, v47, v116);
  v91((char *)v96, v47);
  sub_2412EEA1C(v97, v47, v130);
  return ((uint64_t (*)(uint64_t, uint64_t))v91)(v97, v47);
}

uint64_t sub_24131DB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;

  *a5 = a1;
  v7 = type metadata accessor for ScopePicker.ScopeButtons(0, a3, a4, a4);
  v8 = (char *)a5 + *(int *)(v7 + 36);
  v9 = sub_2414B4900();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  v10 = (_QWORD *)((char *)a5 + *(int *)(v7 + 40));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254383DD0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24131DC38@<X0>(char **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  _QWORD v177[2];
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _QWORD v183[3];

  v148 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
  MEMORY[0x24BDAC7A8](v9);
  v141 = (uint64_t *)((char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for ScopePicker.ScopeButtonHighlight(0, a3, a4, v11);
  v143 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v142 = (char *)&v124 - v13;
  v14 = sub_2414B4900();
  MEMORY[0x24BDAC7A8](v14);
  v126 = (char *)&v124 - v15;
  v147 = a4;
  v17 = type metadata accessor for ScopePicker.ScopeButtons(0, a3, a4, v16);
  v128 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v127 = (void (**)(char *, char *, uint64_t))((char *)&v124 - v18);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122038);
  v19 = sub_2414B3514();
  v131 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v130 = (char *)&v124 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122040);
  v160 = v19;
  v21 = sub_2414B3514();
  v133 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v132 = (char *)&v124 - v22;
  v159 = v23;
  v24 = sub_2414B3514();
  v138 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v136 = (char *)&v124 - v26;
  v27 = MEMORY[0x242695AE8](&unk_2414BA310, v12, v25);
  v144 = v12;
  v134 = v27;
  v28 = sub_2414B30D0();
  v156 = v24;
  v158 = v28;
  v29 = sub_2414B3514();
  v137 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v135 = (char *)&v124 - v30;
  sub_2414B3DB4();
  v155 = v29;
  v31 = sub_2414B3514();
  v149 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v139 = (char *)&v124 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v140 = (uint64_t)&v124 - v34;
  v35 = sub_2414B53B0();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v124 - v37;
  v39 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v129 = (char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v146 = (char *)&v124 - v43;
  v154 = v31;
  v153 = sub_2414B53B0();
  v151 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v150 = (uint64_t)&v124 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46.n128_f64[0] = MEMORY[0x24BDAC7A8](v45);
  v152 = (uint64_t)&v124 - v47;
  v48 = *a1;
  v157 = a5;
  if (!v48)
    goto LABEL_4;
  v145 = v17;
  v49 = *v148;
  v166 = *v148;
  v50 = sub_2414B4F60();
  swift_retain();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v50);
  sub_2414B5140();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v38, 1, a3) == 1)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    v17 = v145;
LABEL_4:
    v51 = v150;
    v52 = v154;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v149 + 56))(v150, 1, 1, v154, v46);
    v53 = MEMORY[0x242695AE8](&unk_2414BA278, v17);
    v54 = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
    v183[0] = v53;
    v183[1] = v54;
    v55 = MEMORY[0x24BDED308];
    v56 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v160, v183);
    v57 = sub_2412C8FC4(&qword_257122058, &qword_257122040, MEMORY[0x24BDEF370]);
    v182[0] = v56;
    v182[1] = v57;
    v58 = MEMORY[0x242695AE8](v55, v159, v182);
    v59 = sub_24130CB04();
    v181[0] = v58;
    v181[1] = v59;
    v60 = v156;
    v61 = MEMORY[0x242695AE8](v55, v156, v181);
    v62 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9D0], v158);
    v180[0] = v61;
    v180[1] = v62;
    v63 = v155;
    v64 = MEMORY[0x242695AE8](v55, v155, v180);
    v65 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v179[0] = v64;
    v179[1] = v65;
    MEMORY[0x242695AE8](v55, v52, v179);
    goto LABEL_10;
  }
  v124 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v125 = v39;
  v124(v146, v38, a3);
  swift_bridgeObjectRetain();
  v66 = (uint64_t)v126;
  sub_2414B48F4();
  v67 = v127;
  sub_24131DB90(v49, v66, a3, v147, v127);
  if (qword_257120610 != -1)
    swift_once();
  v126 = v48;
  v166 = qword_257121E30;
  v68 = v145;
  v69 = MEMORY[0x242695AE8](&unk_2414BA278, v145);
  v70 = v130;
  sub_2414B42C4();
  (*(void (**)(_QWORD *, uint64_t))(v128 + 8))(v67, v68);
  v71 = sub_2414B3E38();
  sub_2414B2F20();
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v80 = v160;
  if (qword_257120608 != -1)
    swift_once();
  LOBYTE(v166) = v71;
  v167 = v73;
  v168 = v75;
  v169 = v77;
  v170 = v79;
  v171 = 0;
  v172 = qword_257121E28;
  swift_retain();
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122068);
  v81 = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  v165[0] = v69;
  v165[1] = v81;
  v82 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v80, v165);
  sub_241323BB8();
  v83 = v132;
  sub_2414B4138();
  swift_release();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v70, v80);
  v84 = sub_2412C8FC4(&qword_257122058, &qword_257122040, MEMORY[0x24BDEF370]);
  v164[0] = v82;
  v164[1] = v84;
  v85 = v159;
  v86 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v159, v164);
  v87 = v136;
  sub_2414B42DC();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v83, v85);
  type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, a3, v147, v88);
  v89 = sub_2414B4900();
  v90 = v126;
  swift_retain();
  v91 = v129;
  MEMORY[0x242694144](v89);
  v92 = v141;
  sub_24131E810(v141);
  v93 = v142;
  *(_QWORD *)v142 = v90;
  v94 = v144;
  v124(&v93[*(int *)(v144 + 36)], v91, a3);
  sub_2412EAEA4((uint64_t)v92, (uint64_t)&v93[*(int *)(v94 + 40)], &qword_257122060);
  v95 = sub_24130CB04();
  v163[0] = v86;
  v163[1] = v95;
  v96 = v156;
  v97 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v156, v163);
  v98 = v135;
  sub_2414B4474();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v93, v94);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v87, v96);
  v99 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9D0], v158);
  v162[0] = v97;
  v162[1] = v99;
  v100 = MEMORY[0x24BDED308];
  v63 = v155;
  v101 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v155, v162);
  v102 = (uint64_t)v139;
  sub_2414B439C();
  v60 = v96;
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v98, v63);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v146, a3);
  v103 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v161[0] = v101;
  v161[1] = v103;
  v52 = v154;
  MEMORY[0x242695AE8](v100, v154, v161);
  v104 = v140;
  sub_2412FBF34(v102, v52, v140);
  v105 = v149;
  v106 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
  v106(v102, v52);
  v51 = v150;
  sub_2412EEA1C(v104, v52, v150);
  v106(v104, v52);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v51, 0, 1, v52);
  v17 = v145;
LABEL_10:
  v107 = v152;
  sub_2412F65F0(v51, v152);
  v108 = v52;
  v109 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
  v110 = v51;
  v111 = v153;
  v109(v110, v153);
  v112 = MEMORY[0x242695AE8](&unk_2414BA278, v17);
  v113 = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  v178[0] = v112;
  v178[1] = v113;
  v114 = MEMORY[0x24BDED308];
  v115 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v160, v178);
  v116 = sub_2412C8FC4(&qword_257122058, &qword_257122040, MEMORY[0x24BDEF370]);
  v177[0] = v115;
  v177[1] = v116;
  v117 = MEMORY[0x242695AE8](v114, v159, v177);
  v118 = sub_24130CB04();
  v176[0] = v117;
  v176[1] = v118;
  v119 = MEMORY[0x242695AE8](v114, v60, v176);
  v120 = MEMORY[0x242695AE8](MEMORY[0x24BDEB9D0], v158);
  v175[0] = v119;
  v175[1] = v120;
  v121 = MEMORY[0x242695AE8](v114, v63, v175);
  v122 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v174[0] = v121;
  v174[1] = v122;
  v173 = MEMORY[0x242695AE8](v114, v108, v174);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v111, &v173);
  sub_2412EEA1C(v107, v111, v157);
  return ((uint64_t (*)(uint64_t, uint64_t))v109)(v107, v111);
}

uint64_t sub_24131E810@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24131E854(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B3DCC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v11 + 104))(v14, *MEMORY[0x24BDF1140], v10, v12);
  v15 = sub_2414B3DC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v17 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, a3, a4, v16);
  result = sub_24131CF50(v17);
  if ((v19 & 1) == 0)
  {
    v20 = 1;
    if ((v15 & 1) == 0)
      v20 = -1;
    if (__OFADD__(result, v20))
    {
      __break(1u);
    }
    else
    {
      result = MEMORY[0x2426947D4](*a2, a3);
      if (!__OFSUB__(result, 1))
      {
        sub_2414B4F78();
        sub_24132662C((uint64_t)v9, v17);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24131E9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840F0);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v39[1] = a1;
  v39[0] = sub_2414B4F60();
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221D0);
  v7 = sub_2412C8FC4(&qword_2571221D8, &qword_2571221D0, MEMORY[0x24BDF43B0]);
  v41 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(v41 + 8);
  v50 = v6;
  v51 = v5;
  v52 = v7;
  v53 = v8;
  v9 = sub_2414B4810();
  v10 = sub_2414B3568();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v9);
  v13 = sub_2412C8030(&qword_2571221E0, v11, MEMORY[0x24BDED858]);
  v50 = v9;
  v51 = v10;
  v52 = v12;
  v53 = v13;
  MEMORY[0x242695A94](255, &v50, MEMORY[0x24BDF22B8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221E8);
  v14 = sub_2414B3514();
  v15 = sub_2414B3AA8();
  v50 = v9;
  v51 = v10;
  v52 = v12;
  v53 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v17 = sub_2412C8FC4(&qword_2571221F0, &qword_2571221E8, MEMORY[0x24BDF0960]);
  v55[0] = OpaqueTypeConformance2;
  v55[1] = v17;
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v55);
  v19 = sub_2412C8030(&qword_2571221F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF4D8], MEMORY[0x24BDEF4D0]);
  v50 = v14;
  v51 = v15;
  v52 = v18;
  v53 = v19;
  MEMORY[0x242695A94](255, &v50, MEMORY[0x24BDF2380], 0);
  sub_2414B3DB4();
  v20 = sub_2414B3514();
  v21 = sub_2414B3514();
  v22 = v39[0];
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v39[0]);
  v50 = v22;
  v51 = v5;
  v52 = v21;
  v53 = v23;
  v54 = v8;
  v24 = sub_2414B4954();
  v50 = v14;
  v51 = v15;
  v52 = v18;
  v53 = v19;
  v25 = swift_getOpaqueTypeConformance2();
  v26 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v49[0] = v25;
  v49[1] = v26;
  v27 = MEMORY[0x24BDED308];
  v48[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v20, v49);
  v48[1] = v26;
  v47 = MEMORY[0x242695AE8](v27, v21, v48);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v24, &v47);
  v28 = sub_2414B4804();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v39 - v33;
  v35 = v42;
  v36 = v40;
  sub_241345044(v40);
  sub_2413266B8(v36);
  sub_2412CBE78(v36, &qword_2543840F0);
  v44 = v5;
  v45 = v41;
  v46 = v35;
  sub_2414B3880();
  sub_2414B47F8();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v28);
  sub_2412FBF34((uint64_t)v31, v28, (uint64_t)v34);
  v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v37(v31, v28);
  sub_2412EEA1C((uint64_t)v34, v28, v43);
  return ((uint64_t (*)(char *, uint64_t))v37)(v34, v28);
}

uint64_t sub_24131EE24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];

  v58 = a1;
  v62 = a5;
  v56 = a3;
  v7 = type metadata accessor for ScopePicker.ScopeButtons(0, a2, a3, a4);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v61 = *(_QWORD *)(v59 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)v45 - v8;
  v63 = sub_2414B4F60();
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221D0);
  v10 = sub_2412C8FC4(&qword_2571221D8, &qword_2571221D0, MEMORY[0x24BDF43B0]);
  v11 = *(_QWORD *)(a3 + 8);
  v69 = v9;
  v70 = a2;
  v71 = v10;
  v72 = v11;
  v54 = v11;
  v12 = sub_2414B4810();
  v13 = sub_2414B3568();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v12);
  v16 = sub_2412C8030(&qword_2571221E0, v14, MEMORY[0x24BDED858]);
  v69 = v12;
  v70 = v13;
  v71 = v15;
  v72 = v16;
  MEMORY[0x242695A94](255, &v69, MEMORY[0x24BDF22B8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221E8);
  v17 = sub_2414B3514();
  v18 = sub_2414B3AA8();
  v51 = v18;
  v69 = v12;
  v70 = v13;
  v71 = v15;
  v72 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = sub_2412C8FC4(&qword_2571221F0, &qword_2571221E8, MEMORY[0x24BDF0960]);
  v74[0] = OpaqueTypeConformance2;
  v74[1] = v20;
  v52 = v17;
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v17, v74);
  v50 = v21;
  v49 = sub_2412C8030(&qword_2571221F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF4D8], MEMORY[0x24BDEF4D0]);
  v69 = v17;
  v70 = v18;
  v71 = v21;
  v72 = v49;
  MEMORY[0x242695A94](255, &v69, MEMORY[0x24BDF2380], 0);
  sub_2414B3DB4();
  v48 = sub_2414B3514();
  v22 = sub_2414B3514();
  v46 = v22;
  v23 = v63;
  v53 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v63);
  v69 = v23;
  v70 = a2;
  v24 = a2;
  v71 = v22;
  v72 = v53;
  v73 = v11;
  v25 = sub_2414B4954();
  v55 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v47 = (uint64_t)v45 - v29;
  v30 = v58;
  v68[2] = *v58;
  v31 = v56;
  v64 = a2;
  v65 = v56;
  v45[1] = swift_getKeyPath();
  v32 = v59;
  v33 = v57;
  v34 = v30;
  v35 = v60;
  (*(void (**)(char *, _QWORD *, uint64_t))(v59 + 16))(v57, v34, v60);
  v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v24;
  *(_QWORD *)(v37 + 24) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v37 + v36, v33, v35);
  swift_bridgeObjectRetain();
  v69 = v52;
  v70 = v51;
  v71 = v50;
  v72 = v49;
  v38 = swift_getOpaqueTypeConformance2();
  v39 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v68[0] = v38;
  v68[1] = v39;
  v40 = MEMORY[0x24BDED308];
  v67[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v48, v68);
  v67[1] = v39;
  v44 = MEMORY[0x242695AE8](v40, v46, v67);
  sub_2414B493C();
  v66 = v44;
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v25, &v66);
  v41 = v47;
  sub_2412FBF34((uint64_t)v27, v25, v47);
  v42 = *(void (**)(char *, uint64_t))(v55 + 8);
  v42(v27, v25);
  sub_2412EEA1C(v41, v25, v62);
  return ((uint64_t (*)(uint64_t, uint64_t))v42)(v41, v25);
}

uint64_t sub_24131F328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[2];
  _QWORD v152[4];
  _QWORD v153[2];
  _QWORD v154[2];
  uint64_t v155;
  uint64_t v156;

  v121 = a2;
  v145 = a1;
  v139 = a5;
  v7 = sub_2414B3AA8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = v7;
  v115 = v7;
  v138 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v137 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_2414B4918();
  MEMORY[0x24BDAC7A8](v136);
  v133 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_2414B361C();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B3568();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v128 = *(_QWORD *)(v13 - 8);
  v15 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = *(_QWORD *)(a3 - 8);
  v106 = *(_QWORD *)(v144 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v142 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a4;
  v146 = a4;
  v141 = type metadata accessor for ScopePicker.ScopeButtons(0, a3, a4, v20);
  v140 = *(_QWORD *)(v141 - 8);
  v103 = *(_QWORD *)(v140 + 64);
  MEMORY[0x24BDAC7A8](v141);
  v22 = (char *)&v97 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571221D0);
  v119 = *(_QWORD *)(v23 - 8);
  v24 = v23;
  v108 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v111 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_2412C8FC4(&qword_2571221D8, &qword_2571221D0, MEMORY[0x24BDF43B0]);
  v107 = *(_QWORD *)(v19 + 8);
  v154[0] = v24;
  v154[1] = a3;
  v155 = v109;
  v156 = v107;
  v26 = sub_2414B4810();
  v117 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v104 = (char *)&v97 - v28;
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v26, v27);
  v30 = sub_2412C8030(&qword_2571221E0, v14, MEMORY[0x24BDED858]);
  v154[0] = v26;
  v154[1] = v15;
  v98 = v26;
  v97 = v15;
  v155 = v29;
  v156 = v30;
  v100 = v29;
  v99 = v30;
  v31 = MEMORY[0x242695A94](0, v154, MEMORY[0x24BDF22B8], 0);
  v120 = *(_QWORD *)(v31 - 8);
  v110 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v101 = (char *)&v97 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221E8);
  v33 = sub_2414B3514();
  v125 = *(_QWORD *)(v33 - 8);
  v34 = v33;
  MEMORY[0x24BDAC7A8](v33);
  v105 = (char *)&v97 - v35;
  v154[0] = v26;
  v154[1] = v15;
  v155 = v29;
  v156 = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v102 = OpaqueTypeConformance2;
  v37 = sub_2412C8FC4(&qword_2571221F0, &qword_2571221E8, MEMORY[0x24BDF0960]);
  v153[0] = OpaqueTypeConformance2;
  v153[1] = v37;
  v38 = v34;
  v114 = v34;
  v39 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v34, v153);
  v113 = v39;
  v112 = sub_2412C8030(&qword_2571221F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF4D8], MEMORY[0x24BDEF4D0]);
  v154[0] = v38;
  v154[1] = v9;
  v155 = v39;
  v156 = v112;
  v40 = MEMORY[0x242695A94](0, v154, MEMORY[0x24BDF2380], 0);
  v122 = *(_QWORD *)(v40 - 8);
  v118 = v40;
  MEMORY[0x24BDAC7A8](v40);
  v143 = (char *)&v97 - v41;
  sub_2414B3DB4();
  v42 = sub_2414B3514();
  v43 = *(_QWORD *)(v42 - 8);
  v126 = v42;
  v130 = v43;
  MEMORY[0x24BDAC7A8](v42);
  v116 = (char *)&v97 - v44;
  v129 = sub_2414B3514();
  v131 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v123 = (char *)&v97 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v127 = (uint64_t)&v97 - v48;
  v49 = v140;
  v50 = v22;
  v51 = v121;
  v52 = v141;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v140 + 16))(v22, v121, v141, v47);
  v53 = v144;
  v54 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v142, v145, a3);
  v55 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v56 = (v103 + *(unsigned __int8 *)(v53 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v57 = swift_allocObject();
  v58 = v146;
  *(_QWORD *)(v57 + 16) = a3;
  *(_QWORD *)(v57 + 24) = v58;
  (*(void (**)(unint64_t, char *, uint64_t))(v140 + 32))(v57 + v55, v50, v52);
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v57 + v56, v54, a3);
  v147 = a3;
  v148 = v58;
  v149 = v145;
  v150 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122200);
  sub_241326B94();
  v59 = v111;
  sub_2414B47D4();
  v60 = v104;
  v61 = v108;
  sub_2414B4450();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v59, v61);
  v62 = v124;
  sub_2414B355C();
  v63 = v101;
  v64 = v98;
  v65 = v97;
  sub_2414B4198();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v62, v65);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v60, v64);
  v66 = v132;
  sub_2414B3610();
  v67 = *MEMORY[0x24BDEEB68];
  v68 = sub_2414B38C8();
  v69 = (uint64_t)v133;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 104))(v133, v67, v68);
  sub_2412C8030(&qword_257122260, (uint64_t (*)(uint64_t))MEMORY[0x24BDF48E8], MEMORY[0x24BDF48D8]);
  v70 = v105;
  v71 = v110;
  sub_2414B4240();
  sub_241326D24(v69);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v66, v135);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v63, v71);
  v72 = v137;
  sub_2414B3640();
  v73 = sub_2414B4900();
  v74 = v142;
  MEMORY[0x242694144](v73);
  sub_2414B4CE4();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v74, a3);
  v75 = v114;
  v76 = v115;
  v77 = v113;
  v78 = v112;
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v72, v76);
  v79 = v75;
  (*(void (**)(char *, uint64_t))(v125 + 8))(v70, v75);
  v80 = *(uint64_t (**)(uint64_t))(v146 + 16);
  v152[2] = v80(a3);
  v152[3] = v81;
  v154[0] = v79;
  v154[1] = v76;
  v155 = v77;
  v156 = v78;
  v82 = swift_getOpaqueTypeConformance2();
  sub_2412F6D88();
  v83 = v116;
  v84 = v118;
  v85 = v143;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v85, v84);
  strcpy((char *)v154, "scopeButton.");
  BYTE5(v154[1]) = 0;
  HIWORD(v154[1]) = -5120;
  v86 = ((uint64_t (*)(uint64_t, uint64_t))v80)(a3, v146);
  sub_2413E0D98(v86, v87);
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v88 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v152[0] = v82;
  v152[1] = v88;
  v89 = MEMORY[0x24BDED308];
  v90 = v126;
  v91 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v126, v152);
  v92 = (uint64_t)v123;
  sub_2412F6DCC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v83, v90);
  v151[0] = v91;
  v151[1] = v88;
  v93 = v129;
  MEMORY[0x242695AE8](v89, v129, v151);
  v94 = v127;
  sub_2412FBF34(v92, v93, v127);
  v95 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v95(v92, v93);
  sub_2412EEA1C(v94, v93, v139);
  return ((uint64_t (*)(uint64_t, uint64_t))v95)(v94, v93);
}

uint64_t sub_24131FEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, double);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;

  v91 = a2;
  v101 = a5;
  v99 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v95 = v8;
  v98 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for ScopePicker.ScopeButtons(0, v9, v10, v10);
  v94 = *(_QWORD *)(v96 - 8);
  v90 = *(_QWORD *)(v94 + 64);
  MEMORY[0x24BDAC7A8](v96);
  v93 = (char *)&v78 - v11;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v79);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122268);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122238);
  MEMORY[0x24BDAC7A8](v80);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122228);
  MEMORY[0x24BDAC7A8](v84);
  v86 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122218);
  MEMORY[0x24BDAC7A8](v85);
  v89 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122200);
  v19 = MEMORY[0x24BDAC7A8](v87);
  v88 = (uint64_t)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, double))(a4 + 16);
  v92 = a1;
  v100 = a3;
  v97 = a4;
  *(_QWORD *)&v102 = v21(a3, a4, v19);
  *((_QWORD *)&v102 + 1) = v22;
  sub_2412F6D88();
  v23 = sub_2414B40F0();
  v25 = v24;
  v27 = v26;
  if (qword_2571205E0 != -1)
    swift_once();
  v28 = sub_2414B4078();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_2412F6D78(v23, v25, v27 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v102 = v28;
  *((_QWORD *)&v102 + 1) = v30;
  LOBYTE(v103) = v32 & 1;
  *((_QWORD *)&v103 + 1) = v34;
  v35 = *MEMORY[0x24BDECF38];
  v36 = sub_2414B346C();
  v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v13, v35, v36);
  sub_2412C8030(qword_257122270, v37, MEMORY[0x24BDECF78]);
  if ((sub_2414B4CE4() & 1) != 0)
  {
    sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    v32 = v81;
    sub_2414B42B8();
    sub_2412CBE78((uint64_t)v13, &qword_257122240);
    sub_2412F6D78(v102, *((uint64_t *)&v102 + 1), v103);
    swift_bridgeObjectRelease();
    LOBYTE(v36) = sub_2414B3E38();
    if (qword_2571205E8 == -1)
      goto LABEL_5;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  sub_2414B2F20();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v82;
  v47 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v16, v32, v83);
  v48 = &v16[*(int *)(v80 + 36)];
  *v48 = v36;
  *((_QWORD *)v48 + 1) = v39;
  *((_QWORD *)v48 + 2) = v41;
  *((_QWORD *)v48 + 3) = v43;
  *((_QWORD *)v48 + 4) = v45;
  v48[40] = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v47);
  v49 = sub_2414B3E8C();
  v50 = (uint64_t)v86;
  if (qword_2571205F0 != -1)
    swift_once();
  sub_2414B2F20();
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;
  sub_2412DC3FC((uint64_t)v16, v50, &qword_257122238);
  v59 = v50 + *(int *)(v84 + 36);
  *(_BYTE *)v59 = v49;
  *(_QWORD *)(v59 + 8) = v52;
  *(_QWORD *)(v59 + 16) = v54;
  *(_QWORD *)(v59 + 24) = v56;
  *(_QWORD *)(v59 + 32) = v58;
  *(_BYTE *)(v59 + 40) = 0;
  sub_2412CBE78((uint64_t)v16, &qword_257122238);
  if (qword_2571205F8 != -1)
    swift_once();
  if (qword_257120600 != -1)
    swift_once();
  sub_2414B4A44();
  sub_2414B35F8();
  v60 = v89;
  sub_2412DC3FC(v50, v89, &qword_257122228);
  v61 = (_OWORD *)(v60 + *(int *)(v85 + 36));
  v62 = v107;
  v61[4] = v106;
  v61[5] = v62;
  v61[6] = v108;
  v63 = v103;
  *v61 = v102;
  v61[1] = v63;
  v64 = v105;
  v61[2] = v104;
  v61[3] = v64;
  sub_2412CBE78(v50, &qword_257122228);
  v86 = (char *)sub_2414B47C8();
  v65 = v94;
  v66 = v93;
  v67 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v91, v96);
  v68 = v99;
  v69 = v98;
  v70 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v92, v100);
  v71 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v72 = (v90 + *(unsigned __int8 *)(v68 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v73 = swift_allocObject();
  v74 = v97;
  *(_QWORD *)(v73 + 16) = v70;
  *(_QWORD *)(v73 + 24) = v74;
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v73 + v71, v66, v67);
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v73 + v72, v69, v70);
  v75 = v88;
  sub_2412DC3FC(v60, v88, &qword_257122218);
  v76 = (_QWORD *)(v75 + *(int *)(v87 + 36));
  *v76 = v86;
  v76[1] = sub_241326EC0;
  v76[2] = v73;
  sub_2412CBE78(v60, &qword_257122218);
  return sub_2412EAEA4(v75, v101, &qword_257122200);
}

uint64_t sub_241320714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScopePicker.ScopeButtons(0, v9, v10, v9);
  v11 = sub_2414B4900();
  MEMORY[0x242694144](v11);
  v12 = sub_2414B4CE4();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  v14 = 0;
  if ((v12 & 1) != 0)
  {
    result = swift_retain();
    v14 = a1;
  }
  *a3 = v14;
  return result;
}

uint64_t sub_241320804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  _QWORD v23[2];

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v8 + 16) = v9;
  *(_QWORD *)(v8 + 24) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v12 = type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule(255, v9, v10, v11);
  v13 = sub_2414B38D4();
  v14 = sub_2414B3514();
  v15 = MEMORY[0x242695AE8](&unk_2414BA3C8, v12);
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDEEC10], v13);
  v22[0] = v15;
  v22[1] = v16;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v22);
  v20 = sub_2414B337C();
  v21 = v17;
  v18 = sub_2414B3388();
  MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v18);
  sub_2412FBF34((uint64_t)&v20, v18, (uint64_t)v23);
  swift_release();
  v20 = v23[0];
  v21 = v23[1];
  sub_2412EEA1C((uint64_t)&v20, v18, a2);
  return swift_release();
}

uint64_t sub_2413209CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  double MinX;
  double v29;
  double v30;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  double v51;
  double v52;
  double v53;
  CGFloat v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;

  v49 = a5;
  v9 = type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule(255, a3, a4, a4);
  v46 = *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8);
  v47 = v9;
  v45 = sub_2414B38D4();
  v10 = sub_2414B3514();
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)v40 - v13;
  v14 = sub_2414B3484();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v40 - v19;
  type metadata accessor for CGRect(0);
  v40[1] = a1;
  sub_2414B3280();
  v21 = v51;
  v22 = v52;
  v23 = v53;
  v24 = v54;
  v43 = a3;
  type metadata accessor for ScopePicker.ScopeButtonHighlight(0, a3, a4, v25);
  v44 = a2;
  sub_2412D4710((uint64_t)v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BDED100], v14);
  v26 = sub_2414B3478();
  v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v17, v14);
  v27(v20, v14);
  if ((v26 & 1) != 0)
  {
    v55.origin.x = v21;
    v55.origin.y = v22;
    v55.size.width = v23;
    v55.size.height = v24;
    MinX = CGRectGetMinX(v55);
  }
  else
  {
    sub_2414B325C();
    v30 = v29;
    v56.origin.x = v21;
    v56.origin.y = v22;
    v56.size.width = v23;
    v56.size.height = v24;
    MinX = v30 - CGRectGetMaxX(v56);
  }
  v57.origin.x = v21;
  v57.origin.y = v22;
  v57.size.width = v23;
  v57.size.height = v24;
  MinY = CGRectGetMinY(v57);
  v58.origin.x = v21;
  v58.origin.y = v22;
  v58.size.width = v23;
  v58.size.height = v24;
  Width = CGRectGetWidth(v58);
  v59.origin.x = v21;
  v59.origin.y = v22;
  v59.size.width = v23;
  v59.size.height = v24;
  Height = CGRectGetHeight(v59);
  v51 = MinX;
  v52 = MinY;
  v53 = Width;
  v54 = Height;
  sub_2414B4ABC();
  v34 = MEMORY[0x242695AE8](&unk_2414BA3C8, v47);
  v35 = (uint64_t)v41;
  sub_2414B457C();
  swift_release();
  v36 = MEMORY[0x242695AE8](MEMORY[0x24BDEEC10], v45);
  v50[0] = v34;
  v50[1] = v36;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v50);
  v37 = v42;
  sub_2412FBF34(v35, v10, v42);
  v38 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v38(v35, v10);
  sub_2412EEA1C(v37, v10, v49);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v37, v10);
}

uint64_t sub_241320D60@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  _OWORD *v21;
  __int128 v22;
  _OWORD v24[3];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571222F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B4918();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122300);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122308);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *MEMORY[0x24BDEEB68];
  v19 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v11, v18, v19);
  sub_241327320((uint64_t)v11, (uint64_t)v8);
  *(_WORD *)&v8[*(int *)(v6 + 36)] = 256;
  sub_2412DC3FC((uint64_t)v8, (uint64_t)v14, &qword_2571222F8);
  sub_2412CBE78((uint64_t)v8, &qword_2571222F8);
  sub_241326D24((uint64_t)v11);
  sub_2412DC3FC((uint64_t)v14, (uint64_t)v17, &qword_257122300);
  v20 = (double *)&v17[*(int *)(v15 + 36)];
  *v20 = a2;
  v20[1] = a3;
  sub_2412CBE78((uint64_t)v14, &qword_257122300);
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412DC3FC((uint64_t)v17, a1, &qword_257122308);
  v21 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122310) + 36));
  v22 = v24[1];
  *v21 = v24[0];
  v21[1] = v22;
  v21[2] = v24[2];
  return sub_2412CBE78((uint64_t)v17, &qword_257122308);
}

uint64_t sub_241320FB4@<X0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_241320D60(a1, *v1, v1[1]);
}

__n128 sub_241320FC8@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2;
  unsigned __int8 v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  __n128 result;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  unint64_t v20;
  __n128 v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  unint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  v17 = sub_2414B3880();
  sub_2413210D4((uint64_t)&v18);
  v2 = v18;
  v3 = v19;
  v4 = v20;
  v16 = v21;
  v5 = v22;
  v6 = v23;
  v7 = v24;
  v8 = v25;
  v9 = v26;
  v10 = v27;
  v11 = v28;
  v15 = v29;
  LOBYTE(v18) = 1;
  v32 = v19;
  v31 = v25;
  v30 = v27;
  v12 = sub_2414B3520();
  v13 = sub_2414B3E44();
  a1->n128_u64[0] = v17;
  a1->n128_u64[1] = 0;
  a1[1].n128_u8[0] = 1;
  a1[1].n128_u64[1] = v2;
  a1[2].n128_u8[0] = v3;
  a1[2].n128_u64[1] = v4;
  result = v16;
  a1[3] = v16;
  a1[4].n128_u64[0] = v5;
  a1[4].n128_u64[1] = v6;
  a1[5].n128_u64[0] = v7;
  a1[5].n128_u8[8] = v8;
  a1[6].n128_u64[0] = v9;
  a1[6].n128_u8[8] = v10;
  a1[7].n128_u64[0] = v11;
  a1[7].n128_u64[1] = v15;
  a1[8].n128_u64[0] = v12;
  a1[8].n128_u8[8] = v13;
  return result;
}

double sub_2413210D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257122088);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2414B8AC0;
  sub_2414B463C();
  sub_2414B466C();
  swift_release();
  *(_QWORD *)(v2 + 32) = sub_2414B49C0();
  *(_QWORD *)(v2 + 40) = v3;
  sub_2414B463C();
  *(_QWORD *)(v2 + 48) = sub_2414B49C0();
  *(_QWORD *)(v2 + 56) = v4;
  sub_2414B463C();
  *(_QWORD *)(v2 + 64) = sub_2414B49C0();
  *(_QWORD *)(v2 + 72) = v5;
  MEMORY[0x24269424C](v2);
  sub_2414B4B70();
  sub_2414B4B7C();
  sub_2414B33B8();
  sub_2414B4A44();
  sub_2414B31B4();
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  result = *(double *)&v15;
  *(_OWORD *)(a1 + 88) = v15;
  return result;
}

double sub_241321248@<D0>(__n128 *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_241320FC8(a1).n128_u64[0];
  return result;
}

uint64_t sub_241321258()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2414B3F58();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x24BDF18E8], v3, v5);
  v8 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_2414B3EF8();
  v9 = sub_2414B3F10();
  sub_2412CBE78((uint64_t)v2, &qword_254381398);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_257121E00 = v9;
  return result;
}

void sub_241321378()
{
  qword_257121E08 = 0x4028000000000000;
}

void sub_241321388()
{
  qword_257121E10 = 0x4014000000000000;
}

void sub_241321398()
{
  qword_257121E18 = 0x4046000000000000;
}

void sub_2413213A8()
{
  qword_257121E20 = 0x4040000000000000;
}

uint64_t sub_2413213B8()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_2414B340C();
  MEMORY[0x24BDAC7A8](v0);
  sub_2414B3400();
  result = sub_2414B31C0();
  qword_257121E28 = result;
  return result;
}

uint64_t sub_241321430()
{
  uint64_t result;

  sub_2414B4654();
  result = sub_2414B31C0();
  qword_257121E30 = result;
  return result;
}

uint64_t sub_241321470()
{
  uint64_t result;

  sub_2414B3B38();
  result = sub_2414B31C0();
  qword_257121E38 = result;
  return result;
}

uint64_t sub_2413214B0()
{
  sub_2412C8FC4(&qword_2571221C0, &qword_2571221C8, MEMORY[0x24BEE4AC8]);
  return sub_2414B32EC();
}

_QWORD *sub_241321508(_QWORD *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = result;
  v3 = *result;
  if (!*result)
  {
    result = a2(&v4);
    v3 = v4;
  }
  *v2 = v3;
  return result;
}

BOOL sub_241321550(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void sub_24132157C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

uint64_t sub_24132158C()
{
  sub_2413217B8();
  return sub_2414B3340();
}

uint64_t sub_2413215DC()
{
  uint64_t v1;

  sub_241323EBC();
  sub_2414B3838();
  return v1;
}

uint64_t MCUINamespace<A>.scopePickerHorizontalMargins(_:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, v6, v8);
  swift_getKeyPath();
  if ((a2 & 1) != 0)
    v11 = 0;
  else
    v11 = a1;
  v13[1] = v11;
  v13[2] = v11;
  v14 = a2 & 1;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_2413216FC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  sub_241323EBC();
  sub_2414B3838();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_241321750()
{
  sub_241323EBC();
  return sub_2414B3844();
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker.ScopeButtonsWithHighlight);
}

uint64_t type metadata accessor for ScopePicker.FadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker.FadingView);
}

unint64_t sub_2413217B8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_257121E48;
  if (!qword_257121E48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E40);
    v2 = sub_24132181C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257121E48);
  }
  return result;
}

unint64_t sub_24132181C()
{
  unint64_t result;

  result = qword_257121E50;
  if (!qword_257121E50)
  {
    result = MEMORY[0x242695AE8](&unk_2414BA074, &type metadata for HorizontalMargins);
    atomic_store(result, (unint64_t *)&qword_257121E50);
  }
  return result;
}

uint64_t sub_241321860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  swift_release();
  v9 = sub_2414B4900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v9 + 32), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v8 + *(int *)(v6 + 48);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121E68);
  swift_release();
  sub_24132196C(*(_QWORD *)(v8 + *(int *)(v6 + 52)), *(_QWORD *)(v8 + *(int *)(v6 + 52) + 8), *(unsigned __int8 *)(v8 + *(int *)(v6 + 52) + 16), *(_BYTE *)(v8 + *(int *)(v6 + 52) + 17));
  return swift_deallocObject();
}

uint64_t sub_24132196C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_241321978(uint64_t a1)
{
  return sub_241326AA4(a1, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ScopePicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24131B7F0);
}

uint64_t sub_24132198C()
{
  return sub_2412DC484(&qword_257121E80, &qword_257121E88, (uint64_t (*)(void))sub_2413219B0, MEMORY[0x24BDF1050]);
}

unint64_t sub_2413219B0()
{
  unint64_t result;

  result = qword_257121E90;
  if (!qword_257121E90)
  {
    result = MEMORY[0x242695AE8](&unk_2414CBF50, &type metadata for MinimumLayoutMarginsReader);
    atomic_store(result, (unint64_t *)&qword_257121E90);
  }
  return result;
}

uint64_t sub_2413219F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ScopePickerItem.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_241321A30()
{
  unint64_t v0;
  unint64_t v1;

  sub_2414B4900();
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, &qword_257121F20, (uint64_t (*)(uint64_t))type metadata accessor for MinimumLayoutMargins, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF51D0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_241321AF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, unint64_t, uint64_t);
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(unint64_t, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v42 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v42 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 16) & ~(unint64_t)v6) + *(_QWORD *)(v5 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = (v10 & 0xF8) + 15;
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (v10 | v6) & 0x100000;
  if ((v11 | v6) != 7
    || v14 != 0
    || (v13 & 0xFFFFFFFFFFFFFFF8)
     + ((v12 + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
     + 26 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v24 = (uint64_t *)(v17 + (((v11 | v6) + 16) & ~(v11 | v6)));
    swift_retain();
  }
  else
  {
    v39 = ~v11;
    v40 = v8;
    *a1 = *a2;
    v41 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    v18 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v20 = ((unint64_t)v18 + v6 + 8) & ~(unint64_t)v6;
    v21 = ((unint64_t)v19 + v6 + 8) & ~(unint64_t)v6;
    v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v23 = v20;
    v24 = a1;
    v22(v23, v21, v42);
    v25 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v26 = *v25;
    v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
    *v28 = *v27;
    v29 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v31 = ((unint64_t)v29 + v12) & v39;
    v32 = ((unint64_t)v30 + v12) & v39;
    v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v31, v32, v40);
    *(_QWORD *)((v13 + v31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + v32) & 0xFFFFFFFFFFFFF8);
    v34 = v31 + v41;
    v35 = *(_QWORD *)(v32 + v41);
    v36 = *(_QWORD *)(v32 + v41 + 8);
    LOBYTE(v31) = *(_BYTE *)(v32 + v41 + 17);
    v37 = *(unsigned __int8 *)(v32 + v41 + 16);
    swift_retain();
    sub_241321D28(v35, v36, v37, v31);
    *(_QWORD *)v34 = v35;
    *(_QWORD *)(v34 + 8) = v36;
    *(_BYTE *)(v34 + 16) = v37;
    *(_BYTE *)(v34 + 17) = v31;
  }
  return v24;
}

uint64_t sub_241321D28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_241321D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1 + 15;
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(((v4 & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6);
  v7 = ((a1 + *(_QWORD *)(v5 + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = ((((v7 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v11, v8);
  v12 = *(_QWORD *)(v9 + 64) + 7;
  swift_release();
  return sub_24132196C(*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF8) + v11 + 8), *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF8) + v11 + 16), *(unsigned __int8 *)((v12 & 0xFFFFFFFFFFFFFFF8) + v11 + 24), *(_BYTE *)((v12 & 0xFFFFFFFFFFFFFFF8) + v11 + 25));
}

_QWORD *sub_241321E2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_retain();
  v12(v10, v11, v7);
  v13 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  v23 = v22 + 15;
  v24 = (unint64_t)v18 + v22 + 15;
  v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  v26 = v24 & v25;
  v27 = ((unint64_t)v19 + v23) & v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 16))(v24 & v25, v27, v20);
  v28 = *(_QWORD *)(v21 + 64) + 7;
  *(_QWORD *)((v28 + v26) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v28 + v27) & 0xFFFFFFFFFFFFF8);
  v29 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
  v30 = v29 + v26;
  v31 = v29 + v27;
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  LOBYTE(v19) = *(_BYTE *)(v31 + 17);
  v34 = *(unsigned __int8 *)(v31 + 16);
  swift_retain();
  sub_241321D28(v32, v33, v34, (char)v19);
  *(_QWORD *)v30 = v32;
  *(_QWORD *)(v30 + 8) = v33;
  *(_BYTE *)(v30 + 16) = v34;
  *(_BYTE *)(v30 + 17) = (_BYTE)v19;
  return a1;
}

_QWORD *sub_241321FD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (unint64_t)a2 + v10;
  v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v11 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 &= 0xFFFFFFFFFFFFF8uLL;
  *v14 = *(_QWORD *)v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  v20 = v19 + 15;
  v21 = (unint64_t)v15 + v19 + 15;
  v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 & v22;
  v24 = ((unint64_t)v16 + v20) & v22;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 24))(v21 & v22, v24, v17);
  v25 = *(_QWORD *)(v18 + 64) + 7;
  *(_QWORD *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v25 + v24) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v26 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
  v27 = v26 + v23;
  v28 = v26 + v24;
  v29 = *(_QWORD *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  LOBYTE(v18) = *(_BYTE *)(v28 + 17);
  LOBYTE(v25) = *(_BYTE *)(v28 + 16);
  sub_241321D28(*(_QWORD *)v28, v30, v25, v18);
  v31 = *(_QWORD *)v27;
  v32 = *(_QWORD *)(v27 + 8);
  v33 = *(_BYTE *)(v27 + 17);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(v27 + 8) = v30;
  v34 = *(unsigned __int8 *)(v27 + 16);
  *(_BYTE *)(v27 + 16) = v25;
  *(_BYTE *)(v27 + 17) = v18;
  sub_24132196C(v31, v32, v34, v33);
  return a1;
}

_QWORD *sub_2413221A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int16 v28;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v8 + 8) & ~v8, ((unint64_t)v6 + v8 + 8) & ~v8);
  v9 = ((v8 + 16) & ~v8) + *(_QWORD *)(v7 + 64) + 7;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = v18 + 15;
  v20 = (unint64_t)v14 + v18 + 15;
  v21 = ~v18 & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & v21;
  v23 = ((unint64_t)v15 + v19) & v21;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))(v20 & v21, v23, v16);
  v24 = *(_QWORD *)(v17 + 64) + 7;
  *(_QWORD *)((v24 + v22) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v24 + v23) & 0xFFFFFFFFFFFFF8);
  v25 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
  v26 = v25 + v22;
  v27 = v25 + v23;
  v28 = *(_WORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = v28;
  return a1;
}

_QWORD *sub_2413222E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_bridgeObjectRelease();
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_bridgeObjectRelease();
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  v20 = v19 + 15;
  v21 = (unint64_t)v15 + v19 + 15;
  v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 & v22;
  v24 = ((unint64_t)v16 + v20) & v22;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 40))(v21 & v22, v24, v17);
  v25 = *(_QWORD *)(v18 + 64) + 7;
  *(_QWORD *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v25 + v24) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v26 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
  v27 = v26 + v23;
  v28 = v26 + v24;
  v29 = *(_BYTE *)(v28 + 16);
  v30 = *(_BYTE *)(v28 + 17);
  v31 = *(_QWORD *)v27;
  v32 = *(_QWORD *)(v27 + 8);
  v33 = *(_BYTE *)(v27 + 17);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v34 = *(unsigned __int8 *)(v27 + 16);
  *(_BYTE *)(v27 + 16) = v29;
  *(_BYTE *)(v27 + 17) = v30;
  sub_24132196C(v31, v32, v34, v33);
  return a1;
}

uint64_t sub_24132247C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unsigned int v25;
  int v26;
  int v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t (*v32)(unint64_t, uint64_t, uint64_t);
  unint64_t v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = v9;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = ((v15 + 16) & ~v15) + *(_QWORD *)(v6 + 64);
  v17 = *(_DWORD *)(v10 + 80) & 0xF8;
  v18 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  v19 = v17 + 15;
  v20 = *(_QWORD *)(v10 + 64) + 7;
  if (a2 <= v13)
    goto LABEL_26;
  v21 = (v20 & 0xFFFFFFFFFFFFFFF8)
      + ((v19 + ((((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v18)
      + 26;
  v22 = 8 * v21;
  if (v21 > 3)
    goto LABEL_13;
  v25 = ((a2 - v13 + ~(-1 << v22)) >> v22) + 1;
  if (HIWORD(v25))
  {
    v23 = *(_DWORD *)((char *)a1 + v21);
    if (v23)
      goto LABEL_21;
  }
  else
  {
    if (v25 <= 0xFF)
    {
      if (v25 < 2)
        goto LABEL_26;
LABEL_13:
      v23 = *((unsigned __int8 *)a1 + v21);
      if (!*((_BYTE *)a1 + v21))
        goto LABEL_26;
LABEL_21:
      v26 = (v23 - 1) << v22;
      if (v21 <= 3)
      {
        v27 = *a1;
      }
      else
      {
        v26 = 0;
        v27 = *(_DWORD *)a1;
      }
      return v13 + (v27 | v26) + 1;
    }
    v23 = *(unsigned __int16 *)((char *)a1 + v21);
    if (*(unsigned __int16 *)((char *)a1 + v21))
      goto LABEL_21;
  }
LABEL_26:
  if (v8 >= v12)
  {
    v30 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v7 & 0x80000000) == 0)
    {
      v29 = *v30;
      goto LABEL_31;
    }
    v31 = ((unint64_t)v30 + v15 + 8) & ~v15;
    v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v11 = v7;
    v14 = v5;
    return v32(v31, v11, v14);
  }
  v28 = (unint64_t *)(((unint64_t)a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v13 == 0x7FFFFFFF)
  {
    v29 = *v28;
LABEL_31:
    if (v29 >= 0xFFFFFFFF)
      LODWORD(v29) = -1;
    return (v29 + 1);
  }
  v31 = (v19 + (((((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v18;
  if (v11 >= 0x7FFFFFFE)
  {
    v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
    return v32(v31, v11, v14);
  }
  v33 = *(_QWORD *)((v20 + v31) & 0xFFFFFFFFFFFFF8);
  if (v33 >= 0xFFFFFFFF)
    LODWORD(v33) = -1;
  if ((v33 + 1) >= 2)
    return v33;
  else
    return 0;
}

void sub_2413226B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257121E60) - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFEu)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = v10;
  v12 = ((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + (((*(_DWORD *)(v9 + 80) & 0xF8)
        + 15
        + ((((((((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
              + *(_QWORD *)(v7 + 64)
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(*(_DWORD *)(v9 + 80) & 0xF8) & 0xFFFFFFFFFFFFFFF8)
      + 26;
  if (a3 <= v11)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    bzero(a1, v12);
    if (v12 < 4)
      *a1 = v14 & ~(-1 << (8 * v12));
    else
      *(_DWORD *)a1 = v14;
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t sub_241322A5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  unint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(255, *a1, v5, a4);
  v7 = sub_2414B3514();
  v58[0] = MEMORY[0x242695AE8](&unk_2414BA0EC, v6);
  v58[1] = MEMORY[0x24BDECC60];
  v8 = MEMORY[0x24BDED308];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v58);
  v9 = sub_2414B2F50();
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v9);
  v50 = v9;
  v51 = (ValueMetadata *)v10;
  v11 = MEMORY[0x24BDF26D8];
  v12 = MEMORY[0x242695A94](255, &v50, MEMORY[0x24BDF26D8], 0);
  v50 = v9;
  v51 = (ValueMetadata *)v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v50 = v12;
  v51 = (ValueMetadata *)OpaqueTypeConformance2;
  MEMORY[0x242695A94](255, &v50, v11, 0);
  v15 = type metadata accessor for ScopePicker.FadingView(255, v4, v5, v14);
  MEMORY[0x242695AE8](&unk_2414BA09C, v15);
  v16 = sub_2414B3388();
  v17 = sub_2414B3514();
  sub_2414B35EC();
  v18 = sub_2414B3514();
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v16);
  v20 = sub_24130CB04();
  v57[0] = v19;
  v57[1] = v20;
  v56[0] = MEMORY[0x242695AE8](v8, v17, v57);
  v56[1] = MEMORY[0x24BDEDB58];
  MEMORY[0x242695AE8](v8, v18, v56);
  v21 = sub_2414B3604();
  v22 = sub_2414B3514();
  v23 = sub_2414B3514();
  v50 = v12;
  v51 = (ValueMetadata *)OpaqueTypeConformance2;
  v24 = swift_getOpaqueTypeConformance2();
  v25 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v21);
  v55[0] = v24;
  v55[1] = v25;
  v54[0] = MEMORY[0x242695AE8](v8, v22, v55);
  v54[1] = MEMORY[0x24BDF0390];
  v26 = MEMORY[0x242695AE8](v8, v23, v54);
  v27 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8);
  v50 = v23;
  v51 = (ValueMetadata *)v4;
  v52 = v26;
  v53 = v27;
  v28 = MEMORY[0x24BDF3908];
  v29 = MEMORY[0x242695A94](255, &v50, MEMORY[0x24BDF3908], 0);
  v30 = sub_2414B4F60();
  v50 = v23;
  v51 = (ValueMetadata *)v4;
  v52 = v26;
  v53 = v27;
  v31 = swift_getOpaqueTypeConformance2();
  v49 = v27;
  v32 = MEMORY[0x242695AE8](MEMORY[0x24BEE12C0], v30, &v49);
  v50 = v29;
  v51 = (ValueMetadata *)v30;
  v52 = v31;
  v53 = v32;
  v33 = MEMORY[0x242695A94](255, &v50, v28, 0);
  v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E40);
  v50 = v29;
  v51 = (ValueMetadata *)v30;
  v52 = v31;
  v53 = v32;
  v35 = swift_getOpaqueTypeConformance2();
  v36 = sub_2413217B8();
  v50 = v33;
  v51 = (ValueMetadata *)v34;
  v52 = v35;
  v53 = v36;
  v37 = MEMORY[0x242695A94](255, &v50, v28, 0);
  v50 = v33;
  v51 = (ValueMetadata *)v34;
  v52 = v35;
  v53 = v36;
  v38 = swift_getOpaqueTypeConformance2();
  v39 = sub_24132181C();
  v50 = v37;
  v51 = &type metadata for HorizontalMargins;
  v52 = v38;
  v53 = v39;
  MEMORY[0x242695A94](255, &v50, v28, 0);
  v50 = v37;
  v51 = &type metadata for HorizontalMargins;
  v52 = v38;
  v53 = v39;
  swift_getOpaqueTypeConformance2();
  v40 = sub_2414B35D4();
  v41 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121E58);
  v42 = sub_2414B3514();
  sub_2414B3DB4();
  v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v44 = sub_2414B3514();
  v48[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEDA10], v40);
  v48[1] = MEMORY[0x24BDECC60];
  v47[0] = MEMORY[0x242695AE8](v8, v41, v48);
  v47[1] = sub_2412C8FC4(qword_257121E98, &qword_257121E58, MEMORY[0x24BDEF370]);
  v46[0] = MEMORY[0x242695AE8](v8, v42, v47);
  v46[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, v43, MEMORY[0x24BDF1078]);
  return MEMORY[0x242695AE8](v8, v44, v46);
}

uint64_t sub_241322F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121F28);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8FC4(qword_257121F30, &qword_257121F28, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_241322FA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B4900();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_241323020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, unint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v9 = v6 + 8;
  v10 = ((v7 + 16) & ~v7) + *(_QWORD *)(v5 + 64) + 7;
  v11 = v6 & 0x100000;
  v12 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v11 != 0 || ((v10 + (v8 & (v7 + 8))) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v12 + (v8 & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v15 = ~v7;
    v16 = (_QWORD *)(v8 & ((unint64_t)a1 + 15));
    v17 = (_QWORD *)(v8 & ((unint64_t)a2 + 15));
    *v16 = *v17;
    v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v20 = ((unint64_t)v18 + v9) & v15;
    v21 = ((unint64_t)v19 + v9) & v15;
    v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v22(v20, v21, v4);
    *(_QWORD *)(((unint64_t)v16 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241323154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))((v6 + ((((a1 + (v6 | 7) + 8) & ~(v6 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v4);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2413231F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 8;
  v8 = (_QWORD *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  v16 = (_QWORD *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  *v16 = *v8;
  v9 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + v6 + 8) & ~v6;
  v12 = ((unint64_t)v10 + v6 + 8) & ~v6;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v13(v11, v12, v4);
  v14 = *(_QWORD *)(v5 + 64) + ((v6 + 16) & ~v6) + 7;
  *(_QWORD *)(((unint64_t)v16 + v14) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v14) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_241323300(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 8;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *v10 = *v11;
  swift_retain();
  swift_release();
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  v14 = *(_QWORD *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(_QWORD *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_241323420(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 8;
  v7 = (_QWORD *)(((unint64_t)a1 + v6) & ~(v5 | 7));
  v8 = (_QWORD *)(((unint64_t)a2 + v6) & ~(v5 | 7));
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 8) & ~v5, ((unint64_t)v10 + v5 + 8) & ~v5);
  v11 = *(_QWORD *)(v4 + 64) + ((v5 + 16) & ~v5) + 7;
  *(_QWORD *)(((unint64_t)v7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_2413234E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 8;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *v10 = *v11;
  swift_release();
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  v14 = *(_QWORD *)(v7 + 64) + ((v8 + 16) & ~v8) + 7;
  *(_QWORD *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413235DC(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (v5 >= 0)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v8 | 7;
  v10 = v8 + 8;
  if (v7 >= a2)
  {
    if (v7 == 0x7FFFFFFF)
    {
      v15 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))((v10
                                                                    + (((((unint64_t)a1 + v9 + 8) & ~v9) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v8 + 16) & ~v8) + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_241323680 + 4 * byte_2414B9EAE[v13]))();
  }
}

void sub_24132371C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v7 >= 0)
    v9 = 0x7FFFFFFF;
  else
    v9 = v8;
  v10 = *(unsigned __int8 *)(v6 + 80);
  if (v9 >= a3)
  {
    v14 = 0;
    if (a2 <= v9)
      goto LABEL_20;
  }
  else
  {
    v11 = a3 - v9;
    if (((*(_DWORD *)(v6 + 64)
         + (((_DWORD)v10 + 8) & ~(v10 | 7))
         + (((_DWORD)v10 + 16) & ~(_DWORD)v10)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = v11 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v9)
LABEL_20:
      __asm { BR              X16 }
  }
  if (((*(_DWORD *)(v6 + 64) + (((_DWORD)v10 + 8) & ~(v10 | 7)) + (((_DWORD)v10 + 16) & ~(_DWORD)v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v9 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + ((v10 + 8) & ~(v10 | 7)) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_241323840()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413238C0);
}

void sub_241323848(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241323850);
  JUMPOUT(0x2413238C0);
}

void sub_24132389C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413238C0);
}

void sub_2413238A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413238C0);
}

uint64_t sub_2413238AC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)(v8 + v9) = 0;
  if (!a1)
    JUMPOUT(0x2413238C0);
  if (v4 == 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x2413238BCLL);
    JUMPOUT(0x2413238B8);
  }
  return (*(uint64_t (**)(unint64_t))(v3 + 56))((v5
                                                                + ((((v8 + v6 + 8) & v7) + 15) & 0xFFFFFFFFFFFFFFF8)) & a2);
}

ValueMetadata *type metadata accessor for HorizontalMargins()
{
  return &type metadata for HorizontalMargins;
}

uint64_t sub_2413238E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24132391C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ScopePicker.ScopeButtons(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker.ScopeButtons);
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonHighlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker.ScopeButtonHighlight);
}

unint64_t sub_241323968()
{
  unint64_t result;

  result = qword_257122048;
  if (!qword_257122048)
  {
    result = MEMORY[0x242695AE8](&unk_2414BA2C8, &type metadata for AnchorKey);
    atomic_store(result, (unint64_t *)&qword_257122048);
  }
  return result;
}

uint64_t sub_2413239B0@<X0>(char **a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, v6, v7, a2)- 8)+ 80);
  return sub_24131DC38(a1, (uint64_t *)(v3 + ((v8 + 32) & ~v8)), v6, v7, a3);
}

uint64_t objectdestroy_4Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(v6 + 36);
  swift_release();
  swift_release();
  v10 = sub_2414B4900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v10 + 32), v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_241323ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScopePicker.ScopeButtonsWithHighlight(0, v6, v7, a4)- 8)+ 80);
  return sub_24131E854(a1, (_QWORD *)(v4 + ((v8 + 32) & ~v8)), v6, v7);
}

uint64_t sub_241323B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_2414B4900();
  return sub_2414B48D0();
}

unint64_t sub_241323BB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122070;
  if (!qword_257122070)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122068);
    v2[0] = sub_2412DC484(&qword_257122078, &qword_257122080, (uint64_t (*)(void))sub_2413002F4, MEMORY[0x24BDECC60]);
    v2[1] = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122070);
  }
  return result;
}

uint64_t sub_241323C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24131C910(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_241323C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24131CC00(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_241323C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241323E00(1, a2, a3, a4);
}

uint64_t sub_241323CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241323E00(0, a2, a3, a4);
}

uint64_t objectdestroy_22Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = sub_2414B3544();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = v4 + v8;
  swift_release();
  swift_release();
  v14 = sub_2414B4900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v13 + *(int *)(v14 + 32), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v13 + *(int *)(v6 + 48);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121E60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121E68);
  swift_release();
  sub_24132196C(*(_QWORD *)(v13 + *(int *)(v6 + 52)), *(_QWORD *)(v13 + *(int *)(v6 + 52) + 8), *(unsigned __int8 *)(v13 + *(int *)(v6 + 52) + 16), *(_BYTE *)(v13 + *(int *)(v6 + 52) + 17));
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v4 + v12, v10);
  return swift_deallocObject();
}

uint64_t sub_241323E00(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for ScopePicker(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_2414B3544() - 8) + 80);
  return sub_24131ACDC(v4 + ((v8 + v9 + v10) & ~v10), a1, v6);
}

uint64_t sub_241323E84()
{
  uint64_t *v0;

  return sub_24131AF18(v0[4], v0[5], v0[2]);
}

uint64_t sub_241323EA0()
{
  return swift_deallocObject();
}

uint64_t sub_241323EB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24131CEA8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 40));
}

unint64_t sub_241323EBC()
{
  unint64_t result;

  result = qword_257122098[0];
  if (!qword_257122098[0])
  {
    result = MEMORY[0x242695AE8](&unk_2414BA240, &type metadata for ScopePickerCustomMarginsKey);
    atomic_store(result, qword_257122098);
  }
  return result;
}

uint64_t sub_241323F00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241323F24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ScopePickerCustomMarginsKey()
{
  return &type metadata for ScopePickerCustomMarginsKey;
}

void sub_241323F5C()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, (unint64_t *)&qword_254380B70, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_24132400C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  unsigned int v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(sub_2414B3484() - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  v13 = v9 + v12;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v10 + 64);
  v15 = (v11 | v7) & 0x100000;
  v16 = *a2;
  *a1 = *a2;
  if ((v12 | v7) != 7
    || v15 != 0
    || v14 + ((v13 + ((v7 + 8) & ~(unint64_t)v7)) & ~v12) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v16 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_21:
    swift_retain();
    return a1;
  }
  v19 = ~v12;
  v20 = (char *)a2 + v8;
  v21 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v22 = (unint64_t)(v20 + 8) & ~v8;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v23(v21, v22, v5);
  v24 = (_QWORD *)((v21 + v13) & v19);
  v25 = (_QWORD *)((v22 + v13) & v19);
  v26 = *((unsigned __int8 *)v25 + v14);
  if (v26 >= 2)
  {
    if (v14 <= 3)
      v27 = v14;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 != 1)
  {
    *v24 = *v25;
    *((_BYTE *)v24 + v14) = 0;
    goto LABEL_21;
  }
  (*(void (**)(uint64_t))(v10 + 16))((v21 + v13) & v19);
  *((_BYTE *)v24 + v14) = 1;
  return a1;
}

uint64_t sub_2413241CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;

  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_2414B3484() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (v5 + v6 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *(unsigned __int8 *)(v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    return (*(uint64_t (**)(void))(v7 + 8))();
  else
    return swift_release();
}

_QWORD *sub_2413242EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = *(_QWORD *)(sub_2414B3484() - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v13 = v10 + v12;
  v14 = (_QWORD *)((v10 + v12 + v7) & ~v12);
  v15 = (_QWORD *)((v13 + v8) & ~v12);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v11 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v11 + 16))(v14);
    v19 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v19 = 0;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_QWORD *sub_241324440(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_2414B3484();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v10 + v13 + v8) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + v9) & ~v13);
  if (v14 != v15)
  {
    v16 = v11;
    if (*(_QWORD *)(v12 + 64) <= 8uLL)
      v17 = 8;
    else
      v17 = *(_QWORD *)(v12 + 64);
    v18 = *((unsigned __int8 *)v14 + v17);
    if (v18 >= 2)
    {
      if (v17 <= 3)
        v19 = v17;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
    else
      swift_release();
    v20 = *((unsigned __int8 *)v15 + v17);
    if (v20 >= 2)
    {
      if (v17 <= 3)
        v21 = v17;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v14, v15, v16);
      *((_BYTE *)v14 + v17) = 1;
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + v17) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_241324648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = *(_QWORD *)(sub_2414B3484() - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = (_QWORD *)((v8 + v10 + v6) & ~v10);
  v12 = (_QWORD *)((v8 + v10 + v7) & ~v10);
  if (*(_QWORD *)(v9 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v9 + 64);
  v14 = *((unsigned __int8 *)v12 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 == 1)
  {
    (*(void (**)(_QWORD *))(v9 + 32))(v11);
    v16 = 1;
  }
  else
  {
    v16 = 0;
    *v11 = *v12;
  }
  *((_BYTE *)v11 + v13) = v16;
  return a1;
}

_QWORD *sub_241324788(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_2414B3484();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v10 + v13 + v8) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + v9) & ~v13);
  if (v14 != v15)
  {
    v16 = v11;
    if (*(_QWORD *)(v12 + 64) <= 8uLL)
      v17 = 8;
    else
      v17 = *(_QWORD *)(v12 + 64);
    v18 = *((unsigned __int8 *)v14 + v17);
    if (v18 >= 2)
    {
      if (v17 <= 3)
        v19 = v17;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
    else
      swift_release();
    v20 = *((unsigned __int8 *)v15 + v17);
    if (v20 >= 2)
    {
      if (v17 <= 3)
        v21 = v17;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 32))(v14, v15, v16);
      v22 = 1;
    }
    else
    {
      v22 = 0;
      *v14 = *v15;
    }
    *((_BYTE *)v14 + v17) = v22;
  }
  return a1;
}

uint64_t sub_241324984(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(sub_2414B3484() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10 + ((((v11 + 8) & ~v11) + *(_QWORD *)(v6 + 64) + v12) & ~v12) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(_WORD *)((char *)a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if ((v7 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(((unint64_t)a1 + v11 + 8) & ~v11, v7, v5);
      v19 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v19) = -1;
      return (v19 + 1);
    }
  }
  v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((_BYTE *)a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_241324B40(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2414B3484() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((((*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(_QWORD *)(v7 + 64)
        + v11) & ~v11)
      + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_241324D88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *type metadata accessor for AnchorKey()
{
  return &type metadata for AnchorKey;
}

void sub_241324DF0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2414B4900();
  if (v0 <= 0x3F)
  {
    sub_2413260E8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_241324E88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, unint64_t, uint64_t);
  _QWORD *v33;
  _QWORD *v34;
  unsigned int v35;
  uint64_t v36;
  size_t __n;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v43 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 | 7;
  v9 = v6 + 8;
  v10 = ((v7 + 16) & ~v7) + *(_QWORD *)(v5 + 64);
  v11 = sub_2414B3B74();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = *(_DWORD *)(v12 + 80);
  v13 = *(_DWORD *)(v12 + 84);
  v15 = v14 & 0xF8 | 7;
  v16 = a1;
  v41 = v12;
  v42 = v10;
  v17 = *(_QWORD *)(v12 + 64);
  if (!v13)
    ++v17;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  v19 = (v14 | v6) & 0x100000;
  v20 = *a2;
  *v16 = *a2;
  if ((v15 | v6) != 7
    || v19 != 0
    || v18 + ((v10 + v15 + ((v6 + 8) & ~(v6 | 7))) & (unint64_t)~v15) + 1 > 0x18)
  {
    v23 = v20 + (((v15 | v6) + 16) & ~(v15 | v6));
    swift_retain();
  }
  else
  {
    __n = v17;
    v39 = v11;
    v24 = ~(unint64_t)v6;
    v25 = ~v15;
    v40 = v16;
    v26 = (_QWORD *)(((unint64_t)v16 + v8 + 8) & ~v8);
    v27 = (_QWORD *)(((unint64_t)a2 + v8 + 8) & ~v8);
    *v26 = *v27;
    v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = ((unint64_t)v28 + v9) & ~v7;
    v31 = ((unint64_t)v29 + v9) & v24;
    v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v32(v30, v31, v43);
    v33 = (_QWORD *)(((unint64_t)v26 + v42 + v15) & v25);
    v34 = (_QWORD *)(((unint64_t)v27 + v42 + v15) & v25);
    v35 = *((unsigned __int8 *)v34 + v18);
    if (v35 >= 2)
    {
      if (v18 <= 3)
        v36 = v18;
      else
        v36 = 4;
      __asm { BR              X12 }
    }
    if (v35 == 1)
    {
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48))(((unint64_t)v27 + v42 + v15) & v25, 1, v39))
      {
        memcpy(v33, v34, __n);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v41 + 16))(v33, v34, v39);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v33, 0, 1, v39);
      }
      *((_BYTE *)v33 + v18) = 1;
    }
    else
    {
      *v33 = *v34;
      *((_BYTE *)v33 + v18) = 0;
      swift_retain();
    }
    return v40;
  }
  return (uint64_t *)v23;
}

uint64_t sub_241325128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (a1 + (v6 | 7) + 8) & ~(v6 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))((v6 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v4);
  v8 = *(_QWORD *)(v5 + 64);
  v9 = sub_2414B3B74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v12 = (v7 + ((v6 + 16) & ~v6) + v8 + v11) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v13;
  if (v13 <= 8)
    v13 = 8;
  v14 = *(unsigned __int8 *)(v12 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 != 1)
    return swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  return result;
}

_QWORD *sub_2413252C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  size_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  *a1 = *a2;
  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 8;
  v8 = (_QWORD *)(((unint64_t)a2 + v6) & ~(v5 | 7));
  v7 = (_QWORD *)(((unint64_t)a1 + v6) & ~(v5 | 7));
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + v5 + 8) & ~v5;
  v12 = ((unint64_t)v10 + v5 + 8) & ~v5;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v13(v11, v12, v3);
  v14 = *(_QWORD *)(v4 + 64);
  v15 = sub_2414B3B74();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v18 = v14 + v17 + ((v5 + 16) & ~v5);
  v19 = (_QWORD *)(((unint64_t)v7 + v18) & ~v17);
  v20 = (_QWORD *)(((unint64_t)v8 + v18) & ~v17);
  if (*(_DWORD *)(v16 + 84))
    v21 = *(_QWORD *)(v16 + 64);
  else
    v21 = *(_QWORD *)(v16 + 64) + 1;
  if (v21 <= 8)
    v22 = 8;
  else
    v22 = v21;
  v23 = *((unsigned __int8 *)v20 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
    {
      memcpy(v19, v20, v21);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v19, v20, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    *((_BYTE *)v19 + v22) = 1;
  }
  else
  {
    *v19 = *v20;
    *((_BYTE *)v19 + v22) = 0;
    swift_retain();
  }
  return a1;
}

_QWORD *sub_2413254DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 8;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *v10 = *v11;
  swift_retain();
  swift_release();
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  v14 = *(_QWORD *)(v7 + 64);
  v15 = sub_2414B3B74();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v18 = v14 + v17 + ((v8 + 16) & ~v8);
  v19 = (_QWORD *)(((unint64_t)v10 + v18) & ~v17);
  v20 = (_QWORD *)(((unint64_t)v11 + v18) & ~v17);
  if (v19 != v20)
  {
    v21 = v15;
    if (*(_DWORD *)(v16 + 84))
      v22 = *(_QWORD *)(v16 + 64);
    else
      v22 = *(_QWORD *)(v16 + 64) + 1;
    if (v22 <= 8)
      v23 = 8;
    else
      v23 = v22;
    v24 = *((unsigned __int8 *)v19 + v23);
    if (v24 >= 2)
    {
      if (v23 <= 3)
        v25 = v23;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15))
        (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v21);
    }
    else
    {
      swift_release();
    }
    v26 = *((unsigned __int8 *)v20 + v23);
    if (v26 >= 2)
    {
      if (v23 <= 3)
        v27 = v23;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v21))
      {
        memcpy(v19, v20, v22);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v21);
      }
      *((_BYTE *)v19 + v23) = 1;
    }
    else
    {
      *v19 = *v20;
      *((_BYTE *)v19 + v23) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_2413257BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 8;
  v7 = (_QWORD *)(((unint64_t)a1 + v6) & ~(v5 | 7));
  v8 = (_QWORD *)(((unint64_t)a2 + v6) & ~(v5 | 7));
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 8) & ~v5, ((unint64_t)v10 + v5 + 8) & ~v5);
  v11 = (v5 + 16) & ~v5;
  v12 = *(_QWORD *)(v4 + 64);
  v13 = sub_2414B3B74();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = v12 + v15 + v11;
  v17 = (_QWORD *)(((unint64_t)v7 + v16) & ~v15);
  v18 = (_QWORD *)(((unint64_t)v8 + v16) & ~v15);
  if (*(_DWORD *)(v14 + 84))
    v19 = *(_QWORD *)(v14 + 64);
  else
    v19 = *(_QWORD *)(v14 + 64) + 1;
  if (v19 <= 8)
    v20 = 8;
  else
    v20 = v19;
  v21 = *((unsigned __int8 *)v18 + v20);
  if (v21 >= 2)
  {
    if (v20 <= 3)
      v22 = v20;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  if (v21 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
    {
      memcpy(v17, v18, v19);
      v23 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 32))(v17, v18, v13);
      v23 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
  }
  else
  {
    v23 = 0;
    *v17 = *v18;
  }
  *((_BYTE *)v17 + v20) = v23;
  return a1;
}

_QWORD *sub_2413259A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  char v28;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 8;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *v10 = *v11;
  swift_release();
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  v14 = *(_QWORD *)(v7 + 64);
  v15 = sub_2414B3B74();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v18 = v14 + v17 + ((v8 + 16) & ~v8);
  v19 = (_QWORD *)(((unint64_t)v10 + v18) & ~v17);
  v20 = (_QWORD *)(((unint64_t)v11 + v18) & ~v17);
  if (v19 != v20)
  {
    v21 = v15;
    if (*(_DWORD *)(v16 + 84))
      v22 = *(_QWORD *)(v16 + 64);
    else
      v22 = *(_QWORD *)(v16 + 64) + 1;
    if (v22 <= 8)
      v23 = 8;
    else
      v23 = v22;
    v24 = *((unsigned __int8 *)v19 + v23);
    if (v24 >= 2)
    {
      if (v23 <= 3)
        v25 = v23;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15))
        (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v21);
    }
    else
    {
      swift_release();
    }
    v26 = *((unsigned __int8 *)v20 + v23);
    if (v26 >= 2)
    {
      if (v23 <= 3)
        v27 = v23;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v21))
      {
        memcpy(v19, v20, v22);
        v28 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(v19, v20, v21);
        v28 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      v28 = 0;
      *v19 = *v20;
    }
    *((_BYTE *)v19 + v23) = v28;
  }
  return a1;
}

uint64_t sub_241325C60(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if ((int)v7 >= 0)
    v9 = 0x7FFFFFFF;
  else
    v9 = v8;
  v10 = *(_QWORD *)(sub_2414B3B74() - 8);
  if (*(_DWORD *)(v10 + 84))
    v11 = *(_QWORD *)(v10 + 64);
  else
    v11 = *(_QWORD *)(v10 + 64) + 1;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = v13 | 7;
  v15 = v13 + 8;
  if (a2 <= v9)
    goto LABEL_33;
  v16 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v17 = v12 + ((((v13 + 16) & ~v13) + *(_QWORD *)(v6 + 64) + (v15 & ~v14) + v16) & ~v16) + 1;
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v9 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19)
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(_WORD *)((char *)a1 + v17))
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v21 < 2)
    {
LABEL_33:
      if (v9 != 0x7FFFFFFF)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v15 + (((((unint64_t)a1 + v14 + 8) & ~v14) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13, v7, v5);
      v24 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v24) = -1;
      return (v24 + 1);
    }
  }
  v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((_BYTE *)a1 + v17))
    goto LABEL_33;
LABEL_24:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = v17;
    else
      v23 = 4;
    __asm { BR              X11 }
  }
  return v9 + v22 + 1;
}

void sub_241325E64(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v8 >= 0)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(sub_2414B3B74() - 8);
  v12 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v12;
  if (v12 <= 8)
    v12 = 8;
  v13 = v12
      + ((((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(_QWORD *)(v7 + 64)
        + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~(*(unsigned __int8 *)(v7 + 80) | 7))
        + (*(_DWORD *)(v11 + 80) & 0xF8 | 7)) & ~(*(_DWORD *)(v11 + 80) & 0xF8 | 7))
      + 1;
  if (a3 <= v10)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v10 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v10 < a2)
  {
    v15 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_2413260E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254383DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543840F0);
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254383DE0);
  }
}

uint64_t sub_241326140(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];
  ValueMetadata *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ScopePicker.ScopeButtons(255, *a1, v5, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122038);
  v7 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122040);
  v8 = sub_2414B3514();
  v9 = sub_2414B3514();
  v11 = type metadata accessor for ScopePicker.ScopeButtonHighlight(255, v4, v5, v10);
  MEMORY[0x242695AE8](&unk_2414BA310, v11);
  v12 = sub_2414B30D0();
  v13 = sub_2414B3514();
  sub_2414B3DB4();
  v14 = sub_2414B3514();
  v15 = sub_2414B53B0();
  v25 = sub_241323968();
  v37[0] = MEMORY[0x242695AE8](&unk_2414BA278, v6);
  v37[1] = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  v16 = MEMORY[0x24BDED308];
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v37);
  v36[0] = v17;
  v36[1] = sub_2412C8FC4(&qword_257122058, &qword_257122040, MEMORY[0x24BDEF370]);
  v35[0] = MEMORY[0x242695AE8](v16, v8, v36);
  v35[1] = sub_24130CB04();
  v34[0] = MEMORY[0x242695AE8](v16, v9, v35);
  v34[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEB9D0], v12);
  v18 = MEMORY[0x242695AE8](v16, v13, v34);
  v19 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v33[0] = v18;
  v33[1] = v19;
  v32 = MEMORY[0x242695AE8](v16, v14, v33);
  v28 = &type metadata for AnchorKey;
  v29 = v15;
  v30 = v25;
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v15, &v32);
  v20 = sub_2414B3D00();
  v21 = sub_2414B3514();
  v27[0] = v17;
  v27[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF0B70], v20);
  v22 = MEMORY[0x242695AE8](v16, v21, v27);
  v28 = (ValueMetadata *)v21;
  v29 = v22;
  MEMORY[0x242695A94](255, &v28, MEMORY[0x24BDF2F10], 0);
  v23 = sub_2414B3514();
  v28 = (ValueMetadata *)v21;
  v29 = v22;
  v26[0] = swift_getOpaqueTypeConformance2();
  v26[1] = v19;
  return MEMORY[0x242695AE8](v16, v23, v26);
}

unint64_t sub_241326448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571221A0;
  if (!qword_2571221A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221A8);
    v2[0] = sub_2412C8FC4(&qword_2571221B0, &qword_2571221B8, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571221A0);
  }
  return result;
}

uint64_t sub_2413264CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241326500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241326534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker.ScopeButtonHighlight(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  v9 = v8 + *(int *)(v6 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3484();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24132660C(uint64_t a1)
{
  return sub_241326AA4(a1, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ScopePicker.ScopeButtonHighlight, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2413209CC);
}

uint64_t type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopePicker.ScopeButtonHighlightCapsule);
}

uint64_t sub_24132662C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_2414B4900();
  return sub_2414B48D0();
}

double sub_2413266B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v2 = sub_2414B3B74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543840F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v21 - v14, *MEMORY[0x24BDEFEF0], v2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_2412DC3FC(a1, (uint64_t)v8, &qword_2543840F0);
  sub_2412DC3FC((uint64_t)v15, v16, &qword_2543840F0);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v8, 1, v2) == 1)
  {
    sub_2412CBE78((uint64_t)v15, &qword_2543840F0);
    if (v17(v16, 1, v2) == 1)
    {
      sub_2412CBE78((uint64_t)v8, &qword_2543840F0);
      return 20.0;
    }
  }
  else
  {
    sub_2412DC3FC((uint64_t)v8, (uint64_t)v11, &qword_2543840F0);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      sub_2412C8030((unint64_t *)&unk_2543840E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
      v19 = sub_2414B4CE4();
      v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v20(v5, v2);
      sub_2412CBE78((uint64_t)v15, &qword_2543840F0);
      v20(v11, v2);
      sub_2412CBE78((uint64_t)v8, &qword_2543840F0);
      result = 20.0;
      if ((v19 & 1) != 0)
        return result;
      return 0.0;
    }
    sub_2412CBE78((uint64_t)v15, &qword_2543840F0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_2543840F8);
  return 0.0;
}

uint64_t sub_24132696C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24131EE24(*(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_241326978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker.ScopeButtons(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(v6 + 36);
  swift_release();
  swift_release();
  v10 = sub_2414B4900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v10 + 32), v5);
  v11 = v8 + *(int *)(v6 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254383DD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B3B74();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241326A90(uint64_t a1)
{
  return sub_241326AA4(a1, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ScopePicker.ScopeButtons, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24131F328);
}

uint64_t sub_241326AA4(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(a2(0, v5, v6) - 8) + 80);
  return a3(a1, v3 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_241326B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker.ScopeButtons(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_24132662C(v4+ ((((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)+ v7) & ~v7), v6);
}

uint64_t sub_241326B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24131FEC8(v1[4], v1[5], v1[2], v1[3], a1);
}

unint64_t sub_241326B94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122208;
  if (!qword_257122208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122200);
    v2[0] = sub_2412DC484(&qword_257122210, &qword_257122218, sub_241326C38, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_2412C8FC4(&qword_257122250, &qword_257122258, MEMORY[0x24BDEFF30]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122208);
  }
  return result;
}

uint64_t sub_241326C38()
{
  return sub_2412DC484(&qword_257122220, &qword_257122228, (uint64_t (*)(void))sub_241326C5C, MEMORY[0x24BDECC60]);
}

unint64_t sub_241326C5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_257122230;
  if (!qword_257122230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122238);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
    v3 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    v4[2] = MEMORY[0x24BDF1FA8];
    v4[3] = v2;
    v4[4] = MEMORY[0x24BDF1F80];
    v4[5] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_257122230);
  }
  return result;
}

uint64_t sub_241326D24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2414B4918();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_49Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScopePicker.ScopeButtons(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  swift_bridgeObjectRelease();
  v11 = v4 + v8 + *(int *)(v6 + 36);
  swift_release();
  swift_release();
  v12 = v11 + *(int *)(sub_2414B4900() + 32);
  v13 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v13(v12, v5);
  v14 = v4 + v8 + *(int *)(v6 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254383DD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2414B3B74();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  v13(v4 + ((v8 + v18 + v10) & ~v10), v5);
  return swift_deallocObject();
}

uint64_t sub_241326EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v3 + 16);
  type metadata accessor for ScopePicker.ScopeButtons(0, v6, *(_QWORD *)(v3 + 24), a2);
  return sub_241320714(a1, v6, a3);
}

uint64_t sub_241326F44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v4 = type metadata accessor for ScopePicker.ScopeButtonHighlightCapsule(255, *a1, a1[1], a4);
  v5 = sub_2414B38D4();
  v6 = sub_2414B3514();
  v9[0] = MEMORY[0x242695AE8](&unk_2414BA3C8, v4);
  v9[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEEC10], v5);
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v9);
  v7 = sub_2414B3388();
  return MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v7);
}

uint64_t sub_24132700C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v1 = *a1;
  v2 = a1[1];
  v25 = sub_2414B4F60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221D0);
  sub_2412C8FC4(&qword_2571221D8, &qword_2571221D0, MEMORY[0x24BDF43B0]);
  v24 = *(_QWORD *)(v2 + 8);
  v3 = sub_2414B4810();
  v4 = sub_2414B3568();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v3);
  v7 = sub_2412C8030(&qword_2571221E0, v5, MEMORY[0x24BDED858]);
  v29 = v3;
  v30 = v4;
  v31 = v6;
  v32 = v7;
  MEMORY[0x242695A94](255, &v29, MEMORY[0x24BDF22B8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571221E8);
  v8 = sub_2414B3514();
  v9 = sub_2414B3AA8();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF4D8];
  v29 = v3;
  v30 = v4;
  v31 = v6;
  v32 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v12 = sub_2412C8FC4(&qword_2571221F0, &qword_2571221E8, MEMORY[0x24BDF0960]);
  v34[0] = OpaqueTypeConformance2;
  v34[1] = v12;
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v34);
  v15 = sub_2412C8030(&qword_2571221F8, v10, MEMORY[0x24BDEF4D0]);
  v29 = v8;
  v30 = v9;
  v31 = v14;
  v32 = v15;
  MEMORY[0x242695A94](255, &v29, MEMORY[0x24BDF2380], 0);
  sub_2414B3DB4();
  v16 = sub_2414B3514();
  v17 = sub_2414B3514();
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v25);
  v29 = v25;
  v30 = v1;
  v31 = v17;
  v32 = v18;
  v33 = v24;
  v19 = sub_2414B4954();
  v29 = v8;
  v30 = v9;
  v31 = v14;
  v32 = v15;
  v20 = swift_getOpaqueTypeConformance2();
  v21 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v28[0] = v20;
  v28[1] = v21;
  v27[0] = MEMORY[0x242695AE8](v13, v16, v28);
  v27[1] = v21;
  v26 = MEMORY[0x242695AE8](v13, v17, v27);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v19, &v26);
  v22 = sub_2414B4804();
  return MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v22);
}

uint64_t sub_2413272EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241327320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2414B4918();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241327364()
{
  return sub_2412DC484(&qword_257122318, &qword_257122310, sub_241327398, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_241327398()
{
  return sub_2412DC484(&qword_257122320, &qword_257122308, (uint64_t (*)(void))sub_2413273BC, MEMORY[0x24BDEC438]);
}

unint64_t sub_2413273BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122328;
  if (!qword_257122328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122300);
    v2[0] = sub_2413002F4();
    v2[1] = sub_2412C8FC4(&qword_257122330, &qword_2571222F8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122328);
  }
  return result;
}

uint64_t sub_241327440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_2414B562C();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_2413274E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_2414B5644();
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_2413275FC;
  return sub_2414B5854();
}

uint64_t sub_2413275FC()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2413276A8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413276E4(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjectType;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  int v18;
  __int128 v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  char v24;
  double v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = sub_2414B2B00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v10 = *(_QWORD *)(*(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 208))(ObjectType, a3) + 88)
                  + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
  swift_retain();
  swift_release();
  v11 = a1 * 5220.0;
  sub_2414B2AF4();
  sub_2414B2AD0();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  v14 = *(_OWORD *)(v10 + 24);
  v16 = *(_QWORD *)(v10 + 40);
  v15 = *(_QWORD *)(v10 + 48);
  v17 = *(_OWORD *)(v10 + 56);
  v18 = *(unsigned __int8 *)(v10 + 72);
  *(double *)(v10 + 24) = v11;
  *(_OWORD *)(v10 + 32) = xmmword_2414BA420;
  *(_QWORD *)(v10 + 48) = 1;
  *(_QWORD *)(v10 + 56) = v13;
  *(_QWORD *)(v10 + 64) = 0;
  *(_BYTE *)(v10 + 72) = 0;
  v25 = v11;
  v26 = xmmword_2414BA420;
  v27 = 1;
  v28 = v13;
  v29 = 0;
  v30 = 0;
  if (v18 == 2
    || (v20 = v14,
        v21 = v16,
        v22 = v15 & 1,
        v23 = v17,
        v24 = v18 & 1,
        (_s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)&v25, (uint64_t)&v20) & 1) == 0))
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412C8030(&qword_25437ECC0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2413278BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  *(double *)(v5 + 16) = a5;
  v6 = sub_2414B5644();
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 72) = swift_task_alloc();
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  sub_2414B4FC0();
  *(_QWORD *)(v5 + 112) = sub_2414B4FB4();
  *(_QWORD *)(v5 + 120) = sub_2414B4F90();
  *(_QWORD *)(v5 + 128) = v7;
  return swift_task_switch();
}

uint64_t sub_24132798C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_2414B5638();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_241327A0C;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_241327A0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 56);
  v5 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v2 + 152) = v6;
  v6(v3, v4);
  return swift_task_switch();
}

uint64_t sub_241327A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_2413276E4(*(double *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v1 = sub_2414B5920();
  v3 = v2;
  sub_2414B5638();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_257122340 + dword_257122340);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  *v4 = v0;
  v4[1] = sub_241327B40;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_241327B40()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_241327BC4()
{
  return swift_unexpectedError();
}

uint64_t sub_241327BE0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 176) = swift_getObjectType();
  v2 = *(void (**)(void))(v1 + 208);
  *(_QWORD *)(v0 + 184) = v2;
  v2();
  *(_BYTE *)(v0 + 240) = 1;
  swift_retain();
  sub_2414B2DAC();
  swift_release();
  swift_release();
  sub_2414B5638();
  v5 = (char *)&dword_257122340 + dword_257122340;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v3;
  *v3 = v0;
  v3[1] = sub_241327CD4;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v5)(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_241327CD4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_241327D5C()
{
  return swift_unexpectedError();
}

uint64_t sub_241327D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  (*(void (**)(_QWORD, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 32));
  *(_BYTE *)(v0 + 241) = 2;
  swift_retain();
  sub_2414B2DAC();
  swift_release();
  swift_release();
  v1 = sub_2414B5920();
  v3 = v2;
  sub_2414B5638();
  v6 = (char *)&dword_257122340 + dword_257122340;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v4;
  *v4 = v0;
  v4[1] = sub_241327E64;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v6)(v1, v3, 0, 0, 1);
}

uint64_t sub_241327E64()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_241327EEC()
{
  return swift_unexpectedError();
}

uint64_t sub_241327F08()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(_QWORD, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 32));
  *(_BYTE *)(v0 + 242) = 0;
  swift_retain();
  sub_2414B2DAC();
  swift_release();
  swift_release();
  sub_2414B5638();
  v3 = (char *)&dword_257122340 + dword_257122340;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_241327FE4;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_241327FE4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_24132806C()
{
  return swift_unexpectedError();
}

uint64_t sub_241328088()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413280F8()
{
  return swift_unexpectedError();
}

uint64_t sub_241328114(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_241328134()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  objc_super v30;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = 2;
  v6 = &v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  v7 = qword_2543826F8;
  v8 = v1;
  if (v7 != -1)
    swift_once();
  v9 = (void *)qword_2543826D8;
  v10 = (void *)unk_2543826E0;
  v11 = (void *)qword_2543826E8;
  v12 = (void *)unk_2543826F0;
  *(_QWORD *)v6 = qword_2543826D8;
  *((_QWORD *)v6 + 1) = v10;
  *((_QWORD *)v6 + 2) = v11;
  *((_QWORD *)v6 + 3) = v12;
  v13 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs;
  v14 = qword_2543824E8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  if (v14 != -1)
    swift_once();
  *(_OWORD *)&v8[v13] = xmmword_25438E820;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformValueSubscriber] = 0;
  v19 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform;
  v20 = sub_2414B4F0C();
  *(_QWORD *)(v20 + 16) = 5;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_QWORD *)(v20 + 64) = 0;
  *(_QWORD *)&v8[v19] = v20;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset] = 0;

  v30.receiver = v8;
  v30.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  result = sub_24132844C();
  v23 = result;
  if (!(result >> 62))
  {
    v24 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_7;
LABEL_14:
    swift_bridgeObjectRelease();
    v28 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v21;
    sub_24135F590((uint64_t)v5, (uint64_t)&unk_257122400, (uint64_t)v29);
    swift_release();
    sub_2412CBE78((uint64_t)v5, (uint64_t *)&unk_254384360);
    return (unint64_t)v21;
  }
  result = sub_2414B56C8();
  v24 = result;
  if (!result)
    goto LABEL_14;
LABEL_7:
  if (v24 >= 1)
  {
    v25 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
        v26 = (id)MEMORY[0x242694E34](v25, v23);
      else
        v26 = *(id *)(v23 + 8 * v25 + 32);
      v27 = v26;
      ++v25;
      objc_msgSend(v21, sel_addSubview_, v26);
      objc_msgSend(v27, sel_setAlpha_, 0.0);

    }
    while (v24 != v25);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24132844C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars);
  }
  else
  {
    v2 = sub_24132E1E4();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2413284AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for BouncyBarsAsset();
  swift_allocObject();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_24132850C;
  return sub_24132C9BC();
}

uint64_t sub_24132850C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241328568()
{
  uint64_t v0;

  sub_2414B4FC0();
  *(_QWORD *)(v0 + 40) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413285D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset) = v1;
  swift_retain_n();
  if (v3)
  {
    swift_release();
  }
  else if (v1)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    if ((unint64_t)(v4 - 2) >= 3 && v4 == 1)
    {
      v6 = 1;
      v7 = 1;
      sub_24132DABC(1uLL);
      sub_241328C64(&v6, &v7, 1);
    }
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_241328694()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2413286E4(_QWORD *a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543827D0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543827C0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  if (!v17)
  {
    if (*a1)
    {
      v19 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber;
      v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber);
      sub_24132DABC(0);
      if (!v20)
      {
        v28 = v14;
        if (qword_2543826A0 != -1)
          swift_once();
        v27 = *(_QWORD *)(qword_25438E830 + 16);
        swift_beginAccess();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543827D8);
        sub_2414B2E18();
        swift_endAccess();
        sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
        v29 = (id)sub_2414B5230();
        v21 = sub_2414B520C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
        sub_2412C8FC4(&qword_2543827C8, &qword_2543827D0, MEMORY[0x24BDB9EE8]);
        sub_241300004();
        sub_2414B2E84();
        sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_2543842B0);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_2412C8FC4(&qword_2543827B8, &qword_2543827C0, MEMORY[0x24BDB9A08]);
        v22 = sub_2414B2EB4();
        swift_release();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v13);
        *(_QWORD *)(v3 + v19) = v22;
        swift_release();
        sub_241366468();
        swift_release();
      }
    }
    else
    {
      sub_24132DBF8(0);
      sub_24132DBF8(0);
    }
    sub_24132DABC(0);
    goto LABEL_18;
  }
  v28 = v14;
  v18 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber))
  {
    if (qword_2543826A0 != -1)
      swift_once();
    sub_241366624();
    if (*(_QWORD *)(v3 + v18))
    {
      swift_retain();
      sub_2414B2D7C();
      swift_release();
    }
    *(_QWORD *)(v3 + v18) = 0;
    swift_release();
  }
  if (v17 < 5)
  {
LABEL_18:
    v25 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber))
    {
      swift_retain();
      sub_2414B2D7C();
      swift_release();
    }
    *(_QWORD *)(v3 + v25) = 0;
    goto LABEL_21;
  }
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber))
    return;
  v27 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
  swift_beginAccess();
  sub_24132DABC(v17);
  sub_24132DABC(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543827D8);
  sub_2414B2E18();
  swift_endAccess();
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v29 = (id)sub_2414B5230();
  v23 = sub_2414B520C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  sub_2412C8FC4(&qword_2543827C8, &qword_2543827D0, MEMORY[0x24BDB9EE8]);
  sub_241300004();
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v8, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2412C8FC4(&qword_2543827B8, &qword_2543827C0, MEMORY[0x24BDB9A08]);
  v24 = sub_2414B2EB4();
  swift_release();
  sub_24132DACC(v17);
  sub_24132DACC(v17);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v13);
  *(_QWORD *)(v3 + v27) = v24;
LABEL_21:
  swift_release();
}

unint64_t *sub_241328C64(unint64_t *result, uint64_t *a2, char a3)
{
  char *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  _QWORD *v21;
  id v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  char *v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  _QWORD *v53;
  id v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  double *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  char *v63;
  _QWORD *v64;
  id v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  char *v75;
  _QWORD *v76;
  id v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t i;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  char *v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD **v101;
  uint64_t aBlock;
  uint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  uint64_t v107;

  v5 = *result;
  v6 = *a2;
  switch(*result)
  {
    case 0uLL:
      result = (unint64_t *)sub_24132DABC(0);
      goto LABEL_3;
    case 1uLL:
      if (v6 == 1)
      {
        sub_24132DBF8(1uLL);
        result = (unint64_t *)sub_24132DBF8(1uLL);
        if ((a3 & 1) == 0)
          return result;
      }
      else
      {
        sub_24132DABC(1uLL);
      }
      goto LABEL_24;
    case 2uLL:
      if (v6 != 2)
        goto LABEL_24;
      goto LABEL_21;
    case 3uLL:
      if (v6 != 3)
        goto LABEL_24;
      goto LABEL_21;
    case 4uLL:
      if (v6 != 4)
        goto LABEL_24;
      goto LABEL_21;
    default:
LABEL_3:
      if ((unint64_t)(v6 - 2) >= 3)
      {
        if (v6 == 1)
          goto LABEL_24;
        if (!v6)
          result = (unint64_t *)sub_24132DABC(0);
      }
      else if (v5 != 4 || v6 != 4)
      {
        goto LABEL_24;
      }
LABEL_21:
      if ((a3 & 1) == 0)
        return result;
LABEL_24:
      v8 = sub_24132844C();
      type metadata accessor for AnimationGroup();
      v9 = swift_allocObject();
      v10 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v9 + 16) = MEMORY[0x24BEE4AF8];
      v101 = (_QWORD **)(v9 + 16);
      *(_QWORD *)(v9 + 24) = v10;
      v11 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask;
      if (*(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask])
      {
        swift_retain();
        sub_2414B5050();
        swift_release();
      }
      *(_QWORD *)&v3[v11] = 0;
      swift_release();
      if (v5 == 1)
      {
        sub_24132DABC(1uLL);
        sub_24132A1C4();
      }
      if (v6 == 3)
      {
        v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD518]), sel_initWithControlPoint1_controlPoint2_, 0.33, 1.0, 0.67, 1.0);
        v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v27, 0.9);

        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = v3;
        v106 = sub_24132DC9C;
        v107 = v29;
        aBlock = MEMORY[0x24BDAC760];
        v103 = 1107296256;
        v104 = sub_2413002C8;
        v105 = &block_descriptor_24;
        v30 = _Block_copy(&aBlock);
        swift_retain_n();
        v31 = v3;
        swift_release();
        objc_msgSend(v28, sel_addAnimations_, v30);
        _Block_release(v30);
        swift_release();
        swift_beginAccess();
        v32 = *v101;
        v22 = v28;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v101 = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v32 = sub_24146CD9C(0, v32[2] + 1, 1, v32);
          *v101 = v32;
        }
        v35 = v32[2];
        v34 = v32[3];
        if (v35 >= v34 >> 1)
        {
          v32 = sub_24146CD9C((_QWORD *)(v34 > 1), v35 + 1, 1, v32);
          *v101 = v32;
        }
        v32[2] = v35 + 1;
        v36 = &v32[2 * v35];
        v36[4] = v22;
        v36[5] = 0;
        swift_endAccess();
        swift_release();
      }
      else
      {
        if (v6 != 4)
          goto LABEL_41;
        v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD518]), sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
        v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v12, 0.25);

        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = v3;
        v106 = sub_24132DCA4;
        v107 = v14;
        v15 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v103 = 1107296256;
        v104 = sub_2413002C8;
        v105 = &block_descriptor_30;
        v16 = _Block_copy(&aBlock);
        v17 = v3;
        swift_release();
        objc_msgSend(v13, sel_addAnimations_, v16);
        _Block_release(v16);
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v17;
        v106 = sub_24132DCAC;
        v107 = v18;
        aBlock = v15;
        v103 = 1107296256;
        v104 = sub_24132A888;
        v105 = &block_descriptor_36;
        v19 = _Block_copy(&aBlock);
        v20 = v17;
        swift_release();
        objc_msgSend(v13, sel_addCompletion_, v19);
        _Block_release(v19);
        swift_beginAccess();
        v21 = *v101;
        v22 = v13;
        v23 = swift_isUniquelyReferenced_nonNull_native();
        *v101 = v21;
        if ((v23 & 1) == 0)
        {
          v21 = sub_24146CD9C(0, v21[2] + 1, 1, v21);
          *v101 = v21;
        }
        v25 = v21[2];
        v24 = v21[3];
        if (v25 >= v24 >> 1)
        {
          v21 = sub_24146CD9C((_QWORD *)(v24 > 1), v25 + 1, 1, v21);
          *v101 = v21;
        }
        v21[2] = v25 + 1;
        v26 = &v21[2 * v25];
        v26[4] = v22;
        v26[5] = 0;
        swift_endAccess();
      }

LABEL_41:
      if (v5 == 2)
      {
        v96 = v6;
        v97 = 2;
        v37 = swift_bridgeObjectRetain();
        v98 = v8;
        sub_24132A9AC(v37);
        v39 = v38;
        v99 = v3;
        sub_24132A4CC();
        v100 = *(_QWORD *)(v39 + 16);
        if (v100)
        {
          v40 = 0;
          v41 = (void **)(v39 + 40);
          do
          {
            v42 = *(v41 - 1);
            v43 = *v41;
            v44 = objc_allocWithZone(MEMORY[0x24BEBD518]);
            v45 = v43;
            v46 = v42;
            v47 = objc_msgSend(v44, sel_initWithControlPoint1_controlPoint2_, 0.32, 0.0, 0.67, 0.0);
            v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v47, 0.5);

            v49 = swift_allocObject();
            *(_QWORD *)(v49 + 16) = v46;
            *(_QWORD *)(v49 + 24) = v43;
            v106 = sub_24132DC40;
            v107 = v49;
            aBlock = MEMORY[0x24BDAC760];
            v103 = 1107296256;
            v104 = sub_2413002C8;
            v105 = &block_descriptor_18;
            v50 = _Block_copy(&aBlock);
            swift_retain_n();
            v51 = v46;
            v52 = v45;
            swift_release();
            objc_msgSend(v48, sel_addAnimations_, v50);
            _Block_release(v50);
            swift_release();
            swift_beginAccess();
            v53 = *v101;
            v54 = v48;
            v55 = swift_isUniquelyReferenced_nonNull_native();
            *v101 = v53;
            if ((v55 & 1) == 0)
            {
              v53 = sub_24146CD9C(0, v53[2] + 1, 1, v53);
              *v101 = v53;
            }
            v57 = v53[2];
            v56 = v53[3];
            if (v57 >= v56 >> 1)
            {
              v53 = sub_24146CD9C((_QWORD *)(v56 > 1), v57 + 1, 1, v53);
              *v101 = v53;
            }
            v41 += 2;
            v53[2] = v57 + 1;
            v58 = (double *)&v53[2 * v57];
            *((_QWORD *)v58 + 4) = v54;
            v58[5] = (double)v40 * 0.03;
            swift_endAccess();
            swift_release();

            ++v40;
          }
          while (v100 != v40);
        }
        swift_bridgeObjectRelease();
        v3 = v99;
        v5 = 2;
        v8 = v98;
        v6 = v96;
      }
      switch(v6)
      {
        case 0:
          sub_24132DABC(0);
          goto LABEL_52;
        case 1:
          v70 = objc_allocWithZone(MEMORY[0x24BEBD518]);
          sub_24132DABC(1uLL);
          v71 = objc_msgSend(v70, sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
          v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v71, 0.15);

          v73 = swift_allocObject();
          *(_QWORD *)(v73 + 16) = v3;
          v106 = sub_24132DC0C;
          v107 = v73;
          aBlock = MEMORY[0x24BDAC760];
          v103 = 1107296256;
          v104 = sub_2413002C8;
          v105 = &block_descriptor_12;
          v74 = _Block_copy(&aBlock);
          swift_retain_n();
          v75 = v3;
          swift_release();
          objc_msgSend(v72, sel_addAnimations_, v74);
          _Block_release(v74);
          swift_release();
          swift_beginAccess();
          v76 = *v101;
          v77 = v72;
          v78 = swift_isUniquelyReferenced_nonNull_native();
          *v101 = v76;
          if ((v78 & 1) == 0)
          {
            v76 = sub_24146CD9C(0, v76[2] + 1, 1, v76);
            *v101 = v76;
          }
          v80 = v76[2];
          v79 = v76[3];
          if (v80 >= v79 >> 1)
          {
            v76 = sub_24146CD9C((_QWORD *)(v79 > 1), v80 + 1, 1, v76);
            *v101 = v76;
          }
          v76[2] = v80 + 1;
          v81 = &v76[2 * v80];
          v81[4] = v77;
          v81[5] = 0;
          swift_endAccess();
          swift_release();

          goto LABEL_62;
        case 2:
          if (v8 >> 62)
          {
            swift_bridgeObjectRetain();
            v82 = sub_2414B56C8();
            swift_bridgeObjectRelease();
            if (!v82)
              goto LABEL_72;
          }
          else
          {
            v82 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v82)
              goto LABEL_72;
          }
          if (v82 < 1)
          {
            __break(1u);
            JUMPOUT(0x2413299E4);
          }
          for (i = 0; i != v82; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0)
              v84 = (id)MEMORY[0x242694E34](i, v8);
            else
              v84 = *(id *)(v8 + 8 * i + 32);
            v85 = v84;
            objc_msgSend(v84, sel_setAlpha_, 0.0, v96, v97);

          }
LABEL_72:
          swift_bridgeObjectRelease();
          sub_24132A4CC();
LABEL_73:
          v86 = *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation];
          if (v86)
          {
            v87 = swift_allocObject();
            *(_QWORD *)(v87 + 16) = v3;
            *(_QWORD *)(v87 + 24) = v9;
            v88 = swift_allocObject();
            *(_QWORD *)(v88 + 16) = sub_24132DB1C;
            *(_QWORD *)(v88 + 24) = v87;
            v89 = (_QWORD *)(v86 + 24);
            swift_beginAccess();
            v90 = *(_QWORD **)(v86 + 24);
            v91 = v3;
            swift_retain();
            swift_retain();
            swift_retain();
            v92 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v86 + 24) = v90;
            if ((v92 & 1) == 0)
            {
              v90 = sub_24146CEA8(0, v90[2] + 1, 1, v90);
              *v89 = v90;
            }
            v94 = v90[2];
            v93 = v90[3];
            if (v94 >= v93 >> 1)
            {
              v90 = sub_24146CEA8((_QWORD *)(v93 > 1), v94 + 1, 1, v90);
              *v89 = v90;
            }
            v90[2] = v94 + 1;
            v95 = &v90[2 * v94];
            v95[4] = sub_2412FFEC8;
            v95[5] = v88;
            swift_endAccess();
            swift_release();
            swift_release();
          }
          else
          {
            sub_24132C3D8();
          }
          result = (unint64_t *)swift_release();
          break;
        case 3:
        case 4:
LABEL_62:
          swift_bridgeObjectRelease();
          goto LABEL_73;
        default:
LABEL_52:
          swift_bridgeObjectRelease();
          v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD518]), sel_initWithControlPoint1_controlPoint2_, 0.5, 1.0, 0.89, 1.0);
          v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v59, 0.15);

          v61 = swift_allocObject();
          *(_QWORD *)(v61 + 16) = v3;
          *(_QWORD *)(v61 + 24) = v5;
          v106 = sub_24132DBF0;
          v107 = v61;
          aBlock = MEMORY[0x24BDAC760];
          v103 = 1107296256;
          v104 = sub_2413002C8;
          v105 = &block_descriptor_0;
          v62 = _Block_copy(&aBlock);
          swift_retain();
          sub_24132DBF8(v5);
          v63 = v3;
          swift_retain();
          swift_release();
          objc_msgSend(v60, sel_addAnimations_, v62);
          _Block_release(v62);
          swift_release();
          swift_beginAccess();
          v64 = *v101;
          v65 = v60;
          v66 = swift_isUniquelyReferenced_nonNull_native();
          *v101 = v64;
          if ((v66 & 1) == 0)
          {
            v64 = sub_24146CD9C(0, v64[2] + 1, 1, v64);
            *v101 = v64;
          }
          v68 = v64[2];
          v67 = v64[3];
          if (v68 >= v67 >> 1)
          {
            v64 = sub_24146CD9C((_QWORD *)(v67 > 1), v68 + 1, 1, v64);
            *v101 = v64;
          }
          v64[2] = v68 + 1;
          v69 = &v64[2 * v68];
          v69[4] = v65;
          v69[5] = 0;
          swift_endAccess();
          swift_release();

          goto LABEL_73;
      }
      return result;
  }
}

unint64_t sub_241329A0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;

  v2 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode) = *a1;
  sub_24132DBF8(v3);
  sub_24132DACC(v3);
  v4 = *(_QWORD *)(v1 + v2);
  v7 = v4;
  v8 = v3;
  sub_24132DBF8(v4);
  sub_2413286E4(&v8, &v7);
  sub_24132DACC(v4);
  v5 = *(_QWORD *)(v1 + v2);
  v7 = v5;
  v8 = v3;
  sub_24132DBF8(v5);
  sub_241328C64(&v8, (uint64_t *)&v7, 0);
  sub_24132DACC(v5);
  return sub_24132DACC(v3);
}

void sub_241329AA8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t j;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
  if (v1 != 2)
  {
    if (v1 != 3)
    {
      if (v1 == 4)
        return;
      v2 = *(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
      v8 = sub_24132844C();
      if (v8 >> 62)
      {
        v9 = sub_2414B56C8();
        if (v9)
        {
LABEL_15:
          if (v9 >= 1)
          {
            for (i = 0; i != v9; ++i)
            {
              if ((v8 & 0xC000000000000001) != 0)
                v11 = (id)MEMORY[0x242694E34](i, v8);
              else
                v11 = *(id *)(v8 + 8 * i + 32);
              v12 = v11;
              objc_msgSend(v11, sel_setBackgroundColor_, v2);

            }
            goto LABEL_24;
          }
LABEL_26:
          __break(1u);
          return;
        }
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v9)
          goto LABEL_15;
      }
LABEL_24:

      swift_bridgeObjectRelease();
      return;
    }
    v2 = *(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
    v3 = sub_24132844C();
    if (v3 >> 62)
    {
      v4 = sub_2414B56C8();
      if (!v4)
        goto LABEL_24;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v4)
        goto LABEL_24;
    }
    if (v4 >= 1)
    {
      for (j = 0; j != v4; ++j)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x242694E34](j, v3);
        else
          v6 = *(id *)(v3 + 8 * j + 32);
        v7 = v6;
        objc_msgSend(v6, sel_setBackgroundColor_, v2);

      }
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_26;
  }
}

void sub_241329C6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  id v15;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
  v15 = *(id *)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24);
  *v6 = *(_QWORD *)a1;
  v6[1] = v3;
  v6[2] = v4;
  v6[3] = v5;
  sub_2412CC884(0, &qword_254382930);
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  if ((sub_2414B532C() & 1) != 0 && (sub_2414B532C() & 1) != 0 && (sub_2414B532C() & 1) != 0)
  {
    v14 = sub_2414B532C();

    if ((v14 & 1) != 0)
      goto LABEL_8;
  }
  else
  {

  }
  sub_241329AA8();
LABEL_8:

}

unint64_t *sub_241329D94(double a1, double a2)
{
  uint64_t v2;
  double *v3;
  double v4;
  double v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *result;
  uint64_t v10;
  unint64_t v11;

  v3 = (double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
  v4 = *(double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
  v5 = *(double *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs + 8);
  *v3 = a1;
  v3[1] = a2;
  if (v4 != a1 || v5 != a2)
  {
    v7 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode;
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
    if (v8 == 4)
    {
      v10 = 4;
      v11 = 4;
      result = sub_241328C64(&v11, &v10, 1);
      v8 = *(_QWORD *)(v2 + v7);
    }
    if (v8 == 1)
    {
      v10 = 1;
      v11 = 1;
      sub_24132DABC(1uLL);
      sub_24132DABC(1uLL);
      sub_241328C64(&v11, &v10, 1);
      return (unint64_t *)sub_24132DACC(1uLL);
    }
  }
  return result;
}

void sub_241329E34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  _QWORD aBlock[6];

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v11 = a2 + 16;
  v12 = a1[4];
  swift_beginAccess();
  v13 = MEMORY[0x242695CC8](v11);
  if (v13)
  {
    v14 = (char *)v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254382960);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2414BA490;
    *(_QWORD *)(v15 + 32) = v7;
    *(_QWORD *)(v15 + 40) = v8;
    *(_QWORD *)(v15 + 48) = v9;
    *(_QWORD *)(v15 + 56) = v10;
    *(_QWORD *)(v15 + 64) = v12;
    *(_QWORD *)&v14[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform] = v15;
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
    if ((unint64_t)(v16 - 2) >= 3 && v16 != 1)
    {
      if (!v16)
        sub_24132DABC(0);
      v18 = (void *)objc_opt_self();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v14;
      aBlock[4] = a4;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2413002C8;
      aBlock[3] = a5;
      v20 = _Block_copy(aBlock);
      v21 = v14;
      swift_release();
      objc_msgSend(v18, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v20, 0, 0.325, 0.0, 0.8, 0.0);
      _Block_release(v20);
    }

  }
}

id sub_241329FD4()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber])
  {
    if (qword_2543826A0 != -1)
      swift_once();
    sub_241366624();
    if (*(_QWORD *)&v0[v2])
    {
      swift_retain();
      sub_2414B2D7C();
      swift_release();
    }
    *(_QWORD *)&v0[v2] = 0;
    swift_release();
  }
  v3 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber])
  {
    swift_retain();
    sub_2414B2D7C();
    swift_release();
  }
  *(_QWORD *)&v0[v3] = 0;
  swift_release();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_24132A1C4()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;

  v0 = sub_24132844C();
  v1 = sub_24132C210(v0);
  result = swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v3 = sub_2414B56C8();
  result = swift_bridgeObjectRelease();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v13 = v1 & 0xC000000000000001;
    v5 = v1;
    do
    {
      if (v13)
        v6 = (id)MEMORY[0x242694E34](v4, v1);
      else
        v6 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v8 = (void *)sub_2414B4D44();
      objc_msgSend(v7, sel_removeAnimationForKey_, v8);

      v9 = (void *)sub_2414B4D44();
      objc_msgSend(v7, sel_removeAnimationForKey_, v9);

      v10 = (void *)sub_2414B4D44();
      objc_msgSend(v7, sel_removeAnimationForKey_, v10);

      v11 = objc_msgSend(v7, sel_presentationLayer);
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, sel_frame);
        objc_msgSend(v7, sel_setFrame_);
        objc_msgSend(v12, sel_cornerRadius);
        objc_msgSend(v7, sel_setCornerRadius_);

      }
      ++v4;

      v1 = v5;
    }
    while (v3 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_24132A3E4(uint64_t a1)
{
  id v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;

  sub_24132A4CC();
  v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16);
  result = sub_24132844C();
  v4 = result;
  if (!(result >> 62))
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  result = sub_2414B56C8();
  v5 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x242694E34](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, sel_setBackgroundColor_, v2);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_24132A4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;
  char *v15;
  CGRect v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode);
  if ((unint64_t)(v1 - 2) < 3 || v1 == 1)
  {
    v3 = sub_2414B4F0C();
    *(_QWORD *)(v3 + 16) = 5;
    *(_OWORD *)(v3 + 32) = 0u;
    *(_OWORD *)(v3 + 48) = 0u;
    v14 = v3;
    *(_QWORD *)(v3 + 64) = 0;
  }
  else
  {
    if (!v1)
      sub_24132DABC(0);
    v14 = *(_QWORD *)&v15[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform];
    swift_bridgeObjectRetain();
  }
  result = sub_24132844C();
  v5 = result;
  if (!(result >> 62))
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_12;
LABEL_20:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  result = sub_2414B56C8();
  v6 = result;
  if (!result)
    goto LABEL_20;
LABEL_12:
  if (v6 < 1)
  {
    __break(1u);
  }
  else if ((unint64_t)(v6 - 1) < *(_QWORD *)(v14 + 16))
  {
    v7 = 0;
    v8 = (double *)&v15[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs];
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x242694E34](v7, v5);
      else
        v9 = *(id *)(v5 + 8 * v7 + 32);
      v10 = v9;
      v11 = *(double *)(v14 + 8 * v7 + 32);
      objc_msgSend(v15, sel_bounds, v14);
      CGRectGetHeight(v16);
      v12 = (v11 * 0.12 + 1.0) * (*v8 * 0.125);
      v13 = objc_msgSend(v10, sel_layer);
      objc_msgSend(v13, sel_setCornerRadius_, v12 * 0.5);

      objc_msgSend(v10, sel_bounds);
      objc_msgSend(v10, sel_setBounds_);
      objc_msgSend(v10, sel_bounds);
      objc_msgSend(v10, sel_setBounds_);
      objc_msgSend(v10, sel_setCenter_, *v8 * 0.125 * 1.12 * 0.5 + (*v8 * 0.125 * 1.12 + (*v8 + *v8 * 0.125 * 1.12 * -5.0) * 0.25) * (double)v7, v8[1] * 0.5);

      ++v7;
    }
    while (v6 != v7);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

void sub_24132A76C(uint64_t a1, char *a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&a2[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] == 4)
  {
    v7 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    sub_2414B4FC0();
    v8 = a2;
    v9 = sub_2414B4FB4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = MEMORY[0x24BEE6930];
    v10[2] = v9;
    v10[3] = v11;
    v10[4] = v8;
    v10[5] = ObjectType;
    *(_QWORD *)&v8[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = sub_2413EE440((uint64_t)v6, (uint64_t)&unk_2571223E0, (uint64_t)v10);
    swift_release();
  }
}

uint64_t sub_24132A888(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

unint64_t sub_24132A8C4(uint64_t a1)
{
  id v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;

  sub_24132A4CC();
  v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8);
  result = sub_24132844C();
  v4 = result;
  if (!(result >> 62))
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  result = sub_2414B56C8();
  v5 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x242694E34](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, sel_setBackgroundColor_, v2);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_24132A9AC(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  unint64_t v21;
  id v22;

  v1 = (_QWORD *)sub_24132DE5C(a1);
  v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = v2 >> 1;
  v5 = v2 - 1;
  v6 = 2 * v2;
  v7 = 5;
  v21 = v2 >> 1;
  while (1)
  {
    if (v3 == v5)
      goto LABEL_4;
    v8 = v1[2];
    if (v3 >= v8)
      break;
    if (v5 >= v8)
      goto LABEL_13;
    v9 = (void *)v1[v7 - 1];
    v10 = (void *)v1[v7];
    v11 = (void *)v1[v6 + 2];
    v12 = (void *)v1[v6 + 3];
    v13 = v12;
    v14 = v9;
    v15 = v10;
    v16 = v11;
    v22 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_241497A08(v1);
    v17 = &v1[v7];
    v18 = (void *)v1[v7];

    *(v17 - 1) = v16;
    *v17 = v12;
    if (v5 >= v1[2])
      goto LABEL_14;
    v19 = &v1[v6];
    v20 = (void *)v1[v6 + 3];

    v19[2] = v22;
    v19[3] = v10;
    v4 = v21;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24132AAF4(uint64_t a1)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;

  sub_24132A4CC();
  v2 = *(id *)(a1 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette);
  v3 = sub_24132844C();
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_10:

    swift_bridgeObjectRelease();
    sub_24132ABE0();
    return;
  }
  v4 = sub_2414B56C8();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x242694E34](i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, sel_setBackgroundColor_, v2);

    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_24132ABE0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  double *v34;
  double v35;
  __int128 v36;
  __int128 v37;

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset);
  if (!v3)
    return;
  swift_retain();
  v4 = sub_24132DDD4(3uLL);
  if (v4 > 2)
  {
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    v6 = sub_2414B56C8();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_40:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v2 = byte_2511630F0[v4 + 32];
  v5 = sub_24132844C();
  v1 = sub_24132C210(v5);
  swift_bridgeObjectRelease();
  if (v1 >> 62)
    goto LABEL_39;
  v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_40;
LABEL_5:
  if (v6 >= 1)
  {
    v7 = 0;
    v34 = (double *)(v0 + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs);
    v33 = v1 & 0xC000000000000001;
    v32 = v1;
    while (1)
    {
      v8 = v33 ? (id)MEMORY[0x242694E34](v7, v1) : *(id *)(v1 + 8 * v7 + 32);
      v9 = v8;
      v10 = sub_24132CE30(v2, v7, *v34, v34[1]);
      if (v10)
        break;

LABEL_8:
      if (v6 == ++v7)
        goto LABEL_40;
    }
    v13 = v11;
    v14 = v12;
    v15 = v3;
    v16 = v10;
    v17 = (void *)sub_2414B4D44();
    objc_msgSend(v9, sel_addAnimation_forKey_, v16, v17);

    v18 = v13;
    v19 = (void *)sub_2414B4D44();
    objc_msgSend(v9, sel_addAnimation_forKey_, v18, v19);

    v20 = v14;
    v21 = (void *)sub_2414B4D44();
    objc_msgSend(v9, sel_addAnimation_forKey_, v20, v21);

    v22 = objc_msgSend(v18, sel_values);
    if (v22)
    {
      v23 = v22;
      v24 = v2;
      v25 = sub_2414B4EC4();

      if (*(_QWORD *)(v25 + 16))
      {
        sub_2412E4960(v25 + 32, (uint64_t)&v36);
      }
      else
      {
        v36 = 0u;
        v37 = 0u;
      }
      swift_bridgeObjectRelease();
      v2 = v24;
      if (!*((_QWORD *)&v37 + 1))
        goto LABEL_29;
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_30;
      v26 = objc_msgSend(v16, sel_values);
      if (v26)
      {
        v27 = v26;
        v28 = sub_2414B4EC4();

        if (*(_QWORD *)(v28 + 16))
        {
          sub_2412E4960(v28 + 32, (uint64_t)&v36);
        }
        else
        {
          v36 = 0u;
          v37 = 0u;
        }
        swift_bridgeObjectRelease();
        v2 = v24;
        if (!*((_QWORD *)&v37 + 1))
          goto LABEL_29;
        if ((swift_dynamicCast() & 1) != 0)
        {
          v29 = objc_msgSend(v20, sel_values);
          if (v29)
          {
            v30 = v29;
            v31 = sub_2414B4EC4();

            if (*(_QWORD *)(v31 + 16))
            {
              sub_2412E4960(v31 + 32, (uint64_t)&v36);
            }
            else
            {
              v36 = 0u;
              v37 = 0u;
            }
            swift_bridgeObjectRelease();
            v2 = v24;
            if (*((_QWORD *)&v37 + 1))
            {
              v3 = v15;
              if ((swift_dynamicCast() & 1) != 0)
              {
                objc_msgSend(v9, sel_frame);
                objc_msgSend(v9, sel_setFrame_);
                objc_msgSend(v9, sel_setCornerRadius_, v35);
              }

              goto LABEL_32;
            }
            goto LABEL_29;
          }
          goto LABEL_28;
        }
LABEL_30:

        goto LABEL_31;
      }
    }
LABEL_28:
    v36 = 0u;
    v37 = 0u;
LABEL_29:

    sub_2412CBE78((uint64_t)&v36, &qword_25437D280);
LABEL_31:
    v3 = v15;
LABEL_32:
    v1 = v32;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_24132B0D8(char *a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v14[6];

  v4 = *(id *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  v5 = sub_24132844C();
  if (v5 >> 62)
  {
    v6 = sub_2414B56C8();
    if (!v6)
      goto LABEL_10;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      goto LABEL_10;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x242694E34](i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, sel_setBackgroundColor_, v4);

  }
LABEL_10:
  swift_bridgeObjectRelease();

  if (a2 == 1)
  {
    v10 = (void *)objc_opt_self();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    v14[4] = sub_24132E658;
    v14[5] = v11;
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 1107296256;
    v14[2] = sub_2413002C8;
    v14[3] = &block_descriptor_72;
    v12 = _Block_copy(v14);
    sub_24132DBF8(1uLL);
    v13 = a1;
    swift_release();
    objc_msgSend(v10, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v12, 0, 0.325, 0.0, 0.8, 0.0);
    _Block_release(v12);
  }
}

uint64_t sub_24132B298(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  *(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = a2;
  swift_release();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_24132E660;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = (_QWORD *)(a2 + 24);
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 24);
  swift_retain();
  v8 = a1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_24146CEA8(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    v7 = sub_24146CEA8((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v11 + 1;
  v12 = &v7[2 * v11];
  v12[4] = sub_24132ED7C;
  v12[5] = v5;
  swift_endAccess();
  swift_release();
  return sub_24132C3D8();
}

unint64_t sub_24132B3EC(char *a1)
{
  unint64_t result;
  uint64_t v3;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  result = (unint64_t)objc_msgSendSuper2(&v5, sel_layoutSubviews);
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  if ((unint64_t)(v3 - 2) >= 3 && v3 != 1)
  {
    if (!v3)
      result = sub_24132DABC(0);
    if (!*(_QWORD *)&a1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation])
      return sub_24132A4CC();
  }
  return result;
}

unint64_t sub_24132B464()
{
  char *v0;
  unint64_t result;
  uint64_t v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  result = (unint64_t)objc_msgSendSuper2(&v4, sel_layoutSubviews);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode];
  if ((unint64_t)(v2 - 2) >= 3 && v2 != 1)
  {
    if (!v2)
      result = sub_24132DABC(0);
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation])
      return sub_24132A4CC();
  }
  return result;
}

void sub_24132B4D4()
{
  char *v0;
  double v1;
  double Height;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  _QWORD **v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD **v49;
  id v50;
  id v51;
  uint64_t aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  id (*v56)(id);
  uint64_t v57;
  CGRect v58;

  v1 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs];
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v58);
  v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16];
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24];
  type metadata accessor for AnimationGroup();
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4AF8];
  v49 = (_QWORD **)(v5 + 16);
  *(_QWORD *)(v5 + 24) = v6;
  v45 = (_QWORD **)(v5 + 24);
  v51 = v3;
  v50 = v4;
  v7 = sub_24132844C();
  if (v7 >> 62)
  {
    v8 = sub_2414B56C8();
    if (v8)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_15;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  v43 = v0;
  v44 = v5;
  v9 = 0;
  v46 = v7 & 0xC000000000000001;
  v10 = v1 * 0.125;
  v47 = v8;
  v48 = v7;
  do
  {
    if (v46)
      v11 = (id)MEMORY[0x242694E34](v9, v7);
    else
      v11 = *(id *)(v7 + 8 * v9 + 32);
    v12 = v11;
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD518]), sel_initWithControlPoint1_controlPoint2_, 0.11, 0.0, 0.5, 0.0);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v13, 0.25);

    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v12;
    *(_QWORD *)(v15 + 24) = v50;
    *(double *)(v15 + 32) = Height * 0.7;
    v56 = (id (*)(id))sub_24132DD60;
    v57 = v15;
    v16 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v53 = 1107296256;
    v54 = sub_2413002C8;
    v55 = &block_descriptor_47;
    v17 = _Block_copy(&aBlock);
    v18 = v50;
    v19 = v12;
    swift_release();
    objc_msgSend(v14, sel_addAnimations_, v17);
    _Block_release(v17);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD518]), sel_initWithControlPoint1_controlPoint2_, 0.11, 0.0, 0.5, 0.0);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB20]), sel_initWithDuration_timingParameters_, v20, 0.25);

    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v19;
    *(_QWORD *)(v22 + 24) = v51;
    *(double *)(v22 + 32) = v10;
    v56 = (id (*)(id))sub_24132DD60;
    v57 = v22;
    aBlock = v16;
    v53 = 1107296256;
    v54 = sub_2413002C8;
    v55 = &block_descriptor_53;
    v23 = _Block_copy(&aBlock);
    v24 = v51;
    v25 = v19;
    swift_release();
    objc_msgSend(v21, sel_addAnimations_, v23);
    _Block_release(v23);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v21;
    v56 = sub_24132DDBC;
    v57 = v26;
    aBlock = v16;
    v53 = 1107296256;
    v54 = sub_24132A888;
    v55 = &block_descriptor_59;
    v27 = _Block_copy(&aBlock);
    v28 = v21;
    swift_release();
    objc_msgSend(v14, sel_addCompletion_, v27);
    _Block_release(v27);
    swift_beginAccess();
    v29 = *v49;
    v30 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v49 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v29 = sub_24146CD9C(0, v29[2] + 1, 1, v29);
      *v49 = v29;
    }
    v33 = v29[2];
    v32 = v29[3];
    if (v33 >= v32 >> 1)
    {
      v29 = sub_24146CD9C((_QWORD *)(v32 > 1), v33 + 1, 1, v29);
      *v49 = v29;
    }
    v29[2] = v33 + 1;
    v34 = (double *)&v29[2 * v33];
    *((_QWORD *)v34 + 4) = v30;
    v34[5] = (double)v9 * 0.1;
    swift_endAccess();

    ++v9;
    v7 = v48;
  }
  while (v47 != v9);
  swift_bridgeObjectRelease();
  v0 = v43;
  v5 = v44;
LABEL_16:
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v0;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_24132ECD0;
  *(_QWORD *)(v36 + 24) = v35;
  swift_beginAccess();
  v37 = *v45;
  v38 = v0;
  swift_retain();
  v39 = swift_isUniquelyReferenced_nonNull_native();
  *v45 = v37;
  if ((v39 & 1) == 0)
  {
    v37 = sub_24146CEA8(0, v37[2] + 1, 1, v37);
    *v45 = v37;
  }
  v41 = v37[2];
  v40 = v37[3];
  if (v41 >= v40 >> 1)
  {
    v37 = sub_24146CEA8((_QWORD *)(v40 > 1), v41 + 1, 1, v37);
    *v45 = v37;
  }
  v37[2] = v41 + 1;
  v42 = &v37[2 * v41];
  v42[4] = sub_24132ED7C;
  v42[5] = v36;
  swift_endAccess();
  swift_release();
  *(_QWORD *)&v38[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = v5;
  swift_retain();
  swift_release();
  sub_24132C3D8();
  swift_release();

}

uint64_t sub_24132BAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a4;
  v5 = sub_2414B562C();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v6 = sub_2414B5644();
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  sub_2414B4FC0();
  v4[15] = sub_2414B4FB4();
  v4[16] = sub_2414B4F90();
  v4[17] = v7;
  return swift_task_switch();
}

uint64_t sub_24132BB7C()
{
  uint64_t v0;

  if ((sub_2414B5074() & 1) != 0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_24132B4D4();
    sub_2414B5638();
    *(_OWORD *)(v0 + 40) = xmmword_2414BA4A0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_24132BC1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_2412C8030(&qword_257122348, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_2414B5848();
  sub_2412C8030(&qword_257122350, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_2414B5650();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[18] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_24132BD28;
  return sub_2414B5854();
}

uint64_t sub_24132BD28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
  return swift_task_switch();
}

uint64_t sub_24132BDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

void sub_24132BE40()
{
  char *v0;
  char *v1;
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  id v25;
  objc_super v26;

  v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, sel_tintColorDidChange);
  if ((unint64_t)(*(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] - 2) >= 3)
  {
    v2 = (id *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
    v3 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 8];
    v4 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 16];
    v5 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette + 24];
    v6 = qword_2543826F8;
    v7 = *(id *)&v1[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
    v25 = v3;
    v8 = v4;
    v24 = v5;
    if (v6 != -1)
      swift_once();
    v9 = (void *)qword_2543826D8;
    v10 = (void *)unk_2543826E0;
    v12 = (void *)qword_2543826E8;
    v11 = (void *)unk_2543826F0;
    sub_2412CC884(0, &qword_254382930);
    v13 = v9;
    v14 = v10;
    v15 = v12;
    v16 = v11;
    if ((sub_2414B532C() & 1) == 0 || (sub_2414B532C() & 1) == 0)
    {

      return;
    }
    if ((sub_2414B532C() & 1) == 0)
    {

      return;
    }
    v17 = sub_2414B532C();

    if ((v17 & 1) != 0)
    {
      v18 = *v2;
      v19 = sub_24132844C();
      if (v19 >> 62)
      {
        v20 = sub_2414B56C8();
        if (v20)
          goto LABEL_10;
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v20)
        {
LABEL_10:
          if (v20 >= 1)
          {
            for (i = 0; i != v20; ++i)
            {
              if ((v19 & 0xC000000000000001) != 0)
                v22 = (id)MEMORY[0x242694E34](i, v19);
              else
                v22 = *(id *)(v19 + 8 * i + 32);
              v23 = v22;
              objc_msgSend(v22, sel_setBackgroundColor_, v18);

            }
            goto LABEL_20;
          }
          __break(1u);
          return;
        }
      }
LABEL_20:

      swift_bridgeObjectRelease();
    }
  }
}

void sub_24132C158()
{
  unsigned __int8 *v0;
  id v1;
  int v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_didMoveToWindow);
  v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {

    v2 = v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible];
    v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 1;
    if (v2 != 1)
      sub_24132A4CC();
  }
  else
  {
    v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  }
}

uint64_t sub_24132C210(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v2)
      break;
    v8 = MEMORY[0x24BEE4AF8];
    result = sub_2414B5608();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x242694E34](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_layer);

      sub_2414B55F0();
      sub_2414B5614();
      sub_2414B5620();
      sub_2414B55FC();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_2414B56C8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for WaveformPlayIndicator()
{
  return objc_opt_self();
}

uint64_t sub_24132C39C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_24132C3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  void *v12;
  double v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;

  v1 = v0;
  v2 = sub_2414B4B94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4BB8();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = dispatch_group_create();
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  v10 = MEMORY[0x24BDAC760];
  if (v9)
  {
    v25 = v0;
    v26 = v5;
    v27 = v3;
    v28 = v2;
    v24 = swift_bridgeObjectRetain();
    v11 = (double *)(v24 + 40);
    do
    {
      v12 = (void *)*((_QWORD *)v11 - 1);
      v13 = *v11;
      v11 += 2;
      v14 = v12;
      dispatch_group_enter(v8);
      objc_msgSend(v14, sel_startAnimationAfterDelay_, v13);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v8;
      v37 = sub_24132E744;
      v38 = v15;
      aBlock = v10;
      v34 = 1107296256;
      v35 = sub_24132A888;
      v36 = &block_descriptor_103;
      v16 = _Block_copy(&aBlock);
      v17 = v14;
      v18 = v8;
      swift_release();
      objc_msgSend(v17, sel_addCompletion_, v16);
      _Block_release(v16);

      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v3 = v27;
    v2 = v28;
    v1 = v25;
    v5 = v26;
  }
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v19 = (void *)sub_2414B5230();
  v37 = sub_24132E74C;
  v38 = v1;
  aBlock = v10;
  v34 = 1107296256;
  v35 = sub_2413002C8;
  v36 = &block_descriptor_106;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  v21 = v29;
  sub_2414B4BAC();
  v32 = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
  sub_2414B5464();
  sub_2414B51F4();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v31);
  return swift_release();
}

uint64_t sub_24132C6F4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;

  result = swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      v6 = *(void (**)(uint64_t))(v5 - 8);
      v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24132C780()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnimationGroup()
{
  return objc_opt_self();
}

uint64_t sub_24132C7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v14;

  v0 = sub_2414B2A88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, qword_254382538);
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_254382538);
  if (qword_2543846C8 != -1)
    swift_once();
  v8 = (void *)qword_25438E910;
  v9 = (void *)sub_2414B4D44();
  v10 = (void *)sub_2414B4D44();
  v11 = objc_msgSend(v8, sel_URLForResource_withExtension_, v9, v10);

  if (v11)
  {
    sub_2414B2A64();

    v12 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v12(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v7, v6, v0);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

void sub_24132C9AC()
{
  qword_257122358 = 0x4059000000000000;
}

uint64_t sub_24132C9BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[7] = v0;
  v2 = sub_2414B2CA4();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = sub_2414B2A88();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24132CA44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  if (qword_254382550 != -1)
    swift_once();
  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_254382538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v7 = (uint64_t (*)(uint64_t))((char *)&dword_257124B00 + dword_257124B00);
  v5 = (_QWORD *)swift_task_alloc();
  v0[14] = v5;
  *v5 = v0;
  v5[1] = sub_24132CB00;
  return v7(v0[13]);
}

uint64_t sub_24132CB00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 120) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 128) = a2;
    *(_QWORD *)(v6 + 136) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_24132CB78()
{
  uint64_t v0;
  int8x16_t *v1;

  v1 = *(int8x16_t **)(v0 + 56);
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 128), *(int8x16_t *)(v0 + 128), 8uLL);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(int8x16_t *))(v0 + 8))(v1);
}

uint64_t sub_24132CBC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_257120630 != -1)
    swift_once();
  v1 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_257122360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = v1;
  v7 = v1;
  v8 = sub_2414B2C8C();
  v9 = sub_2414B51B8();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 64);
  if (v10)
  {
    v21 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 72);
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22 = v16;
    *(_DWORD *)v15 = 136446210;
    swift_getErrorValue();
    v17 = sub_2414B5878();
    *(_QWORD *)(v0 + 48) = sub_2412E4890(v17, v18, &v22);
    sub_2414B541C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2412C1000, v8, v9, "WaveformPlayIndicator: unable to decode mica asset for WaveformIndicator  %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v16, -1, -1);
    MEMORY[0x242695BD8](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v21);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  type metadata accessor for BouncyBarsAsset();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

_QWORD *sub_24132CE30(uint64_t a1, unint64_t a2, double a3, double a4)
{
  _QWORD *p_isa;
  char **p_types;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  unint64_t v25;
  double v26;
  double v27;
  _QWORD *result;
  void *v29;
  _QWORD *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  NSObject *v34;
  double v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  char **v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  id v54;
  uint8_t *v55;
  NSObject *v56;
  uint64_t *v57;
  void *v58;
  char *v59;
  char **v60;
  uint64_t v61;
  id v62;
  _OWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  _OWORD *v67;
  NSObject *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD v76[5];
  uint64_t v77;
  uint64_t v78;

  p_isa = (_QWORD *)sub_2414B2CA4();
  p_types = (char **)*(p_isa - 1);
  MEMORY[0x24BDAC7A8](p_isa);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v59 - v13;
  sub_24132D6B0(a1, a2);
  if (!v15)
  {
LABEL_29:
    if (qword_257120630 != -1)
LABEL_48:
      swift_once();
    v44 = __swift_project_value_buffer((uint64_t)p_isa, (uint64_t)qword_257122360);
    ((void (*)(char *, uint64_t, void *))p_types[2])(v11, v44, p_isa);
    v45 = sub_2414B2C8C();
    v46 = sub_2414B51B8();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_2412C1000, v45, v46, "WaveformPlayIndicator: BouncyBars asset does not have expected layers / animations", v47, 2u);
      MEMORY[0x242695BD8](v47, -1, -1);
    }

    ((void (*)(char *, void *))p_types[1])(v11, p_isa);
    return 0;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_values);
  if (!v17)
  {

    goto LABEL_29;
  }
  v18 = v17;
  v59 = v14;
  v60 = p_types;
  v61 = (uint64_t)p_isa;
  v19 = sub_2414B4EC4();

  objc_msgSend(v16, sel_copy);
  sub_2414B544C();
  swift_unknownObjectRelease();
  sub_2412CC884(0, &qword_2571223E8);
  swift_dynamicCast();
  p_isa = (_QWORD *)v72;
  objc_msgSend(v16, sel_copy);
  sub_2414B544C();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v20 = v72;
  v62 = v16;
  objc_msgSend(v16, sel_copy);
  sub_2414B544C();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v11 = 0;
  v68 = v72;
  v69 = v19;
  v65 = v19 + 32;
  v64 = &v71;
  v63 = (__int128 *)((char *)&v72 + 8);
  v67 = v76;
  v21 = a3 * 0.125;
  v22 = MEMORY[0x24BEE50B0];
  v66 = 0x80000002414CE750;
  p_types = &stru_251188FF8.types;
  while (1)
  {
    v23 = *(char **)(v69 + 16);
    if (v11 == v23)
    {
      v74 = 0;
      v72 = 0u;
      v73 = 0u;
    }
    else
    {
      if (v11 >= v23)
        goto LABEL_47;
      v24 = v64;
      sub_2412E4960(v65 + 32 * (_QWORD)v11, (uint64_t)v64);
      *(_QWORD *)&v72 = v11;
      sub_2412D8D3C(v24, v63);
      ++v11;
    }
    sub_24132E6FC((uint64_t)&v72, (uint64_t)&v75);
    if (!v76[3])
    {

      swift_bridgeObjectRelease();
      return p_isa;
    }
    v25 = v75;
    sub_2412D8D3C(v67, &v72);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      if (qword_257120630 != -1)
        swift_once();
      v48 = v61;
      v49 = __swift_project_value_buffer(v61, (uint64_t)qword_257122360);
      v50 = v60;
      v51 = v59;
      ((void (*)(char *, uint64_t, uint64_t))v60[2])(v59, v49, v48);
      v52 = sub_2414B2C8C();
      v53 = sub_2414B51B8();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = v62;
        v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v55 = 0;
        _os_log_impl(&dword_2412C1000, v52, v53, "BouncyBars asset does not have expected layers / animations", v55, 2u);
        MEMORY[0x242695BD8](v55, -1, -1);
        v56 = v20;
        v57 = &v78;
      }
      else
      {
        v56 = v52;
        v54 = p_isa;
        v52 = v68;
        p_isa = &v20->isa;
        v57 = &v77;
      }
      v58 = (void *)*(v57 - 32);

      ((void (*)(char *, uint64_t))v50[1])(v51, v48);
      return 0;
    }
    v26 = v70;
    if (qword_257120628 != -1)
      swift_once();
    v27 = v26 / *(double *)&qword_257122358;
    *((_QWORD *)&v73 + 1) = v22;
    *(double *)&v72 = v27 * a4;
    result = objc_msgSend(p_isa, sel_values);
    if (!result)
      break;
    v29 = result;
    v30 = (_QWORD *)sub_2414B4EC4();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v25 & 0x8000000000000000) != 0)
        goto LABEL_42;
    }
    else
    {
      v30 = sub_241497A84(v30);
      if ((v25 & 0x8000000000000000) != 0)
      {
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    if (v25 >= v30[2])
      goto LABEL_43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30[4 * v25 + 4]);
    sub_2412D8D3C(&v72, &v30[4 * v25 + 4]);
    v31 = (void *)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    objc_msgSend(p_isa, sel_setValues_, v31);

    v32 = v20;
    v33 = (void *)sub_2414B4D44();
    -[NSObject setKeyPath:](v32, sel_setKeyPath_, v33);

    if (v21 > v21 * 1.12)
      goto LABEL_44;
    v34 = v20;
    v35 = v21 + (v21 * 1.12 - v21) * v27;
    *((_QWORD *)&v73 + 1) = v22;
    *(double *)&v72 = v35;
    result = -[NSObject values](v32, sel_values);
    if (!result)
      goto LABEL_50;
    v36 = result;
    v37 = (_QWORD *)sub_2414B4EC4();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v37 = sub_241497A84(v37);
    if (v25 >= v37[2])
      goto LABEL_45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37[4 * v25 + 4]);
    sub_2412D8D3C(&v72, &v37[4 * v25 + 4]);
    v38 = (void *)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    -[NSObject setValues:](v32, sel_setValues_, v38);

    p_types = &stru_251188FF8.types;
    v39 = v68;
    v40 = (void *)sub_2414B4D44();
    -[NSObject setKeyPath:](v39, sel_setKeyPath_, v40);

    *((_QWORD *)&v73 + 1) = v22;
    *(double *)&v72 = v35 * 0.5;
    result = -[NSObject values](v39, sel_values);
    if (!result)
      goto LABEL_51;
    v41 = result;
    v42 = (_QWORD *)sub_2414B4EC4();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_241497A84(v42);
    if (v25 >= v42[2])
      goto LABEL_46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42[4 * v25 + 4]);
    sub_2412D8D3C(&v72, &v42[4 * v25 + 4]);
    v43 = (void *)sub_2414B4EB8();
    swift_bridgeObjectRelease();
    -[NSObject setValues:](v39, sel_setValues_, v43);

    v20 = v34;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_24132D6B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  void *v20;

  v4 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = (a1 << 56) + 0x41746E6169726156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_2412CD2DC(v5, 0xE800000000000000);
    if ((v7 & 1) != 0)
    {
      sub_2412E4960(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v18);
    }
    else
    {
      v18 = 0u;
      v19 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437D280);
  sub_2412CC884(0, &qword_254382918);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = v20;
  }
  else
  {
    v8 = 0;
    v20 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    v9 = objc_msgSend(v8, sel_sublayers);

    if (v9)
    {
      v10 = sub_2414B4EC4();

      if ((v10 & 0xC000000000000001) == 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          v11 = *(id *)(v10 + 8 * a2 + 32);
          goto LABEL_16;
        }
        __break(1u);
        return;
      }
      v11 = (id)MEMORY[0x242694E34](a2, v10);
LABEL_16:
      v12 = v11;
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v12, sel_animationKeys);
      if (v13)
      {
        v14 = v13;
        v15 = sub_2414B4EC4();

        if (*(_QWORD *)(v15 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v16 = (void *)sub_2414B4D44();
          swift_bridgeObjectRelease();
          v17 = objc_msgSend(v12, sel_animationForKey_, v16);

          if (v17)
          {
            objc_opt_self();
            if (!swift_dynamicCastObjCClass())

          }
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {

      }
    }
  }
}

uint64_t sub_24132D91C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BouncyBarsAsset()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for AnimationGroup.Animator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

void destroy for AnimationGroup.Animator(id *a1)
{

}

uint64_t assignWithCopy for AnimationGroup.Animator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for AnimationGroup.Animator(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationGroup.Animator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationGroup.Animator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationGroup.Animator()
{
  return &type metadata for AnimationGroup.Animator;
}

unint64_t sub_24132DABC(unint64_t result)
{
  if (result >= 2)
    return swift_retain();
  return result;
}

unint64_t sub_24132DACC(unint64_t result)
{
  if (result - 2 >= 3)
    return sub_24132DAE0(result);
  return result;
}

unint64_t sub_24132DAE0(unint64_t result)
{
  if (result >= 2)
    return swift_release();
  return result;
}

uint64_t sub_24132DAF0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24132DB1C()
{
  uint64_t v0;

  return sub_24132B298(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24132DB24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24132DB48()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257122360);
  __swift_project_value_buffer(v0, (uint64_t)qword_257122360);
  return sub_2414B2C98();
}

uint64_t sub_24132DBBC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 5uLL)
    swift_release();
  return swift_deallocObject();
}

void sub_24132DBF0()
{
  uint64_t v0;

  sub_24132B0D8(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_24132DBF8(unint64_t result)
{
  if (result - 2 >= 3)
    return sub_24132DABC(result);
  return result;
}

void sub_24132DC0C()
{
  uint64_t v0;

  sub_24132AAF4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24132DC14()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24132DC40()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
  return objc_msgSend(v1, sel_setAlpha_, 1.0);
}

uint64_t sub_24132DC78()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_24132DC9C()
{
  uint64_t v0;

  return sub_24132A8C4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_24132DCA4()
{
  uint64_t v0;

  return sub_24132A3E4(*(_QWORD *)(v0 + 16));
}

void sub_24132DCAC(uint64_t a1)
{
  uint64_t v1;

  sub_24132A76C(a1, *(char **)(v1 + 16));
}

uint64_t sub_24132DCB4()
{
  return objectdestroy_38Tm();
}

uint64_t sub_24132DCBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310430;
  return sub_24132BAB0(a1, v4, v5, v6);
}

uint64_t sub_24132DD34()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24132DD64()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_setBackgroundColor_, *(_QWORD *)(v0 + 24));
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_setBounds_);
}

id sub_24132DDBC(id result)
{
  uint64_t v1;

  if (!result)
    return objc_msgSend(*(id *)(v1 + 16), sel_startAnimation);
  return result;
}

unint64_t sub_24132DDD4(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x242695BF0](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x242695BF0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24132DE5C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v1 = a1;
  v31 = a1;
  if (a1 >> 62)
    goto LABEL_57;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = 0;
  if (v2)
  {
    v5 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
    while (1)
    {
      v6 = v1 >> 62;
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        if (!v12)
          goto LABEL_51;
        swift_bridgeObjectRetain();
        v13 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        if (!v13)
          goto LABEL_52;
      }
      else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_51;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x242694E34](0, v1);
        if (!v6)
          goto LABEL_10;
      }
      else
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          swift_bridgeObjectRetain();
          v2 = sub_2414B56C8();
          goto LABEL_3;
        }
        v7 = *(id *)(v1 + 32);
        if (!v6)
        {
LABEL_10:
          if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      v14 = sub_2414B56C8();
      swift_bridgeObjectRelease();
      if (!v14)
        goto LABEL_55;
LABEL_11:
      sub_24132E9A0(0, 1, (unint64_t *)&qword_2543843E0);
      v1 = v31;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        v15 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        if (!v15)
        {
LABEL_29:
          v10 = 0;
          if (v4)
            goto LABEL_19;
          goto LABEL_30;
        }
      }
      else if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || (v1 & 0x8000000000000000) != 0
        || (v1 & 0x4000000000000000) != 0)
      {
        sub_241497A1C(v1);
      }
      v8 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v8)
        goto LABEL_54;
      v9 = v8 - 1;
      v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
      v1 = (unint64_t)&v31;
      sub_2414B4EDC();
      if (v4)
      {
LABEL_19:
        v11 = __OFSUB__(v4--, 1);
        if (v11)
          goto LABEL_53;
        goto LABEL_42;
      }
LABEL_30:
      v16 = v3[3];
      if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_56;
      v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if (v17 <= 1)
        v18 = 1;
      else
        v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254382978);
      v1 = swift_allocObject();
      v19 = _swift_stdlib_malloc_size((const void *)v1);
      v20 = v19 - 32;
      if (v19 < 32)
        v20 = v19 - 17;
      v21 = v20 >> 4;
      *(_QWORD *)(v1 + 16) = v18;
      *(_QWORD *)(v1 + 24) = 2 * (v20 >> 4);
      v22 = v1 + 32;
      v23 = v3[3] >> 1;
      if (v3[2])
      {
        v24 = v3 + 4;
        if ((_QWORD *)v1 != v3 || v22 >= (unint64_t)v24 + 16 * v23)
          memmove((void *)(v1 + 32), v24, 16 * v23);
        v3[2] = 0;
      }
      v5 = (_QWORD *)(v22 + 16 * v23);
      v25 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
      swift_release();
      v3 = (_QWORD *)v1;
      v11 = __OFSUB__(v25, 1);
      v4 = v25 - 1;
      if (v11)
        goto LABEL_53;
LABEL_42:
      *v5 = v7;
      v5[1] = v10;
      v1 = v31;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        v5 += 2;
        if (!v26)
          break;
      }
      else
      {
        v5 += 2;
        if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          break;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v28 = v3[3];
  if (v28 < 2)
    return (uint64_t)v3;
  v29 = v28 >> 1;
  v11 = __OFSUB__(v29, v4);
  v30 = v29 - v4;
  if (!v11)
  {
    v3[2] = v30;
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24132E1E4()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4AF8];
  sub_2414B5608();
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v1 = objc_msgSend(v0, sel_layer);
  v2 = *MEMORY[0x24BDE58E8];
  objc_msgSend(v1, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);

  v3 = objc_msgSend(v0, (SEL)&selRef_label);
  objc_msgSend(v3, sel_setAllowsEdgeAntialiasing_, 1);

  v4 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v4);

  sub_2414B55F0();
  sub_2414B5614();
  sub_2414B5620();
  sub_2414B55FC();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v6 = objc_msgSend(v5, (SEL)&selRef_label);
  objc_msgSend(v6, sel_setCornerCurve_, v2);

  v7 = objc_msgSend(v5, (SEL)&selRef_label);
  objc_msgSend(v7, sel_setAllowsEdgeAntialiasing_, 1);

  v8 = objc_msgSend(v5, sel_tintColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v8);

  sub_2414B55F0();
  sub_2414B5614();
  sub_2414B5620();
  sub_2414B55FC();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v10 = objc_msgSend(v9, sel_layer);
  objc_msgSend(v10, (SEL)&selRef_setUsage_ + 7, v2);

  v11 = objc_msgSend(v9, sel_layer);
  objc_msgSend(v11, sel_setAllowsEdgeAntialiasing_, 1);

  v12 = objc_msgSend(v9, sel_tintColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v12);

  sub_2414B55F0();
  sub_2414B5614();
  sub_2414B5620();
  sub_2414B55FC();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerCurve_, v2);

  v15 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v15, (SEL)&selRef_setFilters_, 1);

  v16 = objc_msgSend(v13, sel_tintColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v16);

  sub_2414B55F0();
  sub_2414B5614();
  sub_2414B5620();
  sub_2414B55FC();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v18 = objc_msgSend(v17, sel_layer);
  objc_msgSend(v18, sel_setCornerCurve_, v2);

  v19 = objc_msgSend(v17, sel_layer);
  objc_msgSend(v19, (SEL)&selRef_setFilters_, 1);

  v20 = objc_msgSend(v17, sel_tintColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v20);

  sub_2414B55F0();
  sub_2414B5614();
  sub_2414B5620();
  sub_2414B55FC();
  return v22;
}

unint64_t sub_24132E658()
{
  uint64_t v0;

  return sub_24132B3EC(*(char **)(v0 + 16));
}

uint64_t sub_24132E660()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  return swift_release();
}

uint64_t sub_24132E678()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_24132E69C(uint64_t *a1)
{
  uint64_t v1;

  sub_241329E34(a1, v1, (uint64_t)&unk_25116B7B0, (uint64_t)sub_24132ED5C, (uint64_t)&block_descriptor_97);
}

void sub_24132E6CC(uint64_t *a1)
{
  uint64_t v1;

  sub_241329E34(a1, v1, (uint64_t)&unk_25116B760, (uint64_t)sub_24132ED5C, (uint64_t)&block_descriptor_90);
}

uint64_t sub_24132E6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571223F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24132E744()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_24132E74C()
{
  uint64_t v0;

  return sub_24132C6F4(v0);
}

void sub_24132E754()
{
  _BYTE *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_mode] = 2;
  v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_colorPalette];
  if (qword_2543826F8 != -1)
    swift_once();
  v2 = (void *)qword_2543826D8;
  v3 = (void *)unk_2543826E0;
  v4 = (void *)qword_2543826E8;
  v5 = (void *)unk_2543826F0;
  *v1 = qword_2543826D8;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = v5;
  v6 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_sizeSpecs;
  v7 = qword_2543824E8;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  if (v7 != -1)
    swift_once();
  *(_OWORD *)&v0[v6] = xmmword_25438E820;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformSubscriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_defaultWaveformValueSubscriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_customWaveformValueSubscriber] = 0;
  v12 = OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_waveform;
  v13 = sub_2414B4F0C();
  *(_QWORD *)(v13 + 16) = 5;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)&v0[v12] = v13;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_isVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MediaCoreUI21WaveformPlayIndicator_cannedAnimationAsset] = 0;

  sub_2414B5674();
  __break(1u);
}

uint64_t sub_24132E8E0()
{
  return objectdestroy_38Tm();
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24132E920(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310C28;
  return sub_2413284AC(a1, v4, v5, v6);
}

uint64_t sub_24132E98C(uint64_t a1, uint64_t a2)
{
  return sub_24132E9A0(a1, a2, qword_25437CE70);
}

uint64_t sub_24132E9A0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = (unint64_t *)*v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)(((unint64_t)v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_2414B56C8();
  swift_bridgeObjectRelease();
  if (v23 < v3)
    goto LABEL_31;
LABEL_4:
  v7 = (unint64_t *)(v3 - v5);
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = (unint64_t *)(v5 - v3);
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v9 = sub_2414B56C8();
    swift_bridgeObjectRelease();
    v10 = (uint64_t)v8 + v9;
    if (!__OFADD__(v9, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_2414B56C8();
    swift_bridgeObjectRelease();
    v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62)
    goto LABEL_34;
  v9 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - (_QWORD)v7;
  if (__OFADD__(v9, v8))
    goto LABEL_36;
LABEL_8:
  v11 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v11;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v9 = 1;
  }
  v26 = v5;
  v7 = v8;
  v8 = v6;
  if (v11 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  *v4 = MEMORY[0x242694E40](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
  v6 = v8;
  v8 = v7;
  v5 = v26;
LABEL_18:
  v15 = v13 + 32;
  v16 = (char *)(v13 + 32 + 8 * v5);
  sub_2412CC884(0, v6);
  swift_arrayDestroy();
  if (!v8)
    return sub_2414B4EDC();
  if (!(*v4 >> 62))
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_2414B56C8();
  swift_bridgeObjectRelease();
  v18 = v24 - v3;
  if (__OFSUB__(v24, v3))
    goto LABEL_40;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v15 + 8 * v3);
    if (v5 != v3 || v16 >= &v19[8 * v18])
      memmove(v16, v19, 8 * v18);
    if (!(*v4 >> 62))
    {
      v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = (char *)v8 + v20;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v21;
        return sub_2414B4EDC();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_2414B56C8();
    swift_bridgeObjectRelease();
    v21 = (char *)v8 + v25;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_2414B56F8();
  __break(1u);
  return result;
}

uint64_t sub_24132ED80()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;

  v0 = sub_2414B2C14();
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (int *)_s18SingleFireSignpostVMa();
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - v6;
  v8 = sub_2414B2C44();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  if (qword_257120638 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_257136DD0);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, v15, v8);
  v16(v11, (uint64_t)v14, v8);
  *(_QWORD *)&v7[v3[7]] = 0;
  v16(v7, (uint64_t)v11, v8);
  v17 = &v7[v3[5]];
  *(_QWORD *)v17 = "Looper Configuration";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  sub_2414B2C2C();
  sub_2414B2BE4();
  v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v11, v8);
  v18 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v29 + 4);
  v18(&v7[v3[6]], v2, v0);
  v28 = v0;
  v29 = (void (*)(uint64_t, char *, uint64_t))v18;
  v26 = v14;
  v19 = v31;
  sub_24132F2FC((uint64_t)v7, v31 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperConfiguration);
  v16(v11, (uint64_t)v14, v8);
  *(_QWORD *)&v7[v3[7]] = 0;
  v16(v7, (uint64_t)v11, v8);
  v20 = &v7[v3[5]];
  *(_QWORD *)v20 = "Geometry Computation";
  *((_QWORD *)v20 + 1) = 20;
  v20[16] = 2;
  sub_2414B2C2C();
  sub_2414B2BE4();
  v21 = v27;
  v27(v11, v8);
  v18(&v7[v3[6]], v2, v0);
  sub_24132F2FC((uint64_t)v7, v19 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_geometry);
  v22 = v26;
  v16(v11, (uint64_t)v26, v8);
  v23 = (uint64_t)v30;
  *(_QWORD *)&v30[v3[7]] = 0;
  v16((char *)v23, (uint64_t)v11, v8);
  v24 = v23 + v3[5];
  *(_QWORD *)v24 = "Looper Begin Playback";
  *(_QWORD *)(v24 + 8) = 21;
  *(_BYTE *)(v24 + 16) = 2;
  sub_2414B2C2C();
  sub_2414B2BE4();
  v21(v11, v8);
  v29(v23 + v3[6], v2, v28);
  sub_24132F2FC(v23, (uint64_t)v7);
  v21(v22, v8);
  sub_24132F2FC((uint64_t)v7, v19 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperBeginPlayback);
  return v19;
}

uint64_t sub_24132F0D4()
{
  uint64_t v0;

  sub_24132F1D8(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperConfiguration);
  sub_24132F1D8(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_geometry);
  sub_24132F1D8(v0 + OBJC_IVAR____TtC11MediaCoreUI15MotionSignposts_looperBeginPlayback);
  return swift_deallocClassInstance();
}

uint64_t sub_24132F124()
{
  return type metadata accessor for MotionSignposts();
}

uint64_t type metadata accessor for MotionSignposts()
{
  uint64_t result;

  result = qword_257122438;
  if (!qword_257122438)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24132F168()
{
  uint64_t result;
  unint64_t v1;

  result = _s18SingleFireSignpostVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_24132F1D8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s18SingleFireSignpostVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24132F214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_2414B2CA4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B2C44();
  __swift_allocate_value_buffer(v4, qword_257136DD0);
  __swift_project_value_buffer(v4, (uint64_t)qword_257136DD0);
  if (qword_25437D278 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_25438E7D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_2414B2C20();
}

uint64_t sub_24132F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s18SingleFireSignpostVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24132F340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_2414B3A78();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_2414B3A84();
}

BOOL sub_24132F404()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  BOOL v6;
  __int128 v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __int128 v16;
  char v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  char v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[3];
  _OWORD v28[2];

  sub_2412EFAC0((uint64_t)v24);
  v1 = v25;
  v2 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  v3 = v0[9];
  v27[2] = v0[8];
  v28[0] = v3;
  *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v0 + 154);
  v4 = v0[7];
  v27[0] = v0[6];
  v27[1] = v4;
  sub_2412FD220((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v16);
  sub_2412FD220((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v8 = v16;
  v9 = v17;
  v10 = v18;
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  v15 = v23;
  v5 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v2 + 16))(&v8, v1, v2);
  v6 = sub_2412F662C(3u, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v6;
}

uint64_t sub_24132F528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _BYTE v32[80];
  _OWORD v33[3];
  _OWORD v34[3];

  v30 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  sub_2414B53B0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122898);
  _s23MarqueeTitleAndSubtitleVMa(255, v4, v3, v5);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  v7 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  sub_2414B4894();
  v28 = v4;
  v29 = v3;
  type metadata accessor for MetadataStyleModifier(255, v4, v3, v8);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v7, v9);
  v10 = sub_2414B4804();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - v12;
  v14 = sub_2414B3514();
  v27 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v27 - v18;
  v20 = v2[9];
  v33[2] = v2[8];
  v34[0] = v20;
  *(_OWORD *)((char *)v34 + 10) = *(_OWORD *)((char *)v2 + 154);
  v21 = v2[7];
  v33[0] = v2[6];
  v33[1] = v21;
  sub_2412FD220((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v32);
  sub_2412FD220((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  if (v32[18] == 1)
    v22 = sub_2414B385C();
  else
    v22 = sub_2414B3880();
  MEMORY[0x24BDAC7A8](v22);
  v23 = v29;
  *(&v27 - 4) = v28;
  *(&v27 - 3) = v23;
  *(&v27 - 2) = (uint64_t)v2;
  sub_2414B47F8();
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
  MEMORY[0x242693DC0](v24, v10, MEMORY[0x24BDEF7C8], v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v31[0] = v24;
  v31[1] = MEMORY[0x24BDEF7B8];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v14, v31);
  sub_2412FBF34((uint64_t)v16, v14, (uint64_t)v19);
  v25 = *(void (**)(char *, uint64_t))(v27 + 8);
  v25(v16, v14);
  sub_2412EEA1C((uint64_t)v19, v14, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v14);
}

uint64_t sub_24132F950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t AssociatedConformanceWitness;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];
  uint64_t v149;
  _QWORD v150[2];
  _QWORD v151[2];
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[4];
  _QWORD v155[2];
  _QWORD v156[5];
  uint64_t v157[5];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _OWORD v163[2];
  uint64_t v164;

  v134 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122898);
  _s23MarqueeTitleAndSubtitleVMa(255, a2, a3, v7);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v8 = sub_2414B4B1C();
  v123 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v124 = v8;
  v9 = sub_2414B4894();
  v129 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v128 = (char *)&v109 - v10;
  v12 = type metadata accessor for MetadataStyleModifier(255, a2, a3, v11);
  v125 = (void (*)(char *, uint64_t))v9;
  v127 = v12;
  v13 = sub_2414B3514();
  v131 = *(_QWORD *)(v13 - 8);
  v132 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v133 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v126 = (char *)&v109 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v130 = (uint64_t)&v109 - v18;
  v113 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x24BDAC7A8](v113);
  v115 = (uint64_t *)((char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v112 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v22 = (char *)&v109 - v21;
  v141 = v23;
  v24 = sub_2414B3514();
  v114 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v109 - v25;
  v140 = v27;
  v28 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  v138 = v28;
  v29 = sub_2414B3514();
  v117 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v116 = (char *)&v109 - v30;
  v139 = v31;
  v32 = sub_2414B3514();
  v119 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v118 = (char *)&v109 - v33;
  sub_2414B3DB4();
  v137 = v32;
  v34 = sub_2414B3514();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v120 = (char *)&v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v121 = (uint64_t)&v109 - v38;
  v142 = sub_2414B53B0();
  v136 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v40 = (char *)&v109 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v143 = (char *)&v109 - v42;
  _s19DefaultMetadataViewVMa(0, a2, a3, v43);
  v44 = sub_24132F404();
  v45 = MEMORY[0x24BDEEC40];
  v135 = v40;
  if (v44)
  {
    v109 = a1;
    v110 = v35;
    sub_2412C84FC(*(_QWORD *)(a1 + 32));
    v46 = *(void (**)(uint64_t, uint64_t))(a3 + 264);
    swift_unknownObjectRetain();
    v46(a2, a3);
    swift_unknownObjectRelease();
    v111 = a3;
    v47 = a2;
    v48 = v141;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2414B418C();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v22, v48);
    v50 = v26;
    if (qword_257120648 != -1)
      swift_once();
    v51 = qword_257122518;
    v52 = v115;
    v53 = (char *)v115 + *(int *)(v113 + 20);
    v54 = *MEMORY[0x24BDEEB78];
    v55 = sub_2414B38C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
    *v52 = v51;
    v56 = v116;
    if (qword_25437DC88 != -1)
      swift_once();
    v163[0] = xmmword_25438E788;
    v163[1] = unk_25438E798;
    v164 = qword_25438E7A8;
    v148[0] = AssociatedConformanceWitness;
    v148[1] = MEMORY[0x24BDEEC40];
    v57 = v140;
    v58 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v140, v148);
    sub_2413DE02C(0.5, (uint64_t)v52, (uint64_t *)v163, v57, v58);
    sub_24133CE04((uint64_t)v52);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v50, v57);
    v59 = v56;
    if (qword_254383B70 != -1)
      swift_once();
    sub_2414B4A44();
    v60 = sub_241302EC4();
    v147[0] = v58;
    v147[1] = v60;
    v61 = MEMORY[0x24BDED308];
    v62 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v138, v147);
    v63 = sub_2412C8FC4(&qword_254381198, &qword_2543811A0, MEMORY[0x24BDF1028]);
    v146[0] = v62;
    v146[1] = v63;
    v107 = v139;
    v108 = MEMORY[0x242695AE8](v61, v139, v146);
    v64 = v118;
    sub_2414B44B0();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v59, v107);
    v145[0] = v108;
    v145[1] = MEMORY[0x24BDEDBB8];
    v65 = v137;
    v66 = MEMORY[0x242695AE8](v61, v137, v145);
    v67 = (uint64_t)v120;
    sub_2412F6DCC();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v64, v65);
    v68 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v144[0] = v66;
    v144[1] = v68;
    MEMORY[0x242695AE8](v61, v34, v144);
    v69 = v121;
    sub_2412FBF34(v67, v34, v121);
    v70 = v110;
    v71 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v71(v67, v34);
    v40 = v135;
    sub_2412EEA1C(v69, v34, (uint64_t)v135);
    v71(v69, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v40, 0, 1, v34);
    a2 = v47;
    a1 = v109;
    v72 = (uint64_t)v125;
    a3 = v111;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v40, 1, 1, v34);
    v162[0] = swift_getAssociatedConformanceWitness();
    v162[1] = v45;
    v73 = MEMORY[0x24BDED308];
    v74 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v140, v162);
    v75 = sub_241302EC4();
    v161[0] = v74;
    v161[1] = v75;
    v76 = MEMORY[0x242695AE8](v73, v138, v161);
    v77 = sub_2412C8FC4(&qword_254381198, &qword_2543811A0, MEMORY[0x24BDF1028]);
    v160[0] = v76;
    v160[1] = v77;
    v159[0] = MEMORY[0x242695AE8](v73, v139, v160);
    v159[1] = MEMORY[0x24BDEDBB8];
    v78 = MEMORY[0x242695AE8](v73, v137, v159);
    v79 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v158[0] = v78;
    v158[1] = v79;
    MEMORY[0x242695AE8](v73, v34, v158);
    v72 = (uint64_t)v125;
  }
  v122 = v34;
  sub_2412F65F0((uint64_t)v40, (uint64_t)v143);
  v125 = *(void (**)(char *, uint64_t))(v136 + 8);
  v125(v40, v142);
  sub_2414B3970();
  v80 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v80, sel_displayScale);

  MEMORY[0x24BDAC7A8](v81);
  v82 = a2;
  v83 = v128;
  sub_2414B4888();
  v84 = sub_2412C84FC(*(_QWORD *)(a1 + 32));
  v85 = *(_QWORD *)(a1 + 8) + 80;
  swift_beginAccess();
  sub_2412F1B18(v85, (uint64_t)v157);
  swift_unknownObjectRetain();
  v86 = v40;
  v87 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v72);
  v88 = (uint64_t)v126;
  sub_241331684(v84, (uint64_t)v157, v72, v82, v87, a3);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v83, v72);
  v89 = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>, v127);
  v156[0] = v87;
  v156[1] = v89;
  v90 = MEMORY[0x24BDED308];
  v91 = v132;
  v129 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v132, v156);
  v92 = v130;
  sub_2412FBF34(v88, v91, v130);
  v93 = v131;
  v94 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v94(v88, v91);
  v95 = (uint64_t)v86;
  v96 = v86;
  v97 = v142;
  (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v96, v143, v142);
  v157[0] = v95;
  v98 = (uint64_t)v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v133, v92, v91);
  v157[1] = v98;
  v155[0] = v97;
  v155[1] = v91;
  v154[0] = swift_getAssociatedConformanceWitness();
  v154[1] = MEMORY[0x24BDEEC40];
  v99 = MEMORY[0x242695AE8](v90, v140, v154);
  v100 = sub_241302EC4();
  v153[0] = v99;
  v153[1] = v100;
  v101 = MEMORY[0x242695AE8](v90, v138, v153);
  v102 = sub_2412C8FC4(&qword_254381198, &qword_2543811A0, MEMORY[0x24BDF1028]);
  v152[0] = v101;
  v152[1] = v102;
  v151[0] = MEMORY[0x242695AE8](v90, v139, v152);
  v151[1] = MEMORY[0x24BDEDBB8];
  v103 = MEMORY[0x242695AE8](v90, v137, v151);
  v104 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v150[0] = v103;
  v150[1] = v104;
  v149 = MEMORY[0x242695AE8](v90, v122, v150);
  v154[2] = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v97, &v149);
  v154[3] = v129;
  sub_2412F68CC(v157, 2uLL, (uint64_t)v155);
  v94(v92, v91);
  v105 = (uint64_t (*)(char *, uint64_t))v125;
  v125(v143, v97);
  v94(v98, v91);
  return v105(v135, v97);
}

uint64_t sub_241330610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t result;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  _QWORD v166[2];
  _QWORD *v167;
  char *v168;
  _QWORD v169[2];
  _QWORD v170[2];

  v9 = _s23MarqueeTitleAndSubtitleVMa(255, a2, a3, a4);
  v143 = type metadata accessor for MCUINamespace(0, v9, v10, v11);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v156 = (uint64_t)&v120 - v12;
  v151 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v150 = (uint64_t)&v120 - v14;
  v15 = sub_2414B3514();
  v159 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v163 = (char *)&v120 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  v160 = v15;
  v144 = sub_2414B3514();
  v161 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v146 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v158 = (char *)&v120 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v145 = (char *)&v120 - v21;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v130);
  v141 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227E8);
  MEMORY[0x24BDAC7A8](v133);
  v24 = (char *)&v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v136 = (uint64_t)&v120 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v27);
  v132 = (uint64_t)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v134 = (uint64_t)&v120 - v30;
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227F0);
  MEMORY[0x24BDAC7A8](v131);
  v32 = (char *)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571228A0);
  MEMORY[0x24BDAC7A8](v135);
  v137 = (uint64_t)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571228A8);
  MEMORY[0x24BDAC7A8](v138);
  v139 = (uint64_t)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571228B0);
  MEMORY[0x24BDAC7A8](v125);
  v140 = (char *)&v120 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571228B8);
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v127 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571228C0);
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v126 = (char *)&v120 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122898);
  MEMORY[0x24BDAC7A8](v154);
  v155 = (uint64_t)&v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v162 = (uint64_t)&v120 - v40;
  v152 = a2;
  v153 = a3;
  v149 = _s19DefaultMetadataViewVMa(0, a2, a3, v41);
  v42 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  v43 = *(_QWORD *)(v42 + 24);
  v157 = a5;
  if (v43 && (v44 = *(_QWORD *)(a1 + 24), swift_beginAccess(), (*(_BYTE *)(v44 + 16) & 1) == 0))
  {
    v121 = a1;
    v167 = (_QWORD *)sub_2414B4DA4();
    v168 = v45;
    sub_2412F6D88();
    v46 = sub_2414B40F0();
    v48 = v47;
    v50 = v49;
    if (qword_254383B80 != -1)
      swift_once();
    v51 = sub_2414B4078();
    v123 = v52;
    v122 = v53;
    v124 = v54;
    sub_2412F6D78(v46, v48, v50 & 1);
    swift_bridgeObjectRelease();
    if (qword_257120658 != -1)
      swift_once();
    v55 = __swift_project_value_buffer(v27, (uint64_t)qword_257122520);
    v56 = v134;
    sub_2412DC3FC(v55, v134, &qword_2571265B0);
    if (qword_257120670 != -1)
      swift_once();
    v57 = *(_QWORD *)__swift_project_value_buffer(MEMORY[0x24BDF3E48], (uint64_t)qword_257122568);
    v58 = v132;
    sub_2412DC3FC(v56, v132, &qword_2571265B0);
    v59 = v133;
    v60 = (uint64_t *)&v24[*(int *)(v133 + 56)];
    *v60 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    swift_storeEnumTagMultiPayload();
    sub_2412EAEA4(v58, (uint64_t)v24, &qword_2571265B0);
    *(_QWORD *)&v24[*(int *)(v59 + 52)] = v57;
    v61 = (uint64_t)v24;
    v62 = v136;
    sub_2412EAEA4(v61, v136, &qword_2571227E8);
    sub_2412DC3FC(v62, (uint64_t)&v32[*(int *)(v131 + 36)], &qword_2571227E8);
    v63 = v123;
    *(_QWORD *)v32 = v51;
    *((_QWORD *)v32 + 1) = v63;
    LOBYTE(v59) = v122 & 1;
    v32[16] = v122 & 1;
    *((_QWORD *)v32 + 3) = v124;
    swift_retain();
    sub_241307638(v51, v63, v59);
    swift_bridgeObjectRetain();
    sub_2412CBE78(v62, &qword_2571227E8);
    sub_2412CBE78(v56, &qword_2571265B0);
    sub_2412F6D78(v51, v63, v59);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    v65 = v137;
    sub_2412DC3FC((uint64_t)v32, v137, &qword_2571227F0);
    v66 = v65 + *(int *)(v135 + 36);
    *(_QWORD *)v66 = KeyPath;
    *(_QWORD *)(v66 + 8) = 1;
    *(_BYTE *)(v66 + 16) = 0;
    sub_2412CBE78((uint64_t)v32, &qword_2571227F0);
    v67 = swift_getKeyPath();
    type metadata accessor for Geometry();
    sub_2412F0B40(&qword_2543806C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
    v68 = sub_2414B3658();
    v70 = v69;
    v71 = v139;
    sub_2412DC3FC(v65, v139, &qword_2571228A0);
    v72 = v71 + *(int *)(v138 + 36);
    *(_QWORD *)v72 = v67;
    *(_BYTE *)(v72 + 8) = 0;
    *(_QWORD *)(v72 + 16) = v68;
    *(_QWORD *)(v72 + 24) = v70;
    *(_QWORD *)(v72 + 32) = 0x776F7262657965;
    *(_QWORD *)(v72 + 40) = 0xE700000000000000;
    sub_2412CBE78(v65, &qword_2571228A0);
    v73 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v74 = sub_2412F6E9C();
    v76 = v75;

    v167 = (_QWORD *)v74;
    v168 = v76;
    sub_2414B4DF8();
    sub_2414B4DF8();
    sub_24133CFAC();
    v77 = (uint64_t)v140;
    sub_2414B4408();
    swift_bridgeObjectRelease();
    sub_2412CBE78(v71, &qword_2571228A8);
    v78 = *MEMORY[0x24BDECF28];
    v79 = sub_2414B346C();
    v80 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v81 = (uint64_t)v141;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 104))(v141, v78, v79);
    sub_2412F0B40(qword_257122270, 255, v80, MEMORY[0x24BDECF78]);
    result = sub_2414B4CE4();
    if ((result & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_2412F784C(&qword_2571228D8, &qword_2571228B0, (uint64_t (*)(void))sub_24133CFAC);
    sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    v83 = v127;
    sub_2414B42B8();
    sub_2412CBE78(v81, &qword_257122240);
    sub_2412CBE78(v77, &qword_2571228B0);
    sub_2414B31D8();
    sub_2414B31F0();
    sub_2414B31FC();
    swift_release();
    swift_release();
    sub_2414B31D8();
    sub_2414B31F0();
    sub_2414B31FC();
    swift_release();
    swift_release();
    v84 = sub_2414B31CC();
    swift_release();
    swift_release();
    v85 = v128;
    v86 = (uint64_t)v126;
    v87 = v129;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v126, v83, v129);
    v88 = v148;
    *(_QWORD *)(v86 + *(int *)(v148 + 36)) = v84;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v87);
    v89 = v162;
    sub_2412EAEA4(v86, v162, &qword_2571228C0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56))(v89, 0, 1, v88);
    a1 = v121;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v162, 1, 1, v148);
  }
  swift_retain();
  v90 = v150;
  sub_241331588(v152, v153, v150);
  v91 = MEMORY[0x242695AE8](&unk_2414BADE8, v9);
  v92 = v156;
  View.mcui.getter(v9, v156);
  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v90, v9);
  if (sub_24132F404())
  {
    v93 = v143;
    v94 = v142;
    if (qword_257120698 != -1)
      swift_once();
    v95 = &qword_2571225C0;
  }
  else
  {
    v93 = v143;
    v94 = v142;
    if (qword_257120690 != -1)
      swift_once();
    v95 = &qword_2571225B8;
  }
  v96 = v146;
  v97 = (uint64_t)v145;
  v98 = v144;
  MCUINamespace<A>.marqueeFeathering(_:_:)(0, *v95, 0, v93, v91);
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v92, v93);
  swift_getKeyPath();
  v99 = *(_QWORD *)(a1 + 176);
  v100 = *(_BYTE *)(a1 + 184);
  sub_2412E6F7C(v99, v100);
  v101 = (_QWORD *)sub_241345070(v99, v100);
  sub_2412E6BF8(v99, v100);
  swift_bridgeObjectRetain();
  v102 = v101;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v102 = sub_24146CC90(0, v101[2] + 1, 1, v101);
  v103 = v98;
  v105 = v102[2];
  v104 = v102[3];
  if (v105 >= v104 >> 1)
    v102 = sub_24146CC90((_QWORD *)(v104 > 1), v105 + 1, 1, v102);
  v102[2] = v105 + 1;
  v106 = &v102[2 * v105];
  v106[4] = 0x746C7561666544;
  v106[5] = 0xE700000000000000;
  swift_bridgeObjectRelease();
  v167 = v102;
  v107 = sub_241301CC8();
  v170[0] = v91;
  v170[1] = v107;
  v108 = MEMORY[0x24BDED308];
  v109 = v160;
  v110 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v160, v170);
  v111 = (uint64_t)v158;
  v112 = v163;
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v112, v109);
  v113 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, MEMORY[0x24BDF1028]);
  v169[0] = v110;
  v169[1] = v113;
  v114 = v103;
  v115 = MEMORY[0x242695AE8](v108, v103, v169);
  sub_2412FBF34(v111, v103, v97);
  v116 = v161;
  v117 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
  v117(v111, v103);
  v118 = v162;
  v119 = v155;
  sub_2412DC3FC(v162, v155, &qword_257122898);
  v167 = (_QWORD *)v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v96, v97, v114);
  v168 = v96;
  v166[0] = v154;
  v166[1] = v114;
  v164 = sub_24133CE40();
  v165 = v115;
  sub_2412F68CC((uint64_t *)&v167, 2uLL, (uint64_t)v166);
  v117(v97, v114);
  sub_2412CBE78(v118, &qword_257122898);
  v117((uint64_t)v96, v114);
  return sub_2412CBE78(v119, &qword_257122898);
}

uint64_t sub_241331588@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;

  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_2412F0B40(&qword_2543816E0, v6, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
  *(_QWORD *)(a3 + 16) = sub_2414B33C4();
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = swift_getKeyPath();
  *(_BYTE *)(a3 + 40) = 0;
  v9 = _s23MarqueeTitleAndSubtitleVMa(0, a1, a2, v8);
  v10 = (uint64_t *)(a3 + *(int *)(v9 + 44));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v11 = a3 + *(int *)(v9 + 48);
  result = swift_getKeyPath();
  *(_QWORD *)v11 = result;
  *(_BYTE *)(v11 + 8) = 0;
  return result;
}

uint64_t sub_241331684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];
  uint64_t v15;
  uint64_t v16;

  sub_2412F1B18(a2, (uint64_t)v14);
  v15 = a1;
  sub_2412FAA04(v14, (uint64_t)&v16);
  v12 = type metadata accessor for MetadataStyleModifier(0, a4, a6, v11);
  swift_unknownObjectRetain();
  MEMORY[0x242693DC0](&v15, a3, v12, a5);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(&v15, v12);
}

uint64_t sub_241331740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_2412F0B40(&qword_2543816E0, v2, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
  *(_QWORD *)a1 = sub_2414B33C4();
  *(_QWORD *)(a1 + 8) = v3;
  _s6BannerCMa();
  sub_2412F0B40((unint64_t *)&qword_254383BE0, 255, (uint64_t (*)(uint64_t))_s6BannerCMa, (uint64_t)&unk_2414C6ED0);
  *(_QWORD *)(a1 + 16) = sub_2414B33C4();
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = sub_2414B3658();
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = swift_getKeyPath();
  *(_BYTE *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = swift_getKeyPath();
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_WORD *)(a1 + 168) = 0;
  result = swift_getKeyPath();
  *(_QWORD *)(a1 + 176) = result;
  *(_BYTE *)(a1 + 184) = 0;
  return result;
}

uint64_t sub_241331858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[5];

  v4 = v3;
  v72 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = _s23MarqueeTitleAndSubtitleVMa(255, v6, v5, a2);
  v59 = type metadata accessor for MetadataStyleModifier(255, v6, v5, v8);
  v9 = sub_2414B3514();
  v62 = type metadata accessor for MCUINamespace(0, v9, v10, v11);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v13 = (char *)&v56 - v12;
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v56 - v15;
  v58 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v56 - v18;
  v20 = sub_2414B3514();
  v63 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v60 = (char *)&v56 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  v65 = v20;
  v22 = sub_2414B3514();
  v67 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v64 = (char *)&v56 - v23;
  v69 = v24;
  v25 = sub_2414B3514();
  v70 = *(_QWORD *)(v25 - 8);
  v71 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v66 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v68 = (uint64_t)&v56 - v28;
  v29 = *(_QWORD *)(v4 + 8);
  swift_retain();
  sub_241331588(v6, v5, (uint64_t)v16);
  v30 = sub_2412C84FC(*(_QWORD *)(v4 + 16));
  swift_beginAccess();
  sub_2412F1B18(v29 + 80, (uint64_t)v77);
  swift_unknownObjectRetain();
  v31 = MEMORY[0x242695AE8](&unk_2414BADE8, v7);
  sub_241331684(v30, (uint64_t)v77, v7, v6, v31, v5);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v7);
  v32 = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>, v59);
  v76[0] = v31;
  v76[1] = v32;
  v33 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v76);
  View.mcui.getter(v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v9);
  if (qword_257120698 != -1)
    swift_once();
  v34 = v60;
  v35 = v62;
  MCUINamespace<A>.marqueeFeathering(_:_:)(0, qword_2571225C0, 0, v62, v33);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v35);
  swift_getKeyPath();
  v36 = *(_QWORD *)(v4 + 32);
  v37 = *(_BYTE *)(v4 + 40);
  sub_2412E6F7C(v36, v37);
  v38 = (_QWORD *)sub_241345070(v36, v37);
  sub_2412E6BF8(v36, v37);
  swift_bridgeObjectRetain();
  v39 = v38;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v39 = sub_24146CC90(0, v38[2] + 1, 1, v38);
  v41 = v39[2];
  v40 = v39[3];
  if (v41 >= v40 >> 1)
    v39 = sub_24146CC90((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
  v39[2] = v41 + 1;
  v42 = &v39[2 * v41];
  v42[4] = 0x726564616548;
  v42[5] = 0xE600000000000000;
  swift_bridgeObjectRelease();
  v77[0] = v39;
  v43 = sub_241301CC8();
  v75[0] = v33;
  v75[1] = v43;
  v44 = MEMORY[0x24BDED308];
  v45 = v65;
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v65, v75);
  v47 = v64;
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v45);
  v48 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, MEMORY[0x24BDF1028]);
  v74[0] = v46;
  v74[1] = v48;
  v49 = v69;
  v50 = MEMORY[0x242695AE8](v44, v69, v74);
  v51 = (uint64_t)v66;
  MEMORY[0x242693DC0](v50, v49, MEMORY[0x24BDEF7C8], v50);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v49);
  v73[0] = v50;
  v73[1] = MEMORY[0x24BDEF7B8];
  v52 = v71;
  MEMORY[0x242695AE8](v44, v71, v73);
  v53 = v68;
  sub_2412FBF34(v51, v52, v68);
  v54 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v54(v51, v52);
  sub_2412EEA1C(v53, v52, v72);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v53, v52);
}

uint64_t sub_241331E54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  sub_2412F0B40(&qword_2543816E0, v2, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
  v3 = sub_2414B33C4();
  v5 = v4;
  v6 = sub_2414B3658();
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_241331EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v62 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F8);
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122700);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122708);
  MEMORY[0x24BDAC7A8](v51);
  v10 = (double *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122710);
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122718);
  MEMORY[0x24BDAC7A8](v52);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122720);
  MEMORY[0x24BDAC7A8](v56);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122728);
  MEMORY[0x24BDAC7A8](v57);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122730);
  MEMORY[0x24BDAC7A8](v58);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2414B3970();
  v22 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v22, sel_displayScale);
  v24 = v23;

  v25 = 1.0;
  if ((*(_QWORD *)&v24 & 0xFFFFFFFFFFFFFLL) != 0)
    v26 = 1.0;
  else
    v26 = v24;
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    v26 = v24;
  if (v24 >= 1.0)
    v25 = v26;
  *(_QWORD *)v10 = v21;
  v10[1] = 2.0 / v25 + 4.0;
  *((_BYTE *)v10 + 16) = 0;
  v27 = (uint64_t)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122738) + 44);
  v28 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a1 + 24);
  v61 = a1;
  sub_2413324C4(v63, v28, v29, v27);
  v30 = *MEMORY[0x24BDECF38];
  v31 = sub_2414B346C();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v8, v30, v31);
  sub_2412F0B40(qword_257122270, 255, v32, MEMORY[0x24BDECF78]);
  if ((sub_2414B4CE4() & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_2412C8FC4(&qword_257122740, &qword_257122708, MEMORY[0x24BDF4700]);
  sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  sub_2414B42B8();
  sub_2412CBE78((uint64_t)v8, &qword_257122240);
  sub_2412CBE78((uint64_t)v10, &qword_257122708);
  v33 = v53;
  v34 = (uint64_t)v59;
  v35 = v55;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v59, v12, v55);
  v64 = 0;
  sub_2414B4798();
  v36 = v65;
  v37 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v14, v34, v35);
  v38 = &v14[*(int *)(v52 + 36)];
  *(_QWORD *)v38 = v36;
  *((_QWORD *)v38 + 1) = v37;
  sub_2412CBE78(v34, &qword_257122700);
  v39 = (uint64_t)v14;
  v14 = v60;
  sub_2412EAEA4(v39, (uint64_t)v60, &qword_257122718);
  if (qword_2571206A0 != -1)
LABEL_12:
    swift_once();
  v40 = qword_2571225C8;
  KeyPath = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v14, (uint64_t)v16, &qword_257122718);
  v42 = &v16[*(int *)(v56 + 36)];
  *(_QWORD *)v42 = KeyPath;
  *((_WORD *)v42 + 4) = 256;
  *((_QWORD *)v42 + 2) = v40;
  v42[24] = 0;
  sub_2412CBE78((uint64_t)v14, &qword_2571226F8);
  v43 = swift_getKeyPath();
  v44 = sub_24138939C((uint64_t)&unk_251163140);
  sub_2412DC3FC((uint64_t)v16, (uint64_t)v18, &qword_257122720);
  v45 = (uint64_t *)&v18[*(int *)(v57 + 36)];
  *v45 = v43;
  v45[1] = v44;
  sub_2412CBE78((uint64_t)v16, &qword_257122720);
  v46 = sub_2413344E4();
  v48 = v47;
  sub_2412DC3FC((uint64_t)v18, (uint64_t)v20, &qword_257122728);
  v49 = (uint64_t *)&v20[*(int *)(v58 + 52)];
  *v49 = v46;
  v49[1] = v48;
  sub_2412CBE78((uint64_t)v18, &qword_257122728);
  return sub_2412EAEA4((uint64_t)v20, v62, &qword_257122730);
}

uint64_t sub_2413324C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v54 = a4;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122750);
  MEMORY[0x24BDAC7A8](v50);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122758);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v49 = (char *)&v46 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v52 = (uint64_t)&v46 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122760);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122768);
  MEMORY[0x24BDAC7A8](v19);
  v48 = (uint64_t)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v46 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v46 - v25;
  *(_QWORD *)v18 = sub_2414B3880();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v27 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122770) + 44)];
  v46 = a3;
  sub_241332944(a1, a2, a3, v27);
  _s23MarqueeTitleAndSubtitleVMa(0, a2, a3, v28);
  v29 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v30 = *(_QWORD *)(v29 + 40);
  v57 = *(_QWORD *)(v29 + 32);
  v58 = v30;
  sub_2412C8FC4(&qword_257122778, &qword_257122760, MEMORY[0x24BDF4498]);
  sub_2412F6D88();
  sub_2414B433C();
  v31 = (uint64_t)v26;
  sub_2412CBE78((uint64_t)v18, &qword_257122760);
  sub_2412EAEA4((uint64_t)v23, (uint64_t)v26, &qword_257122768);
  *(_QWORD *)v8 = sub_2414B3880();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122780);
  sub_241333A44(a1, a2, v46, (uint64_t)&v8[*(int *)(v32 + 44)]);
  v33 = *(_QWORD *)(a1 + 24);
  v34 = (uint64_t *)(v33 + 56);
  swift_beginAccess();
  v35 = *(_QWORD *)(v33 + 64);
  if (v35)
  {
    v36 = *v34;
    v37 = v35;
  }
  else
  {
    v36 = 0;
    v37 = 0xE000000000000000;
  }
  v55 = v36;
  v56 = v37;
  sub_2412C8FC4(&qword_257122788, &qword_257122750, MEMORY[0x24BDF4498]);
  swift_bridgeObjectRetain();
  v38 = (uint64_t)v47;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  sub_2412CBE78((uint64_t)v8, &qword_257122750);
  swift_beginAccess();
  v39 = (uint64_t)v49;
  sub_2414B34CC();
  sub_2412CBE78(v38, &qword_257122758);
  v40 = v52;
  sub_2412EAEA4(v39, v52, &qword_257122758);
  v41 = v48;
  sub_2412DC3FC(v31, v48, &qword_257122768);
  v42 = v53;
  sub_2412DC3FC(v40, v53, &qword_257122758);
  v43 = v54;
  sub_2412DC3FC(v41, v54, &qword_257122768);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122790);
  sub_2412DC3FC(v42, v43 + *(int *)(v44 + 48), &qword_257122758);
  sub_2412CBE78(v40, &qword_257122758);
  sub_2412CBE78(v31, &qword_257122768);
  sub_2412CBE78(v42, &qword_257122758);
  return sub_2412CBE78(v41, &qword_257122768);
}

uint64_t sub_241332944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  char *v46;
  uint64_t v47;
  int v48;
  ValueMetadata *v49;
  _UNKNOWN **v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE v103[24];
  ValueMetadata *v104;
  _UNKNOWN **v105;

  v99 = a2;
  v100 = a3;
  v98 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227F8);
  MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B3934();
  v84 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v84 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122800);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122808);
  MEMORY[0x24BDAC7A8](v85);
  v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122810);
  MEMORY[0x24BDAC7A8](v86);
  v88 = (uint64_t)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v84 - v20;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122818);
  MEMORY[0x24BDAC7A8](v87);
  v89 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122820);
  MEMORY[0x24BDAC7A8](v91);
  v92 = (uint64_t)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122828);
  MEMORY[0x24BDAC7A8](v24);
  v95 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122830);
  MEMORY[0x24BDAC7A8](v94);
  v97 = (uint64_t)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v93 = (uint64_t)&v84 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v96 = (uint64_t)&v84 - v30;
  if (qword_257120688 != -1)
    swift_once();
  v31 = *(double *)&qword_2571225B0;
  v32 = *(_QWORD *)(a1 + 32);
  v33 = *(_BYTE *)(a1 + 40);
  sub_2412C7080(v32, v33);
  sub_2412F65C0(v32, v33, v103);
  v34 = sub_2412C821C(v32, v33);
  v35 = v103[0];
  MEMORY[0x24BDAC7A8](v34);
  v36 = v100;
  *(&v84 - 4) = v99;
  *(&v84 - 3) = v36;
  *(&v84 - 2) = a1;
  if (qword_25437E370 != -1)
    swift_once();
  v103[0] = 1;
  sub_2412F6BD0(v35, 0, 0x100000000, (uint64_t (*)(uint64_t))sub_24133BF44, &qword_257122800, (uint64_t)v15, v31, *(double *)&qword_25437E360, 3.0);
  v38 = _s23MarqueeTitleAndSubtitleVMa(0, v99, v100, v37);
  v39 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v40 = *(_QWORD *)(v39 + 48);
  v99 = v38;
  v100 = a1;
  swift_bridgeObjectRetain();
  sub_2412C8A04((uint64_t)v12);
  v41 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v9, *MEMORY[0x24BDEEDE8], v7);
  LOBYTE(v39) = sub_2414B2F80();
  v42 = *(void (**)(char *, uint64_t))(v41 + 8);
  v42(v9, v7);
  v42(v12, v7);
  if ((v39 & 1) != 0)
  {
    v43 = (uint64_t)v95;
    if (qword_2571207C8 != -1)
      swift_once();
    v44 = qword_257136EB0;
    swift_retain();
  }
  else
  {
    v44 = sub_2414B46C0();
    v43 = (uint64_t)v95;
  }
  KeyPath = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v15, (uint64_t)v17, &qword_257122800);
  v46 = &v17[*(int *)(v85 + 36)];
  *(_QWORD *)v46 = v40;
  *((_QWORD *)v46 + 1) = v44;
  *((_QWORD *)v46 + 2) = 0;
  *((_QWORD *)v46 + 3) = KeyPath;
  v46[32] = 0;
  sub_2412CBE78((uint64_t)v15, &qword_257122800);
  v47 = swift_getKeyPath();
  v48 = _AXSInvertColorsEnabled();
  v49 = &type metadata for DefaultMarqueeMaskStyle;
  if (!v48)
    v49 = &type metadata for BackdropMarqueeMaskStyle;
  v50 = &off_251178640;
  if (!v48)
    v50 = &off_251178638;
  v104 = v49;
  v105 = v50;
  v51 = (uint64_t *)&v21[*(int *)(v86 + 36)];
  sub_2412F1B18((uint64_t)v103, (uint64_t)(v51 + 1));
  *v51 = v47;
  sub_2412EAEA4((uint64_t)v17, (uint64_t)v21, &qword_257122808);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  v52 = v90;
  sub_2412EAEA4((uint64_t)v21, v90, &qword_257122810);
  v53 = v100;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v54 = (void *)sub_2414B4D44();
  v55 = objc_msgSend(v54, sel__isNaturallyRTL);
  swift_bridgeObjectRelease();

  v56 = v88;
  sub_2412DC3FC(v52, v88, &qword_257122810);
  v57 = swift_getKeyPath();
  v58 = v89;
  sub_2412DC3FC(v56, v89, &qword_257122810);
  v59 = v58 + *(int *)(v87 + 36);
  *(_QWORD *)v59 = v57;
  *(_BYTE *)(v59 + 8) = v55;
  sub_2412CBE78(v56, &qword_257122810);
  sub_2412CBE78(v52, &qword_2571227F8);
  if (qword_254383BA8 != -1)
    swift_once();
  v60 = qword_254383B98;
  v61 = swift_getKeyPath();
  v62 = v92;
  sub_2412DC3FC(v58, v92, &qword_257122818);
  v63 = (uint64_t *)(v62 + *(int *)(v91 + 36));
  *v63 = v61;
  v63[1] = v60;
  swift_retain();
  sub_2412CBE78(v58, &qword_257122818);
  v64 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v65 = sub_2412F6E9C();
  v67 = v66;

  v101 = v65;
  v102 = v67;
  sub_2414B4DF8();
  sub_2414B4DF8();
  sub_24133BF58();
  sub_2414B4408();
  swift_bridgeObjectRelease();
  sub_2412CBE78(v62, &qword_257122820);
  v68 = swift_getKeyPath();
  v69 = v53 + *(int *)(v99 + 48);
  v70 = *(_QWORD *)v69;
  LOBYTE(v67) = *(_BYTE *)(v69 + 8);
  sub_2412E6F7C(*(_QWORD *)v69, v67);
  v71 = (_QWORD *)sub_241345070(v70, v67);
  sub_2412E6BF8(v70, v67);
  swift_bridgeObjectRetain();
  v72 = v71;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v72 = sub_24146CC90(0, v71[2] + 1, 1, v71);
  v74 = v72[2];
  v73 = v72[3];
  if (v74 >= v73 >> 1)
    v72 = sub_24146CC90((_QWORD *)(v73 > 1), v74 + 1, 1, v72);
  v72[2] = v74 + 1;
  v75 = &v72[2 * v74];
  v75[4] = 0x656C746954;
  v75[5] = 0xE500000000000000;
  swift_bridgeObjectRelease();
  v76 = v93;
  sub_2412DC3FC(v43, v93, &qword_257122828);
  v77 = (uint64_t *)(v76 + *(int *)(v94 + 36));
  *v77 = v68;
  v77[1] = (uint64_t)v72;
  sub_2412CBE78(v43, &qword_257122828);
  v78 = v76;
  v79 = v96;
  sub_2412EAEA4(v78, v96, &qword_257122830);
  v80 = v97;
  sub_2412DC3FC(v79, v97, &qword_257122830);
  v81 = v98;
  sub_2412DC3FC(v80, v98, &qword_257122830);
  v82 = v81 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122868) + 48);
  *(_QWORD *)v82 = 0;
  *(_BYTE *)(v82 + 8) = 0;
  sub_2412CBE78(v79, &qword_257122830);
  return sub_2412CBE78(v80, &qword_257122830);
}

uint64_t sub_2413332A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t *v42;
  _BYTE *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[24];
  ValueMetadata *v77;
  unint64_t v78;
  _QWORD v79[3];
  uint64_t v80;

  v74 = a4;
  v7 = sub_2414B40CC();
  v72 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v71 = &v58[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = _s23MarqueeTitleAndSubtitleVMa(0, a2, a3, v9);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = &v58[-v10];
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227E8);
  MEMORY[0x24BDAC7A8](v62);
  v12 = &v58[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v63 = &v58[-v14];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v15);
  v60 = &v58[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v58[-v18];
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227F0);
  MEMORY[0x24BDAC7A8](v75);
  v21 = &v58[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122870);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v64 = &v58[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v65 = a1;
  v23 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v24 = *(_QWORD *)(v23 + 40);
  v79[0] = *(_QWORD *)(v23 + 32);
  v79[1] = v24;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v25 = sub_2414B40F0();
  v27 = v26;
  v29 = v28;
  if (qword_254383BA8 != -1)
    swift_once();
  v30 = v29 & 1;
  v31 = sub_2414B4078();
  v33 = v32;
  v59 = v34;
  v61 = v35;
  sub_2412F6D78(v25, v27, v30);
  swift_bridgeObjectRelease();
  if (qword_257120660 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v15, (uint64_t)qword_257122538);
  sub_2412DC3FC(v36, (uint64_t)v19, &qword_2571265B0);
  v37 = (uint64_t)v19;
  v38 = v75;
  if (qword_257120678 != -1)
    swift_once();
  v39 = *(_QWORD *)__swift_project_value_buffer(MEMORY[0x24BDF3E48], (uint64_t)qword_257122580);
  v40 = v60;
  sub_2412DC3FC(v37, (uint64_t)v60, &qword_2571265B0);
  v41 = v62;
  v42 = (uint64_t *)&v12[*(int *)(v62 + 56)];
  *v42 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2412EAEA4((uint64_t)v40, (uint64_t)v12, &qword_2571265B0);
  *(_QWORD *)&v12[*(int *)(v41 + 52)] = v39;
  v43 = v63;
  sub_2412EAEA4((uint64_t)v12, (uint64_t)v63, &qword_2571227E8);
  sub_2412DC3FC((uint64_t)v43, (uint64_t)&v21[*(int *)(v38 + 36)], &qword_2571227E8);
  *(_QWORD *)v21 = v31;
  *((_QWORD *)v21 + 1) = v33;
  v44 = v59 & 1;
  v21[16] = v59 & 1;
  *((_QWORD *)v21 + 3) = v61;
  swift_retain();
  sub_241307638(v31, v33, v44);
  swift_bridgeObjectRetain();
  sub_2412CBE78((uint64_t)v43, &qword_2571227E8);
  sub_2412CBE78(v37, &qword_2571265B0);
  sub_2412F6D78(v31, v33, v44);
  swift_bridgeObjectRelease();
  v45 = v65;
  v46 = *(_QWORD *)v65;
  v47 = *(_BYTE *)(v65 + 8);
  sub_2412C7080(*(_QWORD *)v65, v47);
  v48 = sub_2412F9C24(v46, v47);
  sub_2412C821C(v46, v47);
  v49 = v69;
  v50 = v68;
  v51 = v45;
  v52 = v70;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v69 + 16))(v68, v51, v70);
  if ((v48 & 1) != 0)
  {
    v53 = *((_QWORD *)v50 + 3) + 80;
    swift_beginAccess();
    sub_2412F1B18(v53, (uint64_t)v79);
    v54 = v80;
    __swift_project_boxed_opaque_existential_1(v79, v80);
    v77 = &type metadata for MetadataButtonStyle;
    v78 = sub_24133C230();
    sub_2413338DC((uint64_t)v76, v54);
    (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v50, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v50, v52);
  }
  v55 = v71;
  sub_2414B40C0();
  sub_24133C1AC();
  v56 = v64;
  sub_2414B45C4();
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v55, v73);
  sub_2412CBE78((uint64_t)v21, &qword_2571227F0);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v66 + 32))(v74, v56, v67);
}

uint64_t sub_2413338DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char v14;
  _BYTE v17[40];

  v4 = sub_2414B53B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v17[-v6 - 8];
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2412F1B18(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381690);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v7, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, a2);
    v14 = sub_2414B4CE4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
  }
  else
  {
    v13(v7, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_241333A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t KeyPath;
  int v33;
  ValueMetadata *v34;
  _UNKNOWN **v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unsigned __int8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[24];
  ValueMetadata *v80;
  _UNKNOWN **v81;

  v75 = (char *)a2;
  v76 = a3;
  v74 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122798);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v67 - v15;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227B0);
  MEMORY[0x24BDAC7A8](v70);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227B8);
  MEMORY[0x24BDAC7A8](v19);
  v73 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227C0);
  MEMORY[0x24BDAC7A8](v72);
  v68 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v71 = (uint64_t)&v67 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v67 = (char *)&v67 - v25;
  if (qword_257120688 != -1)
    swift_once();
  v69 = v7;
  v26 = *(double *)&qword_2571225B0;
  v27 = *(_QWORD *)(a1 + 32);
  v28 = *(_BYTE *)(a1 + 40);
  sub_2412C7080(v27, v28);
  sub_2412F65C0(v27, v28, v79);
  v29 = sub_2412C821C(v27, v28);
  v30 = v79[0];
  MEMORY[0x24BDAC7A8](v29);
  v31 = v76;
  *(&v67 - 4) = v75;
  *(&v67 - 3) = (char *)v31;
  *(&v67 - 2) = (char *)a1;
  if (qword_25437E370 != -1)
    swift_once();
  v79[0] = 1;
  sub_2412F6BD0(v30, 0, 0x100000000, (uint64_t (*)(uint64_t))sub_24133BE10, &qword_2571227A0, (uint64_t)v10, v26, *(double *)&qword_25437E360, 3.0);
  KeyPath = swift_getKeyPath();
  v33 = _AXSInvertColorsEnabled();
  v34 = &type metadata for DefaultMarqueeMaskStyle;
  if (!v33)
    v34 = &type metadata for BackdropMarqueeMaskStyle;
  v35 = &off_251178640;
  if (!v33)
    v35 = &off_251178638;
  v80 = v34;
  v81 = v35;
  v36 = (uint64_t *)&v16[*(int *)(v11 + 36)];
  sub_2412F1B18((uint64_t)v79, (uint64_t)(v36 + 1));
  *v36 = KeyPath;
  sub_2412EAEA4((uint64_t)v10, (uint64_t)v16, &qword_2571227A0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  v37 = (uint64_t)v69;
  sub_2412EAEA4((uint64_t)v16, (uint64_t)v69, &qword_2571227A8);
  v39 = _s23MarqueeTitleAndSubtitleVMa(0, (uint64_t)v75, v76, v38);
  v76 = a1;
  v40 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v40 + 64)
    && (swift_bridgeObjectRetain(),
        v41 = (void *)sub_2414B4D44(),
        v42 = objc_msgSend(v41, sel__isNaturallyRTL),
        swift_bridgeObjectRelease(),
        v41,
        (v42 & 1) != 0))
  {
    v43 = v39;
    v44 = 1;
  }
  else
  {
    v43 = v39;
    v44 = 0;
  }
  v46 = (uint64_t)v67;
  v45 = (uint64_t)v68;
  sub_2412DC3FC(v37, (uint64_t)v13, &qword_2571227A8);
  v47 = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v13, (uint64_t)v18, &qword_2571227A8);
  v48 = &v18[*(int *)(v70 + 36)];
  *(_QWORD *)v48 = v47;
  v48[8] = v44;
  sub_2412CBE78((uint64_t)v13, &qword_2571227A8);
  sub_2412CBE78(v37, &qword_257122798);
  v49 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v50 = sub_2412F6E9C();
  v52 = v51;

  v77 = v50;
  v78 = v52;
  sub_2414B4DF8();
  sub_2414B4DF8();
  sub_24133BE24();
  v53 = (uint64_t)v73;
  sub_2414B4408();
  swift_bridgeObjectRelease();
  sub_2412CBE78((uint64_t)v18, &qword_2571227B0);
  v54 = swift_getKeyPath();
  v55 = v76 + *(int *)(v43 + 48);
  v56 = *(_QWORD *)v55;
  LOBYTE(v52) = *(_BYTE *)(v55 + 8);
  sub_2412E6F7C(*(_QWORD *)v55, v52);
  v57 = (_QWORD *)sub_241345070(v56, v52);
  sub_2412E6BF8(v56, v52);
  swift_bridgeObjectRetain();
  v58 = v57;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v58 = sub_24146CC90(0, v57[2] + 1, 1, v57);
  v60 = v58[2];
  v59 = v58[3];
  if (v60 >= v59 >> 1)
    v58 = sub_24146CC90((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
  v58[2] = v60 + 1;
  v61 = &v58[2 * v60];
  v61[4] = 0x656C746974627553;
  v61[5] = 0xE800000000000000;
  swift_bridgeObjectRelease();
  v62 = v71;
  sub_2412DC3FC(v53, v71, &qword_2571227B8);
  v63 = (uint64_t *)(v62 + *(int *)(v72 + 36));
  *v63 = v54;
  v63[1] = (uint64_t)v58;
  sub_2412CBE78(v53, &qword_2571227B8);
  sub_2412EAEA4(v62, v46, &qword_2571227C0);
  sub_2412DC3FC(v46, v45, &qword_2571227C0);
  v64 = v74;
  sub_2412DC3FC(v45, v74, &qword_2571227C0);
  v65 = v64 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571227E0) + 48);
  *(_QWORD *)v65 = 0;
  *(_BYTE *)(v65 + 8) = 0;
  sub_2412CBE78(v46, &qword_2571227C0);
  return sub_2412CBE78(v45, &qword_2571227C0);
}

uint64_t sub_241334108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v52 = a4;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227E8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v45 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - v14;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571227F0);
  MEMORY[0x24BDAC7A8](v48);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23MarqueeTitleAndSubtitleVMa(0, a2, a3, v18);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = (uint64_t *)(v19 + 56);
  swift_beginAccess();
  v21 = *(_QWORD *)(v19 + 64);
  v50 = v15;
  if (v21)
  {
    v22 = *v20;
    v23 = v21;
  }
  else
  {
    v23 = 0xE100000000000000;
    v22 = 32;
  }
  v53 = v22;
  v54 = v23;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v24 = sub_2414B40F0();
  v26 = v25;
  v28 = v27;
  if (qword_254383B90 != -1)
    swift_once();
  v45 = sub_2414B4078();
  v46 = v29;
  v31 = v30;
  v33 = v32;
  sub_2412F6D78(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  if (qword_257120668 != -1)
    swift_once();
  v34 = __swift_project_value_buffer(v10, (uint64_t)qword_257122550);
  v35 = (uint64_t)v50;
  sub_2412DC3FC(v34, (uint64_t)v50, &qword_2571265B0);
  if (qword_257120680 != -1)
    swift_once();
  v36 = v33 & 1;
  v37 = *(_QWORD *)__swift_project_value_buffer(MEMORY[0x24BDF3E48], (uint64_t)qword_257122598);
  sub_2412DC3FC(v35, (uint64_t)v12, &qword_2571265B0);
  v38 = v49;
  v39 = (uint64_t)v47;
  v40 = (uint64_t *)&v47[*(int *)(v49 + 56)];
  *v40 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2412EAEA4((uint64_t)v12, v39, &qword_2571265B0);
  *(_QWORD *)(v39 + *(int *)(v38 + 52)) = v37;
  v41 = v51;
  sub_2412EAEA4(v39, v51, &qword_2571227E8);
  sub_2412DC3FC(v41, (uint64_t)&v17[*(int *)(v48 + 36)], &qword_2571227E8);
  v43 = v45;
  v42 = v46;
  *(_QWORD *)v17 = v45;
  *((_QWORD *)v17 + 1) = v31;
  v17[16] = v36;
  *((_QWORD *)v17 + 3) = v42;
  swift_retain();
  sub_241307638(v43, v31, v36);
  swift_bridgeObjectRetain();
  sub_2412CBE78(v41, &qword_2571227E8);
  sub_2412CBE78(v35, &qword_2571265B0);
  sub_2412F6D78(v43, v31, v36);
  swift_bridgeObjectRelease();
  return sub_2412EAEA4((uint64_t)v17, v52, &qword_2571227F0);
}

uint64_t sub_2413344E4()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257122748);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B9400;
  v2 = *(_QWORD **)(v0 + 24);
  swift_beginAccess();
  v4 = v2[4];
  v3 = v2[5];
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  swift_beginAccess();
  v6 = v2[7];
  v5 = v2[8];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v7 = sub_24146CC90(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v9 = v7[2];
  v8 = v7[3];
  v10 = v9 + 1;
  if (v9 >= v8 >> 1)
    v7 = sub_24146CC90((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v10;
  v11 = &v7[2 * v9];
  v11[4] = v4;
  v11[5] = v3;
  if (v5)
  {
    v12 = v7[3];
    swift_bridgeObjectRetain();
    if (v10 >= v12 >> 1)
      v7 = sub_24146CC90((_QWORD *)(v12 > 1), v9 + 2, 1, v7);
    v7[2] = v9 + 2;
    v13 = &v7[2 * v10];
    v13[4] = v6;
    v13[5] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
  sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
  v14 = sub_2414B4CB4();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_24133469C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[3];

  v40 = a1;
  v41 = a3;
  v37 = *(_QWORD *)(a2 + 24);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v6 + 16);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B3934();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - v15;
  MEMORY[0x242695AE8](&unk_2414BA958, a2, v14);
  v17 = sub_2414B3B08();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122038);
  v38 = v17;
  v18 = sub_2414B3514();
  v39 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v31 - v22;
  v24 = v3;
  sub_2412C8A04((uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDEEDE8], v9);
  v25 = sub_2414B2F80();
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v12, v9);
  v26(v16, v9);
  if ((v25 & 1) != 0)
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v33, v24, v34);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v24 + *(int *)(a2 + 52), v37);
  v42[2] = sub_2414B31C0();
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v38);
  sub_2414B42C4();
  swift_release();
  v28 = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  v42[0] = v27;
  v42[1] = v28;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v42);
  sub_2412FBF34((uint64_t)v20, v18, (uint64_t)v23);
  v29 = *(void (**)(char *, uint64_t))(v39 + 8);
  v29(v20, v18);
  sub_2412EEA1C((uint64_t)v23, v18, v41);
  return ((uint64_t (*)(char *, uint64_t))v29)(v23, v18);
}

uint64_t static MetadataAutomaticStyle.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_2413349D4()
{
  return 1;
}

uint64_t static MetadataButtonStyle.== infix(_:_:)()
{
  return 1;
}

uint64_t MetadataStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[2];
  _BYTE v66[48];

  v4 = v3;
  v55 = a1;
  v58 = a3;
  MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>);
  v6 = sub_2414B3B08();
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v49 = (uint64_t)&v46 - v9;
  v10 = sub_2414B3568();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v54 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v6, v12);
  v14 = sub_2414B47EC();
  v51 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v48 = (char *)&v46 - v16;
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDF43B0], v14, v15);
  v18 = sub_2412F0B40(&qword_2571221E0, 255, v11, MEMORY[0x24BDED858]);
  *(_QWORD *)&v62 = v14;
  *((_QWORD *)&v62 + 1) = v10;
  v57 = v10;
  v61 = v17;
  *(_QWORD *)&v63 = v17;
  *((_QWORD *)&v63 + 1) = v18;
  v19 = MEMORY[0x242695A94](0, &v62, MEMORY[0x24BDF22B8], 0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v47 = (uint64_t)&v46 - v24;
  v25 = sub_2414B3A90();
  v56 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v60 = (uint64_t)&v46 - v26;
  sub_2412F1B18(v4 + 8, (uint64_t)v66);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381690);
  if (swift_dynamicCast())
  {
    (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(&v62, v4, a2);
    v27 = swift_allocObject();
    v28 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(v27 + 24) = v28;
    v29 = v63;
    *(_OWORD *)(v27 + 32) = v62;
    *(_OWORD *)(v27 + 48) = v29;
    *(_OWORD *)(v27 + 64) = v64;
    MEMORY[0x24BDAC7A8](v27);
    *(&v46 - 4) = v30;
    *(&v46 - 3) = v31;
    *(&v46 - 2) = v55;
    v32 = v48;
    sub_2414B47D4();
    v33 = v52;
    sub_2414B355C();
    v34 = v57;
    v55 = v20;
    v35 = v25;
    v36 = v61;
    sub_2414B4198();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v34);
    v37 = v34;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v14);
    *(_QWORD *)&v62 = v14;
    *((_QWORD *)&v62 + 1) = v34;
    *(_QWORD *)&v63 = v36;
    *((_QWORD *)&v63 + 1) = v18;
    v25 = v35;
    swift_getOpaqueTypeConformance2();
    v38 = v47;
    sub_2412FBF34((uint64_t)v22, v19, v47);
    v39 = *(void (**)(char *, uint64_t))(v55 + 8);
    v39(v22, v19);
    sub_2412EEA1C(v38, v19, (uint64_t)v22);
    v40 = v59;
    sub_24132F340((uint64_t)v22, v19);
    v39(v22, v19);
    v39((char *)v38, v19);
  }
  else
  {
    v41 = v49;
    v40 = v59;
    sub_2412FBF34(v55, v6, v49);
    v42 = v50;
    sub_2412EEA1C(v41, v6, v50);
    v37 = v57;
    *(_QWORD *)&v62 = v14;
    *((_QWORD *)&v62 + 1) = v57;
    *(_QWORD *)&v63 = v61;
    *((_QWORD *)&v63 + 1) = v18;
    swift_getOpaqueTypeConformance2();
    sub_2412F1584(v42, v19, v6);
    v43 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v43(v42, v6);
    v43(v41, v6);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  *(_QWORD *)&v62 = v14;
  *((_QWORD *)&v62 + 1) = v37;
  *(_QWORD *)&v63 = v61;
  *((_QWORD *)&v63 + 1) = v18;
  v65[0] = swift_getOpaqueTypeConformance2();
  v65[1] = v40;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v25, v65);
  v44 = v60;
  sub_2412EEA1C(v60, v25, v58);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v44, v25);
}

uint64_t sub_241334F48()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_241334F74()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 272))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241334F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = type metadata accessor for MetadataStyleModifier(255, a2, a3, a4);
  MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>, v7);
  v8 = sub_2414B3B08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - v11;
  MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v8, v10);
  sub_2412FBF34(a1, v8, (uint64_t)v12);
  sub_2412EEA1C((uint64_t)v12, v8, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_241335074@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_241334F9C(v2[4], v2[2], v2[3], a1, a2);
}

void static NowPlayingGeometryIdentifier.metadataEyebrow.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x776F7262657965;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2413350A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t KeyPath;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(_QWORD, _QWORD);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, uint64_t);
  void (*v210)(char *, uint64_t);
  uint64_t result;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  void (*v240)(_QWORD, _QWORD);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD v273[2];
  _QWORD v274[2];
  _QWORD v275[2];
  _QWORD v276[2];
  _QWORD v277[2];
  uint64_t v278;
  _QWORD v279[2];
  _QWORD v280[2];
  _QWORD v281[2];
  _QWORD v282[2];
  _QWORD v283[2];
  _QWORD v284[2];
  uint64_t v285;
  _QWORD v286[2];
  _QWORD v287[2];
  _QWORD v288[2];
  _QWORD v289[2];
  _QWORD v290[2];
  uint64_t v291;
  _QWORD v292[2];
  _QWORD v293[2];
  _QWORD v294[2];
  _QWORD v295[2];
  _QWORD v296[2];
  _QWORD v297[5];
  _QWORD v298[2];
  _QWORD v299[2];
  _QWORD v300[2];
  _QWORD v301[2];
  _QWORD v302[2];
  uint64_t v303;
  _QWORD v304[2];
  _QWORD v305[2];
  _QWORD v306[2];
  _QWORD v307[2];
  _QWORD v308[2];
  _QWORD v309[5];
  __int128 v310;
  uint64_t v311;
  unsigned __int8 v312;
  id v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char v319;
  _QWORD v320[2];
  _QWORD v321[2];
  _QWORD v322[2];
  _QWORD v323[2];

  v272 = a1;
  v247 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9B0);
  v248 = a2;
  v249 = a3;
  v7 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, a2, a3, v6);
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381180);
  v263 = v8;
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  v251 = v9;
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381240);
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381440);
  v250 = v11;
  v12 = sub_2414B3A90();
  v268 = sub_2414B3A90();
  v13 = sub_2414B46F0();
  v219 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v218 = (char *)&v213 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  v15 = sub_2414B3514();
  v221 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v220 = (char *)&v213 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381150);
  v266 = v15;
  v17 = sub_2414B3514();
  v223 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v222 = (char *)&v213 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381360);
  v265 = v17;
  v19 = sub_2414B3514();
  v225 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v224 = (char *)&v213 - v20;
  v262 = v21;
  v22 = sub_2414B3514();
  v229 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v227 = (char *)&v213 - v23;
  sub_2414B3DB4();
  v261 = v22;
  v24 = sub_2414B3514();
  v241 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v226 = (char *)&v213 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v228 = (uint64_t)&v213 - v27;
  v259 = v28;
  v246 = sub_2414B53B0();
  v243 = *(_QWORD *)(v246 - 8);
  v29 = MEMORY[0x24BDAC7A8](v246);
  v260 = (uint64_t)&v213 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v258 = (uint64_t)&v213 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9A0);
  v255 = v7;
  v33 = sub_2414B3514();
  v34 = sub_2414B3514();
  v253 = type metadata accessor for MCUINamespace(0, v34, v35, v36);
  v237 = *(_QWORD *)(v253 - 8);
  v37 = MEMORY[0x24BDAC7A8](v253);
  v236 = (uint64_t)&v213 - v38;
  v254 = v32;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v230 = (uint64_t)&v213 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = v33;
  v41 = *(_QWORD *)(v33 - 8);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v231 = (char *)&v213 - v43;
  v233 = *(_QWORD *)(v34 - 8);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v232 = (char *)&v213 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v234 = (char *)&v213 - v46;
  v47 = sub_2414B3514();
  v238 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v252 = (char *)&v213 - v48;
  v240 = v49;
  v50 = sub_2414B3514();
  v256 = *(_QWORD *)(v50 - 8);
  v257 = v50;
  v51 = MEMORY[0x24BDAC7A8](v50);
  v245 = (char *)&v213 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v239 = (char *)&v213 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v271 = (uint64_t)&v213 - v55;
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E20);
  v56 = MEMORY[0x24BDAC7A8](v242);
  v244 = (char *)&v213 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v270 = (uint64_t)&v213 - v58;
  if (!*(_QWORD *)(v272 + 16))
    goto LABEL_31;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  swift_release();
  v59 = v313;
  v269 = v13;
  v267 = v12;
  v264 = v10;
  v60 = v272;
  if (!v313)
    goto LABEL_5;
  if ((objc_msgSend(v313, sel_isDeviceRoute) & 1) != 0)
  {

LABEL_5:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v270, 1, 1, v61);
    goto LABEL_11;
  }
  v217 = v41;
  v62 = objc_msgSend(v59, sel_routeName);
  sub_2414B4D68();

  v63 = (void *)sub_2414B4DA4();
  v65 = v64;
  swift_bridgeObjectRelease();
  v313 = v63;
  v314 = v65;
  sub_2412F6D88();
  v66 = sub_2414B40F0();
  v68 = v67;
  v70 = v69;
  if (qword_2571206A8 != -1)
    swift_once();
  v71 = sub_2414B4078();
  v73 = v72;
  LODWORD(v216) = v74;
  sub_2412F6D78(v66, v68, v70 & 1);
  swift_bridgeObjectRelease();
  if (qword_2571206B0 != -1)
    swift_once();
  v313 = (id)qword_2571225D8;
  swift_retain();
  v75 = v216 & 1;
  v76 = (void *)sub_2414B4048();
  v214 = v77;
  v215 = (uint64_t)v76;
  v78 = v71;
  v79 = v77;
  v81 = v80;
  v216 = v80;
  v83 = v82 & 1;
  sub_2412F6D78(v78, v73, v75);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v313 = v76;
  v314 = (char *)v79;
  LOBYTE(v315) = v83;
  v316 = v81;
  v317 = KeyPath;
  v318 = 1;
  v319 = 0;
  v85 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v86 = sub_2412F6E9C();
  v88 = v87;

  *(_QWORD *)&v310 = v86;
  *((_QWORD *)&v310 + 1) = v88;
  sub_2414B4DF8();
  sub_2414B4DF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380D00);
  sub_2412F78D4();
  v89 = v270;
  sub_2414B4408();

  swift_bridgeObjectRelease();
  sub_2412F6D78(v215, v214, v83);
  swift_release();
  swift_bridgeObjectRelease();
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 0, 1, v90);
  v60 = v272;
  v41 = v217;
LABEL_11:
  v91 = *(_QWORD *)(v60 + 8);
  v92 = swift_beginAccess();
  v93 = *(_BYTE *)(v91 + 81);
  MEMORY[0x24BDAC7A8](v92);
  if (qword_25437E380 != -1)
    swift_once();
  v94 = *(double *)&qword_25437E378;
  if (qword_25437E370 != -1)
    swift_once();
  LOBYTE(v313) = 1;
  v95 = v230;
  sub_2412F6BD0(v93, 0, 0x100000000, (uint64_t (*)(uint64_t))sub_24133BD84, &qword_25437D9A0, v230, v94, *(double *)&qword_25437E360, 3.0);
  v96 = sub_2412C8FC4(&qword_25437D998, &qword_25437D9A0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
  v97 = v231;
  v98 = v255;
  MEMORY[0x242693DC0](v96, v254, v255, v96);
  sub_2412CBE78(v95, &qword_25437D9A0);
  v99 = *(_QWORD *)(v60 + 8);
  swift_beginAccess();
  v100 = *(char **)(v99 + 24);
  v313 = *(id *)(v99 + 16);
  v314 = v100;
  v101 = MEMORY[0x242695AE8](&unk_2414BB0D0, v98);
  v323[0] = v96;
  v323[1] = v101;
  v254 = v101;
  v102 = MEMORY[0x24BDED308];
  v103 = v235;
  v104 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v235, v323);
  sub_2412F6D88();
  v105 = v232;
  sub_2414B433C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v97, v103);
  v106 = v234;
  sub_2414B3508();
  v107 = *(void (**)(char *, uint64_t))(v233 + 8);
  v107(v105, v34);
  v108 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v322[0] = v104;
  v322[1] = v108;
  v109 = MEMORY[0x242695AE8](v102, v34, v322);
  v110 = v236;
  View.mcui.getter(v34, v236);
  v107(v106, v34);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v111 = (void *)sub_2414B4D44();
  v112 = objc_msgSend(v111, sel__isNaturallyRTL);
  swift_bridgeObjectRelease();

  LOBYTE(v313) = v112;
  v113 = v253;
  MCUINamespace<A>.marqueeAnimationDirection(_:)((uint64_t)&v313, v253);
  (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v110, v113);
  swift_getKeyPath();
  v114 = *(_QWORD *)(v60 + 96);
  LOBYTE(v107) = *(_BYTE *)(v60 + 104);
  sub_2412E6F7C(v114, (char)v107);
  v115 = (_QWORD *)sub_241345070(v114, (char)v107);
  sub_2412E6BF8(v114, (char)v107);
  swift_bridgeObjectRetain();
  v116 = v115;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v116 = sub_24146CC90(0, v115[2] + 1, 1, v115);
  v118 = v116[2];
  v117 = v116[3];
  v255 = v108;
  if (v118 >= v117 >> 1)
    v116 = sub_24146CC90((_QWORD *)(v117 > 1), v118 + 1, 1, v116);
  v116[2] = v118 + 1;
  v119 = &v116[2 * v118];
  v119[4] = 0xD000000000000010;
  v119[5] = 0x80000002414CE9F0;
  swift_bridgeObjectRelease();
  v313 = v116;
  v120 = MEMORY[0x24BDF1028];
  v121 = sub_2412C8FC4(&qword_254381238, &qword_254381240, MEMORY[0x24BDF1028]);
  v321[0] = v109;
  v321[1] = v121;
  v253 = v121;
  v122 = MEMORY[0x24BDED308];
  v123 = v240;
  v124 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v240, v321);
  v125 = (uint64_t)v239;
  v126 = v252;
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, _QWORD))(v238 + 8))(v126, v123);
  v127 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, v120);
  v320[0] = v124;
  v320[1] = v127;
  v252 = (char *)v127;
  v128 = v257;
  v238 = MEMORY[0x242695AE8](v122, v257, v320);
  sub_2412FBF34(v125, v128, v271);
  v240 = *(void (**)(_QWORD, _QWORD))(v256 + 8);
  v240(v125, v128);
  v129 = v272;
  if (*(_QWORD *)(v272 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    swift_release();
    v130 = v313;
    v131 = MEMORY[0x24BDF5138];
    v132 = v267;
    v133 = v263;
    v134 = v264;
    v135 = v250;
    if (!v313 || (v136 = objc_msgSend(v313, sel_isDeviceRoute), v130, (v136 & 1) != 0))
    {
      v137 = *(_QWORD *)(v129 + 8) + 32;
      swift_beginAccess();
      sub_2412DC3FC(v137, (uint64_t)&v310, &qword_25437F040);
      if (v312 != 255)
      {
        v138 = sub_24133AD8C(&v310, (uint64_t)&v313);
        MEMORY[0x24BDAC7A8](v138);
        v284[0] = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
        v284[1] = v254;
        v139 = MEMORY[0x24BDED308];
        v140 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v133, v284);
        v141 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
        v283[0] = v140;
        v283[1] = v141;
        v282[0] = MEMORY[0x242695AE8](v139, v251, v283);
        v282[1] = v252;
        v281[0] = MEMORY[0x242695AE8](v139, v134, v282);
        v281[1] = v253;
        v142 = MEMORY[0x242695AE8](v139, v135, v281);
        v143 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
        v280[0] = v142;
        v280[1] = v143;
        v144 = MEMORY[0x24BDEF3E0];
        v279[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v132, v280);
        v279[1] = v131;
        v145 = MEMORY[0x242695AE8](v144, v268, v279);
        v146 = v218;
        sub_2414B46E4();
        if (qword_2543816A8 != -1)
          swift_once();
        v278 = v145;
        v147 = v269;
        v148 = MEMORY[0x242695AE8](MEMORY[0x24BDF3F50], v269, &v278);
        v149 = v220;
        sub_2414B4468();
        (*(void (**)(char *, uint64_t))(v219 + 8))(v146, v147);
        v151 = v265;
        v150 = v266;
        v152 = v262;
        if (qword_2543816C0 != -1)
          swift_once();
        *(_QWORD *)&v310 = qword_2543816B0;
        v153 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
        v277[0] = v148;
        v277[1] = v153;
        v154 = MEMORY[0x24BDED308];
        v155 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v150, v277);
        v156 = v222;
        sub_2414B42C4();
        (*(void (**)(char *, uint64_t))(v221 + 8))(v149, v150);
        v157 = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
        v276[0] = v155;
        v276[1] = v157;
        v158 = MEMORY[0x242695AE8](v154, v151, v276);
        v159 = v224;
        sub_2414B45A0();
        (*(void (**)(char *, uint64_t))(v223 + 8))(v156, v151);
        sub_2414B4A50();
        v160 = sub_2412C8FC4(&qword_254381358, &qword_254381360, MEMORY[0x24BDF1028]);
        v275[0] = v158;
        v275[1] = v160;
        v212 = MEMORY[0x242695AE8](v154, v152, v275);
        v161 = v227;
        sub_2414B44B0();
        (*(void (**)(char *, uint64_t))(v225 + 8))(v159, v152);
        v274[0] = v212;
        v274[1] = MEMORY[0x24BDEDBB8];
        v162 = v261;
        v163 = MEMORY[0x242695AE8](v154, v261, v274);
        v164 = (uint64_t)v226;
        sub_2412F6DCC();
        (*(void (**)(char *, uint64_t))(v229 + 8))(v161, v162);
        v273[0] = v163;
        v273[1] = v255;
        v165 = v259;
        MEMORY[0x242695AE8](v154, v259, v273);
        v166 = v228;
        sub_2412FBF34(v164, v165, v228);
        v167 = v241;
        v168 = *(void (**)(uint64_t, uint64_t))(v241 + 8);
        v168(v164, v165);
        v169 = v260;
        sub_2412EEA1C(v166, v165, v260);
        v168(v166, v165);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v169, 0, 1, v165);
        v170 = v258;
        sub_2412F65F0(v169, v258);
        v171 = v243;
        v172 = v246;
        v272 = *(_QWORD *)(v243 + 8);
        ((void (*)(uint64_t, uint64_t))v272)(v169, v246);
        sub_24133AD60((uint64_t)&v313);
        v173 = v250;
        v174 = v251;
        goto LABEL_30;
      }
      sub_2412CBE78((uint64_t)&v310, &qword_25437F040);
    }
    v175 = v260;
    v176 = v132;
    v177 = v259;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v260, 1, 1, v259);
    v309[0] = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
    v309[1] = v254;
    v178 = MEMORY[0x24BDED308];
    v179 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v133, v309);
    v180 = MEMORY[0x24BDF1028];
    v181 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
    v308[0] = v179;
    v308[1] = v181;
    v182 = v251;
    v307[0] = MEMORY[0x242695AE8](v178, v251, v308);
    v307[1] = v252;
    v306[0] = MEMORY[0x242695AE8](v178, v134, v307);
    v306[1] = v253;
    v183 = MEMORY[0x242695AE8](v178, v135, v306);
    v184 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
    v305[0] = v183;
    v305[1] = v184;
    v185 = MEMORY[0x24BDEF3E0];
    v304[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v176, v305);
    v304[1] = MEMORY[0x24BDF5138];
    v303 = MEMORY[0x242695AE8](v185, v268, v304);
    v186 = MEMORY[0x242695AE8](MEMORY[0x24BDF3F50], v269, &v303);
    v187 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, v180);
    v302[0] = v186;
    v302[1] = v187;
    v188 = MEMORY[0x242695AE8](v178, v266, v302);
    v189 = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    v301[0] = v188;
    v301[1] = v189;
    v190 = MEMORY[0x242695AE8](v178, v265, v301);
    v191 = sub_2412C8FC4(&qword_254381358, &qword_254381360, v180);
    v300[0] = v190;
    v169 = v175;
    v300[1] = v191;
    v299[0] = MEMORY[0x242695AE8](v178, v262, v300);
    v299[1] = MEMORY[0x24BDEDBB8];
    v298[0] = MEMORY[0x242695AE8](v178, v261, v299);
    v298[1] = v255;
    MEMORY[0x242695AE8](v178, v177, v298);
    v170 = v258;
    sub_2412F65F0(v175, v258);
    v174 = v182;
    v192 = v243;
    v172 = v246;
    v272 = *(_QWORD *)(v243 + 8);
    ((void (*)(uint64_t, uint64_t))v272)(v169, v246);
    v173 = v135;
    v171 = v192;
LABEL_30:
    v193 = v244;
    sub_2412DC3FC(v270, (uint64_t)v244, &qword_254380E20);
    v313 = v193;
    v194 = v257;
    v195 = v245;
    (*(void (**)(char *, uint64_t, uint64_t))(v256 + 16))(v245, v271, v257);
    v314 = v195;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 16))(v169, v170, v172);
    v315 = v169;
    *(_QWORD *)&v310 = v242;
    *((_QWORD *)&v310 + 1) = v194;
    v311 = v172;
    v297[2] = sub_2412F6B54();
    v297[3] = v238;
    v297[0] = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
    v297[1] = v254;
    v196 = MEMORY[0x24BDED308];
    v197 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v263, v297);
    v198 = MEMORY[0x24BDF1028];
    v199 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
    v296[0] = v197;
    v296[1] = v199;
    v295[0] = MEMORY[0x242695AE8](v196, v174, v296);
    v295[1] = v252;
    v294[0] = MEMORY[0x242695AE8](v196, v264, v295);
    v294[1] = v253;
    v200 = MEMORY[0x242695AE8](v196, v173, v294);
    v201 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
    v293[0] = v200;
    v293[1] = v201;
    v202 = MEMORY[0x24BDEF3E0];
    v292[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v267, v293);
    v292[1] = MEMORY[0x24BDF5138];
    v291 = MEMORY[0x242695AE8](v202, v268, v292);
    v203 = MEMORY[0x242695AE8](MEMORY[0x24BDF3F50], v269, &v291);
    v204 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, v198);
    v290[0] = v203;
    v290[1] = v204;
    v205 = MEMORY[0x242695AE8](v196, v266, v290);
    v206 = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    v289[0] = v205;
    v289[1] = v206;
    v207 = MEMORY[0x242695AE8](v196, v265, v289);
    v208 = sub_2412C8FC4(&qword_254381358, &qword_254381360, v198);
    v288[0] = v207;
    v288[1] = v208;
    v287[0] = MEMORY[0x242695AE8](v196, v262, v288);
    v287[1] = MEMORY[0x24BDEDBB8];
    v286[0] = MEMORY[0x242695AE8](v196, v261, v287);
    v286[1] = v255;
    v285 = MEMORY[0x242695AE8](v196, v259, v286);
    v297[4] = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v172, &v285);
    sub_2412F68CC((uint64_t *)&v313, 3uLL, (uint64_t)&v310);
    v209 = (void (*)(uint64_t, uint64_t))v272;
    ((void (*)(uint64_t, uint64_t))v272)(v258, v172);
    v210 = (void (*)(char *, uint64_t))v240;
    v240(v271, v194);
    sub_2412CBE78(v270, &qword_254380E20);
    v209(v260, v172);
    v210(v195, v194);
    return sub_2412CBE78((uint64_t)v193, &qword_254380E20);
  }
LABEL_31:
  type metadata accessor for NowPlayingRouteObserver();
  sub_2412F0B40(&qword_25437FFB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_241336A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t KeyPath;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v38 = a2;
  v3 = sub_2414B346C();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E18);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 24);
  v43 = *(_QWORD *)(v7 + 16);
  v44 = v8;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v9 = sub_2414B40F0();
  v11 = v10;
  v13 = v12;
  if (qword_25437E6C0 != -1)
    swift_once();
  v14 = sub_2414B4078();
  v16 = v15;
  v18 = v17;
  sub_2412F6D78(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  if (qword_25437E678 != -1)
    swift_once();
  v19 = v18 & 1;
  v43 = qword_25437E668;
  swift_retain();
  v20 = sub_2414B4048();
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  sub_2412F6D78(v14, v16, v19);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v43 = v20;
  v44 = v22;
  v45 = v26;
  v46 = v24;
  v47 = KeyPath;
  v48 = 1;
  v49 = 0;
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v29 = sub_2412F6E9C();
  v31 = v30;

  v41 = v29;
  v42 = v31;
  sub_2414B4DF8();
  sub_2414B4DF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380D00);
  sub_2412F78D4();
  sub_2414B4408();
  swift_bridgeObjectRelease();
  sub_2412F6D78(v20, v22, v26);
  swift_release();
  swift_bridgeObjectRelease();
  v33 = v39;
  v32 = v40;
  v34 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v37, *MEMORY[0x24BDECF00], v40);
  sub_2412F784C(&qword_254380E10, &qword_254380E18, (uint64_t (*)(void))sub_2412F78D4);
  sub_2414B42AC();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  return sub_2412CBE78((uint64_t)v6, &qword_254380E18);
}

uint64_t sub_241336DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  double v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  _BOOL4 v116;
  uint64_t v117;
  uint8_t *v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _QWORD v183[2];
  _QWORD v184[2];
  _QWORD v185[2];
  _QWORD v186[2];
  _QWORD v187[2];
  _QWORD v188[2];
  _QWORD v189[2];
  _QWORD *v190;
  _QWORD v191[5];
  _OWORD v192[2];
  uint64_t v193;
  _QWORD v194[2];
  _QWORD v195[2];
  _QWORD v196[2];
  _QWORD v197[2];
  _QWORD v198[2];
  _QWORD v199[2];
  _QWORD v200[2];
  _QWORD v201[2];
  _QWORD v202[2];
  _QWORD v203[2];
  _QWORD v204[2];
  _OWORD v205[2];
  uint64_t v206;
  _QWORD *v207;
  char v208;

  v162 = a2;
  v173 = a5;
  v174 = (char *)a1;
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9B0);
  v177 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, a3, a4, v8);
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381180);
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381240);
  v12 = sub_2414B3514();
  v166 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381440);
  v13 = sub_2414B3A90();
  v168 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v167 = (char *)&v151 - v14;
  v17 = type metadata accessor for MCUINamespace(0, v11, v15, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v164 = v17;
  v165 = v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v158 = (uint64_t)&v151 - v20;
  v163 = v7;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v159 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = v9;
  v161 = *(_QWORD *)(v9 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v160 = (char *)&v151 - v24;
  v179 = v10;
  v25 = *(_QWORD *)(v10 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v151 - v27;
  v171 = v11;
  v29 = *(_QWORD *)(v11 - 8);
  v30 = MEMORY[0x24BDAC7A8](v26);
  v32 = (char *)&v151 - v31;
  v169 = v12;
  v33 = *(_QWORD *)(v12 - 8);
  v34 = MEMORY[0x24BDAC7A8](v30);
  v36 = (char *)&v151 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v151 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v151 - v40;
  v172 = v13;
  v42 = sub_2414B3A90();
  v175 = *(_QWORD *)(v42 - 8);
  v176 = v42;
  MEMORY[0x24BDAC7A8](v42);
  v170 = (char *)&v151 - v43;
  sub_24133ADAC((uint64_t)v174, (uint64_t)v205);
  if (v208)
  {
    if (v208 == 1)
    {
      v192[0] = v205[0];
      v192[1] = v205[1];
      v44 = v207;
      v193 = v206;
      sub_24133BDA4((uint64_t)v192, (uint64_t)v191);
      v190 = v44;
      v45 = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
      swift_retain();
      v46 = v177;
      v47 = MEMORY[0x242695AE8](&unk_2414BB0D0, v177);
      v189[0] = v45;
      v189[1] = v47;
      v48 = MEMORY[0x24BDED308];
      v49 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v178, v189);
      v50 = MEMORY[0x24BDF1028];
      v51 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
      v188[0] = v49;
      v188[1] = v51;
      v52 = MEMORY[0x242695AE8](v48, v179, v188);
      v53 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, v50);
      v187[0] = v52;
      v187[1] = v53;
      v54 = v171;
      v55 = MEMORY[0x242695AE8](v48, v171, v187);
      v56 = sub_2412C8FC4(&qword_254381238, &qword_254381240, v50);
      v186[0] = v55;
      v186[1] = v56;
      v57 = v169;
      v58 = MEMORY[0x242695AE8](v48, v169, v186);
      v59 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
      v60 = (uint64_t)v167;
      sub_2412F1584((uint64_t)&v190, v57, v166);
      v185[0] = v58;
      v185[1] = v59;
      v61 = v46;
      v62 = v172;
      v63 = v173;
      MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v172, v185);
      v64 = (uint64_t)v170;
      sub_24132F340(v60, v62);
      swift_release();
      v65 = v60;
      v66 = v178;
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v65, v62);
      sub_2412CBE78((uint64_t)&v190, (uint64_t *)&unk_254381440);
      sub_24133ADE0((uint64_t)v192);
    }
    else
    {
      v54 = v171;
      v111 = v178;
      v112 = v179;
      v61 = v177;
      if (qword_2543809C0 != -1)
        swift_once();
      v113 = sub_2414B2CA4();
      __swift_project_value_buffer(v113, (uint64_t)qword_25438E7B8);
      v114 = sub_2414B2C8C();
      v115 = sub_2414B51A0();
      v116 = os_log_type_enabled(v114, v115);
      v62 = v172;
      v64 = (uint64_t)v170;
      if (v116)
      {
        v117 = v111;
        v118 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v118 = 0;
        _os_log_impl(&dword_2412C1000, v114, v115, "Mini player metadata should never have type .copy. Falling back to primary subtitle.", v118, 2u);
        v119 = v118;
        v111 = v117;
        MEMORY[0x242695BD8](v119, -1, -1);
      }

      v120 = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
      v121 = MEMORY[0x242695AE8](&unk_2414BB0D0, v61);
      v204[0] = v120;
      v204[1] = v121;
      v122 = MEMORY[0x24BDED308];
      v123 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v111, v204);
      v124 = v111;
      v125 = MEMORY[0x24BDF1028];
      v126 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
      v203[0] = v123;
      v203[1] = v126;
      v127 = MEMORY[0x242695AE8](v122, v112, v203);
      v128 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, v125);
      v202[0] = v127;
      v202[1] = v128;
      v129 = MEMORY[0x242695AE8](v122, v54, v202);
      v130 = v125;
      v66 = v124;
      v131 = sub_2412C8FC4(&qword_254381238, &qword_254381240, v130);
      v201[0] = v129;
      v201[1] = v131;
      v57 = v169;
      v132 = MEMORY[0x242695AE8](v122, v169, v201);
      v133 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
      v200[0] = v132;
      v200[1] = v133;
      v134 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v62, v200);
      sub_2412F1584(v134, v62, MEMORY[0x24BDF5158]);
      v63 = v173;
    }
  }
  else
  {
    v174 = v28;
    v152 = v25;
    v153 = v29;
    v154 = v39;
    v155 = v33;
    v156 = v36;
    v157 = v41;
    v67 = v205[0];
    v68 = v162;
    v69 = *(_QWORD *)(v162 + 8);
    swift_beginAccess();
    v70 = *(_BYTE *)(v69 + 81);
    v71 = qword_25437E380;
    swift_bridgeObjectRetain();
    if (v71 != -1)
      swift_once();
    v72 = *(double *)&qword_25437E378;
    v73 = v32;
    v74 = (uint64_t)v159;
    if (qword_25437E370 != -1)
      swift_once();
    LOBYTE(v190) = 1;
    v151 = v67;
    sub_241453268(v70, 0, 0x100000000, v67, *((uint64_t *)&v67 + 1), v74, v72, *(double *)&qword_25437E360, 3.0);
    v75 = v74;
    v76 = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
    v77 = v160;
    v78 = v177;
    MEMORY[0x242693DC0](v76, v163, v177, v76);
    sub_2412CBE78(v75, &qword_25437D9B0);
    swift_getKeyPath();
    v191[2] = &type metadata for BackdropMarqueeMaskStyle;
    v191[3] = &off_251178638;
    v79 = MEMORY[0x242695AE8](&unk_2414BB0D0, v78);
    v184[0] = v76;
    v184[1] = v79;
    v80 = v178;
    v81 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v178, v184);
    sub_2414B41C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v161 + 8))(v77, v80);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
    swift_getKeyPath();
    v82 = *(_QWORD *)(v68 + 96);
    LOBYTE(v80) = *(_BYTE *)(v68 + 104);
    sub_2412E6F7C(v82, v80);
    v83 = (_QWORD *)sub_241345070(v82, v80);
    sub_2412E6BF8(v82, v80);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85 = v83;
    v86 = v152;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v85 = sub_24146CC90(0, v83[2] + 1, 1, v83);
    v88 = v85[2];
    v87 = v85[3];
    if (v88 >= v87 >> 1)
      v85 = sub_24146CC90((_QWORD *)(v87 > 1), v88 + 1, 1, v85);
    v85[2] = v88 + 1;
    v89 = &v85[2 * v88];
    v89[4] = 0xD000000000000013;
    v89[5] = 0x80000002414CEA50;
    swift_bridgeObjectRelease();
    v190 = v85;
    v90 = MEMORY[0x24BDF1028];
    v91 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
    v183[0] = v81;
    v183[1] = v91;
    v92 = MEMORY[0x24BDED308];
    v93 = v179;
    v94 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v179, v183);
    v95 = (uint64_t)v174;
    sub_2414B41C8();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v95, v93);
    v96 = v90;
    v97 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, v90);
    v182[0] = v94;
    v182[1] = v97;
    v98 = v73;
    v54 = v171;
    v99 = MEMORY[0x242695AE8](v92, v171, v182);
    v100 = v158;
    View.mcui.getter(v54, v158);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v98, v54);
    v101 = (void *)sub_2414B4D44();
    LOBYTE(v90) = objc_msgSend(v101, sel__isNaturallyRTL);
    swift_bridgeObjectRelease();

    LOBYTE(v190) = v90;
    v102 = (uint64_t)v154;
    v103 = v164;
    MCUINamespace<A>.marqueeAnimationDirection(_:)((uint64_t)&v190, v164);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v100, v103);
    v104 = sub_2412C8FC4(&qword_254381238, &qword_254381240, v96);
    v181[0] = v99;
    v181[1] = v104;
    v57 = v169;
    v105 = MEMORY[0x242695AE8](v92, v169, v181);
    v106 = (uint64_t)v157;
    sub_2412FBF34(v102, v57, (uint64_t)v157);
    v107 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v107(v102, v57);
    v108 = (uint64_t)v156;
    sub_2412EEA1C(v106, v57, (uint64_t)v156);
    v109 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
    v110 = (uint64_t)v167;
    sub_24132F340(v108, v57);
    v107(v108, v57);
    v180[0] = v105;
    v180[1] = v109;
    v62 = v172;
    MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v172, v180);
    v64 = (uint64_t)v170;
    sub_24132F340(v110, v62);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v110, v62);
    v107(v106, v57);
    v63 = v173;
    v61 = v177;
    v66 = v178;
  }
  v135 = sub_2412C8FC4(&qword_25437D9A8, &qword_25437D9B0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
  v136 = MEMORY[0x242695AE8](&unk_2414BB0D0, v61);
  v199[0] = v135;
  v199[1] = v136;
  v137 = MEMORY[0x24BDED308];
  v138 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v66, v199);
  v139 = MEMORY[0x24BDF1028];
  v140 = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
  v198[0] = v138;
  v198[1] = v140;
  v141 = MEMORY[0x242695AE8](v137, v179, v198);
  v142 = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, v139);
  v197[0] = v141;
  v197[1] = v142;
  v143 = MEMORY[0x242695AE8](v137, v54, v197);
  v144 = sub_2412C8FC4(&qword_254381238, &qword_254381240, v139);
  v196[0] = v143;
  v196[1] = v144;
  v145 = MEMORY[0x242695AE8](v137, v57, v196);
  v146 = sub_2412C8FC4(&qword_254381438, (uint64_t *)&unk_254381440, MEMORY[0x24BDF44C8]);
  v195[0] = v145;
  v195[1] = v146;
  v147 = MEMORY[0x24BDEF3E0];
  v194[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v62, v195);
  v194[1] = MEMORY[0x24BDF5138];
  v148 = v147;
  v149 = v176;
  MEMORY[0x242695AE8](v148, v176, v194);
  sub_2412EEA1C(v64, v149, v63);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 8))(v64, v149);
}

void sub_241337B88(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;
  char v11;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  sub_2412C7080(v2, v3);
  sub_2412F65C0(v2, v3, &v11);
  sub_2412C821C(v2, v3);
  if (v11 == 1)
  {
    v4 = *(_QWORD *)(a1 + 8);
    KeyPath = swift_getKeyPath();
    v6 = swift_getKeyPath();
    swift_retain();
    sub_24143F2E8(0, v4, KeyPath, v6);
    if (qword_2543809C0 != -1)
      swift_once();
    v7 = sub_2414B2CA4();
    __swift_project_value_buffer(v7, (uint64_t)qword_25438E7B8);
    oslog = sub_2414B2C8C();
    v8 = sub_2414B51B8();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_2412C1000, oslog, v8, "Mini player marquee disabled (transitioning out of mini player)", v9, 2u);
      MEMORY[0x242695BD8](v9, -1, -1);
    }

  }
}

void sub_241337CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  _BYTE v22[40];
  _BYTE v23[40];

  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_BYTE *)(a3 + 40);
  sub_2412C7080(v6, v7);
  sub_2412F65C0(v6, v7, v23);
  sub_2412C821C(v6, v7);
  if ((v23[0] & 1) == 0)
  {
    v8 = *(_QWORD *)(a3 + 8);
    KeyPath = swift_getKeyPath();
    v10 = swift_getKeyPath();
    swift_retain();
    sub_24143F2E8(1, v8, KeyPath, v10);
    if (qword_2543809C0 != -1)
      swift_once();
    v11 = sub_2414B2CA4();
    __swift_project_value_buffer(v11, (uint64_t)qword_25438E7B8);
    sub_2412DC3FC(a1, (uint64_t)v23, (uint64_t *)&unk_254381590);
    sub_2412DC3FC(a2, (uint64_t)v22, (uint64_t *)&unk_254381590);
    v12 = sub_2414B2C8C();
    v13 = sub_2414B51B8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 136446466;
      sub_2412DC3FC((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_254381590);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254381590);
      v16 = sub_2414B4D8C();
      v20[0] = sub_2412E4890(v16, v17, &v21);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412CBE78((uint64_t)v23, (uint64_t *)&unk_254381590);
      *(_WORD *)(v14 + 12) = 2082;
      sub_2412DC3FC((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_254381590);
      v18 = sub_2414B4D8C();
      v20[0] = sub_2412E4890(v18, v19, &v21);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412CBE78((uint64_t)v22, (uint64_t *)&unk_254381590);
      _os_log_impl(&dword_2412C1000, v12, v13, "Mini player marquee enabled (currentItemID changed from %{public}s to %{public}s)", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v15, -1, -1);
      MEMORY[0x242695BD8](v14, -1, -1);
    }
    else
    {
      sub_2412CBE78((uint64_t)v23, (uint64_t *)&unk_254381590);
      sub_2412CBE78((uint64_t)v22, (uint64_t *)&unk_254381590);
    }

  }
}

void sub_241337FC8()
{
  qword_254383B60 = 0x404E000000000000;
}

void sub_241337FD8()
{
  qword_257122518 = 0x4014000000000000;
}

uint64_t sub_241337FE8(uint64_t a1)
{
  return sub_2412C9990(a1, (void (*)(void))MEMORY[0x24BDF1820], (void (*)(void))MEMORY[0x24BDF1700], &qword_254383B78);
}

uint64_t sub_241338004(uint64_t a1)
{
  return sub_2412C9990(a1, (void (*)(void))MEMORY[0x24BDF15F8], (void (*)(void))MEMORY[0x24BDF1700], &qword_254383B98);
}

uint64_t sub_241338020(uint64_t a1)
{
  return sub_2412C9990(a1, (void (*)(void))MEMORY[0x24BDF15F8], MEMORY[0x24BDF16E8], &qword_254383B88);
}

uint64_t sub_24133803C(uint64_t a1)
{
  return sub_2413380A8(a1, qword_257122520, &qword_2571207C8, &qword_257136EB0);
}

uint64_t sub_241338060(uint64_t a1)
{
  return sub_2413380A8(a1, qword_257122538, &qword_2571207C0, &qword_257136EA8);
}

uint64_t sub_241338084(uint64_t a1)
{
  return sub_2413380A8(a1, qword_257122550, &qword_2571207C8, &qword_257136EB0);
}

uint64_t sub_2413380A8(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t v16;

  v7 = sub_2414B4AE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  __swift_allocate_value_buffer(v11, a2);
  v12 = (char *)__swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v13 = *a4;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF5098], v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v12[*(int *)(v11 + 36)], v10, v7);
  *(_QWORD *)v12 = v13;
  v14 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  return v14(v10, v7);
}

uint64_t sub_2413381BC(uint64_t a1)
{
  return sub_2413381F8(a1, qword_257122568, MEMORY[0x24BDF3BF8]);
}

uint64_t sub_2413381D0(uint64_t a1)
{
  return sub_2413381F8(a1, qword_257122580, MEMORY[0x24BDF3D88]);
}

uint64_t sub_2413381E4(uint64_t a1)
{
  return sub_2413381F8(a1, qword_257122598, MEMORY[0x24BDF3BF8]);
}

uint64_t sub_2413381F8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = MEMORY[0x24BDF3E48];
  __swift_allocate_value_buffer(MEMORY[0x24BDF3E48], a2);
  v6 = (_QWORD *)__swift_project_value_buffer(v5, (uint64_t)a2);
  result = a3();
  *v6 = result;
  return result;
}

void sub_241338248()
{
  qword_2571225B0 = 0x4038000000000000;
}

void sub_241338258()
{
  qword_2571225B8 = 0x4038000000000000;
}

void sub_241338268()
{
  qword_2571225C0 = 0x4024000000000000;
}

void sub_241338278()
{
  qword_2571225C8 = 0x4040000000000000;
}

uint64_t sub_241338288()
{
  uint64_t result;

  result = sub_2414B3F40();
  qword_2571225D0 = result;
  return result;
}

uint64_t sub_2413382A4()
{
  uint64_t result;

  result = sub_2414B3E98();
  qword_254381698 = result;
  return result;
}

uint64_t sub_2413382C0()
{
  uint64_t result;

  result = sub_2414B46C0();
  qword_2571225D8 = result;
  return result;
}

uint64_t sub_2413382DC()
{
  uint64_t result;

  result = sub_2414B46C0();
  qword_2543816B0 = result;
  return result;
}

uint64_t NowPlayingViewModel.SubtitleStyle.hash(into:)()
{
  return sub_2414B58D8();
}

BOOL static NowPlayingViewModel.SubtitleStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24133833C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  result = sub_2414B4D80();
  qword_257136E00 = result;
  *(_QWORD *)algn_257136E08 = v4;
  return result;
}

uint64_t sub_24133845C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413384A4(uint64_t *a1, uint64_t *a2)
{
  return sub_241338688(a1, a2);
}

uint64_t sub_2413384B8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241338500()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241338548@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_241338590(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2412CD024(v2, v3);
}

uint64_t sub_2413385F8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24133862C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = *(_QWORD *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241338674(uint64_t *a1, uint64_t *a2)
{
  return sub_241338688(a1, a2);
}

uint64_t sub_241338688(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2412D3FCC(v2, v3, v4);
}

uint64_t sub_2413386F8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241338740@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

uint64_t sub_241338784(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2412CA658(v2, v3);
}

uint64_t sub_2413387E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 72);
  return result;
}

uint64_t NowPlayingViewModel.PrimaryMetadata.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t NowPlayingViewModel.PrimaryMetadata.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t sub_2413388A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t static NowPlayingViewModel.MiniPlayerSubtitle.customView<A, B>(id:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  MEMORY[0x24BDAC7A8](a1);
  v6 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, double))(v8 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v9 = sub_2414B5524();
  a2(v9);
  result = sub_2414B48B8();
  *(_QWORD *)(a3 + 40) = result;
  *(_BYTE *)(a3 + 48) = 1;
  return result;
}

uint64_t sub_2413389E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_2412DC3FC(v1 + 32, a1, &qword_25437F040);
}

uint64_t sub_241338A38()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_241338A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[56];
  _OWORD v11[3];
  char v12;

  if (qword_25437EB48 != -1)
    swift_once();
  v1 = qword_25438E7F8;
  v2 = unk_25438E800;
  KeyPath = swift_getKeyPath();
  v4 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2413039B0(v1, v2, v0, KeyPath, v4);
  memset(v11, 0, sizeof(v11));
  v12 = -1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v10, &qword_25437F040);
  swift_retain();
  sub_2412CBC44((uint64_t)v10, v0);
  sub_2412CBE78((uint64_t)v11, &qword_25437F040);
  if (qword_2571206C0 != -1)
    swift_once();
  v5 = qword_257136E00;
  v6 = *(_QWORD *)algn_257136E08;
  v7 = swift_getKeyPath();
  v8 = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_2413039B0(v5, v6, v0, v7, v8);
}

uint64_t sub_241338C04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2412CBE78(v0 + 32, &qword_2543816C8);
  return swift_deallocClassInstance();
}

uint64_t sub_241338C38(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_24143F2E8(v2, v3, KeyPath, v5);
}

uint64_t sub_241338C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[40];
  __int128 v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, double))(v7 + 16))(v10, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v13 = v12;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412D3FCC(v11, v13, a2);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v16 = v15;
  KeyPath = swift_getKeyPath();
  v18 = swift_getKeyPath();
  swift_retain();
  sub_2413039CC(v14, v16, a2, KeyPath, v18);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412CD024(v19, a2);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v22 = v21;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412D3FCC(v20, v22, a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 48))(&v28, a3, a4);
  LOBYTE(v20) = v28;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2412CA658(v20, a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 56))(&v28, a3, a4);
  v23 = v29;
  __swift_project_boxed_opaque_existential_1(&v28, v29);
  swift_beginAccess();
  sub_2412F1B18(a2 + 80, (uint64_t)v27);
  LOBYTE(v23) = sub_2413338DC((uint64_t)v27, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if ((v23 & 1) == 0)
  {
    type metadata accessor for NowPlayingViewModel.PrimaryMetadata();
    sub_2412F0B40(&qword_2543816E0, v24, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PrimaryMetadata, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PrimaryMetadata);
    sub_2414B2DA0();
    sub_2414B2DE8();
    swift_release();
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(a2 + 80);
  sub_2412FAA04(&v28, a2 + 80);
  swift_endAccess();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a3);
}

uint64_t sub_241338FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  void (*v16)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  __int128 v22[3];
  char v23;
  _OWORD v24[3];
  unsigned __int8 v25;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v13 = v12;
  KeyPath = swift_getKeyPath();
  v15 = swift_getKeyPath();
  swift_retain();
  sub_2413039B0(v11, v13, a2, KeyPath, v15);
  v16 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a4 + 64);
  v16(v24, a3, a4);
  if (v25 == 2)
  {
    v17 = 16;
    if (LOBYTE(v24[0]))
      v17 = 40;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + v17))(a3, a4);
    if (v19)
    {
      *(_QWORD *)&v22[0] = v18;
      *((_QWORD *)&v22[0] + 1) = v19;
      v23 = 0;
      sub_24133AD8C(v22, (uint64_t)v24);
    }
    else
    {
      memset(v24, 0, sizeof(v24));
      v25 = -1;
    }
  }
  else
  {
    if (v25 == 255)
      sub_2412CBE78((uint64_t)v24, &qword_25437F040);
    else
      sub_24133AD60((uint64_t)v24);
    v16(v24, a3, a4);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v24, (uint64_t)v22, &qword_25437F040);
  swift_retain();
  sub_2412CBC44((uint64_t)v22, a2);
  sub_2412CBE78((uint64_t)v24, &qword_25437F040);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a3);
}

uint64_t _s11MediaCoreUI19NowPlayingViewModelC18MiniPlayerSubtitleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[48];
  char v12;
  _OWORD v13[2];
  uint64_t v14;
  char v15;

  sub_24133ADAC(a1, (uint64_t)v11);
  sub_24133ADAC(a2, (uint64_t)v13);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_24133ADAC((uint64_t)v11, (uint64_t)v9);
      swift_release();
      if (v15 == 1)
      {
        swift_release();
        v7[0] = v9[0];
        v7[1] = v9[1];
        v8 = v10;
        v5[0] = v13[0];
        v5[1] = v13[1];
        v6 = v14;
        v3 = MEMORY[0x242694D98](v7, v5);
        sub_24133ADE0((uint64_t)v5);
        sub_24133ADE0((uint64_t)v7);
LABEL_15:
        sub_24133AD60((uint64_t)v11);
        return v3 & 1;
      }
      sub_24133ADE0((uint64_t)v9);
    }
    else
    {
      sub_24133ADAC((uint64_t)v11, (uint64_t)v9);
      if (v15 == 2)
      {
        v3 = LOBYTE(v9[0]) ^ LOBYTE(v13[0]) ^ 1;
        goto LABEL_15;
      }
    }
  }
  else
  {
    sub_24133ADAC((uint64_t)v11, (uint64_t)v9);
    if (!v15)
    {
      if (v9[0] == v13[0])
        v3 = 1;
      else
        v3 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  sub_2412CBE78((uint64_t)v11, &qword_254383BD8);
  v3 = 0;
  return v3 & 1;
}

unint64_t sub_241339358(uint64_t a1)
{
  unint64_t result;

  result = sub_24133937C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24133937C()
{
  unint64_t result;

  result = qword_2543816D0;
  if (!qword_2543816D0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataButtonStyle, &type metadata for MetadataButtonStyle);
    atomic_store(result, (unint64_t *)&qword_2543816D0);
  }
  return result;
}

uint64_t sub_2413393C0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413393F8()
{
  unint64_t result;

  result = qword_2571225E0;
  if (!qword_2571225E0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.SubtitleStyle, &type metadata for NowPlayingViewModel.SubtitleStyle);
    atomic_store(result, (unint64_t *)&qword_2571225E0);
  }
  return result;
}

unint64_t sub_241339440()
{
  unint64_t result;

  result = qword_2571225E8[0];
  if (!qword_2571225E8[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.MiniPlayerSubtitle.CopyField, &type metadata for NowPlayingViewModel.MiniPlayerSubtitle.CopyField);
    atomic_store(result, qword_2571225E8);
  }
  return result;
}

uint64_t sub_241339484@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2413394D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_241339524@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = *(_QWORD *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241339570@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

ValueMetadata *type metadata accessor for MetadataAutomaticStyle()
{
  return &type metadata for MetadataAutomaticStyle;
}

ValueMetadata *type metadata accessor for MetadataButtonStyle()
{
  return &type metadata for MetadataButtonStyle;
}

uint64_t sub_2413395D8(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_241339600(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_unknownObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *sub_241339668(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_2413396BC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_241339710(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241339758(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MetadataStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetadataStyleModifier);
}

uint64_t method lookup function for NowPlayingViewModel.PrimaryMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.eyebrow.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.title.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.titleBadges.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.subtitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PrimaryMetadata.subtitleStyle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t _s18MiniPlayerSubtitleOwxx(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 48);
  if (v1 >= 3)
    v1 = *(_DWORD *)result + 3;
  if (v1 != 2)
  {
    if (v1 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(result);
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t _s18MiniPlayerSubtitleOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  uint64_t v6;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_BYTE *)(a1 + 48) = 2;
  }
  else if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = 1;
    swift_retain();
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 48) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s18MiniPlayerSubtitleOwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        __swift_destroy_boxed_opaque_existential_1(a1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 48) = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = 1;
      swift_retain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s18MiniPlayerSubtitleOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        __swift_destroy_boxed_opaque_existential_1(a1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      LOBYTE(v5) = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t sub_241339AC4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_241339AE0(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

uint64_t _s13SubtitleStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241339B54 + 4 * byte_2414BA565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241339B88 + 4 * byte_2414BA560[v4]))();
}

uint64_t sub_241339B88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241339B90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241339B98);
  return result;
}

uint64_t sub_241339BA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241339BACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241339BB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241339BB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle.CopyField()
{
  return &type metadata for NowPlayingViewModel.MiniPlayerSubtitle.CopyField;
}

uint64_t sub_241339BD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for MetadataStyleModifier(255, *a1, a1[1], a4);
  MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>, v4);
  v5 = sub_2414B3B08();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v5);
  v7 = sub_2414B47EC();
  v8 = sub_2414B3568();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDF43B0], v7);
  v11 = sub_2412F0B40(&qword_2571221E0, 255, v9, MEMORY[0x24BDED858]);
  v15 = v7;
  v16 = v8;
  v17 = v10;
  v18 = v11;
  MEMORY[0x242695A94](255, &v15, MEMORY[0x24BDF22B8], 0);
  v12 = sub_2414B3A90();
  v15 = v7;
  v16 = v8;
  v17 = v10;
  v18 = v11;
  v14[0] = swift_getOpaqueTypeConformance2();
  v14[1] = v6;
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v12, v14);
}

void sub_241339D18()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_24133ACB8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_241339DC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v32;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_2414B3934();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13 & 0xF8 | 7;
  v15 = v10 + v14;
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *(_DWORD *)(v6 + 80) | v8;
  v18 = v17 & 0xF8 | v14;
  v19 = (v17 | v13) & 0x100000;
  if ((_DWORD)v18 != 7 || v19 != 0 || v16 + ((v15 + (v9 & ~(unint64_t)v8)) & ~v14) + 1 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v18 + 16) & ~v18));
LABEL_21:
    swift_retain();
    return a1;
  }
  v32 = *(_QWORD *)(v11 - 8);
  v23 = ~(unint64_t)v8;
  v24 = ~v14;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v25 = ((unint64_t)a1 + v9) & v23;
  v26 = ((unint64_t)a2 + v9) & v23;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v4);
  v27 = (_QWORD *)((v25 + v15) & v24);
  v28 = (_QWORD *)((v26 + v15) & v24);
  v29 = *((unsigned __int8 *)v28 + v16);
  if (v29 >= 2)
  {
    if (v16 <= 3)
      v30 = v16;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  if (v29 != 1)
  {
    *v27 = *v28;
    *((_BYTE *)v27 + v16) = 0;
    goto LABEL_21;
  }
  (*(void (**)(unint64_t))(v32 + 16))((v25 + v15) & v24);
  *((_BYTE *)v27 + v16) = 1;
  return a1;
}

uint64_t sub_241339FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2414B3934() - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = (v7 + v8 + v10) & ~v10;
  v12 = *(_QWORD *)(v9 + 64);
  if (v12 <= 8)
    v12 = 8;
  v13 = *(unsigned __int8 *)(v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X14 }
  }
  if (v13 == 1)
    return (*(uint64_t (**)(void))(v9 + 8))();
  else
    return swift_release();
}

uint64_t sub_24133A0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(sub_2414B3934() - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (_QWORD *)((v13 + v15 + v11) & ~v15);
  v17 = (_QWORD *)((v13 + v15 + v12) & ~v15);
  if (*(_QWORD *)(v14 + 64) <= 8uLL)
    v18 = 8;
  else
    v18 = *(_QWORD *)(v14 + 64);
  v19 = *((unsigned __int8 *)v17 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  if (v19 == 1)
  {
    (*(void (**)(_QWORD *))(v14 + 16))(v16);
    v21 = 1;
  }
  else
  {
    *v16 = *v17;
    swift_retain();
    v21 = 0;
  }
  *((_BYTE *)v16 + v18) = v21;
  return a1;
}

uint64_t sub_24133A230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = sub_2414B3934();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (_QWORD *)((v12 + v15 + v10) & ~v15);
  v17 = (_QWORD *)((v12 + v15 + v11) & ~v15);
  if (v16 != v17)
  {
    v18 = v13;
    if (*(_QWORD *)(v14 + 64) <= 8uLL)
      v19 = 8;
    else
      v19 = *(_QWORD *)(v14 + 64);
    v20 = *((unsigned __int8 *)v16 + v19);
    if (v20 >= 2)
    {
      if (v19 <= 3)
        v21 = v19;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
    else
      swift_release();
    v22 = *((unsigned __int8 *)v17 + v19);
    if (v22 >= 2)
    {
      if (v19 <= 3)
        v23 = v19;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v16, v17, v18);
      *((_BYTE *)v16 + v19) = 1;
    }
    else
    {
      *v16 = *v17;
      *((_BYTE *)v16 + v19) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_24133A434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(sub_2414B3934() - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (_QWORD *)((v13 + v15 + v11) & ~v15);
  v17 = (_QWORD *)((v13 + v15 + v12) & ~v15);
  if (*(_QWORD *)(v14 + 64) <= 8uLL)
    v18 = 8;
  else
    v18 = *(_QWORD *)(v14 + 64);
  v19 = *((unsigned __int8 *)v17 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  if (v19 == 1)
  {
    (*(void (**)(_QWORD *))(v14 + 32))(v16);
    v21 = 1;
  }
  else
  {
    v21 = 0;
    *v16 = *v17;
  }
  *((_BYTE *)v16 + v18) = v21;
  return a1;
}

uint64_t sub_24133A588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = sub_2414B3934();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (_QWORD *)((v12 + v15 + v10) & ~v15);
  v17 = (_QWORD *)((v12 + v15 + v11) & ~v15);
  if (v16 != v17)
  {
    v18 = v13;
    if (*(_QWORD *)(v14 + 64) <= 8uLL)
      v19 = 8;
    else
      v19 = *(_QWORD *)(v14 + 64);
    v20 = *((unsigned __int8 *)v16 + v19);
    if (v20 >= 2)
    {
      if (v19 <= 3)
        v21 = v19;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
    else
      swift_release();
    v22 = *((unsigned __int8 *)v17 + v19);
    if (v22 >= 2)
    {
      if (v19 <= 3)
        v23 = v19;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 32))(v16, v17, v18);
      v24 = 1;
    }
    else
    {
      v24 = 0;
      *v16 = *v17;
    }
    *((_BYTE *)v16 + v19) = v24;
  }
  return a1;
}

uint64_t sub_24133A788(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(sub_2414B3934() - 8);
  v13 = 8;
  if (*(_QWORD *)(v12 + 64) > 8uLL)
    v13 = *(_QWORD *)(v12 + 64);
  if (v11 <= 0xFE)
    v14 = 254;
  else
    v14 = v11;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v17 = *(_QWORD *)(v9 + 64);
  v18 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  if (a2 <= v14)
    goto LABEL_29;
  v19 = v13 + ((v17 + v18 + (v16 & ~v15)) & ~v18) + 1;
  v20 = 8 * v19;
  if (v19 > 3)
    goto LABEL_12;
  v23 = ((a2 - v14 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v23))
  {
    v21 = *(_DWORD *)(a1 + v19);
    if (v21)
      goto LABEL_20;
  }
  else
  {
    if (v23 <= 0xFF)
    {
      if (v23 < 2)
        goto LABEL_29;
LABEL_12:
      v21 = *(unsigned __int8 *)(a1 + v19);
      if (!*(_BYTE *)(a1 + v19))
        goto LABEL_29;
LABEL_20:
      v24 = (v21 - 1) << v20;
      if (v19 > 3)
        v24 = 0;
      if ((_DWORD)v19)
      {
        if (v19 <= 3)
          v25 = v19;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      return v14 + v24 + 1;
    }
    v21 = *(unsigned __int16 *)(a1 + v19);
    if (*(_WORD *)(a1 + v19))
      goto LABEL_20;
  }
LABEL_29:
  if ((_DWORD)v8 == v14)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v27 = a1;
    v28 = v8;
    v29 = v6;
    return v26(v27, v28, v29);
  }
  v27 = (v16 + a1) & ~v15;
  if ((_DWORD)v10 == v14)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v28 = v10;
    v29 = v5;
    return v26(v27, v28, v29);
  }
  v30 = *(unsigned __int8 *)(((v27 + v17 + v18) & ~v18) + v13);
  if (v30 >= 2)
    return (v30 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_24133A9A0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v7 + 84))
    v9 = *(_DWORD *)(v7 + 84);
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_2414B3934() - 8);
  v11 = *(_QWORD *)(v10 + 64);
  if (v11 <= 8)
    v11 = 8;
  if (v9 <= 0xFE)
    v12 = 254;
  else
    v12 = v9;
  v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v14 = ((*(_QWORD *)(v8 + 64)
        + v13
        + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~v13)
      + v11
      + 1;
  if (a3 <= v12)
  {
    v15 = 0;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v12 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v12 < a2)
  {
    v16 = ~v12 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_24133AC80()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x24133AC14);
}

void sub_24133AC88()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x24133AC14);
}

void sub_24133AC98()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x24133AC14);
}

void sub_24133ACA0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x24133AC14);
}

void type metadata accessor for ContrastSensitiveForegroundStyle()
{
  JUMPOUT(0x242695A4CLL);
}

void sub_24133ACB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25437DAA8)
  {
    sub_2414B3934();
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25437DAA8);
  }
}

uint64_t sub_24133AD0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24133AD60(uint64_t a1)
{
  _s18MiniPlayerSubtitleOwxx(a1);
  return a1;
}

uint64_t sub_24133AD8C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_24133ADAC(uint64_t a1, uint64_t a2)
{
  _s18MiniPlayerSubtitleOwcp(a2, a1);
  return a2;
}

uint64_t sub_24133ADE0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_24133AE14(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  return sub_2412E6BF8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_24133AE48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_unknownObjectRetain();
  sub_2412E6F7C(v5, v6);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_24133AEA8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  v4 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_2412E6F7C(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_2412E6BF8(v5, v6);
  return a1;
}

uint64_t sub_24133AF3C(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v4;
  sub_2412E6BF8(v5, v6);
  return a1;
}

uint64_t sub_24133AF9C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24133AFE4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s18HeaderMetadataViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18HeaderMetadataViewVMn);
}

void sub_24133B03C()
{
  type metadata accessor for ContrastSensitiveForegroundStyle();
}

uint64_t sub_24133B064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[12];

  MEMORY[0x242695AE8](&unk_2414BA958, a1);
  v1 = sub_2414B3B08();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122038);
  v2 = sub_2414B3514();
  v4[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v1);
  v4[1] = sub_2412C8FC4(&qword_257122050, &qword_257122038, MEMORY[0x24BDF0710]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_24133B108()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s23MarqueeTitleAndSubtitleVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s23MarqueeTitleAndSubtitleVMn);
}

uint64_t sub_24133B158@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B3790();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24133B188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v5;
  sub_2412C821C(v6, v7);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 48, &qword_254380B78);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  v9 = *(_BYTE *)(a2 + 104);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v9;
  sub_2412E6BF8(v10, v11);
  return a1;
}

uint64_t sub_24133B22C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24133B274(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_24133B2D0()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_24133B350(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2412C7080(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_BYTE *)(a2 + 40);
    swift_retain();
    sub_2412C7080(v10, v11);
    *(_QWORD *)(a1 + 32) = v10;
    *(_BYTE *)(a1 + 40) = v11;
    v12 = *(int *)(a3 + 44);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = *(int *)(a3 + 48);
    v18 = a1 + v17;
    v19 = a2 + v17;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    sub_2412E6F7C(*(_QWORD *)v19, v21);
    *(_QWORD *)v18 = v20;
    *(_BYTE *)(v18 + 8) = v21;
  }
  return a1;
}

uint64_t sub_24133B494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  sub_2412C821C(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return sub_2412E6BF8(*(_QWORD *)(a1 + *(int *)(a2 + 48)), *(_BYTE *)(a1 + *(int *)(a2 + 48) + 8));
}

uint64_t sub_24133B53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  swift_retain();
  sub_2412C7080(v9, v10);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  v11 = *(int *)(a3 + 44);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = *(int *)(a3 + 48);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_2412E6F7C(*(_QWORD *)v17, v19);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  return a1;
}

uint64_t sub_24133B654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_2412C7080(v10, v11);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  sub_2412C821C(v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 44);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_2412CBE78(a1 + v14, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v18 = *(int *)(a3 + 48);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_2412E6F7C(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_2412E6BF8(v23, v24);
  return a1;
}

uint64_t sub_24133B7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 44);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 48);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_24133B8B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_release();
  v11 = *((_BYTE *)a2 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v11;
  sub_2412C821C(v12, v13);
  if ((uint64_t *)a1 != a2)
  {
    v14 = *(int *)(a3 + 44);
    v15 = (void *)(a1 + v14);
    v16 = (char *)a2 + v14;
    sub_2412CBE78(a1 + v14, &qword_25437DAA0);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2414B3934();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  v19 = *(int *)(a3 + 48);
  v20 = a1 + v19;
  v21 = (uint64_t *)((char *)a2 + v19);
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  v23 = *(_QWORD *)v20;
  v24 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = (_BYTE)v21;
  sub_2412E6BF8(v23, v24);
  return a1;
}

uint64_t sub_24133B9E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24133B9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_24133BA74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24133BA80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24133BAF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = _s23MarqueeTitleAndSubtitleVMa(255, *a1, v5, a4);
  v8 = type metadata accessor for MetadataStyleModifier(255, v4, v5, v7);
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  v11 = sub_2414B3514();
  v12 = sub_2414B3514();
  v18[0] = MEMORY[0x242695AE8](&unk_2414BADE8, v6);
  v18[1] = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataStyleModifier<A>, v8);
  v13 = MEMORY[0x24BDED308];
  v17[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v18);
  v17[1] = sub_241301CC8();
  v16[0] = MEMORY[0x242695AE8](v13, v10, v17);
  v16[1] = sub_2412C8FC4(&qword_254382BA8, &qword_254382BB0, MEMORY[0x24BDF1028]);
  v15[0] = MEMORY[0x242695AE8](v13, v11, v16);
  v15[1] = MEMORY[0x24BDEF7B8];
  return MEMORY[0x242695AE8](v13, v12, v15);
}

uint64_t sub_24133BC6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24133BCA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413350A0(v1[4], v1[2], v1[3], a1);
}

void sub_24133BCB0()
{
  uint64_t v0;

  sub_241337B88(v0 + 32);
}

uint64_t objectdestroy_64Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_2412C821C(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 104))
      __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  else
  {
    swift_release();
  }
  sub_2412E6BF8(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  return swift_deallocObject();
}

void sub_24133BD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_241337CF0(a1, a2, v2 + 32);
}

uint64_t sub_24133BD34@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 81);
  return result;
}

uint64_t sub_24133BD84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241336A78(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_24133BD90@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_241336DF4(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_24133BDA4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_24133BE10@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_241334108(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24133BE24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571227C8;
  if (!qword_2571227C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571227B0);
    v2[0] = sub_24133BEA8();
    v2[1] = sub_2412C8FC4(&qword_254381238, &qword_254381240, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571227C8);
  }
  return result;
}

unint64_t sub_24133BEA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571227D0;
  if (!qword_2571227D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571227A8);
    v2[0] = sub_2412C8FC4(&qword_2571227D8, &qword_2571227A0, (uint64_t)&protocol conformance descriptor for Marquee<A>);
    v2[1] = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571227D0);
  }
  return result;
}

uint64_t sub_24133BF44@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413332A4(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24133BF58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122838;
  if (!qword_257122838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122820);
    v2[0] = sub_24133BFDC();
    v2[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122838);
  }
  return result;
}

unint64_t sub_24133BFDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122840;
  if (!qword_257122840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122818);
    v2[0] = sub_24133C060();
    v2[1] = sub_2412C8FC4(&qword_254381238, &qword_254381240, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122840);
  }
  return result;
}

unint64_t sub_24133C060()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122848;
  if (!qword_257122848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122810);
    v2[0] = sub_24133C0E4();
    v2[1] = sub_2412C8FC4(&qword_254381178, &qword_254381180, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122848);
  }
  return result;
}

unint64_t sub_24133C0E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122850;
  if (!qword_257122850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122808);
    v2[0] = sub_2412C8FC4(&qword_257122858, &qword_257122800, (uint64_t)&protocol conformance descriptor for Marquee<A>);
    v2[1] = sub_24133C168();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122850);
  }
  return result;
}

unint64_t sub_24133C168()
{
  unint64_t result;

  result = qword_257122860;
  if (!qword_257122860)
  {
    result = MEMORY[0x242695AE8](&unk_2414C8E78, &type metadata for AppendedBadgeModifier);
    atomic_store(result, (unint64_t *)&qword_257122860);
  }
  return result;
}

unint64_t sub_24133C1AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257122878;
  if (!qword_257122878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571227F0);
    v2 = sub_2412C8FC4(&qword_257122880, &qword_2571227E8, (uint64_t)&unk_2414BA958);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257122878);
  }
  return result;
}

unint64_t sub_24133C230()
{
  unint64_t result;

  result = qword_257122888;
  if (!qword_257122888)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for MetadataButtonStyle, &type metadata for MetadataButtonStyle);
    atomic_store(result, (unint64_t *)&qword_257122888);
  }
  return result;
}

uint64_t sub_24133C274(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  unint64_t v18;

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E20);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9A0);
  _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, v1, v2, v3);
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381240);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437D9B0);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381180);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381440);
  sub_2414B3A90();
  sub_2414B3A90();
  sub_2414B46F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381150);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381360);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata3();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4894();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v5);
  v7 = sub_2412F837C();
  v15 = v5;
  v16 = &type metadata for NowPlayingViewModel.PlayerStyle;
  v17 = v6;
  v18 = v7;
  v8 = MEMORY[0x242695A94](255, &v15, MEMORY[0x24BDF3908], 0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381590);
  v15 = v5;
  v16 = &type metadata for NowPlayingViewModel.PlayerStyle;
  v17 = v6;
  v18 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v11 = sub_2412F82D0();
  v15 = v8;
  v16 = (ValueMetadata *)v9;
  v17 = OpaqueTypeConformance2;
  v18 = v11;
  v12 = MEMORY[0x242695A94](255, &v15, MEMORY[0x24BDF38E8], 0);
  v15 = v8;
  v16 = (ValueMetadata *)v9;
  v17 = OpaqueTypeConformance2;
  v18 = v11;
  v13 = swift_getOpaqueTypeConformance2();
  v15 = v12;
  v16 = (ValueMetadata *)v13;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24133C5B4()
{
  return sub_2412C8FC4(&qword_257122890, &qword_257122730, MEMORY[0x24BDF44C8]);
}

uint64_t sub_24133C5E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2412C84B8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24133C62C()
{
  sub_2412C84B8();
  return sub_2414B3844();
}

uint64_t sub_24133C674(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];

  v4 = _s22MiniPlayerMetadataViewV25MiniPlayerMarqueeModifierVMa(255, *a1, a1[1], a4);
  MEMORY[0x242695AE8](&unk_2414BB0D0, v4);
  v5 = sub_2414B3B08();
  v6 = sub_2414B3514();
  v7 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381350);
  v8 = sub_2414B3514();
  v9 = sub_2414B3514();
  v15[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v5);
  v15[1] = MEMORY[0x24BDEDBB8];
  v10 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v15);
  v14[1] = MEMORY[0x24BDECC60];
  v13[0] = MEMORY[0x242695AE8](v10, v7, v14);
  v13[1] = sub_2412C8FC4(&qword_254381348, &qword_254381350, MEMORY[0x24BDF1028]);
  v12[0] = MEMORY[0x242695AE8](v10, v8, v13);
  v12[1] = sub_241301CC8();
  return MEMORY[0x242695AE8](v10, v9, v12);
}

uint64_t sub_24133C7F8(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  else
    swift_release();
  sub_2412C823C(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168), *(_BYTE *)(a1 + 169));
  return sub_2412E6BF8(*(_QWORD *)(a1 + 176), *(_BYTE *)(a1 + 184));
}

uint64_t sub_24133C884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  char v22;
  char v23;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = (_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  if ((v8 & 1) != 0)
  {
    v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v9;
    (**(void (***)(uint64_t, _QWORD *))(v9 - 8))(a1 + 48, v7);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *v7;
    swift_retain();
  }
  *(_BYTE *)(a1 + 88) = v8;
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 136);
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a2 + 160);
  v22 = *(_BYTE *)(a2 + 168);
  v23 = *(_BYTE *)(a2 + 169);
  sub_2412C6F48(v10, v11, v12, v13, v14, v15, v16, v17, v21, v22, v23);
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v14;
  *(_QWORD *)(a1 + 136) = v15;
  *(_QWORD *)(a1 + 144) = v16;
  *(_QWORD *)(a1 + 152) = v17;
  *(_QWORD *)(a1 + 160) = v21;
  *(_BYTE *)(a1 + 168) = v22;
  *(_BYTE *)(a1 + 169) = v23;
  v18 = *(_QWORD *)(a2 + 176);
  v19 = *(_BYTE *)(a2 + 184);
  sub_2412E6F7C(v18, v19);
  *(_QWORD *)(a1 + 176) = v18;
  *(_BYTE *)(a1 + 184) = v19;
  return a1;
}

uint64_t sub_24133C9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  char v30;
  char v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 48, &qword_254380B40);
    if ((*(_BYTE *)(a2 + 88) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v4;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 48, a2 + 48);
      *(_BYTE *)(a1 + 88) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 88) = 0;
      swift_retain();
    }
  }
  v5 = *(_QWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 128);
  v10 = *(_QWORD *)(a2 + 136);
  v11 = *(_QWORD *)(a2 + 144);
  v12 = *(_QWORD *)(a2 + 152);
  v29 = *(_QWORD *)(a2 + 160);
  v30 = *(_BYTE *)(a2 + 168);
  v31 = *(_BYTE *)(a2 + 169);
  sub_2412C6F48(v5, v6, v7, v8, v9, v10, v11, v12, v29, v30, v31);
  v13 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 120);
  v17 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 136);
  v19 = *(_QWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 152);
  v21 = *(_QWORD *)(a1 + 160);
  v22 = *(_BYTE *)(a1 + 168);
  v23 = *(_BYTE *)(a1 + 169);
  *(_QWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 120) = v8;
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = v11;
  *(_QWORD *)(a1 + 152) = v12;
  *(_QWORD *)(a1 + 160) = v29;
  *(_BYTE *)(a1 + 168) = v30;
  *(_BYTE *)(a1 + 169) = v31;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = *(_QWORD *)(a2 + 176);
  v25 = *(_BYTE *)(a2 + 184);
  sub_2412E6F7C(v24, v25);
  v26 = *(_QWORD *)(a1 + 176);
  v27 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v24;
  *(_BYTE *)(a1 + 184) = v25;
  sub_2412E6BF8(v26, v27);
  return a1;
}

__n128 __swift_memcpy185_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(__int128 *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_24133CBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  char v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  if (a1 != a2)
  {
    sub_2412CBE78(a1 + 48, &qword_254380B40);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  v7 = *(_QWORD *)(a2 + 160);
  v8 = *(_BYTE *)(a2 + 168);
  v9 = *(_BYTE *)(a2 + 169);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 136);
  v16 = *(_QWORD *)(a1 + 144);
  v17 = *(_QWORD *)(a1 + 152);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_BYTE *)(a1 + 168);
  v20 = *(_BYTE *)(a1 + 169);
  v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  v22 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 160) = v7;
  *(_BYTE *)(a1 + 168) = v8;
  *(_BYTE *)(a1 + 169) = v9;
  sub_2412C823C(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  v23 = *(_BYTE *)(a2 + 184);
  v24 = *(_QWORD *)(a1 + 176);
  v25 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = v23;
  sub_2412E6BF8(v24, v25);
  return a1;
}

uint64_t sub_24133CCF4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 185))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24133CD3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 185) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s19DefaultMetadataViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s19DefaultMetadataViewVMn);
}

uint64_t sub_24133CDB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24133CDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24132F950(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24133CDF8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_241330610(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_24133CE04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24133CE40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2571228C8;
  if (!qword_2571228C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122898);
    v2 = sub_24133CEA4();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571228C8);
  }
  return result;
}

unint64_t sub_24133CEA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_2571228D0;
  if (!qword_2571228D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571228C0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571228B0);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
    v2[4] = sub_2412F784C(&qword_2571228D8, &qword_2571228B0, (uint64_t (*)(void))sub_24133CFAC);
    v2[5] = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571228D0);
  }
  return result;
}

unint64_t sub_24133CFAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571228E0;
  if (!qword_2571228E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571228A8);
    v2[0] = sub_24133D018();
    v2[1] = sub_24133D09C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571228E0);
  }
  return result;
}

unint64_t sub_24133D018()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571228E8;
  if (!qword_2571228E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571228A0);
    v2[0] = sub_24133C1AC();
    v2[1] = sub_2412C8FC4(&qword_254381358, &qword_254381360, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571228E8);
  }
  return result;
}

unint64_t sub_24133D09C()
{
  unint64_t result;

  result = qword_2571228F0;
  if (!qword_2571228F0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C61E0, &type metadata for PublishGeometryModifier);
    atomic_store(result, (unint64_t *)&qword_2571228F0);
  }
  return result;
}

uint64_t sub_24133D0F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = *a1;
  v2 = a1[1];
  swift_getAssociatedTypeWitness();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543811A0);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  sub_2414B53B0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122898);
  _s23MarqueeTitleAndSubtitleVMa(255, v1, v2, v3);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BB0);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  v5 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  sub_2414B4894();
  type metadata accessor for MetadataStyleModifier(255, v1, v2, v6);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v7 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v5, v7);
  v8 = sub_2414B4804();
  v9 = sub_2414B3514();
  v11[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v8);
  v11[1] = MEMORY[0x24BDEF7B8];
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v11);
}

uint64_t static NowPlayingViewModel.Metrics.Event.== infix(_:_:)()
{
  return 1;
}

uint64_t NowPlayingViewModel.Metrics.Event.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t NowPlayingViewModel.Metrics.Event.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_24133D39C()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_24133D3DC()
{
  return sub_2414B58D8();
}

uint64_t sub_24133D400()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t NowPlayingViewModel.Metrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel7Metrics___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t NowPlayingViewModel.Metrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel7Metrics___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24133D4E0()
{
  return type metadata accessor for NowPlayingViewModel.Metrics();
}

uint64_t method lookup function for NowPlayingViewModel.Metrics()
{
  return swift_lookUpClassMethod();
}

uint64_t _s7MetricsC5EventOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s7MetricsC5EventOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24133D588 + 4 * byte_2414BB290[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24133D5A8 + 4 * byte_2414BB295[v4]))();
}

_BYTE *sub_24133D588(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24133D5A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24133D5B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24133D5B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24133D5C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24133D5C8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t MCUINamespace<A>.glowEffect(isActive:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v11;

  v6 = type metadata accessor for GlowModifier();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = a1;
  *((_QWORD *)v8 + 1) = swift_getKeyPath();
  v8[16] = 0;
  v9 = (uint64_t *)&v8[*(int *)(v6 + 24)];
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x242693DC0](v8, *(_QWORD *)(a2 + 16), v6, a3);
  return sub_2412C68F4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
}

uint64_t type metadata accessor for GlowModifier()
{
  uint64_t result;

  result = qword_257122960;
  if (!qword_257122960)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MCUINamespace<A>.glowEffectForegroundColor(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  v10[1] = a1;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_24133D7D0()
{
  uint64_t v1;

  sub_24133F3C4();
  sub_2414B3838();
  return v1;
}

uint64_t sub_24133D808@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24133F3C4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24133D854()
{
  sub_24133F3C4();
  swift_retain();
  return sub_2414B3844();
}

uint64_t sub_24133D8B4()
{
  return sub_2414B373C();
}

uint64_t sub_24133D8D4()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  _BYTE *v10;
  int v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571229B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B3934();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  type metadata accessor for GlowModifier();
  sub_2412C8A04((uint64_t)v8);
  v10 = &v4[*(int *)(v2 + 48)];
  *v4 = v9;
  (*(void (**)(_BYTE *, char *, uint64_t))(v6 + 32))(v10, v8, v5);
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 88))(v10, v5);
  v12 = *MEMORY[0x24BDEEDE8];
  if (v9 == 1)
  {
    if (v11 == v12)
    {
      v13 = v1[16];
      v14 = swift_retain();
      v15 = sub_2412E4048(v14, v13);
      swift_release();
      return v15;
    }
    if (v11 == *MEMORY[0x24BDEEDF0])
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
      return MEMORY[0x242693E80](v16);
    }
LABEL_10:
    v15 = sub_2414B46C0();
    sub_2412CBE78((uint64_t)v4, &qword_2571229B0);
    return v15;
  }
  if (v11 != v12)
    goto LABEL_10;
  if (qword_2571207C8 != -1)
    swift_once();
  v15 = qword_257136EB0;
  swift_retain();
  return v15;
}

uint64_t sub_24133DAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  unsigned int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)@<X0>(uint64_t@<X8>);
  uint64_t (*v39)@<X0>(uint64_t@<X8>);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (**v48)@<X0>(uint64_t@<X8>);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v70 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v66 = v6;
  v67 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B3934();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t)&v50 - v10;
  v51 = type metadata accessor for GlowModifier();
  v62 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v63 = v11;
  v64 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_2414B4AE0();
  v58 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E40);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571229A0);
  MEMORY[0x24BDAC7A8](v57);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571229A8);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (uint64_t)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_24133D8D4();
  v68 = v5;
  v69 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26 = (uint64_t)v2;
  v65 = a1;
  v56 = v25;
  v25(v20, a1, v4);
  *(_QWORD *)&v20[*(int *)(v18 + 36)] = v24;
  v27 = *v2;
  sub_2412C6A50(v26, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  if (v27 == 1)
  {
    sub_2412C68F4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
    v28 = (unsigned int *)MEMORY[0x24BDF50D0];
  }
  else
  {
    v29 = v52;
    sub_2412C8A04(v52);
    v30 = v53;
    v31 = v54;
    v32 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, *MEMORY[0x24BDEEDE8], v55);
    sub_2412C8030(&qword_25437DB58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEE00], MEMORY[0x24BDEEE28]);
    v33 = sub_2414B4CE4();
    v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v30, v32);
    v34((char *)v29, v32);
    sub_2412C68F4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
    v28 = (unsigned int *)MEMORY[0x24BDF50D0];
    if ((v33 & 1) != 0)
      v28 = (unsigned int *)MEMORY[0x24BDF5098];
  }
  v35 = v58;
  v36 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v17, *v28, v59);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v22[*(int *)(v57 + 36)], v17, v36);
  sub_2412DC3FC((uint64_t)v20, (uint64_t)v22, &qword_254383E40);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
  sub_2412CBE78((uint64_t)v20, &qword_254383E40);
  v37 = sub_2414B4A44();
  v39 = v38;
  v40 = v67;
  v41 = v69;
  v56(v67, v65, v69);
  v42 = v64;
  sub_2412C6A50(v26, v64, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  v43 = v68;
  v44 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v45 = (v66 + *(unsigned __int8 *)(v62 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  v46 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v46 + v44, v40, v41);
  sub_24133F2FC(v42, v46 + v45);
  v47 = v61;
  sub_2412DC3FC((uint64_t)v22, v61, &qword_2571229A0);
  v48 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v47 + *(int *)(v60 + 36));
  *v48 = sub_24133F340;
  v48[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v46;
  v48[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v37;
  v48[3] = v39;
  sub_2412CBE78((uint64_t)v22, &qword_2571229A0);
  return sub_2412EAEA4(v47, v70, &qword_2571229A8);
}

uint64_t sub_24133DF6C@<X0>(unsigned __int8 *a1@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGFloat MidX;
  CGFloat MidY;
  CGFloat *v27;
  uint64_t v29;
  CGRect v30;
  CGRect v31;

  v6 = sub_2414B3AB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2414B325C();
  v14 = v13;
  *v12 = sub_2414B4A44();
  v12[1] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E30);
  sub_24133E118(a1, a2, (uint64_t)v12 + *(int *)(v16 + 44), v14);
  sub_2414B3B80();
  sub_2414B3268();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v30.origin.x = v18;
  v30.origin.y = v20;
  v30.size.width = v22;
  v30.size.height = v24;
  MidX = CGRectGetMidX(v30);
  v31.origin.x = v18;
  v31.origin.y = v20;
  v31.size.width = v22;
  v31.size.height = v24;
  MidY = CGRectGetMidY(v31);
  sub_2412DC3FC((uint64_t)v12, a3, &qword_2543841D0);
  v27 = (CGFloat *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254383F08) + 36));
  *v27 = MidX;
  v27[1] = MidY;
  return sub_2412CBE78((uint64_t)v12, &qword_2543841D0);
}

uint64_t sub_24133E118@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  double v51;
  unsigned __int8 *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  double v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;

  v82 = a1;
  v96 = a3;
  v6 = sub_2414B35EC();
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4AE0();
  v91 = *(_QWORD *)(v8 - 8);
  v92 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v90 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F90);
  MEMORY[0x24BDAC7A8](v89);
  v95 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v79 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v94 = (uint64_t)&v79 - v15;
  v84 = sub_2414B3934();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v87 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v79 - v18;
  v85 = type metadata accessor for GlowModifier();
  MEMORY[0x24BDAC7A8](v85);
  v86 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v79 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E48);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F28);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F70);
  MEMORY[0x24BDAC7A8](v80);
  v88 = (uint64_t)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v79 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v97 = (uint64_t)&v79 - v34;
  v35 = a2[16];
  v36 = swift_retain();
  v37 = sub_2412E4048(v36, v35);
  swift_release();
  KeyPath = swift_getKeyPath();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840A0);
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v25, v82, v39);
  v40 = (uint64_t *)&v25[*(int *)(v23 + 36)];
  *v40 = KeyPath;
  v40[1] = v37;
  sub_2412DC3FC((uint64_t)v25, (uint64_t)v28, &qword_254383E48);
  v41 = &v28[*(int *)(v26 + 36)];
  *(double *)v41 = a4 * 0.1;
  v41[8] = 0;
  sub_2412CBE78((uint64_t)v25, &qword_254383E48);
  LODWORD(KeyPath) = *a2;
  v82 = a2;
  sub_2412C6A50((uint64_t)a2, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  v42 = (unsigned int *)MEMORY[0x24BDEEDE8];
  if ((_DWORD)KeyPath != 1)
  {
    v50 = v81;
    sub_2412C68F4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
    v47 = v84;
    goto LABEL_5;
  }
  v43 = v81;
  sub_2412C8A04(v81);
  v44 = *v42;
  v45 = v83;
  v46 = v87;
  v47 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 104))(v87, v44, v84);
  v48 = sub_2414B2F80();
  v49 = *(void (**)(char *, uint64_t))(v45 + 8);
  v49(v46, v47);
  v50 = v43;
  v49((char *)v43, v47);
  sub_2412C68F4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  v51 = 1.0;
  if ((v48 & 1) == 0)
LABEL_5:
    v51 = 0.0;
  sub_2412DC3FC((uint64_t)v28, (uint64_t)v32, &qword_254383F28);
  *(double *)&v32[*(int *)(v80 + 36)] = v51;
  sub_2412CBE78((uint64_t)v28, &qword_254383F28);
  sub_2412EAEA4((uint64_t)v32, v97, &qword_254383F70);
  v52 = v82;
  v53 = v82[16];
  v54 = swift_retain();
  sub_2412E4048(v54, v53);
  swift_release();
  v55 = sub_2414B466C();
  swift_release();
  sub_2414B4A44();
  sub_2414B31B4();
  v84 = v98;
  LODWORD(v81) = v99;
  v80 = v100;
  v56 = v101;
  v57 = v102;
  v79 = v103;
  v58 = *v52;
  v59 = (uint64_t)v52;
  v60 = v86;
  sub_2412C6A50(v59, v86, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  if (v58 == 1)
  {
    sub_2412C8A04(v50);
    v61 = v83;
    v62 = v87;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v87, *MEMORY[0x24BDEEDE8], v47);
    v63 = sub_2414B2F80();
    v64 = *(void (**)(char *, uint64_t))(v61 + 8);
    v64(v62, v47);
    v64((char *)v50, v47);
    sub_2412C68F4(v60, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
    v65 = 1.0;
    if ((v63 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    sub_2412C68F4(v60, (uint64_t (*)(_QWORD))type metadata accessor for GlowModifier);
  }
  v65 = 0.0;
LABEL_11:
  v67 = v90;
  v66 = v91;
  v68 = v92;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, *MEMORY[0x24BDF50E8], v92);
  v69 = (uint64_t)v93;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v93, v67, v68);
  v70 = MEMORY[0x24BDEDB60];
  sub_2412C6A50(v69, (uint64_t)&v13[*(int *)(v89 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v13 = v55;
  *((_WORD *)v13 + 4) = 256;
  *((_QWORD *)v13 + 2) = 0x3FF0000000000000;
  *((_WORD *)v13 + 12) = 256;
  *((double *)v13 + 4) = a4 * 0.6;
  v13[40] = 0;
  *((_QWORD *)v13 + 6) = v84;
  v13[56] = v81;
  *((_QWORD *)v13 + 8) = v80;
  v13[72] = v56;
  v71 = v79;
  *((_QWORD *)v13 + 10) = v57;
  *((_QWORD *)v13 + 11) = v71;
  *((double *)v13 + 12) = v65;
  swift_retain();
  sub_2412C68F4(v69, (uint64_t (*)(_QWORD))v70);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  swift_release();
  v72 = v94;
  sub_2412EAEA4((uint64_t)v13, v94, &qword_254383F90);
  v73 = v97;
  v74 = v88;
  sub_2412DC3FC(v97, v88, &qword_254383F70);
  v75 = v95;
  sub_2412DC3FC(v72, v95, &qword_254383F90);
  v76 = v96;
  sub_2412DC3FC(v74, v96, &qword_254383F70);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F78);
  sub_2412DC3FC(v75, v76 + *(int *)(v77 + 48), &qword_254383F90);
  sub_2412CBE78(v72, &qword_254383F90);
  sub_2412CBE78(v73, &qword_254383F70);
  sub_2412CBE78(v75, &qword_254383F90);
  return sub_2412CBE78(v74, &qword_254383F70);
}

uint64_t sub_24133E904()
{
  uint64_t result;

  result = sub_2414B4654();
  qword_254383D28 = result;
  return result;
}

uint64_t sub_24133E920@<X0>(_QWORD *a1@<X8>)
{
  if (qword_254383D38 != -1)
    swift_once();
  *a1 = qword_254383D28;
  return swift_retain();
}

uint64_t View.glowEffect(isActive:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - v9;
  View.mcui.getter(a2, (uint64_t)&v12 - v9);
  MCUINamespace<A>.glowEffect(isActive:)(a1, v7, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t View.glowEffectForegroundColor(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  View.mcui.getter(a2, (uint64_t)&v11 - v8);
  MCUINamespace<A>.glowEffectForegroundColor(_:)(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24133EAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for GlowModifier();
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8030(&qword_2543830D0, (uint64_t (*)(uint64_t))type metadata accessor for GlowModifier, (uint64_t)&unk_2414BB400);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_24133EB50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257120C10);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2412C8FC4(&qword_257120C18, &qword_257120C10, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

_QWORD *sub_24133EBD0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_24133ECBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24133ED34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24133EDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_2412CBE78(a1 + v7, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24133EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24133EF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_2412CBE78(a1 + v7, &qword_25437DAA0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24133F068()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24133F074(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t sub_24133F0F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_24133F100(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_24133F174()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24133F1F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24133F200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for GlowModifier();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v7 = v0 + ((v3 + v4 + v6) & ~v6) + *(int *)(v5 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3934();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24133F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GlowModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24133F340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543840A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GlowModifier() - 8) + 80);
  return sub_24133DF6C((unsigned __int8 *)(v1 + v4), (unsigned __int8 *)(v1 + ((v4 + v5 + v6) & ~v6)), a1);
}

unint64_t sub_24133F3C4()
{
  unint64_t result;

  result = qword_254383D40;
  if (!qword_254383D40)
  {
    result = MEMORY[0x242695AE8](&unk_2414BB4A0, &type metadata for GlowEffectForegroundColorKey);
    atomic_store(result, (unint64_t *)&qword_254383D40);
  }
  return result;
}

ValueMetadata *type metadata accessor for GlowEffectForegroundColorKey()
{
  return &type metadata for GlowEffectForegroundColorKey;
}

unint64_t sub_24133F41C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571229B8;
  if (!qword_2571229B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571229A8);
    v2[0] = sub_24133F4A0();
    v2[1] = sub_2412C8FC4(&qword_254384050, &qword_254384058, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571229B8);
  }
  return result;
}

unint64_t sub_24133F4A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571229C0;
  if (!qword_2571229C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571229A0);
    v2[0] = sub_24133F50C();
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571229C0);
  }
  return result;
}

unint64_t sub_24133F50C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383E38;
  if (!qword_254383E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E40);
    v2[0] = sub_2412C8FC4(&qword_254384098, &qword_2543840A0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383E38);
  }
  return result;
}

uint64_t sub_24133F5A8()
{
  sub_24130CDF0();
  return sub_2414B3838();
}

uint64_t sub_24133F5DC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2414B51AC();
    v31 = (void *)sub_2414B3E08();
    sub_2414B2BD8();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_2414B35F8();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_241307638(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

__n128 sub_24133F7BC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2414B51AC();
    v28 = (void *)sub_2414B3E08();
    sub_2414B2BD8();

    v19 = a17;
  }
  sub_2414B35F8();
  sub_2412DC3FC(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_24133F988@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v19;
  void *v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2414B51AC();
    v28 = (void *)sub_2414B3E08();
    sub_2414B2BD8();

    v19 = a17;
  }
  sub_2414B35F8();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v19;
  *(_BYTE *)(a9 + 16) = a18 & 1;
  *(_OWORD *)(a9 + 56) = v32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24133FB50@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2414B51AC();
    v23 = (void *)sub_2414B3E08();
    sub_2414B2BD8();

  }
  sub_2414B35F8();
  v24 = *((_OWORD *)v13 + 1);
  v25 = *((_OWORD *)v13 + 2);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  *(_OWORD *)(a9 + 72) = v29;
  v26 = *v13;
  v35 = v13[1];
  v36 = v26;
  *(_QWORD *)(a9 + 48) = v13[6];
  *(_OWORD *)(a9 + 88) = v30;
  sub_241304458((uint64_t)&v36);
  sub_241304458((uint64_t)&v35);
  return swift_retain();
}

double sub_24133FD28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24133F7BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257122E08, &qword_257122E10).n128_u64[0];
  return result;
}

uint64_t sub_24133FD80@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2414B51AC();
    v23 = (void *)sub_2414B3E08();
    sub_2414B2BD8();

  }
  sub_2414B35F8();
  v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 88) = v29;
  *(_OWORD *)(a9 + 104) = v30;
  *(_OWORD *)(a9 + 120) = v31;
  *(_OWORD *)(a9 + 136) = v32;
  *(_OWORD *)(a9 + 40) = v26;
  *(_OWORD *)(a9 + 56) = v27;
  *(_QWORD *)(a9 + 32) = *(_QWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 72) = v28;
  return swift_bridgeObjectRetain();
}

void sub_24133FF38()
{
  qword_2571229C8 = 0x4026000000000000;
}

void sub_24133FF48()
{
  qword_2571229D0 = 0x4010000000000000;
}

double sub_24133FF58()
{
  double result;

  result = 11.0;
  xmmword_2571229D8 = xmmword_2414BB4E0;
  *(_OWORD *)&qword_2571229E8 = xmmword_2414BB4E0;
  return result;
}

void sub_24133FF70()
{
  qword_2571229F8 = 0x4028000000000000;
}

void sub_24133FF80()
{
  qword_257122A00 = 0x4014000000000000;
}

int64x2_t sub_24133FF90()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_257122A08 = (__int128)result;
  return result;
}

double sub_24133FFA8()
{
  double result;

  result = 45.0;
  xmmword_257122A18 = xmmword_2414BB4F0;
  return result;
}

uint64_t sub_24133FFC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2414B3F58();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x24BDF1878], v3, v5);
  v8 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_2414B3EF8();
  v9 = sub_2414B3F10();
  sub_2412CBE78((uint64_t)v2, &qword_254381398);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_257122A28 = v9;
  return result;
}

void sub_2413400E0()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGRect v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F8]), sel_initWithStyle_reuseIdentifier_, 0, 0);
  objc_msgSend(v0, sel_bounds);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v9.origin.x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  qword_257122A30 = CGRectGetHeight(v9);
}

void BubbleTip.init<>(titleView:actions:closeButtonHandler:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3;
  void (*v4)(double);

  v3 = MEMORY[0x24BDAC7A8](a1);
  v4(v3);
  sub_2414B3880();
  sub_241340420(a2);
}

uint64_t sub_241340250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  uint64_t result;
  _QWORD *v27;
  _QWORD *v28;

  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E78);
  swift_storeEnumTagMultiPayload();
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257122EA0);
  v22 = (uint64_t *)((char *)a9 + v21[23]);
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  swift_storeEnumTagMultiPayload();
  v23 = (uint64_t *)((char *)a9 + v21[24]);
  *v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  v24 = (uint64_t *)((char *)a9 + v21[25]);
  *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  swift_storeEnumTagMultiPayload();
  v25 = (char *)a9 + v21[17];
  *(_QWORD *)v25 = a1;
  *((_QWORD *)v25 + 1) = a2;
  *((_QWORD *)v25 + 2) = a3;
  v25[24] = a4;
  *(uint64_t *)((char *)a9 + v21[18]) = a5;
  result = sub_2412EAEA4(a6, (uint64_t)a9 + v21[19], &qword_257122A50);
  v27 = (uint64_t *)((char *)a9 + v21[20]);
  *v27 = a7;
  v27[1] = a8;
  v27[2] = a10;
  v27[3] = a11;
  *(uint64_t *)((char *)a9 + v21[21]) = a12;
  v28 = (uint64_t *)((char *)a9 + v21[22]);
  *v28 = a13;
  v28[1] = a14;
  return result;
}

void sub_241340420(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E78);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BubbleTip();
}

uint64_t sub_2413404BC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = (uint64_t *)(v1 + a1[23]);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t *)(v1 + a1[24]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  v10 = (uint64_t *)(v1 + a1[25]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  swift_storeEnumTagMultiPayload();
  v11 = v1 + a1[17];
  v12 = sub_2414B53B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, v6, v12);
  *(_QWORD *)(v1 + a1[18]) = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1 + a1[19], v3, v4);
  v13 = v1 + a1[20];
  v14 = sub_2414B53B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, v2, v14);
  *(_QWORD *)(v1 + a1[21]) = v17;
  v16 = (_QWORD *)(v1 + a1[22]);
  *v16 = v18;
  v16[1] = v19;
  return result;
}

void BubbleTip.init<>(titleView:subtitleView:actions:closeButtonHandler:)(uint64_t (*a1)(double)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v18 = a4;
  v19 = a5;
  v16 = a6;
  v17 = a3;
  v9 = sub_2414B53B0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v20 = 1;
  v14 = a1(v13);
  a2(v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 56))(v11, 0, 1, a7);
  sub_2414B3880();
  sub_241340420(v16);
}

void BubbleTip.init<>(accessoryView:accessoryViewVerticalAlignment:titleView:actions:closeButtonHandler:)(void (*a1)(double)@<X0>, uint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t *a4@<X5>, uint64_t *a5@<X6>, uint64_t *a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15[5];
  char v16;

  v15[3] = a5;
  v15[4] = a6;
  v15[1] = a2;
  v15[2] = a4;
  v15[0] = a7;
  MEMORY[0x24BDAC7A8](a1);
  v10 = sub_2414B53B0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - v12;
  a1(v11);
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 56))(v13, 0, 1, a8);
  a3(v14);
  v16 = 1;
  sub_241340420(v15[0]);
}

void BubbleTip.init(accessoryView:accessoryViewVerticalAlignment:titleView:subtitleView:actions:closeButtonHandler:)(void (*a1)(double)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  void (*v27)(uint64_t);
  uint64_t v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a2;
  v34 = a6;
  v26[1] = a5;
  v27 = a4;
  v30 = a7;
  v31 = a9;
  v32 = a8;
  v29 = a13;
  v28 = a14;
  v16 = sub_2414B53B0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v26 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_2414B53B0();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v26 - v22;
  a1(v21);
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 56))(v23, 0, 1, a10);
  v25 = a3(v24);
  v27(v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 56))(v18, 0, 1, a12);
  sub_241340420(v30);
}

uint64_t BubbleTip.init<>(image:title:subtitle:bundle:tableName:actions:closeButtonHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, void *a5@<X5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v17;
  uint64_t v18;
  BOOL *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  id v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;

  v40[2] = a7;
  v40[3] = a5;
  v42 = a2;
  v43 = a4;
  v41 = a3;
  v52 = a8;
  v17 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (BOOL *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A50);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)a1;
  v50 = *(_QWORD *)(a1 + 8);
  v51 = v23;
  v49 = *(_QWORD *)(a1 + 16);
  v24 = *(unsigned __int8 *)(a1 + 24);
  v48 = v24;
  if (v24 != 255 && (v24 & 1) != 0)
    v25 = sub_2414B3874();
  else
    v25 = sub_2414B3880();
  v40[1] = a10;
  v46 = a15;
  v47 = v25;
  v44 = a13;
  v45 = a14;
  v40[0] = a10;
  swift_bridgeObjectRetain();
  v26 = sub_2414B40E4();
  v28 = v27;
  v30 = v29;
  v42 = a11;
  v43 = a12;
  v32 = v31;
  *(_QWORD *)&v19[*(int *)(v17 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  *v19 = a6 != 0;
  sub_2413469A0((uint64_t)v19, (uint64_t)&v22[*(int *)(v20 + 36)]);
  *(_QWORD *)v22 = v26;
  *((_QWORD *)v22 + 1) = v28;
  v22[16] = v30 & 1;
  *((_QWORD *)v22 + 3) = v32;
  sub_2412C68F4((uint64_t)v19, type metadata accessor for BubbleTipTitleViewModifier);
  if (a6)
  {
    v34 = sub_2414B40E4();
    v36 = v35;
    v38 = v37 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    v34 = 0;
    v36 = 0;
    v38 = 0;
    v33 = 0;
  }
  return sub_241340250(v51, v50, v49, v48, v47, (uint64_t)v22, v34, v36, v52, v38, v33, v44, v45, v46);
}

uint64_t type metadata accessor for BubbleTipTitleViewModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257122CA0);
}

uint64_t BubbleTip.init<>(image:title:subtitle:actions:closeButtonHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  BOOL *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a8;
  v45 = a7;
  v46 = a6;
  v36 = a4;
  v43 = a9;
  v13 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (BOOL *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A50);
  MEMORY[0x24BDAC7A8](v37);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)a1;
  v41 = *(_QWORD *)(a1 + 8);
  v42 = v18;
  v40 = *(_QWORD *)(a1 + 16);
  v19 = *(unsigned __int8 *)(a1 + 24);
  v39 = v19;
  if (v19 != 255 && (v19 & 1) != 0)
    v20 = sub_2414B3874();
  else
    v20 = sub_2414B3880();
  v38 = v20;
  v47 = a2;
  v48 = a3;
  sub_2412F6D88();
  v21 = sub_2414B40F0();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  *(_QWORD *)&v15[*(int *)(v13 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  *v15 = a5 != 0;
  sub_2413469A0((uint64_t)v15, (uint64_t)&v17[*(int *)(v37 + 36)]);
  *(_QWORD *)v17 = v21;
  *((_QWORD *)v17 + 1) = v23;
  v17[16] = v25 & 1;
  *((_QWORD *)v17 + 3) = v27;
  sub_2412C68F4((uint64_t)v15, type metadata accessor for BubbleTipTitleViewModifier);
  if (a5)
  {
    v47 = v36;
    v48 = a5;
    v29 = sub_2414B40F0();
    v31 = v30;
    v33 = v32 & 1;
  }
  else
  {
    v29 = 0;
    v31 = 0;
    v33 = 0;
    v28 = 0;
  }
  return sub_241340250(v42, v41, v40, v39, v38, (uint64_t)v17, v29, v31, v43, v33, v28, v46, v45, v44);
}

void BubbleTip.init<>(accessoryView:accessoryViewVerticalAlignment:title:subtitle:bundle:tableName:actions:closeButtonHandler:)(void (*a1)(double)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(double), uint64_t a19)
{
  uint64_t v19;
  BOOL *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, _QWORD, uint64_t, void (*)(double));
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  id v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  void (*v53)(double);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v41[1] = a7;
  LODWORD(v45) = a5;
  v43 = a3;
  v44 = a4;
  v53 = a1;
  v54 = a2;
  v52 = a8;
  v50 = a19;
  v51 = a17;
  v49 = a16;
  v47 = a6;
  v48 = a15;
  v42 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x24BDAC7A8](v42);
  v20 = (BOOL *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A50);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2414B53B0();
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v41 - v26;
  v53(v25);
  v28 = *(void (**)(char *, _QWORD, uint64_t, void (*)(double)))(*((_QWORD *)a18 - 1) + 56);
  v46 = v27;
  v53 = a18;
  v28(v27, 0, 1, a18);
  v41[0] = a12;
  swift_bridgeObjectRetain();
  v44 = a13;
  v45 = a12;
  v47 = a14;
  v29 = sub_2414B40E4();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  *(_QWORD *)&v20[*(int *)(v42 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  *v20 = a9 != 0;
  sub_2413469A0((uint64_t)v20, (uint64_t)&v23[*(int *)(v21 + 36)]);
  *(_QWORD *)v23 = v29;
  *((_QWORD *)v23 + 1) = v31;
  v23[16] = v33 & 1;
  *((_QWORD *)v23 + 3) = v35;
  sub_2412C68F4((uint64_t)v20, type metadata accessor for BubbleTipTitleViewModifier);
  if (a9)
  {
    v36 = sub_2414B40E4();
    v40 = v39 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    v36 = 0;
    v37 = 0;
    v40 = 0;
    v38 = 0;
  }
  v55 = v36;
  v56 = v37;
  v57 = v40;
  v58 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A58);
  sub_2413469E4();
  sub_241346A68();
  sub_241340420(v52);
}

uint64_t sub_2413411F4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v5 = *((_QWORD *)a1 - 1);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (uint64_t *)(v2 + *(int *)(v8 + 88));
  v10 = *v9;
  if (*v9)
  {
    v11 = v9[1];
    (*(void (**)(char *, double))(v5 + 16))((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    v12 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v13 = swift_allocObject();
    v14 = a1[2];
    *(_OWORD *)(v13 + 16) = a1[1];
    *(_OWORD *)(v13 + 32) = v14;
    *(_OWORD *)(v13 + 48) = a1[3];
    *(_QWORD *)(v13 + 64) = v10;
    *(_QWORD *)(v13 + 72) = v11;
    (*(void (**)(unint64_t, char *, _OWORD *))(v5 + 32))(v13 + v12, (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
    sub_2412D2824(v10);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122E80);
    sub_24134E664();
    sub_2414B47D4();
    sub_2412C9444(v10);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E70);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

void sub_241341394(void (*a1)(double))
{
  uint64_t v2;
  double v3;

  v2 = sub_2414B3238();
  v3 = MEMORY[0x24BDAC7A8](v2);
  a1(v3);
  type metadata accessor for BubbleTip();
}

uint64_t sub_24134142C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2412FA7CC(&qword_257122E78, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, v2);
  sub_2414B322C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2413414A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t result;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v20[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B4708();
  if (qword_257120708 != -1)
    swift_once();
  v10 = qword_257122A28;
  KeyPath = swift_getKeyPath();
  v20[1] = v9;
  v20[2] = KeyPath;
  v20[3] = v10;
  v12 = *MEMORY[0x24BDECEA0];
  v13 = sub_2414B346C();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v4, v12, v13);
  sub_2412C8030(qword_257122270, v14, MEMORY[0x24BDECF78]);
  swift_retain();
  result = sub_2414B4CE4();
  if ((result & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122B40);
    sub_24134888C();
    sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    sub_2414B42B8();
    sub_2412CBE78((uint64_t)v4, &qword_257122240);
    swift_release();
    swift_release();
    swift_release();
    v16 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
    v17 = MEMORY[0x242693F58](v16);
    v18 = swift_getKeyPath();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a1, v8, v5);
    v19 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122E80) + 36));
    *v19 = v18;
    v19[1] = v17;
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241341724(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = sub_2414B3964();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E20);
  sub_241341780();
}

void sub_241341780()
{
  type metadata accessor for BubbleTip();
}

uint64_t sub_2413417B8()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E30);
  sub_2412C8FC4(&qword_257122E38, &qword_257122E28, MEMORY[0x24BEE12D8]);
  sub_2412C8FC4(&qword_257122E40, &qword_257122E30, MEMORY[0x24BDF5428]);
  return sub_2414B493C();
}

uint64_t sub_241341884@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - v8;
  v10 = sub_2414B4930();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - v15;
  v17 = *a1;
  v18 = a1[3];
  sub_2414B4924();
  v23 = v17;
  v24 = *(_OWORD *)(a1 + 1);
  v25 = v18;
  sub_24134E280();
  sub_2414B4420();
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v19(v13, v16, v10);
  sub_2412DC3FC((uint64_t)v9, (uint64_t)v6, &qword_257122E48);
  v19(a2, v13, v10);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E58);
  sub_2412DC3FC((uint64_t)v6, (uint64_t)&a2[*(int *)(v20 + 48)], &qword_257122E48);
  sub_2412CBE78((uint64_t)v9, &qword_257122E48);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v16, v10);
  sub_2412CBE78((uint64_t)v6, &qword_257122E48);
  return ((uint64_t (*)(char *, uint64_t))v21)(v13, v10);
}

uint64_t BubbleTip.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v113[2];
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[2];
  _QWORD v154[2];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  _QWORD v168[2];
  _QWORD v169[2];
  _QWORD v170[2];
  _QWORD v171[3];

  v147 = a2;
  v139 = *(_QWORD *)(a1 + 16);
  v149 = sub_2414B53B0();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = a1;
  v132 = a1;
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  v6 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  sub_2414B4804();
  v7 = *(_QWORD *)(v4 + 32);
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v6, v8);
  sub_2414B4894();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A88);
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v6, v9);
  sub_2414B4894();
  swift_getTupleTypeMetadata2();
  v10 = sub_2414B4B1C();
  v122 = MEMORY[0x242695AE8](v6, v10);
  v123 = v10;
  v11 = sub_2414B4804();
  v125 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v124 = (char *)v113 - v12;
  v152 = v13;
  v14 = sub_2414B3514();
  v127 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v126 = (char *)v113 - v15;
  v16 = type metadata accessor for BubbleBackground(255);
  v151 = v14;
  v17 = sub_2414B3514();
  v129 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v128 = (char *)v113 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844D0);
  v150 = v17;
  v19 = sub_2414B3514();
  v130 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v131 = (char *)v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v137 = (uint64_t)v113 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v135 = (_QWORD *)((char *)v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v138 = (uint64_t)v113 - v26;
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A90);
  swift_getTupleTypeMetadata3();
  v27 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v6, v27);
  sub_2414B4804();
  sub_2414B3514();
  v134 = v7;
  sub_2414B53B0();
  v136 = v3;
  swift_getTupleTypeMetadata2();
  v28 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v6, v28);
  sub_2414B4894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v29 = sub_2414B4B1C();
  v113[1] = MEMORY[0x242695AE8](v6, v29);
  v30 = sub_2414B4894();
  v114 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v113 - v31;
  v149 = v33;
  v34 = sub_2414B3514();
  v116 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v115 = (char *)v113 - v35;
  v148 = v36;
  v140 = v16;
  v37 = sub_2414B3514();
  v118 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v117 = (char *)v113 - v38;
  v141 = v39;
  v40 = sub_2414B3514();
  v119 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v121 = (char *)v113 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v120 = (uint64_t)v113 - v43;
  v44 = sub_2414B394C();
  v45 = MEMORY[0x24BDEEEA0];
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)v113 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = v40;
  v49 = v133;
  v146 = v19;
  v50 = sub_2414B3A90();
  v144 = *(_QWORD *)(v50 - 8);
  v145 = v50;
  MEMORY[0x24BDAC7A8](v50);
  v143 = (char *)v113 - v51;
  v52 = v132;
  sub_2412FA7CC(&qword_257121570, (uint64_t (*)(_QWORD))v45, 0xD000000000000013, 0x80000002414CEE20, (uint64_t)v48);
  LOBYTE(v19) = sub_2414B3940();
  v53 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v48, v44);
  if ((v19 & 1) != 0)
  {
    v54 = MEMORY[0x24BDECC60];
    if (qword_2571206D8 != -1)
      v53 = swift_once();
    MEMORY[0x24BDAC7A8](v53);
    v55 = v136;
    v113[-8] = v139;
    v113[-7] = v55;
    v113[-6] = v134;
    *(_OWORD *)&v113[-5] = *(_OWORD *)(v52 + 40);
    v113[-3] = *(_QWORD *)(v52 + 56);
    v113[-2] = v49;
    sub_2414B3964();
    sub_2414B4888();
    v57 = v148;
    v56 = v149;
    if (qword_2571206E0 != -1)
      swift_once();
    v58 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v56);
    v59 = v115;
    sub_2414B451C();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v32, v56);
    KeyPath = swift_getKeyPath();
    v61 = (uint64_t)v135;
    *v135 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
    swift_storeEnumTagMultiPayload();
    v62 = v140;
    v63 = (uint64_t *)(v61 + *(int *)(v140 + 20));
    *v63 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
    swift_storeEnumTagMultiPayload();
    v64 = v138;
    sub_2412DC3B8(v61, v138, type metadata accessor for BubbleBackground);
    v158[0] = v58;
    v158[1] = v54;
    v65 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v57, v158);
    v66 = v117;
    MEMORY[0x242693DC0](v64, v57, v62, v65);
    sub_2412C68F4(v64, type metadata accessor for BubbleBackground);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v57);
    if (qword_2571206E8 != -1)
      swift_once();
    v67 = sub_2412C8030(&qword_257122AA8, type metadata accessor for BubbleBackground, (uint64_t)&unk_2414BBA24);
    v157[0] = v65;
    v157[1] = v67;
    v68 = MEMORY[0x24BDED308];
    v69 = v141;
    v70 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v141, v157);
    v71 = (uint64_t)v121;
    sub_2414B424C();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v66, v69);
    v72 = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
    v156[0] = v70;
    v156[1] = v72;
    v73 = v142;
    MEMORY[0x242695AE8](v68, v142, v156);
    v74 = v120;
    sub_2412FBF34(v71, v73, v120);
    v75 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
    v75(v71, v73);
    sub_2412EEA1C(v74, v73, v71);
    v155[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v152);
    v155[1] = MEMORY[0x24BDECC60];
    v154[0] = MEMORY[0x242695AE8](v68, v151, v155);
    v154[1] = v67;
    v153[0] = MEMORY[0x242695AE8](v68, v150, v154);
    v153[1] = v72;
    v76 = v146;
    MEMORY[0x242695AE8](v68, v146, v153);
    v77 = v73;
    v78 = MEMORY[0x24BDECC60];
    v79 = (uint64_t)v143;
    sub_24132F340(v71, v77);
    v75(v71, v77);
    v75(v74, v77);
    v81 = v148;
    v80 = v149;
  }
  else
  {
    if (qword_2571206D0 != -1)
      v53 = swift_once();
    MEMORY[0x24BDAC7A8](v53);
    v82 = v136;
    v113[-8] = v139;
    v113[-7] = v82;
    v113[-6] = v134;
    *(_OWORD *)&v113[-5] = *(_OWORD *)(v52 + 40);
    v113[-3] = *(_QWORD *)(v52 + 56);
    v113[-2] = v49;
    sub_2414B3880();
    v83 = v124;
    sub_2414B47F8();
    v85 = v151;
    v84 = v152;
    if (qword_2571206E0 != -1)
      swift_once();
    v86 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v84);
    v87 = v126;
    sub_2414B451C();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v83, v84);
    v88 = swift_getKeyPath();
    v89 = (uint64_t)v135;
    *v135 = v88;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
    swift_storeEnumTagMultiPayload();
    v90 = v140;
    v91 = (uint64_t *)(v89 + *(int *)(v140 + 20));
    *v91 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
    swift_storeEnumTagMultiPayload();
    v92 = v138;
    sub_2412DC3B8(v89, v138, type metadata accessor for BubbleBackground);
    v171[0] = v86;
    v171[1] = MEMORY[0x24BDECC60];
    v93 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v85, v171);
    v94 = v128;
    MEMORY[0x242693DC0](v92, v85, v90, v93);
    sub_2412C68F4(v92, type metadata accessor for BubbleBackground);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v87, v85);
    if (qword_2571206E8 != -1)
      swift_once();
    v95 = sub_2412C8030(&qword_257122AA8, type metadata accessor for BubbleBackground, (uint64_t)&unk_2414BBA24);
    v170[0] = v93;
    v170[1] = v95;
    v96 = MEMORY[0x24BDED308];
    v97 = v150;
    v98 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v150, v170);
    v99 = (uint64_t)v131;
    sub_2414B424C();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v94, v97);
    v100 = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
    v169[0] = v98;
    v169[1] = v100;
    v76 = v146;
    MEMORY[0x242695AE8](v96, v146, v169);
    v101 = v137;
    v102 = v99;
    sub_2412FBF34(v99, v76, v137);
    v140 = *(_QWORD *)(v130 + 8);
    ((void (*)(uint64_t, uint64_t))v140)(v99, v76);
    sub_2412EEA1C(v101, v76, v99);
    v80 = v149;
    v168[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v149);
    v168[1] = MEMORY[0x24BDECC60];
    v81 = v148;
    v167[0] = MEMORY[0x242695AE8](v96, v148, v168);
    v167[1] = v95;
    v69 = v141;
    v166[0] = MEMORY[0x242695AE8](v96, v141, v167);
    v166[1] = v100;
    v77 = v142;
    MEMORY[0x242695AE8](v96, v142, v166);
    v78 = MEMORY[0x24BDECC60];
    v79 = (uint64_t)v143;
    sub_2412F1584(v102, v77, v76);
    v103 = (void (*)(uint64_t, uint64_t))v140;
    ((void (*)(uint64_t, uint64_t))v140)(v102, v76);
    v103(v137, v76);
  }
  v165[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v80);
  v165[1] = v78;
  v104 = MEMORY[0x24BDED308];
  v105 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v81, v165);
  v106 = sub_2412C8030(&qword_257122AA8, type metadata accessor for BubbleBackground, (uint64_t)&unk_2414BBA24);
  v164[0] = v105;
  v164[1] = v106;
  v107 = MEMORY[0x242695AE8](v104, v69, v164);
  v108 = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
  v163[0] = v107;
  v163[1] = v108;
  v109 = MEMORY[0x242695AE8](v104, v77, v163);
  v162[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v152);
  v162[1] = v78;
  v161[0] = MEMORY[0x242695AE8](v104, v151, v162);
  v161[1] = v106;
  v160[0] = MEMORY[0x242695AE8](v104, v150, v161);
  v160[1] = v108;
  v110 = MEMORY[0x242695AE8](v104, v76, v160);
  v159[0] = v109;
  v159[1] = v110;
  v111 = v145;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v145, v159);
  sub_2412EEA1C(v79, v111, v147);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v144 + 8))(v79, v111);
}

void sub_241342A78(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];

  v78 = a7;
  v77 = a6;
  v80 = a5;
  v79 = a1;
  v72 = a8;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A88);
  MEMORY[0x24BDAC7A8](v70);
  v73 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)&v51 - v13;
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v14 = sub_2414B4B1C();
  v15 = MEMORY[0x24BDF5428];
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v14);
  v59 = v14;
  v58 = v16;
  v17 = sub_2414B4894();
  v61 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v60 = (char *)&v51 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v62 = v17;
  v19 = sub_2414B3514();
  v64 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v63 = (char *)&v51 - v20;
  v65 = v21;
  v69 = sub_2414B3514();
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v67 = (uint64_t)&v51 - v24;
  sub_2414B53B0();
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A90);
  swift_getTupleTypeMetadata3();
  v25 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v15, v25);
  v26 = sub_2414B4804();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v51 - v28;
  v30 = sub_2414B3514();
  v74 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v75 = (uint64_t)&v51 - v34;
  v81 = a2;
  v76 = a3;
  v82 = a3;
  v83 = a4;
  v84 = v80;
  v85 = v77;
  v86 = v78;
  v87 = v79;
  sub_2414B3880();
  sub_2414B47F8();
  sub_2414B3E80();
  if (qword_2571206E0 != -1)
    swift_once();
  v35 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v26);
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  v96[0] = v35;
  v96[1] = MEMORY[0x24BDECC60];
  v54 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v30, v96);
  sub_2412FBF34((uint64_t)v32, v30, v75);
  v57 = *(uint64_t (**)(char *, uint64_t))(v74 + 8);
  v36 = v57(v32, v30);
  v55 = v32;
  v56 = v30;
  if (qword_2571206D8 != -1)
    v36 = swift_once();
  MEMORY[0x24BDAC7A8](v36);
  v52 = a2;
  v37 = v76;
  *(&v51 - 8) = a2;
  *(&v51 - 7) = v37;
  v53 = a4;
  v38 = v80;
  *(&v51 - 6) = a4;
  *(&v51 - 5) = v38;
  v39 = v77;
  v40 = v78;
  *(&v51 - 4) = v77;
  *(&v51 - 3) = v40;
  *(&v51 - 2) = v79;
  sub_2414B3964();
  v41 = v60;
  sub_2414B4888();
  v42 = v62;
  v43 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v62);
  v44 = v63;
  sub_2414B4378();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v42);
  v45 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v95[0] = v43;
  v95[1] = v45;
  v46 = MEMORY[0x24BDED308];
  v47 = v65;
  v48 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v65, v95);
  v49 = (uint64_t)v68;
  sub_2414B451C();
  (*(void (**)(char *, _QWORD))(v64 + 8))(v44, v47);
  v94[0] = v48;
  v94[1] = MEMORY[0x24BDECC60];
  v50 = v69;
  MEMORY[0x242695AE8](v46, v69, v94);
  sub_2412FBF34(v49, v50, v67);
  v65 = *(void (**)(_QWORD, _QWORD))(v66 + 8);
  v65(v49, v50);
  v88 = v52;
  v89 = v76;
  v90 = v53;
  v91 = v80;
  v92 = v39;
  v93 = v40;
  type metadata accessor for BubbleTip();
}

void sub_241343308(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v16 = a6;
  v15 = a5;
  v14 = a3;
  v19 = a7;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A90);
  MEMORY[0x24BDAC7A8](v18);
  v17 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  sub_2414B53B0();
  sub_2414B3DB4();
  v12 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v20 = a1;
  v21 = a2;
  v22 = v14;
  v23 = a4;
  v24 = v15;
  v25 = v16;
  type metadata accessor for BubbleTip();
}

uint64_t sub_24134344C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v8 - 144) = v3;
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, v8 - 144);
  sub_2414B439C();
  v11 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v8 - 160) = v10;
  *(_QWORD *)(v8 - 152) = v11;
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v8 - 160);
  sub_2412FBF34(v5, v4, v7);
  v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v5, v4);
  sub_2413411F4(a1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v7, v4);
  *(_QWORD *)(v8 - 176) = 0;
  *(_BYTE *)(v8 - 168) = 1;
  *(_QWORD *)(v8 - 136) = v5;
  *(_QWORD *)(v8 - 128) = v8 - 176;
  v14 = *(_QWORD *)(v8 - 248);
  sub_2412DC3FC(v2, v14, &qword_257122A90);
  *(_QWORD *)(v8 - 120) = v14;
  v15 = MEMORY[0x24BDF4638];
  *(_QWORD *)(v8 - 200) = v4;
  *(_QWORD *)(v8 - 192) = v15;
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v8 - 240);
  v16 = MEMORY[0x24BDF4610];
  *(_QWORD *)(v8 - 224) = v12;
  *(_QWORD *)(v8 - 216) = v16;
  *(_QWORD *)(v8 - 208) = sub_24134E2C4();
  sub_2412F68CC((uint64_t *)(v8 - 136), 3uLL, v8 - 200);
  sub_2412CBE78(v2, &qword_257122A90);
  v13(v7, v4);
  sub_2412CBE78(v14, &qword_257122A90);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v5, v4);
}

void sub_2413435CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_2414B53B0();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for BubbleTip();
}

uint64_t sub_2413436D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);

  sub_2412FBF34(v8 + *(int *)(a1 + 76), v1, v7);
  v11 = v8 + *(int *)(a1 + 80);
  *(_QWORD *)(v9 - 136) = v4;
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v2, v9 - 136);
  sub_2412FBF34(v11, v2, v6);
  v13 = *(_QWORD *)(v9 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v5, v7, v1);
  *(_QWORD *)(v9 - 128) = v5;
  v14 = *(_QWORD *)(v9 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v3, v6, v2);
  *(_QWORD *)(v9 - 120) = v3;
  *(_QWORD *)(v9 - 152) = v1;
  *(_QWORD *)(v9 - 144) = v2;
  *(_QWORD *)(v9 - 168) = *(_QWORD *)(v9 - 216);
  *(_QWORD *)(v9 - 160) = v12;
  sub_2412F68CC((uint64_t *)(v9 - 128), 2uLL, v9 - 152);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v6, v2);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v7, v1);
  v15(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v5, v1);
}

void sub_2413437DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a6;
  v34 = a7;
  v21 = a5;
  v31 = a4;
  v32 = a1;
  v30 = a8;
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
  swift_getTupleTypeMetadata2();
  v10 = sub_2414B4B1C();
  v11 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v10);
  sub_2414B4804();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v12 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v11, v12);
  sub_2414B4894();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A88);
  swift_getTupleTypeMetadata2();
  v23 = sub_2414B4B1C();
  v22 = MEMORY[0x242695AE8](v11, v23);
  v27 = sub_2414B4894();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v25 = (char *)v20 - v15;
  sub_2414B53B0();
  v16 = sub_2414B3514();
  v20[1] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_2414B3514();
  v20[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v20[3] = (char *)v20 - v19;
  v28 = a2;
  v35 = a2;
  v36 = a3;
  v29 = a3;
  v37 = v31;
  v38 = v21;
  v39 = v33;
  v40 = v34;
  type metadata accessor for BubbleTip();
}

uint64_t sub_241343AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t);

  sub_2414B3E5C();
  if (qword_2571206E0 != -1)
    swift_once();
  *(_QWORD *)(v6 - 144) = v5;
  v7 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v2, v6 - 144);
  sub_2414B4528();
  v8 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v6 - 160) = v7;
  *(_QWORD *)(v6 - 152) = v8;
  v9 = MEMORY[0x24BDED308];
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v6 - 160);
  sub_2414B439C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8))(v1, v4);
  v11 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v6 - 176) = v10;
  *(_QWORD *)(v6 - 168) = v11;
  *(_QWORD *)(v6 - 352) = MEMORY[0x242695AE8](v9, v0, v6 - 176);
  v12 = *(_QWORD *)(v6 - 328);
  sub_2412FBF34(v3, v0, v12);
  v13 = *(_QWORD *)(v6 - 336);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  *(_QWORD *)(v6 - 344) = v14;
  v15 = v14(v3, v0);
  MEMORY[0x24BDAC7A8](v15);
  sub_2414B3964();
  v16 = *(_QWORD *)(v6 - 280);
  sub_2414B4888();
  v17 = *(_QWORD *)(v6 - 272);
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v17);
  v19 = *(_QWORD *)(v6 - 288);
  sub_2412FBF34(v16, v17, v19);
  v20 = *(_QWORD *)(v6 - 296);
  v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v21(v16, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v12, v0);
  *(_QWORD *)(v6 - 136) = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v16, v19, v17);
  *(_QWORD *)(v6 - 128) = v16;
  *(_QWORD *)(v6 - 192) = v0;
  *(_QWORD *)(v6 - 184) = v17;
  *(_QWORD *)(v6 - 208) = *(_QWORD *)(v6 - 352);
  *(_QWORD *)(v6 - 200) = v18;
  sub_2412F68CC((uint64_t *)(v6 - 136), 2uLL, v6 - 192);
  v21(v19, v17);
  v22 = *(void (**)(uint64_t, uint64_t))(v6 - 344);
  v22(v12, v0);
  v21(v16, v17);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(v3, v0);
}

void sub_241343DA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];

  v40 = a6;
  v41 = a7;
  v39 = a5;
  v36 = a2;
  v42 = a1;
  v35 = a8;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A88);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v33 = (char *)&v30 - v12;
  sub_2414B3DB4();
  v37 = a3;
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
  swift_getTupleTypeMetadata2();
  v13 = sub_2414B4B1C();
  v14 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v13);
  sub_2414B4804();
  v38 = a4;
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v15 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v14, v15);
  v16 = sub_2414B4894();
  v30 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v30 - v17;
  v19 = sub_2414B3514();
  v31 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v30 - v24;
  if (qword_2571206D8 != -1)
    v23 = swift_once();
  MEMORY[0x24BDAC7A8](v23);
  v26 = v37;
  *(&v30 - 8) = v36;
  *(&v30 - 7) = v26;
  v27 = v39;
  *(&v30 - 6) = v38;
  *(&v30 - 5) = v27;
  v28 = v41;
  *(&v30 - 4) = v40;
  *(&v30 - 3) = v28;
  *(&v30 - 2) = v42;
  sub_2414B3964();
  sub_2414B4888();
  if (qword_2571206E0 != -1)
    swift_once();
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v16);
  sub_2414B451C();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
  v49[0] = v29;
  v49[1] = MEMORY[0x24BDECC60];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v19, v49);
  sub_2412FBF34((uint64_t)v21, v19, (uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
  v43 = v36;
  v44 = v37;
  v45 = v38;
  v46 = v39;
  v47 = v40;
  v48 = v41;
  type metadata accessor for BubbleTip();
}

void sub_241344270(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v37 = a7;
  v36 = a6;
  v34 = a5;
  v51 = a8;
  v45 = sub_2414B53B0();
  v41 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v40 = (char *)v33 - v12;
  sub_2414B3DB4();
  v47 = sub_2414B3514();
  v42 = sub_2414B53B0();
  v48 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v50 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v39 = (char *)v33 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v49 = (char *)v33 - v17;
  v33[0] = a3;
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
  swift_getTupleTypeMetadata2();
  v18 = sub_2414B4B1C();
  v44 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v18);
  v19 = sub_2414B4804();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v46 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v33 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v33 - v26;
  sub_2414B3874();
  v52 = a2;
  v53 = a3;
  v28 = v34;
  v54 = a4;
  v55 = v34;
  v29 = v36;
  v56 = v36;
  v57 = v37;
  v58 = a1;
  v30 = v37;
  sub_2414B47F8();
  v31 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v19);
  v43 = v27;
  v35 = v31;
  sub_2412FBF34((uint64_t)v24, v19, (uint64_t)v27);
  v44 = v20;
  v32 = *(void (**)(_QWORD, _QWORD))(v20 + 8);
  v33[1] = v19;
  v38 = v32;
  v32(v24, v19);
  v59 = a2;
  v60 = v33[0];
  v61 = a4;
  v62 = v28;
  v63 = v29;
  v64 = v30;
  type metadata accessor for BubbleTip();
}

uint64_t sub_241344584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);

  v5 = *(_QWORD *)(v4 - 368);
  v6 = *(_QWORD *)(v4 - 360);
  v7 = *(_QWORD *)(v4 - 328);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v3 + *(int *)(a1 + 80));
  v8 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v1) == 1)
  {
    v1 = v7;
    v8 = v6;
    v9 = *(_QWORD *)(v4 - 376);
    v10 = 1;
  }
  else
  {
    v9 = *(_QWORD *)(v4 - 376);
    sub_2414B4420();
    v10 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v1);
  v11 = *(_QWORD *)(v4 - 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, v10, 1, v11);
  v12 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v4 - 152) = v2;
  *(_QWORD *)(v4 - 144) = v12;
  *(_QWORD *)(v4 - 160) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v4 - 152);
  v13 = *(_QWORD *)(v4 - 352);
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v13, v4 - 160);
  v15 = *(_QWORD *)(v4 - 296);
  sub_2412FBF34(v9, v13, v15);
  v16 = *(_QWORD *)(v4 - 304);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v9, v13);
  v18 = *(_QWORD *)(v4 - 320);
  v19 = *(_QWORD *)(v4 - 344);
  v20 = *(_QWORD *)(v4 - 424);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 336) + 16))(v18, v19, v20);
  *(_QWORD *)(v4 - 136) = v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v22 = *(_QWORD *)(v4 - 288);
  v21(v22, v15, v13);
  *(_QWORD *)(v4 - 128) = v22;
  *(_QWORD *)(v4 - 176) = v20;
  *(_QWORD *)(v4 - 168) = v13;
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v4 - 408);
  *(_QWORD *)(v4 - 184) = v14;
  sub_2412F68CC((uint64_t *)(v4 - 136), 2uLL, v4 - 176);
  v17(v15, v13);
  v23 = *(void (**)(uint64_t, uint64_t))(v4 - 384);
  v23(v19, v20);
  v17(v22, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v23)(v18, v20);
}

void sub_2413447AC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v17 = a4;
  v18 = a6;
  v22 = a7;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A90);
  MEMORY[0x24BDAC7A8](v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A80);
  MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v11);
  v19 = (char *)v16 - v12;
  sub_2414B3DB4();
  v13 = sub_2414B3514();
  v16[2] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v16[1] = (char *)v16 - v15;
  v23 = a1;
  v24 = a2;
  v25 = a3;
  v26 = v17;
  v27 = a5;
  v28 = v18;
  type metadata accessor for BubbleTip();
}

uint64_t sub_24134490C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  sub_2414B4420();
  v9 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v7 - 152) = v4;
  *(_QWORD *)(v7 - 144) = v9;
  v10 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v7 - 152);
  sub_2412FBF34(v6, v3, v1);
  v11 = *(_QWORD *)(v7 - 240);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v6, v3);
  sub_2413411F4(a1, v5);
  sub_24134E2C4();
  sub_2414B4420();
  sub_2412CBE78(v5, &qword_257122A90);
  v13 = *(_QWORD *)(v7 - 216);
  sub_2412EAEA4(v2, v13, &qword_257122A80);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v15 = *(_QWORD *)(v7 - 248);
  v14(v6, v15, v3);
  *(_QWORD *)(v7 - 136) = v6;
  sub_2412DC3FC(v13, v2, &qword_257122A80);
  *(_QWORD *)(v7 - 128) = v2;
  v16 = *(_QWORD *)(v7 - 200);
  *(_QWORD *)(v7 - 168) = v3;
  *(_QWORD *)(v7 - 160) = v16;
  *(_QWORD *)(v7 - 184) = v10;
  *(_QWORD *)(v7 - 176) = sub_24134E790();
  sub_2412F68CC((uint64_t *)(v7 - 136), 2uLL, v7 - 168);
  sub_2412CBE78(v13, &qword_257122A80);
  v12(v15, v3);
  sub_2412CBE78(v2, &qword_257122A80);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v6, v3);
}

uint64_t sub_241344A90(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_2414B51AC();
    v9 = sub_2414B3E08();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_2412E4890(0xD000000000000018, 0x80000002414CEF30, &v15);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v12, -1, -1);
      MEMORY[0x242695BD8](v11, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C821C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_241344C50@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_257121570, (uint64_t (*)(_QWORD))MEMORY[0x24BDEEEA0], 0xD000000000000013, 0x80000002414CEE20, a1);
}

uint64_t sub_241344C7C(uint64_t a1, char a2)
{
  return sub_2412E724C(a1, a2, 0xD00000000000001CLL, 0x80000002414CEEB0, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_241344CA0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_2414B51AC();
    v9 = sub_2414B3E08();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_2412E4890(0xD000000000000015, 0x80000002414CEE90, &v15);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v12, -1, -1);
      MEMORY[0x242695BD8](v11, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C821C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_241344E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_2414B382C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) == 0)
  {
    swift_retain();
    v10 = sub_2414B51AC();
    v11 = sub_2414B3E08();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v13 = 136315138;
      v16 = v13 + 4;
      v18 = sub_2412E4890(0xD000000000000042, 0x80000002414CEE40, &v19);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      v14 = v17;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v14, -1, -1);
      MEMORY[0x242695BD8](v13, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_24132196C(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_241345044@<X0>(uint64_t a1@<X8>)
{
  return sub_241345238((uint64_t *)&unk_254383DD0, &qword_2543840F0, 0xD000000000000020, 0x80000002414CEDD0, a1);
}

uint64_t sub_241345070(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v8 = sub_2414B51AC();
    v9 = sub_2414B3E08();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_2412E4890(0xD000000000000015, 0x80000002414CECE0, &v15);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v12, -1, -1);
      MEMORY[0x242695BD8](v11, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412E6BF8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_241345238@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_2414B382C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_2412EAEA4((uint64_t)v17, a5, a2);
  v19 = sub_2414B51AC();
  v20 = sub_2414B3E08();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_2412E4890(v27, v25, &v29);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v23, -1, -1);
    MEMORY[0x242695BD8](v22, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_241345460@<X0>(uint64_t a1@<X8>)
{
  return sub_241345238(&qword_257121D30, &qword_2543844C0, 0x6C616E6F6974704FLL, 0xED00003E4C52553CLL, a1);
}

uint64_t sub_241345494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_2412C72E4(a1, a2, 1);
  }
  else
  {
    sub_2412C72E4(a1, a2, 0);
    v12 = sub_2414B51AC();
    v13 = sub_2414B3E08();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v15 = 136315138;
      v18 = v15 + 4;
      v20 = sub_2412E4890(0xD000000000000012, 0x80000002414CEDB0, &v21);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v16, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C822C(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_241345680(uint64_t a1, char a2)
{
  return sub_2412E724C(a1, a2, 0xD000000000000027, 0x80000002414CEF70, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_2413456A4@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412EF34C(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C6F44, 0xD000000000000014, 0x80000002414CEFC0, (void (*)(_QWORD, _QWORD))sub_2412C8228, a3);
}

uint64_t sub_2413456D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412F63DC(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C6F44, 0xD000000000000019, 0x80000002414CEFA0, (void (*)(_QWORD, _QWORD))sub_2412C8228, a3);
}

double sub_2413456FC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_2414B51AC();
  v9 = sub_2414B3E08();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_2412E4890(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v12, -1, -1);
    MEMORY[0x242695BD8](v11, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  sub_2412C821C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2413458BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_2414B382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122E00);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412DC3FC(v2, (uint64_t)v10, &qword_257122E00);
  if (swift_getEnumCaseMultiPayload() == 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  v12 = sub_2414B51AC();
  v13 = sub_2414B3E08();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_2412E4890(0xD000000000000011, 0x80000002414CEC50, &v19);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v17, -1, -1);
    MEMORY[0x242695BD8](v15, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_241345AEC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;

  v5 = sub_2414B382C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    v9 = sub_2414B51AC();
    v10 = sub_2414B3E08();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15[0] = v12 + 4;
      v15[1] = sub_2412E4890(0xD000000000000031, 0x80000002414CEC70, &v16);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v13, -1, -1);
      MEMORY[0x242695BD8](v12, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412EEDAC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v16;
  }
  return a1;
}

uint64_t sub_241345CC8(uint64_t a1, char a2)
{
  return sub_2412E724C(a1, a2, 0xD000000000000017, 0x80000002414CEE00, (void (*)(_QWORD, _QWORD))sub_2412E6C04);
}

uint64_t sub_241345CEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2412FA7CC(&qword_257122EC8, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

double sub_241345D20()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v11[2];
  double v12;

  v1 = sub_2414B382C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1)
    return *(double *)v0;
  swift_retain();
  v6 = sub_2414B51AC();
  v7 = sub_2414B3E08();
  v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = *(double *)&v10;
    *(_DWORD *)v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_2412E4890(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v10, -1, -1);
    MEMORY[0x242695BD8](v9, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  sub_2412C8378((uint64_t)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24134E088);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_241345EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 80) == 1)
  {
    v8 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
    *(_QWORD *)(a1 + 40) = v8;
    v9 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    return sub_24134E178(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  }
  else
  {
    sub_24134E178(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
    v11 = sub_2414B51AC();
    v12 = sub_2414B3E08();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17[1] = v7;
      v16 = v15;
      v18 = v15;
      *(_DWORD *)v14 = 136315138;
      v17[0] = v14 + 4;
      v17[2] = sub_2412E4890(0x7363657053, 0xE500000000000000, &v18);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v16, -1, -1);
      MEMORY[0x242695BD8](v14, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_24134E178(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_241346104@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412EF34C(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C6F44, 0x74756F79614CLL, 0xE600000000000000, (void (*)(_QWORD, _QWORD))sub_2412C8228, a3);
}

void sub_241346128(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = sub_2414B382C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
  }
  else
  {
    sub_241321D28(a1, a2, a3, 0);
    v14 = sub_2414B51AC();
    v15 = sub_2414B3E08();
    if (os_log_type_enabled(v15, v14))
    {
      v16 = swift_slowAlloc();
      v24 = a3;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v23 = a2;
      v19 = v18;
      v26 = v18;
      *(_DWORD *)v17 = 136315138;
      v22[1] = v17 + 4;
      v25 = sub_2412E4890(0x676E6964646150, 0xE700000000000000, &v26);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      v20 = v19;
      a2 = v23;
      MEMORY[0x242695BD8](v20, -1, -1);
      v21 = v17;
      a3 = v24;
      MEMORY[0x242695BD8](v21, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_24132196C(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_24134631C(uint64_t a1, char a2)
{
  return sub_2412F0B80(a1, a2, 0x78616C6C61726150, 0xEF747865746E6F43);
}

uint64_t sub_241346340(uint64_t a1, char a2)
{
  return sub_2412F0B80(a1, a2, 0x7363697274654DLL, 0xE700000000000000);
}

uint64_t sub_241346358@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_2412EF34C(a1, a2, (void (*)(uint64_t, _QWORD))sub_2412C6F44, 0xD000000000000013, 0x80000002414CF030, (void (*)(_QWORD, _QWORD))sub_2412C8228, a3);
}

uint64_t sub_241346384(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v12 = sub_2414B51AC();
    v13 = sub_2414B3E08();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v21 = a4;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = a3;
      v18 = v16;
      v23 = v16;
      *(_DWORD *)v15 = 136315138;
      v22 = sub_2412E4890(v17, v21, &v23);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v18, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412E6BF8(a1, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_24134654C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    v8 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_QWORD *)(a1 + 24) = v8;
    return sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24134E0A0);
  }
  else
  {
    sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24134E0A0);
    v10 = sub_2414B51AC();
    v11 = sub_2414B3E08();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16[1] = v7;
      v15 = v14;
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[0] = v13 + 4;
      v16[2] = sub_2412E4890(0xD000000000000014, 0x80000002414CED00, &v17);
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v15, -1, -1);
      MEMORY[0x242695BD8](v13, -1, -1);
    }

    sub_2414B3820();
    swift_getAtKeyPath();
    sub_2412C8378(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24134E0E4);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_24134674C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  double v19;

  v6 = sub_2414B382C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v10 = sub_2414B51AC();
  v11 = sub_2414B3E08();
  v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18[0] = a2;
    v15 = v14;
    v19 = *(double *)&v14;
    *(_DWORD *)v13 = 136315138;
    v18[1] = sub_2412E4890(0x6D726F6665766157, 0xEC000000657A6953, (uint64_t *)&v19);
    sub_2414B541C();
    _os_log_impl(&dword_2412C1000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    v16 = v15;
    a2 = v18[0];
    MEMORY[0x242695BD8](v16, -1, -1);
    MEMORY[0x242695BD8](v13, -1, -1);
  }

  sub_2414B3820();
  swift_getAtKeyPath();
  sub_24134E094(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

uint64_t sub_241346928()
{
  return sub_2414B36C4();
}

uint64_t sub_241346948()
{
  return sub_2414B36C4();
}

uint64_t sub_241346968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEDF98]);
}

uint64_t sub_24134697C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEDF98]);
}

uint64_t sub_2413469A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BubbleTipTitleViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2413469E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257122A60;
  if (!qword_257122A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A50);
    v2 = sub_2412C8030(&qword_257122A68, type metadata accessor for BubbleTipTitleViewModifier, (uint64_t)&protocol conformance descriptor for BubbleTipTitleViewModifier);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257122A60);
  }
  return result;
}

unint64_t sub_241346A68()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257122A70;
  if (!qword_257122A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A58);
    v2 = sub_241346AD4();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257122A70);
  }
  return result;
}

unint64_t sub_241346AD4()
{
  unint64_t result;

  result = qword_257122A78;
  if (!qword_257122A78)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BubbleTipSubtitleViewModifier, &type metadata for BubbleTipSubtitleViewModifier);
    atomic_store(result, (unint64_t *)&qword_257122A78);
  }
  return result;
}

uint64_t type metadata accessor for BubbleBackground(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257122DB0);
}

uint64_t sub_241346B2C()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413437DC);
}

uint64_t sub_241346B38()
{
  return sub_2414B3718();
}

uint64_t sub_241346B60()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241342A78);
}

uint64_t sub_241346B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  char *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B4A08();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B3580();
  v8 = MEMORY[0x24BDED8A8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - v13;
  sub_2412FA7CC(&qword_257122A98, (uint64_t (*)(_QWORD))v8, 0xD000000000000010, 0x80000002414CEBA0, (uint64_t)&v24 - v13);
  sub_2414B3574();
  sub_2412C8030(&qword_257122DF8, (uint64_t (*)(uint64_t))v8, MEMORY[0x24BDED8B8]);
  v15 = sub_2414B4CE4();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v7);
  v16(v14, v7);
  if ((v15 & 1) != 0)
    goto LABEL_4;
  type metadata accessor for BubbleBackground(0);
  sub_241345238(&qword_257122AA0, &qword_257121330, 0xD000000000000012, 0x80000002414CEB80, (uint64_t)v4);
  v17 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v4, 1, v5) == 1)
  {
    sub_2412CBE78((uint64_t)v4, &qword_257121330);
LABEL_4:
    result = sub_2414B4648();
    v19 = MEMORY[0x24BDF3E18];
    a1[3] = MEMORY[0x24BDF3E48];
    a1[4] = v19;
    *a1 = result;
    return result;
  }
  v20 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v21 = v24;
  v20(v24, v4, v5);
  v22 = MEMORY[0x24BDF4E40];
  a1[3] = v5;
  a1[4] = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v20)(boxed_opaque_existential_1, v21, v5);
}

uint64_t sub_241346DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14[4];

  sub_241346B70(v14);
  v4 = __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, double))(v7 + 16))((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v8 = sub_2414B31C0();
  v9 = sub_2414B3E44();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257122DF0) + 36);
  *(_QWORD *)v11 = v8;
  *(_BYTE *)(v11 + 8) = v9;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t BubbleImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  __int128 v28;

  v23 = a1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AB0);
  MEMORY[0x24BDAC7A8](v22);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AB8);
  MEMORY[0x24BDAC7A8](v21);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4714();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AC0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2414B4720();
    LOBYTE(v24) = 1;
    BubbleTipAccessoryModifier.body(content:)((uint64_t)v12);
    swift_release();
    sub_2412DC3FC((uint64_t)v12, (uint64_t)v3, &qword_257122AC0);
    swift_storeEnumTagMultiPayload();
    sub_241348624();
    sub_2414B3A84();
  }
  else
  {
    v20 = v10;
    v13 = *(id *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_2414B4744();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF3FD0], v6);
    v14 = sub_2414B4738();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (qword_2571206F8 != -1)
      swift_once();
    sub_2414B4A44();
    sub_2414B31B4();
    v15 = v24;
    v16 = v25;
    v17 = v26;
    v18 = v27;
    *(_QWORD *)v5 = v14;
    *((_QWORD *)v5 + 1) = 0;
    *((_WORD *)v5 + 8) = 1;
    *((_QWORD *)v5 + 3) = v15;
    v5[32] = v16;
    *((_QWORD *)v5 + 5) = v17;
    v5[48] = v18;
    *(_OWORD *)(v5 + 56) = v28;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AF0);
    sub_2413486B0();
    sub_2412DC484(&qword_257122AE8, &qword_257122AF0, sub_24134873C, MEMORY[0x24BDEBEE0]);
    sub_2414B3A84();
    swift_release();
    sub_2412DC3FC((uint64_t)v12, (uint64_t)v3, &qword_257122AC0);
    swift_storeEnumTagMultiPayload();
    sub_241348624();
    sub_2414B3A84();

  }
  return sub_2412CBE78((uint64_t)v12, &qword_257122AC0);
}

uint64_t Image.bubbleTipAccessory(preset:)@<X0>(uint64_t a1@<X8>)
{
  return BubbleTipAccessoryModifier.body(content:)(a1);
}

uint64_t BubbleAction.init(title:handler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t BubbleAction.body.getter()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122B48);
  sub_24134891C();
  return sub_2414B47D4();
}

uint64_t sub_24134732C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t result;
  _OWORD v20[9];

  *(_QWORD *)&v20[0] = a1;
  *((_QWORD *)&v20[0] + 1) = a2;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v4 = sub_2414B40F0();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  if (qword_257120710 != -1)
    swift_once();
  v11 = v8 & 1;
  v12 = *(double *)&qword_257122A30;
  v13 = sub_2414B4A50();
  sub_24133F5DC(0.0, 1, 0.0, 1, INFINITY, 0, v12, 0, (uint64_t)v20, 0.0, 1, 0.0, 1, v13, v14, v4, v6, v11, v10);
  sub_2412F6D78(v4, v6, v11);
  swift_bridgeObjectRelease();
  v15 = v20[7];
  *(_OWORD *)(a3 + 96) = v20[6];
  *(_OWORD *)(a3 + 112) = v15;
  *(_OWORD *)(a3 + 128) = v20[8];
  v16 = v20[3];
  *(_OWORD *)(a3 + 32) = v20[2];
  *(_OWORD *)(a3 + 48) = v16;
  v17 = v20[5];
  *(_OWORD *)(a3 + 64) = v20[4];
  *(_OWORD *)(a3 + 80) = v17;
  v18 = v20[1];
  *(_OWORD *)a3 = v20[0];
  *(_OWORD *)(a3 + 16) = v18;
  result = swift_getKeyPath();
  *(_QWORD *)(a3 + 144) = result;
  *(_QWORD *)(a3 + 152) = 0x3FE4CCCCCCCCCCCDLL;
  return result;
}

uint64_t sub_241347484()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122B48);
  sub_24134891C();
  return sub_2414B47D4();
}

uint64_t BubbleTipTitleViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a1;
  v46 = a2;
  v3 = sub_2414B394C();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B68);
  MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B70);
  MEMORY[0x24BDAC7A8](v41);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B78);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B80);
  MEMORY[0x24BDAC7A8](v12);
  v45 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2414B3F58();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2 == 1)
  {
    if (qword_257120708 != -1)
      swift_once();
    v22 = qword_257122A28;
    swift_retain();
    v23 = 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x24BDF1860], v17, v19);
    v24 = sub_2414B3ED4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
    v22 = sub_2414B3F10();
    sub_2412CBE78((uint64_t)v16, &qword_254381398);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    if ((*v2 & 1) != 0)
      v23 = 0;
    else
      v23 = sub_2414B46C0();
  }
  KeyPath = swift_getKeyPath();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B88);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v7, v40, v26);
  v27 = (uint64_t *)&v7[*(int *)(v39 + 36)];
  *v27 = KeyPath;
  v27[1] = v22;
  type metadata accessor for BubbleTipTitleViewModifier(0);
  swift_retain();
  sub_2412FA7CC(&qword_257121570, (uint64_t (*)(_QWORD))MEMORY[0x24BDEEEA0], 0xD000000000000013, 0x80000002414CEE20, (uint64_t)v5);
  v28 = sub_2414B3940();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
  v29 = v28 & 1;
  if ((v28 & 1) != 0)
    v30 = 0;
  else
    v30 = 2;
  v31 = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v7, (uint64_t)v9, &qword_257122B68);
  v32 = &v9[*(int *)(v41 + 36)];
  *(_QWORD *)v32 = v31;
  *((_QWORD *)v32 + 1) = v30;
  v32[16] = v29;
  sub_2412CBE78((uint64_t)v7, &qword_257122B68);
  v33 = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v9, (uint64_t)v11, &qword_257122B70);
  v34 = (uint64_t *)&v11[*(int *)(v42 + 36)];
  *v34 = v33;
  v34[1] = v23;
  swift_retain();
  sub_2412CBE78((uint64_t)v9, &qword_257122B70);
  v35 = sub_2414B4A50();
  v36 = v45;
  sub_24133F7BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v45, 0.0, 1, 0.0, 1, v35, v37, &qword_257122B78, &qword_257122B80);
  swift_release();
  swift_release();
  sub_2412CBE78((uint64_t)v11, &qword_257122B78);
  return sub_2412EAEA4(v36, v46, &qword_257122B80);
}

uint64_t BubbleTipSubtitleViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B3F58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B90);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B98);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v6 + 104))(v8, *MEMORY[0x24BDF1860], v5, v13);
  v16 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  v17 = sub_2414B3F10();
  sub_2412CBE78((uint64_t)v4, &qword_254381398);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  KeyPath = swift_getKeyPath();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122BA0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v11, v27, v19);
  v20 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *v20 = KeyPath;
  v20[1] = v17;
  v21 = sub_2414B46C0();
  v22 = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v15, &qword_257122B90);
  v23 = (uint64_t *)&v15[*(int *)(v12 + 36)];
  *v23 = v22;
  v23[1] = v21;
  sub_2412CBE78((uint64_t)v11, &qword_257122B90);
  v24 = sub_2414B4A50();
  sub_24133F7BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v28, 0.0, 1, 0.0, 1, v24, v25, &qword_257122B98, &qword_257122D28);
  return sub_2412CBE78((uint64_t)v15, &qword_257122B98);
}

uint64_t sub_241347C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BubbleTipSubtitleViewModifier.body(content:)(a1, a2);
}

uint64_t View.bubbleTipTitle(hasSubtitle:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;

  v6 = type metadata accessor for BubbleTipTitleViewModifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8[*(int *)(v6 + 20)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  swift_storeEnumTagMultiPayload();
  *v8 = a1;
  MEMORY[0x242693DC0](v8, a2, v6, a3);
  return sub_2412C68F4((uint64_t)v8, type metadata accessor for BubbleTipTitleViewModifier);
}

void View.bubbleTipSubtitle()()
{
  JUMPOUT(0x242693DC0);
}

BOOL static BubbleTipAccessoryModifier.Preset.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BubbleTipAccessoryModifier.Preset.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t BubbleTipAccessoryModifier.Preset.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t BubbleTipAccessoryModifier.body(content:)@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v81 = a1;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382898);
  MEMORY[0x24BDAC7A8](v70);
  v75 = (uint64_t *)((char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_2414B472C();
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v65 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_2414B3F58();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B30);
  MEMORY[0x24BDAC7A8](v66);
  v11 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B20);
  MEMORY[0x24BDAC7A8](v68);
  v71 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B10);
  MEMORY[0x24BDAC7A8](v67);
  v69 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122B00);
  MEMORY[0x24BDAC7A8](v72);
  v77 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AF0);
  MEMORY[0x24BDAC7A8](v80);
  v76 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v78 = (uint64_t)&v63 - v17;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AB8);
  MEMORY[0x24BDAC7A8](v79);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2414B4714();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v1;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v21 + 104))(v24, *MEMORY[0x24BDF3FD0], v20, v22);
  v26 = sub_2414B4738();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  if ((v25 & 1) != 0)
  {
    v27 = v63;
    v28 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v9, *MEMORY[0x24BDF18A8], v64);
    v29 = sub_2414B3ED4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
    sub_2414B3EF8();
    v30 = sub_2414B3F10();
    sub_2412CBE78((uint64_t)v7, &qword_254381398);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
    KeyPath = swift_getKeyPath();
    v32 = v73;
    v33 = v74;
    v34 = v65;
    (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v65, *MEMORY[0x24BDF40B8], v74);
    v35 = swift_getKeyPath();
    v36 = v75;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v75 + *(int *)(v70 + 28), v34, v33);
    *v36 = v35;
    sub_2412DC3FC((uint64_t)v36, (uint64_t)v11 + *(int *)(v66 + 36), &qword_254382898);
    *v11 = v26;
    v11[1] = KeyPath;
    v11[2] = v30;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2412CBE78((uint64_t)v36, &qword_254382898);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
    swift_release();
    swift_release();
    swift_release();
    v37 = sub_2414B46C0();
    v38 = swift_getKeyPath();
    v39 = v71;
    sub_2412DC3FC((uint64_t)v11, v71, &qword_257122B30);
    v40 = (uint64_t *)(v39 + *(int *)(v68 + 36));
    *v40 = v38;
    v40[1] = v37;
    sub_2412CBE78((uint64_t)v11, &qword_257122B30);
    v41 = v69;
    sub_2412DC3FC(v39, v69, &qword_257122B20);
    v42 = v41 + *(int *)(v67 + 36);
    *(_QWORD *)v42 = 0;
    *(_WORD *)(v42 + 8) = 1;
    sub_2412CBE78(v39, &qword_257122B20);
    v43 = sub_2414B3E38();
    if (qword_2571206F0 != -1)
      swift_once();
    sub_2414B2F20();
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v52 = v77;
    sub_2412DC3FC(v41, v77, &qword_257122B10);
    v53 = v52 + *(int *)(v72 + 36);
    *(_BYTE *)v53 = v43;
    *(_QWORD *)(v53 + 8) = v45;
    *(_QWORD *)(v53 + 16) = v47;
    *(_QWORD *)(v53 + 24) = v49;
    *(_QWORD *)(v53 + 32) = v51;
    *(_BYTE *)(v53 + 40) = 0;
    sub_2412CBE78(v41, &qword_257122B10);
    if (qword_257120700 != -1)
      swift_once();
    sub_2414B4A44();
    sub_2414B31B4();
    v54 = v76;
    sub_2412DC3FC(v52, v76, &qword_257122B00);
    v55 = (_OWORD *)(v54 + *(int *)(v80 + 36));
    v56 = v83;
    *v55 = v82;
    v55[1] = v56;
    v55[2] = v84;
    sub_2412CBE78(v52, &qword_257122B00);
    v57 = v78;
    sub_2412EAEA4(v54, v78, &qword_257122AF0);
    sub_2412DC3FC(v57, (uint64_t)v19, &qword_257122AF0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AD8);
    sub_2413486B0();
    sub_2412DC484(&qword_257122AE8, &qword_257122AF0, sub_24134873C, MEMORY[0x24BDEBEE0]);
    sub_2414B3A84();
    return sub_2412CBE78(v57, &qword_257122AF0);
  }
  else
  {
    if (qword_2571206F8 != -1)
      swift_once();
    sub_2414B4A44();
    sub_2414B31B4();
    v59 = v82;
    v60 = BYTE8(v82);
    v61 = v83;
    v62 = BYTE8(v83);
    *(_QWORD *)v19 = v26;
    *((_QWORD *)v19 + 1) = 0;
    *((_WORD *)v19 + 8) = 1;
    *((_QWORD *)v19 + 3) = v59;
    v19[32] = v60;
    *((_QWORD *)v19 + 5) = v61;
    v19[48] = v62;
    *(_OWORD *)(v19 + 56) = v84;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AD8);
    sub_2413486B0();
    sub_2412DC484(&qword_257122AE8, &qword_257122AF0, sub_24134873C, MEMORY[0x24BDEBEE0]);
    return sub_2414B3A84();
  }
}

unint64_t sub_241348624()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122AC8;
  if (!qword_257122AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122AC0);
    v2[0] = sub_2413486B0();
    v2[1] = sub_2412DC484(&qword_257122AE8, &qword_257122AF0, sub_24134873C, MEMORY[0x24BDEBEE0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122AC8);
  }
  return result;
}

unint64_t sub_2413486B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122AD0;
  if (!qword_257122AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122AD8);
    v2[0] = sub_2412FDEC4(&qword_257122AE0, (uint64_t *)&unk_257124AD0, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122AD0);
  }
  return result;
}

uint64_t sub_24134873C()
{
  return sub_2412DC484(&qword_257122AF8, &qword_257122B00, sub_241348760, MEMORY[0x24BDECC60]);
}

uint64_t sub_241348760()
{
  return sub_2412DC484(&qword_257122B08, &qword_257122B10, (uint64_t (*)(void))sub_241348784, MEMORY[0x24BDEEC40]);
}

unint64_t sub_241348784()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122B18;
  if (!qword_257122B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B20);
    v2[0] = sub_241348808();
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122B18);
  }
  return result;
}

unint64_t sub_241348808()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122B28;
  if (!qword_257122B28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B30);
    v2[0] = sub_24134888C();
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_254382890, &qword_254382898, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122B28);
  }
  return result;
}

unint64_t sub_24134888C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257122B38;
  if (!qword_257122B38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B40);
    v2 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257122B38);
  }
  return result;
}

uint64_t sub_241348910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24134732C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_24134891C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122B50;
  if (!qword_257122B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B48);
    v2[0] = sub_2412FDEC4(&qword_257122B58, &qword_257122B60, MEMORY[0x24BDF1F80], MEMORY[0x24BDEDBB8]);
    v2[1] = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122B50);
  }
  return result;
}

uint64_t sub_2413489C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  __swift_allocate_value_buffer(v0, qword_257122A38);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257122A38);
  sub_2414B49E4();
  v2 = sub_2414B4A08();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_241348A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257120718 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_257122A38);
  return sub_2412DC3FC(v3, a1, &qword_257121330);
}

uint64_t sub_241348A9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2414B37F0();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_241348ACC()
{
  return sub_2414B37FC();
}

uint64_t sub_241348AF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37B4();
  *a1 = result;
  return result;
}

uint64_t sub_241348B20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37B4();
  *a1 = result;
  return result;
}

uint64_t sub_241348B48()
{
  swift_retain();
  return sub_2414B37C0();
}

uint64_t sub_241348B70()
{
  swift_retain();
  return sub_2414B37C0();
}

uint64_t sub_241348B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2414B37F0();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_241348BC8()
{
  return sub_2414B37FC();
}

uint64_t sub_241348BF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B36DC();
  *a1 = result;
  return result;
}

uint64_t sub_241348C1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B36DC();
  *a1 = result;
  return result;
}

uint64_t sub_241348C44()
{
  swift_retain();
  return sub_2414B36E8();
}

uint64_t sub_241348C6C()
{
  swift_retain();
  return sub_2414B36E8();
}

uint64_t sub_241348C94()
{
  return sub_2414B3664();
}

uint64_t sub_241348CB4()
{
  return sub_2414B3664();
}

uint64_t sub_241348CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_241348CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_241348D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241348CE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_241348D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241348DC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241348DD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241348DE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241348DF4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241348E08()
{
  unint64_t result;

  result = qword_257122BA8[0];
  if (!qword_257122BA8[0])
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BubbleTipAccessoryModifier.Preset, &type metadata for BubbleTipAccessoryModifier.Preset);
    atomic_store(result, qword_257122BA8);
  }
  return result;
}

uint64_t sub_241348E4C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_241348E54()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_2412C8EDC(319, &qword_257122C30, (void (*)(uint64_t))MEMORY[0x24BDEC038]);
  if (v0 <= 0x3F)
  {
    sub_2414B53B0();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_2414B53B0();
        if (v3 <= 0x3F)
        {
          sub_24134C3A8();
          if (v4 <= 0x3F)
          {
            sub_2412C8EDC(319, qword_257121600, (void (*)(uint64_t))MEMORY[0x24BDEEEA0]);
            if (v5 <= 0x3F)
            {
              sub_2412C8EDC(319, &qword_257122C40, (void (*)(uint64_t))MEMORY[0x24BDED8A8]);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *sub_241348FC4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  const void *v48;
  size_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _QWORD *v74;
  _QWORD *v75;
  unsigned int v76;
  uint64_t v77;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  size_t __n;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v110;

  v80 = sub_2414B3238();
  v107 = *(_QWORD *)(v80 - 8);
  v4 = 8;
  if (*(_QWORD *)(v107 + 64) > 8uLL)
    v4 = *(_QWORD *)(v107 + 64);
  v89 = a3[2];
  v5 = *(_QWORD *)(v89 - 8);
  v7 = *(_DWORD *)(v5 + 80);
  v6 = *(_DWORD *)(v5 + 84);
  v108 = v7;
  v8 = v7;
  v84 = v4;
  v85 = v4 + v7 + 1;
  v86 = v5;
  v9 = *(_QWORD *)(v5 + 64);
  if (v6)
    v10 = v9;
  else
    v10 = v9 + 1;
  __n = v10;
  v92 = a3[3];
  v11 = *(_QWORD *)(v92 - 8);
  v105 = *(_DWORD *)(v11 + 80);
  v12 = v105;
  v90 = v11;
  v94 = a3[4];
  v13 = *(_QWORD *)(v94 - 8);
  v104 = *(_DWORD *)(v13 + 80);
  v91 = *(_QWORD *)(v11 + 64);
  v14 = (v91
       + v104
       + ((v105
         + ((v10 + (v85 & ~(unint64_t)v7) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8) & ~(unint64_t)v105)) & ~(unint64_t)v104;
  v93 = v13;
  if (*(_DWORD *)(v13 + 84))
    v15 = *(_QWORD *)(v13 + 64);
  else
    v15 = *(_QWORD *)(v13 + 64) + 1;
  v83 = v15;
  v95 = v15 + 7;
  v16 = (((v15 + 7 + v14) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = sub_2414B4A08();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v96 = (v19 & 0xF8) + 23;
  v97 = ~(unint64_t)(v19 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v96 + v16) & v97;
  v98 = v18;
  v99 = v17;
  if (*(_DWORD *)(v18 + 84))
    v21 = *(_QWORD *)(v18 + 64);
  else
    v21 = *(_QWORD *)(v18 + 64) + 1;
  v79 = v21;
  if (v21 <= 8)
    v21 = 8;
  v100 = v21;
  v22 = v21 + 1;
  v82 = sub_2414B394C();
  v23 = *(_QWORD *)(v82 - 8);
  v24 = *(_DWORD *)(v23 + 80);
  v101 = v22;
  v110 = v24 & 0xF8 | 7;
  v25 = (v22 + v110 + v20) & ~v110;
  v81 = v23;
  v26 = *(_QWORD *)(v23 + 64);
  if (v26 <= 8)
    v26 = 8;
  v102 = v26;
  v27 = v26 + 1;
  v28 = sub_2414B3580();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 80);
  v103 = v27;
  v88 = v30 & 0xF8 | 7;
  v31 = (v27 + v88 + v25) & ~v88;
  if (*(_QWORD *)(v29 + 64) <= 8uLL)
    v32 = 8;
  else
    v32 = *(_QWORD *)(v29 + 64);
  v33 = v8 | *(_DWORD *)(v107 + 80) & 0xF8 | v19 & 0xF8 | v105 | v104 | v24 & 0xF8 | *(_DWORD *)(v29 + 80) & 0xF8;
  v34 = (v105 | v108 | v104 | v19 | v24 | v30 | *(_DWORD *)(v107 + 80)) & 0x100000;
  if ((unint64_t)(v32 + v31 + 1) > 0x18 || v34 != 0 || v33 > 7)
  {
    v37 = *a2;
    *a1 = *a2;
    v38 = (_QWORD *)(v37 + (((v33 | 7) + 16) & ~(unint64_t)(v33 | 7)));
LABEL_72:
    swift_retain();
    return v38;
  }
  v39 = v105;
  v40 = *((unsigned __int8 *)a2 + v84);
  if (v40 >= 2)
  {
    if (v84 <= 3)
      v41 = v84;
    else
      v41 = 4;
    __asm { BR              X12 }
  }
  v106 = *(_QWORD *)(v28 - 8);
  v42 = ~v8;
  if (v40 == 1)
  {
    v43 = a2;
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v107 + 16))(a1, a2, v80);
    v44 = 1;
  }
  else
  {
    *a1 = *a2;
    v43 = a2;
    swift_retain();
    v44 = 0;
  }
  v45 = ~v12;
  *((_BYTE *)a1 + v84) = v44;
  v46 = ~(unint64_t)v104;
  v47 = (void *)(((unint64_t)a1 + v85) & v42);
  v48 = (const void *)(((unint64_t)v43 + v85) & v42);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v48, 1, v89))
  {
    v49 = __n;
    memcpy(v47, v48, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v47, v48, v89);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v47, 0, 1, v89);
    v49 = __n;
  }
  v50 = (_QWORD *)(((unint64_t)v47 + v49 + 7) & 0xFFFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v48 + v49 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = ((unint64_t)v50 + v39 + 8) & v45;
  v53 = ((unint64_t)v51 + v39 + 8) & v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v52, v53, v92);
  v54 = (void *)((v52 + v91 + v104) & v46);
  v55 = (const void *)((v53 + v91 + v104) & v46);
  v56 = v32;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48))(v55, 1, v94))
  {
    memcpy(v54, v55, v83);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v93 + 16))(v54, v55, v94);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v54, 0, 1, v94);
  }
  v57 = (_QWORD *)(((unint64_t)v55 + v95) & 0xFFFFFFFFFFFFFFF8);
  v58 = (_QWORD *)(((unint64_t)v54 + v95) & 0xFFFFFFFFFFFFF8);
  *v58 = *v57;
  v59 = ((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8;
  v60 = (unint64_t *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  v61 = *v60;
  swift_bridgeObjectRetain();
  if (v61 < 0xFFFFFFFF)
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  else
  {
    v62 = v60[1];
    *(_QWORD *)v59 = v61;
    *(_QWORD *)(v59 + 8) = v62;
    swift_retain();
  }
  v63 = (_QWORD *)((v96 + v59) & v97);
  v64 = (_QWORD *)(((unint64_t)v60 + v96) & v97);
  v65 = *((unsigned __int8 *)v64 + v100);
  if (v65 >= 2)
  {
    if (v100 <= 3)
      v66 = v100;
    else
      v66 = 4;
    __asm { BR              X12 }
  }
  v67 = ~v110;
  if (v65 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v98 + 48))(v64, 1, v99))
    {
      memcpy(v63, v64, v79);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v98 + 16))(v63, v64, v99);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v63, 0, 1, v99);
    }
    *((_BYTE *)v63 + v100) = 1;
  }
  else
  {
    *v63 = *v64;
    *((_BYTE *)v63 + v100) = 0;
    swift_retain();
  }
  v68 = (_QWORD *)(((unint64_t)v63 + v101 + v110) & v67);
  v69 = (_QWORD *)(((unint64_t)v64 + v101 + v110) & v67);
  v70 = *((unsigned __int8 *)v69 + v102);
  if (v70 >= 2)
  {
    if (v102 <= 3)
      v71 = v102;
    else
      v71 = 4;
    __asm { BR              X12 }
  }
  v72 = ~v88;
  if (v70 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v81 + 16))(v68, v69, v82);
    v73 = 1;
  }
  else
  {
    *v68 = *v69;
    swift_retain();
    v73 = 0;
  }
  *((_BYTE *)v68 + v102) = v73;
  v74 = (_QWORD *)(((unint64_t)v68 + v103 + v88) & v72);
  v75 = (_QWORD *)(((unint64_t)v69 + v103 + v88) & v72);
  v76 = *((unsigned __int8 *)v75 + v56);
  if (v76 >= 2)
  {
    if (v56 <= 3)
      v77 = v56;
    else
      v77 = 4;
    __asm { BR              X12 }
  }
  v38 = a1;
  if (v76 != 1)
  {
    *v74 = *v75;
    *((_BYTE *)v74 + v56) = 0;
    goto LABEL_72;
  }
  (*(void (**)(_QWORD *))(v106 + 16))(v74);
  *((_BYTE *)v74 + v56) = 1;
  return v38;
}

uint64_t sub_2413497FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;

  v4 = sub_2414B3238();
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  else
    swift_release();
  v9 = a2[2];
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (a1 + v6 + *(unsigned __int8 *)(v10 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  v12 = v11 + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  v13 = *(_QWORD *)(a2[3] - 8);
  v14 = (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v13 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  (*(void (**)(unint64_t))(v13 + 8))(v14);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = a2[4];
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (v14 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v18, v16);
  v19 = v18 + *(_QWORD *)(v17 + 64);
  if (!*(_DWORD *)(v17 + 84))
    ++v19;
  v20 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v21 = v20 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    swift_release();
  v22 = sub_2414B4A08();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = (v21 + v24 + 16) & ~v24;
  v26 = *(_QWORD *)(v23 + 64);
  if (!*(_DWORD *)(v23 + 84))
    ++v26;
  if (v26 <= 8)
    v27 = 8;
  else
    v27 = v26;
  v28 = *(unsigned __int8 *)(v25 + v27);
  if (v28 >= 2)
  {
    if (v27 <= 3)
      v29 = v27;
    else
      v29 = 4;
    __asm { BR              X12 }
  }
  if (v28 == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
  }
  else
  {
    swift_release();
  }
  v30 = sub_2414B394C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_DWORD *)(v31 + 80) & 0xF8 | 7;
  v33 = (v27 + v25 + v32 + 1) & ~v32;
  if (*(_QWORD *)(v31 + 64) <= 8uLL)
    v34 = 8;
  else
    v34 = *(_QWORD *)(v31 + 64);
  v35 = *(unsigned __int8 *)(v33 + v34);
  if (v35 >= 2)
  {
    if (v34 <= 3)
      v36 = v34;
    else
      v36 = 4;
    __asm { BR              X13 }
  }
  if (v35 == 1)
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
  else
    swift_release();
  v37 = *(_QWORD *)(sub_2414B3580() - 8);
  v38 = *(_DWORD *)(v37 + 80) & 0xF8 | 7;
  v39 = (v34 + v33 + v38 + 1) & ~v38;
  v40 = *(_QWORD *)(v37 + 64);
  if (v40 <= 8)
    v40 = 8;
  v41 = *(unsigned __int8 *)(v39 + v40);
  if (v41 >= 2)
  {
    if (v40 <= 3)
      v42 = v40;
    else
      v42 = 4;
    __asm { BR              X14 }
  }
  if (v41 == 1)
    return (*(uint64_t (**)(void))(v37 + 8))();
  else
    return swift_release();
}

_QWORD *sub_241349C88(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  size_t v19;
  size_t v20;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  int v35;
  uint64_t v36;
  size_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  _QWORD *v50;
  size_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  char v73;

  v6 = sub_2414B3238();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = a3[2];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v8 + v14 + 1;
  v16 = (void *)(((unint64_t)a1 + v15) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = v19;
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (_QWORD *)(((unint64_t)v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = *(_QWORD *)(a3[3] - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = ((unint64_t)v22 + v25 + 8) & ~v25;
  v27 = ((unint64_t)v23 + v25 + 8) & ~v25;
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v26, v27);
  v28 = *(_QWORD *)(v24 + 64);
  v29 = a3[4];
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = v28 + v31;
  v33 = (void *)((v32 + v26) & ~v31);
  v34 = (const void *)((v32 + v27) & ~v31);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29))
  {
    v35 = *(_DWORD *)(v30 + 84);
    v36 = *(_QWORD *)(v30 + 64);
    if (v35)
      v37 = *(_QWORD *)(v30 + 64);
    else
      v37 = v36 + 1;
    memcpy(v33, v34, v37);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v33, v34, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
    v35 = *(_DWORD *)(v30 + 84);
    v36 = *(_QWORD *)(v30 + 64);
  }
  if (v35)
    v38 = v36;
  else
    v38 = v36 + 1;
  v39 = (uint64_t)v33 + v38 + 7;
  v40 = (_QWORD *)(((unint64_t)v34 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  v39 &= 0xFFFFFFFFFFFFF8uLL;
  *(_QWORD *)v39 = *v40;
  v41 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = (unint64_t *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  swift_bridgeObjectRetain();
  if (v43 < 0xFFFFFFFF)
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  else
  {
    v44 = v42[1];
    *(_QWORD *)v41 = v43;
    *(_QWORD *)(v41 + 8) = v44;
    swift_retain();
  }
  v45 = sub_2414B4A08();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_DWORD *)(v46 + 80) & 0xF8 | 7;
  v48 = (char *)v42 + v47;
  v49 = (_QWORD *)((v41 + v47 + 16) & ~v47);
  v50 = (_QWORD *)((unint64_t)(v48 + 16) & ~v47);
  if (*(_DWORD *)(v46 + 84))
    v51 = *(_QWORD *)(v46 + 64);
  else
    v51 = *(_QWORD *)(v46 + 64) + 1;
  if (v51 <= 8)
    v52 = 8;
  else
    v52 = v51;
  v53 = *((unsigned __int8 *)v50 + v52);
  if (v53 >= 2)
  {
    if (v52 <= 3)
      v54 = v52;
    else
      v54 = 4;
    __asm { BR              X12 }
  }
  if (v53 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v50, 1, v45))
    {
      memcpy(v49, v50, v51);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v46 + 16))(v49, v50, v45);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v45);
    }
    *((_BYTE *)v49 + v52) = 1;
  }
  else
  {
    *v49 = *v50;
    *((_BYTE *)v49 + v52) = 0;
    swift_retain();
  }
  v55 = sub_2414B394C();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(_DWORD *)(v56 + 80) & 0xF8 | 7;
  v58 = v52 + v57 + 1;
  v59 = (_QWORD *)(((unint64_t)v49 + v58) & ~v57);
  v60 = (_QWORD *)(((unint64_t)v50 + v58) & ~v57);
  if (*(_QWORD *)(v56 + 64) <= 8uLL)
    v61 = 8;
  else
    v61 = *(_QWORD *)(v56 + 64);
  v62 = *((unsigned __int8 *)v60 + v61);
  if (v62 >= 2)
  {
    if (v61 <= 3)
      v63 = v61;
    else
      v63 = 4;
    __asm { BR              X13 }
  }
  if (v62 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v56 + 16))(v59, v60, v55);
    v64 = 1;
  }
  else
  {
    *v59 = *v60;
    swift_retain();
    v64 = 0;
  }
  *((_BYTE *)v59 + v61) = v64;
  v65 = v61 + 1;
  v66 = *(_QWORD *)(sub_2414B3580() - 8);
  v67 = *(_DWORD *)(v66 + 80) & 0xF8 | 7;
  v68 = (_QWORD *)(((unint64_t)v59 + v65 + v67) & ~v67);
  v69 = (_QWORD *)(((unint64_t)v60 + v65 + v67) & ~v67);
  if (*(_QWORD *)(v66 + 64) <= 8uLL)
    v70 = 8;
  else
    v70 = *(_QWORD *)(v66 + 64);
  v71 = *((unsigned __int8 *)v69 + v70);
  if (v71 >= 2)
  {
    if (v70 <= 3)
      v72 = v70;
    else
      v72 = 4;
    __asm { BR              X13 }
  }
  if (v71 == 1)
  {
    (*(void (**)(_QWORD *))(v66 + 16))(v68);
    v73 = 1;
  }
  else
  {
    *v68 = *v69;
    swift_retain();
    v73 = 0;
  }
  *((_BYTE *)v68 + v70) = v73;
  return a1;
}

_QWORD *sub_24134A280(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  size_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;

  if (a1 != a2)
  {
    v6 = sub_2414B3238();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 0;
      swift_retain();
    }
  }
  v13 = *(_QWORD *)(*(_QWORD *)(sub_2414B3238() - 8) + 64);
  if (v13 <= 8)
    v13 = 8;
  v14 = a3[2];
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v13 + v16 + 1;
  v18 = (void *)(((unint64_t)a1 + v17) & ~v16);
  v19 = (void *)(((unint64_t)a2 + v17) & ~v16);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v21 = v20(v18, 1, v14);
  v22 = v20(v19, 1, v14);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v18, v19, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_32;
    }
  }
  else
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v18, v19, v14);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  }
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = *(_QWORD *)(v15 + 64) + 1;
  memcpy(v18, v19, v23);
LABEL_32:
  if (*(_DWORD *)(v15 + 84))
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  v25 = (_QWORD *)(((unint64_t)v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = *(_QWORD *)(a3[3] - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = ((unint64_t)v25 + v28 + 8) & ~v28;
  v30 = ((unint64_t)v26 + v28 + 8) & ~v28;
  (*(void (**)(uint64_t, uint64_t))(v27 + 24))(v29, v30);
  v31 = *(_QWORD *)(v27 + 64);
  v32 = a3[4];
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 + v34;
  v36 = (void *)((v35 + v29) & ~v34);
  v37 = (void *)((v35 + v30) & ~v34);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v30) = v38(v36, 1, v32);
  v39 = v38(v37, 1, v32);
  if ((_DWORD)v30)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v36, v37, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      goto LABEL_44;
    }
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v36, v37, v32);
      goto LABEL_44;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (*(_DWORD *)(v33 + 84))
    v40 = *(_QWORD *)(v33 + 64);
  else
    v40 = *(_QWORD *)(v33 + 64) + 1;
  memcpy(v36, v37, v40);
LABEL_44:
  if (*(_DWORD *)(v33 + 84))
    v41 = *(_QWORD *)(v33 + 64);
  else
    v41 = *(_QWORD *)(v33 + 64) + 1;
  v42 = (uint64_t)v36 + v41 + 7;
  v43 = (uint64_t)v37 + v41 + 7;
  v44 = (v43 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF8);
  v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = (_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
  v47 = (unint64_t *)(v44 & 0xFFFFFFFFFFFFFFF8);
  v48 = *v47;
  if (*(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFuLL)
  {
    if (v48 >= 0xFFFFFFFF)
    {
      v50 = v47[1];
      *v46 = v48;
      v46[1] = v50;
      swift_retain();
      goto LABEL_54;
    }
  }
  else
  {
    if (v48 >= 0xFFFFFFFF)
    {
      v49 = v47[1];
      *v46 = v48;
      v46[1] = v49;
      swift_retain();
      swift_release();
      goto LABEL_54;
    }
    swift_release();
  }
  *(_OWORD *)v46 = *(_OWORD *)v47;
LABEL_54:
  v51 = sub_2414B4A08();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(_DWORD *)(v52 + 84);
  v54 = *(_DWORD *)(v52 + 80) & 0xF8 | 7;
  v55 = (_QWORD *)(((unint64_t)v46 + v54 + 16) & ~v54);
  v56 = (_QWORD *)(((unint64_t)v47 + v54 + 16) & ~v54);
  v57 = *(_QWORD *)(v52 + 64);
  if (v55 != v56)
  {
    v58 = v51;
    if (v53)
      v59 = *(_QWORD *)(v52 + 64);
    else
      v59 = v57 + 1;
    if (v59 <= 8)
      v60 = 8;
    else
      v60 = v59;
    v61 = *((unsigned __int8 *)v55 + v60);
    if (v61 >= 2)
    {
      if (v60 <= 3)
        v62 = v60;
      else
        v62 = 4;
      __asm { BR              X12 }
    }
    if (v61 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v55, 1, v51))
        (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v55, v58);
    }
    else
    {
      swift_release();
    }
    v63 = *((unsigned __int8 *)v56 + v60);
    if (v63 >= 2)
    {
      if (v60 <= 3)
        v64 = v60;
      else
        v64 = 4;
      __asm { BR              X12 }
    }
    if (v63 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v56, 1, v58))
      {
        memcpy(v55, v56, v59);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v52 + 16))(v55, v56, v58);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v55, 0, 1, v58);
      }
      *((_BYTE *)v55 + v60) = 1;
    }
    else
    {
      *v55 = *v56;
      *((_BYTE *)v55 + v60) = 0;
      swift_retain();
    }
  }
  if (v53)
    v65 = v57;
  else
    v65 = v57 + 1;
  v66 = 8;
  if (v65 <= 8)
    v67 = 8;
  else
    v67 = v65;
  v68 = sub_2414B394C();
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(_DWORD *)(v69 + 80) & 0xF8 | 7;
  v71 = v67 + v70 + 1;
  v72 = (_QWORD *)(((unint64_t)v55 + v71) & ~v70);
  v73 = (_QWORD *)(((unint64_t)v56 + v71) & ~v70);
  if (*(_QWORD *)(v69 + 64) > 8uLL)
    v66 = *(_QWORD *)(v69 + 64);
  if (v72 != v73)
  {
    v74 = v68;
    v75 = *((unsigned __int8 *)v72 + v66);
    if (v75 >= 2)
    {
      if (v66 <= 3)
        v76 = v66;
      else
        v76 = 4;
      __asm { BR              X12 }
    }
    if (v75 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v69 + 8))(v72, v68);
    else
      swift_release();
    v77 = *((unsigned __int8 *)v73 + v66);
    if (v77 >= 2)
    {
      if (v66 <= 3)
        v78 = v66;
      else
        v78 = 4;
      __asm { BR              X12 }
    }
    if (v77 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v69 + 16))(v72, v73, v74);
      *((_BYTE *)v72 + v66) = 1;
    }
    else
    {
      *v72 = *v73;
      *((_BYTE *)v72 + v66) = 0;
      swift_retain();
    }
  }
  v79 = sub_2414B3580();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(_DWORD *)(v80 + 80) & 0xF8 | 7;
  v82 = v66 + v81 + 1;
  v83 = (_QWORD *)(((unint64_t)v72 + v82) & ~v81);
  v84 = (_QWORD *)(((unint64_t)v73 + v82) & ~v81);
  if (v83 != v84)
  {
    v85 = v79;
    if (*(_QWORD *)(v80 + 64) <= 8uLL)
      v86 = 8;
    else
      v86 = *(_QWORD *)(v80 + 64);
    v87 = *((unsigned __int8 *)v83 + v86);
    if (v87 >= 2)
    {
      if (v86 <= 3)
        v88 = v86;
      else
        v88 = 4;
      __asm { BR              X12 }
    }
    if (v87 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v83, v79);
    else
      swift_release();
    v89 = *((unsigned __int8 *)v84 + v86);
    if (v89 >= 2)
    {
      if (v86 <= 3)
        v90 = v86;
      else
        v90 = 4;
      __asm { BR              X12 }
    }
    if (v89 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v80 + 16))(v83, v84, v85);
      *((_BYTE *)v83 + v86) = 1;
    }
    else
    {
      *v83 = *v84;
      *((_BYTE *)v83 + v86) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_24134AC34(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  size_t v19;
  size_t v20;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  int v35;
  uint64_t v36;
  size_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  size_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  char v73;

  v6 = sub_2414B3238();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = a3[2];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v8 + v14 + 1;
  v16 = (void *)(((unint64_t)a1 + v15) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = v19;
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (_QWORD *)(((unint64_t)v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = *(_QWORD *)(a3[3] - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = ((unint64_t)v22 + v25 + 8) & ~v25;
  v27 = ((unint64_t)v23 + v25 + 8) & ~v25;
  (*(void (**)(uint64_t, uint64_t))(v24 + 32))(v26, v27);
  v28 = *(_QWORD *)(v24 + 64);
  v29 = a3[4];
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = v28 + v31;
  v33 = (void *)((v32 + v26) & ~v31);
  v34 = (const void *)((v32 + v27) & ~v31);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29))
  {
    v35 = *(_DWORD *)(v30 + 84);
    v36 = *(_QWORD *)(v30 + 64);
    if (v35)
      v37 = *(_QWORD *)(v30 + 64);
    else
      v37 = v36 + 1;
    memcpy(v33, v34, v37);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v33, v34, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
    v35 = *(_DWORD *)(v30 + 84);
    v36 = *(_QWORD *)(v30 + 64);
  }
  if (v35)
    v38 = v36;
  else
    v38 = v36 + 1;
  v39 = (_QWORD *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v34 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v42 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  else
  {
    v43 = *(_QWORD *)(v42 + 8);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
  }
  v44 = sub_2414B4A08();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(_DWORD *)(v45 + 80) & 0xF8 | 7;
  v47 = v42 + v46;
  v48 = (_QWORD *)((v41 + v46 + 16) & ~v46);
  v49 = (_QWORD *)((v47 + 16) & ~v46);
  if (*(_DWORD *)(v45 + 84))
    v50 = *(_QWORD *)(v45 + 64);
  else
    v50 = *(_QWORD *)(v45 + 64) + 1;
  if (v50 <= 8)
    v51 = 8;
  else
    v51 = v50;
  v52 = *((unsigned __int8 *)v49 + v51);
  if (v52 >= 2)
  {
    if (v51 <= 3)
      v53 = v51;
    else
      v53 = 4;
    __asm { BR              X12 }
  }
  if (v52 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48))(v49, 1, v44))
    {
      memcpy(v48, v49, v50);
      v54 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v45 + 32))(v48, v49, v44);
      v54 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v48, 0, 1, v44);
    }
  }
  else
  {
    v54 = 0;
    *v48 = *v49;
  }
  *((_BYTE *)v48 + v51) = v54;
  v55 = sub_2414B394C();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(_DWORD *)(v56 + 80) & 0xF8 | 7;
  v58 = v51 + v57 + 1;
  v59 = (_QWORD *)(((unint64_t)v48 + v58) & ~v57);
  v60 = (_QWORD *)(((unint64_t)v49 + v58) & ~v57);
  if (*(_QWORD *)(v56 + 64) <= 8uLL)
    v61 = 8;
  else
    v61 = *(_QWORD *)(v56 + 64);
  v62 = *((unsigned __int8 *)v60 + v61);
  if (v62 >= 2)
  {
    if (v61 <= 3)
      v63 = v61;
    else
      v63 = 4;
    __asm { BR              X13 }
  }
  if (v62 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v56 + 32))(v59, v60, v55);
    v64 = 1;
  }
  else
  {
    v64 = 0;
    *v59 = *v60;
  }
  *((_BYTE *)v59 + v61) = v64;
  v65 = v61 + 1;
  v66 = *(_QWORD *)(sub_2414B3580() - 8);
  v67 = *(_DWORD *)(v66 + 80) & 0xF8 | 7;
  v68 = (_QWORD *)(((unint64_t)v59 + v65 + v67) & ~v67);
  v69 = (_QWORD *)(((unint64_t)v60 + v65 + v67) & ~v67);
  if (*(_QWORD *)(v66 + 64) <= 8uLL)
    v70 = 8;
  else
    v70 = *(_QWORD *)(v66 + 64);
  v71 = *((unsigned __int8 *)v69 + v70);
  if (v71 >= 2)
  {
    if (v70 <= 3)
      v72 = v70;
    else
      v72 = 4;
    __asm { BR              X13 }
  }
  if (v71 == 1)
  {
    (*(void (**)(_QWORD *))(v66 + 32))(v68);
    v73 = 1;
  }
  else
  {
    v73 = 0;
    *v68 = *v69;
  }
  *((_BYTE *)v68 + v70) = v73;
  return a1;
}

_QWORD *sub_24134B218(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t (*v39)(void *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  uint64_t v59;
  size_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  char v94;

  if (a1 != a2)
  {
    v6 = sub_2414B3238();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      v13 = 1;
    }
    else
    {
      v13 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(sub_2414B3238() - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = a3[2];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17 + 1;
  v19 = (void *)(((unint64_t)a1 + v18) & ~v17);
  v20 = (void *)(((unint64_t)a2 + v18) & ~v17);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21(v19, 1, v15);
  v23 = v21(v20, 1, v15);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v19, v20, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v19, v20, v15);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
  }
  if (*(_DWORD *)(v16 + 84))
    v24 = *(_QWORD *)(v16 + 64);
  else
    v24 = *(_QWORD *)(v16 + 64) + 1;
  memcpy(v19, v20, v24);
LABEL_33:
  if (*(_DWORD *)(v16 + 84))
    v25 = *(_QWORD *)(v16 + 64);
  else
    v25 = *(_QWORD *)(v16 + 64) + 1;
  v26 = (_QWORD *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v20 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = *(_QWORD *)(a3[3] - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = ((unint64_t)v26 + v29 + 8) & ~v29;
  v31 = ((unint64_t)v27 + v29 + 8) & ~v29;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v30, v31);
  v32 = *(_QWORD *)(v28 + 64);
  v33 = a3[4];
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = v32 + v35;
  v37 = (void *)((v36 + v30) & ~v35);
  v38 = (void *)((v36 + v31) & ~v35);
  v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v31) = v39(v37, 1, v33);
  v40 = v39(v38, 1, v33);
  if ((_DWORD)v31)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v37, v38, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
      goto LABEL_45;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v37, v38, v33);
      goto LABEL_45;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v37, v33);
  }
  if (*(_DWORD *)(v34 + 84))
    v41 = *(_QWORD *)(v34 + 64);
  else
    v41 = *(_QWORD *)(v34 + 64) + 1;
  memcpy(v37, v38, v41);
LABEL_45:
  if (*(_DWORD *)(v34 + 84))
    v42 = *(_QWORD *)(v34 + 64);
  else
    v42 = *(_QWORD *)(v34 + 64) + 1;
  v43 = (uint64_t)v37 + v42 + 7;
  v44 = (_QWORD *)(((unint64_t)v38 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF8) = *v44;
  v45 = (v43 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v46 = (_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
  v47 = (unint64_t *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  v48 = *v47;
  if (*v46 < 0xFFFFFFFFuLL)
  {
    if (v48 >= 0xFFFFFFFF)
    {
      v50 = v47[1];
      *v46 = v48;
      v46[1] = v50;
      goto LABEL_55;
    }
  }
  else
  {
    if (v48 >= 0xFFFFFFFF)
    {
      v49 = v47[1];
      *v46 = v48;
      v46[1] = v49;
      swift_release();
      goto LABEL_55;
    }
    swift_release();
  }
  *(_OWORD *)v46 = *(_OWORD *)v47;
LABEL_55:
  v51 = sub_2414B4A08();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(_DWORD *)(v52 + 84);
  v54 = *(_DWORD *)(v52 + 80) & 0xF8 | 7;
  v55 = (char *)v47 + v54;
  v56 = (_QWORD *)(((unint64_t)v46 + v54 + 16) & ~v54);
  v57 = (_QWORD *)((unint64_t)(v55 + 16) & ~v54);
  v58 = *(_QWORD *)(v52 + 64);
  if (v56 != v57)
  {
    v59 = v51;
    if (v53)
      v60 = *(_QWORD *)(v52 + 64);
    else
      v60 = v58 + 1;
    if (v60 <= 8)
      v61 = 8;
    else
      v61 = v60;
    v62 = *((unsigned __int8 *)v56 + v61);
    if (v62 >= 2)
    {
      if (v61 <= 3)
        v63 = v61;
      else
        v63 = 4;
      __asm { BR              X12 }
    }
    if (v62 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v56, 1, v51))
        (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v56, v59);
    }
    else
    {
      swift_release();
    }
    v64 = *((unsigned __int8 *)v57 + v61);
    if (v64 >= 2)
    {
      if (v61 <= 3)
        v65 = v61;
      else
        v65 = 4;
      __asm { BR              X12 }
    }
    if (v64 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v57, 1, v59))
      {
        memcpy(v56, v57, v60);
        v66 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v52 + 32))(v56, v57, v59);
        v66 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v56, 0, 1, v59);
      }
    }
    else
    {
      v66 = 0;
      *v56 = *v57;
    }
    *((_BYTE *)v56 + v61) = v66;
  }
  if (v53)
    v67 = v58;
  else
    v67 = v58 + 1;
  v68 = 8;
  if (v67 <= 8)
    v69 = 8;
  else
    v69 = v67;
  v70 = sub_2414B394C();
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(_DWORD *)(v71 + 80) & 0xF8 | 7;
  v73 = v69 + v72 + 1;
  v74 = (_QWORD *)(((unint64_t)v56 + v73) & ~v72);
  v75 = (_QWORD *)(((unint64_t)v57 + v73) & ~v72);
  if (*(_QWORD *)(v71 + 64) > 8uLL)
    v68 = *(_QWORD *)(v71 + 64);
  if (v74 != v75)
  {
    v76 = v70;
    v77 = *((unsigned __int8 *)v74 + v68);
    if (v77 >= 2)
    {
      if (v68 <= 3)
        v78 = v68;
      else
        v78 = 4;
      __asm { BR              X12 }
    }
    if (v77 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v71 + 8))(v74, v70);
    else
      swift_release();
    v79 = *((unsigned __int8 *)v75 + v68);
    if (v79 >= 2)
    {
      if (v68 <= 3)
        v80 = v68;
      else
        v80 = 4;
      __asm { BR              X12 }
    }
    if (v79 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v71 + 32))(v74, v75, v76);
      v81 = 1;
    }
    else
    {
      v81 = 0;
      *v74 = *v75;
    }
    *((_BYTE *)v74 + v68) = v81;
  }
  v82 = sub_2414B3580();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(_DWORD *)(v83 + 80) & 0xF8 | 7;
  v85 = v68 + v84 + 1;
  v86 = (_QWORD *)(((unint64_t)v74 + v85) & ~v84);
  v87 = (_QWORD *)(((unint64_t)v75 + v85) & ~v84);
  if (v86 != v87)
  {
    v88 = v82;
    if (*(_QWORD *)(v83 + 64) <= 8uLL)
      v89 = 8;
    else
      v89 = *(_QWORD *)(v83 + 64);
    v90 = *((unsigned __int8 *)v86 + v89);
    if (v90 >= 2)
    {
      if (v89 <= 3)
        v91 = v89;
      else
        v91 = 4;
      __asm { BR              X12 }
    }
    if (v90 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v83 + 8))(v86, v82);
    else
      swift_release();
    v92 = *((unsigned __int8 *)v87 + v89);
    if (v92 >= 2)
    {
      if (v89 <= 3)
        v93 = v89;
      else
        v93 = 4;
      __asm { BR              X12 }
    }
    if (v92 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v83 + 32))(v86, v87, v88);
      v94 = 1;
    }
    else
    {
      v94 = 0;
      *v86 = *v87;
    }
    *((_BYTE *)v86 + v89) = v94;
  }
  return a1;
}

uint64_t sub_24134BBAC(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unint64_t v55;

  v4 = *(_QWORD *)(*(_QWORD *)(sub_2414B3238() - 8) + 64);
  if (v4 <= 8)
    v4 = 8;
  v55 = v4;
  v50 = a3[2];
  v5 = *(_QWORD *)(v50 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_QWORD *)(a3[3] - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v51 = v9;
  v54 = v7;
  if (v7 > v9)
    v9 = v7;
  v48 = a3[4];
  v10 = *(_QWORD *)(v48 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  v49 = v12;
  if (v9 <= v12)
    v9 = v12;
  if (v9 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v9;
  v14 = *(_QWORD *)(sub_2414B4A08() - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v14 + 64);
  v52 = *(_QWORD *)(sub_2414B394C() - 8);
  v17 = *(_QWORD *)(v52 + 64);
  if (v17 <= 8)
    v17 = 8;
  v53 = v17;
  v18 = *(_QWORD *)(sub_2414B3580() - 8);
  result = a2;
  if (*(_QWORD *)(v18 + 64) <= 8uLL)
    v20 = 8;
  else
    v20 = *(_QWORD *)(v18 + 64);
  if ((_DWORD)v6)
    v21 = *(_QWORD *)(v5 + 64);
  else
    v21 = *(_QWORD *)(v5 + 64) + 1;
  v22 = *(_QWORD *)(v10 + 64);
  if (!(_DWORD)v11)
    ++v22;
  if (v15)
    v23 = v16;
  else
    v23 = v16 + 1;
  if (v23 <= 8)
    v24 = 8;
  else
    v24 = v23;
  if (!a2)
    return result;
  v25 = *(unsigned __int8 *)(v5 + 80);
  v26 = v55 + v25 + 1;
  v27 = v21 + 7;
  v28 = *(unsigned __int8 *)(v8 + 80);
  v29 = v28 + 8;
  v30 = *(unsigned __int8 *)(v10 + 80);
  v31 = *(_QWORD *)(v8 + 64) + v30;
  v32 = v22 + 7;
  if (a2 > v13)
  {
    v33 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
    v34 = (v33
         + ((((v32 + ((v31 + ((v29 + ((v27 + (v26 & ~v25)) & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & ~v30)) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & ~v33;
    v35 = *(_DWORD *)(v52 + 80) & 0xF8 | 7;
    v36 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
    v37 = v20 + ((v53 + v36 + ((v24 + v35 + v34 + 1) & ~v35) + 1) & ~v36) + 1;
    v38 = 8 * v37;
    if (v37 > 3)
      goto LABEL_34;
    v40 = ((a2 - v13 + ~(-1 << v38)) >> v38) + 1;
    if (HIWORD(v40))
    {
      v39 = *(_DWORD *)(a1 + v37);
      if (v39)
        goto LABEL_41;
    }
    else
    {
      if (v40 <= 0xFF)
      {
        if (v40 < 2)
          goto LABEL_50;
LABEL_34:
        v39 = *(unsigned __int8 *)(a1 + v37);
        if (!*(_BYTE *)(a1 + v37))
          goto LABEL_50;
LABEL_41:
        v41 = (v39 - 1) << v38;
        if (v37 > 3)
          v41 = 0;
        if ((_DWORD)v37)
        {
          if (v37 <= 3)
            v42 = v37;
          else
            v42 = 4;
          __asm { BR              X11 }
        }
        return v13 + v41 + 1;
      }
      v39 = *(unsigned __int16 *)(a1 + v37);
      if (*(_WORD *)(a1 + v37))
        goto LABEL_41;
    }
  }
LABEL_50:
  v43 = (v26 + a1) & ~v25;
  if (v54 == v13)
  {
    if (v6 < 2)
      return 0;
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v43, v6, v50);
    goto LABEL_59;
  }
  v44 = (v29 + ((v27 + v43) & 0xFFFFFFFFFFFFFFF8)) & ~v28;
  if (v51 == v13)
    return (*(uint64_t (**)(unint64_t))(v8 + 48))(v44);
  v46 = (v31 + v44) & ~v30;
  if (v49 == v13)
  {
    if (v11 < 2)
      return 0;
    v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v46, v11, v48);
LABEL_59:
    if (v45 >= 2)
      return v45 - 1;
    else
      return 0;
  }
  v47 = *(_QWORD *)((v32 + v46) & 0xFFFFFFFFFFFFF8);
  if (v47 >= 0xFFFFFFFF)
    LODWORD(v47) = -1;
  return (v47 + 1);
}

void sub_24134BF6C(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  unint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  unsigned int v32;
  int v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v5 = *(_QWORD *)(*(_QWORD *)(sub_2414B3238() - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v36 = v5;
  v6 = *(_QWORD *)(a4[2] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(a4[3] - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v8 > v10)
    v10 = v8;
  v11 = *(_QWORD *)(a4[4] - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v10 <= v13)
    v10 = v13;
  if (v10 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v10;
  v15 = *(_QWORD *)(sub_2414B4A08() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v35 = *(_QWORD *)(v15 + 64);
  v17 = *(_QWORD *)(sub_2414B394C() - 8);
  v18 = *(_QWORD *)(v17 + 64);
  if (v18 <= 8)
    v18 = 8;
  v37 = v18;
  v19 = sub_2414B3580();
  v20 = v12;
  v21 = 0;
  v22 = *(_QWORD *)(v19 - 8);
  if (*(_QWORD *)(v22 + 64) <= 8uLL)
    v23 = 8;
  else
    v23 = *(_QWORD *)(v22 + 64);
  v24 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v24;
  v25 = *(_QWORD *)(v11 + 64);
  if (!v20)
    ++v25;
  v26 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v27 = (v26
       + ((((v25
           + 7
           + ((*(_QWORD *)(v9 + 64)
             + *(unsigned __int8 *)(v11 + 80)
             + ((*(unsigned __int8 *)(v9 + 80)
               + 8
               + ((v24
                 + 7
                 + ((v36 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v26;
  v28 = v35;
  if (!v16)
    v28 = v35 + 1;
  if (v28 <= 8)
    v28 = 8;
  v29 = *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  v30 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v31 = v23 + ((v37 + v30 + ((v28 + v29 + v27 + 1) & ~v29) + 1) & ~v30) + 1;
  if (a3 > v14)
  {
    if (v31 <= 3)
    {
      v32 = ((a3 - v14 + ~(-1 << (8 * v31))) >> (8 * v31)) + 1;
      if (HIWORD(v32))
      {
        v21 = 4u;
      }
      else if (v32 >= 0x100)
      {
        v21 = 2;
      }
      else
      {
        v21 = v32 > 1;
      }
    }
    else
    {
      v21 = 1u;
    }
  }
  if (v14 < a2)
  {
    v33 = ~v14 + a2;
    if (v31 < 4)
    {
      if ((_DWORD)v31)
      {
        v34 = v33 & ~(-1 << (8 * v31));
        bzero(a1, v31);
        if ((_DWORD)v31 == 3)
        {
          *(_WORD *)a1 = v34;
          a1[2] = BYTE2(v34);
        }
        else if ((_DWORD)v31 == 2)
        {
          *(_WORD *)a1 = v34;
        }
        else
        {
          *a1 = v34;
        }
      }
    }
    else
    {
      bzero(a1, v31);
      *(_DWORD *)a1 = v33;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void sub_24134C344()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x24134C378);
}

void sub_24134C34C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x24134C378);
}

void sub_24134C354()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x24134C378);
}

void type metadata accessor for BubbleTip()
{
  JUMPOUT(0x242695A4CLL);
}

void sub_24134C3A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257122C38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257121330);
    v0 = sub_2414B2FD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257122C38);
  }
}

uint64_t sub_24134C400(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v4;

  if ((a4 & 1) == 0)
    v4 = a3;
  return swift_bridgeObjectRetain();
}

uint64_t initializeWithCopy for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24134C400(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24134C400(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_2412CD294(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BubbleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_2412CD294(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_24134C53C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t destroy for BubbleAction()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for BubbleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BubbleAction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BubbleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BubbleAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BubbleAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BubbleAction()
{
  return &type metadata for BubbleAction;
}

uint64_t *initializeBufferWithCopyOfBuffer for BubbleTipTitleViewModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2414B394C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for BubbleTipTitleViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v3 = sub_2414B394C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for BubbleTipTitleViewModifier(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B394C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithCopy for BubbleTipTitleViewModifier(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = &a1[v4];
    v6 = &a2[v4];
    sub_2412CBE78((uint64_t)&a1[v4], &qword_257121570);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B394C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for BubbleTipTitleViewModifier(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B394C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for BubbleTipTitleViewModifier(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = &a1[v4];
    v6 = &a2[v4];
    sub_2412CBE78((uint64_t)&a1[v4], &qword_257121570);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2414B394C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BubbleTipTitleViewModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24134CB10(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BubbleTipTitleViewModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_24134CB9C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257121578);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_24134CC10()
{
  unint64_t v0;

  sub_2412C8EDC(319, qword_257121600, (void (*)(uint64_t))MEMORY[0x24BDEEEA0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for BubbleTipSubtitleViewModifier()
{
  return &type metadata for BubbleTipSubtitleViewModifier;
}

ValueMetadata *type metadata accessor for BubbleTipAccessoryModifier()
{
  return &type metadata for BubbleTipAccessoryModifier;
}

uint64_t _s11MediaCoreUI26BubbleTipAccessoryModifierV6PresetOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24134CD04 + 4 * byte_2414BB5C3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24134CD38 + 4 * byte_2414BB5BE[v4]))();
}

uint64_t sub_24134CD38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24134CD40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24134CD48);
  return result;
}

uint64_t sub_24134CD54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24134CD5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24134CD60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24134CD68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BubbleTipAccessoryModifier.Preset()
{
  return &type metadata for BubbleTipAccessoryModifier.Preset;
}

uint64_t sub_24134CD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];

  sub_2414B53B0();
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A90);
  swift_getTupleTypeMetadata3();
  v0 = sub_2414B4B1C();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  sub_2414B4804();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v2 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v2);
  sub_2414B4894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A88);
  swift_getTupleTypeMetadata3();
  v3 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v3);
  v4 = sub_2414B4894();
  v25 = sub_2414B3514();
  type metadata accessor for BubbleBackground(255);
  v26 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844D0);
  v5 = sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v6);
  sub_2414B4804();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v7 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v7);
  sub_2414B4894();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v8);
  sub_2414B4894();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v1, v9);
  v10 = sub_2414B4804();
  v11 = sub_2414B3514();
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = v5;
  v24 = sub_2414B3A90();
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v4);
  v16 = MEMORY[0x24BDECC60];
  v33[0] = v15;
  v33[1] = MEMORY[0x24BDECC60];
  v17 = MEMORY[0x24BDED308];
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v25, v33);
  v19 = sub_2412C8030(&qword_257122AA8, type metadata accessor for BubbleBackground, (uint64_t)&unk_2414BBA24);
  v32[0] = v18;
  v32[1] = v19;
  v20 = MEMORY[0x242695AE8](v17, v26, v32);
  v21 = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
  v31[0] = v20;
  v31[1] = v21;
  v22 = MEMORY[0x242695AE8](v17, v14, v31);
  v30[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
  v30[1] = v16;
  v29[0] = MEMORY[0x242695AE8](v17, v11, v30);
  v29[1] = v19;
  v28[0] = MEMORY[0x242695AE8](v17, v12, v29);
  v28[1] = v21;
  v27[0] = v22;
  v27[1] = MEMORY[0x242695AE8](v17, v13, v28);
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v24, v27);
}

unint64_t sub_24134D2A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122CD8;
  if (!qword_257122CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122CE0);
    v2[0] = sub_241348624();
    v2[1] = v2[0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122CD8);
  }
  return result;
}

uint64_t sub_24134D308()
{
  return sub_2412C8FC4(&qword_257122CE8, &qword_257122CF0, MEMORY[0x24BDF43B0]);
}

uint64_t sub_24134D334()
{
  return sub_2412DC484(&qword_257122CF8, &qword_257122B80, (uint64_t (*)(void))sub_24134D368, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_24134D368()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122D00;
  if (!qword_257122D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B78);
    v2[0] = sub_24134D3EC();
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122D00);
  }
  return result;
}

unint64_t sub_24134D3EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122D08;
  if (!qword_257122D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B70);
    v2[0] = sub_24134D568(&qword_257122D10, &qword_257122B68, &qword_257122D18, &qword_257122B88);
    v2[1] = sub_2412C8FC4(&qword_254381358, &qword_254381360, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122D08);
  }
  return result;
}

uint64_t sub_24134D490()
{
  return sub_2412DC484(&qword_257122D20, &qword_257122D28, (uint64_t (*)(void))sub_24134D4C4, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_24134D4C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122D30;
  if (!qword_257122D30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B98);
    v2[0] = sub_24134D568(&qword_257122D38, &qword_257122B90, &qword_257122D40, &qword_257122BA0);
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122D30);
  }
  return result;
}

uint64_t sub_24134D568(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_2412C8FC4(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_24134D604(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B3580();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B4A08();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24134D7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B3580();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_2414B4A08();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

_QWORD *sub_24134D89C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B3580();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B4A08();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_24134DA18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_257122A98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2414B3580();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_2412CBE78((uint64_t)a1 + v7, &qword_257122AA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2414B4A08();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_24134DBBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B3580();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B4A08();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

char *sub_24134DD30(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_257122A98);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B3580();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_2412CBE78((uint64_t)&a1[v8], &qword_257122AA0);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B4A08();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257121330);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24134DECC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24134DED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122D48);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_257122D50);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24134DF54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24134DF60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122D48);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_257122D50);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24134DFE4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8EDC(319, &qword_257122C40, (void (*)(uint64_t))MEMORY[0x24BDED8A8]);
  if (v0 <= 0x3F)
  {
    sub_24134C3A8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24134E078()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24134E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_24134E094(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

id sub_24134E0A0(void *a1, void *a2, void *a3, void *a4, char a5)
{
  id v7;
  id v8;
  id v9;

  if ((a5 & 1) == 0)
    return (id)swift_retain();
  v7 = a1;
  v8 = a2;
  v9 = a3;
  return a4;
}

void sub_24134E0E4(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    swift_release();
  }
}

uint64_t sub_24134E128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24134E178(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 80);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v4);
  return a1;
}

uint64_t sub_24134E1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24134E21C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B3724();
  *a1 = v3;
  return result;
}

uint64_t sub_24134E244()
{
  return sub_2414B3730();
}

uint64_t sub_24134E268()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241343308);
}

uint64_t sub_24134E274()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413435CC);
}

unint64_t sub_24134E280()
{
  unint64_t result;

  result = qword_257122E50;
  if (!qword_257122E50)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BubbleAction, &type metadata for BubbleAction);
    atomic_store(result, (unint64_t *)&qword_257122E50);
  }
  return result;
}

unint64_t sub_24134E2C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257122E60;
  if (!qword_257122E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A90);
    v2 = sub_2412C8FC4(&qword_257122E68, &qword_257122E70, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257122E60);
  }
  return result;
}

void sub_24134E340()
{
  type metadata accessor for BubbleTip();
}

uint64_t sub_24134E380(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v5 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v6 = (v5 + 80) & ~v5;
  swift_release();
  v7 = v1 + v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122E78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3238();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v1 + v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v7 + a1[17];
  v10 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v7 + a1[19], v2);
  v11 = v7 + a1[20];
  v12 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(v11, 1))
    (*(void (**)(uint64_t))(v12 + 8))(v11);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + a1[22]))
    swift_release();
  v13 = v7 + a1[23];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122AA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B4A08();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  v16 = v7 + a1[24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B394C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  v18 = v7 + a1[25];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2414B3580();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_24134E5D4()
{
  type metadata accessor for BubbleTip();
}

void sub_24134E614()
{
  uint64_t v0;

  sub_241341394(*(void (**)(double))(v0 + 64));
}

unint64_t sub_24134E664()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_257122E88;
  if (!qword_257122E88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122E80);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122B40);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
    v2[4] = sub_24134888C();
    v2[5] = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122E88);
  }
  return result;
}

uint64_t sub_24134E754()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241343DA8);
}

uint64_t sub_24134E760()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241344270);
}

uint64_t sub_24134E76C()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413447AC);
}

uint64_t sub_24134E778(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t sub_24134E790()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122E98;
  if (!qword_257122E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122A80);
    v2[0] = sub_24134E2C4();
    v2[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122E98);
  }
  return result;
}

uint64_t sub_24134E814()
{
  return sub_2414B37CC();
}

ValueMetadata *type metadata accessor for BubbleTipBackgroundKey()
{
  return &type metadata for BubbleTipBackgroundKey;
}

unint64_t sub_24134E848()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257122EA8;
  if (!qword_257122EA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122DF0);
    v2[0] = sub_2412C8FC4(&qword_257122EB0, &qword_257122DE8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_257122EB8, &qword_257122EC0, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257122EA8);
  }
  return result;
}

uint64_t Backdrop.ViewConfiguration.useMask.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void static Backdrop.ViewConfiguration.standard.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static Backdrop.ViewConfiguration.masked.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

id Backdrop.SnapshotConfiguration.image.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

double Backdrop.SnapshotConfiguration.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double Backdrop.SnapshotConfiguration.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double Backdrop.SnapshotConfiguration.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void Backdrop.SnapshotConfiguration.offset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*Backdrop.SnapshotConfiguration.offset.modify())()
{
  return CGSizeMake;
}

id Backdrop.SnapshotConfiguration.traitCollection.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void Backdrop.SnapshotConfiguration.traitCollection.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*Backdrop.SnapshotConfiguration.traitCollection.modify())()
{
  return CGSizeMake;
}

uint64_t Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(_QWORD *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(double *)(a3 + 16) = a5;
  *(double *)(a3 + 24) = a6;
  *(double *)(a3 + 32) = a7;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t Backdrop.Recorder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24134EAE8(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_configuration);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder____lazy_storage___offscreenRenderPassDescriptor));
  sub_24134EB38(*(_QWORD *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder____lazy_storage___outputTexture));
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop8Recorder_selfRef);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_24134EAE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Backdrop.RecordingConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Backdrop.RecordingConfiguration(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257122F78);
}

uint64_t sub_24134EB38(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t Backdrop.Recorder.__deallocating_deinit()
{
  Backdrop.Recorder.deinit();
  return swift_deallocClassInstance();
}

uint64_t _s17ViewConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17ViewConfigurationVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24134EC58 + 4 * byte_2414BBB55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24134EC8C + 4 * byte_2414BBB50[v4]))();
}

uint64_t sub_24134EC8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24134EC94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24134EC9CLL);
  return result;
}

uint64_t sub_24134ECA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24134ECB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24134ECB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24134ECBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.ViewConfiguration()
{
  return &type metadata for Backdrop.ViewConfiguration;
}

void _s21SnapshotConfigurationVwxx(id *a1)
{

}

uint64_t _s21SnapshotConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t _s21SnapshotConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  return a1;
}

uint64_t _s21SnapshotConfigurationVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t _s21SnapshotConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s21SnapshotConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.SnapshotConfiguration()
{
  return &type metadata for Backdrop.SnapshotConfiguration;
}

char *_s22RecordingConfigurationVwCP(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = (unint64_t)a2[2];
    v10 = v5;
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_24134EFF8(v11, v9);
      *((_QWORD *)a1 + 1) = v11;
      *((_QWORD *)a1 + 2) = v9;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v12 = a3[8];
    v13 = &a1[v12];
    v14 = (uint64_t)a2 + v12;
    v15 = sub_2414B2A88();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[10];
    *(_OWORD *)&a1[a3[9]] = *(_OWORD *)((char *)a2 + a3[9]);
    v17 = &a1[v16];
    v18 = (char **)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *(_QWORD *)v17 = *v18;
      *((_QWORD *)v17 + 1) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v20 = a3[11];
    v21 = &a1[v20];
    v22 = (char **)((char *)a2 + v20);
    if (*v22)
    {
      v23 = v22[1];
      *(_QWORD *)v21 = *v22;
      *((_QWORD *)v21 + 1) = v23;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    v24 = a3[12];
    v25 = *(char **)((char *)a2 + v24);
    *(_QWORD *)&a1[v24] = v25;
    v26 = v25;
  }
  return a1;
}

uint64_t sub_24134EFF8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void _s22RecordingConfigurationVwxx(uint64_t a1, int *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 60 != 15)
    sub_24134F0E0(*(_QWORD *)(a1 + 8), v4);
  v5 = a1 + a2[8];
  v6 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[10]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();

}

uint64_t sub_24134F0E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t _s22RecordingConfigurationVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  _OWORD *v7;
  uint64_t *v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = (_OWORD *)(a1 + 8);
  v8 = (uint64_t *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = v6;
  if (v9 >> 60 == 15)
  {
    *v7 = *(_OWORD *)v8;
  }
  else
  {
    v11 = *v8;
    sub_24134EFF8(*v8, v9);
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v9;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  if (*v18)
  {
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  if (*v22)
  {
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v24 = a3[12];
  v25 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v25;
  return a1;
}

uint64_t _s22RecordingConfigurationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  v9 = (uint64_t *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_24134EFF8(*v9, *(_QWORD *)(a2 + 16));
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 16) = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_24134F434(a1 + 8);
LABEL_6:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_24134EFF8(*v9, *(_QWORD *)(a2 + 16));
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v10;
  sub_24134F0E0(v13, v14);
LABEL_8:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a1 + v22);
  v26 = *(_QWORD *)(a2 + v22);
  if (v25)
  {
    if (v26)
    {
      v27 = *(_QWORD *)(v24 + 8);
      *v23 = v26;
      v23[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v26)
  {
    v28 = *(_QWORD *)(v24 + 8);
    *v23 = v26;
    v23[1] = v28;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
LABEL_15:
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a1 + v29);
  v33 = *(_QWORD *)(a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      v35 = *(_QWORD *)(v31 + 8);
      *v30 = v33;
      v30[1] = v35;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_22;
  }
  if (!v33)
  {
    swift_release();
    goto LABEL_21;
  }
  v34 = *(_QWORD *)(v31 + 8);
  *v30 = v33;
  v30[1] = v34;
  swift_retain();
  swift_release();
LABEL_22:
  v36 = a3[12];
  v37 = *(void **)(a2 + v36);
  v38 = *(void **)(a1 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v39 = v37;

  return a1;
}

uint64_t sub_24134F434(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t _s22RecordingConfigurationVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  if (*v12)
  {
    v14 = v12[1];
    *v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  v15 = a3[11];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t _s22RecordingConfigurationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = (_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9 >> 60 == 15)
  {
    sub_24134F434(a1 + 8);
LABEL_4:
    *(_OWORD *)(a1 + 8) = *v7;
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 16) = v9;
  sub_24134F0E0(v10, v8);
LABEL_6:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_2414B2A88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15);
  if (*(_QWORD *)(a1 + v15))
  {
    if (v18)
    {
      v19 = *(_QWORD *)(v17 + 8);
      *v16 = v18;
      v16[1] = v19;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v18)
  {
    v20 = *(_QWORD *)(v17 + 8);
    *v16 = v18;
    v16[1] = v20;
    goto LABEL_13;
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
LABEL_13:
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a1 + v21);
  v25 = *(_QWORD *)(a2 + v21);
  if (!v24)
  {
    if (v25)
    {
      v27 = *(_QWORD *)(v23 + 8);
      *v22 = v25;
      v22[1] = v27;
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    goto LABEL_20;
  }
  if (!v25)
  {
    swift_release();
    goto LABEL_19;
  }
  v26 = *(_QWORD *)(v23 + 8);
  *v22 = v25;
  v22[1] = v26;
  swift_release();
LABEL_20:
  v28 = a3[12];
  v29 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);

  return a1;
}

uint64_t _s22RecordingConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24134F6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 32), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 48));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s22RecordingConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24134F764(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2414B2A88();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 32), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
  return result;
}

uint64_t sub_24134F7E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2A88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24134F890()
{
  return type metadata accessor for Backdrop.Recorder(0);
}

uint64_t type metadata accessor for Backdrop.Recorder(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257122FF8);
}

uint64_t sub_24134F8AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Backdrop.RecordingConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Backdrop.Recorder()
{
  return swift_lookUpClassMethod();
}

uint64_t MCUINamespace<A>.rotating(duration:isAnimating:isClockwise:)(char a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571231C8);
  swift_allocObject();
  v10 = sub_2414B2DB8();
  sub_2414B4798();
  v11 = v16;
  v12 = v17;
  v23 = 0;
  sub_2414B4798();
  v13 = v16;
  v14 = v17;
  v16 = a5;
  LOBYTE(v17) = a1;
  BYTE1(v17) = a2;
  v18 = v11;
  v19 = v12;
  v20 = v13;
  v21 = v14;
  v22 = v10;
  MEMORY[0x242693DC0](&v16, *(_QWORD *)(a3 + 16), &type metadata for RotationEffectModifier, a4);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24134FA88(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123200);
  sub_2414B47A4();
  if ((*(_BYTE *)(a1 + 9) & 1) == 0)
  {
    sub_2414B45DC();
    sub_2414B45E8();
  }
  sub_2414B45DC();
  sub_2414B45DC();
  sub_2414B45E8();
  return sub_2414B47B0();
}

uint64_t sub_24134FB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t (**v25)();
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)(uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = v2;
  v55 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231D8);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231F0);
  v14 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  v51 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231F8);
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v49 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_OWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123200);
  sub_2414B47A4();
  v19 = v61;
  v20 = *(_QWORD *)(v2 + 48);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123208);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, a1, v21);
  v22 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v22 = v19;
  *((_QWORD *)v22 + 1) = v20;
  v23 = swift_allocObject();
  v24 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(v3 + 48);
  sub_241350CF8((uint64_t)v9, (uint64_t)v12);
  v25 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *v25 = sub_241350CF0;
  v25[1] = (uint64_t (*)())v23;
  v25[2] = 0;
  v25[3] = 0;
  swift_retain();
  sub_241350D40(v3);
  sub_2412CBE78((uint64_t)v9, &qword_2571231E0);
  LOBYTE(v58) = *(_BYTE *)(v3 + 8);
  v26 = swift_allocObject();
  v27 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v26 + 32) = v27;
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v26 + 64) = *(_QWORD *)(v3 + 48);
  sub_241350D40(v3);
  v28 = sub_241350D94();
  v29 = MEMORY[0x24BEE1328];
  v30 = MEMORY[0x24BEE1340];
  sub_2414B4564();
  swift_release();
  sub_2412CBE78((uint64_t)v12, &qword_2571231E8);
  LOBYTE(v61) = *(_BYTE *)(v3 + 9);
  v31 = swift_allocObject();
  v32 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v31 + 32) = v32;
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v31 + 64) = *(_QWORD *)(v3 + 48);
  sub_241350D40(v3);
  *(_QWORD *)&v58 = v10;
  *((_QWORD *)&v58 + 1) = v29;
  v59 = v28;
  v60 = v30;
  swift_getOpaqueTypeConformance2();
  v34 = v49;
  v33 = v50;
  sub_2414B4564();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v33);
  *(_QWORD *)&v58 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571231C8);
  sub_2412C8FC4(&qword_257123230, &qword_2571231C8, MEMORY[0x24BDB9CB0]);
  sub_241350ED4();
  v35 = v54;
  sub_2414B2EA8();
  v36 = swift_allocObject();
  v37 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v36 + 32) = v37;
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v36 + 64) = *(_QWORD *)(v3 + 48);
  v39 = v52;
  v38 = v53;
  v40 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v55, v34, v53);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123240);
  v42 = v40 + *(int *)(v41 + 52);
  v43 = v40;
  v45 = v56;
  v44 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v42, v35, v57);
  v46 = (uint64_t (**)(uint64_t))(v43 + *(int *)(v41 + 56));
  *v46 = sub_241350F1C;
  v46[1] = (uint64_t (*)(uint64_t))v36;
  sub_241350D40(v3);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v34, v38);
}

uint64_t sub_24135002C(uint64_t result)
{
  uint64_t v1;

  if ((*(_BYTE *)(result + 8) & 1) != 0)
  {
    v1 = sub_2414B4AA4();
    MEMORY[0x24BDAC7A8](v1);
    sub_2414B3328();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413500B8()
{
  uint64_t v0;

  v0 = sub_2414B4AA4();
  MEMORY[0x24BDAC7A8](v0);
  sub_2414B3328();
  return swift_release();
}

uint64_t sub_24135017C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123200);
  sub_2414B47A4();
  return sub_2414B47B0();
}

uint64_t sub_2413501EC()
{
  sub_2414B4AA4();
  sub_2414B3328();
  return swift_release();
}

uint64_t sub_241350250(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123200);
  sub_2414B47A4();
  if ((*(_BYTE *)(a1 + 9) & 1) == 0)
  {
    sub_2414B45DC();
    sub_2414B45E8();
  }
  sub_2414B45DC();
  sub_2414B45DC();
  sub_2414B45E8();
  return sub_2414B47B0();
}

uint64_t sub_241350338(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  long double v4;
  uint64_t v5;
  long double v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257123200);
  result = sub_2414B47B0();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
  {
    sub_2414B47A4();
    sub_2414B47A4();
    result = sub_2414B45F4();
    if ((result & 1) != 0)
    {
      sub_2414B47A4();
      v4 = fmod(v6, 6.28318531);
      fmod(v4 + 6.28318531, 6.28318531);
      sub_2414B47B0();
      v5 = sub_2414B4AA4();
      MEMORY[0x24BDAC7A8](v5);
      sub_2414B3328();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_241350494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24134FB7C(a1, a2);
}

uint64_t sub_2413504D4(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v3 = sub_2414B4B94();
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4BB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)v1 = a1;
  sub_2412FFFC8();
  v10 = (void *)sub_2414B5230();
  v11 = *(_QWORD *)(v1 + 8);
  v12 = swift_allocObject();
  *(double *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_241351148;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_1;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_2414B4BAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24135117C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
  sub_2414B5464();
  MEMORY[0x242694ABC](0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

CGFloat sub_2413506D8@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double *v3;
  CGFloat v7;
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;
  CGAffineTransform v12;

  v7 = *v3;
  CGAffineTransformMakeTranslation(&v12, a2 * 0.5, a3 * 0.5);
  CGAffineTransformRotate(&v11, &v12, v7);
  v12 = v11;
  CGAffineTransformTranslate(&v11, &v12, -(a2 * 0.5), -(a3 * 0.5));
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v11.a;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

double sub_241350798@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_2413507A4(double *a1)
{
  return sub_2413504D4(*a1);
}

uint64_t (*sub_2413507AC(_QWORD *a1))(double *a1)
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *v1;
  return sub_2413507C8;
}

uint64_t sub_2413507C8(double *a1)
{
  return sub_2413504D4(*a1);
}

uint64_t sub_2413507F0()
{
  sub_2413510E0();
  return sub_2414B3370();
}

uint64_t sub_241350858()
{
  sub_2413510E0();
  return sub_2414B334C();
}

uint64_t sub_2413508C0()
{
  sub_2413510E0();
  return sub_2414B3364();
}

void sub_241350918()
{
  sub_2414B3184();
  __break(1u);
}

uint64_t View.rotating(duration:isAnimating:isClockwise:)(char a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = type metadata accessor for MCUINamespace(0, a3, a3, a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 - v12;
  View.mcui.getter(a3, (uint64_t)&v15 - v12);
  MCUINamespace<A>.rotating(duration:isAnimating:isClockwise:)(a1, a2, v10, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_2413509FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_241350A50();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_241350A50()
{
  unint64_t result;

  result = qword_2571231D0;
  if (!qword_2571231D0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBCA8, &type metadata for RotationEffectModifier);
    atomic_store(result, (unint64_t *)&qword_2571231D0);
  }
  return result;
}

uint64_t destroy for RotationEffectModifier()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RotationEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RotationEffectModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RotationEffectModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RotationEffectModifier()
{
  return &type metadata for RotationEffectModifier;
}

uint64_t sub_241350CDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241350CF0()
{
  uint64_t v0;

  return sub_24135002C(v0 + 16);
}

uint64_t sub_241350CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571231E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241350D40(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241350D8C()
{
  return sub_2413500B8();
}

unint64_t sub_241350D94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123210;
  if (!qword_257123210)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571231E8);
    v2[0] = sub_241350E00();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123210);
  }
  return result;
}

unint64_t sub_241350E00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123218;
  if (!qword_257123218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571231E0);
    v2[0] = sub_2412C8FC4(&qword_257123220, &qword_257123208, MEMORY[0x24BDEFB78]);
    v2[1] = sub_241350E84();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123218);
  }
  return result;
}

unint64_t sub_241350E84()
{
  unint64_t result;

  result = qword_257123228;
  if (!qword_257123228)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBD98, &type metadata for RotationEffect);
    atomic_store(result, (unint64_t *)&qword_257123228);
  }
  return result;
}

uint64_t sub_241350ECC()
{
  return sub_2413501EC();
}

unint64_t sub_241350ED4()
{
  unint64_t result;

  result = qword_257123238;
  if (!qword_257123238)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF3BD0], MEMORY[0x24BDF3BC8]);
    atomic_store(result, (unint64_t *)&qword_257123238);
  }
  return result;
}

uint64_t sub_241350F1C(uint64_t a1)
{
  uint64_t v1;

  return sub_241350338(a1, v1 + 16);
}

uint64_t sub_241350F24()
{
  uint64_t v0;

  return sub_24134FA88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241350F3C()
{
  uint64_t v0;

  return sub_241350250(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241350F54()
{
  return sub_24135017C();
}

_QWORD *initializeBufferWithCopyOfBuffer for RotationEffect(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for RotationEffect(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for RotationEffect(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RotationEffect()
{
  return &type metadata for RotationEffect;
}

uint64_t sub_241351020()
{
  return sub_2412C8FC4(&qword_257123248, &qword_257123240, MEMORY[0x24BDEDA68]);
}

unint64_t sub_241351050()
{
  unint64_t result;

  result = qword_257123250;
  if (!qword_257123250)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEADB0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_257123250);
  }
  return result;
}

unint64_t sub_241351098()
{
  unint64_t result;

  result = qword_257123258;
  if (!qword_257123258)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBD08, &type metadata for RotationEffect);
    atomic_store(result, (unint64_t *)&qword_257123258);
  }
  return result;
}

unint64_t sub_2413510E0()
{
  unint64_t result;

  result = qword_257123260;
  if (!qword_257123260)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBD58, &type metadata for RotationEffect);
    atomic_store(result, (unint64_t *)&qword_257123260);
  }
  return result;
}

uint64_t sub_241351124()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241351148()
{
  return sub_2414B2DAC();
}

unint64_t sub_24135117C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254384690;
  if (!qword_254384690)
  {
    v1 = sub_2414B4B94();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_254384690);
  }
  return result;
}

uint64_t sub_2413511C4()
{
  return sub_241350F24();
}

BOOL static CircularProgressView.LineStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CircularProgressView.LineStyle.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t CircularProgressView.LineStyle.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t CircularProgressView.init(value:trackColor:progressColor:lineWidth:lineStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  char v6;

  v6 = *a4;
  *(_DWORD *)a5 = result;
  *(_BYTE *)(a5 + 4) = BYTE4(result) & 1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(double *)(a5 + 24) = a6;
  *(_BYTE *)(a5 + 32) = v6;
  return result;
}

uint64_t CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  char v5;

  v5 = *a3;
  *(_DWORD *)a4 = result;
  *(_BYTE *)(a4 + 4) = BYTE4(result) & 1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = 0;
  *(double *)(a4 + 24) = a5;
  *(_BYTE *)(a4 + 32) = v5;
  return result;
}

uint64_t CircularProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  float v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v36 = a1;
  v35 = sub_2414B391C();
  v31 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123268);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)v30 - v5;
  v6 = *(float *)v1;
  v7 = *(_BYTE *)(v1 + 4);
  v9 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_BYTE *)(v1 + 32);
  if (v7)
    v12 = 0.6;
  else
    v12 = *(float *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571231C8);
  swift_allocObject();
  swift_retain();
  swift_retain();
  v13 = sub_2414B2DB8();
  v38 = 0;
  sub_2414B4798();
  v14 = v43;
  v15 = v44;
  v30[1] = v44;
  v38 = 0;
  sub_2414B4798();
  v16 = v43;
  v17 = v44;
  *(float *)&v43 = v12;
  v44 = v9;
  v45 = v8;
  v46 = v10;
  v47 = v11;
  v48 = 0x3FF0000000000000;
  v49 = v7;
  v50 = 1;
  v51 = v14;
  v52 = v15;
  v53 = v16;
  v54 = v17;
  v55 = v13;
  *(float *)&v38 = v6;
  BYTE4(v38) = v7;
  v39 = v9;
  v40 = v8;
  v41 = v10;
  v42 = v11;
  sub_241351654();
  v19 = v18;
  v21 = v20;
  LOBYTE(v15) = v22 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123270);
  sub_241351728();
  sub_2414B4348();
  sub_2412F6D78(v19, v21, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123288);
  v23 = v31;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_2414B72B0;
  sub_2414B38E0();
  v43 = v24;
  sub_2412C8030(&qword_254384048, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841E8);
  sub_2412C8FC4(&qword_2543841F0, &qword_2543841E8, MEMORY[0x24BEE12C8]);
  v25 = v33;
  v26 = v35;
  sub_2414B5464();
  v27 = (uint64_t)v32;
  v28 = (uint64_t)v37;
  sub_2414B349C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v26);
  sub_2413517D8(v28);
  return sub_2412EAEA4(v27, v36, &qword_257123268);
}

void sub_241351654()
{
  uint64_t v0;
  float v1;

  if ((*(_BYTE *)(v0 + 4) & 1) == 0 && (~*(_DWORD *)v0 & 0x7F800000) != 0)
  {
    v1 = roundf(*(float *)v0 * 100.0);
    if ((~LODWORD(v1) & 0x7F800000) != 0)
    {
      if (v1 > -9.2234e18)
      {
        if (v1 < 9.2234e18)
        {
          sub_2414B57A0();
          sub_2414B4DF8();
          return;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

unint64_t sub_241351728()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257123278;
  if (!qword_257123278)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123270);
    v2[0] = sub_241351794();
    v2[1] = sub_241350A50();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257123278);
  }
  return result;
}

unint64_t sub_241351794()
{
  unint64_t result;

  result = qword_257123280;
  if (!qword_257123280)
  {
    result = MEMORY[0x242695AE8](&unk_2414BBEF4, &type metadata for CircularProgressView.CircleView);
    atomic_store(result, (unint64_t *)&qword_257123280);
  }
  return result;
}

uint64_t sub_2413517D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257123268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24135181C()
{
  unint64_t result;

  result = qword_257123290;
  if (!qword_257123290)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for CircularProgressView.LineStyle, &type metadata for CircularProgressView.LineStyle);
    atomic_store(result, (unint64_t *)&qword_257123290);
  }
  return result;
}

uint64_t sub_241351860()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241351870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;

  v4 = *(double *)(a1 + 24);
  sub_2414B304C();
  v5 = *(_QWORD *)(a1 + 8);
  sub_2412EAEA4(a1 + 16, (uint64_t)v18, &qword_2571232A0);
  sub_2412EAEA4((uint64_t)v18, (uint64_t)&v19, &qword_2571232A0);
  if (v19)
  {
    swift_retain_n();
    sub_241304458((uint64_t)v18);
  }
  else
  {
    swift_retain_n();
    sub_2414B460C();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571232A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571232B0);
  sub_241352090();
  sub_241352158();
  sub_2414B3A84();
  *(double *)a2 = v4 * 0.5;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 72) = v9;
  *(_QWORD *)(a2 + 80) = v10;
  *(_QWORD *)(a2 + 88) = v11;
  *(_BYTE *)(a2 + 96) = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2413521DC();
  sub_241352208();
  swift_release();
  return swift_bridgeObjectRelease();
}

