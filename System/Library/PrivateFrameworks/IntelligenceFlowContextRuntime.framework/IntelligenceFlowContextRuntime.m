uint64_t static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(int a1, int a2, Swift::String_optional prefix, void *a4)
{
  void *v5;
  void *v6;

  String.fullEventName(prefix:)(prefix);
  v5 = (void *)MEMORY[0x242669178]();
  v6 = (void *)sub_23F33B4F8();
  if (a4)
  {
    sub_23F2EAA74();
    a4 = (void *)sub_23F33B498();
  }
  AnalyticsSendEvent();

  objc_autoreleasePoolPop(v5);
  return swift_bridgeObjectRelease();
}

Swift::String __swiftcall String.fullEventName(prefix:)(Swift::String_optional prefix)
{
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String result;
  Swift::String_optional v4;

  if (prefix.value._object)
  {
    v4 = prefix;
    swift_bridgeObjectRetain();
    sub_23F33B57C();
    sub_23F33B57C();
  }
  else
  {
    v4.value._countAndFlagsBits = 0xD00000000000001FLL;
    v4.value._object = (void *)0x800000023F33C190;
  }
  sub_23F33B57C();
  countAndFlagsBits = v4.value._countAndFlagsBits;
  object = v4.value._object;
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

unint64_t sub_23F2EAA74()
{
  unint64_t result;

  result = qword_254346390;
  if (!qword_254346390)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254346390);
  }
  return result;
}

id Analytics.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Analytics.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Analytics.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t default argument 1 of SiriEntityMatcherEntityDetector.init(entityTypes:maxEntityCount:)()
{
  return 5;
}

uint64_t type metadata accessor for Analytics()
{
  return objc_opt_self();
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
  sub_23F2EB130(a1, (unint64_t *)&unk_254346370);
}

void sub_23F2EAC4C()
{
  uint64_t *v0;

  sub_23F2EADE0(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23F2EAC6C(uint64_t a1, id *a2)
{
  return sub_23F2EAC80(a1, a2);
}

uint64_t sub_23F2EAC80(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  sub_23F2EB214(a1, a2);
  result = sub_23F33B504();
  *v2 = 0;
  return result;
}

uint64_t sub_23F2EACE4(uint64_t a1, id *a2)
{
  return sub_23F2EACFC(a1, a2) & 1;
}

uint64_t sub_23F2EACFC(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  sub_23F2EB214(a1, a2);
  v3 = sub_23F33B510();
  *v2 = 0;
  return v3 & 1;
}

void sub_23F2EAD6C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_23F2EAD90();
  *a1 = v2;
}

void sub_23F2EAD90()
{
  sub_23F33B51C();
  sub_23F33B4F8();
  swift_bridgeObjectRelease();
  sub_23F2EB20C();
}

void sub_23F2EADC0()
{
  uint64_t *v0;

  sub_23F2EADE0(*v0, MEMORY[0x24BEE0CD8]);
}

void sub_23F2EADE0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_23F33B51C();
  a2(v3);
  sub_23F2EB230();
  sub_23F2EB20C();
}

uint64_t sub_23F2EAE10()
{
  return sub_23F2EAE28();
}

uint64_t sub_23F2EAE28()
{
  sub_23F2EB238();
  sub_23F33B564();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2EAE60()
{
  return sub_23F2EAE78();
}

uint64_t sub_23F2EAE78()
{
  uint64_t v0;

  sub_23F2EB238();
  sub_23F33B9F0();
  sub_23F33B564();
  v0 = sub_23F33BA08();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23F2EAEE0(_QWORD *a1, _QWORD *a2)
{
  return sub_23F310A38(*a1, *a2);
}

void sub_23F2EAEF0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F2EB224();
  *v0 = sub_23F2EAF10();
  v0[1] = v1;
  sub_23F2EB20C();
}

uint64_t sub_23F2EAF14()
{
  sub_23F2EAFF0(&qword_256E699C0, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F33E4FC);
  sub_23F2EAFF0(&qword_256E699C8, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F33E49C);
  return sub_23F33B948();
}

void sub_23F2EAF98()
{
  sub_23F2EAFF0(&qword_256E699A8, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F33E460);
}

void sub_23F2EAFC4()
{
  sub_23F2EAFF0((unint64_t *)&unk_256E699B0, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F33E434);
}

void sub_23F2EAFF0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2426695B0](a3, v5), a1);
  }
  sub_23F2EB20C();
}

void sub_23F2EB02C()
{
  sub_23F2EAFF0(&qword_254346368, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F33E4D0);
}

uint64_t sub_23F2EB058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23F33B4F8();
  result = sub_23F2EB230();
  *a1 = v2;
  return result;
}

uint64_t sub_23F2EB098()
{
  sub_23F2EAFF0(&qword_256E69AB0, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E6C8);
  sub_23F2EAFF0(&qword_256E69AB8, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E61C);
  return sub_23F33B948();
}

void type metadata accessor for NSTextCheckingKey(uint64_t a1)
{
  sub_23F2EB130(a1, &qword_256E69A30);
}

void sub_23F2EB130(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_23F2EB174()
{
  sub_23F2EAFF0(&qword_256E69A38, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E5E0);
}

void sub_23F2EB1A0()
{
  sub_23F2EAFF0(&qword_256E69A40, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E5B4);
}

void sub_23F2EB1CC()
{
  sub_23F2EAFF0(&qword_256E69A48, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E650);
}

void sub_23F2EB214(uint64_t a1, id *a2)
{

}

uint64_t sub_23F2EB224()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F2EB230()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2EB238()
{
  return sub_23F33B51C();
}

uint64_t sub_23F2EB244()
{
  uint64_t result;

  result = sub_23F33B4F8();
  qword_256E69B20 = result;
  return result;
}

uint64_t BERTBasedEntityDetector.init(entityTypes:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t result;
  uint64_t v15;

  v2 = sub_23F33B1B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8((uint64_t *)&unk_2543463E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23F33E710;
  if (qword_256E69960 != -1)
    swift_once();
  v7 = (void *)qword_256E69B20;
  *(_QWORD *)(v6 + 32) = qword_256E69B20;
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_23F2EB438();
  sub_23F2EB474();
  v10 = v9;
  sub_23F33AC04();
  v11 = sub_23F33B1A4();
  v12 = sub_23F33B6E4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_23F2E8000, v11, v12, "No models have been set for NLTagger", v13, 2u);
    MEMORY[0x242669658](v13, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v10;
  return result;
}

uint64_t sub_23F2EB3F8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242669598]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23F2EB438()
{
  unint64_t result;

  result = qword_254346388;
  if (!qword_254346388)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254346388);
  }
  return result;
}

void sub_23F2EB474()
{
  id v0;
  void *v1;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for NLTagScheme(0);
  v1 = (void *)sub_23F33B5C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithTagSchemes_, v1);

  sub_23F2EBFB0();
}

uint64_t BERTBasedEntityDetector.supportedEntities.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);

  sub_23F2EB3F8(&qword_2543463C0);
  v0 = sub_23F33AF70();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F33E720;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE54358], v0);
  v6(v5 + v2, *MEMORY[0x24BE54370], v0);
  return sub_23F2EBA7C(v4);
}

void BERTBasedEntityDetector.detectEntities(text:)(uint64_t a1, uint64_t a2)
{
  void **v2;
  uint64_t v3;

  sub_23F2EBE84(a1, a2, *v2);
  if (qword_256E69960 != -1)
    v3 = swift_once();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F33B774();
  sub_23F2EBFB0();
}

uint64_t sub_23F2EB67C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  id v33;
  uint64_t v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v12 = sub_23F33AD30();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43 = a3;
    v44 = a5;
    v45 = a6;
    v16 = qword_256E69968;
    v17 = a1;
    if (v16 != -1)
      swift_once();
    sub_23F33B51C();
    if (a5 != sub_23F2EBF4C() || v6 != v18)
    {
      v20 = sub_23F2EBF24();
      sub_23F2EBF64();
      sub_23F2EBF5C();
      if ((v20 & 1) != 0)
        goto LABEL_33;
      v21 = qword_256E69970;
      v42 = v17;
      if (v21 != -1)
        swift_once();
      sub_23F33B51C();
      if (v20 != sub_23F2EBF4C() || v6 != v22)
      {
        v41 = sub_23F2EBF24();
        v24 = v42;

        sub_23F2EBF64();
        sub_23F2EBF5C();
        if ((v41 & 1) == 0)
        {
          v25 = qword_256E69978;
          v17 = v24;
          if (v25 != -1)
            swift_once();
          sub_23F33B51C();
          if (v24 != (id)sub_23F2EBF4C() || v6 != v26)
          {
            v28 = sub_23F2EBF24();

            sub_23F2EBF64();
            sub_23F2EBF5C();
            if ((v28 & 1) != 0)
            {
LABEL_37:
              v39 = sub_23F2EBF7C();
              MEMORY[0x242668C20](v39);
              sub_23F2EBF5C();
              sub_23F33AD18();
              v35 = (unsigned int *)MEMORY[0x24BE540B8];
              goto LABEL_34;
            }
            v29 = qword_256E69980;
            v42 = v17;
            if (v29 != -1)
              swift_once();
            sub_23F33B51C();
            if (v28 != sub_23F2EBF4C() || v6 != v30)
            {
              v32 = sub_23F2EBF24();
              v33 = v42;

              sub_23F2EBF64();
              sub_23F2EBF5C();
              if ((v32 & 1) == 0)
              {

                return 1;
              }
              goto LABEL_37;
            }
          }

          sub_23F2EBFA4();
          goto LABEL_37;
        }
LABEL_33:
        v34 = sub_23F2EBF7C();
        MEMORY[0x242668C20](v34);
        sub_23F2EBF5C();
        sub_23F33AD18();
        v35 = (unsigned int *)MEMORY[0x24BE540D8];
LABEL_34:
        (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *v35, v12);
        sub_23F31C778();
        v36 = *(_QWORD *)(*a4 + 16);
        sub_23F31C7E8(v36);
        v37 = *a4;
        *(_QWORD *)(v37 + 16) = v36 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v37+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v36, v15, v12);

        return 1;
      }

    }
    sub_23F2EBFA4();
    goto LABEL_33;
  }
  return 1;
}

uint64_t sub_23F2EB994()
{
  return BERTBasedEntityDetector.supportedEntities.getter();
}

void sub_23F2EB9A8(uint64_t a1, uint64_t a2)
{
  BERTBasedEntityDetector.detectEntities(text:)(a1, a2);
}

uint64_t sub_23F2EB9CC()
{
  uint64_t result;

  result = sub_23F33B4F8();
  qword_256E6D0E0 = result;
  return result;
}

uint64_t sub_23F2EB9F8()
{
  uint64_t result;

  result = sub_23F33B4F8();
  qword_256E6D0E8 = result;
  return result;
}

uint64_t sub_23F2EBA24()
{
  uint64_t result;

  result = sub_23F33B4F8();
  qword_256E6D0F0 = result;
  return result;
}

uint64_t sub_23F2EBA50()
{
  uint64_t result;

  result = sub_23F33B4F8();
  qword_256E6D0F8 = result;
  return result;
}

uint64_t sub_23F2EBA7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_23F33AF70();
  v30 = *(_QWORD *)(v2 - 8);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  if (!*(_QWORD *)(a1 + 16))
  {
    v9 = MEMORY[0x24BEE4B08];
    goto LABEL_16;
  }
  sub_23F2EB3F8(&qword_254346398);
  result = sub_23F2EBF6C();
  v9 = result;
  v27 = *(_QWORD *)(a1 + 16);
  if (!v27)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v9;
  }
  v10 = 0;
  v29 = result + 56;
  v11 = *(unsigned __int8 *)(v30 + 80);
  v25 = a1;
  v26 = a1 + ((v11 + 32) & ~v11);
  while (v10 < *(_QWORD *)(a1 + 16))
  {
    v12 = *(_QWORD *)(v30 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
    v13(v7, v26 + v12 * v10, v2);
    sub_23F2EBEE4(&qword_254346208, MEMORY[0x24BE543A8]);
    v14 = sub_23F33B4BC() & ~(-1 << *(_BYTE *)(v9 + 32));
    sub_23F2EBF8C();
    if ((v17 & v16) != 0)
    {
      v28 = v10;
      v19 = ~v18;
      while (1)
      {
        v13(v5, *(_QWORD *)(v9 + 48) + v14 * v12, v2);
        sub_23F2EBEE4(&qword_254346210, MEMORY[0x24BE543B0]);
        v20 = sub_23F33B4EC();
        v21 = *(void (**)(char *, uint64_t))(v30 + 8);
        v21(v5, v2);
        if ((v20 & 1) != 0)
          break;
        v14 = (v14 + 1) & v19;
        sub_23F2EBF8C();
        if ((v16 & v17) == 0)
        {
          a1 = v25;
          v10 = v28;
          goto LABEL_10;
        }
      }
      result = ((uint64_t (*)(char *, uint64_t))v21)(v7, v2);
      a1 = v25;
      v10 = v28;
    }
    else
    {
LABEL_10:
      *(_QWORD *)(v29 + 8 * v15) = v17 | v16;
      result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(*(_QWORD *)(v9 + 48) + v14 * v12, v7, v2);
      v22 = *(_QWORD *)(v9 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
        goto LABEL_18;
      *(_QWORD *)(v9 + 16) = v24;
    }
    if (++v10 == v27)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_23F2EBCD8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_25;
  }
  sub_23F2EB3F8(&qword_256E69B28);
  result = sub_23F2EBF6C();
  v3 = result;
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  v4 = 0;
  v5 = result + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    sub_23F33B9F0();
    swift_bridgeObjectRetain();
    sub_23F33B564();
    result = sub_23F33BA08();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = *(_QWORD *)(v3 + 48);
      v15 = (_QWORD *)(v14 + 16 * v10);
      v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (result = sub_23F2EBF40(), (result & 1) != 0))
      {
LABEL_11:
        result = sub_23F2EBF5C();
        goto LABEL_22;
      }
      v17 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v17;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          result = sub_23F2EBF40();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
    v20 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    *v20 = v8;
    v20[1] = v7;
    v21 = *(_QWORD *)(v3 + 16);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_23F2EBE84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_23F33B4F8();
  objc_msgSend(a3, sel_setString_, v4);

}

uint64_t sub_23F2EBEC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F2EB67C(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

ValueMetadata *type metadata accessor for BERTBasedEntityDetector()
{
  return &type metadata for BERTBasedEntityDetector;
}

uint64_t sub_23F2EBEE4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23F33AF70();
    result = MEMORY[0x2426695B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F2EBF24()
{
  return sub_23F33B978();
}

uint64_t sub_23F2EBF40()
{
  return sub_23F33B978();
}

uint64_t sub_23F2EBF4C()
{
  return sub_23F33B51C();
}

uint64_t sub_23F2EBF5C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2EBF64()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2EBF6C()
{
  return sub_23F33B810();
}

uint64_t sub_23F2EBF7C()
{
  return sub_23F33B5A0();
}

uint64_t sub_23F2EBFA4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F2EBFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23F2EBFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23F2EBFEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EBFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EE774();
  return sub_23F2EBFC0(a1, a2, v4);
}

uint64_t sub_23F2EC028()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EC034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EE774();
  return sub_23F2EBFCC(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NowPlayingPlaybackState(uint64_t a1)
{
  return sub_23F2EC4D4(a1, qword_256E69B90);
}

uint64_t sub_23F2EC080()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EC08C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for MotionState(uint64_t a1)
{
  return sub_23F2EC4D4(a1, qword_256E69C20);
}

uint64_t sub_23F2EC0AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EC0B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for BluetoothDeviceType(uint64_t a1)
{
  return sub_23F2EC4D4(a1, qword_256E69CB0);
}

void sub_23F2EC0D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = sub_23F2EE774();
  if ((*(_DWORD *)(*(_QWORD *)(v5 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v6 = v5;
    v7 = sub_23F33A9E8();
    sub_23F2EE73C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    v8 = *(int *)(v6 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    sub_23F2EE690();
    sub_23F2EE818();
    if (sub_23F2EE680())
    {
      v12 = sub_23F2EB3F8(qword_256E69B30);
      sub_23F2EE5FC(v12);
    }
    else
    {
      sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
      sub_23F2EE640();
    }
  }
  sub_23F2EE710();
}

uint64_t sub_23F2EC198(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = sub_23F2EE774();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(v3 + 24);
  v5 = sub_23F33A97C();
  result = sub_23F2EBFC0(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

void sub_23F2EC22C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = sub_23F2EE700();
  sub_23F2EE73C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16));
  sub_23F2EE774();
  sub_23F2EE7E8();
  v3 = v2[1];
  *v4 = *v2;
  v4[1] = v3;
  sub_23F2EE690();
  sub_23F2EE818();
  if (sub_23F2EE680())
  {
    v5 = sub_23F2EB3F8(qword_256E69B30);
    sub_23F2EE5FC(v5);
  }
  else
  {
    sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
    sub_23F2EE640();
  }
  sub_23F2EE710();
}

void sub_23F2EC2A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_23F2EE700();
  sub_23F2EE73C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  v1 = sub_23F2EE774();
  sub_23F2EE7E8();
  *v3 = *v2;
  v3[1] = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = sub_23F2EE690();
  v5 = sub_23F2EBFC0(v1, 1, v4);
  v6 = sub_23F2EE680();
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24));
      goto LABEL_7;
    }
    sub_23F2EE7F8(v7);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F2EB3F8(qword_256E69B30);
    sub_23F2EE5FC(v8);
    goto LABEL_7;
  }
  sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23F2EE640();
LABEL_7:
  sub_23F2EE710();
}

uint64_t sub_23F2EC370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23F2EE700();
  sub_23F2EE73C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  v3 = sub_23F2EE774();
  *(_OWORD *)(v0 + *(int *)(v3 + 20)) = *(_OWORD *)(v1 + *(int *)(v3 + 20));
  v4 = sub_23F2EE690();
  if (sub_23F2EE680())
  {
    v5 = sub_23F2EB3F8(qword_256E69B30);
    sub_23F2EE5FC(v5);
  }
  else
  {
    sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
    sub_23F2EE640();
  }
  return v0;
}

void sub_23F2EC3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_23F2EE700();
  sub_23F2EE73C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  v1 = sub_23F2EE774();
  sub_23F2EE7E8();
  v3 = *v2;
  v4 = v2[1];
  *v5 = v3;
  v5[1] = v4;
  swift_bridgeObjectRelease();
  v6 = sub_23F2EE690();
  v7 = sub_23F2EBFC0(v1, 1, v6);
  v8 = sub_23F2EE680();
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 40));
      goto LABEL_7;
    }
    sub_23F2EE7F8(v9);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = sub_23F2EB3F8(qword_256E69B30);
    sub_23F2EE5FC(v10);
    goto LABEL_7;
  }
  sub_23F2EE5C8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  sub_23F2EE640();
LABEL_7:
  sub_23F2EE710();
}

uint64_t sub_23F2EC4A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EC4B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for AppInFocus(uint64_t a1)
{
  return sub_23F2EC4D4(a1, qword_256E69D40);
}

uint64_t sub_23F2EC4D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F2EC504()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContextDefinition();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_23F2EC56C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  v6 = sub_23F2EB3F8(&qword_256E69DF8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = sub_23F33A514();
  sub_23F2EBFCC((uint64_t)v11, 1, 1, v13);
  sub_23F2EBFCC((uint64_t)v9, 1, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v15 = sub_23F2EE208((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v16 = objc_msgSend(a1, sel_publisherWithOptions_, v15);

  v29 = nullsub_1;
  v30 = 0;
  v17 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC44C0;
  v18 = _Block_copy(&aBlock);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v12;
  v29 = sub_23F2EE54C;
  v30 = v19;
  aBlock = v17;
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC4510;
  v20 = _Block_copy(&aBlock);
  sub_23F2EE48C(a2);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v18, v20);

  _Block_release(v20);
  _Block_release(v18);

  swift_beginAccess();
  v22 = *(void **)(v12 + 16);
  v23 = v22;
  swift_release();
  return v22;
}

void *sub_23F2EC7CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  v6 = sub_23F2EB3F8(&qword_256E69DF8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = sub_23F33A514();
  sub_23F2EBFCC((uint64_t)v11, 1, 1, v13);
  sub_23F2EBFCC((uint64_t)v9, 1, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v15 = sub_23F2EE208((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v16 = objc_msgSend(a1, sel_publisherWithOptions_, v15);

  v29 = nullsub_1;
  v30 = 0;
  v17 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC4560;
  v18 = _Block_copy(&aBlock);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v12;
  v29 = sub_23F2EE54C;
  v30 = v19;
  aBlock = v17;
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC45B0;
  v20 = _Block_copy(&aBlock);
  sub_23F2EE48C(a2);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v18, v20);

  _Block_release(v20);
  _Block_release(v18);

  swift_beginAccess();
  v22 = *(void **)(v12 + 16);
  v23 = v22;
  swift_release();
  return v22;
}

void *sub_23F2ECA2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  v6 = sub_23F2EB3F8(&qword_256E69DF8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = sub_23F33A514();
  sub_23F2EBFCC((uint64_t)v11, 1, 1, v13);
  sub_23F2EBFCC((uint64_t)v9, 1, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v15 = sub_23F2EE208((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v16 = objc_msgSend(a1, sel_publisherWithOptions_, v15);

  v29 = nullsub_1;
  v30 = 0;
  v17 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC4380;
  v18 = _Block_copy(&aBlock);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v12;
  v29 = sub_23F2EE54C;
  v30 = v19;
  aBlock = v17;
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC43D0;
  v20 = _Block_copy(&aBlock);
  sub_23F2EE48C(a2);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v18, v20);

  _Block_release(v20);
  _Block_release(v18);

  swift_beginAccess();
  v22 = *(void **)(v12 + 16);
  v23 = v22;
  swift_release();
  return v22;
}

void *sub_23F2ECC8C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  v6 = sub_23F2EB3F8(&qword_256E69DF8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = sub_23F33A514();
  sub_23F2EBFCC((uint64_t)v11, 1, 1, v13);
  sub_23F2EBFCC((uint64_t)v9, 1, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v15 = sub_23F2EE208((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v16 = objc_msgSend(a1, sel_publisherWithOptions_, v15);

  v29 = nullsub_1;
  v30 = 0;
  v17 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC4420;
  v18 = _Block_copy(&aBlock);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v12;
  v29 = sub_23F2EE54C;
  v30 = v19;
  aBlock = v17;
  v26 = 1107296256;
  v27 = sub_23F2ED1C4;
  v28 = &unk_250FC4470;
  v20 = _Block_copy(&aBlock);
  sub_23F2EE48C(a2);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v18, v20);

  _Block_release(v20);
  _Block_release(v18);

  swift_beginAccess();
  v22 = *(void **)(v12 + 16);
  v23 = v22;
  swift_release();
  return v22;
}

void *sub_23F2ECEEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void *);
  _QWORD *v27;

  sub_23F2EB3F8(&qword_256E69DF8);
  sub_23F2EE5B8();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  sub_23F33A514();
  sub_23F2EE7C0((uint64_t)v11);
  sub_23F2EE7C0((uint64_t)v9);
  v13 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v14 = sub_23F2EE208((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v15 = objc_msgSend(a1, sel_publisherWithOptions_, v14);

  v26 = (void (*)(void *))nullsub_1;
  v27 = 0;
  v16 = MEMORY[0x24BDAC760];
  v24 = MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v17 = sub_23F2EE824((uint64_t)sub_23F2ED1C4);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = v12;
  v26 = sub_23F2EE524;
  v27 = v18;
  v24 = v16;
  v25 = 1107296256;
  v19 = sub_23F2EE824((uint64_t)sub_23F2ED1C4);
  sub_23F2EE48C(a2);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v15, sel_sinkWithCompletion_receiveInput_, v17, v19);

  _Block_release(v19);
  _Block_release(v17);

  swift_beginAccess();
  v21 = *(void **)(v12 + 16);
  v22 = v21;
  swift_release();
  return v21;
}

void sub_23F2ED120(void *a1, uint64_t (*a2)(id), uint64_t a3, uint64_t a4)
{
  id v6;
  void **v7;
  void *v8;
  void *v9;

  v6 = objc_msgSend(a1, sel_eventBody);
  if (v6)
  {
    v9 = v6;
    if (a2 && (a2(v6) & 1) == 0)
    {

    }
    else
    {
      v7 = (void **)(a4 + 16);
      swift_beginAccess();
      v8 = *v7;
      *v7 = v9;

    }
  }
}

void sub_23F2ED1C4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_23F2ED214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F2EE6A0();
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE75C();
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v2);
  v3 = (id)sub_23F2EE6C4();
  v4 = objc_msgSend(v3, sel_Motion);
  v5 = sub_23F2EE77C();
  v6 = sub_23F2EE810(v5, sel_Activity);
  sub_23F2EE7A8();
  v7 = sub_23F2EC56C(v3, 0, 0);

  if (v7)
  {
    sub_23F2ED344(v8);

    sub_23F2EB3F8(&qword_256E69DD8);
    sub_23F2EE7B4();
    v9 = (__n128 *)sub_23F2EE5D8();
    v10 = sub_23F2EE788(v9, (__n128)xmmword_23F33E710);
    sub_23F2EE654(v10);
    v11 = sub_23F2EE808();
    v12 = sub_23F2EE6DC(v11);
    sub_23F2EE610(v12);
  }
  sub_23F2EE728();
}

uint64_t sub_23F2ED344(uint64_t a1)
{
  id v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = sub_23F2EE720(a1, sel_stationary);
  if ((_DWORD)v1)
  {
    v1 = sub_23F2EE720((uint64_t)v1, sel_automotive);
    if (!(_DWORD)v1)
      return 0x616E6F6974617473;
  }
  v2 = (uint64_t)sub_23F2EE720((uint64_t)v1, sel_walking);
  if ((v2 & 1) != 0)
  {
    v3 = 1802264951;
    return v3 | 0x676E6900000000;
  }
  v4 = (uint64_t)sub_23F2EE720(v2, sel_running);
  if ((v4 & 1) != 0)
  {
    v3 = 1852732786;
    return v3 | 0x676E6900000000;
  }
  v6 = (uint64_t)sub_23F2EE720(v4, sel_cycling);
  if ((v6 & 1) != 0)
  {
    v3 = 1818458467;
    return v3 | 0x676E6900000000;
  }
  v7 = (uint64_t)sub_23F2EE720(v6, sel_automotive);
  if ((v7 & 1) != 0)
    return 0x69746F6D6F747561;
  v8 = sub_23F2EE720(v7, sel_stationary);
  if ((_DWORD)v8 && (sub_23F2EE720((uint64_t)v8, sel_automotive) & 1) != 0)
    return 0xD000000000000014;
  else
    return sub_23F2EE7D0();
}

uint64_t sub_23F2ED468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F2EE49C(v1, a1);
}

uint64_t sub_23F2ED474()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F2ED214();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

void sub_23F2ED4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  int v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F2EE6A0();
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE75C();
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v2);
  v3 = (id)sub_23F2EE6C4();
  v4 = objc_msgSend(v3, sel_Media);
  v5 = sub_23F2EE77C();
  v6 = sub_23F2EE810(v5, sel_NowPlaying);
  sub_23F2EE7A8();
  v7 = sub_23F2EC7CC(v3, 0, 0);

  if (v7)
  {
    v9 = sub_23F2EE720(v8, sel_playbackState);

    sub_23F2ED5EC(v9);
    sub_23F2EB3F8(&qword_256E69DD8);
    sub_23F2EE7B4();
    v10 = (__n128 *)sub_23F2EE5D8();
    v11 = sub_23F2EE788(v10, (__n128)xmmword_23F33E710);
    sub_23F2EE654(v11);
    v12 = sub_23F2EE808();
    v13 = sub_23F2EE6DC(v12);
    sub_23F2EE610(v13);
  }
  sub_23F2EE728();
}

uint64_t sub_23F2ED5EC(int a1)
{
  if ((a1 - 1) > 4)
    return sub_23F2EE7D0();
  else
    return *(_QWORD *)&aPlaying[8 * a1 - 8];
}

uint64_t sub_23F2ED624()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F2ED4A8();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t sub_23F2ED658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE748();
  v68 = v2;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F2EE748();
  v67 = v4;
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2EE748();
  v66 = v6;
  sub_23F2EB3F8(&qword_256E69DB0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE748();
  v65 = v8;
  sub_23F2EB3F8(&qword_256E69DB8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F2EE798();
  v12 = v11 - v10;
  sub_23F2EB3F8(&qword_256E69DC0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F2EE6A0();
  sub_23F2EB3F8((uint64_t *)&unk_256E69DC8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F2EE798();
  v17 = v16 - v15;
  sub_23F2EB3F8(&qword_254346330);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F2EE798();
  v21 = v20 - v19;
  v22 = sub_23F2EE808();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F2EE798();
  v26 = (uint64_t *)(v25 - v24);
  v27 = objc_msgSend((id)BiomeLibrary(), sel_App);
  swift_unknownObjectRelease();
  v28 = objc_msgSend(v27, sel_InFocus);
  swift_unknownObjectRelease();
  v29 = sub_23F2ECA2C(v28, (uint64_t)sub_23F2EDAFC, 0);

  if (!v29)
    return MEMORY[0x24BEE4AF8];
  v30 = sub_23F2EE3E0(v29);
  if (!v31)
    return MEMORY[0x24BEE4AF8];
  v32 = v30;
  v33 = v31;
  v34 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v38 = sub_23F2EE308(v32, v33, 0);
  v39 = objc_msgSend(v38, sel_localizedName);

  sub_23F33B51C();
  v41 = v40;

  if (v41)
  {
    v42 = sub_23F2EB3F8(&qword_256E69DE0);
    sub_23F2EE6B8(v17, v43, v44, v42);
    v45 = sub_23F2EB3F8(&qword_256E69DE8);
    sub_23F2EE6B8(v0, v46, v47, v45);
    v48 = sub_23F2EB3F8(&qword_256E69DF0);
    sub_23F2EE6B8(v12, v49, v50, v48);
    v51 = sub_23F33B444();
    sub_23F2EE6B8(v65, v52, v53, v51);
    sub_23F33B45C();
    v35 = sub_23F33B474();
    v36 = 0;
  }
  else
  {
    v35 = sub_23F33B474();
    v36 = 1;
  }
  sub_23F2EBFCC(v21, v36, 1, v35);
  v54 = sub_23F33B408();
  v55 = swift_allocBox();
  v57 = v56;
  sub_23F33B3CC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v57, *MEMORY[0x24BEB9910], v54);
  *v26 = v55;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v26, *MEMORY[0x24BEB9A00], v22);
  sub_23F2EB3F8(&qword_256E69DD8);
  sub_23F33AA84();
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_23F33E710;
  v58 = sub_23F33ABD4();
  sub_23F2EE6B8(v66, v59, v60, v58);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v23 + 16))(v67, v26, v22);
  sub_23F2EBFCC(v67, 0, 1, v22);
  v61 = sub_23F33AAC0();
  sub_23F2EE6B8(v68, v62, v63, v61);
  sub_23F33AA54();
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v26, v22);
  return v37;
}

id sub_23F2EDAFC(void *a1)
{
  return objc_msgSend(a1, sel_starting);
}

uint64_t sub_23F2EDB18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F2ED658();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

void sub_23F2EDB4C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  int v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE6A0();
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE75C();
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = (id)sub_23F2EE6C4();
  v5 = objc_msgSend(v4, sel_Device);
  v6 = sub_23F2EE77C();
  v7 = sub_23F2EE810(v6, sel_Wireless);
  sub_23F2EE7A8();
  v8 = objc_msgSend(v4, sel_Bluetooth);
  sub_23F2EE77C();
  v9 = sub_23F2ECC8C(v0, (uint64_t)sub_23F2EE55C, 0);

  if (v9)
  {
    v11 = sub_23F2EE720(v10, sel_deviceType);

    sub_23F2EDCB0(v11);
    sub_23F2EB3F8(&qword_256E69DD8);
    sub_23F2EE7B4();
    v12 = (__n128 *)sub_23F2EE5D8();
    v13 = sub_23F2EE788(v12, (__n128)xmmword_23F33E710);
    sub_23F2EE654(v13);
    v14 = sub_23F2EE808();
    v15 = sub_23F2EE6DC(v14);
    sub_23F2EE610(v15);
  }
  sub_23F2EE728();
}

uint64_t sub_23F2EDCB0(int a1)
{
  int v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1 - 1;
  result = 0xD000000000000010;
  switch(v1)
  {
    case 0:
      return 0x636972656E6567;
    case 1:
    case 7:
      return result;
    case 2:
    case 5:
    case 6:
      return 0x20636972656E6567;
    case 3:
      return 0xD000000000000013;
    case 4:
      return 0xD000000000000012;
    case 8:
      v3 = 0x706F7470616CLL;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6320000000000000;
    case 9:
      return 0xD000000000000011;
    case 10:
      return 0x726576726573;
    case 11:
      return 4277328;
    case 12:
      v4 = 0x656C69626F6DLL;
      return v4 & 0xFFFFFFFFFFFFLL | 0x7020000000000000;
    case 13:
      return 0x7373656C64726F63;
    case 14:
      return 0x6D65646F6DLL;
    case 15:
      v4 = 0x737365636361;
      return v4 & 0xFFFFFFFFFFFFLL | 0x7020000000000000;
    case 16:
      return 0x74657364616568;
    case 17:
      return 0x65726673646E6168;
    case 18:
      return 0x6F68706F7263696DLL;
    case 19:
      v5 = 0x656B61657073;
      return v5 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
    case 20:
      return 0x6E6F687064616568;
    case 21:
      return 0x656C626174726F70;
    case 22:
      return 0x7265747320726163;
    case 23:
      return 0x6574732069666968;
    case 24:
      return 0x6472616F6279656BLL;
    case 25:
      return 0x6573756F6DLL;
    case 26:
      return 0x646170656D6167;
    case 27:
      v3 = 0x65746F6D6572;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6320000000000000;
    case 28:
      return 0x726F736E6573;
    case 29:
      v6 = 1818386804;
      goto LABEL_49;
    case 30:
      return 0x6165722064726163;
    case 31:
      v5 = 0x65746E697270;
      return v5 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
    case 32:
      v5 = 0x656E6E616373;
      return v5 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
    case 33:
      return 0x6172656D6163;
    case 34:
      return 0x6163206F65646976;
    case 35:
      return 0x79616C70736964;
    case 36:
      return 0x6964206F65646976;
    case 37:
      return 0xD000000000000012;
    case 38:
      return 0x20706F7420746573;
    case 39:
      return 5391190;
    case 40:
      v3 = 0x676E696D6167;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6320000000000000;
    case 41:
      return 0x746E6F6320796F74;
    case 42:
      return 0x6863746177;
    case 43:
      return 0x7265676170;
    case 44:
      v6 = 1801675114;
      goto LABEL_49;
    case 45:
      v6 = 1835820392;
LABEL_49:
      result = v6 & 0xFFFF0000FFFFFFFFLL | 0x746500000000;
      break;
    case 46:
      result = 0x73657373616C67;
      break;
    case 47:
      result = 1885614657;
      break;
    case 48:
      result = 0x687069726550656CLL;
      break;
    case 49:
      result = 0x727420656C707061;
      break;
    default:
      result = sub_23F2EE7D0();
      break;
  }
  return result;
}

uint64_t sub_23F2EE1C4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F2EDB4C();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t sub_23F2EE1F8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

id sub_23F2EE208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = v5;
  v12 = sub_23F33A514();
  v13 = 0;
  if (sub_23F2EBFC0(a1, 1, v12) != 1)
  {
    v13 = (void *)sub_23F33A4E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  if (sub_23F2EBFC0(a2, 1, v12) == 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_23F33A4E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
  v15 = objc_msgSend(v6, sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v13, v14, a3, a4, a5 & 1);

  return v15;
}

id sub_23F2EE308(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_23F33A454();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_23F2EE3E0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleID);

  if (!v2)
    return 0;
  v3 = sub_23F33B51C();

  return v3;
}

uint64_t sub_23F2EE44C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23F2EE470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F2EE480()
{
  return swift_release();
}

uint64_t sub_23F2EE48C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23F2EE49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2EE4F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23F2EE524(void *a1)
{
  uint64_t v1;

  sub_23F2ED120(a1, *(uint64_t (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23F2EE5C8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23F2EE5D8()
{
  return swift_allocObject();
}

void *sub_23F2EE5FC(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23F2EE610(uint64_t a1)
{
  uint64_t v1;

  sub_23F2EBFCC(v1, 1, 1, a1);
  return sub_23F33AA54();
}

uint64_t sub_23F2EE640()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F2EBFCC(v0, 0, 1, v1);
}

uint64_t sub_23F2EE654(uint64_t a1)
{
  uint64_t v1;

  sub_23F2EBFCC(v1, 1, 1, a1);
  return sub_23F33B414();
}

uint64_t sub_23F2EE680()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F2EBFC0(v0, 1, v1);
}

uint64_t sub_23F2EE690()
{
  return sub_23F33A97C();
}

uint64_t sub_23F2EE6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F2EBFCC(a1, 1, 1, a4);
}

uint64_t sub_23F2EE6C4()
{
  return BiomeLibrary();
}

uint64_t sub_23F2EE6DC(uint64_t a1)
{
  uint64_t v1;

  sub_23F2EBFCC(v1, 0, 1, a1);
  return sub_23F33AAC0();
}

uint64_t sub_23F2EE700()
{
  return sub_23F33A9E8();
}

id sub_23F2EE720(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F2EE73C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F2EE774()
{
  return type metadata accessor for ContextDefinition();
}

uint64_t sub_23F2EE77C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F2EE788(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_23F33ABD4();
}

uint64_t sub_23F2EE7A8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F2EE7B4()
{
  return sub_23F33AA84();
}

uint64_t sub_23F2EE7C0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFCC(a1, 1, 1, v1);
}

uint64_t sub_23F2EE7D0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23F2EE7F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_23F2EE808()
{
  return sub_23F33B420();
}

id sub_23F2EE810(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F2EE818()
{
  return swift_bridgeObjectRetain();
}

void *sub_23F2EE824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

void sub_23F2EE830(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v2 = *MEMORY[0x24BE57260];
  v3 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = sub_23F2EE774();
  v5 = a1 + *(int *)(v4 + 24);
  v6 = sub_23F33A97C();
  sub_23F2EE6B8(v5, v7, v8, v6);
  v9 = (_QWORD *)(a1 + *(int *)(v4 + 20));
  *v9 = 0x100000000000007ELL;
  v9[1] = 0x800000023F33C310;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC74E8]), sel_initWithEKOptions_, 128);
  if (v10)
  {
    *(_QWORD *)(a1 + *(int *)(type metadata accessor for CalendarProvider() + 20)) = v10;
    sub_23F2EBFB0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for CalendarProvider()
{
  uint64_t result;

  result = qword_256E69EB8;
  if (!qword_256E69EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23F2EE930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F33A9E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for ContextDefinition();
    v9 = *(int *)(v8 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(int *)(v8 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F33A97C();
    swift_bridgeObjectRetain();
    if (sub_23F2EBFC0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F2EB3F8(qword_256E69B30);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      sub_23F2EBFCC((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(a3 + 20);
    v20 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v20;
    v21 = v20;
  }
  return a1;
}

void sub_23F2EEA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for ContextDefinition();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 24);
  v7 = sub_23F33A97C();
  if (!sub_23F2EBFC0(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

uint64_t sub_23F2EEB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for ContextDefinition();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(v7 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23F33A97C();
  swift_bridgeObjectRetain();
  if (sub_23F2EBFC0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    sub_23F2EBFCC((uint64_t)v13, 0, 1, v15);
  }
  v17 = *(int *)(a3 + 20);
  v18 = *(void **)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  v19 = v18;
  return a1;
}

uint64_t sub_23F2EEC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for ContextDefinition();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(int *)(v7 + 24);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_23F33A97C();
  v15 = sub_23F2EBFC0((uint64_t)v12, 1, v14);
  v16 = sub_23F2EBFC0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  sub_23F2EBFCC((uint64_t)v12, 0, 1, v14);
LABEL_7:
  v19 = *(int *)(a3 + 20);
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  return a1;
}

uint64_t sub_23F2EED94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for ContextDefinition();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F33A97C();
  if (sub_23F2EBFC0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    sub_23F2EBFCC((uint64_t)v9, 0, 1, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F2EEE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for ContextDefinition();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = *(int *)(v7 + 24);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_23F33A97C();
  v17 = sub_23F2EBFC0((uint64_t)v14, 1, v16);
  v18 = sub_23F2EBFC0((uint64_t)v15, 1, v16);
  if (!v17)
  {
    v19 = *(_QWORD *)(v16 - 8);
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  sub_23F2EBFCC((uint64_t)v14, 0, 1, v16);
LABEL_7:
  v21 = *(int *)(a3 + 20);
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  return a1;
}

uint64_t sub_23F2EEFE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2EEFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F2EE774();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F2EBFC0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F2EF068()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F2EF074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F2EE774();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F2EBFCC(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F2EBFB0();
  }
}

uint64_t sub_23F2EF0DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContextDefinition();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F2EF150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F2EE748();
  v46 = v1;
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE748();
  v45 = v3;
  v4 = sub_23F33AA84();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  v13 = sub_23F33B420();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = sub_23F2EF524();
  sub_23F2EF698(v20, (uint64_t)v12);
  if (sub_23F2EBFC0((uint64_t)v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23F2F0794((uint64_t)v12, &qword_256E69DA0);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v42 = v6;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    v22 = sub_23F2EFC10(v20);
    swift_bridgeObjectRelease();
    sub_23F2EB3F8(&qword_256E69EF8);
    v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v41 = *(_QWORD *)(v14 + 72);
    v24 = swift_allocObject();
    v25 = v14;
    *(_OWORD *)(v24 + 16) = xmmword_23F33E710;
    v39 = v19;
    sub_23F2F0850(v24 + v23, (uint64_t)v19);
    v47 = v22;
    sub_23F3095C0();
    v26 = v47;
    v27 = *(_QWORD *)(v47 + 16);
    if (v27)
    {
      v40 = v25;
      v47 = MEMORY[0x24BEE4AF8];
      sub_23F2F2CF4();
      v38 = v26;
      v28 = v26 + v23;
      do
      {
        sub_23F2F0850((uint64_t)v17, v28);
        v29 = sub_23F33ABD4();
        sub_23F2EE6B8(v45, v30, v31, v29);
        sub_23F2F0850((uint64_t)v10, (uint64_t)v17);
        sub_23F2EBFCC((uint64_t)v10, 0, 1, v13);
        v32 = sub_23F33AAC0();
        sub_23F2EE6B8(v46, v33, v34, v32);
        sub_23F33AA54();
        v35 = *(void (**)(char *, uint64_t))(v40 + 8);
        v35(v17, v13);
        v21 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F2F2CF4();
          v21 = v47;
        }
        v36 = *(_QWORD *)(v21 + 16);
        if (v36 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_23F2F2CF4();
          v21 = v47;
        }
        *(_QWORD *)(v21 + 16) = v36 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v21+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v36, v42, v44);
        v47 = v21;
        v28 += v41;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v35 = *(void (**)(char *, uint64_t))(v25 + 8);
      v21 = MEMORY[0x24BEE4AF8];
    }
    v35(v39, v13);
  }
  return v21;
}

uint64_t sub_23F2EF524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_23F33A514();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  sub_23F33A4FC();
  v9 = *(int *)(type metadata accessor for CalendarProvider() + 20);
  v10 = *(void **)(v0 + v9);
  v11 = (void *)sub_23F33A4E4();
  sub_23F33A4D8();
  v12 = (void *)sub_23F33A4E4();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  v14 = objc_msgSend(v10, sel_predicateForEventsWithStartDate_endDate_calendars_, v11, v12, 0);

  v15 = objc_msgSend(*(id *)(v1 + v9), sel_eventsMatchingPredicate_, v14);
  sub_23F2F0818(0, &qword_256E69F30);
  v16 = sub_23F33B5D0();

  v13(v8, v2);
  return v16;
}

uint64_t sub_23F2EF698@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void (*v28)(char *, char *, uint64_t);
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  void *v32;
  uint64_t result;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;

  v56 = sub_23F2EB3F8(&qword_256E69F18);
  v4 = MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v48 - v6;
  v8 = sub_23F33A514();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - v13;
  v15 = sub_23F2EB3F8(&qword_256E69DF8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (void (*)(char *, char *, uint64_t))((char *)&v48 - v19);
  v52 = sub_23F2EB3F8(&qword_256E69F20);
  v21 = MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v54 = (uint64_t)&v48 - v23;
  if (!(a1 >> 62))
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v47 = sub_23F33B420();
    return sub_23F2EBFCC(a2, 1, 1, v47);
  }
  swift_bridgeObjectRetain();
  if (!sub_23F33B918())
    goto LABEL_12;
LABEL_3:
  v51 = a2;
  sub_23F30C14C(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
    v25 = (id)MEMORY[0x242668F08](0, a1);
  else
    v25 = *(id *)(a1 + 32);
  v26 = v25;
  swift_bridgeObjectRelease();
  v57 = v26;
  v27 = objc_msgSend(v26, sel_startDate);
  v28 = v20;
  if (!v27)
  {
LABEL_15:
    sub_23F2EBFCC((uint64_t)v28, 1, 1, v8);
    goto LABEL_16;
  }
  v29 = v27;
  sub_23F33A4F0();

  v30 = (void (*)(char *, char *, uint64_t))v9[4];
  v30((char *)v20, v14, v8);
  sub_23F2EBFCC((uint64_t)v20, 0, 1, v8);
  if (sub_23F2EBFC0((uint64_t)v20, 1, v8) == 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v31 = objc_msgSend(v57, sel_endDate);
  if (!v31)
  {
LABEL_17:
    result = sub_23F2EBFCC((uint64_t)v18, 1, 1, v8);
    goto LABEL_18;
  }
  v32 = v31;
  sub_23F33A4F0();

  v30(v18, v14, v8);
  sub_23F2EBFCC((uint64_t)v18, 0, 1, v8);
  result = sub_23F2EBFC0((uint64_t)v18, 1, v8);
  if ((_DWORD)result != 1)
  {
    v28 = (void (*)(char *, char *, uint64_t))v9[2];
    v28(v14, (char *)v20, v8);
    v28(v12, v18, v8);
    sub_23F2F070C();
    v34 = sub_23F33B4E0();
    v35 = (void (*)(char *, uint64_t))v9[1];
    v35(v12, v8);
    v35(v14, v8);
    if ((v34 & 1) != 0)
    {
      v36 = (char *)v20;
      v49 = v18;
      v50 = (char *)v20;
      v37 = v18;
      v39 = v55;
      v38 = v56;
      v40 = &v7[*(int *)(v56 + 48)];
      v28(v7, v36, v8);
      v28(v40, v37, v8);
      v41 = &v39[*(int *)(v38 + 48)];
      v28(v39, v7, v8);
      v28(v41, v40, v8);
      v42 = (uint64_t)v53;
      v30(v53, v39, v8);
      v35(v41, v8);
      v43 = &v39[*(int *)(v38 + 48)];
      v30(v39, v7, v8);
      v30(v43, v40, v8);
      v30((char *)(v42 + *(int *)(v52 + 36)), v43, v8);
      v35(v39, v8);
      v44 = v54;
      sub_23F2F074C(v42, v54);
      v35(v49, v8);
      v35(v50, v8);
      sub_23F33A4FC();
      sub_23F2F02C8((uint64_t)v14);
      v35(v14, v8);
      sub_23F2F0794(v44, &qword_256E69F20);
      v45 = v51;
      sub_23F33B414();

      v46 = sub_23F33B420();
      return sub_23F2EBFCC(v45, 0, 1, v46);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_23F2EFC10(unint64_t a1)
{
  uint64_t *v1;
  void (**v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t, _QWORD, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void (**v45)(uint64_t, _QWORD, uint64_t);
  void (*v46)(uint64_t, uint64_t, uint64_t);
  char *v47;
  unint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t *v65;
  id v66;
  char *v67;
  unsigned int v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void (**v74)(uint64_t, _QWORD, uint64_t);
  char *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;

  v4 = sub_23F2EB3F8(&qword_256E69F00);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v7);
  v76 = (uint64_t *)((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_23F33B420();
  v10 = *(void (***)(uint64_t, _QWORD, uint64_t))(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v65 = (uint64_t *)((char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)&v64 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v67 = (char *)&v64 - v15;
  v78 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease();
    return v78;
  }
  swift_bridgeObjectRetain();
  if (!sub_23F33B918())
    goto LABEL_26;
LABEL_3:
  sub_23F30C14C(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
    v17 = (id)MEMORY[0x242668F08](0, a1);
  else
    v17 = *(id *)(a1 + 32);
  v18 = v17;
  swift_bridgeObjectRelease();
  v66 = v18;
  v19 = sub_23F2F063C(v66);
  v74 = v10;
  if (v19)
  {
    v20 = v19;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_23F33B918();
      if (v21)
        goto LABEL_8;
    }
    else
    {
      v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21)
      {
LABEL_8:
        if (v21 < 1)
        {
          __break(1u);
          goto LABEL_40;
        }
        v22 = 0;
        v70 = v20 & 0xC000000000000001;
        v69 = *MEMORY[0x24BEB9950];
        v23 = MEMORY[0x24BEE4AF8];
        v68 = *MEMORY[0x24BEB9A00];
        v72 = v20;
        v73 = v9;
        v71 = v21;
        do
        {
          if (v70)
            v24 = (id)MEMORY[0x242668F08](v22, v20);
          else
            v24 = *(id *)(v20 + 8 * v22 + 32);
          v25 = v24;
          v26 = sub_23F2F06B0(v24, (SEL *)&selRef_emailAddress);
          v28 = v27;
          v29 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
          v30 = 1;
          sub_23F30B408(v26, v28, 1);
          v32 = v31;
          v33 = objc_msgSend(v25, sel_nameComponents);
          v77 = v23;
          if (v33)
          {
            v34 = v33;
            sub_23F33A424();

            v30 = 0;
          }
          v35 = sub_23F33A430();
          sub_23F2EBFCC((uint64_t)v6, v30, 1, v35);
          v36 = sub_23F33B408();
          v37 = swift_allocBox();
          v39 = v38;
          v40 = sub_23F2F06B0(v25, (SEL *)&selRef_name);
          v42 = v41;
          v43 = objc_allocWithZone(MEMORY[0x24BDD9F30]);
          sub_23F2F04D8(v32, (uint64_t)v6, v40, v42, 0, 0, 0, 0, 0);
          sub_23F33B3D8();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v39, v69, v36);
          v44 = (uint64_t)v76;
          *v76 = v37;
          v9 = v73;
          v45 = v74;
          v74[13](v44, v68, v73);
          sub_23F2EBFCC(v44, 0, 1, v9);

          if (sub_23F2EBFC0(v44, 1, v9) == 1)
          {
            sub_23F2F0794(v44, &qword_256E69DA0);
            v23 = v77;
          }
          else
          {
            v46 = v45[4];
            v47 = v67;
            v46((uint64_t)v67, v44, v9);
            v46((uint64_t)v75, (uint64_t)v47, v9);
            v23 = v77;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v23 = sub_23F30B624();
            v48 = *(_QWORD *)(v23 + 16);
            if (v48 >= *(_QWORD *)(v23 + 24) >> 1)
              v23 = sub_23F30B624();
            *(_QWORD *)(v23 + 16) = v48 + 1;
            v46(v23+ ((*((unsigned __int8 *)v45 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v45 + 80))+ (_QWORD)v45[9] * v48, (uint64_t)v75, v9);
          }
          ++v22;
          v20 = v72;
        }
        while (v71 != v22);
      }
    }
    swift_bridgeObjectRelease_n();
  }
  sub_23F3095C0();
  v49 = v66;
  v50 = objc_msgSend(v66, sel_structuredLocation);
  if (!v50)
  {
LABEL_37:

    return v78;
  }
  v18 = v50;
  v51 = objc_msgSend(v50, sel_geoLocation);
  if (!v51)
  {

    goto LABEL_37;
  }
  v52 = v51;
  v53 = sub_23F33B408();
  v54 = swift_allocBox();
  v56 = v55;
  sub_23F2F0818(0, (unint64_t *)&qword_256E69F08);
  v57 = sub_23F2F06B0(v18, (SEL *)&selRef_title);
  v59 = v58;
  v10 = v52;
  v60 = v57;
  v2 = v74;
  sub_23F2F040C(v10, v60, v59, 0);
  sub_23F33B3FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v56, *MEMORY[0x24BEB9968], v53);
  v1 = v65;
  *v65 = v54;
  v2[13]((uint64_t)v1, *MEMORY[0x24BEB9A00], v9);
  v61 = v78;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_40:
    v61 = sub_23F30B624();
  v62 = *(_QWORD *)(v61 + 16);
  if (v62 >= *(_QWORD *)(v61 + 24) >> 1)
    v61 = sub_23F30B624();
  *(_QWORD *)(v61 + 16) = v62 + 1;
  ((void (**)(uint64_t, uint64_t *, uint64_t))v2)[4](v61+ ((*((unsigned __int8 *)v2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v2 + 80))+ (_QWORD)v2[9] * v62, v1, v9);

  return v61;
}

uint64_t sub_23F2F02C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_23F2EB3F8(&qword_256E69F20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F33A514();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2F070C();
  v11 = sub_23F33B4D4();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_23F2F07D0(v2, (uint64_t)v6);
  if ((v11 & 1) != 0)
    v12 = sub_23F33B4E0();
  else
    v12 = 0;
  sub_23F2F0794((uint64_t)v6, &qword_256E69F20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

id sub_23F2F040C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  if (a3)
  {
    v6 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_placemarkWithLocation_name_postalAddress_, a1, v6, a4);

  return v7;
}

uint64_t sub_23F2F04A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F2EF150();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

id sub_23F2F04D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v10 = v9;
  v16 = sub_23F33A430();
  v17 = 0;
  if (sub_23F2EBFC0(a2, 1, v16) != 1)
  {
    v17 = (void *)sub_23F33A418();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
  if (a4)
  {
    v18 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (!a7)
  {
    v19 = 0;
    if (a9)
      goto LABEL_8;
LABEL_10:
    v20 = 0;
    goto LABEL_11;
  }
  v19 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  if (!a9)
    goto LABEL_10;
LABEL_8:
  v20 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
LABEL_11:
  v21 = objc_msgSend(v10, sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, a1, v17, v18, a5, v19, v20);

  return v21;
}

uint64_t sub_23F2F063C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_attendees);

  if (!v2)
    return 0;
  sub_23F2F0818(0, &qword_256E69F10);
  v3 = sub_23F33B5D0();

  return v3;
}

uint64_t sub_23F2F06B0(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_23F33B51C();

  return v4;
}

unint64_t sub_23F2F070C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E69F28;
  if (!qword_256E69F28)
  {
    v1 = sub_23F33A514();
    result = MEMORY[0x2426695B0](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_256E69F28);
  }
  return result;
}

uint64_t sub_23F2F074C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E69F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2F0794(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F2EB3F8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23F2F07D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E69F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2F0818(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23F2F0850(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

BOOL sub_23F2F0858(double a1, double a2, double a3, double a4)
{
  CGFloat Height;
  CGFloat Width;
  CGRect v9;
  CGRect v10;

  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v9.origin.x = sub_23F2F092C();
  Height = CGRectGetHeight(v9);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0 && (*(_QWORD *)&Height & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v10.origin.x = sub_23F2F092C();
  Width = CGRectGetWidth(v10);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0 && (*(_QWORD *)&Width & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
    return 0;
  return (*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) != 0;
}

double sub_23F2F092C()
{
  double v0;

  return v0;
}

uint64_t sub_23F2F0940()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F2EB3F8(&qword_256E6A010);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33E720;
  v1 = type metadata accessor for AppInFocusMonitor();
  v2 = swift_allocObject();
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = &off_250FC46A0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 96) = &type metadata for SiriRequestContextMontior;
  *(_QWORD *)(inited + 104) = &off_250FC4798;
  v19 = MEMORY[0x24BEE4AF8];
  sub_23F2F2D28(0, 2, 0);
  sub_23F2F2D44(inited + 32, (uint64_t)v16);
  v3 = v17;
  v4 = v18;
  sub_23F2F2D88(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  sub_23F2F2DAC((uint64_t)v16);
  v5 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F2F37C8();
    v5 = v19;
  }
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
  {
    sub_23F2F2D28((char *)(v6 > 1), v7 + 1, 1);
    v5 = v19;
  }
  *(_QWORD *)(v5 + 16) = v8;
  sub_23F2F2D44(inited + 72, (uint64_t)v16);
  v9 = v17;
  v10 = v18;
  sub_23F2F2D88(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  sub_23F2F2DAC((uint64_t)v16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_23F2F37C8();
  v11 = v19;
  v13 = *(_QWORD *)(v19 + 16);
  v12 = *(_QWORD *)(v19 + 24);
  v14 = v13 + 1;
  if (v13 >= v12 >> 1)
  {
    sub_23F2F2D28((char *)(v12 > 1), v13 + 1, 1);
    v11 = v19;
  }
  *(_QWORD *)(v11 + 16) = v14;
  swift_release();
  swift_setDeallocating();
  return sub_23F2F2740();
}

void sub_23F2F0B0C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  ValueMetadata *v49;
  uint64_t aBlock;
  unint64_t v51;
  void *v52;
  void *v53;
  uint64_t (*v54)(uint64_t);
  _QWORD *v55;

  v47 = a5;
  v48 = a6;
  v45 = a3;
  v46 = a4;
  v44 = (_QWORD *)sub_23F33B744();
  v42 = *(v44 - 1);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F33B738();
  MEMORY[0x24BDAC7A8](v40);
  v41 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F33B48C();
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F33B1B0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AC1C();
  swift_bridgeObjectRetain_n();
  v16 = sub_23F33B1A4();
  v17 = sub_23F33B6D8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v18 = 136315394;
    v49 = &type metadata for SiriRequestContextMontior;
    aBlock = v19;
    sub_23F2EB3F8(&qword_256E6A070);
    v38 = v12;
    v20 = sub_23F33B540();
    v37 = v13;
    v49 = (ValueMetadata *)sub_23F30DBFC(v20, v21, &aBlock);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v49 = (ValueMetadata *)sub_23F30DBFC(a1, a2, &aBlock);
    sub_23F33B7BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F2E8000, v16, v17, "setting up monitor for %s.%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242669658](v19, -1, -1);
    MEMORY[0x242669658](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v22 = a1;
  sub_23F2F238C();
  aBlock = 0;
  v51 = 0xE000000000000000;
  sub_23F33B81C();
  sub_23F33B57C();
  sub_23F33B57C();
  sub_23F33B57C();
  sub_23F33B480();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_23F2F23C8();
  sub_23F2EB3F8(&qword_256E69FE0);
  sub_23F2F2408();
  sub_23F33B7EC();
  (*(void (**)(char *, _QWORD, _QWORD *))(v42 + 104))(v43, *MEMORY[0x24BEE5750], v44);
  v23 = (void *)sub_23F33B750();
  aBlock = 0;
  v51 = 0xE000000000000000;
  sub_23F33B81C();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000030;
  v51 = 0x800000023F33C420;
  sub_23F33B57C();
  v24 = aBlock;
  v25 = v51;
  v26 = objc_allocWithZone(MEMORY[0x24BE0CB48]);
  v44 = v23;
  v27 = sub_23F2F25BC(v24, v25, v44, 0);
  v28 = objc_msgSend(v45, sel_DSLPublisher);
  v29 = objc_msgSend(v28, sel_subscribeOn_, v27);
  v54 = (uint64_t (*)(uint64_t))nullsub_1;
  v55 = 0;
  v30 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v51 = 1107296256;
  v52 = sub_23F2ED1C4;
  v53 = &unk_250FC47A8;
  v31 = _Block_copy(&aBlock);
  v32 = (_QWORD *)swift_allocObject();
  v34 = v47;
  v33 = v48;
  v32[2] = v47;
  v32[3] = v33;
  v32[4] = v22;
  v32[5] = a2;
  v32[6] = v46;
  v54 = sub_23F2F3548;
  v55 = v32;
  aBlock = v30;
  v51 = 1107296256;
  v52 = sub_23F2F21F0;
  v53 = &unk_250FC47F8;
  v35 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  sub_23F2EE48C(v34);
  swift_bridgeObjectRetain();
  swift_release();
  v36 = objc_msgSend(v29, sel_sinkWithCompletion_receiveInput_, v31, v35);
  _Block_release(v35);
  _Block_release(v31);

}

void sub_23F2F10BC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock;
  unint64_t v54;
  void *v55;
  void *v56;
  uint64_t (*v57)(uint64_t);
  _QWORD *v58;

  v50 = a5;
  v51 = a6;
  v48 = a3;
  v49 = a4;
  v9 = *v6;
  v47 = (_QWORD *)sub_23F33B744();
  v45 = *(v47 - 1);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F33B738();
  MEMORY[0x24BDAC7A8](v43);
  v44 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F33B48C();
  MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F33B1B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AC1C();
  swift_bridgeObjectRetain_n();
  v18 = sub_23F33B1A4();
  v19 = sub_23F33B6D8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v41 = v15;
    v21 = v20;
    v22 = swift_slowAlloc();
    v52 = v9;
    aBlock = v22;
    *(_DWORD *)v21 = 136315394;
    sub_23F2EB3F8(&qword_256E69FE8);
    v23 = sub_23F33B540();
    v40 = v14;
    v52 = sub_23F30DBFC(v23, v24, &aBlock);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    v52 = sub_23F30DBFC(a1, a2, &aBlock);
    sub_23F33B7BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F2E8000, v18, v19, "setting up monitor for %s.%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242669658](v22, -1, -1);
    MEMORY[0x242669658](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v40);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  v25 = a1;
  sub_23F2F238C();
  aBlock = 0;
  v54 = 0xE000000000000000;
  sub_23F33B81C();
  sub_23F33B57C();
  sub_23F33B57C();
  sub_23F33B57C();
  sub_23F33B480();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_23F2F23C8();
  sub_23F2EB3F8(&qword_256E69FE0);
  sub_23F2F2408();
  sub_23F33B7EC();
  (*(void (**)(char *, _QWORD, _QWORD *))(v45 + 104))(v46, *MEMORY[0x24BEE5750], v47);
  v26 = (void *)sub_23F33B750();
  aBlock = 0;
  v54 = 0xE000000000000000;
  sub_23F33B81C();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000030;
  v54 = 0x800000023F33C420;
  sub_23F33B57C();
  v27 = aBlock;
  v28 = v54;
  v29 = objc_allocWithZone(MEMORY[0x24BE0CB48]);
  v47 = v26;
  v30 = sub_23F2F25BC(v27, v28, v47, 0);
  v31 = objc_msgSend(v48, sel_DSLPublisher);
  v32 = objc_msgSend(v31, sel_subscribeOn_, v30);
  v57 = (uint64_t (*)(uint64_t))nullsub_1;
  v58 = 0;
  v33 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v54 = 1107296256;
  v55 = sub_23F2ED1C4;
  v56 = &unk_250FC46B0;
  v34 = _Block_copy(&aBlock);
  v35 = (_QWORD *)swift_allocObject();
  v37 = v50;
  v36 = v51;
  v35[2] = v50;
  v35[3] = v36;
  v35[4] = v25;
  v35[5] = a2;
  v35[6] = v49;
  v57 = sub_23F2F2648;
  v58 = v35;
  aBlock = v33;
  v54 = 1107296256;
  v55 = sub_23F2F21F0;
  v56 = &unk_250FC4700;
  v38 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  sub_23F2EE48C(v37);
  swift_bridgeObjectRetain();
  swift_release();
  v39 = objc_msgSend(v32, sel_sinkWithCompletion_receiveInput_, v34, v38);
  _Block_release(v38);
  _Block_release(v34);

}

void sub_23F2F1668(void *a1, uint64_t (*a2)(id), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  ValueMetadata *v33;
  uint64_t v34;

  v11 = sub_23F2EB3F8((uint64_t *)&unk_254346358);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F33B1B0();
  v32 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_eventBody) & 1) == 0)
  {
    __break(1u);
    return;
  }
  v17 = objc_msgSend(a1, sel_eventBody);
  if (v17)
  {
    v18 = v17;
    if (a2)
    {
      v19 = a2(v17);

      if ((v19 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  sub_23F33AC1C();
  swift_bridgeObjectRetain_n();
  v20 = sub_23F33B1A4();
  v21 = sub_23F33B6D8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315394;
    v30 = v14;
    v33 = &type metadata for SiriRequestContextMontior;
    v34 = v23;
    sub_23F2EB3F8(&qword_256E6A070);
    v31 = v13;
    v24 = sub_23F33B540();
    v33 = (ValueMetadata *)sub_23F30DBFC(v24, v25, &v34);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    v33 = (ValueMetadata *)sub_23F30DBFC(a4, a5, &v34);
    v13 = v31;
    sub_23F33B7BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F2E8000, v20, v21, "received notification for %s.%s", (uint8_t *)v22, 0x16u);
    v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x242669658](v26, -1, -1);
    MEMORY[0x242669658](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v30);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v14);
  }
  v27 = sub_23F33B648();
  sub_23F2EBFCC((uint64_t)v13, 1, 1, v27);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = a4;
  v28[5] = a5;
  v28[6] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23F2F20B4((uint64_t)v13, (uint64_t)&unk_256E6A080, (uint64_t)v28);
  swift_release();
}

void sub_23F2F19B8(void *a1, uint64_t (*a2)(id), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v11 = sub_23F2EB3F8((uint64_t *)&unk_254346358);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F33B1B0();
  v31 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_eventBody) & 1) == 0)
  {
    __break(1u);
    return;
  }
  v17 = objc_msgSend(a1, sel_eventBody);
  if (v17)
  {
    v18 = v17;
    if (a2)
    {
      v19 = a2(v17);

      if ((v19 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  sub_23F33AC1C();
  swift_bridgeObjectRetain_n();
  v20 = sub_23F33B1A4();
  v21 = sub_23F33B6D8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v22 = 136315394;
    v29 = v14;
    v32 = type metadata accessor for AppInFocusMonitor();
    sub_23F2EB3F8(&qword_256E69FE8);
    v30 = v13;
    v23 = sub_23F33B540();
    v32 = sub_23F30DBFC(v23, v24, &v33);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    v32 = sub_23F30DBFC(a4, a5, &v33);
    v13 = v30;
    sub_23F33B7BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F2E8000, v20, v21, "received notification for %s.%s", (uint8_t *)v22, 0x16u);
    v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x242669658](v25, -1, -1);
    MEMORY[0x242669658](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v29);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v14);
  }
  v26 = sub_23F33B648();
  sub_23F2EBFCC((uint64_t)v13, 1, 1, v26);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = a4;
  v27[5] = a5;
  v27[6] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23F2F20B4((uint64_t)v13, (uint64_t)&unk_256E69FF8, (uint64_t)v27);
  swift_release();
}

uint64_t sub_23F2F1D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_23F33B1B0();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2F1D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F2F3814();
  sub_23F2F3930();
  v5 = (void *)sub_23F33B1A4();
  v6 = sub_23F33B6D8();
  if (sub_23F2F38E0(v6))
  {
    sub_23F2F3678();
    sub_23F2F38C0();
    *v4 = 136315394;
    *(_QWORD *)(v1 + 16) = &type metadata for SiriRequestContextMontior;
    sub_23F2EB3F8(&qword_256E6A070);
    v7 = sub_23F2F3950();
    v13 = sub_23F2F3944(v7, v8, v9, v10, v11, v12);
    sub_23F2F36F8(v13);
    swift_bridgeObjectRelease();
    v14 = sub_23F2F3828();
    v18 = sub_23F2F3898(v14, v15, v16, v17);
    sub_23F2F378C(v18);
    sub_23F2F3904();
    sub_23F2F3800(&dword_23F2E8000, v19, v20, "updating context cache for %s.%s");
    sub_23F2F3850();
    sub_23F2F3748();
  }
  sub_23F2F383C();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  if (qword_256E69988 != -1)
    swift_once();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v21;
  v22 = sub_23F2F38A8(v21, (uint64_t)sub_23F2F3608);
  return sub_23F2F36A4(v22, v23, v24);
}

uint64_t sub_23F2F1EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_23F33B1B0();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2F1F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F2F3814();
  sub_23F2F3930();
  v5 = (void *)sub_23F33B1A4();
  v6 = sub_23F33B6D8();
  if (sub_23F2F38E0(v6))
  {
    sub_23F2F3678();
    sub_23F2F38C0();
    *v4 = 136315394;
    *(_QWORD *)(v1 + 16) = type metadata accessor for AppInFocusMonitor();
    sub_23F2EB3F8(&qword_256E69FE8);
    v7 = sub_23F2F3950();
    v13 = sub_23F2F3944(v7, v8, v9, v10, v11, v12);
    sub_23F2F36F8(v13);
    swift_bridgeObjectRelease();
    v14 = sub_23F2F3828();
    v18 = sub_23F2F3898(v14, v15, v16, v17);
    sub_23F2F378C(v18);
    sub_23F2F3904();
    sub_23F2F3800(&dword_23F2E8000, v19, v20, "updating context cache for %s.%s");
    sub_23F2F3850();
    sub_23F2F3748();
  }
  sub_23F2F383C();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  if (qword_256E69988 != -1)
    swift_once();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v21;
  v22 = sub_23F2F38A8(v21, (uint64_t)sub_23F2F206C);
  return sub_23F2F36A4(v22, v23, v24);
}

uint64_t sub_23F2F206C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F2F20B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F33B648();
  if (sub_23F2EBFC0(a1, 1, v6) == 1)
  {
    sub_23F2F2C24(a1);
  }
  else
  {
    sub_23F33B63C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F33B618();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23F2F21F0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23F2F2238()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = (id)BiomeLibrary();
  v1 = objc_msgSend(v0, sel_App);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_InFocus);
  sub_23F2F3910();
  sub_23F2EB3F8(&qword_256E69FD0);
  v3 = sub_23F2F38FC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23F33E710;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104))(v6 + v5, *MEMORY[0x24BE57298], v3);
  sub_23F2F10BC(0x636F466E49707041, 0xEA00000000007375, v0, v6, 0, 0);

  return sub_23F2F3738();
}

uint64_t sub_23F2F233C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppInFocusMonitor()
{
  return objc_opt_self();
}

uint64_t sub_23F2F236C()
{
  return sub_23F2F2238();
}

unint64_t sub_23F2F238C()
{
  unint64_t result;

  result = qword_256E69FD8;
  if (!qword_256E69FD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E69FD8);
  }
  return result;
}

unint64_t sub_23F2F23C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6B820;
  if (!qword_256E6B820)
  {
    v1 = sub_23F33B738();
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_256E6B820);
  }
  return result;
}

unint64_t sub_23F2F2408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6B830;
  if (!qword_256E6B830)
  {
    v1 = sub_23F2F244C(&qword_256E69FE0);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256E6B830);
  }
  return result;
}

uint64_t sub_23F2F244C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426695A4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23F2F2490()
{
  id v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v0 = (id)BiomeLibrary();
  v1 = objc_msgSend(v0, sel_Siri);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_Orchestration);
  swift_unknownObjectRelease();
  v3 = objc_msgSend(v2, sel_RequestContext);
  sub_23F2F3910();
  sub_23F2EB3F8(&qword_256E69FD0);
  v4 = sub_23F2F38FC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23F33E710;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x24BE57240], v4);
  sub_23F2F0B0C(0xD000000000000012, 0x800000023F33C4E0, v0, v7, 0, 0);

  return sub_23F2F3738();
}

id sub_23F2F25BC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  void *v4;
  void *v7;
  id v8;

  v7 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_initWithIdentifier_targetQueue_waking_, v7, a3, a4 & 1);

  return v8;
}

uint64_t sub_23F2F262C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F2F263C()
{
  return swift_release();
}

uint64_t sub_23F2F2648(uint64_t a1)
{
  return sub_23F2F3554(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F2F19B8);
}

uint64_t sub_23F2F2654(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F2F35F4;
  return v6(a1);
}

uint64_t sub_23F2F26B8(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_23F2F38F0(v4);
  *v5 = v2;
  v5[1] = sub_23F2F2718;
  return v7(a1);
}

uint64_t sub_23F2F2718()
{
  uint64_t v0;

  sub_23F2F3658();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F2740()
{
  sub_23F2EB3F8(&qword_256E6A018);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23F2F2790()
{
  sub_23F2F38FC();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

void sub_23F2F27D0(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F27DC(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F27E8(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

char *sub_23F2F27F4(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_23F33B93C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void sub_23F2F2878(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

char *sub_23F2F2884(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F2F3640();
    result = (char *)sub_23F2F3618();
    __break(1u);
  }
  else if (a3 != result || &result[2 * a2] <= a3)
  {
    return (char *)sub_23F2F3630(a3, result);
  }
  return result;
}

char *sub_23F2F28D8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F2F3640();
    result = (char *)sub_23F2F3618();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_23F2F3630(a3, result);
  }
  return result;
}

void sub_23F2F2934(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F2940(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F294C(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

char *sub_23F2F295C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F2F3640();
    result = (char *)sub_23F2F3618();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_23F2F3630(a3, result);
  }
  return result;
}

char *sub_23F2F29B0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F33B93C();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

void sub_23F2F2A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_23F2F3640();
    sub_23F2F3618();
    __break(1u);
  }
  else
  {
    sub_23F2F3880();
    if (v5 && (sub_23F2EB3F8(v4), sub_23F2F3964(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_23F2F3860();
      }
      else
      {
        sub_23F2F36C0();
        sub_23F2F3718();
      }
    }
    else
    {
      sub_23F2EB3F8(v4);
      sub_23F2F36C0();
      sub_23F2F3728();
    }
  }
}

char *sub_23F2F2AB8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F2F3640();
    result = (char *)sub_23F2F3618();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_23F2F3630(a3, result);
  }
  return result;
}

void sub_23F2F2B0C(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F2B18(uint64_t a1, uint64_t a2)
{
  sub_23F2F2B24(a1, a2);
}

void sub_23F2F2B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_23F2F3640();
    sub_23F2F3618();
    __break(1u);
  }
  else
  {
    sub_23F2F3880();
    if (v5 && (v4(0), sub_23F2F3964(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_23F2F3860();
      }
      else
      {
        sub_23F2F36C0();
        sub_23F2F3718();
      }
    }
    else
    {
      v4(0);
      sub_23F2F36C0();
      sub_23F2F3728();
    }
  }
}

uint64_t sub_23F2F2BAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F2F391C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F2F3754(v1);
  return sub_23F2F1EBC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23F2F2C00()
{
  uint64_t v0;

  sub_23F2F3658();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F2C24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8((uint64_t *)&unk_254346358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F2F2C64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F2F2C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_23F2F38F0(v5);
  *v6 = v2;
  v6[1] = sub_23F2F2C00;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256E6A000 + dword_256E6A000))(a1, v4);
}

void sub_23F2F2CF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

char *sub_23F2F2D28(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F2F2FA4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

uint64_t sub_23F2F2D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_23F2F2D88(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23F2F2DAC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_23F2F2DCC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

void sub_23F2F2E00()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

void sub_23F2F2E34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

void sub_23F2F2E68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

uint64_t sub_23F2F2E9C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23F2F3158(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_23F2F2EB8(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F2F325C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_23F2F2ED4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F341C();
  *v0 = v1;
}

void sub_23F2F2F08()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F341C();
  *v0 = v1;
}

void sub_23F2F2F3C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F3358();
  *v0 = v1;
}

void sub_23F2F2F70()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F2F307C();
  *v0 = v1;
}

char *sub_23F2F2FA4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F2EB3F8(qword_254345C90);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F2F27F4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3380D8(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_23F2F307C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(_QWORD);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  size_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F2F3778();
  if ((v8 & 1) != 0)
  {
    sub_23F2F3870();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  else
  {
    v11 = v7;
  }
  v14 = *(_QWORD *)(v0 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(v0 + 16);
  else
    v15 = v11;
  if (!v15)
    goto LABEL_17;
  v16 = sub_23F2F3978(v6, v7, v8, v9, v10);
  v2(0);
  v17 = (const void *)sub_23F2F36D4();
  v18 = sub_23F2F395C(v17);
  if (!v4)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v18 - v5 == 0x8000000000000000 && v4 == -1)
    goto LABEL_22;
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = 2 * ((uint64_t)(v18 - v5) / v4);
LABEL_17:
  v20 = ((uint64_t (*)(_QWORD))v2)(0);
  v21 = sub_23F2F37E0(v20);
  if ((v3 & 1) != 0)
  {
    sub_23F2F2B24(v21, v22);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v21);
  }
  sub_23F2F393C();
  sub_23F2F37B0();
}

uint64_t sub_23F2F3158(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F2EB3F8(&qword_256E6A030);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F2F28D8(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F338168((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_23F2F3240()
{
  sub_23F2F3358();
}

char *sub_23F2F325C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F2EB3F8(&qword_256E6A050);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F2F29B0(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F33839C(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_23F2F333C()
{
  sub_23F2F3358();
}

void sub_23F2F3358()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F2F3778();
  if ((v6 & 1) != 0)
  {
    sub_23F2F3870();
    if (v10 != v11)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (v13)
  {
    sub_23F2F3978(v4, v5, v6, v7, v8);
    v14 = (const void *)swift_allocObject();
    v15 = sub_23F2F395C(v14);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = 2 * ((uint64_t)(v15 - 32) / 16);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v16 = v13 + 32;
  v17 = v0 + 32;
  if ((v3 & 1) != 0)
  {
    v2(v17, v12, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v17, v12, v16);
  }
  sub_23F2F393C();
}

void sub_23F2F341C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  size_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F2F3778();
  if ((v8 & 1) != 0)
  {
    sub_23F2F3870();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  else
  {
    v11 = v7;
  }
  v14 = *(_QWORD *)(v0 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(v0 + 16);
  else
    v15 = v11;
  if (!v15)
    goto LABEL_17;
  v16 = sub_23F2F3978(v6, v7, v8, v9, v10);
  sub_23F2EB3F8(v2);
  v17 = (const void *)sub_23F2F36D4();
  v18 = sub_23F2F395C(v17);
  if (!v4)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v18 - v5 == 0x8000000000000000 && v4 == -1)
    goto LABEL_22;
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = 2 * ((uint64_t)(v18 - v5) / v4);
LABEL_17:
  v20 = sub_23F2EB3F8(v2);
  v21 = sub_23F2F37E0(v20);
  if ((v3 & 1) != 0)
  {
    sub_23F2F2A34(v21, v22);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v21);
  }
  sub_23F2F393C();
  sub_23F2F37B0();
}

ValueMetadata *type metadata accessor for SiriRequestContextMontior()
{
  return &type metadata for SiriRequestContextMontior;
}

uint64_t sub_23F2F350C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F2F3548(uint64_t a1)
{
  return sub_23F2F3554(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F2F1668);
}

uint64_t sub_23F2F3554(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_23F2F356C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F2F35A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F2F391C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F2F3754(v1);
  return sub_23F2F1D08(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23F2F3618()
{
  return sub_23F33B93C();
}

void *sub_23F2F3630@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_23F2F3658()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F2F3678()
{
  return swift_slowAlloc();
}

uint64_t sub_23F2F36A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F2F4644(a1, a2, a3);
}

uint64_t sub_23F2F36C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F2F36D4()
{
  return swift_allocObject();
}

uint64_t sub_23F2F36F8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F2F3718()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_23F2F3728()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_23F2F3738()
{
  return swift_bridgeObjectRelease();
}

void sub_23F2F3748()
{
  JUMPOUT(0x242669658);
}

uint64_t sub_23F2F3754(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F2F378C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F2F37A4(uint64_t (*a1)(void))
{
  return a1();
}

char *sub_23F2F37C8()
{
  uint64_t v0;

  return sub_23F2F2D28(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t sub_23F2F37E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

void sub_23F2F3800(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

uint64_t sub_23F2F3814()
{
  return sub_23F33AC1C();
}

uint64_t sub_23F2F3828()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F2F383C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F2F3850()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F2F3898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unint64_t v4;
  va_list va;

  va_start(va, a4);
  return sub_23F30DBFC(a1, v4, (uint64_t *)va);
}

uint64_t sub_23F2F38A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F2F38C0()
{
  return swift_slowAlloc();
}

BOOL sub_23F2F38E0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F2F38F0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_23F2F38FC()
{
  return sub_23F33A9E8();
}

uint64_t sub_23F2F3904()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F2F3910()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F2F3930()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F2F393C()
{
  return swift_release();
}

uint64_t sub_23F2F3944(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F2F3950()
{
  return sub_23F33B540();
}

size_t sub_23F2F395C(const void *ptr)
{
  return j__malloc_size(ptr);
}

uint64_t sub_23F2F3978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_23F2EB3F8(a5);
}

void sub_23F2F3980(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34[2];
  uint64_t v35;

  v30 = a2;
  v3 = sub_23F33A97C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - v8;
  v10 = *(_QWORD *)(a1 + 56);
  v28 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v29 = (unint64_t)(v11 + 63) >> 6;
  v35 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v29)
      goto LABEL_33;
    v19 = *(_QWORD *)(v28 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v29)
        goto LABEL_33;
      v19 = *(_QWORD *)(v28 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v29)
          goto LABEL_33;
        v19 = *(_QWORD *)(v28 + 8 * v14);
        if (!v19)
        {
          v14 = v18 + 3;
          if (v18 + 3 >= v29)
            goto LABEL_33;
          v19 = *(_QWORD *)(v28 + 8 * v14);
          if (!v19)
            break;
        }
      }
    }
LABEL_21:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v4 + 72) * v17, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    v21 = *(_QWORD *)(v30 + 112);
    if (*(_QWORD *)(v21 + 16) && (sub_23F2F60C0(), (v23 & 1) != 0))
    {
      sub_23F2F6560(*(_QWORD *)(v21 + 56) + 40 * v22, (uint64_t)&v31);
    }
    else
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (*((_QWORD *)&v32 + 1))
    {
      sub_23F2F68D4(&v31, (uint64_t)v34);
      sub_23F2F68D4(v34, (uint64_t)&v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F30B7D0();
        v15 = v25;
      }
      v24 = *(_QWORD *)(v15 + 16);
      if (v24 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_23F30B7D0();
        v15 = v26;
      }
      *(_QWORD *)(v15 + 16) = v24 + 1;
      sub_23F2F68D4(&v31, v15 + 40 * v24 + 32);
    }
    else
    {
      sub_23F2F6AF4((uint64_t)&v31, &qword_256E6A2C8);
    }
  }
  v20 = v18 + 4;
  if (v20 >= v29)
  {
LABEL_33:
    swift_release();
    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v29)
      goto LABEL_33;
    v19 = *(_QWORD *)(v28 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_23F2F3CB0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ContextCache();
  v0 = swift_allocObject();
  result = sub_23F2F3CF0(0);
  qword_256E6D100 = v0;
  return result;
}

uint64_t sub_23F2F3CF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  __int128 v30[2];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_23F2F6C34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2EE798();
  v8 = v7 - v6;
  swift_defaultActor_initialize();
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + 120) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + 128) = v9;
  sub_23F33AFC4();
  v10 = sub_23F2F6C4C();
  sub_23F2EBFCC(v10, v11, v12, v13);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime12ContextCache_embeddingsCache) = 0;
  if (a1)
  {
LABEL_17:
    *(_QWORD *)(v2 + 112) = a1;
    sub_23F2F0940();
    return v2;
  }
  v29 = v1;
  if (qword_256E699A0 != -1)
LABEL_20:
    swift_once();
  v14 = *(_QWORD *)(qword_256E6D168 + 16);
  if (!v14)
  {
    swift_bridgeObjectRetain();
    a1 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v29;
    goto LABEL_17;
  }
  v15 = qword_256E6D168 + 32;
  swift_bridgeObjectRetain();
  a1 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    sub_23F2F6560(v15, (uint64_t)v31);
    v16 = v32;
    v17 = v33;
    sub_23F2F2D88(v31, v32);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    sub_23F2F6560((uint64_t)v31, (uint64_t)v30);
    swift_isUniquelyReferenced_nonNull_native();
    sub_23F2F60C0();
    if (__OFADD__(a1[2], (v19 & 1) == 0))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v20 = v18;
    v21 = v19;
    sub_23F2EB3F8(&qword_256E6A248);
    if ((sub_23F33B8E8() & 1) != 0)
      break;
LABEL_9:
    if ((v21 & 1) != 0)
    {
      v24 = a1[7] + 40 * v20;
      sub_23F2F2DAC(v24);
      sub_23F2F68D4(v30, v24);
    }
    else
    {
      a1[(v20 >> 6) + 8] |= 1 << v20;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(a1[6] + *(_QWORD *)(v5 + 72) * v20, v8, v4);
      sub_23F2F68D4(v30, a1[7] + 40 * v20);
      v25 = a1[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_19;
      a1[2] = v27;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    sub_23F2F2DAC((uint64_t)v31);
    v15 += 40;
    if (!--v14)
      goto LABEL_16;
  }
  sub_23F2F60C0();
  if ((v21 & 1) == (v23 & 1))
  {
    v20 = v22;
    goto LABEL_9;
  }
  result = sub_23F33B9A8();
  __break(1u);
  return result;
}

void sub_23F2F3FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23F2EB3F8(&qword_256E6A2D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F2EB3F8(&qword_256E6A2E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_23F2EBFC0(a1, 1, v10) == 1)
  {
    sub_23F2F6AF4(a1, &qword_256E6A2D8);
    sub_23F2F5F38((uint64_t)v6);
    v11 = sub_23F33A97C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a2, v11);
    sub_23F2F6AF4((uint64_t)v6, &qword_256E6A2D8);
  }
  else
  {
    sub_23F2F6AB4(a1, (uint64_t)v9, &qword_256E6A2E0);
    sub_23F334584((uint64_t)v9, a2);
    v12 = sub_23F33A97C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
}

uint64_t sub_23F2F40F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return sub_23F2F6B94();
}

uint64_t sub_23F2F410C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  sub_23F2F59B8();
  sub_23F2F6CB8();
  sub_23F2F6BD4();
  v2 = *(_QWORD *)(v1 + 120);
  swift_bridgeObjectRetain();
  v3 = sub_23F2F6C7C();
  sub_23F30F468(v3, v4, v2);
  v6 = v5;
  *(_QWORD *)(v0 + 64) = v5;
  sub_23F2F6D18();
  swift_bridgeObjectRelease();
  if (!v6)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  *(_QWORD *)(v0 + 72) = swift_task_alloc();
  sub_23F2EB3F8(&qword_256E6A2C0);
  sub_23F2F6D28((uint64_t)sub_23F2F41DC);
  return sub_23F33B66C();
}

uint64_t sub_23F2F41DC()
{
  sub_23F2F6B60();
  sub_23F2F6B38();
  sub_23F2F6CCC();
  sub_23F2F6CF0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2F4218()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23F2F4224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_23F2F59B8();
  v2 = v1;
  sub_23F2F6BD4();
  v3 = sub_23F2F6CE0();
  sub_23F3345E0(v3, v0, v2);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2F4290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_23F2EB3F8(&qword_256E6A2D8);
  v3[8] = sub_23F2F6B70();
  sub_23F2F6CB8();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F42D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 64);
  sub_23F2F6BD4();
  swift_bridgeObjectRetain();
  sub_23F2F6C7C();
  sub_23F30F3C4(v2, v3);
  swift_bridgeObjectRelease();
  v4 = sub_23F2EB3F8(&qword_256E6A2E0);
  v5 = sub_23F2EBFC0(v1, 1, v4);
  if ((_DWORD)v5)
  {
    v6 = *(_OWORD **)(v0 + 40);
    sub_23F2F6CC4(v5, &qword_256E6A2D8);
    *v6 = 0u;
    v6[1] = 0u;
    swift_task_dealloc();
    return sub_23F2F6BC4(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + *(int *)(v4 + 48));
    v8 = sub_23F2F6CE0();
    sub_23F2F6CC4(v8, &qword_256E6A2D8);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v9;
    sub_23F2EB3F8(&qword_256E6A290);
    *v9 = v0;
    v9[1] = sub_23F2F43E0;
    return sub_23F2F6BB4();
  }
}

uint64_t sub_23F2F43E0()
{
  sub_23F2F6B60();
  sub_23F2F6B38();
  sub_23F2F6CCC();
  sub_23F2F6CF0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2F441C()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F4444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v15;

  sub_23F2EB3F8(&qword_256E6A2D8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2F6BD4();
  v6 = *(_QWORD *)(v1 + 128);
  swift_bridgeObjectRetain();
  sub_23F30F3C4(v6, (uint64_t)v5);
  sub_23F2EB230();
  v7 = sub_23F2EB3F8(&qword_256E6A2E0);
  if (sub_23F2EBFC0((uint64_t)v5, 1, v7))
  {
    sub_23F2F6AF4((uint64_t)v5, &qword_256E6A2D8);
    v8 = sub_23F2F6D20();
    v9 = a1;
    v10 = 1;
  }
  else
  {
    v11 = sub_23F2F6D20();
    v12 = sub_23F2F6C7C();
    v13(v12);
    sub_23F2F6AF4((uint64_t)v5, &qword_256E6A2D8);
    v9 = a1;
    v10 = 0;
    v8 = v11;
  }
  return sub_23F2EBFCC(v9, v10, 1, v8);
}

void sub_23F2F455C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F2EB3F8(&qword_256E6A2D8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2F6BFC();
  v6 = sub_23F33A97C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE798();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v8 - v7, a1);
  v11 = sub_23F2EB3F8(&qword_256E6A2E0);
  v12 = *(int *)(v11 + 48);
  sub_23F33A4FC();
  *(_QWORD *)(v2 + v12) = a2;
  sub_23F2EBFCC(v2, 0, 1, v11);
  sub_23F2F6BD4();
  sub_23F2F6CE0();
  sub_23F2F3FB4(v2, v9);
  swift_endAccess();
  sub_23F2EE710();
}

uint64_t sub_23F2F4644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F2F6B94();
}

uint64_t sub_23F2F465C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (!v0[2])
    sub_23F33A9D0();
  swift_bridgeObjectRetain();
  sub_23F319624();
  v2 = sub_23F2F4724(v1);
  v0[6] = v2;
  sub_23F2EB230();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23F2F46F4;
  return sub_23F2F4B10(v2, v0[3], v0[4]);
}

uint64_t sub_23F2F46F4()
{
  uint64_t v0;

  sub_23F2F6B60();
  sub_23F2F6B38();
  sub_23F2EB230();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F4724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  int64_t v41;

  v2 = sub_23F33A9E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v36 - v7;
  v40 = a1;
  v8 = *(_QWORD *)(a1 + 56);
  v37 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v38 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = MEMORY[0x24BEE4AF8];
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v41 = v12;
  for (i = v14 | (v12 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    v20 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v39, *(_QWORD *)(v40 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v20, v2);
    if (qword_256E69998 != -1)
      swift_once();
    v21 = qword_256E6D110;
    if (*(_QWORD *)(qword_256E6D110 + 16))
    {
      sub_23F2F6194();
      v23 = MEMORY[0x24BEE4AF8];
      if ((v24 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v23 = MEMORY[0x24BEE4AF8];
    }
    v25 = v2;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v26 = *(_QWORD *)(v23 + 16);
    v27 = *(_QWORD *)(v13 + 16);
    if (__OFADD__(v27, v26))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v27 + v26 > *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_23F30B808();
      v13 = v28;
    }
    if (*(_QWORD *)(v23 + 16))
    {
      v29 = *(_QWORD *)(v13 + 16);
      if ((*(_QWORD *)(v13 + 24) >> 1) - v29 < v26)
        goto LABEL_47;
      v30 = v13 + 40 * v29 + 32;
      if (v23 + 32 < v30 + 40 * v26 && v30 < v23 + 32 + 40 * v26)
        goto LABEL_51;
      sub_23F2EB3F8(&qword_256E6A2D0);
      swift_arrayInitWithCopy();
      if (v26)
      {
        v32 = *(_QWORD *)(v13 + 16);
        v33 = __OFADD__(v32, v26);
        v34 = v32 + v26;
        if (v33)
          goto LABEL_48;
        *(_QWORD *)(v13 + 16) = v34;
      }
    }
    else if (v26)
    {
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    v2 = v25;
    v12 = v41;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_49;
    if (v16 >= v38)
      goto LABEL_44;
    v17 = *(_QWORD *)(v37 + 8 * v16);
    v18 = v12 + 1;
    if (!v17)
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v38)
        goto LABEL_44;
      v17 = *(_QWORD *)(v37 + 8 * v18);
      if (!v17)
      {
        v18 = v12 + 3;
        if (v12 + 3 >= v38)
          goto LABEL_44;
        v17 = *(_QWORD *)(v37 + 8 * v18);
        if (!v17)
        {
          v18 = v12 + 4;
          if (v12 + 4 >= v38)
            goto LABEL_44;
          v17 = *(_QWORD *)(v37 + 8 * v18);
          if (!v17)
            break;
        }
      }
    }
LABEL_20:
    v11 = (v17 - 1) & v17;
    v41 = v18;
  }
  v19 = v12 + 5;
  if (v12 + 5 >= v38)
  {
LABEL_44:
    swift_release();
    return v13;
  }
  v17 = *(_QWORD *)(v37 + 8 * v19);
  if (v17)
  {
    v18 = v12 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v38)
      goto LABEL_44;
    v17 = *(_QWORD *)(v37 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_20;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_23F33B93C();
  __break(1u);
  return result;
}

uint64_t sub_23F2F4B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[37] = a3;
  v4[38] = v3;
  v4[35] = a1;
  v4[36] = a2;
  v5 = sub_23F33B1B0();
  v4[39] = v5;
  v4[40] = *(_QWORD *)(v5 - 8);
  v4[41] = sub_23F2F6B70();
  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  v4[42] = sub_23F2F6B80();
  v4[43] = sub_23F2F6B9C();
  sub_23F2EB3F8(&qword_256E69DF8);
  v4[44] = sub_23F2F6B70();
  v6 = sub_23F2F6D20();
  v4[45] = v6;
  v4[46] = *(_QWORD *)(v6 - 8);
  v4[47] = sub_23F2F6B80();
  v4[48] = sub_23F2F6B9C();
  v4[49] = type metadata accessor for ContextDefinition();
  v4[50] = sub_23F2F6B70();
  sub_23F2EB3F8(qword_256E69B30);
  v4[51] = sub_23F2F6B70();
  v7 = sub_23F2F6C34();
  v4[52] = v7;
  v4[53] = *(_QWORD *)(v7 - 8);
  v4[54] = sub_23F2F6B80();
  v4[55] = sub_23F2F6B9C();
  v4[56] = sub_23F2F6B9C();
  sub_23F2F6CB8();
  return sub_23F2F6B48();
}

uint64_t sub_23F2F4C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  v88 = v2;
  if (v2)
  {
    v83 = (_QWORD *)(v0 + 16);
    v86 = *(_QWORD *)(v0 + 424);
    v81 = *(_QWORD *)(v0 + 392);
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24BEE4AF8];
    v5 = v2;
    do
    {
      v7 = *(_QWORD *)(v0 + 408);
      v6 = *(_QWORD *)(v0 + 416);
      v8 = *(_QWORD *)(v0 + 400);
      sub_23F2F6CFC(v3);
      v10 = *(_QWORD *)(v0 + 40);
      v9 = *(_QWORD *)(v0 + 48);
      sub_23F2F2D88(v83, v10);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
      sub_23F2F64DC(v8 + *(int *)(v81 + 24), v7);
      sub_23F2F6524(v8);
      sub_23F2F2DAC((uint64_t)v83);
      if (sub_23F2EBFC0(v7, 1, v6) == 1)
      {
        sub_23F2F6AF4(*(_QWORD *)(v0 + 408), qword_256E69B30);
      }
      else
      {
        v12 = *(_QWORD *)(v0 + 440);
        v11 = *(_QWORD *)(v0 + 448);
        v13 = *(_QWORD *)(v0 + 416);
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32);
        v14(v11, *(_QWORD *)(v0 + 408), v13);
        v14(v12, v11, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_23F2F6CA0();
        v15 = *(_QWORD *)(v4 + 16);
        if (v15 >= *(_QWORD *)(v4 + 24) >> 1)
          v4 = sub_23F2F6CA0();
        v16 = *(_QWORD *)(v0 + 440);
        v17 = *(_QWORD *)(v0 + 416);
        *(_QWORD *)(v4 + 16) = v15 + 1;
        v14(v4+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v15, v16, v17);
      }
      v3 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v2 = v88;
  }
  v18 = *(_QWORD *)(v0 + 304);
  sub_23F319600();
  v20 = v19;
  swift_retain();
  sub_23F2F3980(v20, v18);
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v82 = *(_QWORD *)(v0 + 424);
    v80 = *(_QWORD *)(v0 + 368);
    v24 = v22 + 32;
    v25 = v0 + 56;
    while (1)
    {
      v87 = v23;
      v26 = *(_QWORD *)(v0 + 432);
      v27 = *(_QWORD *)(v0 + 416);
      v28 = *(_QWORD *)(v0 + 352);
      v29 = *(_QWORD *)(v0 + 360);
      sub_23F2F6560(v24, v25);
      v31 = *(_QWORD *)(v0 + 80);
      v30 = *(_QWORD *)(v0 + 88);
      sub_23F2F6CD4();
      (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
      sub_23F2F4444(v28);
      v32 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v32(v26, v27);
      if (sub_23F2EBFC0(v28, 1, v29) == 1)
        break;
      v34 = *(_QWORD *)(v0 + 376);
      v35 = *(_QWORD *)(v0 + 360);
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v80 + 32))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 352), v35);
      sub_23F33A508();
      sub_23F33A4CC();
      v37 = v36;
      v38 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
      v38(v34, v35);
      v39 = sub_23F2F6C7C();
      ((void (*)(uint64_t))v38)(v39);
      v33 = v0 + 56;
      if (v37 * 1000.0 >= 500.0)
        goto LABEL_17;
LABEL_26:
      sub_23F2F2DAC(v33);
      v24 += 40;
      v23 = v87 - 1;
      v25 = v33;
      if (v87 == 1)
      {
        swift_bridgeObjectRelease();
        v2 = v88;
        if (!v88)
          goto LABEL_41;
        goto LABEL_30;
      }
    }
    sub_23F2F6AF4(*(_QWORD *)(v0 + 352), &qword_256E69DF8);
    v33 = v0 + 56;
LABEL_17:
    v40 = *(_QWORD *)(v0 + 344);
    v41 = sub_23F33B648();
    v42 = sub_23F2F6C4C();
    sub_23F2EBFCC(v42, v43, v44, v41);
    sub_23F2F6CFC(v33);
    v45 = sub_23F2F6C44();
    *(_QWORD *)(v45 + 16) = 0;
    *(_QWORD *)(v45 + 24) = 0;
    sub_23F2F68D4((__int128 *)(v0 + 96), v45 + 32);
    v46 = sub_23F2EBFC0(v40, 1, v41);
    v47 = *(_QWORD *)(v0 + 344);
    if (v46 == 1)
    {
      sub_23F2F6AF4(*(_QWORD *)(v0 + 344), (uint64_t *)&unk_254346358);
    }
    else
    {
      sub_23F33B63C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v47, v41);
    }
    if (*(_QWORD *)(v45 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v48 = sub_23F33B618();
      v50 = v49;
      swift_unknownObjectRelease();
    }
    else
    {
      v48 = 0;
      v50 = 0;
    }
    v51 = sub_23F2F6C44();
    *(_QWORD *)(v51 + 16) = &unk_256E6A280;
    *(_QWORD *)(v51 + 24) = v45;
    sub_23F2EB3F8(&qword_256E6A290);
    v84 = (void (*)(uint64_t))v32;
    if (v50 | v48)
    {
      *(_QWORD *)(v0 + 216) = 0;
      *(_QWORD *)(v0 + 224) = 0;
      *(_QWORD *)(v0 + 232) = v48;
      *(_QWORD *)(v0 + 240) = v50;
    }
    v52 = *(_QWORD *)(v0 + 432);
    v53 = swift_task_create();
    v54 = *(_QWORD *)(v0 + 80);
    v55 = *(_QWORD *)(v0 + 88);
    sub_23F2F2D88((_QWORD *)(v0 + 56), v54);
    v33 = v0 + 56;
    (*(void (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
    sub_23F2F455C(v52, v53);
    swift_release();
    v56 = sub_23F2F6C7C();
    v84(v56);
    goto LABEL_26;
  }
  sub_23F2EB230();
  if (!v2)
    goto LABEL_41;
LABEL_30:
  v57 = *(_QWORD *)(v0 + 280);
  sub_23F2EAFF0(&qword_256E6A2A0, (uint64_t (*)(uint64_t))type metadata accessor for ContextCache, (uint64_t)&unk_23F33EA20);
  v85 = v58;
  v59 = v57 + 32;
  swift_bridgeObjectRetain();
  do
  {
    v89 = v2;
    v60 = *(_QWORD *)(v0 + 336);
    v61 = *(_QWORD *)(v0 + 296);
    v62 = *(_QWORD *)(v0 + 304);
    v63 = *(_QWORD *)(v0 + 288);
    sub_23F2F6560(v59, v0 + 176);
    v64 = sub_23F33B648();
    v65 = sub_23F2F6C4C();
    sub_23F2EBFCC(v65, v66, v67, v64);
    sub_23F2F6CFC(v0 + 176);
    v68 = (_QWORD *)sub_23F2F6C44();
    v68[2] = v62;
    v68[3] = v85;
    sub_23F2F68D4((__int128 *)(v0 + 136), (uint64_t)(v68 + 4));
    v68[9] = v62;
    v68[10] = v63;
    v68[11] = v61;
    LODWORD(v61) = sub_23F2F6CAC(v60);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v69 = *(_QWORD *)(v0 + 336);
    if ((_DWORD)v61 == 1)
    {
      sub_23F2F6AF4(*(_QWORD *)(v0 + 336), (uint64_t *)&unk_254346358);
    }
    else
    {
      sub_23F33B63C();
      sub_23F2F6D04(v69, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8));
    }
    if (v68[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v70 = sub_23F33B618();
      v72 = v71;
      swift_unknownObjectRelease();
    }
    else
    {
      v70 = 0;
      v72 = 0;
    }
    v73 = sub_23F2F6C44();
    *(_QWORD *)(v73 + 16) = &unk_256E6A2B0;
    *(_QWORD *)(v73 + 24) = v68;
    sub_23F2EB3F8(&qword_256E6A2C0);
    if (v72 | v70)
    {
      *(_QWORD *)(v0 + 248) = 0;
      *(_QWORD *)(v0 + 256) = 0;
      *(_QWORD *)(v0 + 264) = v70;
      *(_QWORD *)(v0 + 272) = v72;
    }
    swift_task_create();
    sub_23F2F4224();
    swift_release();
    sub_23F2F2DAC(v0 + 176);
    v59 += 40;
    v2 = v89 - 1;
  }
  while (v89 != 1);
  swift_bridgeObjectRelease();
LABEL_41:
  sub_23F33AC10();
  v74 = sub_23F33B1A4();
  v75 = sub_23F33B6E4();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_23F2E8000, v74, v75, "skipping embedding of context values because macro is not enabled", v76, 2u);
    MEMORY[0x242669658](v76, -1, -1);
  }
  v77 = *(_QWORD *)(v0 + 328);
  v78 = *(_QWORD *)(v0 + 320);

  sub_23F2F6D04(v77, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
  sub_23F2F6CE8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2F5460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23F2F5478()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;

  v2 = (uint64_t *)v0[2];
  v1 = (_QWORD *)v0[3];
  v3 = v1[3];
  v4 = v1[4];
  sub_23F2F2D88(v1, v3);
  v2[3] = swift_getAssociatedTypeWitness();
  v5 = sub_23F2F6A44(v2);
  v6 = (_QWORD *)swift_task_alloc();
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_23F2F551C;
  return sub_23F31E5C8((uint64_t)v5, v3, v4);
}

uint64_t sub_23F2F551C()
{
  void *v0;

  sub_23F2F6B60();
  sub_23F2F6B38();
  if (v0)

  return sub_23F2F6B54();
}

uint64_t sub_23F2F556C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2F5574()
{
  uint64_t v0;
  _OWORD *v1;

  v1 = *(_OWORD **)(v0 + 16);
  sub_23F2F6A80((uint64_t)v1);
  *v1 = 0u;
  v1[1] = 0u;
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F55A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  v7[14] = a1;
  sub_23F2EB3F8(qword_256E69B30);
  v7[19] = swift_task_alloc();
  v7[20] = type metadata accessor for ContextDefinition();
  v7[21] = swift_task_alloc();
  v8 = sub_23F33A97C();
  v7[22] = v8;
  v7[23] = *(_QWORD *)(v8 - 8);
  v7[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2F565C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD **)(v0 + 120);
  v6 = v5[3];
  v7 = v5[4];
  sub_23F2F2D88(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  sub_23F2F64DC(v2 + *(int *)(v4 + 24), v3);
  sub_23F2F6524(v2);
  if (sub_23F2EBFC0(v3, 1, v1) == 1)
  {
    v8 = *(_QWORD **)(v0 + 120);
    sub_23F2F6AF4(*(_QWORD *)(v0 + 152), qword_256E69B30);
    v10 = v5[3];
    v9 = v5[4];
    sub_23F2F2D88(v8, v10);
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v11;
    *v11 = v0;
    v11[1] = sub_23F2F57C4;
    return sub_23F2F6C3C(v0 + 16, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v10, v9);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v13;
    *v13 = v0;
    v13[1] = sub_23F2F5860;
    return sub_23F2F4290(v0 + 48, *(_QWORD *)(v0 + 192));
  }
}

uint64_t sub_23F2F57C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F2F6B60();
  *(_QWORD *)(v2 + 80) = v0;
  *(_QWORD *)(v2 + 88) = v1;
  v3 = sub_23F2F6B38();
  sub_23F2F6CC4(v3, &qword_256E6A290);
  sub_23F2F6CF0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2F5810()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 112) = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F2F6CE8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2F5860()
{
  sub_23F2F6B60();
  sub_23F2F6B38();
  sub_23F2F6CB8();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F5898()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[15];
  v2 = v1[3];
  v3 = v1[4];
  sub_23F2F2D88(v1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[27] = v4;
  *v4 = v0;
  v4[1] = sub_23F2F590C;
  return sub_23F2F6C3C((uint64_t)(v0 + 6), v0[17], v0[18], v2, v3);
}

uint64_t sub_23F2F590C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2F6B60();
  *(_QWORD *)(v2 + 96) = v0;
  *(_QWORD *)(v2 + 104) = v1;
  sub_23F2F6B38();
  sub_23F2F6CB8();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F5948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  sub_23F2F6AF4(v0 + 48, &qword_256E6A290);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  **(_QWORD **)(v0 + 112) = *(_QWORD *)(v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F2F6CE8();
  return sub_23F2F6BC4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F59B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = sub_23F33A9E8();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2F6BFC();
  v3 = type metadata accessor for ContextDefinition();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2F6C18();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - v6;
  sub_23F2EB3F8(qword_256E69B30);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23F2F6CD4();
  sub_23F2F6D0C();
  sub_23F2F64DC((uint64_t)&v7[*(int *)(v3 + 24)], v11);
  sub_23F2F6524((uint64_t)v7);
  v12 = sub_23F2F6C34();
  if (sub_23F2F6CAC(v11) == 1)
  {
    sub_23F2F6AF4(v11, qword_256E69B30);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    v13 = sub_23F33A970();
    v14 = v15;
    sub_23F2F6D04(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8));
  }
  v21 = v13;
  v22 = v14;
  sub_23F2EB3F8(&qword_256E6A270);
  sub_23F33B540();
  sub_23F33B57C();
  swift_bridgeObjectRelease();
  sub_23F33B57C();
  sub_23F2F6D0C();
  v17 = v19;
  v16 = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v0, v1, v20);
  sub_23F2F6524(v1);
  sub_23F33A9DC();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v16);
  sub_23F33B57C();
  sub_23F2F6D18();
  return v23;
}

uint64_t sub_23F2F5BB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F2F6AF4(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime12ContextCache_uiContext, &qword_256E6A258);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23F2F5C0C()
{
  sub_23F2F5BB0();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23F2F5C24()
{
  return type metadata accessor for ContextCache();
}

uint64_t type metadata accessor for ContextCache()
{
  uint64_t result;

  result = qword_256E6A0D0;
  if (!qword_256E6A0D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F2F5C64()
{
  unint64_t v0;

  sub_23F2F5CF4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23F2F5CF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E6A100)
  {
    sub_23F33AFC4();
    v0 = sub_23F33B7A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E6A100);
  }
}

uint64_t sub_23F2F5D48()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F2F5D54()
{
  return sub_23F2F5D48();
}

uint64_t sub_23F2F5D6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return sub_23F2F6B94();
}

uint64_t sub_23F2F5D80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime12ContextCache_embeddingsCache);
  *(_QWORD *)(v0 + 32) = v1;
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  swift_retain();
  *(_QWORD *)(v0 + 40) = swift_task_alloc();
  sub_23F2EB3F8(&qword_256E6A2F8);
  sub_23F2F6D28((uint64_t)sub_23F2F5E18);
  return sub_23F2F6BB4();
}

uint64_t sub_23F2F5E18()
{
  sub_23F2F6B60();
  sub_23F2F6B38();
  sub_23F2F6CCC();
  sub_23F2F6CF0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2F5E54()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_23F2F5E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F2EB3F8(&qword_256E6A258);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2F6C18();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - v6;
  v8 = sub_23F33AFC4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
  sub_23F2EBFCC((uint64_t)v7, 0, 1, v8);
  sub_23F2F6AB4((uint64_t)v7, v2, &qword_256E6A258);
  v9 = v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime12ContextCache_uiContext;
  sub_23F2F6BD4();
  sub_23F2F6284(v2, v9);
  swift_endAccess();
  sub_23F2EE710();
}

uint64_t sub_23F2F5F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  swift_bridgeObjectRetain();
  sub_23F2F60C0();
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_23F2EB3F8(&qword_256E6A2E8);
    sub_23F33B8E8();
    v8 = *(_QWORD *)(v15 + 48);
    v9 = sub_23F33A97C();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE571D8];
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, v9);
    v11 = *(_QWORD *)(v15 + 56);
    v12 = sub_23F2EB3F8(&qword_256E6A2E0);
    sub_23F2F6AB4(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v5, a1, &qword_256E6A2E0);
    sub_23F2EAFF0((unint64_t *)&unk_256E6BBD0, v10, MEMORY[0x24BE571F0]);
    sub_23F33B8F4();
    *v2 = v15;
    swift_bridgeObjectRelease();
    return sub_23F2EBFCC(a1, 0, 1, v12);
  }
  else
  {
    v14 = sub_23F2EB3F8(&qword_256E6A2E0);
    return sub_23F2EBFCC(a1, 1, 1, v14);
  }
}

void sub_23F2F60C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F2F6C34();
  sub_23F2EAFF0((unint64_t *)&unk_256E6BBD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE571D8], MEMORY[0x24BE571F0]);
  v0 = sub_23F2F6C6C();
  sub_23F2F6C5C(v0, v0, v1, &qword_256E6A250, MEMORY[0x24BE571F8]);
  sub_23F2EE710();
}

unint64_t sub_23F2F6130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23F33B9F0();
  sub_23F33B564();
  v4 = sub_23F33BA08();
  return sub_23F2F62CC(a1, a2, v4);
}

void sub_23F2F6194()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F33A9E8();
  sub_23F2EAFF0(&qword_256E6A260, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57338]);
  v0 = sub_23F2F6C6C();
  sub_23F2F6C5C(v0, v0, v1, &qword_256E6A268, MEMORY[0x24BE57340]);
  sub_23F2EE710();
}

unint64_t sub_23F2F6208(uint64_t a1)
{
  uint64_t v2;

  sub_23F33B51C();
  sub_23F33B9F0();
  sub_23F33B564();
  v2 = sub_23F33BA08();
  sub_23F2F6D18();
  return sub_23F2F666C(a1, v2);
}

uint64_t sub_23F2F6284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F2F62CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23F33B978() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23F33B978() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23F2F63AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_23F2EAFF0(v21, v20, v22);
      v17 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_23F2F64DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(qword_256E69B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2F6524(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContextDefinition();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F2F6560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_23F2EB20C();
}

uint64_t sub_23F2F65A0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23F2F2DAC(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_23F2F65CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F2F38F0(v1);
  v3 = sub_23F2F6C88(v2);
  return sub_23F2F5460(v3, v4, v5, v0 + 32);
}

uint64_t sub_23F2F6624()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F2F6BDC(v1);
  return sub_23F2F6BA4(v2, v3, v4, v5);
}

unint64_t sub_23F2F666C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23F33B51C();
    v8 = v7;
    if (v6 == sub_23F33B51C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23F33B978();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23F33B51C();
          v15 = v14;
          if (v13 == sub_23F33B51C() && v15 == v16)
            break;
          v18 = sub_23F33B978();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_23F2F67E0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_23F2F6848;
  return v5(v2 + 16);
}

uint64_t sub_23F2F6848()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23F2F6898()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23F2F2DAC(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F2F68D4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23F2F68EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (uint64_t)(v0 + 4);
  v2 = v0[9];
  v3 = v0[10];
  v4 = v0[11];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_23F2F38F0(v5);
  v7 = sub_23F2F6C88(v6);
  return sub_23F2F55A8(v7, v8, v9, v1, v2, v3, v4);
}

uint64_t sub_23F2F6968()
{
  uint64_t v0;

  sub_23F2F6B38();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2F699C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F2F69C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F2F6BDC(v1);
  return sub_23F2F6BA4(v2, v3, v4, v5);
}

uint64_t sub_23F2F6A08()
{
  uint64_t v0;

  sub_23F2F6B38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_23F2F6A44(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23F2F6A80(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x242669658);
  return result;
}

void sub_23F2F6AB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F2EB3F8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_23F2EB20C();
}

void sub_23F2F6AF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F2EB3F8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23F2EB20C();
}

uint64_t sub_23F2F6B38()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F2F6B48()
{
  return swift_task_switch();
}

uint64_t sub_23F2F6B54()
{
  return swift_task_switch();
}

void sub_23F2F6B60()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F2F6B70()
{
  return swift_task_alloc();
}

uint64_t sub_23F2F6B80()
{
  return swift_task_alloc();
}

uint64_t sub_23F2F6B94()
{
  return swift_task_switch();
}

uint64_t sub_23F2F6B9C()
{
  return swift_task_alloc();
}

uint64_t sub_23F2F6BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F2F6BB4()
{
  return sub_23F33B66C();
}

uint64_t sub_23F2F6BC4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F2F6BD4()
{
  return swift_beginAccess();
}

uint64_t sub_23F2F6BDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F2F6BFC()
{
  return 0;
}

uint64_t sub_23F2F6C34()
{
  return sub_23F33A97C();
}

uint64_t sub_23F2F6C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23F2F6DF4(a1, a2, a3, a4, a5);
}

uint64_t sub_23F2F6C44()
{
  return swift_allocObject();
}

uint64_t sub_23F2F6C4C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F2F6C5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  return sub_23F2F63AC(v5, a2, v6, a4, a5);
}

uint64_t sub_23F2F6C6C()
{
  return sub_23F33B4BC();
}

uint64_t sub_23F2F6C7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F2F6C88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F2F6CA0()
{
  return sub_23F30B7EC();
}

uint64_t sub_23F2F6CAC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFC0(a1, 1, v1);
}

void sub_23F2F6CC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F2F6AF4(v2, a2);
}

uint64_t sub_23F2F6CCC()
{
  return swift_release();
}

_QWORD *sub_23F2F6CD4()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23F2F2D88(v0, v1);
}

uint64_t sub_23F2F6CE0()
{
  return swift_retain();
}

uint64_t sub_23F2F6CE8()
{
  return swift_task_dealloc();
}

void sub_23F2F6CFC(uint64_t a1)
{
  uint64_t v1;

  sub_23F2F6560(a1, v1);
}

uint64_t sub_23F2F6D04@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F2F6D0C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F2F6D18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2F6D20()
{
  return sub_23F33A514();
}

uint64_t sub_23F2F6D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = v3;
  v2[1] = a1;
  return v1;
}

void ContextDefinition.init(type:description:sourceType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = sub_23F2F38FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = sub_23F2EE774();
  v12 = (_QWORD *)(a5 + *(int *)(v11 + 20));
  *v12 = a2;
  v12[1] = a3;
  sub_23F2F8754(a4, a5 + *(int *)(v11 + 24), qword_256E69B30);
}

uint64_t type metadata accessor for ContextDefinition()
{
  uint64_t result;

  result = qword_256E6A358;
  if (!qword_256E6A358)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F2F6DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6[26] = a5;
  v6[27] = v5;
  v6[24] = a3;
  v6[25] = a4;
  v6[22] = a1;
  v6[23] = a2;
  v7 = *(_QWORD *)(a4 - 8);
  v6[28] = v7;
  v6[29] = *(_QWORD *)(v7 + 64);
  v6[30] = swift_task_alloc();
  sub_23F2EB3F8(qword_256E69B30);
  v6[31] = sub_23F2F6B70();
  v8 = sub_23F2F38FC();
  v6[32] = v8;
  v6[33] = *(_QWORD *)(v8 - 8);
  v6[34] = sub_23F2F6B70();
  v6[35] = sub_23F2EE774();
  v6[36] = sub_23F2F8824();
  v6[37] = sub_23F2F8838();
  v9 = sub_23F33B1D4();
  v6[38] = v9;
  v6[39] = *(_QWORD *)(v9 - 8);
  v6[40] = sub_23F2F6B70();
  v10 = sub_23F33A538();
  v6[41] = v10;
  v6[42] = *(_QWORD *)(v10 - 8);
  v6[43] = sub_23F2F6B70();
  v11 = sub_23F33B1F8();
  v6[44] = v11;
  v6[45] = *(_QWORD *)(v11 - 8);
  v6[46] = sub_23F2F6B70();
  v12 = sub_23F33B8C4();
  v6[47] = v12;
  v6[48] = *(_QWORD *)(v12 - 8);
  v6[49] = sub_23F2F8824();
  v6[50] = sub_23F2F8838();
  v13 = sub_23F33B8DC();
  v6[51] = v13;
  v6[52] = *(_QWORD *)(v13 - 8);
  v6[53] = sub_23F2F6B70();
  v14 = sub_23F33B138();
  v6[54] = v14;
  v6[55] = *(_QWORD *)(v14 - 8);
  v6[56] = sub_23F2F8824();
  v6[57] = sub_23F2F8838();
  v15 = sub_23F33B1B0();
  v6[58] = v15;
  v6[59] = *(_QWORD *)(v15 - 8);
  v6[60] = sub_23F2F8824();
  v6[61] = sub_23F2F8838();
  v16 = sub_23F33B15C();
  v6[62] = v16;
  v6[63] = *(_QWORD *)(v16 - 8);
  v6[64] = sub_23F2F6B70();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F6F90()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint8_t *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t (*v28)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F33AC1C();
  sub_23F33B144();
  sub_23F33B150();
  sub_23F33B120();
  v1 = sub_23F33B150();
  v2 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v3 = (uint8_t *)sub_23F2F8874();
    *(_WORD *)v3 = 0;
    v4 = sub_23F33B12C();
    _os_signpost_emit_with_name_impl(&dword_23F2E8000, v1, v2, v4, "IFCR.ContextProvider", "", v3, 2u);
    sub_23F2F3748();
  }
  v5 = v0[56];
  v6 = v0[57];
  v7 = v0[54];
  v8 = v0[55];
  v9 = v0[24];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
  sub_23F33B18C();
  swift_allocObject();
  v0[65] = sub_23F33B180();
  sub_23F2F8850(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F33B8D0();
  sub_23F33B8AC();
  if (v9)
  {
    v10 = v0[24];
  }
  else
  {
    v11 = v0[42];
    v12 = v0[43];
    v13 = v0[41];
    sub_23F33A52C();
    sub_23F33A520();
    v10 = v14;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  }
  v0[66] = v10;
  v15 = v0[36];
  v16 = v0[37];
  v17 = v0[34];
  v19 = v0[32];
  v18 = v0[33];
  v30 = v0[35];
  v31 = v0[31];
  v35 = v0[29];
  v20 = v0[27];
  v32 = v0[28];
  v33 = v0[30];
  v21 = v0[25];
  v22 = v0[26];
  v34 = v0[22];
  sub_23F33A580();
  v0[67] = *(_QWORD *)(v22 + 8);
  swift_bridgeObjectRetain();
  sub_23F2F885C();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v0[68] = v23;
  v23(v17, v16, v19);
  sub_23F2F6524(v16);
  sub_23F2F885C();
  sub_23F2F86BC(v15 + *(int *)(v30 + 24), v31, qword_256E69B30);
  sub_23F2F6524(v15);
  sub_23F33B1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v33, v20, v21);
  sub_23F2F86BC(v34, (uint64_t)(v0 + 15), &qword_256E6A290);
  v24 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v25 = swift_allocObject();
  v0[69] = v25;
  *(_QWORD *)(v25 + 16) = v21;
  *(_QWORD *)(v25 + 24) = v22;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v25 + v24, v33, v21);
  sub_23F2F8754((uint64_t)(v0 + 15), v25 + ((v35 + v24 + 7) & 0xFFFFFFFFFFFFFFF8), &qword_256E6A290);
  v26 = (_QWORD *)swift_task_alloc();
  v0[70] = v26;
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55C40];
  sub_23F2EAFF0(&qword_256E6A3B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE55C40], MEMORY[0x24BE55C50]);
  sub_23F2EAFF0(&qword_256E6A3C0, v27, MEMORY[0x24BE55C48]);
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55E68];
  sub_23F2EAFF0(&qword_256E6A3C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE55E68], MEMORY[0x24BE55E78]);
  sub_23F2EAFF0(&qword_256E6A3D0, v28, MEMORY[0x24BE55E70]);
  *v26 = v0;
  v26[1] = sub_23F2F7358;
  return sub_23F33A574();
}

uint64_t sub_23F2F7358()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 312);
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F2F8850(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_task_switch();
}

uint64_t sub_23F2F73E4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  float v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String_optional v44;

  v1 = sub_23F33B1EC();
  sub_23F33AC1C();
  swift_bridgeObjectRetain();
  v2 = sub_23F33B1A4();
  v3 = sub_23F33B6D8();
  v42 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 200);
    v5 = sub_23F2F8874();
    v43 = sub_23F2F8874();
    *(_DWORD *)v5 = 134349314;
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v1 + 16);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    *(_QWORD *)(v0 + 160) = v4;
    swift_getMetatypeMetadata();
    v6 = sub_23F33B540();
    *(_QWORD *)(v0 + 168) = sub_23F30DBFC(v6, v7, &v43);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F2E8000, v2, v3, "generated context returned %{public}ld values for %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    sub_23F2F3748();
  }
  v9 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v26 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v38 = *(_QWORD *)(v0 + 512);
  v39 = *(_QWORD *)(v0 + 520);
  v40 = *(_QWORD *)(v0 + 504);
  v41 = *(_QWORD *)(v0 + 496);
  v36 = *(_QWORD *)(v0 + 416);
  v37 = *(_QWORD *)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 424);
  v30 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 392);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 376);
  v33 = *(_QWORD *)(v0 + 360);
  v34 = *(_QWORD *)(v0 + 352);
  v35 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  sub_23F2EB3F8(&qword_256E6A3D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33EA90;
  strcpy((char *)(inited + 32), "contextCount");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v42 + 16));
  *(_QWORD *)(inited + 56) = 0x54747865746E6F63;
  *(_QWORD *)(inited + 64) = 0xEB00000000657079;
  sub_23F2F0818(0, &qword_256E6A3E0);
  v26(v15, v14);
  v27(v12, v11, v13);
  sub_23F2F6524(v11);
  sub_23F33A9DC();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v13);
  *(_QWORD *)(inited + 72) = sub_23F32A1B0();
  type metadata accessor for Analytics();
  *(_QWORD *)(inited + 80) = 0x79636E6574616CLL;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  sub_23F33B8AC();
  sub_23F33B8B8();
  v17 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v17(v28, v32);
  v18 = sub_23F33BA14();
  v20 = (double)v18 * 1000.0 + (double)v19 * 1.0e-15;
  v21 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  *(float *)&v22 = v20;
  *(_QWORD *)(inited + 96) = objc_msgSend(v21, sel_initWithFloat_, v22);
  sub_23F2F0818(0, (unint64_t *)&qword_254346390);
  v23 = (void *)sub_23F33B4B0();
  v44.value._countAndFlagsBits = 0;
  v44.value._object = 0;
  static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(1953394499, 1769369458, v44, v23);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  v17(v30, v32);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v29, v37);
  sub_23F2F7998(v38, "IFCR.ContextProvider", 20, 2, v39, v15);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
}

uint64_t sub_23F2F7998(uint64_t a1, const char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  uint64_t result;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_signpost_id_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v32 = a6;
  v35 = (char *)a2;
  v7 = sub_23F33B168();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33B138();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v34 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - v15;
  v17 = sub_23F33B150();
  sub_23F33B174();
  v33 = sub_23F33B75C();
  result = sub_23F33B798();
  if ((result & 1) == 0)
    goto LABEL_5;
  v31 = v12;
  if ((a4 & 1) == 0)
  {
    if (!v35)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v35 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v35 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v35 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v35 = &v38;
LABEL_10:
  swift_retain();
  sub_23F33B198();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x24BEE7810])
  {
    v19 = 0;
    v30 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v30 = "ContextProvider=%{signpost.telemetry:string1,public}s %s";
    v19 = 2;
  }
  v20 = v34;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v16, v11);
  v21 = swift_slowAlloc();
  v22 = swift_slowAlloc();
  v37 = v22;
  *(_BYTE *)v21 = v19;
  *(_BYTE *)(v21 + 1) = v19;
  *(_WORD *)(v21 + 2) = 2082;
  v36 = v32;
  swift_getMetatypeMetadata();
  v23 = sub_23F33B540();
  v36 = sub_23F30DBFC(v23, v24, &v37);
  sub_23F33B7BC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2080;
  sub_23F33AA18();
  v25 = sub_23F33B834();
  v36 = sub_23F30DBFC(v25, v26, &v37);
  sub_23F33B7BC();
  swift_bridgeObjectRelease();
  v27 = sub_23F33B12C();
  _os_signpost_emit_with_name_impl(&dword_23F2E8000, v17, (os_signpost_type_t)v33, v27, v35, v30, (uint8_t *)v21, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x242669658](v22, -1, -1);
  MEMORY[0x242669658](v21, -1, -1);

  v28 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28(v16, v11);
  return ((uint64_t (*)(char *, uint64_t))v28)(v20, v11);
}

uint64_t sub_23F2F7CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v6 + 16) = a1;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16) + *(_QWORD *)(a6 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_23F2F7D6C;
  return v12(a4, a5, a6);
}

uint64_t sub_23F2F7D6C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F7DC0()
{
  uint64_t v0;

  sub_23F33B1E0();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContextDefinition.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F2F38FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContextDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(sub_23F2EE774() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

void ContextDefinition.sourceType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F2EE774();
  sub_23F2F86BC(v1 + *(int *)(v3 + 24), a1, qword_256E69B30);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F33A9E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_23F33A97C();
    swift_bridgeObjectRetain();
    if (sub_23F2EBFC0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F2EB3F8(qword_256E69B30);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      sub_23F2EBFCC((uint64_t)v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t destroy for ContextDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23F33A97C();
  result = sub_23F2EBFC0(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for ContextDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (void *)(a1 + v8);
  v13 = (const void *)(a2 + v8);
  v14 = sub_23F33A97C();
  swift_bridgeObjectRetain();
  if (sub_23F2EBFC0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    sub_23F2EBFCC((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithCopy for ContextDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23F33A97C();
  v14 = sub_23F2EBFC0((uint64_t)v11, 1, v13);
  v15 = sub_23F2EBFC0((uint64_t)v12, 1, v13);
  if (!v14)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  sub_23F2EBFCC((uint64_t)v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for ContextDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F33A97C();
  if (sub_23F2EBFC0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_23F2EBFCC((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ContextDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23F33A97C();
  v16 = sub_23F2EBFC0((uint64_t)v13, 1, v15);
  v17 = sub_23F2EBFC0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    v18 = *(_QWORD *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v19 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  sub_23F2EBFCC((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2F8488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v6 = sub_23F2F38FC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return sub_23F2EBFC0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v7 = sub_23F2EB3F8(qword_256E69B30);
    v8 = a1 + *(int *)(a3 + 24);
    return sub_23F2EBFC0(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F2F8540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_23F2F38FC();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v9 = sub_23F2EB3F8(qword_256E69B30);
    v10 = a1 + *(int *)(a4 + 24);
  }
  return sub_23F2EBFCC(v10, a2, a2, v9);
}

void sub_23F2F85DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F33A9E8();
  if (v0 <= 0x3F)
  {
    sub_23F2F8668();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F2F8668()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E6A368[0])
  {
    sub_23F33A97C();
    v0 = sub_23F33B7A4();
    if (!v1)
      atomic_store(v0, qword_256E6A368);
  }
}

void sub_23F2F86BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F2F8840(a1, a2, a3);
  sub_23F2F8868(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F2EB20C();
}

uint64_t sub_23F2F86E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  if (*(_QWORD *)(v0 + v3 + 24))
    sub_23F2F2DAC(v0 + v3);
  return swift_deallocObject();
}

void sub_23F2F8754(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F2F8840(a1, a2, a3);
  sub_23F2F8868(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F2EB20C();
}

uint64_t sub_23F2F8780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v2 + v9;
  v11 = v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_23F2F2C00;
  return sub_23F2F7CE8(a1, a2, v10, v11, v6, v7);
}

uint64_t sub_23F2F8824()
{
  return swift_task_alloc();
}

uint64_t sub_23F2F8838()
{
  return swift_task_alloc();
}

uint64_t sub_23F2F8840(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F2EB3F8(a3);
}

uint64_t sub_23F2F8850@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F2F885C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F2F8868@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F2F8874()
{
  return swift_slowAlloc();
}

uint64_t sub_23F2F887C()
{
  uint64_t result;

  result = sub_23F2F8898();
  qword_256E6D108 = result;
  return result;
}

uint64_t sub_23F2F8898()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t *, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t *v11;
  objc_class *v12;
  id v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v64;

  sub_23F2EB3F8(&qword_256E6A030);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F33EB10;
  *(_QWORD *)(v0 + 56) = type metadata accessor for AppInFocus(0);
  *(_QWORD *)(v0 + 64) = &off_250FC4340;
  v1 = sub_23F2F6A44((uint64_t *)(v0 + 32));
  v2 = *MEMORY[0x24BE57298];
  v3 = sub_23F33A9E8();
  v4 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104);
  v4(v1, v2, v3);
  v5 = type metadata accessor for ContextDefinition();
  v6 = (uint64_t)v1 + *(int *)(v5 + 24);
  v7 = sub_23F33A97C();
  sub_23F2EBFCC(v6, 1, 1, v7);
  v8 = (uint64_t *)((char *)v1 + *(int *)(v5 + 20));
  *v8 = 0xD000000000000050;
  v8[1] = 0x800000023F33C610;
  *(_QWORD *)(v0 + 96) = type metadata accessor for BluetoothDeviceType(0);
  *(_QWORD *)(v0 + 104) = &off_250FC4328;
  v9 = sub_23F2F6A44((uint64_t *)(v0 + 72));
  v4(v9, *MEMORY[0x24BE57248], v3);
  sub_23F2EBFCC((uint64_t)v9 + *(int *)(v5 + 24), 1, 1, v7);
  v10 = (uint64_t *)((char *)v9 + *(int *)(v5 + 20));
  *v10 = 0xD000000000000081;
  v10[1] = 0x800000023F33C670;
  *(_QWORD *)(v0 + 136) = type metadata accessor for CalendarProvider();
  *(_QWORD *)(v0 + 144) = &off_250FC4680;
  v11 = sub_23F2F6A44((uint64_t *)(v0 + 112));
  sub_23F2EE830((uint64_t)v11);
  v12 = (objc_class *)type metadata accessor for LocationProvider();
  v13 = objc_msgSend(objc_allocWithZone(v12), sel_init);
  *(_QWORD *)(v0 + 176) = v12;
  *(_QWORD *)(v0 + 184) = &off_250FC51F0;
  *(_QWORD *)(v0 + 152) = v13;
  *(_QWORD *)(v0 + 216) = type metadata accessor for MotionState(0);
  *(_QWORD *)(v0 + 224) = &off_250FC4310;
  v14 = sub_23F2F6A44((uint64_t *)(v0 + 192));
  v4(v14, *MEMORY[0x24BE57250], v3);
  sub_23F2EBFCC((uint64_t)v14 + *(int *)(v5 + 24), 1, 1, v7);
  v15 = (uint64_t *)((char *)v14 + *(int *)(v5 + 20));
  *v15 = 0xD0000000000000B1;
  v15[1] = 0x800000023F33C700;
  *(_QWORD *)(v0 + 256) = type metadata accessor for NowPlayingPlaybackState(0);
  *(_QWORD *)(v0 + 264) = &off_250FC42F8;
  v16 = sub_23F2F6A44((uint64_t *)(v0 + 232));
  v4(v16, *MEMORY[0x24BE572E0], v3);
  sub_23F2EBFCC((uint64_t)v16 + *(int *)(v5 + 24), 1, 1, v7);
  v17 = (uint64_t *)((char *)v16 + *(int *)(v5 + 20));
  *v17 = 0xD0000000000000A2;
  v17[1] = 0x800000023F33C7C0;
  *(_QWORD *)(v0 + 296) = type metadata accessor for SemanticLocationProvider();
  *(_QWORD *)(v0 + 304) = &off_250FC5550;
  v18 = sub_23F2F6A44((uint64_t *)(v0 + 272));
  v4(v18, *MEMORY[0x24BE57290], v3);
  v19 = (uint64_t)v18 + *(int *)(v5 + 24);
  v20 = *MEMORY[0x24BE571B0];
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104);
  v21(v19, v20, v7);
  sub_23F2EBFCC(v19, 0, 1, v7);
  v22 = (uint64_t *)((char *)v18 + *(int *)(v5 + 20));
  *v22 = 0xD0000000000000AELL;
  v22[1] = 0x800000023F33C870;
  *(_QWORD *)(v0 + 336) = type metadata accessor for SiriRequestContextProvider();
  *(_QWORD *)(v0 + 344) = &off_250FC5658;
  v23 = sub_23F2F6A44((uint64_t *)(v0 + 312));
  v4(v23, *MEMORY[0x24BE57240], v3);
  sub_23F2EBFCC((uint64_t)v23 + *(int *)(v5 + 24), 1, 1, v7);
  v24 = (uint64_t *)((char *)v23 + *(int *)(v5 + 20));
  v25 = type metadata accessor for PointOfInterestProvider();
  *v24 = 0;
  v24[1] = 0;
  *(_QWORD *)(v0 + 376) = v25;
  *(_QWORD *)(v0 + 384) = &off_250FC5530;
  v26 = sub_23F2F6A44((uint64_t *)(v0 + 352));
  v4(v26, *MEMORY[0x24BE57278], v3);
  v27 = (uint64_t)v26 + *(int *)(v5 + 24);
  v21(v27, v20, v7);
  sub_23F2EBFCC(v27, 0, 1, v7);
  v28 = (uint64_t *)((char *)v26 + *(int *)(v5 + 20));
  *v28 = 0xD00000000000004BLL;
  v28[1] = 0x800000023F33C920;
  v29 = type metadata accessor for ShortcutsOnScreenPersonProvider();
  swift_allocObject();
  v30 = sub_23F319390();
  *(_QWORD *)(v0 + 416) = v29;
  *(_QWORD *)(v0 + 424) = &off_250FC55F0;
  *(_QWORD *)(v0 + 392) = v30;
  v64 = v0;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33EB20;
  *(_QWORD *)(inited + 56) = type metadata accessor for OnScreenContentUriLinkProvider();
  *(_QWORD *)(inited + 64) = &off_250FC5418;
  v32 = sub_23F2F6A44((uint64_t *)(inited + 32));
  v4(v32, *MEMORY[0x24BE572D8], v3);
  v33 = (uint64_t)v32 + *(int *)(v5 + 24);
  v34 = *MEMORY[0x24BE571D0];
  v21(v33, v34, v7);
  sub_23F2EBFCC(v33, 0, 1, v7);
  v35 = (uint64_t *)((char *)v32 + *(int *)(v5 + 20));
  *v35 = 0xD00000000000005CLL;
  v35[1] = 0x800000023F33C970;
  *(_QWORD *)(inited + 96) = type metadata accessor for OnScreenContentEmailAddressProvider();
  *(_QWORD *)(inited + 104) = &off_250FC53B8;
  v36 = sub_23F2F6A44((uint64_t *)(inited + 72));
  v4(v36, *MEMORY[0x24BE57300], v3);
  v37 = (uint64_t)v36 + *(int *)(v5 + 24);
  v21(v37, v34, v7);
  sub_23F2EBFCC(v37, 0, 1, v7);
  v38 = (uint64_t *)((char *)v36 + *(int *)(v5 + 20));
  *v38 = 0xD000000000000067;
  v38[1] = 0x800000023F33C9D0;
  *(_QWORD *)(inited + 136) = type metadata accessor for OnScreenContentPhoneNumberProvider();
  *(_QWORD *)(inited + 144) = &off_250FC53D8;
  v39 = sub_23F2F6A44((uint64_t *)(inited + 112));
  v4(v39, *MEMORY[0x24BE572F0], v3);
  v40 = (uint64_t)v39 + *(int *)(v5 + 24);
  v21(v40, v34, v7);
  sub_23F2EBFCC(v40, 0, 1, v7);
  v41 = (uint64_t *)((char *)v39 + *(int *)(v5 + 20));
  *v41 = 0xD000000000000065;
  v41[1] = 0x800000023F33CA40;
  *(_QWORD *)(inited + 176) = type metadata accessor for OnScreenContentPostalAddressProvider();
  *(_QWORD *)(inited + 184) = &off_250FC53F8;
  v42 = sub_23F2F6A44((uint64_t *)(inited + 152));
  v4(v42, *MEMORY[0x24BE57308], v3);
  v43 = (uint64_t)v42 + *(int *)(v5 + 24);
  v21(v43, v34, v7);
  sub_23F2EBFCC(v43, 0, 1, v7);
  v44 = (uint64_t *)((char *)v42 + *(int *)(v5 + 20));
  *v44 = 0xD00000000000008ALL;
  v44[1] = 0x800000023F33CAB0;
  *(_QWORD *)(inited + 216) = type metadata accessor for OnScreenContentAppEntityProvider();
  *(_QWORD *)(inited + 224) = &off_250FC5378;
  v45 = sub_23F2F6A44((uint64_t *)(inited + 192));
  v4(v45, *MEMORY[0x24BE572E8], v3);
  v46 = (uint64_t)v45 + *(int *)(v5 + 24);
  v21(v46, v34, v7);
  sub_23F2EBFCC(v46, 0, 1, v7);
  v47 = (uint64_t *)((char *)v45 + *(int *)(v5 + 20));
  *v47 = 0xD000000000000046;
  v47[1] = 0x800000023F33CB40;
  *(_QWORD *)(inited + 256) = type metadata accessor for OnScreenContentDateTimeProvider();
  *(_QWORD *)(inited + 264) = &off_250FC5398;
  v48 = sub_23F2F6A44((uint64_t *)(inited + 232));
  v4(v48, *MEMORY[0x24BE57280], v3);
  v49 = (uint64_t)v48 + *(int *)(v5 + 24);
  v21(v49, v34, v7);
  sub_23F2EBFCC(v49, 0, 1, v7);
  v50 = (uint64_t *)((char *)v48 + *(int *)(v5 + 20));
  *v50 = 0xD000000000000045;
  v50[1] = 0x800000023F33CB90;
  *(_QWORD *)(inited + 296) = type metadata accessor for OnScreenPeopleProvider();
  *(_QWORD *)(inited + 304) = &off_250FC5488;
  v51 = sub_23F2F6A44((uint64_t *)(inited + 272));
  v4(v51, *MEMORY[0x24BE57268], v3);
  v52 = (uint64_t)v51 + *(int *)(v5 + 24);
  v21(v52, v34, v7);
  sub_23F2EBFCC(v52, 0, 1, v7);
  v53 = (uint64_t *)((char *)v51 + *(int *)(v5 + 20));
  *v53 = 0xD00000000000003CLL;
  v53[1] = 0x800000023F33CBE0;
  *(_QWORD *)(inited + 336) = type metadata accessor for OnScreenNotificationProvider();
  *(_QWORD *)(inited + 344) = &off_250FC5460;
  v54 = sub_23F2F6A44((uint64_t *)(inited + 312));
  sub_23F31578C(v54);
  *(_QWORD *)(inited + 376) = type metadata accessor for OnScreenHomeProvider();
  *(_QWORD *)(inited + 384) = &off_250FC5438;
  v55 = sub_23F2F6A44((uint64_t *)(inited + 352));
  sub_23F315504(v55);
  *(_QWORD *)(inited + 416) = type metadata accessor for ConversationalPeopleProvider();
  *(_QWORD *)(inited + 424) = &off_250FC4F48;
  v56 = sub_23F2F6A44((uint64_t *)(inited + 392));
  sub_23F3067C0(v56);
  *(_QWORD *)(inited + 456) = type metadata accessor for ConversationalPlacesProvider();
  *(_QWORD *)(inited + 464) = &off_250FC4F70;
  v57 = sub_23F2F6A44((uint64_t *)(inited + 432));
  sub_23F306A48(v57);
  *(_QWORD *)(inited + 496) = type metadata accessor for ConversationalAlarmProvider();
  *(_QWORD *)(inited + 504) = &off_250FC4EF8;
  v58 = sub_23F2F6A44((uint64_t *)(inited + 472));
  sub_23F30572C(v58);
  *(_QWORD *)(inited + 536) = type metadata accessor for ConversationalTimerProvider();
  *(_QWORD *)(inited + 544) = &off_250FC4FC0;
  v59 = sub_23F2F6A44((uint64_t *)(inited + 512));
  sub_23F306F58(v59);
  *(_QWORD *)(inited + 576) = type metadata accessor for ConversationalCalendarEventProvider();
  *(_QWORD *)(inited + 584) = &off_250FC4F20;
  v60 = sub_23F2F6A44((uint64_t *)(inited + 552));
  sub_23F306508(v60);
  *(_QWORD *)(inited + 616) = type metadata accessor for ConversationalReminderProvider();
  *(_QWORD *)(inited + 624) = &off_250FC4F98;
  v61 = sub_23F2F6A44((uint64_t *)(inited + 592));
  sub_23F306CD0(v61);
  *(_QWORD *)(inited + 656) = type metadata accessor for NowPlayingMediaItemProvider();
  *(_QWORD *)(inited + 664) = &off_250FC52E0;
  v62 = sub_23F2F6A44((uint64_t *)(inited + 632));
  sub_23F30F114(v62);
  sub_23F3095E4();
  return v64;
}

uint64_t sub_23F2F926C()
{
  uint64_t result;

  result = sub_23F2F9288();
  qword_256E6D110 = result;
  return result;
}

uint64_t sub_23F2F9288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34[2];
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v0 = sub_23F33A9E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextDefinition();
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E69990 != -1)
LABEL_21:
    swift_once();
  v6 = *(_QWORD *)(qword_256E6D108 + 16);
  if (v6)
  {
    v7 = qword_256E6D108 + 32;
    v29[1] = qword_256E6D108;
    swift_bridgeObjectRetain_n();
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    v31 = v0;
    while (1)
    {
      v32 = v6;
      sub_23F2F2D44(v7, (uint64_t)v35);
      v9 = v36;
      v10 = v37;
      sub_23F2F2D88(v35, v36);
      v11 = (uint64_t)v30;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      v12 = v1;
      v1 = *(_QWORD *)(v1 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v1)(v3, v11, v0);
      sub_23F2F6524(v11);
      sub_23F2F2D44((uint64_t)v35, (uint64_t)v34);
      swift_isUniquelyReferenced_nonNull_native();
      v33 = v8;
      sub_23F2F6194();
      if (__OFADD__(v8[2], (v14 & 1) == 0))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      v15 = v13;
      v0 = v14;
      sub_23F2EB3F8(&qword_256E6A3E8);
      v16 = sub_23F33B8E8();
      v8 = v33;
      if ((v16 & 1) != 0)
      {
        sub_23F2F6194();
        if ((v0 & 1) != (v18 & 1))
        {
          result = sub_23F33B9A8();
          __break(1u);
          return result;
        }
        v15 = v17;
      }
      swift_bridgeObjectRelease();
      if ((v0 & 1) == 0)
      {
        v8[(v15 >> 6) + 8] |= 1 << v15;
        ((void (*)(unint64_t, char *, uint64_t))v1)(v8[6] + *(_QWORD *)(v12 + 72) * v15, v3, v31);
        *(_QWORD *)(v8[7] + 8 * v15) = MEMORY[0x24BEE4AF8];
        v19 = v8[2];
        v20 = __OFADD__(v19, 1);
        v21 = v19 + 1;
        if (v20)
          goto LABEL_20;
        v8[2] = v21;
      }
      v22 = v8[7];
      v23 = *(_QWORD *)(v22 + 8 * v15);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v22 + 8 * v15) = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23F30B808();
        v23 = v26;
        *(_QWORD *)(v22 + 8 * v15) = v26;
      }
      v25 = *(_QWORD *)(v23 + 16);
      if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_23F30B808();
        v23 = v27;
        *(_QWORD *)(v22 + 8 * v15) = v27;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      sub_23F2F68D4(v34, v23 + 40 * v25 + 32);
      v1 = v12;
      v0 = v31;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v31);
      sub_23F2F2DAC((uint64_t)v35);
      v7 += 40;
      v6 = v32 - 1;
      if (v32 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
  swift_bridgeObjectRelease();
  return (uint64_t)v8;
}

uint64_t sub_23F2F95E0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  void (*v17)(char *, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v23;

  v5 = sub_23F33AB20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v16[1] = v2;
    v23 = MEMORY[0x24BEE4AF8];
    sub_23F2F2E68();
    v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v19 = v6;
    v10 = a1 + v18;
    v11 = *(_QWORD *)(v6 + 72);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v20 = a2;
    do
    {
      v17(v8, v10, v5);
      type metadata accessor for KGEntityGrounding();
      swift_allocObject();
      v12 = a2;
      KGEntityGrounding.init(knosisServer:)(v12);
      sub_23F309BD8();
      swift_release();
      sub_23F2FD004(v21, v22);
      v13 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F2F2E68();
        v13 = v23;
      }
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F2F2E68();
        v13 = v23;
      }
      *(_QWORD *)(v13 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v13 + v18 + v14 * v11, v8, v5);
      v23 = v13;
      v10 += v11;
      --v9;
      a2 = v20;
    }
    while (v9);

  }
  else
  {

    return MEMORY[0x24BEE4AF8];
  }
  return v13;
}

uint64_t sub_23F2F97C8(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_23F2F97FC(a1, a2, a3, &qword_256E6A568, (uint64_t (*)(uint64_t))MEMORY[0x24BE57518], (void (*)(_QWORD))MEMORY[0x24BE543D8], (uint64_t)sub_23F30B9DC);
}

uint64_t sub_23F2F97FC(void (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t), void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32[0] = a7;
  v39 = a2;
  v36 = a4;
  sub_23F2EB3F8(a4);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F2FD6F0();
  v15 = a5(v14);
  v38 = *(_QWORD *)(v15 - 8);
  sub_23F2FD8B0();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v37 = (uint64_t)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v35 = (uint64_t)v32 - v19;
  v20 = *(_QWORD *)(a3 + 16);
  if (!v20)
    return MEMORY[0x24BEE4AF8];
  a6(0);
  sub_23F2FD8BC();
  v21 = a3;
  v23 = a3 + v22;
  v25 = *(_QWORD *)(v24 + 72);
  v32[1] = v21;
  swift_bridgeObjectRetain();
  v26 = MEMORY[0x24BEE4AF8];
  v33 = v15;
  v34 = a1;
  while (1)
  {
    a1(v23);
    if (v7)
      break;
    if (sub_23F2EBFC0(v8, 1, v15) == 1)
    {
      sub_23F2FD434(v8, v36);
    }
    else
    {
      v27 = v35;
      sub_23F2FD884(v35, v8);
      sub_23F2FD884(v37, v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_23F2FD754(0, *(_QWORD *)(v26 + 16) + 1);
      v29 = *(_QWORD *)(v26 + 16);
      v28 = *(_QWORD *)(v26 + 24);
      if (v29 >= v28 >> 1)
        v26 = sub_23F2FD754(v28 > 1, v29 + 1);
      *(_QWORD *)(v26 + 16) = v29 + 1;
      v30 = v26
          + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
          + *(_QWORD *)(v38 + 72) * v29;
      v15 = v33;
      sub_23F2FD884(v30, v37);
      a1 = v34;
    }
    v23 += v25;
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      return v26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_23F2F9A30(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v5 = sub_23F33B8DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2EE798();
  v9 = v8 - v7;
  sub_23F33B1B0();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F2EE798();
  v11 = sub_23F33B15C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AC1C();
  sub_23F33B144();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v2 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime16ContextRetriever_signposter, v14, v11);
  if (a2)
    v15 = a1;
  else
    v15 = 0;
  v16 = 0xE000000000000000;
  if (a2)
    v16 = a2;
  v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime16ContextRetriever_clientApplicationId);
  *v17 = v15;
  v17[1] = v16;
  sub_23F33B8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime16ContextRetriever_clock, v9, v5);
  return v2;
}

uint64_t sub_23F2F9B7C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[12] = v0;
  v1[13] = *v0;
  v1[14] = sub_23F2EB3F8(&qword_256E6A4D0);
  v1[15] = sub_23F2F8824();
  v1[16] = sub_23F2F8838();
  v1[17] = sub_23F2F8838();
  v2 = sub_23F2FD7C8();
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = sub_23F2F6B70();
  v3 = sub_23F2FD7C0();
  v1[21] = v3;
  v1[22] = *(_QWORD *)(v3 - 8);
  v1[23] = sub_23F2F8824();
  v1[24] = sub_23F2F8838();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2F9C14()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  NSObject *v3;
  os_signpost_type_t v4;
  _WORD *v5;
  os_signpost_id_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, _QWORD *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = v0 + 2;
  sub_23F2FD858();
  sub_23F2FD850();
  v3 = sub_23F33B150();
  v4 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v5 = (_WORD *)sub_23F2FD508();
    v6 = sub_23F2FD73C(v5);
    sub_23F2FD68C(&dword_23F2E8000, v3, v4, v6, "IFCR.ContextRetriever.retrieveRequiredContextValues", "");
    sub_23F2F3748();
  }
  v7 = (__int128 *)(v1 + 7);
  v8 = v1[23];
  v9 = v1[24];
  v10 = v1[21];
  v11 = v1[22];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
  sub_23F2FD89C();
  sub_23F2FD748();
  v1[25] = sub_23F2FD554();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  sub_23F33B8AC();
  sub_23F2EB3F8(&qword_256E69FD0);
  v12 = sub_23F2F38FC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23F33EB30;
  v17 = v16 + v15;
  v46 = v13;
  sub_23F2FD70C(v17, *MEMORY[0x24BE57240]);
  sub_23F2FD70C(v17 + v14, *MEMORY[0x24BE57298]);
  sub_23F2FD70C(v17 + 2 * v14, *MEMORY[0x24BE57270]);
  sub_23F2FD70C(v17 + 3 * v14, *MEMORY[0x24BE57278]);
  v45 = v14;
  v47 = (_QWORD *)v12;
  sub_23F2FD70C(v17 + 4 * v14, *MEMORY[0x24BE57290]);
  if (qword_256E69998 != -1)
LABEL_41:
    swift_once();
  v44 = v1[14];
  sub_23F2FD6DC();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23F2FC680(v18, v16);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_23F2F2790();
  sub_23F2FCF08(v19, v2);
  v49 = v1[2];
  v50 = v1[5];
  v16 = v1[6];
  v42 = v1[3];
  v43 = (unint64_t)(v1[4] + 64) >> 6;
  swift_retain();
  v20 = MEMORY[0x24BEE4AF8];
  v48 = v1;
  v2 = v47;
  while (1)
  {
    v1[26] = v20;
    if (v16)
    {
      v51 = (v16 - 1) & v16;
      v21 = __clz(__rbit64(v16)) | (v50 << 6);
      goto LABEL_29;
    }
    v22 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v22 >= v43)
      goto LABEL_39;
    v23 = *(_QWORD *)(v42 + 8 * v22);
    v24 = v50 + 1;
    if (!v23)
    {
      sub_23F2FD86C();
      if (v25 == v26)
        goto LABEL_39;
      sub_23F2FD860();
      if (!v23)
      {
        sub_23F2FD86C();
        if (v25 == v26)
          goto LABEL_39;
        sub_23F2FD860();
        if (!v23)
        {
          sub_23F2FD86C();
          if (v25 == v26)
            goto LABEL_39;
          sub_23F2FD860();
          if (!v23)
          {
            sub_23F2FD86C();
            if (v25 == v26)
              goto LABEL_39;
            sub_23F2FD860();
            if (!v23)
            {
              v24 = v27 + 5;
              if (v27 + 5 >= v43)
                goto LABEL_39;
              v23 = *(_QWORD *)(v42 + 8 * v24);
              if (!v23)
                break;
            }
          }
        }
      }
    }
LABEL_28:
    v50 = v24;
    v51 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_29:
    v30 = v1[16];
    v29 = v1[17];
    v31 = v1[15];
    v32 = *(void (**)(uint64_t, unint64_t, _QWORD *))(v46 + 16);
    v32(v29, *(_QWORD *)(v49 + 48) + v21 * v45, v47);
    *(_QWORD *)(v29 + *(int *)(v44 + 48)) = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 8 * v21);
    sub_23F2FCF40(v29, v30);
    v33 = *(int *)(v44 + 48);
    v32(v31, v30, v47);
    v34 = *(_QWORD *)(v30 + v33);
    *(_QWORD *)(v31 + v33) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F2FD904(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      v36 = v34 + 32;
      v1 = v48;
      do
      {
        sub_23F2FD8F0(v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F2FD824();
          v20 = v38;
        }
        v37 = *(_QWORD *)(v20 + 16);
        if (v37 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_23F2FD824();
          v20 = v39;
        }
        *(_QWORD *)(v20 + 16) = v37 + 1;
        sub_23F2F68D4(v7, v20 + 40 * v37 + 32);
        v36 += 40;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v1 = v48;
    }
    sub_23F2FD434(v1[16], &qword_256E6A4D0);
    v16 = v51;
  }
  v28 = v50 + 7;
  while (v28 < v43)
  {
    v23 = *(_QWORD *)(v42 + 8 * v28++);
    if (v23)
    {
      v24 = v28 - 1;
      goto LABEL_28;
    }
  }
LABEL_39:
  swift_release();
  swift_release();
  v40 = (_QWORD *)swift_task_alloc();
  v1[27] = v40;
  *v40 = v1;
  v40[1] = sub_23F2FA124;
  return sub_23F2FA254(v20, 0, 1);
}

uint64_t sub_23F2FA124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2FD530();
  if (!v1)
    *(_QWORD *)(v2 + 232) = v0;
  sub_23F2FD4B0();
  return sub_23F2FD5D4();
}

uint64_t sub_23F2FA168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2FD7A4();
  sub_23F2FD568();
  sub_23F2FD698();
  sub_23F2FD598(v2, "IFCR.ContextRetriever.retrieveRequiredContextValues");
  sub_23F2F6CCC();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  sub_23F2FD78C();
  swift_task_dealloc();
  return sub_23F2FD600(*(_QWORD *)(v0 + 232), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FA1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2FD7A4();
  sub_23F2FD568();
  sub_23F2FD698();
  sub_23F2FD598(v2, "IFCR.ContextRetriever.retrieveRequiredContextValues");
  sub_23F2F6CCC();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  sub_23F2FD78C();
  swift_task_dealloc();
  return sub_23F2FD494(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FA254(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 204) = a3;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = a2;
  v4 = sub_23F33B1B0();
  *(_QWORD *)(v3 + 104) = v4;
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 120) = swift_task_alloc();
  v5 = sub_23F33AA00();
  *(_QWORD *)(v3 + 128) = v5;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2FA2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  char v5;
  void (*v6)(uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  *(_DWORD *)(v0 + 200) = *MEMORY[0x24BE57478];
  v4 = *(void (**)(uint64_t))(v2 + 104);
  *(_QWORD *)(v0 + 152) = v4;
  v4(v1);
  v5 = sub_23F33A9F4();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 160) = v6;
  v6(v1, v3);
  if ((v5 & 1) != 0)
  {
    sub_23F33A748();
    v7 = (void *)sub_23F33A73C();
    v8 = sub_23F33A730();

  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v0 + 168) = v8;
  v9 = *(_BYTE *)(v0 + 204);
  v11 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  sub_23F2EB3F8(&qword_256E6A4E0);
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v12;
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  *(_BYTE *)(v12 + 32) = v9 & 1;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v13;
  *v13 = v0;
  v13[1] = sub_23F2FA430;
  return sub_23F33B954();
}

uint64_t sub_23F2FA430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F2FD588();
  *v3 = *v2;
  *(_QWORD *)(v0 + 192) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2FA488()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 152))(v3, *(unsigned int *)(v0 + 200), v4);
  v5 = sub_23F33A9F4();
  v2(v3, v4);
  if ((v5 & 1) != 0 && v1)
  {
    v6 = *(id *)(v0 + 168);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_23F2F95E0(v7, v6);
    swift_bridgeObjectRelease_n();
    *(_QWORD *)(v0 + 64) = v8;
  }
  sub_23F33AC1C();
  v9 = sub_23F33B1A4();
  v10 = sub_23F33B6D8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_23F2F8874();
    *(_DWORD *)v11 = 134349056;
    sub_23F2FD878();
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    sub_23F33B7BC();
    _os_log_impl(&dword_23F2E8000, v9, v10, "retrieved %{public}ld values of context", v11, 0xCu);
    sub_23F2F3748();
  }
  v12 = *(void **)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  sub_23F2FD878();
  v16 = *(_QWORD *)(v0 + 64);
  sub_23F2FD500();
  swift_task_dealloc();
  return sub_23F2FD600(v16, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FA644()
{
  uint64_t v0;

  sub_23F2FD894();
  sub_23F2F6CE8();
  return sub_23F2FD6C8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FA684()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[14] = v0;
  v1[15] = *v0;
  v2 = sub_23F33B1B0();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = sub_23F2F6B70();
  v3 = sub_23F2F38FC();
  v1[19] = v3;
  v1[20] = *(_QWORD *)(v3 - 8);
  v1[21] = sub_23F2F6B70();
  v4 = sub_23F2FD7C8();
  v1[22] = v4;
  v1[23] = *(_QWORD *)(v4 - 8);
  v1[24] = sub_23F2F6B70();
  v5 = sub_23F2FD7C0();
  v1[25] = v5;
  v1[26] = *(_QWORD *)(v5 - 8);
  v1[27] = sub_23F2F8824();
  v1[28] = sub_23F2F8838();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FA724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  os_signpost_type_t v12;
  _QWORD *v13;
  unint64_t v14;
  NSObject *v15;
  _WORD *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(_QWORD, unint64_t, _QWORD);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t result;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  sub_23F2FD4BC();
  sub_23F2FD858();
  sub_23F2FD850();
  v15 = sub_23F33B150();
  sub_23F33B768();
  if ((sub_23F2FD910() & 1) != 0)
  {
    v16 = (_WORD *)sub_23F2FD508();
    v17 = sub_23F2FD73C(v16);
    sub_23F2FD68C(&dword_23F2E8000, v15, v12, v17, "IFCR.ContextRetriever.retrieveContextValues(query:)", "");
    sub_23F2F3748();
  }
  v18 = v13[26];
  v19 = v13[24];
  v20 = v13[14];

  sub_23F2FD714();
  sub_23F2FD89C();
  sub_23F2FD748();
  v13[29] = sub_23F2FD554();
  sub_23F2FD7E8();
  sub_23F2FD8F8();
  v21 = type metadata accessor for ContextScorer();
  v22 = sub_23F2FD91C();
  v23 = *(_QWORD *)(v22 + 16);
  v45 = v13;
  if (v23)
  {
    v19 = v13[20];
    v24 = v22 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v18 = *(_QWORD *)(v19 + 72);
    v25 = *(void (**)(_QWORD, unint64_t, _QWORD))(v19 + 16);
    a12 = v22;
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x24BEE4AF8];
    do
    {
      v25(v13[21], v24, v13[19]);
      if (qword_256E69998 != -1)
        swift_once();
      v21 = qword_256E6D110;
      if (*(_QWORD *)(qword_256E6D110 + 16))
      {
        sub_23F2F6194();
        v20 = v13[21];
        v14 = v13[19];
        if ((v28 & 1) != 0)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v27);
          sub_23F2FD6DC();
          sub_23F2FD6D0(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v29 = v26;
          }
          else
          {
            sub_23F2FD63C();
            v29 = v30;
          }
          v14 = *(_QWORD *)(v29 + 16);
          v20 = v14 + 1;
          if (v14 >= *(_QWORD *)(v29 + 24) >> 1)
          {
            sub_23F30B9F8();
            v29 = v31;
          }
          *(_QWORD *)(v29 + 16) = v20;
          v26 = v29;
          *(_QWORD *)(v29 + 8 * v14 + 32) = v21;
        }
        else
        {
          sub_23F2FD6D0(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
        }
        v13 = v45;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v19 + 8))(v13[21], v13[19]);
      }
      v24 += v18;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  v32 = sub_23F2FD22C(v26);
  v35 = sub_23F2FD624(v32, v33, v34);
  if (v35)
  {
    v46 = MEMORY[0x24BEE4AF8];
    sub_23F2FD60C(v35);
    result = sub_23F2FD794();
    if ((v21 & 0x8000000000000000) == 0)
    {
      result = sub_23F2FD460();
      while ((v19 & 0x8000000000000000) == 0)
      {
        if (v19 >= *(_QWORD *)(result + 16))
          goto LABEL_47;
        if (v37)
          goto LABEL_53;
        if ((v14 & 0x8000000000000000) != 0)
          goto LABEL_48;
        v39 = *(_QWORD *)(v38 + 8 * v19);
        if (v14 >= *(_QWORD *)(v39 + 16))
          goto LABEL_49;
        sub_23F2FD728(v39);
        sub_23F2FD6A4();
        if (v41)
        {
          sub_23F2FD654(v40);
          v21 = a10;
          v20 = v46;
        }
        result = sub_23F2FD764();
        if (v41)
          goto LABEL_50;
        result = sub_23F2FD66C();
        if (v42)
        {
          if (++v19)
          {
            while (1)
            {
              swift_bridgeObjectRetain();
              v21 = sub_23F2EB3F8(&qword_256E6A550);
              sub_23F2FD3F0();
              sub_23F2FD5B8();
              sub_23F2FD7D8();
              sub_23F2FD8A4();
              swift_bridgeObjectRelease();
              result = sub_23F2FD830();
              v37 = v21 == 0;
              if (v21)
                break;
              v43 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_52;
              ++v19;
              result = v26;
              if (!v43)
              {
                v14 = 0;
                goto LABEL_42;
              }
            }
            result = sub_23F2FD83C();
          }
          else
          {
            v14 = 0;
            v37 = 1;
LABEL_42:
            v19 = 0;
            v21 = a10;
            v38 = a12;
          }
        }
        else
        {
          v37 = 0;
        }
        if (++v18 == v21)
        {
          swift_bridgeObjectRelease();
          v13 = v45;
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
  }
  else
  {
    sub_23F2FD7D0();
    v20 = MEMORY[0x24BEE4AF8];
LABEL_45:
    v13[30] = v20;
    v44 = (_QWORD *)swift_task_alloc();
    v13[31] = v44;
    *v44 = v13;
    v44[1] = sub_23F2FAAD0;
    return sub_23F2FD4D8(v20, 0, 1);
  }
  return result;
}

uint64_t sub_23F2FAAD0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F2FD588();
  v0[11] = v2;
  v0[12] = v3;
  v0[13] = v1;
  *v4 = *v2;
  v0[32] = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2FAB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23F2FD4BC();
  sub_23F33AC10();
  v17 = sub_23F33B1A4();
  v18 = sub_23F33B6E4();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)sub_23F2FD508();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23F2E8000, v17, v18, "skipping scoring of retrieved contexts because macro is not enabled", v19, 2u);
    sub_23F2F3748();
  }
  v34 = v16[28];
  v35 = v16[27];
  v20 = v16[23];
  v36 = v16[21];
  v37 = v16[12];
  v22 = v16[17];
  v21 = v16[18];
  v23 = v16[16];
  v24 = v16[14];

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  sub_23F2FD698();
  sub_23F2FD8D0(v24, "IFCR.ContextRetriever.retrieveContextValues(query:)", 51, 2);
  swift_release();
  sub_23F2FD6D0(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F2FD78C();
  swift_task_dealloc();
  sub_23F2F6CE8();
  sub_23F2FD808();
  return v26(v25, v26, v27, v28, v29, v30, v31, v32, a9, v34, v35, v36, v37, a14, a15, a16);
}

uint64_t sub_23F2FAC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2FD7A4();
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  sub_23F2FD698();
  sub_23F2FD8D0(v2, "IFCR.ContextRetriever.retrieveContextValues(query:)", 51, 2);
  sub_23F2F6CCC();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  sub_23F2FD78C();
  return sub_23F2FD494(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FACF4(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  float v24;
  id v25;
  double v26;
  void *v27;
  os_signpost_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v34;
  Swift::String_optional v35;

  v5 = sub_23F2FD7C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2FD6F0();
  v31 = sub_23F33B168();
  v30 = *(_QWORD *)(v31 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE798();
  v29 = v9 - v8;
  v10 = sub_23F2FD7C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F2EE798();
  v12 = sub_23F33B150();
  sub_23F33B174();
  v13 = sub_23F33B75C();
  result = sub_23F33B798();
  if ((result & 1) == 0)
  {

    sub_23F2FD904(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_23F2EB3F8(&qword_256E6A3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F33EA90;
    *(_QWORD *)(inited + 32) = 0x6449746E65696C63;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    sub_23F2F0818(0, &qword_256E6A3E0);
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 48) = sub_23F32A1B0();
    *(_QWORD *)(inited + 56) = 0x79636E6574616CLL;
    *(_QWORD *)(inited + 64) = 0xE700000000000000;
    sub_23F33B8AC();
    sub_23F33B8B8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v22 = sub_23F33BA14();
    v24 = (double)v22 * 1000.0 + (double)v23 * 1.0e-15;
    v25 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    *(float *)&v26 = v24;
    *(_QWORD *)(inited + 72) = objc_msgSend(v25, sel_initWithFloat_, v26);
    type metadata accessor for Analytics();
    strcpy((char *)(inited + 80), "retrievalType");
    *(_WORD *)(inited + 94) = -4864;
    *(_QWORD *)(inited + 96) = sub_23F32A1B0();
    sub_23F2F0818(0, (unint64_t *)&qword_254346390);
    v27 = (void *)sub_23F33B4B0();
    v35.value._countAndFlagsBits = 0;
    v35.value._object = 0;
    static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(16, 0x3F33CCC0, v35, v27);
    return sub_23F2FD7D0();
  }
  v28 = v13;
  if ((a4 & 1) == 0)
  {
    v15 = v31;
    v16 = v30;
    v17 = v29;
    if (a2)
      goto LABEL_9;
    __break(1u);
  }
  v15 = v31;
  v16 = v30;
  v17 = v29;
  if ((unint64_t)a2 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      a2 = &v34;
LABEL_9:
      swift_retain();
      sub_23F33B198();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15) == *MEMORY[0x24BEE7810])
      {
        v18 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
        v18 = "";
      }
      v19 = (uint8_t *)sub_23F2FD508();
      *(_WORD *)v19 = 0;
      v20 = sub_23F33B12C();
      _os_signpost_emit_with_name_impl(&dword_23F2E8000, v12, v28, v20, a2, v18, v19, 2u);
      sub_23F2F3748();
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_23F2FB16C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 96) = a2;
  *(_QWORD *)(v4 + 104) = v3;
  *(_BYTE *)(v4 + 240) = a3;
  *(_QWORD *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 112) = *v3;
  v5 = sub_23F2F38FC();
  *(_QWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 136) = sub_23F2F6B70();
  v6 = sub_23F2FD7C8();
  *(_QWORD *)(v4 + 144) = v6;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 160) = sub_23F2F6B70();
  v7 = sub_23F2FD7C0();
  *(_QWORD *)(v4 + 168) = v7;
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 184) = sub_23F2F8824();
  *(_QWORD *)(v4 + 192) = sub_23F2F8838();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FB1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  os_signpost_type_t v12;
  _QWORD *v13;
  NSObject *v14;
  _WORD *v15;
  os_signpost_id_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t result;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;

  sub_23F2FD4BC();
  sub_23F2FD858();
  sub_23F2FD850();
  v14 = sub_23F33B150();
  sub_23F33B768();
  if ((sub_23F2FD910() & 1) != 0)
  {
    v15 = (_WORD *)sub_23F2FD508();
    v16 = sub_23F2FD73C(v15);
    sub_23F2FD68C(&dword_23F2E8000, v14, v12, v16, "IFCR.ContextRetriever.retrieveContextValues(contextTypes:)", "");
    sub_23F2F3748();
  }
  v17 = v13[22];
  v18 = v13[20];
  v19 = v13[13];
  v20 = v13[11];

  sub_23F2FD714();
  sub_23F2FD89C();
  sub_23F2FD748();
  v13[25] = sub_23F2FD554();
  sub_23F2FD7E8();
  sub_23F2FD8F8();
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  v47 = v13;
  if (v21)
  {
    v23 = v13[16];
    v24 = v13[11] + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v18 = *(_QWORD *)(v23 + 72);
    v20 = *(_QWORD *)(v23 + 16);
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x24BEE4AF8];
    do
    {
      ((void (*)(_QWORD, unint64_t, _QWORD))v20)(v13[17], v24, v13[15]);
      if (qword_256E69998 != -1)
        swift_once();
      v26 = qword_256E6D110;
      if (*(_QWORD *)(qword_256E6D110 + 16))
      {
        sub_23F2F6194();
        v17 = v13[17];
        v19 = v13[15];
        if ((v28 & 1) != 0)
        {
          v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
          sub_23F2FD6DC();
          sub_23F2FD7F8();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v30 = v25;
          }
          else
          {
            sub_23F2FD63C();
            v30 = v31;
          }
          v19 = *(_QWORD *)(v30 + 16);
          v17 = v19 + 1;
          if (v19 >= *(_QWORD *)(v30 + 24) >> 1)
          {
            sub_23F30B9F8();
            v30 = v32;
          }
          *(_QWORD *)(v30 + 16) = v17;
          v25 = v30;
          *(_QWORD *)(v30 + 8 * v19 + 32) = v29;
        }
        else
        {
          sub_23F2FD7F8();
        }
        v13 = v47;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v23 + 8))(v13[17], v13[15]);
      }
      v24 += v18;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v25 = MEMORY[0x24BEE4AF8];
  }
  v33 = sub_23F2FD22C(v25);
  v36 = sub_23F2FD624(v33, v34, v35);
  if (v36)
  {
    v48 = v22;
    sub_23F2FD60C(v36);
    result = sub_23F2FD794();
    if ((v22 & 0x8000000000000000) == 0)
    {
      result = sub_23F2FD460();
      while ((v18 & 0x8000000000000000) == 0)
      {
        if (v18 >= *(_QWORD *)(result + 16))
          goto LABEL_47;
        if (v38)
          goto LABEL_53;
        if ((v20 & 0x8000000000000000) != 0)
          goto LABEL_48;
        v40 = *(_QWORD *)(v39 + 8 * v18);
        if (v20 >= *(_QWORD *)(v40 + 16))
          goto LABEL_49;
        sub_23F2FD728(v40);
        sub_23F2FD6A4();
        if (v42)
        {
          sub_23F2FD654(v41);
          v22 = a10;
          v19 = v48;
        }
        result = sub_23F2FD764();
        if (v42)
          goto LABEL_50;
        result = sub_23F2FD66C();
        if (v43)
        {
          if (++v18)
          {
            while (1)
            {
              swift_bridgeObjectRetain();
              v22 = sub_23F2EB3F8(&qword_256E6A550);
              sub_23F2FD3F0();
              sub_23F2FD5B8();
              sub_23F2FD7D8();
              sub_23F2FD8A4();
              swift_bridgeObjectRelease();
              result = sub_23F2FD830();
              v38 = v22 == 0;
              if (v22)
                break;
              v44 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_52;
              ++v18;
              result = v25;
              if (!v44)
              {
                v20 = 0;
                goto LABEL_42;
              }
            }
            result = sub_23F2FD83C();
          }
          else
          {
            v20 = 0;
            v38 = 1;
LABEL_42:
            v18 = 0;
            v22 = a10;
            v39 = a12;
          }
        }
        else
        {
          v38 = 0;
        }
        if (++v17 == v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
  }
  else
  {
    sub_23F2FD7D0();
    v19 = MEMORY[0x24BEE4AF8];
LABEL_45:
    v47[26] = v19;
    v45 = *((_BYTE *)v47 + 240);
    v46 = (_QWORD *)swift_task_alloc();
    v47[27] = v46;
    *v46 = v47;
    v46[1] = sub_23F2FB590;
    return sub_23F2FD4D8(v19, v47[12], v45 & 1);
  }
  return result;
}

uint64_t sub_23F2FB590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2FD530();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 232) = v0;
  }
  sub_23F2FD4B0();
  return sub_23F2FD5D4();
}

uint64_t sub_23F2FB5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  sub_23F2FD698();
  sub_23F2FD5E4(v2, "IFCR.ContextRetriever.retrieveContextValues(contextTypes:)");
  sub_23F2F6CCC();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 232));
}

uint64_t sub_23F2FB66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRelease();
  sub_23F2FD698();
  sub_23F2FD5E4(v2, "IFCR.ContextRetriever.retrieveContextValues(contextTypes:)");
  sub_23F2F6CCC();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  return sub_23F2FD6C8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FB6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 232) = a5;
  *(_QWORD *)(v5 + 144) = a3;
  *(_QWORD *)(v5 + 152) = a4;
  *(_QWORD *)(v5 + 128) = a1;
  *(_QWORD *)(v5 + 136) = a2;
  v6 = sub_23F2EB3F8(&qword_256E6A4F8);
  *(_QWORD *)(v5 + 160) = v6;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2FB79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 *v20;
  uint64_t v21;

  sub_23F2FD4BC();
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v20 = (__int128 *)(v0 + 16);
    v3 = v1 + 32;
    v4 = sub_23F33B648();
    sub_23F2FD6DC();
    do
    {
      v21 = v2;
      v6 = *(_QWORD *)(v0 + 184);
      v5 = *(_QWORD *)(v0 + 192);
      v7 = *(_BYTE *)(v0 + 232);
      v8 = *(_QWORD *)(v0 + 152);
      sub_23F2EBFCC(v5, 1, 1, v4);
      sub_23F2F2D44(v3, (uint64_t)v20);
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = 0;
      *(_QWORD *)(v9 + 24) = 0;
      sub_23F2F68D4(v20, v9 + 32);
      *(_QWORD *)(v9 + 72) = v8;
      *(_BYTE *)(v9 + 80) = v7 & 1;
      sub_23F2FD0D0(v5, v6);
      v10 = sub_23F2EBFC0(v6, 1, v4);
      v11 = *(_QWORD *)(v0 + 184);
      if (v10 == 1)
      {
        sub_23F2FD434(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_254346358);
      }
      else
      {
        sub_23F33B63C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v11, v4);
      }
      if (*(_QWORD *)(v9 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v12 = sub_23F33B618();
        v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        v12 = 0;
        v14 = 0;
      }
      v15 = **(_QWORD **)(v0 + 136);
      sub_23F2EB3F8(&qword_256E6A4E0);
      v16 = v14 | v12;
      if (v14 | v12)
      {
        v16 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v12;
        *(_QWORD *)(v0 + 80) = v14;
      }
      v17 = *(_QWORD *)(v0 + 192);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v16;
      *(_QWORD *)(v0 + 104) = v15;
      swift_task_create();
      swift_release();
      sub_23F2FD434(v17, (uint64_t *)&unk_254346358);
      v3 += 40;
      --v2;
    }
    while (v21 != 1);
    swift_bridgeObjectRelease();
  }
  sub_23F2EB3F8(&qword_256E6A4E0);
  sub_23F2EB3F8(&qword_256E6A510);
  sub_23F33B678();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v18;
  *v18 = v0;
  v18[1] = sub_23F2FBA20;
  sub_23F2FD8DC();
  sub_23F2FD808();
  return sub_23F33B684();
}

uint64_t sub_23F2FBA20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F2FD588();
  sub_23F2FD88C(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 208) = MEMORY[0x24BEE4AF8];
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2FBA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 208);
  if (!v1)
  {
    v21 = *(_QWORD **)(v0 + 128);
    sub_23F2FD6E4(*(_QWORD *)(v0 + 168));
    *v21 = v2;
    sub_23F2FD894();
    sub_23F2F6CE8();
    sub_23F2FD528();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v2 + 16);
  if (__OFADD__(v4, v3))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *(_QWORD *)(v0 + 208);
  if (!isUniquelyReferenced_nonNull_native || v4 + v3 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = sub_23F30BA14();
  *(_QWORD *)(v0 + 216) = v6;
  if (!*(_QWORD *)(v1 + 16))
  {
    if (!v3)
      goto LABEL_18;
    goto LABEL_20;
  }
  v7 = *(_QWORD *)(v6 + 16);
  v8 = (*(_QWORD *)(v6 + 24) >> 1) - v7;
  sub_23F33AB20();
  if (v8 < v3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_23F2FD8BC();
  v11 = *(_QWORD *)(v10 + 72);
  v12 = v6 + v9 + v11 * v7;
  v13 = v1 + v9;
  v14 = v11 * v3;
  v15 = v12 + v14;
  v16 = v13 + v14;
  if (v13 < v15 && v12 < v16)
    return sub_23F33B93C();
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_18:
    sub_23F2FD7D0();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v23;
    *v23 = v0;
    v23[1] = sub_23F2FBC80;
    sub_23F2FD8DC();
    return sub_23F33B684();
  }
  v18 = *(_QWORD *)(v6 + 16);
  v19 = __OFADD__(v18, v3);
  v20 = v18 + v3;
  if (!v19)
  {
    *(_QWORD *)(v6 + 16) = v20;
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F2FBC80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F2FD588();
  sub_23F2FD88C(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 216);
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2FBCD8()
{
  uint64_t v0;

  sub_23F2FD6E4(*(_QWORD *)(v0 + 168));
  sub_23F2FD500();
  sub_23F2F6CE8();
  sub_23F2FD528();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2FBD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 + 256) = a6;
  *(_QWORD *)(v6 + 160) = a4;
  *(_QWORD *)(v6 + 168) = a5;
  *(_QWORD *)(v6 + 152) = a1;
  v7 = sub_23F33B1B0();
  *(_QWORD *)(v6 + 176) = v7;
  *(_QWORD *)(v6 + 184) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 192) = swift_task_alloc();
  type metadata accessor for ContextDefinition();
  *(_QWORD *)(v6 + 200) = swift_task_alloc();
  v8 = sub_23F33A9E8();
  *(_QWORD *)(v6 + 208) = v8;
  *(_QWORD *)(v6 + 216) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2FBDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD **)(v0 + 160);
  v6 = v5[3];
  v7 = v5[4];
  sub_23F2F2D88(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  sub_23F2F6524(v4);
  sub_23F2FD8F0((uint64_t)v5);
  v8 = swift_allocObject();
  *(_QWORD *)(v0 + 232) = v8;
  sub_23F2F68D4((__int128 *)(v0 + 16), v8 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v9;
  sub_23F2EB3F8(&qword_256E6A528);
  *v9 = v0;
  v9[1] = sub_23F2FBF14;
  return sub_23F33A718();
}

uint64_t sub_23F2FBF14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F2FD588();
  *v3 = *v2;
  *(_QWORD *)(v0 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F2FBF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 224);
    v3 = swift_task_alloc();
    *(_QWORD *)(v3 + 16) = v2;
    sub_23F2FD6DC();
    v4 = sub_23F2F97FC((void (*)(_QWORD))sub_23F2FD1D8, v3, v1, &qword_256E6A530, (uint64_t (*)(uint64_t))MEMORY[0x24BE577B0], (void (*)(_QWORD))MEMORY[0x24BE57518], (uint64_t)sub_23F30BA14);
    swift_bridgeObjectRelease();
    sub_23F2FD500();
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  v5 = *(_QWORD *)(v0 + 216);
  **(_QWORD **)(v0 + 152) = v4;
  sub_23F2FD6E4(v5);
  swift_bridgeObjectRelease();
  sub_23F2FD528();
  sub_23F2FD500();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2FC04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F2FD4BC();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  v27 = *(_QWORD *)(v24 + 160);
  swift_release();
  sub_23F33AC1C();
  sub_23F2FD8F0(v27);
  v28 = sub_23F33B1A4();
  v29 = sub_23F33B6FC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)sub_23F2F8874();
    a13 = sub_23F2F8874();
    *(_DWORD *)v30 = 136315138;
    sub_23F2F2D44(v24 + 56, v24 + 96);
    sub_23F2EB3F8(&qword_256E6A2D0);
    v31 = sub_23F33B540();
    *(_QWORD *)(v24 + 144) = sub_23F30DBFC(v31, v32, &a13);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    sub_23F2F2DAC(v24 + 56);
    _os_log_impl(&dword_23F2E8000, v28, v29, "timed out while retrieving context for %s", v30, 0xCu);
    swift_arrayDestroy();
    sub_23F2F3748();
  }
  v34 = *(_QWORD *)(v24 + 184);
  v33 = *(_QWORD *)(v24 + 192);
  v35 = *(_QWORD *)(v24 + 176);

  sub_23F2F2DAC(v24 + 56);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  v36 = *(_QWORD *)(v24 + 216);
  v37 = *(_QWORD *)(v24 + 224);
  v38 = *(_QWORD *)(v24 + 208);
  **(_QWORD **)(v24 + 152) = MEMORY[0x24BEE4AF8];
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
  swift_bridgeObjectRelease();
  sub_23F2FD894();
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD808();
  return v39(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_23F2FC240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23F2FC258()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_256E69988 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23F2FC2D4;
  return sub_23F2F40F8(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23F2FC2D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FC324()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F2FC33C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23F33A9E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F2EB3F8(&qword_256E6A538);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F33AA60();
  sub_23F33AA6C();
  v13 = sub_23F33A958();
  sub_23F2EBFCC((uint64_t)v10, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
  sub_23F33AA78();
  sub_23F33AAE4();
  v14 = sub_23F33AB20();
  return sub_23F2EBFCC(a2, 0, 1, v14);
}

void sub_23F2FC530()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F33B15C();
  sub_23F2FD514(v0);
  swift_bridgeObjectRelease();
  v1 = sub_23F33B8DC();
  sub_23F2FD514(v1);
  sub_23F2EB20C();
}

uint64_t sub_23F2FC58C()
{
  sub_23F2FC530();
  return swift_deallocClassInstance();
}

uint64_t sub_23F2FC5B0()
{
  return type metadata accessor for ContextRetriever();
}

uint64_t type metadata accessor for ContextRetriever()
{
  uint64_t result;

  result = qword_256E6A430;
  if (!qword_256E6A430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F2FC5F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F33B15C();
  if (v1 <= 0x3F)
  {
    result = sub_23F33B8DC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23F2FC680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  unint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  _QWORD v13[2];

  v4 = a1;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F32F2C8(0, v7, v9);
    swift_bridgeObjectRetain();
    v10 = sub_23F2FC83C(v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (unint64_t *)swift_slowAlloc();
    sub_23F32F2C8(0, v7, v11);
    swift_bridgeObjectRetain();
    v4 = sub_23F2FC83C(v11, v7, v4, a2);
    MEMORY[0x242669658](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23F2FC83C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  char *v45;

  v33 = a2;
  v34 = a1;
  v40 = sub_23F2EB3F8(&qword_256E6A4D0);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F33A9E8();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v41 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v37 = 0;
  v38 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v35 = v9;
  v36 = a4;
  while (v16)
  {
    v43 = (v16 - 1) & v16;
    v44 = v12;
    v17 = __clz(__rbit64(v16)) | (v12 << 6);
LABEL_20:
    v22 = v41;
    v23 = *(_QWORD *)(v9 + 72);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v25 = v45;
    v24(v45, v41[6] + v23 * v17, v8);
    v26 = v22[7];
    v42 = v17;
    v27 = *(_QWORD *)(v26 + 8 * v17);
    v24(v7, (unint64_t)v25, v8);
    *(_QWORD *)&v7[*(int *)(v40 + 48)] = v27;
    v28 = *(_QWORD *)(a4 + 16);
    if (v28)
    {
      v29 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      sub_23F2FD1F0(&qword_256E6A268, MEMORY[0x24BE57340]);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while ((sub_23F33B4EC() & 1) == 0)
      {
        v29 += v23;
        if (!--v28)
        {
          a4 = v36;
          swift_bridgeObjectRelease();
          v9 = v35;
          goto LABEL_26;
        }
      }
      a4 = v36;
      swift_bridgeObjectRelease();
      sub_23F2FD434((uint64_t)v7, &qword_256E6A4D0);
      swift_bridgeObjectRelease();
      v9 = v35;
      result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v45, v8);
      v16 = v43;
      *(unint64_t *)((char *)v34 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
      v30 = __OFADD__(v37++, 1);
      v12 = v44;
      if (v30)
      {
        __break(1u);
LABEL_30:
        v31 = sub_23F2FCBCC(v34, v33, v37, v41);
        swift_bridgeObjectRelease();
        return v31;
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
LABEL_26:
      v16 = v43;
      v12 = v44;
      sub_23F2FD434((uint64_t)v7, &qword_256E6A4D0);
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v45, v8);
    }
  }
  v18 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v18 >= v39)
    goto LABEL_30;
  v19 = *(_QWORD *)(v38 + 8 * v18);
  v20 = v12 + 1;
  if (v19)
    goto LABEL_19;
  v20 = v12 + 2;
  if (v12 + 2 >= v39)
    goto LABEL_30;
  v19 = *(_QWORD *)(v38 + 8 * v20);
  if (v19)
    goto LABEL_19;
  v20 = v12 + 3;
  if (v12 + 3 >= v39)
    goto LABEL_30;
  v19 = *(_QWORD *)(v38 + 8 * v20);
  if (v19)
  {
LABEL_19:
    v43 = (v19 - 1) & v19;
    v44 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
    goto LABEL_20;
  }
  v21 = v12 + 4;
  if (v12 + 4 >= v39)
    goto LABEL_30;
  v19 = *(_QWORD *)(v38 + 8 * v21);
  if (v19)
  {
    v20 = v12 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v39)
      goto LABEL_30;
    v19 = *(_QWORD *)(v38 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_23F2FCBCC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v45 = sub_23F33A9E8();
  v41 = *(_QWORD *)(v45 - 8);
  v8 = MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)&v36 - v10;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_23F2EB3F8(&qword_256E6A540);
  result = sub_23F33B930();
  v12 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v39 = a4;
  v16 = v45;
  while (1)
  {
    if (v13)
    {
      v42 = (v13 - 1) & v13;
      v43 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v38)
        return v12;
      v19 = v37[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v38)
          return v12;
        v19 = v37[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v38)
            return v12;
          v19 = v37[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v38)
              return v12;
            v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v38)
                  return v12;
                v19 = v37[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v42 = (v19 - 1) & v19;
      v43 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v40;
    v23 = v41;
    v24 = *(_QWORD *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v40, a4[6] + v24 * v17, v16);
    v25 = *(_QWORD *)(a4[7] + 8 * v17);
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v44, v22, v16);
    sub_23F2FD1F0(&qword_256E6A260, MEMORY[0x24BE57338]);
    swift_bridgeObjectRetain();
    result = sub_23F33B4BC();
    v27 = -1 << *(_BYTE *)(v12 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) == 0)
      break;
    v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v15 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v12 + 48) + v30 * v24, v44, v45);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v30) = v25;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_39;
    a4 = v39;
    v13 = v42;
    v14 = v43;
    if (!a3)
      return v12;
  }
  v31 = 0;
  v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    v33 = v29 == v32;
    if (v29 == v32)
      v29 = 0;
    v31 |= v33;
    v34 = *(_QWORD *)(v15 + 8 * v29);
    if (v34 != -1)
    {
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23F2FCF08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_23F2FCF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2FCF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23F2FD45C;
  return sub_23F2FB6FC(a1, a2, v6, v7, v8);
}

void sub_23F2FD004(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a2)
  {

  }
}

uint64_t sub_23F2FD020()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23F2F2DAC(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_23F2FD04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 32;
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_BYTE *)(v1 + 80);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23F2FD45C;
  return sub_23F2FBD28(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23F2FD0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8((uint64_t *)&unk_254346358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2FD118()
{
  uint64_t v0;

  sub_23F2F2DAC(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F2FD13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F2FD194;
  return sub_23F2FC240(a1, v1 + 16);
}

uint64_t sub_23F2FD194()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_23F2FD88C(&v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23F2FD1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F2FC33C(*(_QWORD *)(v1 + 16), a1);
}

void sub_23F2FD1F0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23F33A9E8();
    atomic_store(MEMORY[0x2426695B0](a2, v4), a1);
  }
  sub_23F2EB20C();
}

uint64_t sub_23F2FD22C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
    {
      return 0;
    }
    else if (result != 1)
    {
      v3 = 0;
      v4 = a1 + 40;
      while (!*(_QWORD *)(*(_QWORD *)(v4 + 8 * v3) + 16))
      {
        if (result - 1 == ++v3)
          return result;
      }
      return v3 + 1;
    }
  }
  return result;
}

uint64_t sub_23F2FD298(uint64_t result, uint64_t a2, char a3, int64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;

  if (a4 != result)
  {
    if (a4 < result)
    {
      v8 = a3 & 1;
      v9 = result;
      v10 = a4;
      v11 = a5;
      a5 = a2;
      if ((a6 & 1) != 0)
        goto LABEL_19;
      goto LABEL_7;
    }
LABEL_18:
    v8 = a6 & 1;
    v9 = a4;
    v10 = result;
    v11 = a2;
    if ((a3 & 1) != 0)
    {
LABEL_19:
      if ((uint64_t)v10 < v9)
      {
        v7 = 0;
        v12 = *(_QWORD *)(a7 + 16);
LABEL_21:
        v15 = v10;
        if (v9 <= (uint64_t)(v10 + 1))
          ++v10;
        else
          v10 = v9;
        while (v15 < v12)
        {
          v16 = *(_QWORD *)(*(_QWORD *)(a7 + 32 + 8 * v15) + 16);
          v14 = __OFADD__(v7, v16);
          v7 += v16;
          if (v14)
            goto LABEL_37;
          if ((uint64_t)++v15 >= v9)
            goto LABEL_27;
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v7 = 0;
      if ((v8 & 1) == 0)
        goto LABEL_30;
      goto LABEL_33;
    }
LABEL_7:
    if ((v10 & 0x8000000000000000) != 0)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v12 = *(_QWORD *)(a7 + 16);
    if (v10 >= v12)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(a7 + 8 * v10 + 32) + 16);
    v14 = __OFSUB__(v13, v11);
    v7 = v13 - v11;
    if (v14)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if ((uint64_t)++v10 < v9)
      goto LABEL_21;
LABEL_27:
    if ((v8 & 1) == 0)
    {
LABEL_30:
      if ((v10 & 0x8000000000000000) != 0)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v10 >= *(_QWORD *)(a7 + 16))
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      v14 = __OFADD__(v7, a5);
      v7 += a5;
      if (v14)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
LABEL_33:
    if (a4 >= result)
      return v7;
    v14 = __OFSUB__(0, v7);
    v7 = -v7;
    if (!v14)
      return v7;
    goto LABEL_46;
  }
  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    goto LABEL_38;
  }
  if ((a3 & 1) == 0)
  {
    if (a4 < 0)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (*(_QWORD *)(a7 + 16) <= (unint64_t)a4)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v7 = a5 - a2;
    if (!__OFSUB__(a5, a2))
      return v7;
    __break(1u);
    goto LABEL_18;
  }
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_23F2FD3F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6A558;
  if (!qword_256E6A558)
  {
    v1 = sub_23F2F244C(&qword_256E6A550);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, &qword_256E6A558);
  }
  return result;
}

void sub_23F2FD434(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(a2);
  sub_23F2FD514(v2);
  sub_23F2EB20C();
}

uint64_t sub_23F2FD460()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F2FD494(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F2FD4D8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23F2FA254(a1, a2, a3);
}

uint64_t sub_23F2FD4F4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F2FD500()
{
  return swift_task_dealloc();
}

uint64_t sub_23F2FD508()
{
  return swift_slowAlloc();
}

uint64_t sub_23F2FD514(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23F2FD528()
{
  return swift_task_dealloc();
}

uint64_t sub_23F2FD530()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 224) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F2FD554()
{
  return sub_23F33B180();
}

uint64_t sub_23F2FD568()
{
  return swift_bridgeObjectRelease();
}

void sub_23F2FD588()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F2FD598(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return sub_23F2FACF4(v2, a2, 51, 2);
}

void sub_23F2FD5B8()
{
  sub_23F30C32C();
}

uint64_t sub_23F2FD5D4()
{
  return swift_task_switch();
}

uint64_t sub_23F2FD5E4(uint64_t a1, const char *a2)
{
  return sub_23F2FACF4(a1, a2, 58, 2);
}

uint64_t sub_23F2FD600(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F2FD60C(uint64_t a1)
{
  return sub_23F2F2E9C(0, a1 & ~(a1 >> 63), 0);
}

uint64_t sub_23F2FD624(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_23F2FD298(a1, a2, a3 & 1, *(_QWORD *)(v3 + 16), 0, 1, v3);
}

void sub_23F2FD63C()
{
  sub_23F30B9F8();
}

uint64_t sub_23F2FD654@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;

  return sub_23F2F2E9C(a1 > 1, v1, 1);
}

uint64_t sub_23F2FD66C()
{
  uint64_t v0;

  return v0;
}

void sub_23F2FD68C(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_23F2FD6C0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F2FD6C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F2FD6D0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F2FD6DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F2FD6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F2FD6F0()
{
  return 0;
}

uint64_t sub_23F2FD70C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F2FD714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t sub_23F2FD728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F2F2D44(a1 + v3 * v1 + 32, v2);
}

uint64_t sub_23F2FD73C(_WORD *a1)
{
  *a1 = 0;
  return sub_23F33B12C();
}

uint64_t sub_23F2FD748()
{
  return swift_allocObject();
}

uint64_t sub_23F2FD754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 - 144))(a1, a2, 1, v2);
}

uint64_t sub_23F2FD764()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 16) = v4;
  return sub_23F2F68D4(v0, v3 + v2 * v1 + 32);
}

uint64_t sub_23F2FD78C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F2FD794()
{
  uint64_t v0;

  return sub_23F2FD22C(v0);
}

uint64_t sub_23F2FD7C0()
{
  return sub_23F33B138();
}

uint64_t sub_23F2FD7C8()
{
  return sub_23F33B8C4();
}

uint64_t sub_23F2FD7D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2FD7D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F2FD7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F2FD7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_23F2FD824()
{
  sub_23F30B808();
}

uint64_t sub_23F2FD830()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F2FD83C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F2FD850()
{
  return sub_23F33B120();
}

uint64_t sub_23F2FD858()
{
  return sub_23F33B150();
}

uint64_t sub_23F2FD878()
{
  return swift_beginAccess();
}

uint64_t sub_23F2FD884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F2FD88C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_23F2FD894()
{
  return swift_task_dealloc();
}

uint64_t sub_23F2FD89C()
{
  return sub_23F33B18C();
}

uint64_t sub_23F2FD8A4()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t sub_23F2FD8D0(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  return sub_23F2FACF4(a1, a2, a3, a4);
}

uint64_t sub_23F2FD8F0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2F2D44(a1, v1);
}

uint64_t sub_23F2FD8F8()
{
  return sub_23F33B8AC();
}

uint64_t sub_23F2FD904@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F2FD910()
{
  return sub_23F33B798();
}

uint64_t sub_23F2FD91C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F2EB3F8(&qword_256E69FD0);
  v0 = *(_QWORD *)(sub_23F33A9E8() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23F33EB80;
  v4 = v3 + v2;
  sub_23F2FF3C0(v4, *MEMORY[0x24BE57298]);
  sub_23F2FF3C0(v4 + v1, *MEMORY[0x24BE57300]);
  sub_23F2FF3C0(v4 + 2 * v1, *MEMORY[0x24BE572F0]);
  sub_23F2FF3C0(v4 + 3 * v1, *MEMORY[0x24BE57308]);
  sub_23F2FF3C0(v4 + 4 * v1, *MEMORY[0x24BE572D8]);
  sub_23F2FF3C0(v4 + 5 * v1, *MEMORY[0x24BE572E8]);
  sub_23F2FF3C0(v4 + 6 * v1, *MEMORY[0x24BE57268]);
  sub_23F2FF3C0(v4 + 7 * v1, *MEMORY[0x24BE57280]);
  return v3;
}

BOOL static ContextScorerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContextScorerError.hash(into:)()
{
  return sub_23F33B9FC();
}

uint64_t ContextScorerError.hashValue.getter()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

uint64_t sub_23F2FDAE4()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

uint64_t ContextScorer.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ContextScorer.init()();
  return v0;
}

uint64_t ContextScorer.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_23F33B1B0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23F33B15C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC30IntelligenceFlowContextRuntime13ContextScorer_descriptionScorer;
  type metadata accessor for DescriptionRelevanceScorer();
  sub_23F2FD748();
  *(_QWORD *)(v0 + v6) = sub_23F30802C();
  v7 = OBJC_IVAR____TtC30IntelligenceFlowContextRuntime13ContextScorer_spatialOrdinalScorer;
  type metadata accessor for SpatialRelevanceScorer();
  sub_23F2FF484();
  *(_QWORD *)(v0 + v7) = sub_23F31FCEC();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime13ContextScorer_descriptionScorerTimeoutDurationInSecs) = 0x3FA999999999999ALL;
  sub_23F33B8D0();
  sub_23F33AC1C();
  sub_23F33B144();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime13ContextScorer_signposter, v5, v2);
  return v0;
}

uint64_t ContextScorer.__allocating_init(embeddingTimeout:)(uint64_t a1, char a2)
{
  uint64_t v4;

  type metadata accessor for ContextScorer();
  v4 = sub_23F2FD748();
  ContextScorer.init()();
  if ((a2 & 1) == 0)
    *(_QWORD *)(v4
              + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime13ContextScorer_descriptionScorerTimeoutDurationInSecs) = a1;
  return v4;
}

uint64_t sub_23F2FDCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_23F33B1B0();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = sub_23F2F6B70();
  v6 = sub_23F33B8C4();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = sub_23F2F6B70();
  v7 = sub_23F33B138();
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FDD98()
{
  uint64_t *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint8_t *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_23F33B150();
  sub_23F33B120();
  v1 = sub_23F33B150();
  v2 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    v4 = sub_23F33B12C();
    _os_signpost_emit_with_name_impl(&dword_23F2E8000, v1, v2, v4, "IFCR.ContextScorer.scoreRelevanceOfContextValues", "", v3, 2u);
    sub_23F2FF464();
  }
  v5 = v0[18];
  v6 = v0[19];
  v7 = v0[16];
  v8 = v0[17];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
  sub_23F33B18C();
  sub_23F2FD748();
  v0[20] = sub_23F33B180();
  sub_23F2F8850(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F33B8AC();
  v9 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_23F2FDF00;
  return sub_23F31F5D8(v0[6], v0[7], v0[8]);
}

uint64_t sub_23F2FDF00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FDF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v0 + 176))
  {
    v2 = swift_bridgeObjectRetain();
    v3 = sub_23F2FF474(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = sub_23F2FF44C();
    sub_23F2FE3A0(v4, v5, v6, v7, v8, v9, v1);
    sub_23F2FF3D8();
    sub_23F2FF3C8();
    swift_task_dealloc();
    sub_23F2FD528();
    sub_23F2FD500();
    sub_23F2FD6C0();
    return sub_23F2FD600(v3, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 184) = v14;
    *(_QWORD *)(v0 + 192) = sub_23F2FEC30(v14, 0.0);
    v15 = (_QWORD *)sub_23F2FF484();
    *(_QWORD *)(v0 + 200) = v15;
    v15[2] = v11;
    v15[3] = v1;
    v15[4] = v13;
    v15[5] = v12;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v16;
    sub_23F2EB3F8(&qword_256E6A590);
    *v16 = v0;
    v16[1] = sub_23F2FE0D8;
    return sub_23F33A718();
  }
}

uint64_t sub_23F2FE0D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_23F2FD4B0();
  return swift_task_switch();
}

uint64_t sub_23F2FE148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23F2FE7D4(v6, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F2FE3A0(v4, "IFCR.ContextScorer.scoreRelevanceOfContextValues", 48, 2, v2, v3, v5);
  sub_23F2FF3D8();
  sub_23F2FF3C8();
  swift_task_dealloc();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_23F2FE218()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  sub_23F33AC1C();
  sub_23F2FF49C();
  v1 = sub_23F33B1A4();
  v2 = sub_23F33B6FC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 184);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 32) = v3;
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F2E8000, v1, v2, "timed out waiting for %ld embeddings", v4, 0xCu);
    sub_23F2FF464();
  }
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 88);

  sub_23F2F8850(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v6 = *(_QWORD *)(v0 + 48);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23F2FF474(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = sub_23F2FF44C();
  sub_23F2FE3A0(v9, v10, v11, v12, v13, v14, v6);
  sub_23F2FF3D8();
  sub_23F2FF3C8();
  swift_task_dealloc();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F2FD6C0();
  return sub_23F2FD600(v8, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F2FE3A0(uint64_t a1, const char *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;
  NSObject *v20;
  uint64_t result;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  const char *v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  float v31;
  id v32;
  double v33;
  void *v34;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  Swift::String_optional v49;

  v45 = a6;
  v46 = a7;
  v44 = a4;
  v47 = (char *)a2;
  v9 = sub_23F33B8C4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_23F33B168();
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v42 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23F33B138();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v35[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_23F33B150();
  v41 = a5;
  sub_23F33B174();
  v19 = sub_23F33B75C();
  v20 = v18;
  result = sub_23F33B798();
  if ((result & 1) == 0)
  {
LABEL_13:

    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
    sub_23F2EB3F8(&qword_256E6A3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F33E720;
    strcpy((char *)(inited + 32), "overallLatency");
    *(_BYTE *)(inited + 47) = -18;
    sub_23F33B8AC();
    sub_23F33B8B8();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    v29 = sub_23F33BA14();
    v31 = (double)v29 * 1000.0 + (double)v30 * 1.0e-15;
    v32 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    *(float *)&v33 = v31;
    *(_QWORD *)(inited + 48) = objc_msgSend(v32, sel_initWithFloat_, v33);
    type metadata accessor for Analytics();
    strcpy((char *)(inited + 56), "contextCount");
    *(_BYTE *)(inited + 69) = 0;
    *(_WORD *)(inited + 70) = -5120;
    *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v46 + 16));
    sub_23F2EAA74();
    v34 = (void *)sub_23F33B4B0();
    v49.value._countAndFlagsBits = 0;
    v49.value._object = 0;
    static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(1953394499, 1701539425, v49, v34);
    return swift_bridgeObjectRelease();
  }
  v36 = v19;
  v37 = v15;
  v38 = v14;
  v39 = a1;
  if ((v44 & 1) == 0)
  {
    v23 = v42;
    v22 = v43;
    if (v47)
    {
LABEL_9:
      swift_retain();
      sub_23F33B198();
      swift_release();
      v24 = v40;
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v22 + 88))(v23, v40) == *MEMORY[0x24BEE7810])
      {
        v25 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v23, v24);
        v25 = "";
      }
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      v27 = sub_23F33B12C();
      _os_signpost_emit_with_name_impl(&dword_23F2E8000, v20, (os_signpost_type_t)v36, v27, v47, v25, v26, 2u);
      MEMORY[0x242669658](v26, -1, -1);
      v14 = v38;
      v15 = v37;
      goto LABEL_13;
    }
    __break(1u);
  }
  v23 = v42;
  v22 = v43;
  if ((unint64_t)v47 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v47 >> 11 != 27)
  {
    if (v47 >> 16 <= 0x10)
    {
      v47 = &v48;
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_23F2FE7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;

  v4 = sub_23F33AB20();
  v70 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v63 = (char *)&v59 - v8;
  v9 = sub_23F2EB3F8(&qword_256E6A048);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v59 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v64 = (uint64_t)&v59 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v62 = (char *)&v59 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v61 = (uint64_t)&v59 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  v73 = *(_QWORD *)(a2 + 16);
  v74 = v20;
  if (v73 >= v20)
    v21 = v20;
  else
    v21 = v73;
  v75 = MEMORY[0x24BEE4AF8];
  sub_23F2F2F08();
  v68 = v4;
  v69 = a1;
  v60 = a2;
  if (v21)
  {
    v65 = a2 + 32;
    v66 = v7;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v23 = 0;
    v25 = v73;
    v24 = v74;
    v26 = v70;
    while (v24 != v23)
    {
      v27 = v21;
      v28 = v14;
      v29 = v69
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(_QWORD *)(v26 + 72) * v23;
      v30 = *(_QWORD *)(v26 + 16);
      v31 = v26;
      v32 = v68;
      v33 = v66;
      result = ((uint64_t (*)(char *, unint64_t, uint64_t))v30)(v66, v29, v68);
      if (v25 == v23)
        goto LABEL_29;
      v34 = *(_DWORD *)(v65 + 4 * v23);
      v35 = v72;
      v36 = *(int *)(v72 + 48);
      v37 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v38 = (uint64_t)v67;
      v37(v67, v33, v32);
      *(_DWORD *)(v38 + v36) = v34;
      v39 = *(int *)(v35 + 48);
      v14 = v28;
      ((void (*)(char *, uint64_t, uint64_t))v30)(v28, v38, v32);
      *(_DWORD *)&v28[v39] = v34;
      sub_23F2FF338(v38);
      if ((sub_23F2FF490() & 1) == 0)
      {
        sub_23F2FF400();
        v30 = v75;
      }
      v21 = v27;
      v40 = *(_QWORD *)(v30 + 16);
      v26 = v70;
      if (v40 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_23F2F2F08();
        v30 = v75;
      }
      ++v23;
      *(_QWORD *)(v30 + 16) = v40 + 1;
      sub_23F2FF418();
      result = sub_23F2FF378((uint64_t)v14, v41 + v42 * v40);
      v25 = v73;
      v24 = v74;
      if (v27 == v23)
        goto LABEL_15;
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v25 = v73;
    v24 = v74;
    v26 = v70;
LABEL_15:
    v43 = v68;
    v44 = v69;
    if (v24 <= v25)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v75;
    }
    v70 = v60 + 32;
    v45 = v72;
    while (v21 < v24)
    {
      v46 = *(_QWORD *)(v26 + 16);
      v47 = v63;
      result = ((uint64_t (*)(char *, unint64_t, uint64_t))v46)(v63, v44+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v21, v43);
      if (v25 == v21)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v47, v43);
        goto LABEL_27;
      }
      if (v21 >= v25)
        goto LABEL_31;
      v48 = *(_DWORD *)(v70 + 4 * v21);
      v49 = *(int *)(v45 + 48);
      v50 = v62;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v62, v47, v43);
      *(_DWORD *)&v50[v49] = v48;
      v51 = (uint64_t)v50;
      v52 = v61;
      sub_23F2FF378(v51, v61);
      v53 = *(int *)(v45 + 48);
      v54 = *(_DWORD *)(v52 + v53);
      v55 = v64;
      ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v64, v52, v43);
      *(_DWORD *)(v55 + v53) = v54;
      sub_23F2FF338(v52);
      if ((sub_23F2FF490() & 1) == 0)
      {
        sub_23F2FF400();
        v46 = v75;
      }
      v24 = v74;
      v56 = *(_QWORD *)(v46 + 16);
      if (v56 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_23F2F2F08();
        v46 = v75;
      }
      ++v21;
      *(_QWORD *)(v46 + 16) = v56 + 1;
      sub_23F2FF418();
      result = sub_23F2FF378(v64, v57 + v58 * v56);
      v25 = v73;
      if (v24 == v21)
        goto LABEL_27;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23F2FEC30(uint64_t a1, float a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    sub_23F2FF434();
    result = sub_23F2FF3E8();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_23F33B600();
    v5 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v6 = result + 4 * v5++;
      *(float *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23F2FECC4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F2FF434();
    result = sub_23F2FF3E8();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_23F2EB3F8(&qword_256E6A590);
      v4 = (_QWORD *)sub_23F33B600();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            sub_23F2FF49C();
            --v6;
          }
          while (v6);
        }
        sub_23F2FF49C();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_23F2FED88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F2FEDA8()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23F2FEE08;
  return sub_23F307698(v0[4], v0[5], v0[6]);
}

uint64_t sub_23F2FEE08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FEE58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  if (!v1)
    v1 = sub_23F2FEC30(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16), 0.0);
  **(_QWORD **)(v0 + 16) = v1;
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContextScorer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F33B15C();
  sub_23F2FD514(v1);
  swift_release();
  swift_release();
  v2 = sub_23F33B8DC();
  sub_23F2FD514(v2);
  return v0;
}

uint64_t ContextScorer.__deallocating_deinit()
{
  ContextScorer.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContextScorer()
{
  uint64_t result;

  result = qword_256E6A5C8;
  if (!qword_256E6A5C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F2FEF64()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F2FEF98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23F2F2C00;
  return sub_23F2FED88(a1, v4, v5, v7, v6);
}

unint64_t sub_23F2FF014()
{
  unint64_t result;

  result = qword_256E6A598;
  if (!qword_256E6A598)
  {
    result = MEMORY[0x2426695B0](&protocol conformance descriptor for ContextScorerError, &type metadata for ContextScorerError);
    atomic_store(result, (unint64_t *)&qword_256E6A598);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for ContextScorerError(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ContextScorerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextScorerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F2FF134 + 4 * byte_23F33EBA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F2FF168 + 4 * byte_23F33EBA0[v4]))();
}

uint64_t sub_23F2FF168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F2FF170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F2FF178);
  return result;
}

uint64_t sub_23F2FF184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F2FF18CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F2FF190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F2FF198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F2FF1A4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23F2FF1AC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ContextScorerError()
{
  return &type metadata for ContextScorerError;
}

uint64_t sub_23F2FF1C8()
{
  return type metadata accessor for ContextScorer();
}

uint64_t sub_23F2FF1D0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F33B15C();
  if (v1 <= 0x3F)
  {
    result = sub_23F33B8DC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ContextScorer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContextScorer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ContextScorer.scoreRelevanceOfContextValues(retrievedContexts:query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 152)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 152));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F2FF304;
  return v10(a1, a2, a3);
}

uint64_t sub_23F2FF304(uint64_t a1)
{
  uint64_t v1;

  sub_23F2F3658();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_23F2FF338(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E6A048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F2FF378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F2FF3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F2FF3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F2FF3D8()
{
  return swift_release();
}

uint64_t sub_23F2FF3E8()
{
  return sub_23F33B900();
}

void sub_23F2FF400()
{
  sub_23F2F2F08();
}

uint64_t sub_23F2FF44C()
{
  uint64_t v0;

  return v0;
}

void sub_23F2FF464()
{
  JUMPOUT(0x242669658);
}

uint64_t sub_23F2FF474(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2FE7D4(a1, v1);
}

uint64_t sub_23F2FF484()
{
  return swift_allocObject();
}

uint64_t sub_23F2FF490()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F2FF49C()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_23F2FF4A4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23F2FF4B4()
{
  return sub_23F33B9FC();
}

uint64_t sub_23F2FF4D8()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

BOOL sub_23F2FF51C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23F2FF4A4(*a1, *a2);
}

uint64_t sub_23F2FF528()
{
  return sub_23F2FF4D8();
}

uint64_t sub_23F2FF530()
{
  return sub_23F2FF4B4();
}

uint64_t sub_23F2FF538()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  sub_23F2FD4B0();
  return swift_task_switch();
}

uint64_t sub_23F2FF554()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for ContextRetriever();
  sub_23F2EB3F8(&qword_256E6A510);
  *v1 = v0;
  v1[1] = sub_23F2FF5EC;
  return sub_23F33B660();
}

uint64_t sub_23F2FF5EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F2F6B60();
  *v2 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F2FF63C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23F2FF648()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23F2FF654()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_23F2FF694();
}

id sub_23F2FF694()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  objc_class *ObjectType;
  id v26;
  objc_super v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F305674();
  v30 = v1;
  v31 = v2;
  v26 = v3;
  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_23F305724();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime23ContextXPCServiceServer6Server_encoder;
  sub_23F33A370();
  sub_23F2FD748();
  v13 = v0;
  *(_QWORD *)&v0[v12] = sub_23F33A364();
  v14 = OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime23ContextXPCServiceServer6Server_decoder;
  sub_23F33A34C();
  sub_23F2FD748();
  *(_QWORD *)&v13[v14] = sub_23F33A340();
  v15 = sub_23F33ACB8();
  v16 = (uint64_t *)&v13[OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime23ContextXPCServiceServer6Server_clientApplicationIdentifier];
  *v16 = v15;
  v16[1] = v17;
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23F33B81C();
  swift_bridgeObjectRelease();
  v28 = 0xD00000000000001FLL;
  v29 = 0x800000023F33D030;
  swift_bridgeObjectRetain();
  sub_23F33B57C();
  swift_bridgeObjectRelease();
  sub_23F33AC64();
  sub_23F2FD748();
  *(_QWORD *)&v13[OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime23ContextXPCServiceServer6Server_transaction] = sub_23F33AC70();
  v18 = sub_23F33B648();
  sub_23F2EE6B8((uint64_t)v11, v19, v20, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&ObjectType - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v6);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v21, (char *)&ObjectType - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(_QWORD *)&v13[OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime23ContextXPCServiceServer6Server_contextRetrieverSetup] = sub_23F2FFAB8((uint64_t)v11, (uint64_t)&unk_256E6A6F8, v22);

  v27.receiver = v13;
  v27.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v27, sel_init);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return v23;
}

uint64_t sub_23F2FF928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_23F33B1B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AC1C();
  v6 = sub_23F33B1A4();
  v7 = sub_23F33B6D8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23F2E8000, v6, v7, "received a signal for termination", v8, 2u);
    MEMORY[0x242669658](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *MEMORY[0x24BE79838];
  v10 = sub_23F33AC58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a1, v9, v10);
}

uint64_t sub_23F2FFA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23F2FFA60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(void);

  v1 = *(uint64_t **)(v0 + 16);
  v2 = sub_23F33ACB8();
  v4 = v3;
  type metadata accessor for ContextRetriever();
  sub_23F2FD748();
  *v1 = sub_23F2F9A30(v2, v4);
  v5 = (uint64_t (*)(void))sub_23F3055A0();
  return sub_23F2F6BC4(v5);
}

uint64_t sub_23F2FFAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_23F33B648();
  if (sub_23F2EBFC0(a1, 1, v5) == 1)
  {
    sub_23F2F0794(a1, (uint64_t *)&unk_254346358);
  }
  else
  {
    sub_23F33B63C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F33B618();
    swift_unknownObjectRelease();
  }
  type metadata accessor for ContextRetriever();
  return swift_task_create();
}

void sub_23F2FFBE0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;

  sub_23F305674();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_23F3055F4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F30550C();
  sub_23F2EE6B8(v1, v16, v17, v15);
  v18 = sub_23F2F6C44();
  *(_QWORD *)(v18 + 16) = v5;
  *(_QWORD *)(v18 + 24) = v3;
  v19 = (_QWORD *)sub_23F2F6C44();
  v19[2] = v13;
  v19[3] = v11;
  v19[4] = v0;
  v19[5] = v9;
  v19[6] = v7;
  swift_retain();
  sub_23F304F58(v13, v11);
  sub_23F305044();
  v20 = v0;
  swift_bridgeObjectRetain();
  sub_23F33B654();
  swift_release();
  swift_release();
  swift_release();
  sub_23F305624(v1);
  sub_23F2F37B0();
}

uint64_t sub_23F2FFCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v7 = sub_23F33B1B0();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F2FFD50()
{
  uint64_t v0;
  os_log_type_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  id v6;
  id v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  void (*v15)(uint64_t);
  _BYTE *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 56);
  if (v2 >> 60 == 15)
  {
    v3 = 0;
LABEL_7:
    *(_QWORD *)(v0 + 112) = v3;
    if (qword_256E69988 != -1)
      swift_once();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v12;
    *v12 = v0;
    v12[1] = sub_23F300044;
    return sub_23F2F4644(v3, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  v4 = *(void **)(v0 + 48);
  sub_23F2EB3F8(&qword_256E6A778);
  sub_23F304DB0((uint64_t)v4, v2);
  sub_23F304DF4();
  sub_23F305654();
  if (!v4)
  {
    sub_23F304EB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    v3 = *(_QWORD *)(v0 + 16);
    goto LABEL_7;
  }
  v5 = *(NSObject **)(v0 + 104);
  sub_23F304EB4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_23F3052D8();
  v6 = v4;
  v7 = v4;
  sub_23F33B1A4();
  v8 = sub_23F3052E0();
  if (sub_23F3052E8(v8))
  {
    v9 = sub_23F2F8874();
    v10 = (_QWORD *)sub_23F2F8874();
    v17 = sub_23F2F8874();
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_23F3052D0(41, 0x800000023F33D170, &v17);
    sub_23F33B7BC();
    *(_WORD *)(v9 + 12) = 2112;
    sub_23F3051FC();
    v11 = sub_23F3053B8();
    *(_QWORD *)(v0 + 32) = v11;
    sub_23F30537C();
    *v10 = v11;
    sub_23F3051E4();
    sub_23F3051E4();
    sub_23F3053B0(&dword_23F2E8000, v5, v1, "could not decode [ContextType] in %s. Error: %@", (uint8_t *)v9);
    sub_23F2EB3F8(&qword_256E6A720);
    sub_23F30522C();
    sub_23F2F3748();
  }
  sub_23F3051E4();
  sub_23F3051E4();

  v14 = sub_23F3054A8();
  v15(v14);
  sub_23F304AE0();
  sub_23F305250();
  *v16 = 1;
  swift_willThrow();
  sub_23F3051E4();
  sub_23F2FD894();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F300044()
{
  sub_23F2F6B60();
  sub_23F2F6B38();
  swift_bridgeObjectRelease();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F300080()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);

  v1 = *(uint64_t **)(v0 + 40);
  sub_23F305044();
  *v1 = sub_23F33B780();
  sub_23F2F6CE8();
  v2 = (uint64_t (*)(void))sub_23F3055A0();
  return sub_23F2F6BC4(v2);
}

void sub_23F3001DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_23F33A448();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_23F300234(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;

  sub_23F3055F4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F33B648();
  sub_23F2EE6B8((uint64_t)v11, v13, v14, v12);
  v15 = sub_23F2F6C44();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = (_QWORD *)sub_23F2F6C44();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v4;
  swift_retain();
  sub_23F304F58(a1, a2);
  v17 = v4;
  sub_23F33B654();
  swift_release();
  sub_23F3056EC();
  swift_release();
  sub_23F305624((uint64_t)v11);
  sub_23F2EE728();
}

uint64_t sub_23F300338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_23F33B864();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = sub_23F33B1B0();
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v7 = sub_23F33B858();
  v4[22] = v7;
  v4[23] = *(_QWORD *)(v7 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F300408()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  void *v26;
  void *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  _BYTE *v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F3052F8();
  v1 = v0[12];
  if (v1 >> 60 != 15)
  {
    v3 = v0[11];
    sub_23F2EB3F8(&qword_256E6A778);
    sub_23F304DB0(v3, v1);
    sub_23F304DF4();
    sub_23F305654();
    sub_23F304EB4(v0[11], v0[12]);
    if (!v1)
    {
      v2 = v0[9];
      goto LABEL_8;
    }
    v0[2] = v1;
    sub_23F3051FC();
    sub_23F2EB3F8(&qword_256E6A510);
    if ((sub_23F305384() & 1) != 0)
    {
      v4 = (void *)v0[21];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v5 = sub_23F3052E0();
      v6 = sub_23F305314(v5);
      v7 = v0[21];
      v8 = v0[17];
      v9 = v0[18];
      if (v6)
      {
        sub_23F2F8874();
        sub_23F2F8874();
        sub_23F305398(4.8149e-34);
        v0[7] = sub_23F305214((uint64_t)"refreshAndRetrieve(contextTypes:with:)", v44, v45, v46, v47, v7);
        sub_23F305370();
        sub_23F305290(&dword_23F2E8000, v10, v11, "could not decode [ContextType] in %s");
        sub_23F30522C();
        sub_23F2F3748();
      }

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      sub_23F305544();
      v24 = sub_23F305250();
      sub_23F30532C(v24, v25);
      sub_23F305204();
      v26 = (void *)v0[2];
    }
    else
    {
      sub_23F3053A8();
      v0[3] = v1;
      sub_23F3051FC();
      if (!sub_23F305384())
      {
        v27 = (void *)v0[19];
        sub_23F3054E0();
        sub_23F3052D8();
        sub_23F3051FC();
        sub_23F3051FC();
        sub_23F33B1A4();
        v28 = sub_23F3052E0();
        v29 = sub_23F305280(v28);
        v31 = v0[18];
        v30 = v0[19];
        v32 = v0[17];
        if (v29)
        {
          v48 = v0[18];
          v33 = sub_23F2F8874();
          v34 = (_QWORD *)sub_23F2F8874();
          sub_23F2F8874();
          sub_23F30538C();
          sub_23F3054D0(4.8151e-34);
          v35 = sub_23F305214((uint64_t)"refreshAndRetrieve(contextTypes:with:)", v44, (uint64_t)(v0 + 6), v46, v48, v30);
          sub_23F305340(v35);
          *(_WORD *)(v33 + 12) = 2112;
          sub_23F3051FC();
          v36 = sub_23F3053B8();
          sub_23F305234(v36);
          *v34 = v32;
          sub_23F3051E4();
          sub_23F3051E4();
          sub_23F3052A4(&dword_23F2E8000, v37, v38, "error in %s: %@");
          sub_23F2EB3F8(&qword_256E6A720);
          sub_23F30522C();
          sub_23F2F3748();
        }
        sub_23F3051E4();
        sub_23F3051E4();

        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
        sub_23F3053CC();
        goto LABEL_20;
      }
      v17 = (void *)v0[20];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v18 = sub_23F3052E0();
      v19 = sub_23F3052E8(v18);
      v20 = v0[17];
      if (v19)
      {
        v49 = v0[20];
        sub_23F2F8874();
        sub_23F2F8874();
        sub_23F30538C();
        sub_23F3053D4(4.8149e-34);
        v21 = sub_23F305214((uint64_t)"refreshAndRetrieve(contextTypes:with:)", v44, v45, v46, v20, v49);
        sub_23F305358(v21);
        sub_23F30525C(&dword_23F2E8000, v22, v23, "could not encode [RetrievedContext] in %s");
        sub_23F3051EC();
        sub_23F2F3748();
      }

      v39 = sub_23F305444();
      v40(v39);
      sub_23F305500();
      v41 = sub_23F305250();
      sub_23F305270(v41, v42);
      sub_23F305204();
      v26 = (void *)v0[3];
    }

LABEL_20:
    sub_23F3053FC();
    sub_23F2FD894();
    sub_23F2FD528();
    sub_23F2FD500();
    sub_23F3054B8();
    v43 = (uint64_t (*)(void))sub_23F3053E4();
    return sub_23F3051C8(v43);
  }
  v2 = 0;
LABEL_8:
  v0[25] = v2;
  if (qword_256E69988 != -1)
    swift_once();
  v12 = (_QWORD *)swift_task_alloc();
  v0[26] = v12;
  *v12 = v0;
  v12[1] = sub_23F300898;
  sub_23F2FD4B0();
  return sub_23F2F4644(v13, v14, v15);
}

uint64_t sub_23F300898()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v0;
  v1 = v4;
  sub_23F3056E0(&v4);
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 216) = v2;
  *v2 = v0;
  v2[1] = sub_23F3008F8;
  return sub_23F2FF538();
}

uint64_t sub_23F3008F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  sub_23F305638();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F300954()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[25];
  if (!v1)
    v1 = sub_23F33A9D0();
  v0[30] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[31] = v2;
  *v2 = v0;
  v2[1] = sub_23F3009BC;
  return sub_23F2FB16C(v1, 0, 1);
}

uint64_t sub_23F3009BC(uint64_t a1)
{
  uint64_t v1;

  sub_23F305454(a1);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_23F2FD4B0();
  return sub_23F2FD5D4();
}

#error "23F300D30: call analysis failed (funcsize=233)"

#error "23F3010DC: call analysis failed (funcsize=193)"

#error "23F301450: call analysis failed (funcsize=191)"

void sub_23F301614()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;

  sub_23F305674();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23F3055F4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F305528();
  sub_23F2EE6B8(v1, v14, v15, v13);
  v16 = sub_23F2F6C44();
  *(_QWORD *)(v16 + 16) = v5;
  *(_QWORD *)(v16 + 24) = v3;
  v17 = (_QWORD *)sub_23F2F6C44();
  v17[2] = v0;
  v17[3] = v11;
  v17[4] = v9;
  v17[5] = v7;
  swift_retain();
  v18 = v0;
  sub_23F304DB0(v11, v9);
  v19 = v7;
  sub_23F33B654();
  swift_release();
  swift_release();
  sub_23F3056EC();
  sub_23F305624(v1);
  sub_23F2F37B0();
}

uint64_t sub_23F301704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = sub_23F33B864();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v7 = sub_23F33B1B0();
  v5[18] = v7;
  v5[19] = *(_QWORD *)(v7 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v8 = sub_23F33B858();
  v5[23] = v8;
  v5[24] = *(_QWORD *)(v8 - 8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3017D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  _BYTE *v39;
  uint64_t (*v40)(void);
  uint64_t v41[2];

  v1 = v0[12];
  sub_23F2EB3F8(&qword_256E6A778);
  sub_23F304DF4();
  sub_23F305654();
  if (v1)
  {
    v0[3] = v1;
    sub_23F3051FC();
    v2 = (void *)sub_23F2EB3F8(&qword_256E6A510);
    if ((sub_23F305384() & 1) != 0)
    {
      v3 = (void *)v0[22];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v4 = sub_23F3052E0();
      v5 = sub_23F305314(v4);
      v6 = v0[22];
      v7 = v0[18];
      v8 = v0[19];
      if (v5)
      {
        sub_23F2F8874();
        v41[0] = sub_23F2F8874();
        sub_23F305398(4.8149e-34);
        v0[8] = sub_23F3052D0(49, 0x800000023F33D100, v41);
        sub_23F305370();
        sub_23F305290(&dword_23F2E8000, v9, v10, "could not decode [ContextType] in %s");
        sub_23F30522C();
        sub_23F2F3748();
      }

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      sub_23F3054F4();
      v20 = sub_23F305250();
      sub_23F30532C(v20, v21);
      sub_23F305204();
      v22 = (void *)v0[3];
    }
    else
    {
      sub_23F3054E0();
      v0[4] = v1;
      sub_23F3051FC();
      if (!sub_23F305384())
      {
        sub_23F3054E8();
        sub_23F3052D8();
        sub_23F3051FC();
        sub_23F3051FC();
        sub_23F33B1A4();
        v23 = sub_23F3052E0();
        v24 = sub_23F305280(v23);
        v26 = v0[19];
        v25 = v0[20];
        v27 = v0[18];
        if (v24)
        {
          v28 = sub_23F2F8874();
          v29 = (_QWORD *)sub_23F2F8874();
          v41[0] = sub_23F2F8874();
          *(_DWORD *)v28 = 136315394;
          v30 = sub_23F3052D0(49, 0x800000023F33D100, v41);
          sub_23F305340(v30);
          *(_WORD *)(v28 + 12) = 2112;
          sub_23F3051FC();
          v31 = sub_23F3053B8();
          sub_23F305708(v31);
          sub_23F30537C();
          *v29 = v28 + 4;
          sub_23F3051E4();
          sub_23F3051E4();
          sub_23F3052A4(&dword_23F2E8000, v32, v33, "error in %s: %@");
          sub_23F2EB3F8(&qword_256E6A720);
          sub_23F30522C();
          sub_23F2F3748();
        }
        sub_23F3051E4();
        sub_23F3051E4();

        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
        sub_23F3053CC();
        goto LABEL_18;
      }
      v15 = (void *)v0[21];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v16 = sub_23F3052E0();
      if (sub_23F3052E8(v16))
      {
        sub_23F2F8874();
        v41[0] = sub_23F2F8874();
        sub_23F3053D4(4.8149e-34);
        v17 = sub_23F3052D0(49, 0x800000023F33D100, v41);
        sub_23F305358(v17);
        sub_23F30525C(&dword_23F2E8000, v18, v19, "could not encode [RetrievedContext] in %s");
        sub_23F3051EC();
        sub_23F2F3748();
      }

      v36 = sub_23F305444();
      v37(v36);
      sub_23F3053F0();
      v38 = sub_23F305250();
      sub_23F305270(v38, v39);
      sub_23F305204();
      v22 = (void *)v0[4];
    }

LABEL_18:
    sub_23F305410();
    sub_23F2FD894();
    sub_23F2FD528();
    sub_23F2FD500();
    sub_23F3054B8();
    v40 = (uint64_t (*)(void))sub_23F3053E4();
    return v40();
  }
  v11 = (void *)v0[14];
  v0[26] = v0[2];
  if (v11)
  {
    v12 = v11;
    sub_23F33B690();
    v14 = v13;

  }
  else
  {
    v14 = 0;
  }
  v0[27] = v14;
  v34 = (_QWORD *)swift_task_alloc();
  v0[28] = v34;
  *v34 = v0;
  v34[1] = sub_23F301CB0;
  return sub_23F2FF538();
}

uint64_t sub_23F301CB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _BOOL8 v6;
  _QWORD *v7;

  sub_23F30558C();
  sub_23F3056E0(v4);
  v2[29] = v0;
  v2[30] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23F2FD4B0();
    return sub_23F2FD5D4();
  }
  else
  {
    v6 = v2[14] == 0;
    v7 = (_QWORD *)swift_task_alloc();
    v2[31] = v7;
    *v7 = v3;
    v7[1] = sub_23F301D44;
    return sub_23F2FB16C(v2[26], v2[27], v6);
  }
}

uint64_t sub_23F301D44(uint64_t a1)
{
  uint64_t v1;

  sub_23F305454(a1);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

#error "23F30209C: call analysis failed (funcsize=232)"

#error "23F302444: call analysis failed (funcsize=192)"

#error "23F3027C8: call analysis failed (funcsize=195)"

void sub_23F302990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  sub_23F3055F4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F30550C();
  sub_23F2EE6B8(v5, v12, v13, v11);
  v14 = sub_23F2F6C44();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  v15 = (_QWORD *)sub_23F2F6C44();
  v15[2] = v4;
  v15[3] = a1;
  v15[4] = a2;
  swift_retain();
  v16 = v4;
  swift_bridgeObjectRetain();
  sub_23F33B654();
  swift_release();
  sub_23F3056EC();
  swift_release();
  sub_23F305624(v5);
  sub_23F2EE728();
}

uint64_t sub_23F302A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_23F33B1B0();
  v4[11] = v5;
  v4[12] = *(_QWORD *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v6 = sub_23F33B864();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v7 = (_QWORD *)swift_task_alloc();
  v4[18] = v7;
  *v7 = v4;
  v7[1] = sub_23F302B28;
  return sub_23F2FF538();
}

uint64_t sub_23F302B28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_23F30558C();
  sub_23F3056E0(v4);
  v2[19] = v0;
  v2[20] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23F2FD4B0();
    return sub_23F2FD5D4();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v2[21] = v6;
    *v6 = v3;
    v6[1] = sub_23F302BAC;
    return sub_23F2FA684();
  }
}

uint64_t sub_23F302BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  sub_23F305638();
  if (!v1)
    swift_release();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F302C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t (*v44)(void);
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(uint64_t);

  sub_23F3052F8();
  a25 = v29;
  a26 = v30;
  a24 = v27;
  v27[6] = v27[22];
  v31 = v27[23];
  sub_23F2EB3F8(&qword_256E6A4E0);
  sub_23F305660();
  v33 = sub_23F305424();
  if (v31)
  {
    sub_23F305640();
    v27[2] = v26;
    sub_23F3051FC();
    sub_23F2EB3F8(&qword_256E6A510);
    if ((sub_23F305384() & 1) != 0)
    {
      v34 = (void *)v27[14];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v35 = sub_23F3052E0();
      v36 = sub_23F3052E8(v35);
      v37 = v27[14];
      v39 = v27[11];
      v38 = v27[12];
      if (v36)
      {
        sub_23F2F8874();
        sub_23F2F8874();
        sub_23F30538C();
        sub_23F3053D4(4.8149e-34);
        *a13 = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
        sub_23F3053C0();
        sub_23F30525C(&dword_23F2E8000, v40, v41, "could not encode [RetrievedContext] in %s");
        sub_23F3051EC();
        sub_23F2F3748();
      }

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      sub_23F3053F0();
      v51 = sub_23F305250();
      sub_23F305270(v51, v52);
      sub_23F305204();
      sub_23F3053A8();
    }
    else
    {
      v45 = v27[13];
      sub_23F3053A8();
      sub_23F3052D8();
      sub_23F3051FC();
      sub_23F3051FC();
      sub_23F33B1A4();
      v46 = sub_23F3052E0();
      if (sub_23F305280(v46))
      {
        v47 = sub_23F2F8874();
        v48 = (_QWORD *)sub_23F2F8874();
        sub_23F2F8874();
        sub_23F30538C();
        *(_DWORD *)v47 = 136315394;
        v49 = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
        sub_23F305550(v49);
        *(_WORD *)(v47 + 12) = 2112;
        sub_23F3051FC();
        v50 = sub_23F3053B8();
        v27[4] = v50;
        sub_23F30537C();
        *v48 = v50;
        sub_23F3051E4();
        sub_23F3051E4();
        sub_23F3053B0(&dword_23F2E8000, v45, v28, "error in %s: %@", (uint8_t *)v47);
        sub_23F2EB3F8(&qword_256E6A720);
        sub_23F30522C();
        sub_23F2F3748();
      }
      sub_23F3051E4();
      sub_23F3051E4();

      v53 = sub_23F3055AC();
      v54(v53);
      sub_23F3053CC();
    }
    sub_23F30562C();
    sub_23F2FD894();
    sub_23F2FD528();
    v44 = (uint64_t (*)(void))sub_23F3053E4();
  }
  else
  {
    v42 = v32;
    v43 = (uint64_t *)v27[7];
    swift_bridgeObjectRelease();
    *v43 = v33;
    v43[1] = v42;
    sub_23F2F6CE8();
    sub_23F2FD528();
    sub_23F2FD500();
    v44 = (uint64_t (*)(void))sub_23F3055A0();
  }
  return sub_23F3051C8(v44);
}

uint64_t sub_23F302F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t (*v46)(void);

  sub_23F3052F8();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v26[2] = v26[20];
  sub_23F3051FC();
  sub_23F2EB3F8(&qword_256E6A510);
  if (sub_23F305384())
  {
    v29 = (void *)v26[14];
    sub_23F3051E4();
    sub_23F3052D8();
    sub_23F33B1A4();
    v30 = sub_23F3052E0();
    if (sub_23F305314(v30))
    {
      sub_23F2F8874();
      a14 = sub_23F2F8874();
      sub_23F305398(4.8149e-34);
      v26[5] = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
      sub_23F305370();
      sub_23F305290(&dword_23F2E8000, v31, v32, "could not encode [RetrievedContext] in %s");
      sub_23F30522C();
      sub_23F2F3748();
    }

    v40 = sub_23F305568();
    sub_23F305324(v40, v41);
    sub_23F3053F0();
    v42 = sub_23F305250();
    sub_23F305270(v42, v43);
    sub_23F305204();
    sub_23F3053A8();
  }
  else
  {
    v33 = (void *)v26[13];
    sub_23F3053A8();
    sub_23F3052D8();
    sub_23F3051FC();
    sub_23F3051FC();
    sub_23F33B1A4();
    v34 = sub_23F3052E0();
    if (sub_23F305280(v34))
    {
      v35 = sub_23F2F8874();
      v36 = (_QWORD *)sub_23F2F8874();
      sub_23F2F8874();
      sub_23F30538C();
      sub_23F3055CC(4.8151e-34);
      v26[3] = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
      sub_23F30537C();
      *(_WORD *)(v35 + 12) = 2112;
      sub_23F3051FC();
      v37 = sub_23F3053B8();
      sub_23F305234(v37);
      *v36 = v26 + 3;
      sub_23F3051E4();
      sub_23F3051E4();
      sub_23F3052A4(&dword_23F2E8000, v38, v39, "error in %s: %@");
      sub_23F2EB3F8(&qword_256E6A720);
      sub_23F30522C();
      sub_23F2F3748();
    }
    sub_23F3051E4();
    sub_23F3051E4();

    v44 = sub_23F3054A8();
    v45(v44);
    sub_23F3053CC();
  }
  sub_23F30562C();
  sub_23F2FD894();
  sub_23F2FD528();
  v46 = (uint64_t (*)(void))sub_23F3053E4();
  return sub_23F3051C8(v46);
}

uint64_t sub_23F3031C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t (*v46)(void);

  sub_23F3052F8();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  swift_release();
  v26[2] = v26[23];
  sub_23F3051FC();
  sub_23F2EB3F8(&qword_256E6A510);
  if (sub_23F305384())
  {
    v29 = (void *)v26[14];
    sub_23F3051E4();
    sub_23F3052D8();
    sub_23F33B1A4();
    v30 = sub_23F3052E0();
    if (sub_23F305314(v30))
    {
      sub_23F2F8874();
      a14 = sub_23F2F8874();
      sub_23F305398(4.8149e-34);
      v26[5] = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
      sub_23F305370();
      sub_23F305290(&dword_23F2E8000, v31, v32, "could not encode [RetrievedContext] in %s");
      sub_23F30522C();
      sub_23F2F3748();
    }

    v40 = sub_23F305568();
    sub_23F305324(v40, v41);
    sub_23F3053F0();
    v42 = sub_23F305250();
    sub_23F305270(v42, v43);
    sub_23F305204();
    sub_23F3053A8();
  }
  else
  {
    v33 = (void *)v26[13];
    sub_23F3053A8();
    sub_23F3052D8();
    sub_23F3051FC();
    sub_23F3051FC();
    sub_23F33B1A4();
    v34 = sub_23F3052E0();
    if (sub_23F305280(v34))
    {
      v35 = sub_23F2F8874();
      v36 = (_QWORD *)sub_23F2F8874();
      sub_23F2F8874();
      sub_23F30538C();
      sub_23F3055CC(4.8151e-34);
      v26[3] = sub_23F3052D0(34, 0x800000023F33D0D0, &a14);
      sub_23F30537C();
      *(_WORD *)(v35 + 12) = 2112;
      sub_23F3051FC();
      v37 = sub_23F3053B8();
      sub_23F305234(v37);
      *v36 = v26 + 3;
      sub_23F3051E4();
      sub_23F3051E4();
      sub_23F3052A4(&dword_23F2E8000, v38, v39, "error in %s: %@");
      sub_23F2EB3F8(&qword_256E6A720);
      sub_23F30522C();
      sub_23F2F3748();
    }
    sub_23F3051E4();
    sub_23F3051E4();

    v44 = sub_23F3054A8();
    v45(v44);
    sub_23F3053CC();
  }
  sub_23F30562C();
  sub_23F2FD894();
  sub_23F2FD528();
  v46 = (uint64_t (*)(void))sub_23F3053E4();
  return sub_23F3051C8(v46);
}

uint64_t sub_23F3034FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[7] = a1;
  v2[8] = a2;
  v3 = sub_23F33B1B0();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v4 = sub_23F33B864();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v2[16] = v5;
  *v5 = v2;
  v5[1] = sub_23F3035A8;
  return sub_23F2FF538();
}

uint64_t sub_23F3035A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_23F30558C();
  sub_23F3056E0(v4);
  v2[17] = v0;
  v2[18] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23F2FD4B0();
    return sub_23F2FD5D4();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v2[19] = v6;
    *v6 = v3;
    v6[1] = sub_23F303624;
    return sub_23F2F9B7C();
  }
}

uint64_t sub_23F303624(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v1;
  sub_23F305638();
  if (!v1)
    swift_release();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F303688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t (*v44)(void);
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(uint64_t);

  sub_23F3052F8();
  a25 = v29;
  a26 = v30;
  a24 = v27;
  v27[6] = v27[20];
  v31 = v27[21];
  sub_23F2EB3F8(&qword_256E6A4E0);
  sub_23F305660();
  v33 = sub_23F305424();
  if (v31)
  {
    sub_23F305640();
    v27[2] = v26;
    sub_23F3051FC();
    sub_23F2EB3F8(&qword_256E6A510);
    if ((sub_23F305384() & 1) != 0)
    {
      v34 = (void *)v27[12];
      sub_23F3051E4();
      sub_23F3052D8();
      sub_23F33B1A4();
      v35 = sub_23F3052E0();
      v36 = sub_23F3052E8(v35);
      v37 = v27[12];
      v39 = v27[9];
      v38 = v27[10];
      if (v36)
      {
        sub_23F2F8874();
        sub_23F2F8874();
        sub_23F30538C();
        sub_23F3053D4(4.8149e-34);
        *a13 = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
        sub_23F3053C0();
        sub_23F30525C(&dword_23F2E8000, v40, v41, "could not encode [RetrievedContext] in %s");
        sub_23F3051EC();
        sub_23F2F3748();
      }

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      sub_23F3055FC();
      v51 = sub_23F305250();
      sub_23F305270(v51, v52);
      sub_23F305204();
      sub_23F3053A8();
    }
    else
    {
      v45 = v27[11];
      sub_23F3053A8();
      sub_23F3052D8();
      sub_23F3051FC();
      sub_23F3051FC();
      sub_23F33B1A4();
      v46 = sub_23F3052E0();
      if (sub_23F305280(v46))
      {
        v47 = sub_23F2F8874();
        v48 = (_QWORD *)sub_23F2F8874();
        sub_23F2F8874();
        sub_23F30538C();
        *(_DWORD *)v47 = 136315394;
        v49 = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
        sub_23F305550(v49);
        *(_WORD *)(v47 + 12) = 2112;
        sub_23F3051FC();
        v50 = sub_23F3053B8();
        v27[4] = v50;
        sub_23F30537C();
        *v48 = v50;
        sub_23F3051E4();
        sub_23F3051E4();
        sub_23F3053B0(&dword_23F2E8000, v45, v28, "error in %s: %@", (uint8_t *)v47);
        sub_23F2EB3F8(&qword_256E6A720);
        sub_23F30522C();
        sub_23F2F3748();
      }
      sub_23F3051E4();
      sub_23F3051E4();

      v53 = sub_23F3055AC();
      v54(v53);
      sub_23F3053CC();
    }
    sub_23F3055E8();
    sub_23F2FD894();
    sub_23F2FD528();
    v44 = (uint64_t (*)(void))sub_23F3053E4();
  }
  else
  {
    v42 = v32;
    v43 = (uint64_t *)v27[7];
    swift_bridgeObjectRelease();
    *v43 = v33;
    v43[1] = v42;
    sub_23F2F6CE8();
    sub_23F2FD528();
    sub_23F2FD500();
    v44 = (uint64_t (*)(void))sub_23F3055A0();
  }
  return sub_23F3051C8(v44);
}

uint64_t sub_23F3039A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t (*v46)(void);

  sub_23F3052F8();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v26[2] = v26[18];
  sub_23F3051FC();
  sub_23F2EB3F8(&qword_256E6A510);
  if (sub_23F305384())
  {
    v29 = (void *)v26[12];
    sub_23F3051E4();
    sub_23F3052D8();
    sub_23F33B1A4();
    v30 = sub_23F3052E0();
    if (sub_23F305314(v30))
    {
      sub_23F2F8874();
      a14 = sub_23F2F8874();
      sub_23F305398(4.8149e-34);
      v26[5] = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
      sub_23F305370();
      sub_23F305290(&dword_23F2E8000, v31, v32, "could not encode [RetrievedContext] in %s");
      sub_23F30522C();
      sub_23F2F3748();
    }

    v40 = sub_23F305568();
    sub_23F305324(v40, v41);
    sub_23F3055FC();
    v42 = sub_23F305250();
    sub_23F305270(v42, v43);
    sub_23F305204();
    sub_23F3053A8();
  }
  else
  {
    v33 = (void *)v26[11];
    sub_23F3053A8();
    sub_23F3052D8();
    sub_23F3051FC();
    sub_23F3051FC();
    sub_23F33B1A4();
    v34 = sub_23F3052E0();
    if (sub_23F305280(v34))
    {
      v35 = sub_23F2F8874();
      v36 = (_QWORD *)sub_23F2F8874();
      sub_23F2F8874();
      sub_23F30538C();
      sub_23F3055CC(4.8151e-34);
      v26[3] = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
      sub_23F30537C();
      *(_WORD *)(v35 + 12) = 2112;
      sub_23F3051FC();
      v37 = sub_23F3053B8();
      sub_23F305234(v37);
      *v36 = v26 + 3;
      sub_23F3051E4();
      sub_23F3051E4();
      sub_23F3052A4(&dword_23F2E8000, v38, v39, "error in %s: %@");
      sub_23F2EB3F8(&qword_256E6A720);
      sub_23F30522C();
      sub_23F2F3748();
    }
    sub_23F3051E4();
    sub_23F3051E4();

    v44 = sub_23F3054A8();
    v45(v44);
    sub_23F3053CC();
  }
  sub_23F3055E8();
  sub_23F2FD894();
  sub_23F2FD528();
  v46 = (uint64_t (*)(void))sub_23F3053E4();
  return sub_23F3051C8(v46);
}

uint64_t sub_23F303C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t (*v46)(void);

  sub_23F3052F8();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  swift_release();
  v26[2] = v26[21];
  sub_23F3051FC();
  sub_23F2EB3F8(&qword_256E6A510);
  if (sub_23F305384())
  {
    v29 = (void *)v26[12];
    sub_23F3051E4();
    sub_23F3052D8();
    sub_23F33B1A4();
    v30 = sub_23F3052E0();
    if (sub_23F305314(v30))
    {
      sub_23F2F8874();
      a14 = sub_23F2F8874();
      sub_23F305398(4.8149e-34);
      v26[5] = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
      sub_23F305370();
      sub_23F305290(&dword_23F2E8000, v31, v32, "could not encode [RetrievedContext] in %s");
      sub_23F30522C();
      sub_23F2F3748();
    }

    v40 = sub_23F305568();
    sub_23F305324(v40, v41);
    sub_23F3055FC();
    v42 = sub_23F305250();
    sub_23F305270(v42, v43);
    sub_23F305204();
    sub_23F3053A8();
  }
  else
  {
    v33 = (void *)v26[11];
    sub_23F3053A8();
    sub_23F3052D8();
    sub_23F3051FC();
    sub_23F3051FC();
    sub_23F33B1A4();
    v34 = sub_23F3052E0();
    if (sub_23F305280(v34))
    {
      v35 = sub_23F2F8874();
      v36 = (_QWORD *)sub_23F2F8874();
      sub_23F2F8874();
      sub_23F30538C();
      sub_23F3055CC(4.8151e-34);
      v26[3] = sub_23F3052D0(36, 0x800000023F33D0A0, &a14);
      sub_23F30537C();
      *(_WORD *)(v35 + 12) = 2112;
      sub_23F3051FC();
      v37 = sub_23F3053B8();
      sub_23F305234(v37);
      *v36 = v26 + 3;
      sub_23F3051E4();
      sub_23F3051E4();
      sub_23F3052A4(&dword_23F2E8000, v38, v39, "error in %s: %@");
      sub_23F2EB3F8(&qword_256E6A720);
      sub_23F30522C();
      sub_23F2F3748();
    }
    sub_23F3051E4();
    sub_23F3051E4();

    v44 = sub_23F3054A8();
    v45(v44);
    sub_23F3053CC();
  }
  sub_23F3055E8();
  sub_23F2FD894();
  sub_23F2FD528();
  v46 = (uint64_t (*)(void))sub_23F3053E4();
  return sub_23F3051C8(v46);
}

void sub_23F303F68()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  sub_23F305674();
  v3 = v2;
  v5 = v4;
  sub_23F3055F4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F305528();
  sub_23F2EE6B8(v1, v8, v9, v7);
  v10 = sub_23F2F6C44();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(sub_23F2F6C44() + 16) = v0;
  swift_retain();
  v11 = v0;
  sub_23F33B654();
  swift_release();
  swift_release();
  swift_release();
  sub_23F305624(v1);
  sub_23F2F37B0();
}

uint64_t sub_23F30403C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_23F33B864();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v4 = sub_23F33B1B0();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = sub_23F2EB3F8(&qword_256E6A258);
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3040FC()
{
  uint64_t v0;

  if (qword_256E69988 != -1)
    swift_once();
  *(_QWORD *)(v0 + 160) = qword_256E6D100;
  return sub_23F2F6B54();
}

uint64_t sub_23F304158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime12ContextCache_uiContext;
  swift_beginAccess();
  sub_23F304A18(v2, v1);
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F3041B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(void);

  sub_23F3052F8();
  sub_23F304A60();
  v1 = sub_23F33A358();
  v3 = v2;
  v4 = *(uint64_t **)(v0 + 72);
  sub_23F2F0794(*(_QWORD *)(v0 + 152), &qword_256E6A258);
  *v4 = v1;
  v4[1] = v3;
  sub_23F2FD894();
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD6C0();
  v5 = (uint64_t (*)(void))sub_23F3055A0();
  return sub_23F3051C8(v5);
}

void sub_23F30457C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23F3045B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23F304648@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_23F2FF654();
  *a1 = result;
  return result;
}

uint64_t sub_23F30466C()
{
  return 0;
}

uint64_t sub_23F304674()
{
  return sub_23F33AC7C();
}

uint64_t type metadata accessor for ContextXPCServiceServer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ContextXPCServiceServer.Server()
{
  return objc_opt_self();
}

uint64_t sub_23F3046C4(uint64_t a1, uint64_t a2)
{
  return sub_23F304E74(&qword_256E6A6E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ContextXPCServiceServer.Server, (uint64_t)&unk_23F33ECD0);
}

uint64_t sub_23F3046F0()
{
  return sub_23F304E74(&qword_2543461D8, 255, MEMORY[0x24BE54000], MEMORY[0x24BE53FF8]);
}

uint64_t sub_23F304720()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346788;
  v1 = (id)qword_254346788;
  return v0;
}

void sub_23F304768(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346788;
  qword_254346788 = a1;

}

uint64_t (*sub_23F3047B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23F3047F4()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23F304838(uint64_t a1)
{
  swift_beginAccess();
  qword_254346780 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23F304884())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23F3048C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23F305724();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23F304938()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F305724();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F30547C(v1);
  return sub_23F2FFA48(v2, v3, v4, v5);
}

void sub_23F3049A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23F334E90(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23F3049A8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F334E64(a1, a2, *(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 16));
}

uint64_t sub_23F3049B0()
{
  sub_23F3056D8();
  return swift_deallocObject();
}

uint64_t sub_23F3049D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F3056F4(v1);
  return sub_23F30403C(v2, v3);
}

uint64_t sub_23F304A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F304A60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E6A710;
  if (!qword_256E6A710)
  {
    v1 = sub_23F2F244C(&qword_256E6A258);
    v2 = sub_23F304E74(&qword_256E6A718, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54408], MEMORY[0x24BE54418]);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E6A710);
  }
  return result;
}

unint64_t sub_23F304AE0()
{
  unint64_t result;

  result = qword_256E6A728;
  if (!qword_256E6A728)
  {
    result = MEMORY[0x2426695B0](&unk_23F33EE18, &type metadata for ContextXPCServiceServer.ContextXPCServiceServerError);
    atomic_store(result, &qword_256E6A728);
  }
  return result;
}

uint64_t sub_23F304B1C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23F304B40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F304B64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F3056F4(v1);
  return sub_23F3034FC(v2, v3);
}

uint64_t sub_23F304BAC()
{
  uint64_t v0;

  sub_23F2F6B60();
  sub_23F2F6B38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23F304BE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E6A748;
  if (!qword_256E6A748)
  {
    v1 = sub_23F2F244C(&qword_256E6A4E0);
    v2 = sub_23F304E74(&qword_256E6A750, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE577B0], MEMORY[0x24BE577C0]);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E6A748);
  }
  return result;
}

uint64_t sub_23F304C60()
{
  sub_23F3056D8();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F304C88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F30547C(v1);
  return sub_23F302A78(v2, v3, v4, v5);
}

uint64_t sub_23F304CDC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23F304D20()
{
  uint64_t v0;

  sub_23F3056D8();
  sub_23F304CDC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_23F304D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_23F2F38F0(v2);
  v4 = sub_23F305608(v3);
  return sub_23F301704(v4, v5, v6, v7, v1);
}

uint64_t sub_23F304DB0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_23F304DF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E6A780;
  if (!qword_256E6A780)
  {
    v1 = sub_23F2F244C(&qword_256E6A778);
    v2 = sub_23F304E74(&qword_256E6A788, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57350]);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E6A780);
  }
  return result;
}

uint64_t sub_23F304E74(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2426695B0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F304EB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F304CDC(a1, a2);
  return a1;
}

uint64_t sub_23F304EC8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_23F304CDC(*(_QWORD *)(v0 + 16), v1);

  return swift_deallocObject();
}

uint64_t sub_23F304F04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F2F38F0(v0);
  v2 = sub_23F30547C(v1);
  return sub_23F300338(v2, v3, v4, v5);
}

uint64_t sub_23F304F58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F304DB0(a1, a2);
  return a1;
}

void sub_23F304F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F3001DC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23F304F74(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_23F304F98()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_23F304CDC(*(_QWORD *)(v0 + 16), v1);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F304FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_23F2F38F0(v3);
  v5 = sub_23F305608(v4);
  return sub_23F2FFCE8(v5, v6, v7, v8, v1, v2);
}

unint64_t sub_23F305044()
{
  unint64_t result;

  result = qword_256E6A7B0;
  if (!qword_256E6A7B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E6A7B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContextXPCServiceServer.ContextXPCServiceServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F3050CC + 4 * byte_23F33ECA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F305100 + 4 * byte_23F33ECA0[v4]))();
}

uint64_t sub_23F305100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F305108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F305110);
  return result;
}

uint64_t sub_23F30511C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F305124);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F305128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F305130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextXPCServiceServer.ContextXPCServiceServerError()
{
  return &type metadata for ContextXPCServiceServer.ContextXPCServiceServerError;
}

unint64_t sub_23F305150()
{
  unint64_t result;

  result = qword_256E6A7B8;
  if (!qword_256E6A7B8)
  {
    result = MEMORY[0x2426695B0](&unk_23F33EDF0, &type metadata for ContextXPCServiceServer.ContextXPCServiceServerError);
    atomic_store(result, (unint64_t *)&qword_256E6A7B8);
  }
  return result;
}

uint64_t sub_23F3051C8(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23F3051E4()
{
  void *v0;

}

uint64_t sub_23F3051EC()
{
  return swift_arrayDestroy();
}

id sub_23F3051FC()
{
  void *v0;

  return v0;
}

uint64_t sub_23F305204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F305214@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(0xD000000000000026, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_23F30522C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F305234(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F305250()
{
  return swift_allocError();
}

void sub_23F30525C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_23F305270(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

BOOL sub_23F305280(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F305290(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void sub_23F3052A4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_23F3052B8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(0xD000000000000031, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_23F3052D0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return sub_23F30DBFC(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t sub_23F3052D8()
{
  return sub_23F33AC1C();
}

uint64_t sub_23F3052E0()
{
  return sub_23F33B6F0();
}

BOOL sub_23F3052E8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL sub_23F305314(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F305324@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F30532C(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_23F305340(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F305358(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F305370()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F30537C()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F305384()
{
  return swift_dynamicCast();
}

void sub_23F305398(float a1)
{
  float *v1;

  *v1 = a1;
}

void sub_23F3053A8()
{
  uint64_t v0;

}

void sub_23F3053B0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_23F3053B8()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_23F3053C0()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F3053CC()
{
  return swift_willThrow();
}

void sub_23F3053D4(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F3053E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

unint64_t sub_23F3053F0()
{
  return sub_23F304AE0();
}

uint64_t sub_23F3053FC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F305410()
{
  return swift_task_dealloc();
}

uint64_t sub_23F305424()
{
  return sub_23F33A358();
}

uint64_t sub_23F305434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F305444()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F305454(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 256) = a1;
  *(_QWORD *)(v4 + 264) = v1;
  return swift_task_dealloc();
}

uint64_t sub_23F30547C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F305498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t sub_23F3054A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3054B8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3054C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

void sub_23F3054D0(float a1)
{
  float *v1;

  *v1 = a1;
}

void sub_23F3054E0()
{
  uint64_t v0;

}

void sub_23F3054E8()
{
  uint64_t v0;

}

unint64_t sub_23F3054F4()
{
  return sub_23F304AE0();
}

unint64_t sub_23F305500()
{
  return sub_23F304AE0();
}

uint64_t sub_23F30550C()
{
  return sub_23F33B648();
}

uint64_t sub_23F305528()
{
  return sub_23F33B648();
}

unint64_t sub_23F305544()
{
  return sub_23F304AE0();
}

uint64_t sub_23F305550(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F33B7BC();
}

uint64_t sub_23F305568()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F305574(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F33B7BC();
}

void sub_23F30558C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F3055A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F3055AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3055BC()
{
  uint64_t v0;

  return v0;
}

void sub_23F3055CC(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F3055DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t sub_23F3055E8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3055F4()
{
  uint64_t *v0;

  return sub_23F2EB3F8(v0);
}

unint64_t sub_23F3055FC()
{
  return sub_23F304AE0();
}

uint64_t sub_23F305608(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F305624(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F2F0794(a1, v1);
}

uint64_t sub_23F30562C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F305638()
{
  return swift_task_dealloc();
}

uint64_t sub_23F305640()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F305654()
{
  return sub_23F33A334();
}

unint64_t sub_23F305660()
{
  return sub_23F304BE0();
}

uint64_t sub_23F305668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

void sub_23F30568C(float a1)
{
  float *v1;

  *v1 = a1;
}

void sub_23F3056A4(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F3056C8()
{
  return swift_bridgeObjectRelease();
}

void sub_23F3056D8()
{
  uint64_t v0;

}

void sub_23F3056E0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23F3056EC()
{
  return swift_release();
}

uint64_t sub_23F3056F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

_QWORD *sub_23F305708(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return v1;
}

uint64_t sub_23F30571C()
{
  return swift_release();
}

uint64_t sub_23F305724()
{
  return sub_23F33ACC4();
}

uint64_t sub_23F30572C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;

  sub_23F33A5F8();
  swift_allocObject();
  *a1 = sub_23F33A5EC();
  v2 = type metadata accessor for ConversationalAlarmProvider();
  v3 = (uint64_t)a1 + *(int *)(v2 + 20);
  v4 = sub_23F33AB2C();
  sub_23F2EBFCC(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 24);
  v6 = *MEMORY[0x24BE572A0];
  v7 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = sub_23F2EE774();
  v9 = (uint64_t)&v5[*(int *)(v8 + 24)];
  v10 = *MEMORY[0x24BE571B8];
  v11 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  result = sub_23F2EBFCC(v9, 0, 1, v11);
  v13 = &v5[*(int *)(v8 + 20)];
  *(_QWORD *)v13 = 0xD000000000000071;
  *((_QWORD *)v13 + 1) = 0x800000023F33D2E0;
  return result;
}

uint64_t type metadata accessor for ConversationalAlarmProvider()
{
  uint64_t result;

  result = qword_256E6A820;
  if (!qword_256E6A820)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23F30588C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F33AB2C();
    swift_retain();
    if (sub_23F2EBFC0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F2EB3F8(&qword_256E6A7C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_23F2EBFCC((uint64_t)v9, 0, 1, v11);
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F33A9E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = type metadata accessor for ContextDefinition();
    v18 = *(int *)(v17 + 20);
    v19 = &v14[v18];
    v20 = &v15[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = *(int *)(v17 + 24);
    v23 = &v14[v22];
    v24 = &v15[v22];
    v25 = sub_23F33A97C();
    swift_bridgeObjectRetain();
    if (sub_23F2EBFC0((uint64_t)v24, 1, v25))
    {
      v26 = sub_23F2EB3F8(qword_256E69B30);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      sub_23F2EBFCC((uint64_t)v23, 0, 1, v25);
    }
  }
  return v7;
}

uint64_t sub_23F305A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F33AB2C();
  if (!sub_23F2EBFC0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for ContextDefinition();
  swift_bridgeObjectRelease();
  v9 = v6 + *(int *)(v8 + 24);
  v10 = sub_23F33A97C();
  result = sub_23F2EBFC0(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return result;
}

_QWORD *sub_23F305B40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F33AB2C();
  swift_retain();
  if (sub_23F2EBFC0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F2EB3F8(&qword_256E6A7C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    sub_23F2EBFCC((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F33A9E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = type metadata accessor for ContextDefinition();
  v16 = *(int *)(v15 + 20);
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = *(int *)(v15 + 24);
  v21 = &v12[v20];
  v22 = &v13[v20];
  v23 = sub_23F33A97C();
  swift_bridgeObjectRetain();
  if (sub_23F2EBFC0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    sub_23F2EBFCC((uint64_t)v21, 0, 1, v23);
  }
  return a1;
}

_QWORD *sub_23F305CD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F33AB2C();
  v10 = sub_23F2EBFC0((uint64_t)v7, 1, v9);
  v11 = sub_23F2EBFC0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_23F2EBFCC((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F2EB3F8(&qword_256E6A7C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F33A9E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = type metadata accessor for ContextDefinition();
  v19 = *(int *)(v18 + 20);
  v20 = &v15[v19];
  v21 = &v16[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(int *)(v18 + 24);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = sub_23F33A97C();
  v26 = sub_23F2EBFC0((uint64_t)v23, 1, v25);
  v27 = sub_23F2EBFC0((uint64_t)v24, 1, v25);
  if (!v26)
  {
    v28 = *(_QWORD *)(v25 - 8);
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v29 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  sub_23F2EBFCC((uint64_t)v23, 0, 1, v25);
  return a1;
}

_QWORD *sub_23F305F1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F33AB2C();
  if (sub_23F2EBFC0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F2EB3F8(&qword_256E6A7C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_23F2EBFCC((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F33A9E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = type metadata accessor for ContextDefinition();
  *(_OWORD *)&v12[*(int *)(v15 + 20)] = *(_OWORD *)&v13[*(int *)(v15 + 20)];
  v16 = *(int *)(v15 + 24);
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = sub_23F33A97C();
  if (sub_23F2EBFC0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    sub_23F2EBFCC((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

_QWORD *sub_23F306094(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F33AB2C();
  v10 = sub_23F2EBFC0((uint64_t)v7, 1, v9);
  v11 = sub_23F2EBFC0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      sub_23F2EBFCC((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F2EB3F8(&qword_256E6A7C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F33A9E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = type metadata accessor for ContextDefinition();
  v19 = *(int *)(v18 + 20);
  v20 = &v15[v19];
  v21 = &v16[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = *(int *)(v18 + 24);
  v25 = &v15[v24];
  v26 = &v16[v24];
  v27 = sub_23F33A97C();
  v28 = sub_23F2EBFC0((uint64_t)v25, 1, v27);
  v29 = sub_23F2EBFC0((uint64_t)v26, 1, v27);
  if (!v28)
  {
    v30 = *(_QWORD *)(v27 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v31 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  sub_23F2EBFCC((uint64_t)v25, 0, 1, v27);
  return a1;
}

uint64_t sub_23F3062C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3062CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F306364()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F306370(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_23F306404()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F306498();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ContextDefinition();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F306498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E6A830)
  {
    sub_23F33AB2C();
    v0 = sub_23F33B7A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E6A830);
  }
}

_UNKNOWN **sub_23F3064EC()
{
  return &off_250FC5800;
}

uint64_t sub_23F3064F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F2EE49C(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_23F306508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A6F4();
  swift_allocObject();
  *a1 = sub_23F33A6E8();
  v2 = type metadata accessor for ConversationalCalendarEventProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE572F8];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD00000000000007ALL;
  *((_QWORD *)v10 + 1) = 0x800000023F33D360;
  return result;
}

uint64_t type metadata accessor for ConversationalCalendarEventProvider()
{
  uint64_t result;

  result = qword_256E6A8F0;
  if (!qword_256E6A8F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F306640()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F30664C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F3066E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F3066F0(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F306784()
{
  return &off_250FC5840;
}

uint64_t sub_23F306790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23F3067AC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F2EBFCC(v0, 0, 1, v1);
}

uint64_t sub_23F3067C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A634();
  swift_allocObject();
  *a1 = sub_23F33A628();
  v2 = type metadata accessor for ConversationalPeopleProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE572B8];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD000000000000070;
  *((_QWORD *)v10 + 1) = 0x800000023F33D3E0;
  return result;
}

uint64_t type metadata accessor for ConversationalPeopleProvider()
{
  uint64_t result;

  result = qword_256E6A9B8;
  if (!qword_256E6A9B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3068F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F306904(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F30699C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F3069A8(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F306A3C()
{
  return &off_250FC5880;
}

uint64_t sub_23F306A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A70C();
  swift_allocObject();
  *a1 = sub_23F33A700();
  v2 = type metadata accessor for ConversationalPlacesProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE572C0];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD000000000000089;
  *((_QWORD *)v10 + 1) = 0x800000023F33D460;
  return result;
}

uint64_t type metadata accessor for ConversationalPlacesProvider()
{
  uint64_t result;

  result = qword_256E6AA80;
  if (!qword_256E6AA80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F306B80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F306B8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F306C24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F306C30(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F306CC4()
{
  return &off_250FC5820;
}

uint64_t sub_23F306CD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A6A0();
  swift_allocObject();
  *a1 = sub_23F33A694();
  v2 = type metadata accessor for ConversationalReminderProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE572D0];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD000000000000074;
  *((_QWORD *)v10 + 1) = 0x800000023F33D4F0;
  return result;
}

uint64_t type metadata accessor for ConversationalReminderProvider()
{
  uint64_t result;

  result = qword_256E6AB48;
  if (!qword_256E6AB48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F306E08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F306E14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F306EAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F306EB8(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F306F4C()
{
  return &off_250FC5830;
}

uint64_t sub_23F306F58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A610();
  swift_allocObject();
  *a1 = sub_23F33A604();
  v2 = type metadata accessor for ConversationalTimerProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE572A8];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD000000000000071;
  *((_QWORD *)v10 + 1) = 0x800000023F33D570;
  return result;
}

uint64_t type metadata accessor for ConversationalTimerProvider()
{
  uint64_t result;

  result = qword_256E6AC10;
  if (!qword_256E6AC10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F307090()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F30709C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F307134()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F307140(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F3071D4()
{
  return &off_250FC57F0;
}

uint64_t sub_23F3071E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float *v17;
  float v18;
  float v19;
  int64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  float v25;
  float v26;
  float v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v3 = v2;
  v6 = sub_23F33B1B0();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v35 = MEMORY[0x24BEE4AF8];
    sub_23F2F2EB8(0, v8, 0);
    v9 = 0;
    v10 = v35;
    v11 = a1 + 32;
    v31 = a1 + 32;
    do
    {
      v12 = *(_QWORD *)(v11 + 8 * v9);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      if (v13 == v14)
      {
        swift_bridgeObjectRetain();
        v15 = sub_23F307488(v12, a2);
        swift_bridgeObjectRelease();
        v16 = *(_QWORD *)(v15 + 16);
        if (v16)
        {
          v17 = (float *)(v15 + 32);
          v18 = 0.0;
          do
          {
            v19 = *v17++;
            v18 = v18 + v19;
            --v16;
          }
          while (v16);
        }
        else
        {
          v18 = 0.0;
        }
        swift_bridgeObjectRelease();
        v26 = sub_23F3083F0(v12);
        v27 = sub_23F3083F0(a2);
        swift_bridgeObjectRelease();
        v25 = (float)((float)(v18 / (float)(v26 * v27)) + 1.0) * 0.5;
      }
      else
      {
        v20 = v8;
        v21 = v3;
        sub_23F33AC1C();
        v22 = sub_23F33B1A4();
        v23 = sub_23F33B6F0();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v24 = 0;
          _os_log_impl(&dword_23F2E8000, v22, v23, "arrays must be of the same length to calculate cosine similarity", v24, 2u);
          MEMORY[0x242669658](v24, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
        swift_bridgeObjectRelease();
        v25 = 0.0;
        v3 = v21;
        v8 = v20;
        v11 = v31;
      }
      v35 = v10;
      v29 = *(_QWORD *)(v10 + 16);
      v28 = *(_QWORD *)(v10 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_23F2F2EB8((char *)(v28 > 1), v29 + 1, 1);
        v10 = v35;
      }
      ++v9;
      *(_QWORD *)(v10 + 16) = v29 + 1;
      *(float *)(v10 + 4 * v29 + 32) = v25;
    }
    while (v9 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v10;
}

uint64_t sub_23F307488(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  float *v7;
  float *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  float v14;
  float v15;
  unint64_t v16;
  unint64_t v17;
  float v18;
  float v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v28 = MEMORY[0x24BEE4AF8];
  sub_23F2F2EB8(0, v6, 0);
  v26 = a2;
  v27 = a1;
  if (v6)
  {
    v7 = (float *)(a1 + 32);
    v8 = (float *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v10 = v6;
    v11 = v4;
    v12 = v5;
    v13 = v5;
    while (v4)
    {
      if (!v12)
        goto LABEL_22;
      v14 = *v7;
      v15 = *v8;
      v17 = *(_QWORD *)(v28 + 16);
      v16 = *(_QWORD *)(v28 + 24);
      if (v17 >= v16 >> 1)
      {
        v23 = v11;
        v24 = v13;
        result = (uint64_t)sub_23F2F2EB8((char *)(v16 > 1), v17 + 1, 1);
        v11 = v23;
        v13 = v24;
      }
      --v12;
      *(_QWORD *)(v28 + 16) = v17 + 1;
      *(float *)(v28 + 4 * v17 + 32) = v14 * v15;
      --v4;
      ++v8;
      ++v7;
      if (!--v10)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v11 = v4;
    v13 = v5;
LABEL_13:
    if (v11 <= v13)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v28;
    }
    while (v6 < v11)
    {
      if (v13 == v6)
        goto LABEL_20;
      if (v6 >= v13)
        goto LABEL_24;
      v18 = *(float *)(v27 + 32 + 4 * v6);
      v19 = *(float *)(v26 + 32 + 4 * v6);
      v21 = *(_QWORD *)(v28 + 16);
      v20 = *(_QWORD *)(v28 + 24);
      if (v21 >= v20 >> 1)
      {
        v22 = v11;
        v25 = v13;
        result = (uint64_t)sub_23F2F2EB8((char *)(v20 > 1), v21 + 1, 1);
        v13 = v25;
        v11 = v22;
      }
      ++v6;
      *(_QWORD *)(v28 + 16) = v21 + 1;
      *(float *)(v28 + 4 * v21 + 32) = v18 * v19;
      if (v11 == v6)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23F307698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[103] = v3;
  v4[102] = a3;
  v4[101] = a2;
  v4[100] = a1;
  v5 = sub_23F33B1B0();
  v4[104] = v5;
  v4[105] = *(_QWORD *)(v5 - 8);
  v4[106] = sub_23F2F8838();
  v4[107] = sub_23F2F8838();
  v6 = sub_23F33B168();
  v4[108] = v6;
  v4[109] = *(_QWORD *)(v6 - 8);
  v4[110] = sub_23F2F8838();
  v4[111] = sub_23F2F8838();
  v4[112] = sub_23F2F8838();
  v7 = sub_23F33B138();
  v4[113] = v7;
  v4[114] = *(_QWORD *)(v7 - 8);
  v4[115] = sub_23F2F8838();
  v4[116] = sub_23F2F8838();
  v4[117] = sub_23F2F8838();
  v4[118] = sub_23F2F8838();
  v4[119] = sub_23F2F8838();
  return sub_23F2F6B54();
}

uint64_t sub_23F307784()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  _WORD *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F2FD7A4();
  *(_QWORD *)(v0 + 960) = OBJC_IVAR____TtC30IntelligenceFlowContextRuntime26DescriptionRelevanceScorer_signposter;
  sub_23F33B150();
  sub_23F33B120();
  v1 = sub_23F33B150();
  v2 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v3 = (_WORD *)sub_23F2FD508();
    v4 = sub_23F3086D8(v3);
    sub_23F3086CC(&dword_23F2E8000, v1, v2, v4, "IFCR.DescriptionRelevanceScorer.scoreRelevanceOfContextValues", "");
    sub_23F308670();
  }
  v5 = *(_QWORD *)(v0 + 952);
  v6 = *(_QWORD *)(v0 + 944);
  v7 = *(_QWORD *)(v0 + 912);
  v8 = *(_QWORD *)(v0 + 904);
  v9 = *(_QWORD *)(v0 + 824);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
  sub_23F33B18C();
  swift_allocObject();
  *(_QWORD *)(v0 + 968) = sub_23F33B180();
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 976) = v10;
  v10(v5, v8);
  v11 = *(_QWORD *)(v9
                  + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime26DescriptionRelevanceScorer_universalEmbeddingClient);
  *(_QWORD *)(v0 + 984) = v11;
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 816);
    v13 = *(_QWORD *)(v0 + 808);
    v14 = (_QWORD *)sub_23F2F6C44();
    v14[2] = v11;
    v14[3] = v13;
    v14[4] = v12;
    v15 = sub_23F2F6C44();
    *(_QWORD *)(v0 + 992) = v15;
    *(_QWORD *)(v15 + 16) = &unk_256E6AD50;
    *(_QWORD *)(v15 + 24) = v14;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23F2F244C(&qword_256E6AD68);
    swift_asyncLet_begin();
    *(_QWORD *)(v0 + 696) = MEMORY[0x24BEE4AF8];
    if (qword_256E69988 != -1)
      swift_once();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1000) = v16;
    *v16 = v0;
    v16[1] = sub_23F307B98;
    return sub_23F2F5D6C();
  }
  else
  {
    sub_23F33AC1C();
    v18 = sub_23F33B1A4();
    v19 = sub_23F33B708();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      *(_WORD *)sub_23F2FD508() = 0;
      sub_23F30872C(&dword_23F2E8000, v18, (os_log_type_t)v19, "couldn't initialize UniversalEmbeddingClient");
      sub_23F308670();
    }
    v20 = *(_QWORD *)(v0 + 848);
    v21 = *(_QWORD *)(v0 + 840);
    v22 = *(_QWORD *)(v0 + 832);
    v23 = *(_QWORD *)(v0 + 800);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    v34 = sub_23F2FEC30(*(_QWORD *)(v23 + 16), 0.0);
    v24 = sub_23F33B150();
    sub_23F33B174();
    v25 = sub_23F33B75C();
    if ((sub_23F33B798() & 1) != 0)
    {
      v26 = *(_QWORD *)(v0 + 880);
      v27 = *(_QWORD *)(v0 + 872);
      v28 = *(_QWORD *)(v0 + 864);
      swift_retain();
      sub_23F33B198();
      sub_23F2F393C();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v27 + 88))(v26, v28) == *MEMORY[0x24BEE7810])
      {
        v29 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F3086BC(*(_QWORD *)(v0 + 880));
        v29 = "";
      }
      v30 = (uint8_t *)sub_23F2FD508();
      *(_WORD *)v30 = 0;
      v31 = sub_23F33B12C();
      _os_signpost_emit_with_name_impl(&dword_23F2E8000, v24, v25, v31, "IFCR.DescriptionRelevanceScorer.scoreRelevanceOfContextValues", v29, v30, 2u);
      MEMORY[0x242669658](v30, -1, -1);
    }
    v32 = *(_QWORD *)(v0 + 920);
    v33 = *(_QWORD *)(v0 + 904);

    v10(v32, v33);
    sub_23F2F393C();
    swift_task_dealloc();
    sub_23F2FD894();
    sub_23F2F6CE8();
    sub_23F2FD528();
    sub_23F3054B8();
    sub_23F2FD6C0();
    sub_23F2FD78C();
    sub_23F308754();
    sub_23F30874C();
    sub_23F2FD500();
    return sub_23F308654(v34, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23F307B98(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1008) = a1;
  swift_task_dealloc();
  return sub_23F2F6B54();
}

uint64_t sub_23F307BEC()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 1008))
    sub_23F2FECC4((uint64_t)&unk_250FC4010, *(_QWORD *)(*(_QWORD *)(v0 + 800) + 16));
  sub_23F3098F0();
  return swift_asyncLet_get();
}

uint64_t sub_23F307C5C()
{
  return sub_23F3086B0();
}

uint64_t sub_23F307C68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[99];
  if (v1 && *(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain_n();
    v3 = swift_bridgeObjectRetain();
    v0[127] = sub_23F3071E0(v3, v2);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F33AC1C();
    v4 = sub_23F33B1A4();
    v5 = sub_23F33B6F0();
    if (os_log_type_enabled(v4, v5))
    {
      *(_WORD *)sub_23F2FD508() = 0;
      sub_23F30872C(&dword_23F2E8000, v4, v5, "couldn't get query embedding");
      sub_23F308670();
    }
    v6 = v0[107];
    v7 = v0[105];
    v8 = v0[104];
    v9 = v0[100];

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v0[128] = sub_23F2FEC30(*(_QWORD *)(v9 + 16), 0.0);
  }
  return swift_asyncLet_finish();
}

uint64_t sub_23F307DD4()
{
  return sub_23F3086B0();
}

uint64_t sub_23F307DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  NSObject *v9;
  os_signpost_type_t v10;
  uint64_t v11;
  const char *v12;
  _WORD *v13;
  os_signpost_id_t v14;

  sub_23F2FD7A4();
  sub_23F308738();
  sub_23F308720();
  sub_23F2F393C();
  sub_23F33B150();
  sub_23F3086E4();
  sub_23F33B75C();
  if ((sub_23F2FD910() & 1) != 0)
  {
    sub_23F308704();
    sub_23F33B198();
    sub_23F2F6CCC();
    if (sub_23F3086F4() == *MEMORY[0x24BEE7810])
    {
      v12 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F3086BC(*(_QWORD *)(v11 + 896));
      v12 = "";
    }
    v13 = (_WORD *)sub_23F2FD508();
    v14 = sub_23F3086D8(v13);
    sub_23F3086CC(&dword_23F2E8000, v9, v10, v14, "IFCR.DescriptionRelevanceScorer.scoreRelevanceOfContextValues", v12);
    sub_23F308670();
  }

  sub_23F308714();
  swift_release();
  sub_23F2F6CCC();
  sub_23F308680();
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F3054B8();
  sub_23F2FD6C0();
  sub_23F2FD78C();
  sub_23F308754();
  sub_23F30874C();
  sub_23F2FD894();
  return sub_23F308654(a9, *(uint64_t (**)(void))(v11 + 8));
}

uint64_t sub_23F307F00()
{
  return sub_23F3086B0();
}

uint64_t sub_23F307F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  NSObject *v9;
  os_signpost_type_t v10;
  uint64_t v11;
  const char *v12;
  _WORD *v13;
  os_signpost_id_t v14;

  sub_23F2FD7A4();
  sub_23F308738();
  sub_23F308720();
  sub_23F2F393C();
  sub_23F33B150();
  sub_23F3086E4();
  sub_23F33B75C();
  if ((sub_23F2FD910() & 1) != 0)
  {
    sub_23F308704();
    sub_23F33B198();
    sub_23F2F6CCC();
    if (sub_23F3086F4() == *MEMORY[0x24BEE7810])
    {
      v12 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F3086BC(*(_QWORD *)(v11 + 888));
      v12 = "";
    }
    v13 = (_WORD *)sub_23F2FD508();
    v14 = sub_23F3086D8(v13);
    sub_23F3086CC(&dword_23F2E8000, v9, v10, v14, "IFCR.DescriptionRelevanceScorer.scoreRelevanceOfContextValues", v12);
    sub_23F308670();
  }

  sub_23F308714();
  swift_release();
  sub_23F2F6CCC();
  sub_23F308680();
  sub_23F2F6CE8();
  sub_23F2FD528();
  sub_23F2FD500();
  sub_23F3054B8();
  sub_23F2FD6C0();
  sub_23F2FD78C();
  sub_23F308754();
  sub_23F30874C();
  sub_23F2FD894();
  return sub_23F308654(a9, *(uint64_t (**)(void))(v11 + 8));
}

uint64_t sub_23F30802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = sub_23F33B1B0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23F33B15C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UniversalEmbeddingModelClient();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime26DescriptionRelevanceScorer_universalEmbeddingClient) = sub_23F338F6C();
  sub_23F33AC1C();
  sub_23F33B144();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime26DescriptionRelevanceScorer_signposter, v5, v2);
  return v0;
}

uint64_t sub_23F308138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F308154()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[3];
  v1 = v0[4];
  sub_23F2EB3F8(&qword_2543463D8);
  v3 = sub_23F2F6C44();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_23F33E710;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_23F3081E4;
  return sub_23F338A34(v3);
}

uint64_t sub_23F3081E4(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  sub_23F2F6B38();
  swift_bridgeObjectRelease();
  if (v1)
  {

    a1 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(a1);
}

uint64_t sub_23F308248(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23F3082A0;
  return v5();
}

uint64_t sub_23F3082A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F30875C();
  v3 = *(_QWORD **)(v2 + 16);
  sub_23F2F6B38();
  *v3 = v0;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23F3082DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime26DescriptionRelevanceScorer_signposter;
  v2 = sub_23F33B15C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23F30833C()
{
  return type metadata accessor for DescriptionRelevanceScorer();
}

uint64_t type metadata accessor for DescriptionRelevanceScorer()
{
  uint64_t result;

  result = qword_256E6ACB0;
  if (!qword_256E6ACB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F30837C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33B15C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

float sub_23F3083F0(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  float *v4;
  unint64_t v5;
  float v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23F2F2EB8(0, v1, 0);
    v3 = v13;
    v4 = (float *)(a1 + 32);
    v5 = *(_QWORD *)(v13 + 16);
    do
    {
      v6 = *v4;
      v14 = v3;
      v7 = *(_QWORD *)(v3 + 24);
      v8 = v5 + 1;
      if (v5 >= v7 >> 1)
      {
        sub_23F2F2EB8((char *)(v7 > 1), v5 + 1, 1);
        v3 = v14;
      }
      *(_QWORD *)(v3 + 16) = v8;
      *(float *)(v3 + 4 * v5 + 32) = v6 * v6;
      ++v4;
      ++v5;
      --v1;
    }
    while (v1);
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
    v8 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v8)
    {
      v10 = 0.0;
      goto LABEL_10;
    }
  }
  v9 = 0;
  v10 = 0.0;
  do
  {
    v11 = *(float *)(v3 + 4 * v9++ + 32);
    v10 = v10 + v11;
  }
  while (v8 != v9);
LABEL_10:
  swift_bridgeObjectRelease();
  return sqrtf(v10);
}

uint64_t sub_23F3084FC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F308528()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23F308588;
  return sub_23F308138(v2, v3, v4);
}

uint64_t sub_23F308588()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F30875C();
  sub_23F2F6B38();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v0);
}

uint64_t sub_23F3085C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F3085E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F2F6A08;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256E6AD58 + dword_256E6AD58))(a1, v4);
}

uint64_t sub_23F308654(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_23F308670()
{
  JUMPOUT(0x242669658);
}

uint64_t sub_23F308680()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3086B0()
{
  return swift_task_switch();
}

uint64_t sub_23F3086BC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 872) + 8))(a1, *(_QWORD *)(v1 + 864));
}

void sub_23F3086CC(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_23F3086D8(_WORD *a1)
{
  *a1 = 0;
  return sub_23F33B12C();
}

uint64_t sub_23F3086E4()
{
  return sub_23F33B174();
}

uint64_t sub_23F3086F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_23F308704()
{
  return swift_retain();
}

uint64_t sub_23F308714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F308720()
{
  return swift_release();
}

void sub_23F30872C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_23F308738()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 984);
}

uint64_t sub_23F30874C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F308754()
{
  return swift_task_dealloc();
}

void sub_23F30875C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F308774(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for GroundableEntity(uint64_t a1)
{
  return sub_23F30879C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23F30879C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s30IntelligenceFlowContextRuntime16GroundableEntityOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F308774(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for GroundableEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F308774(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F30879C(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for GroundableEntity(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GroundableEntity(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F30879C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroundableEntity(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroundableEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F30892C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23F308934(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroundableEntity()
{
  return &type metadata for GroundableEntity;
}

uint64_t sub_23F30894C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned int v5;
  _QWORD v7[2];

  v1 = sub_23F33A790();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(v0 + 16);
  sub_23F33A778();
  sub_23F33A784();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v5 > 1)
  {
    sub_23F2EBF5C();
    sub_23F30910C();
    sub_23F33B81C();
    sub_23F30911C();
    v7[0] = 0xD000000000000012;
    v7[1] = 0x800000023F33D6A0;
  }
  else
  {
    sub_23F30910C();
    sub_23F33B81C();
    sub_23F30911C();
    sub_23F3090D8();
    sub_23F2EBF5C();
    sub_23F33B57C();
  }
  sub_23F30912C();
  sub_23F33B57C();
  return v7[0];
}

uint64_t sub_23F308AC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, uint64_t);
  uint64_t *v47;
  char v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t *v59;
  _QWORD v60[3];
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;

  v71 = a1;
  v2 = sub_23F33A9E8();
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE748();
  v65 = v3;
  v64 = sub_23F33B3F0();
  v68 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  sub_23F2EE748();
  v70 = v4;
  v69 = sub_23F33B408();
  v5 = *(_QWORD *)(v69 - 8);
  v6 = MEMORY[0x24BDAC7A8](v69);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v60 - v9;
  v11 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F33B420();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v60 - v19;
  v21 = v1;
  sub_23F33AAF0();
  v22 = v14;
  if (sub_23F2EBFC0((uint64_t)v13, 1, v14) == 1)
  {
    result = sub_23F309068((uint64_t)v13);
  }
  else
  {
    v62 = v21;
    v63 = v5;
    v24 = v70;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v22);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v22);
    if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v18, v22) == *MEMORY[0x24BEB9A00])
    {
      v61 = v20;
      (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v22);
      v25 = swift_projectBox();
      v26 = v63;
      v27 = v22;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
      v29 = v69;
      v28(v10, v25, v69);
      swift_release();
      v28(v8, (uint64_t)v10, v29);
      if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v8, v29) == *MEMORY[0x24BEB9950])
      {
        v60[2] = v15;
        (*(void (**)(char *, uint64_t))(v26 + 96))(v8, v29);
        v30 = v68;
        (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v24, v8, v64);
        v31 = (void *)sub_23F33B3E4();
        v32 = objc_msgSend(v31, sel_personHandle);
        v60[1] = v31;
        v33 = objc_msgSend(v31, sel_displayName);
        v34 = sub_23F309124();
        v36 = v35;

        v37 = v65;
        sub_23F33AB08();
        v38 = (*(uint64_t (**)(void *, uint64_t))(v66 + 88))(v37, v67);
        if ((_DWORD)v38 == *MEMORY[0x24BE57260] || (_DWORD)v38 == *MEMORY[0x24BE57300])
        {
          v40 = sub_23F3090FC();
          if (v32)
          {
            if (sub_23F309104(v40, sel_type) == (id)1
              && sub_23F309104(1, sel_value))
            {
              v41 = sub_23F309124();
              v43 = v42;

              sub_23F3090F4();
              sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
              sub_23F3090C4();
              result = sub_23F3090A8();
              v44 = v71;
              *v71 = v41;
              v44[1] = v43;
              *((_BYTE *)v44 + 16) = 0;
              return result;
            }

          }
          sub_23F3090F4();
          sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
          (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v69);
        }
        else
        {
          v49 = (void *)v38;
          if ((_DWORD)v38 != *MEMORY[0x24BE572F0])
          {
            v57 = *MEMORY[0x24BE57268];

            sub_23F3090F4();
            if ((_DWORD)v49 != v57)
            {
              sub_23F3090FC();
              sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
              sub_23F3090C4();
              sub_23F3090A8();
              v59 = v71;
              *v71 = 0;
              v59[1] = 0;
              *((_BYTE *)v59 + 16) = -1;
              return (*(uint64_t (**)(void *, uint64_t))(v66 + 8))(v65, v67);
            }
            if ((v36 & 0x2000000000000000) != 0)
              v58 = HIBYTE(v36) & 0xF;
            else
              v58 = v34 & 0xFFFFFFFFFFFFLL;
            sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
            sub_23F3090C4();
            result = sub_23F3090A8();
            if (v58)
            {
              v47 = v71;
              *v71 = v34;
              v47[1] = v36;
              v48 = 2;
              goto LABEL_18;
            }
            result = sub_23F3090FC();
            goto LABEL_17;
          }
          v50 = sub_23F3090FC();
          v51 = v63;
          v52 = v69;
          if (v32)
          {
            if (sub_23F309104(v50, sel_type) == (id)2
              && sub_23F309104(2, sel_value))
            {
              v53 = sub_23F309124();
              v54 = v52;
              v56 = v55;

              sub_23F3090F4();
              sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
              (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v54);
              result = sub_23F3090A8();
              v47 = v71;
              *v71 = v53;
              v47[1] = v56;
              v48 = 1;
              goto LABEL_18;
            }

          }
          sub_23F3090F4();
          sub_23F3090B8(*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
          (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
        }
        result = sub_23F3090A8();
      }
      else
      {
        v46 = *(void (**)(char *, uint64_t))(v26 + 8);
        v46(v10, v29);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v61, v27);
        result = ((uint64_t (*)(char *, uint64_t))v46)(v8, v29);
      }
    }
    else
    {
      v45 = *(void (**)(char *, uint64_t))(v15 + 8);
      v45(v20, v22);
      result = ((uint64_t (*)(char *, uint64_t))v45)(v18, v22);
    }
  }
LABEL_17:
  v47 = v71;
  *v71 = 0;
  v47[1] = 0;
  v48 = -1;
LABEL_18:
  *((_BYTE *)v47 + 16) = v48;
  return result;
}

uint64_t sub_23F309068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E69DA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3090A8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 176) + 8))(*(_QWORD *)(v1 - 168), v0);
}

uint64_t sub_23F3090B8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3090C4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F3090D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 678458992;
  *(_QWORD *)(v0 - 88) = 0xE400000000000000;
  return sub_23F33B57C();
}

void sub_23F3090F4()
{
  uint64_t v0;

}

uint64_t sub_23F3090FC()
{
  return swift_bridgeObjectRelease();
}

id sub_23F309104(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_23F30910C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

uint64_t sub_23F30911C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F309124()
{
  return sub_23F33B51C();
}

uint64_t sub_23F30912C()
{
  return sub_23F33B57C();
}

uint64_t initializeBufferWithCopyOfBuffer for GroundingResult(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23F30917C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_23F30917C(id result, char a2)
{
  if (a2 == 1)
    return (id)swift_bridgeObjectRetain();
  if (!a2)
    return result;
  return result;
}

void destroy for GroundingResult(uint64_t a1)
{
  sub_23F2FD004(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for GroundingResult(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23F30917C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_23F2FD004(v5, v6);
  return a1;
}

uint64_t initializeWithTake for GroundingResult(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for GroundingResult(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_23F2FD004(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroundingResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroundingResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F3092CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23F3092E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroundingResult()
{
  return &type metadata for GroundingResult;
}

unint64_t static IntelligenceFlowContextDaemon.iOSSandboxProfileName.getter()
{
  return sub_23F30957C();
}

unint64_t static IntelligenceFlowContextDaemon.macOSSandboxProfileName.getter()
{
  return sub_23F30957C();
}

uint64_t static IntelligenceFlowContextDaemon.enableSIGTERMHandling.getter()
{
  return 1;
}

uint64_t static IntelligenceFlowContextDaemon.start()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v0 = sub_23F2EB3F8((uint64_t *)&unk_254346220);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F33B1B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s30IntelligenceFlowContextRuntime0abC6DaemonV6logger2os6LoggerVvgZ_0();
  v7 = sub_23F33B1A4();
  v8 = sub_23F33B708();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23F2E8000, v7, v8, "Starting intelligencecontextd", v9, 2u);
    MEMORY[0x242669658](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s30IntelligenceFlowContextRuntime0abC6DaemonV6logger2os6LoggerVvgZ_0();
  sub_23F2EBFCC((uint64_t)v2, 0, 1, v3);
  sub_23F33ACA0();
  sub_23F33ACAC();
  type metadata accessor for ContextXPCServiceServer();
  sub_23F309500(&qword_254346248, (uint64_t (*)(uint64_t))type metadata accessor for ContextXPCServiceServer, (uint64_t)&unk_23F33ED18);
  sub_23F309590();
  type metadata accessor for UIContextXPCServiceServer();
  sub_23F309500(&qword_254346270, (uint64_t (*)(uint64_t))type metadata accessor for UIContextXPCServiceServer, (uint64_t)&unk_23F33FCAC);
  sub_23F309590();
  sub_23F33B114();
  return sub_23F33B03C();
}

uint64_t sub_23F3094F8()
{
  return 1;
}

uint64_t sub_23F309500(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426695B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F309544()
{
  static IntelligenceFlowContextDaemon.iOSSandboxProfileName.getter();
  return 0xD00000000000002FLL;
}

ValueMetadata *type metadata accessor for IntelligenceFlowContextDaemon()
{
  return &type metadata for IntelligenceFlowContextDaemon;
}

unint64_t sub_23F30957C()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_23F309590()
{
  return sub_23F33AC4C();
}

void sub_23F30959C()
{
  sub_23F3099F8();
}

void sub_23F3095C0()
{
  sub_23F3099F8();
}

void sub_23F3095E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F30C980();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F30C884() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F30B824();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F30C964();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F338168(v0 + 32, v3);
  if (!v3)
  {
LABEL_11:
    sub_23F2FD7D0();
    *v1 = v2;
    sub_23F2EE710();
    return;
  }
  v8 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v8, v3);
  v9 = v8 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F3096A8()
{
  sub_23F3099F8();
}

uint64_t sub_23F3096CC(unint64_t a1)
{
  return sub_23F3096F0(a1, (unint64_t *)sub_23F338238, &qword_256E6AEA8, &qword_256E6AEA0, (uint64_t *)sub_23F30C2F8);
}

uint64_t sub_23F3096F0(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_23F33B918();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    sub_23F30C920();
    v13 = sub_23F33B918();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
    __break(1u);
    goto LABEL_24;
  }
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    sub_23F30C920();
    v12 = MEMORY[0x242668F14](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_16:
    result = sub_23F30C174(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(uint64_t, _QWORD, uint64_t))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_23F30C920();
    v17 = sub_23F33B918();
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_20;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_23F33B5DC();
  }
  __break(1u);
  return result;
}

void sub_23F3098F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F30C980();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F30C884() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F30BB2C();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F30C964();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F33856C(v0 + 32, v3);
  if (!v3)
  {
LABEL_11:
    sub_23F2FD7D0();
    *v1 = v2;
    sub_23F2EE710();
    return;
  }
  v8 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v8, v3);
  v9 = v8 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F3099B0()
{
  sub_23F3099F8();
}

void sub_23F3099D4()
{
  sub_23F3099F8();
}

void sub_23F3099F8()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(_QWORD);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  sub_23F305674();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *v1;
  v7 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v3;
  v9 = v2;
  if (!sub_23F30C884() || v7 + v5 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = sub_23F30B640();
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v5)
      goto LABEL_11;
    goto LABEL_13;
  }
  v10 = *(_QWORD *)(v6 + 16);
  v11 = (*(_QWORD *)(v6 + 24) >> 1) - v10;
  v9(0);
  if (v11 < v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F2FD8BC();
  v8(v0 + v13, v5, v6 + v13 + *(_QWORD *)(v12 + 72) * v10);
  if (!v5)
  {
LABEL_11:
    sub_23F2FD7D0();
    *v1 = v6;
    sub_23F2F37B0();
    return;
  }
  v14 = *(_QWORD *)(v6 + 16);
  v15 = __OFADD__(v14, v5);
  v16 = v14 + v5;
  if (!v15)
  {
    *(_QWORD *)(v6 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void KGEntityGrounding.__allocating_init(knosisServer:)(void *a1)
{
  swift_allocObject();
  KGEntityGrounding.init(knosisServer:)(a1);
  sub_23F2EB20C();
}

void KGEntityGrounding.init(knosisServer:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  sub_23F33B1B0();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F2EE798();
  v4 = sub_23F30C944();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2EE798();
  v8 = v7 - v6;
  *(_QWORD *)(v1 + 16) = a1;
  v9 = a1;
  sub_23F33AC1C();
  sub_23F33B144();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime17KGEntityGrounding_signposter, v8, v4);
  sub_23F2EE710();
}

void sub_23F309BD8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  uint8_t *v38;
  os_signpost_id_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  char v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _QWORD *v76;
  uint8_t *v77;
  os_signpost_id_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char v98;
  uint64_t v99[2];
  unsigned __int8 v100;

  sub_23F305674();
  LOBYTE(v2) = v1;
  v93 = v3;
  v4 = sub_23F33B168();
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F30C724();
  v87 = v6;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F30C890();
  v81 = v8;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F30C890();
  v80 = v10;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v11);
  v82 = (uint64_t)&v79 - v12;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F2EE748();
  v85 = v14;
  v15 = sub_23F33A9E8();
  v94 = *(_QWORD *)(v15 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F30C724();
  v95 = v17;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v79 - v19;
  v96 = sub_23F33B138();
  v21 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  sub_23F30C724();
  v91 = v22;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F30C890();
  v84 = v24;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F30C890();
  v83 = v26;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F30C890();
  v86 = v28;
  sub_23F30C738();
  v30 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v79 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v79 - v33;
  v88 = v0;
  v35 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime17KGEntityGrounding_signposter;
  sub_23F33B150();
  sub_23F33B120();
  v92 = v35;
  v36 = sub_23F33B150();
  v37 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v38 = (uint8_t *)sub_23F2FD508();
    *(_WORD *)v38 = 0;
    v39 = sub_23F33B12C();
    _os_signpost_emit_with_name_impl(&dword_23F2E8000, v36, v37, v39, "KGEntityGrounding.performGrounding", "", v38, 2u);
    sub_23F2F3748();
  }

  v40 = v96;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v32, v34, v96);
  sub_23F33B18C();
  swift_allocObject();
  sub_23F33B180();
  v41 = *(void (**)(char *, uint64_t))(v21 + 8);
  v41(v34, v40);
  sub_23F33AB08();
  v42 = v94;
  v43 = v95;
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v95, v20, v15);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 88))(v43, v15);
  v45 = *(_QWORD *)(v42 + 8);
  if (v44 != *MEMORY[0x24BE57260]
    && v44 != *MEMORY[0x24BE57300]
    && v44 != *MEMORY[0x24BE572F0]
    && v44 != *MEMORY[0x24BE57268])
  {
    sub_23F30C934(v43);
    sub_23F30C934((uint64_t)v20);
    v71 = v92;
    *v93 = 0;
    v72 = sub_23F30C958();
    v73 = v91;
    sub_23F30C7A0();
    sub_23F33B75C();
    v74 = sub_23F30C794();
    if ((v74 & 1) != 0)
    {
      sub_23F30C89C();
      v69 = v87;
      goto LABEL_31;
    }
    goto LABEL_34;
  }
  sub_23F30C934((uint64_t)v20);
  sub_23F308AC8(v99);
  v55 = v100;
  if (v100 == 255)
  {
    v71 = v92;
    *v93 = 1;
    v72 = sub_23F30C958();
    v73 = v84;
    sub_23F30C7A0();
    sub_23F33B75C();
    if ((sub_23F30C794() & 1) != 0)
    {
      sub_23F30C89C();
      v69 = v81;
      goto LABEL_31;
    }
LABEL_34:

    v41((char *)v73, v40);
    sub_23F3056EC();
    sub_23F2F37B0();
    return;
  }
  v56 = v99[0];
  v2 = v99[1];
  sub_23F30A230((uint64_t)&v97, (uint64_t)v99, v49, v50, v51, v52, v53, v54, v79, v80, v81, v82, v83, v84, (uint64_t)v85, v86, v87, v88, v89,
    v90);
  v45 = v57;
  sub_23F30C440(v56, v2, v55);
  v58 = v97;
  v59 = v98;
  if (!(v45 >> 62))
  {
    if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_17;
LABEL_29:
    sub_23F2FD7D0();
    sub_23F2FD004(v58, v59);
    v71 = v92;
    v76 = v93;
    *v93 = 2;
    *((_BYTE *)v76 + 8) = 2;
    v72 = sub_23F33B150();
    v73 = v83;
    sub_23F30C7A0();
    sub_23F33B75C();
    if ((sub_23F30C794() & 1) != 0)
    {
      sub_23F30C89C();
      v69 = v80;
LABEL_31:
      sub_23F33B198();
      sub_23F3056EC();
      if (sub_23F30C870() == *MEMORY[0x24BEE7810])
        goto LABEL_32;
      goto LABEL_22;
    }
    goto LABEL_34;
  }
  sub_23F2FF49C();
  v75 = sub_23F33B918();
  sub_23F2FD7D0();
  if (!v75)
    goto LABEL_29;
LABEL_17:
  if ((v45 & 0xC000000000000001) != 0)
  {
    v60 = (id)MEMORY[0x242668F08](0, v45);
    goto LABEL_20;
  }
  if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v60 = *(id *)(v45 + 32);
LABEL_20:
    v61 = v60;
    sub_23F2FD7D0();
    v62 = sub_23F33B408();
    v2 = swift_allocBox();
    v64 = v63;
    v65 = v61;
    sub_23F33B3D8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v64, *MEMORY[0x24BEB9950], v62);
    v66 = v85;
    *v85 = v2;
    v45 = *MEMORY[0x24BEB9A00];
    v67 = sub_23F33B420();
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v66, v45, v67);
    sub_23F2EBFCC((uint64_t)v66, 0, 1, v67);
    sub_23F33AAFC();

    v71 = v92;
    v68 = v93;
    *v93 = v58;
    *((_BYTE *)v68 + 8) = v59;
    v72 = sub_23F33B150();
    v73 = v86;
    sub_23F30C7A0();
    sub_23F33B75C();
    if ((sub_23F30C794() & 1) != 0)
    {
      sub_23F30C89C();
      v69 = v82;
      sub_23F33B198();
      sub_23F3056EC();
      if (sub_23F30C870() == *MEMORY[0x24BEE7810])
      {
LABEL_32:
        v70 = "[Error] Interval already ended";
LABEL_33:
        v77 = (uint8_t *)sub_23F2FD508();
        *(_WORD *)v77 = 0;
        v78 = sub_23F33B12C();
        _os_signpost_emit_with_name_impl(&dword_23F2E8000, v72, (os_signpost_type_t)v2, v78, "KGEntityGrounding.performGrounding", v70, v77, 2u);
        sub_23F2F3748();
      }
LABEL_22:
      (*(void (**)(uint64_t, unint64_t))(v71 + 8))(v69, v45);
      v70 = "";
      goto LABEL_33;
    }
    v40 = v96;
    goto LABEL_34;
  }
  __break(1u);
}

void sub_23F30A230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t AssociatedConformanceWitness;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  char *v97;
  uint64_t v98;
  int **v99;
  uint64_t v100;
  void (*v101)(uint64_t, int **, uint64_t);
  int **v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  int **v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int **v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;

  sub_23F305674();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v142 = v25;
  v26 = sub_23F33A7B4();
  sub_23F30C8A4(v26, (uint64_t)&a9);
  v127 = v27;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F2EE748();
  v126 = v29;
  v145 = sub_23F33A7FC();
  v130 = *(_QWORD *)(v145 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F30C724();
  v125 = v31;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v32);
  v131 = (char *)&v118 - v33;
  sub_23F2EB3F8(&qword_256E6AD78);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F2EE798();
  v37 = v36 - v35;
  v38 = sub_23F2EB3F8(&qword_256E6AD80);
  sub_23F30C8A4(v38, (uint64_t)&a13);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F30C724();
  v146 = (int **)v40;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v41);
  v147 = (uint64_t)&v118 - v42;
  v43 = sub_23F2EB3F8(&qword_256E6AD88);
  sub_23F30C8A4(v43, (uint64_t)&a10);
  v148 = v44;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F2EE748();
  v151 = v46;
  sub_23F2EB3F8(&qword_256E6AD90);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F30C724();
  v135 = v48;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v118 - v50;
  v52 = sub_23F2EB3F8(&qword_256E6AD98);
  sub_23F30C8A4(v52, (uint64_t)&a15);
  v136 = v53;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F2EE748();
  v133 = v55;
  v56 = sub_23F2EB3F8(&qword_256E6ADA0);
  sub_23F30C8A4(v56, (uint64_t)&a18);
  v143 = v57;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F30C724();
  v150 = v59;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)&v118 - v61;
  v144 = sub_23F2EB3F8(&dword_256E6ADA8);
  v141 = *(_QWORD *)(v144 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F2EE798();
  v66 = v65 - v64;
  v67 = sub_23F33A7CC();
  v68 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  sub_23F30C758();
  v69 = sub_23F33A760();
  v139 = *(_QWORD *)(v69 - 8);
  v140 = v69;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F2EE798();
  v73 = v72 - v71;
  v74 = *(_QWORD *)(v24 + 8);
  v75 = *(unsigned __int8 *)(v24 + 16);
  v124 = *(_QWORD *)v24;
  v152 = v124;
  v153 = v74;
  v123 = v74;
  v122 = v75;
  LOBYTE(v154) = v75;
  sub_23F30894C();
  sub_23F33A7C0();
  sub_23F33A76C();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v20, v67);
  sub_23F33A754();
  v157 = MEMORY[0x24BEE4AF8];
  sub_23F30C6D0(&qword_256E6ADB0, &dword_256E6ADA8, MEMORY[0x24BE583A0]);
  v77 = v76;
  v78 = sub_23F30C454();
  sub_23F30C6D0(&qword_256E6ADC0, &qword_256E6ADC8, MEMORY[0x24BE584C8]);
  v80 = v79;
  v138 = v62;
  v81 = v144;
  sub_23F33A820();
  v119 = v73;
  v120 = v66;
  v82 = v137;
  (*(void (**)(uint64_t, char *, uint64_t))(v143 + 16))(v150, v138, v137);
  v152 = v81;
  v153 = v145;
  v154 = v77;
  v155 = v78;
  v156 = v80;
  swift_getOpaqueTypeConformance2();
  v83 = v133;
  sub_23F33B5AC();
  v84 = v134;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v86 = v135;
  v87 = v83;
  v150 = AssociatedConformanceWitness;
  sub_23F33B7B0();
  sub_23F2F6AB4(v86, (uint64_t)v51, &qword_256E6AD90);
  v88 = sub_23F2EB3F8(&qword_256E6ADD0);
  sub_23F30C770(v88);
  v89 = v82;
  v90 = v143;
  if (!v91)
  {
    v92 = v148;
    v149 = *(void (**)(uint64_t, char *, uint64_t))(v148 + 32);
    v121 = MEMORY[0x24BEE4AF8];
    v93 = v129;
    while (1)
    {
      v94 = v132;
      while (1)
      {
        v95 = v86;
        v96 = v83;
        v97 = &v51[v87[12]];
        v149(v151, v51, v93);
        v98 = (uint64_t)v97;
        v87 = (int *)&qword_256E6AD78;
        sub_23F2F6AB4(v98, v37, &qword_256E6AD78);
        if (sub_23F2EBFC0(v37, 1, v94) != 1)
          break;
        sub_23F30C928(*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8));
        sub_23F2FD434(v37, &qword_256E6AD78);
LABEL_9:
        v86 = v95;
        sub_23F30C8F0();
        sub_23F2F6AB4(v95, (uint64_t)v51, &qword_256E6AD90);
        v100 = sub_23F2EB3F8(&qword_256E6ADD0);
        sub_23F30C770(v100);
        if (v91)
        {
          v89 = v137;
          v90 = v143;
          goto LABEL_20;
        }
      }
      v92 = v147;
      sub_23F2F6AB4(v37, v147, &qword_256E6AD80);
      v99 = v146;
      sub_23F30C494(v92, (uint64_t)v146);
      if (swift_getEnumCaseMultiPayload() == 1)
        break;
      v101 = *(void (**)(uint64_t, int **, uint64_t))(v130 + 32);
      v102 = v125;
      v103 = v145;
      v101((uint64_t)v125, v99, v145);
      v101((uint64_t)v131, v102, v103);
      v152 = v124;
      v153 = v123;
      LOBYTE(v154) = v122;
      CustomGraphPerson.toINPerson(using:)();
      MEMORY[0x242668C80]();
      v83 = v96;
      if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23F33B5E8();
      sub_23F33B60C();
      sub_23F33B5DC();
      v104 = v126;
      sub_23F33A808();
      v135 = sub_23F33A79C();
      v106 = v105;
      v152 = sub_23F33A7A8();
      v134 = sub_23F33B96C();
      v152 = v135;
      v153 = v106;
      swift_bridgeObjectRetain();
      sub_23F33B57C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v153;
      v135 = v152;
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v104, v128);
      v86 = v95;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F30BA68();
        v121 = v111;
      }
      v90 = v143;
      v107 = *(_QWORD *)(v121 + 16);
      v87 = (int *)(v107 + 1);
      if (v107 >= *(_QWORD *)(v121 + 24) >> 1)
      {
        sub_23F30BA68();
        v121 = v112;
      }
      v108 = v121;
      *(_QWORD *)(v121 + 16) = v87;
      v109 = v108 + 16 * v107;
      *(_QWORD *)(v109 + 32) = v135;
      *(_QWORD *)(v109 + 40) = v92;
      (*(void (**)(void))(v130 + 8))();
      sub_23F2FD434(v147, &qword_256E6AD80);
      sub_23F30C85C();
      sub_23F30C8F0();
      sub_23F2F6AB4(v86, (uint64_t)v51, &qword_256E6AD90);
      v110 = sub_23F2EB3F8(&qword_256E6ADD0);
      sub_23F30C770(v110);
      v89 = v137;
      if (v91)
        goto LABEL_20;
    }
    v87 = *v99;
    v152 = (uint64_t)v87;
    sub_23F2EB3F8(&qword_256E6A510);
    swift_willThrowTypedImpl();

    sub_23F2FD434(v92, &qword_256E6AD80);
    sub_23F30C85C();
    goto LABEL_9;
  }
  v121 = MEMORY[0x24BEE4AF8];
LABEL_20:
  (*(void (**)(int *, uint64_t))(v136 + 8))(v83, v84);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v138, v89);
  if (v157 >> 62)
  {
    sub_23F30C81C();
    v113 = sub_23F33B918();
    sub_23F2EB230();
  }
  else
  {
    v113 = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v114 = v140;
  v115 = v139;
  v116 = v119;
  (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v120, v144);
  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v116, v114);
  v117 = v142;
  if (v113)
  {
    *v142 = v121;
    *((_BYTE *)v117 + 8) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    *v117 = 2;
    *((_BYTE *)v117 + 8) = 2;
  }
  sub_23F2F37B0();
}

void CustomGraphPerson.toINPerson(using:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  Swift::String_optional v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F305674();
  v2 = v1;
  v3 = sub_23F33A814();
  v36 = *(_QWORD *)(v3 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F30C758();
  sub_23F2EB3F8(&qword_256E69F00);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2EE748();
  v31 = v6;
  v34 = sub_23F33A7B4();
  v7 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F2EE798();
  v10 = v9 - v8;
  v11 = sub_23F2EB3F8(&qword_256E6AD88);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F2EE798();
  v15 = v14 - v13;
  v16 = *(unsigned __int8 *)(v2 + 16);
  v32 = *(Swift::String_optional *)v2;
  CustomGraphPerson.getPrimaryINPersonHandle(using:)();
  v30 = v17;
  if (v16 > 1)
  {
    v18 = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = v3;
    v32 = CustomGraphPerson.getFullName()();
  }
  MEMORY[0x242667EAC]();
  sub_23F33A808();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  v19 = sub_23F33A79C();
  v21 = v20;
  sub_23F33A7A8();
  sub_23F33B96C();
  v38 = v21;
  sub_23F30C93C();
  sub_23F33B57C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v19;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v34);
  v23 = sub_23F33A7D8();
  v37 = MEMORY[0x24BEE4AF8];
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v25 = v23 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v36 + 16);
    v35 = *(_QWORD *)(v36 + 72);
    do
    {
      v33(v0, v25, v18);
      v26 = sub_23F30B300(MEMORY[0x24BE583F0], 1);
      v27 = sub_23F30B300(MEMORY[0x24BE583E8], 2);
      sub_23F30C7F4(v27);
      sub_23F30C8D0(v36);
      sub_23F30C7F4(v26);
      v25 += v35;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    v28 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
  }
  v29 = sub_23F33A430();
  sub_23F2EBFCC(v31, 1, 1, v29);
  objc_allocWithZone(MEMORY[0x24BDD9F30]);
  sub_23F30B468(v30, v31, v32.value._countAndFlagsBits, (uint64_t)v32.value._object, 0, 0, 0, v22, v38, v28, 0);
  sub_23F2F37B0();
}

Swift::String __swiftcall EntityIdentifier.getmdID()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v0 = sub_23F33A79C();
  v2 = v1;
  sub_23F33A7A8();
  sub_23F33B96C();
  swift_bridgeObjectRetain();
  sub_23F33B57C();
  sub_23F30C978();
  swift_bridgeObjectRelease();
  v3 = v0;
  v4 = v2;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

void KGEntityGrounding.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F30C944();
  sub_23F2FD514(v1);
  sub_23F2EB20C();
}

uint64_t KGEntityGrounding.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F30C944();
  sub_23F2FD514(v1);
  return swift_deallocClassInstance();
}

void CustomGraphPerson.getPrimaryINPersonHandle(using:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;

  sub_23F305674();
  v2 = v1;
  v3 = sub_23F33A814();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F30C758();
  v5 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  if (!*(_BYTE *)(v2 + 16))
  {
    objc_allocWithZone(MEMORY[0x24BDD9F38]);
    sub_23F30C93C();
    v7 = v5;
    v8 = v6;
    v9 = 1;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    objc_allocWithZone(MEMORY[0x24BDD9F38]);
    sub_23F30C93C();
    v7 = v5;
    v8 = v6;
    v9 = 2;
LABEL_5:
    sub_23F30B408(v7, v8, v9);
LABEL_17:
    sub_23F2F37B0();
    return;
  }
  v10 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
  sub_23F30B408(0, 0, 0);
  v12 = v11;
  v13 = sub_23F33A7D8();
  v23 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    v22 = *(_QWORD *)(v4 + 72);
    v20 = v4;
    do
    {
      v21(v0, v15, v3);
      v16 = sub_23F30B300(MEMORY[0x24BE583F0], 1);
      v17 = sub_23F30B300(MEMORY[0x24BE583E8], 2);
      sub_23F30C7D4(v17);
      sub_23F30C8D0(v20);
      sub_23F30C7D4(v16);
      v15 += v22;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v18 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_13;
LABEL_16:
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  sub_23F30C81C();
  if (!sub_23F33B918())
    goto LABEL_16;
LABEL_13:
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    sub_23F2EB230();
    *(id *)(v18 + 32);

    sub_23F2EB230();
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t CustomGraphPerson.getName(using:)(uint64_t *a1)
{
  uint64_t v1;

  if (!*((_BYTE *)a1 + 16) || *((_BYTE *)a1 + 16) == 1)
    return CustomGraphPerson.getFullName()().value._countAndFlagsBits;
  v1 = *a1;
  sub_23F2FF49C();
  return v1;
}

Swift::String_optional __swiftcall CustomGraphPerson.getFullName()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  if (*(_QWORD *)(MEMORY[0x242667EB8]() + 16))
    swift_bridgeObjectRetain();
  sub_23F2FD7D0();
  sub_23F2EBFB0();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_23F30B300(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4AF8];
  v3 = a1();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v3 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      objc_allocWithZone(MEMORY[0x24BDD9F38]);
      swift_bridgeObjectRetain();
      sub_23F30B408(v6, v7, a2);
      MEMORY[0x242668C80]();
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23F33B5E8();
      v5 += 2;
      sub_23F33B60C();
      sub_23F33B5DC();
      --v4;
    }
    while (v4);
    sub_23F30C978();
    return v9;
  }
  else
  {
    sub_23F30C978();
    return MEMORY[0x24BEE4AF8];
  }
}

void sub_23F30B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;

  if (a2)
  {
    v5 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel_initWithValue_type_, v5, a3);

  sub_23F2EBFB0();
}

id sub_23F30B468(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v24;

  v16 = sub_23F33A430();
  v17 = 0;
  if (sub_23F2EBFC0(a2, 1, v16) != 1)
  {
    v17 = (void *)sub_23F33A418();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
  if (a4)
  {
    v18 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (a7)
  {
    v19 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  if (a9)
  {
    v20 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  if (a10)
  {
    sub_23F30C694();
    v21 = (void *)sub_23F33B5C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  v22 = objc_msgSend(v24, sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_aliases_suggestionType_, a1, v17, v18, a5, v19, v20, v21, a11);

  return v22;
}

uint64_t sub_23F30B608()
{
  return sub_23F30B640();
}

uint64_t sub_23F30B624()
{
  return sub_23F30B640();
}

uint64_t sub_23F30B640()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  void (*v2)(uint64_t, uint64_t, char *);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD);
  uint64_t result;

  sub_23F30C744();
  if ((v6 & 1) != 0)
  {
    sub_23F2F3870();
    if (v10 != v11)
    {
      sub_23F30C900();
      if (v10)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_23F2F38D0();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (char *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  sub_23F2F3978(v4, v5, v6, v7, v8);
  v14 = *(_QWORD *)(v1(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (char *)swift_allocObject();
  v18 = j__malloc_size(v17);
  if (!v15 || (v18 - v16 == 0x8000000000000000 ? (v19 = v15 == -1) : (v19 = 0), v19))
  {
LABEL_23:
    sub_23F30C710();
    result = sub_23F33B900();
    __break(1u);
    return result;
  }
  sub_23F30C94C((uint64_t)(v18 - v16) / v15);
LABEL_18:
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v1(0) - 8) + 80);
  v21 = (v20 + 32) & ~v20;
  if ((v3 & 1) != 0)
  {
    v2(v0 + v21, v12, &v17[v21]);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F2FD7D0();
  }
  else
  {
    v22 = sub_23F30C7AC();
    sub_23F30C06C(v22, v23, v24, v25, v26);
  }
  return (uint64_t)v17;
}

void sub_23F30B7D0()
{
  sub_23F30B824();
}

uint64_t sub_23F30B7EC()
{
  return sub_23F30B640();
}

void sub_23F30B808()
{
  sub_23F30B824();
}

void sub_23F30B824()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  sub_23F30C744();
  if ((v3 & 1) != 0)
  {
    sub_23F2F3870();
    if (v4 != v5)
    {
      sub_23F30C900();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  sub_23F30C8E0();
  if (v2)
  {
    sub_23F2F3978(v6, v7, v8, v9, v10);
    v11 = (const void *)swift_allocObject();
    v12 = j__malloc_size(v11);
    sub_23F30C94C((uint64_t)(v12 - 32) / 40);
  }
  if ((v1 & 1) != 0)
  {
    sub_23F30C850();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F2FD7D0();
  }
  else
  {
    v13 = sub_23F30C7AC();
    sub_23F30BD10(v13, v14, v15, v16, v17);
  }
}

void sub_23F30B8E0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    sub_23F2F3870();
    if (v7 != v8)
    {
      sub_23F30C900();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_23F2EB3F8((uint64_t *)&unk_2543463F0);
    v11 = (char *)sub_23F30C7E8();
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 2);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    sub_23F2F2884((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    sub_23F2FD7D0();
  }
  else
  {
    sub_23F30BC20(0, v9, v13, a4);
  }
  sub_23F2EBFB0();
}

void sub_23F30B9A4()
{
  sub_23F30B824();
}

uint64_t sub_23F30B9C0()
{
  return sub_23F30B640();
}

uint64_t sub_23F30B9DC()
{
  return sub_23F30B640();
}

void sub_23F30B9F8()
{
  sub_23F30BB2C();
}

uint64_t sub_23F30BA14()
{
  return sub_23F30B640();
}

void sub_23F30BA30()
{
  sub_23F30BA68();
}

void sub_23F30BA4C()
{
  sub_23F30BA68();
}

void sub_23F30BA68()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, char *, uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  size_t v14;

  sub_23F30C744();
  if ((v5 & 1) != 0)
  {
    sub_23F2F3870();
    if (v6 != v7)
    {
      sub_23F30C900();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  sub_23F30C8E0();
  if (v4)
  {
    sub_23F2F3978(v8, v9, v10, v11, v12);
    v13 = (char *)sub_23F30C7E8();
    v14 = j__malloc_size(v13);
    sub_23F30C94C((uint64_t)(v14 - 32) / 16);
  }
  else
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
  }
  if ((v2 & 1) != 0)
  {
    sub_23F30C850();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F2FD7D0();
  }
  else
  {
    v1(0, v3, v13 + 32, v0);
  }
  sub_23F2EE710();
}

void sub_23F30BB10()
{
  sub_23F30BB2C();
}

void sub_23F30BB2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  sub_23F30C744();
  if ((v3 & 1) != 0)
  {
    sub_23F2F3870();
    if (v4 != v5)
    {
      sub_23F30C900();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F2F38D0();
    }
  }
  sub_23F30C8E0();
  if (v2)
  {
    sub_23F2F3978(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F30C7E8();
    v12 = j__malloc_size(v11);
    sub_23F30C94C((uint64_t)(v12 - 32) / 8);
  }
  if ((v1 & 1) != 0)
  {
    sub_23F30C850();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F2FD7D0();
  }
  else
  {
    v13 = sub_23F30C7AC();
    sub_23F30BFB4(v13, v14, v15, v16, v17);
  }
  sub_23F2EE710();
}

void sub_23F30BBCC()
{
  sub_23F30BB2C();
}

uint64_t sub_23F30BBE8()
{
  return sub_23F30B640();
}

uint64_t sub_23F30BC04()
{
  return sub_23F30B640();
}

char *sub_23F30BC20(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F33B93C();
  __break(1u);
  return result;
}

void sub_23F30BD10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_23F30C710();
    sub_23F30C8B0();
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  if (v6 >= a3 + 40 * v5 || v6 + 40 * v5 <= a3)
  {
    sub_23F2F3978(a1, a2, a3, a4, a5);
    sub_23F30C83C();
    sub_23F2FD7D0();
    sub_23F30C808();
    return;
  }
  sub_23F30C710();
  sub_23F30C8C0();
LABEL_11:
  sub_23F30C830();
  __break(1u);
}

uint64_t sub_23F30BDD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F33B93C();
  __break(1u);
  return result;
}

char *sub_23F30BEC4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F33B93C();
  __break(1u);
  return result;
}

void sub_23F30BFB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_23F30C710();
    sub_23F30C8B0();
    goto LABEL_11;
  }
  v6 = a4 + 8 * a1 + 32;
  if (v6 >= a3 + 8 * v5 || v6 + 8 * v5 <= a3)
  {
    sub_23F2F3978(a1, a2, a3, a4, a5);
    sub_23F30C83C();
    sub_23F2FD7D0();
    sub_23F30C808();
    return;
  }
  sub_23F30C710();
  sub_23F30C8C0();
LABEL_11:
  sub_23F30C830();
  __break(1u);
}

uint64_t sub_23F30C06C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_23F30C710();
    sub_23F30C8B0();
    goto LABEL_11;
  }
  a5(0);
  sub_23F2FD8BC();
  v11 = *(_QWORD *)(v10 + 72);
  v12 = a4 + v9 + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy();
    sub_23F2FD7D0();
    return v14;
  }
  sub_23F30C710();
  sub_23F30C8C0();
LABEL_11:
  result = sub_23F30C830();
  __break(1u);
  return result;
}

unint64_t sub_23F30C150(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23F30C174(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  id *v22;
  id v23;
  _BYTE v24[32];

  v13 = result;
  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_23F2FF49C();
    v15 = sub_23F33B918();
    result = sub_23F2FD7D0();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      sub_23F2FF49C();
      v16 = sub_23F33B918();
      result = sub_23F2FD7D0();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          sub_23F30C6D0(a5, a6, MEMORY[0x24BEE12E0]);
          v18 = v17;
          sub_23F2FF49C();
          for (i = 0; i != v15; ++i)
          {
            v20 = sub_23F2EB3F8(a6);
            v21 = (void (*)(_BYTE *, _QWORD))a7(v24, i, a3, v20, v18);
            v23 = *v22;
            v21(v24, 0);
            *(_QWORD *)(v13 + 8 * i) = v23;
          }
          sub_23F2FD7D0();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23F30C2F8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F30C7C0();
  v2 = (_QWORD *)sub_23F30C90C((uint64_t)v1);
  sub_23F30C3DC(v2, v3, v4);
  *(_QWORD *)(v0 + 32) = v5;
  sub_23F2EBFB0();
}

void sub_23F30C32C()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)();
  unint64_t v3;
  uint64_t v4;

  v1 = sub_23F30C7C0();
  v2 = (uint64_t (*)())sub_23F30C90C((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_23F30C4DC(v2, v3, v4);
  sub_23F2EBFB0();
}

uint64_t (*sub_23F30C35C(_QWORD *a1, unint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23F30C538(v6, a2, a3);
  return sub_23F30C328;
}

void sub_23F30C3B0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_23F30C3DC(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F30C150(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x242668F08](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  sub_23F2EBFB0();
}

uint64_t sub_23F30C440(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_23F30879C(a1, a2, a3);
  return a1;
}

unint64_t sub_23F30C454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6ADB8;
  if (!qword_256E6ADB8)
  {
    v1 = sub_23F33A7FC();
    result = MEMORY[0x2426695B0](MEMORY[0x24BE58290], v1);
    atomic_store(result, (unint64_t *)&qword_256E6ADB8);
  }
  return result;
}

uint64_t sub_23F30C494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6AD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_23F30C4DC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    *(_QWORD *)result = *(_QWORD *)(a3 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    return sub_23F30C530;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F30C530()
{
  return swift_bridgeObjectRelease();
}

void (*sub_23F30C538(_QWORD *a1, unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F30C150(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x242668F08](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return destroy for LocationSourceContext;
}

void destroy for LocationSourceContext(id *a1)
{

}

uint64_t sub_23F30C5AC()
{
  return type metadata accessor for KGEntityGrounding();
}

uint64_t type metadata accessor for KGEntityGrounding()
{
  uint64_t result;

  result = qword_256E6AE00;
  if (!qword_256E6AE00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F30C5EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33B15C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for KGEntityGrounding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KGEntityGrounding.__allocating_init(knosisServer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of KGEntityGrounding.performGrounding(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of KGEntityGrounding.retrievePersons(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

unint64_t sub_23F30C694()
{
  unint64_t result;

  result = qword_256E6AF08;
  if (!qword_256E6AF08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E6AF08);
  }
  return result;
}

void sub_23F30C6D0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_23F2F244C(a2);
    atomic_store(MEMORY[0x2426695B0](a3, v5), a1);
  }
  sub_23F2EB20C();
}

uint64_t sub_23F30C770(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFC0(v1, 1, a1);
}

uint64_t sub_23F30C794()
{
  return sub_23F33B798();
}

uint64_t sub_23F30C7A0()
{
  return sub_23F33B174();
}

uint64_t sub_23F30C7AC()
{
  return 0;
}

void *sub_23F30C7C0()
{
  return malloc(0x28uLL);
}

uint64_t sub_23F30C7D4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  unint64_t *v4;

  return sub_23F3096F0(a1, v4, v1, v2, v3);
}

uint64_t sub_23F30C7E8()
{
  return swift_allocObject();
}

uint64_t sub_23F30C7F4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  unint64_t *v4;

  return sub_23F3096F0(a1, v4, v1, v2, v3);
}

uint64_t sub_23F30C81C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F30C830()
{
  return sub_23F33B93C();
}

uint64_t sub_23F30C83C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F30C850()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t sub_23F30C85C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 176) + 8))(*(_QWORD *)(v1 - 152), v0);
}

uint64_t sub_23F30C870()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 88))(v0, *(_QWORD *)(v1 - 184));
}

uint64_t sub_23F30C884()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F30C89C()
{
  return swift_retain();
}

uint64_t sub_23F30C8A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_23F30C8D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F30C8F0()
{
  return sub_23F33B7B0();
}

uint64_t sub_23F30C90C(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23F30C920()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F30C928@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F30C934(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F30C93C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F30C944()
{
  return sub_23F33B15C();
}

void sub_23F30C94C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_23F30C958()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 8) = 2;
  return sub_23F33B150();
}

uint64_t sub_23F30C978()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F30C994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F2EE49C(v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime16LocationProvider_contextDefinition, a1);
}

void sub_23F30C9A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49[4];

  v45 = sub_23F30D190();
  v2 = sub_23F33B1B0();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE798();
  v5 = v4 - v3;
  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE748();
  v43 = v7;
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v44 = sub_23F33AA84();
  v12 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  sub_23F2EE748();
  v42 = v13;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t *)((char *)&v41 - v18);
  v20 = sub_23F33B420();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F2EE798();
  v24 = v23 - v22;
  sub_23F30D148(a1, (uint64_t)v49);
  if (v49[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = v48;
      v26 = v48;
      sub_23F30CDC4(v25, v19);

      if (sub_23F2EBFC0((uint64_t)v19, 1, v20) == 1)
      {
        sub_23F2F0794((uint64_t)v19, &qword_256E69DA0);

      }
      else
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v21 + 32))(v24, v19, v20);
        v32 = sub_23F33ABD4();
        sub_23F2EE6B8(v11, v33, v34, v32);
        (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, v24, v20);
        sub_23F2EBFCC((uint64_t)v17, 0, 1, v20);
        v35 = sub_23F33AAC0();
        sub_23F2EE6B8(v43, v36, v37, v35);
        v38 = v42;
        sub_23F33AA54();
        sub_23F2EB3F8(&qword_256E69DD8);
        v39 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_23F33E710;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v40 + v39, v38, v44);

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v20);
      }
      goto LABEL_9;
    }
  }
  else
  {
    sub_23F2F0794((uint64_t)v49, &qword_256E6A290);
  }
  sub_23F33AC1C();
  v27 = sub_23F33B1A4();
  v28 = sub_23F33B6E4();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v49[0] = swift_slowAlloc();
    *(_DWORD *)v29 = 136315138;
    v30 = sub_23F30CD98();
    v48 = (id)sub_23F30DBFC(v30, v31, v49);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F2E8000, v27, v28, "unable to get source data for %s", v29, 0xCu);
    swift_arrayDestroy();
    sub_23F2F3748();
  }

  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v5, v47);
LABEL_9:
  sub_23F2F37B0();
}

uint64_t sub_23F30CD98()
{
  swift_getMetatypeMetadata();
  return sub_23F33B540();
}

uint64_t sub_23F30CDC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 && objc_msgSend(a1, sel_placemark))
  {
    v3 = sub_23F33B408();
    v4 = swift_allocBox();
    v6 = v5;
    sub_23F33B3FC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v6, *MEMORY[0x24BEB9968], v3);
    *a2 = v4;
    v7 = *MEMORY[0x24BEB9A00];
    v8 = sub_23F33B420();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, v7, v8);
    v9 = (uint64_t)a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F33B420();
    v9 = (uint64_t)a2;
    v10 = 1;
  }
  return sub_23F2EBFCC(v9, v10, 1, v11);
}

void sub_23F30CEB4()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_super v13;

  v1 = (objc_class *)sub_23F30D190();
  v2 = sub_23F33A9E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE798();
  v6 = v5 - v4;
  v7 = &v0[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime16LocationProvider_contextDefinition];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v5 - v4, *MEMORY[0x24BE57270], v2);
  v8 = type metadata accessor for ContextDefinition();
  v9 = (uint64_t)&v7[*(int *)(v8 + 24)];
  v10 = *MEMORY[0x24BE571B0];
  v11 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  sub_23F2EBFCC(v9, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v7, v6, v2);
  v12 = &v7[*(int *)(v8 + 20)];
  *(_QWORD *)v12 = 0xD00000000000002FLL;
  *((_QWORD *)v12 + 1) = 0x800000023F33D8B0;
  v13.receiver = v0;
  v13.super_class = v1;
  objc_msgSendSuper2(&v13, sel_init);
  sub_23F2F37B0();
}

id sub_23F30D004()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_23F30D190();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23F30D044()
{
  return type metadata accessor for LocationProvider();
}

uint64_t type metadata accessor for LocationProvider()
{
  uint64_t result;

  result = qword_256E6AF50;
  if (!qword_256E6AF50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F30D084()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContextDefinition();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F30D0F0@<X0>(uint64_t a1@<X8>)
{
  return sub_23F30C994(a1);
}

uint64_t sub_23F30D110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F30C9A8(a1);
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v2);
}

uint64_t sub_23F30D148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F30D190()
{
  return swift_getObjectType();
}

uint64_t sub_23F30D198()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NLEmbeddingModelClient()
{
  return objc_opt_self();
}

uint64_t NLTaggerBasedEntityDetector.supportedEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NLTaggerBasedEntityDetector.supportedEntities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*NLTaggerBasedEntityDetector.supportedEntities.modify())()
{
  return nullsub_1;
}

void NLTaggerBasedEntityDetector.init(entityTypes:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;

  sub_23F33B1B0();
  sub_23F2EB3F8(&qword_2543463C0);
  v4 = sub_23F30F0F4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23F33E720;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x24BE54358], v4);
  v10(v9 + v6, *MEMORY[0x24BE54370], v4);
  v11 = sub_23F2EBA7C(v8);
  swift_bridgeObjectRetain();
  sub_23F30D37C();
  sub_23F2EB438();
  sub_23F2EB474();
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = v13;
  v15 = sub_23F30E2E4(a1, v11);
  swift_bridgeObjectRelease();
  v16 = v14;
  swift_bridgeObjectRetain();

  *a2 = v16;
  a2[1] = v15;
  a2[2] = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void sub_23F30D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  id v25;
  id v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  id v30;
  uint64_t v31;

  sub_23F30F0F4();
  sub_23F30F100();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - v7;
  v31 = MEMORY[0x24BEE4B08];
  v9 = *(_QWORD *)(v0 + 56);
  v27 = v0 + 56;
  v10 = 1 << *(_BYTE *)(v0 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v28 = (unint64_t)(v10 + 63) >> 6;
  v13 = *MEMORY[0x24BE54378];
  v14 = *MEMORY[0x24BE54370];
  v15 = *MEMORY[0x24BE54358];
  v26 = (id)*MEMORY[0x24BDDFD08];
  swift_bridgeObjectRetain();
  v16 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_20;
    }
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v28)
      goto LABEL_29;
    v20 = *(_QWORD *)(v27 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v28)
        goto LABEL_29;
      v20 = *(_QWORD *)(v27 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v28)
          goto LABEL_29;
        v20 = *(_QWORD *)(v27 + 8 * v16);
        if (!v20)
          break;
      }
    }
LABEL_19:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_20:
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v8, *(_QWORD *)(v0 + 48) + *(_QWORD *)(v2 + 72) * v18, v1);
    sub_23F30F0D8((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v22 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v6, v1);
    if (v22 == v13 || v22 == v14 || v22 == v15)
    {
      v25 = v26;
      v29 = v16;
      sub_23F32F6B4(&v30, v25);
      v16 = v29;

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
    }
  }
  v21 = v19 + 3;
  if (v21 >= v28)
  {
LABEL_29:
    swift_release();
    sub_23F332864(v31);
    swift_bridgeObjectRelease();
    return;
  }
  v20 = *(_QWORD *)(v27 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v28)
      goto LABEL_29;
    v20 = *(_QWORD *)(v27 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_19;
  }
LABEL_31:
  __break(1u);
}

uint64_t NLTaggerBasedEntityDetector.detectEntities(text:)(uint64_t a1, uint64_t a2)
{
  void **v2;
  uint64_t v4;

  v4 = MEMORY[0x24BEE4AF8];
  sub_23F2EBE84(a1, a2, *v2);
  sub_23F33B774();
  return v4;
}

uint64_t sub_23F30D720(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char v27;
  void *v29;

  sub_23F33AD30();
  sub_23F30F100();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE798();
  v8 = sub_23F2EB3F8(&qword_256E6B008);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v12 = sub_23F33AF70();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F2EE798();
  v16 = v15 - v14;
  if (a1)
  {
    v17 = a1;
    sub_23F30D9EC(v11);
    if (sub_23F2EBFC0(v11, 1, v12) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v11, v12);
      sub_23F3199BC();
      if ((v18 & 1) == 0)
      {
        sub_23F30F0AC();

        return 1;
      }
      v29 = v17;
      sub_23F33B51C();
      if (v17 == (id)sub_23F30F09C() && a5 == v19)
      {
        sub_23F30F0BC();
      }
      else
      {
        v21 = sub_23F30F060();
        sub_23F2EB230();
        sub_23F30F0EC();
        if ((v21 & 1) == 0)
        {
          sub_23F33B51C();
          if (v21 == sub_23F30F09C() && a5 == v22)
          {
            sub_23F30F0BC();
          }
          else
          {
            v24 = sub_23F30F060();
            sub_23F2EB230();
            sub_23F30F0EC();
            if ((v24 & 1) == 0)
            {
              sub_23F33B51C();
              if (v24 == sub_23F30F09C() && a5 == v25)
              {
                sub_23F30F0BC();
              }
              else
              {
                v27 = sub_23F30F060();
                sub_23F2EB230();
                sub_23F30F0EC();
                if ((v27 & 1) == 0)
                {
                  sub_23F30F0AC();

                  return 1;
                }
              }
              sub_23F30F08C();
              sub_23F30F0E4();
            }
          }
          sub_23F30F08C();
          sub_23F30F0E4();
        }
      }
      sub_23F30F08C();
      sub_23F30F0E4();
    }

    sub_23F30EFE4(v11);
  }
  return 1;
}

void sub_23F30D9D4()
{
  sub_23F30F07C();
  sub_23F30F0C8();
  sub_23F33AD18();
  JUMPOUT(0x23F30D91CLL);
}

uint64_t sub_23F30D9EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_23F33B51C();
  v4 = v3;
  if (v2 == sub_23F33B51C() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v7 = sub_23F33B978();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_18:
    v23 = (unsigned int *)MEMORY[0x24BE54378];
LABEL_19:
    v24 = *v23;
    v25 = sub_23F33AF70();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(a1, v24, v25);
    v21 = a1;
    v22 = 0;
    v20 = v25;
    return sub_23F2EBFCC(v21, v22, 1, v20);
  }
  v8 = sub_23F33B51C();
  v10 = v9;
  if (v8 == sub_23F33B51C() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  v13 = sub_23F33B978();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_22:
    v23 = (unsigned int *)MEMORY[0x24BE54370];
    goto LABEL_19;
  }
  v14 = sub_23F33B51C();
  v16 = v15;
  if (v14 == sub_23F33B51C() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  v19 = sub_23F33B978();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_24:
    v23 = (unsigned int *)MEMORY[0x24BE54358];
    goto LABEL_19;
  }
  v20 = sub_23F33AF70();
  v21 = a1;
  v22 = 1;
  return sub_23F2EBFCC(v21, v22, 1, v20);
}

uint64_t sub_23F30DBD8(uint64_t a1, uint64_t a2)
{
  return NLTaggerBasedEntityDetector.detectEntities(text:)(a1, a2);
}

uint64_t sub_23F30DBFC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_23F30DCCC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23F30F024((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23F30F024((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_23F2F2DAC((uint64_t)v12);
  return v7;
}

uint64_t sub_23F30DCCC(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_23F30DE20((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_23F33B7C8();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_23F30DEE4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_23F33B870();
    if (!v8)
    {
      result = sub_23F33B900();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_23F30DE20(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F33B93C();
  __break(1u);
  return result;
}

uint64_t sub_23F30DEE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23F30DF78(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_23F30E14C(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_23F30E14C((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23F30DF78(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_23F33B588();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_23F30E0E8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_23F33B828();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_23F33B93C();
  __break(1u);
LABEL_14:
  result = sub_23F33B900();
  __break(1u);
  return result;
}

_QWORD *sub_23F30E0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23F2EB3F8(qword_256E6B010);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_23F30E14C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F2EB3F8(qword_256E6B010);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F2F27F4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F30E220(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_23F30E220(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F33B93C();
  __break(1u);
  return result;
}

uint64_t sub_23F30E2E4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F32F2C8(0, v5, v6);
    v7 = sub_23F30E470(v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (unint64_t *)swift_slowAlloc();
    sub_23F32F2C8(0, v5, v8);
    v7 = sub_23F30E470(v8, v5, a2, v3);
    swift_release();
    MEMORY[0x242669658](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23F30E470(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t (*v40)(char *, uint64_t);
  BOOL v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;

  v64 = a2;
  v67 = a1;
  v6 = sub_23F33AF70();
  v7 = *(_QWORD **)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (unint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v64 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v64 - v15;
  result = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v64 - v18;
  v20 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(a4 + 16);
  v73 = a4;
  v74 = a3;
  v75 = v7;
  if (v21 < v20)
  {
    v68 = (unint64_t)&v64 - v18;
    v69 = 0;
    v22 = 0;
    v23 = *(_QWORD *)(a4 + 56);
    v65 = a4 + 56;
    v24 = 1 << *(_BYTE *)(a4 + 32);
    if (v24 < 64)
      v25 = ~(-1 << v24);
    else
      v25 = -1;
    v26 = v25 & v23;
    v66 = (unint64_t)(v24 + 63) >> 6;
    v72 = a3 + 56;
    do
    {
      v27 = v16;
      if (v26)
      {
LABEL_7:
        v70 = (v26 - 1) & v26;
        v71 = v22;
        v28 = __clz(__rbit64(v26)) | (v22 << 6);
        goto LABEL_22;
      }
      while (1)
      {
        v29 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v29 >= v66)
          goto LABEL_63;
        v30 = *(_QWORD *)(v65 + 8 * v29);
        v31 = v22 + 1;
        if (!v30)
        {
          v31 = v22 + 2;
          if (v22 + 2 >= v66)
            goto LABEL_63;
          v30 = *(_QWORD *)(v65 + 8 * v31);
          if (!v30)
          {
            v31 = v22 + 3;
            if (v22 + 3 >= v66)
              goto LABEL_63;
            v30 = *(_QWORD *)(v65 + 8 * v31);
            if (!v30)
            {
              v32 = v22 + 4;
              if (v22 + 4 >= v66)
              {
LABEL_63:
                v62 = v64;
                v63 = v69;
                swift_retain();
                return sub_23F30EAE4(v67, v62, v63, a3);
              }
              v30 = *(_QWORD *)(v65 + 8 * v32);
              if (!v30)
              {
                while (1)
                {
                  v31 = v32 + 1;
                  if (__OFADD__(v32, 1))
                    break;
                  if (v31 >= v66)
                    goto LABEL_63;
                  v30 = *(_QWORD *)(v65 + 8 * v31);
                  ++v32;
                  if (v30)
                    goto LABEL_21;
                }
LABEL_66:
                __break(1u);
                goto LABEL_67;
              }
              v31 = v22 + 4;
            }
          }
        }
LABEL_21:
        v70 = (v30 - 1) & v30;
        v71 = v31;
        v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
        v33 = *(_QWORD *)(a4 + 48);
        v34 = v75;
        v7 = (_QWORD *)v75[9];
        v35 = (void (*)(char *, unint64_t, uint64_t))v75[2];
        v35(v19, v33 + (_QWORD)v7 * v28, v6);
        ((void (*)(char *, char *, uint64_t))v34[4])(v27, v19, v6);
        sub_23F2EBEE4(&qword_254346208, MEMORY[0x24BE543A8]);
        v36 = sub_23F33B4BC();
        a3 = v74;
        v37 = -1 << *(_BYTE *)(v74 + 32);
        v10 = v36 & ~v37;
        if (((*(_QWORD *)(v72 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
          break;
        v40 = (uint64_t (*)(char *, uint64_t))v34[1];
LABEL_28:
        v27 = v16;
        result = v40(v16, v6);
        a4 = v73;
        v19 = (char *)v68;
        v26 = v70;
        v22 = v71;
        if (v70)
          goto LABEL_7;
      }
      v38 = ~v37;
      while (1)
      {
        v35(v13, *(_QWORD *)(a3 + 48) + v10 * (_QWORD)v7, v6);
        sub_23F2EBEE4(&qword_254346210, MEMORY[0x24BE543B0]);
        v39 = sub_23F33B4EC();
        v40 = (uint64_t (*)(char *, uint64_t))v75[1];
        v40(v13, v6);
        if ((v39 & 1) != 0)
          break;
        v10 = (v10 + 1) & v38;
        a3 = v74;
        if (((*(_QWORD *)(v72 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_28;
      }
      result = v40(v16, v6);
      v19 = (char *)v68;
      *(unint64_t *)((char *)v67 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      v26 = v70;
      v41 = __OFADD__(v69++, 1);
      a4 = v73;
      a3 = v74;
      v22 = v71;
    }
    while (!v41);
    __break(1u);
  }
  v69 = 0;
  v42 = 0;
  v43 = *(_QWORD *)(a3 + 56);
  v65 = a3 + 56;
  v44 = 1 << *(_BYTE *)(a3 + 32);
  if (v44 < 64)
    v45 = ~(-1 << v44);
  else
    v45 = -1;
  v46 = v45 & v43;
  v66 = (unint64_t)(v44 + 63) >> 6;
  v72 = a4 + 56;
  while (v46)
  {
    v70 = (v46 - 1) & v46;
    v71 = v42;
    v47 = __clz(__rbit64(v46)) | (v42 << 6);
LABEL_53:
    v52 = *(_QWORD *)(a3 + 48);
    v53 = v7[9];
    v68 = v47;
    v54 = (void (*)(unint64_t, unint64_t, uint64_t))v7[2];
    v54(v10, v52 + v53 * v47, v6);
    sub_23F2EBEE4(&qword_254346208, MEMORY[0x24BE543A8]);
    v55 = v10;
    v56 = sub_23F33B4BC();
    v57 = -1 << *(_BYTE *)(a4 + 32);
    v58 = v56 & ~v57;
    if (((*(_QWORD *)(v72 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) != 0)
    {
      v59 = ~v57;
      while (1)
      {
        v54((unint64_t)v13, *(_QWORD *)(v73 + 48) + v58 * v53, v6);
        sub_23F2EBEE4(&qword_254346210, MEMORY[0x24BE543B0]);
        v60 = sub_23F33B4EC();
        v61 = (void (*)(char *, uint64_t))v75[1];
        v61(v13, v6);
        if ((v60 & 1) != 0)
          break;
        v58 = (v58 + 1) & v59;
        if (((*(_QWORD *)(v72 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
          goto LABEL_59;
      }
      v10 = v55;
      result = ((uint64_t (*)(unint64_t, uint64_t))v61)(v55, v6);
      *(unint64_t *)((char *)v67 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
      v46 = v70;
      v41 = __OFADD__(v69++, 1);
      a4 = v73;
      a3 = v74;
      v7 = v75;
      v42 = v71;
      if (v41)
      {
        __break(1u);
        goto LABEL_63;
      }
    }
    else
    {
      v61 = (void (*)(char *, uint64_t))v7[1];
LABEL_59:
      v10 = v55;
      result = ((uint64_t (*)(unint64_t, uint64_t))v61)(v55, v6);
      a4 = v73;
      a3 = v74;
      v7 = v75;
      v46 = v70;
      v42 = v71;
    }
  }
  v48 = v42 + 1;
  if (__OFADD__(v42, 1))
    goto LABEL_65;
  if (v48 >= v66)
    goto LABEL_63;
  v49 = *(_QWORD *)(v65 + 8 * v48);
  v50 = v42 + 1;
  if (v49)
    goto LABEL_52;
  v50 = v42 + 2;
  if (v42 + 2 >= v66)
    goto LABEL_63;
  v49 = *(_QWORD *)(v65 + 8 * v50);
  if (v49)
    goto LABEL_52;
  v50 = v42 + 3;
  if (v42 + 3 >= v66)
    goto LABEL_63;
  v49 = *(_QWORD *)(v65 + 8 * v50);
  if (v49)
  {
LABEL_52:
    v70 = (v49 - 1) & v49;
    v71 = v50;
    v47 = __clz(__rbit64(v49)) + (v50 << 6);
    goto LABEL_53;
  }
  v51 = v42 + 4;
  if (v42 + 4 >= v66)
    goto LABEL_63;
  v49 = *(_QWORD *)(v65 + 8 * v51);
  if (v49)
  {
    v50 = v42 + 4;
    goto LABEL_52;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v66)
      goto LABEL_63;
    v49 = *(_QWORD *)(v65 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_52;
  }
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_23F30EAE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23F33AF70();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  sub_23F2EB3F8(&qword_254346398);
  result = sub_23F33B810();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_36:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_36;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_36;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_36;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_36;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_23F2EBEE4(&qword_254346208, MEMORY[0x24BE543A8]);
    result = sub_23F33B4BC();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) == 0)
      break;
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    v17 = v38;
LABEL_34:
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_39;
    a4 = v23;
    if (!a3)
      goto LABEL_36;
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  v17 = v38;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = *(_QWORD *)(v16 + 8 * v28);
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23F30EDD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F30D720(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24)) & 1;
}

uint64_t destroy for NLTaggerBasedEntityDetector(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s30IntelligenceFlowContextRuntime27NLTaggerBasedEntityDetectorVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NLTaggerBasedEntityDetector(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for NLTaggerBasedEntityDetector(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NLTaggerBasedEntityDetector(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NLTaggerBasedEntityDetector(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NLTaggerBasedEntityDetector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NLTaggerBasedEntityDetector()
{
  return &type metadata for NLTaggerBasedEntityDetector;
}

uint64_t sub_23F30EFE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E6B008);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F30F024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23F30F060()
{
  return sub_23F33B978();
}

uint64_t sub_23F30F07C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F30F08C()
{
  return sub_23F33B5A0();
}

uint64_t sub_23F30F09C()
{
  return sub_23F33B51C();
}

uint64_t sub_23F30F0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F30F0BC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F30F0C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F30F0D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void sub_23F30F0E4()
{
  JUMPOUT(0x242668C20);
}

uint64_t sub_23F30F0EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F30F0F4()
{
  return sub_23F33AF70();
}

uint64_t sub_23F30F114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;

  sub_23F33A6B8();
  swift_allocObject();
  *a1 = sub_23F33A6AC();
  v2 = type metadata accessor for NowPlayingMediaItemProvider();
  v3 = (uint64_t)a1 + *(int *)(v2 + 20);
  v4 = sub_23F33AB2C();
  sub_23F2EBFCC(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 24);
  v6 = *MEMORY[0x24BE572B0];
  v7 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = sub_23F2EE774();
  v9 = (uint64_t)&v5[*(int *)(v8 + 24)];
  v10 = *MEMORY[0x24BE571B8];
  v11 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  result = sub_23F2EBFCC(v9, 0, 1, v11);
  v13 = &v5[*(int *)(v8 + 20)];
  *(_QWORD *)v13 = 0xD00000000000004DLL;
  *((_QWORD *)v13 + 1) = 0x800000023F33DB50;
  return result;
}

uint64_t type metadata accessor for NowPlayingMediaItemProvider()
{
  uint64_t result;

  result = qword_256E6B070;
  if (!qword_256E6B070)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F30F274()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F30F280(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F30F318()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F30F324(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F30F3B8()
{
  return &off_250FC5870;
}

uint64_t sub_23F30F3C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16) && (sub_23F2F60C0(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(a1 + 56);
    v8 = sub_23F2EB3F8(&qword_256E6A2E0);
    sub_23F310BF4(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, &qword_256E6A2E0);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F2EB3F8(&qword_256E6A2E0);
    v9 = a2;
    v10 = 1;
  }
  return sub_23F2EBFCC(v9, v10, 1, v11);
}

void sub_23F30F468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F310CDC(a1, a2);
    if ((v3 & 1) != 0)
      swift_retain();
  }
  sub_23F2EB20C();
}

uint64_t sub_23F30F4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_23F310CDC(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

void sub_23F30F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F310CDC(a1, a2);
    if ((v3 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_23F2EB20C();
}

double sub_23F30F518@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_23F2F6130(a1, a2), (v7 & 1) != 0))
  {
    sub_23F30F024(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_23F30F568(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_23F2F6208(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v3);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23F30F5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_23F310CDC(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

id NSDataDetectorBasedEntityDetector.init(entityTypes:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id result;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23F33B1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = sub_23F30F8D4(a1);
  if (!v11)
  {
    sub_23F33AC04();
    swift_bridgeObjectRetain();
    v18 = sub_23F33B1A4();
    v19 = sub_23F33B6D8();
    if (os_log_type_enabled(v18, v19))
    {
      v26 = a2;
      v20 = (uint8_t *)sub_23F2F8874();
      v25 = sub_23F2F8874();
      v28 = v25;
      *(_DWORD *)v20 = 136315138;
      v24 = v20 + 4;
      sub_23F310D04();
      sub_23F2EAFF0(&qword_254346208, (uint64_t (*)(uint64_t))MEMORY[0x24BE54398], MEMORY[0x24BE543A8]);
      swift_bridgeObjectRetain();
      v21 = sub_23F33B69C();
      v23 = v22;
      swift_bridgeObjectRelease();
      v27 = sub_23F30DBFC(v21, v23, &v28);
      sub_23F33B7BC();
      sub_23F310D0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v18, v19, "NSDataDetectorBasedEntityDetector does not support %s", v20, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    sub_23F310D0C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_11;
  }
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = objc_allocWithZone(MEMORY[0x24BDD14E8]);
  result = sub_23F310988(v12);
  if (!result)
  {
    sub_23F33AC04();
    v15 = sub_23F33B1A4();
    v16 = sub_23F33B6F0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)sub_23F2F8874();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23F2E8000, v15, v16, "Failed to create NSDataDetector", v17, 2u);
      sub_23F2F3748();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_11:
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t sub_23F30F8D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;

  v2 = sub_23F310D04();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  v9 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v27 = (unint64_t)(v10 + 63) >> 6;
  v13 = *MEMORY[0x24BE54360];
  v14 = *MEMORY[0x24BE54350];
  v15 = *MEMORY[0x24BE54368];
  v28 = *MEMORY[0x24BE54380];
  v16 = a1;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v18 = 0;
  while (1)
  {
    if (v12)
    {
      v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_20;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v27)
      goto LABEL_30;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_30;
      v22 = *(_QWORD *)(v26 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v27)
          goto LABEL_30;
        v22 = *(_QWORD *)(v26 + 8 * v18);
        if (!v22)
          break;
      }
    }
LABEL_19:
    v12 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_20:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(v16 + 48) + *(_QWORD *)(v3 + 72) * v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if ((_DWORD)result == v13)
    {
      v24 = 8;
      goto LABEL_29;
    }
    if ((_DWORD)result == v14)
    {
      v24 = 2048;
      goto LABEL_29;
    }
    if ((_DWORD)result == v15)
    {
      v24 = 32;
      goto LABEL_29;
    }
    if ((_DWORD)result == v28)
    {
      v24 = 16;
LABEL_29:
      v25 |= v24;
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  v23 = v21 + 3;
  if (v23 >= v27)
  {
LABEL_30:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v27)
      goto LABEL_30;
    v22 = *(_QWORD *)(v26 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t NSDataDetectorBasedEntityDetector.supportedEntities.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F2EB3F8(&qword_2543463C0);
  v0 = *(_QWORD *)(sub_23F310D04() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23F33F290;
  v4 = v3 + v2;
  sub_23F310CEC(v4, *MEMORY[0x24BE54360]);
  sub_23F310CEC(v4 + v1, *MEMORY[0x24BE54350]);
  sub_23F310CEC(v4 + 2 * v1, *MEMORY[0x24BE54368]);
  sub_23F310CEC(v4 + 3 * v1, *MEMORY[0x24BE54380]);
  return sub_23F2EBA7C(v3);
}

uint64_t NSDataDetectorBasedEntityDetector.detectEntities(text:)(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v5;
  void *v6;
  uint64_t v8;

  v5 = *v2;
  v8 = MEMORY[0x24BEE4AF8];
  v6 = (void *)MEMORY[0x242669178]();
  sub_23F30FCB8(v5, a1, a2, (uint64_t)&v8);
  objc_autoreleasePoolPop(v6);
  return v8;
}

void sub_23F30FCB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  char *v51;
  _QWORD *v52;
  char v53;
  unint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  id v56;
  void *v57;
  _QWORD *v58;
  void (*v59)(void *, _QWORD *, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  char v63;
  unint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  _QWORD *v68;
  char v69;
  unint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  unsigned int v86;
  char *v87;
  char *v88;
  unsigned int v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;

  v101 = a4;
  v7 = sub_23F33AF04();
  v99 = *(_QWORD *)(v7 - 8);
  v100 = v7;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F30C724();
  v92 = v9;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)v80 - v11;
  sub_23F2EB3F8((uint64_t *)&unk_2543461C0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F2EE748();
  v91 = (_QWORD *)v13;
  v14 = sub_23F33A4A8();
  v95 = *(_QWORD *)(v14 - 8);
  v96 = v14;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F30C724();
  v90 = v16;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v17);
  v88 = (char *)v80 - v18;
  v19 = sub_23F33AD30();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F30C724();
  v97 = (_QWORD *)v21;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v22);
  v87 = (char *)v80 - v23;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v24);
  v94 = (_QWORD *)((char *)v80 - v25);
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v26);
  v84 = (_QWORD *)((char *)v80 - v27);
  sub_23F2EB3F8(&qword_256E6B0E0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F2EE748();
  v83 = v29;
  v85 = (_QWORD *)sub_23F33ACE8();
  v82 = *(v85 - 1);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F2EE748();
  v81 = v31;
  v32 = (_QWORD *)sub_23F33B4F8();
  swift_bridgeObjectRetain();
  v33 = sub_23F33B594();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(a1, sel_matchesInString_options_range_, v32, 0, 0, v33);

  sub_23F310B58();
  v35 = sub_23F33B5D0();

  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_23F33B918();
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_3;
LABEL_46:
    swift_bridgeObjectRelease();
    return;
  }
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v36)
    goto LABEL_46;
LABEL_3:
  if (v36 >= 1)
  {
    v37 = 0;
    v104 = v35 & 0xC000000000000001;
    v89 = *MEMORY[0x24BE540E8];
    HIDWORD(v80[0]) = *MEMORY[0x24BE540C8];
    v86 = *MEMORY[0x24BE540B0];
    LODWORD(v80[0]) = *MEMORY[0x24BE540C0];
    v102 = a3;
    v103 = a2;
    v93 = v19;
    while (1)
    {
      v38 = v104 ? (id)MEMORY[0x242668F08](v37, v35) : *(id *)(v35 + 8 * v37 + 32);
      v39 = v38;
      v40 = objc_msgSend(v38, sel_resultType, v80[0]);
      if (v40 == (id)2048)
        break;
      if (v40 == (id)16)
      {
        v51 = v98;
        NSDataDetectorBasedEntityDetector.extractAddressComponents(from:)(v39);
        v52 = v92;
        (*(void (**)(_QWORD *, char *, uint64_t))(v99 + 16))(v92, v51, v100);
        v32 = v97;
        sub_23F33ADC0();
        sub_23F310CE4((uint64_t)v32, v89, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
        v53 = sub_23F310CB0();
        *v52 = v32;
        if ((v53 & 1) == 0)
        {
          v72 = sub_23F310C58();
          sub_23F310CA0(v72);
        }
        sub_23F310CCC();
        if (v48)
        {
          v73 = sub_23F310C70();
          sub_23F310CA0(v73);
        }
        v54 = sub_23F310C34();
        sub_23F310CE4(v54, (uint64_t)v97, v55);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
        goto LABEL_43;
      }
      if (v40 != (id)32)
      {
        if (v40 == (id)8)
        {
          objc_opt_self();
          v41 = swift_dynamicCastObjCClass();
          if (v41)
          {
            v32 = (_QWORD *)v41;
            v39 = v39;
            objc_msgSend(v32, sel_range);
            sub_23F33B6C0();
            if ((v42 & 1) == 0)
            {
              v43 = sub_23F33B5A0();
              MEMORY[0x242668C20](v43);
              swift_bridgeObjectRelease();
              v44 = v83;
              sub_23F310414((uint64_t)v32, v83);
              swift_bridgeObjectRelease();
              v32 = v85;
              if (sub_23F2EBFC0(v44, 1, (uint64_t)v85) == 1)
              {

                sub_23F2F6AF4(v44, &qword_256E6B0E0);
              }
              else
              {
                v66 = v82;
                (*(void (**)(uint64_t, uint64_t, _QWORD *))(v82 + 32))(v81, v44, v32);
                v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
                v68 = v84;
                sub_23F310CF4(v67);
                sub_23F310CE4((uint64_t)v68, LODWORD(v80[0]), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
                v69 = sub_23F310CB0();
                *v68 = v32;
                if ((v69 & 1) == 0)
                {
                  v78 = sub_23F310C58();
                  sub_23F310CA0(v78);
                }
                sub_23F310CCC();
                if (v48)
                {
                  v79 = sub_23F310C70();
                  sub_23F310CA0(v79);
                }
                v70 = sub_23F310C34();
                sub_23F310CE4(v70, (uint64_t)v84, v71);

                (*(void (**)(uint64_t, _QWORD *))(v82 + 8))(v81, v85);
              }
              goto LABEL_43;
            }

          }
        }
        goto LABEL_37;
      }
      v56 = objc_msgSend(v39, sel_URL);
      if (v56)
      {
        v57 = v56;
        v58 = v90;
        sub_23F33A490();

        v59 = *(void (**)(void *, _QWORD *, uint64_t))(v95 + 32);
        v32 = v91;
        v60 = v58;
        v61 = v96;
        v59(v91, v60, v96);
        sub_23F2EBFCC((uint64_t)v32, 0, 1, v61);
        if (sub_23F2EBFC0((uint64_t)v32, 1, v61) != 1)
        {
          v59(v88, v32, v96);
          v62 = v90;
          sub_23F310CF4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 16));
          v32 = v87;
          sub_23F33AD00();
          sub_23F310CE4((uint64_t)v32, HIDWORD(v80[0]), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
          v63 = sub_23F310CB0();
          *v62 = v32;
          if ((v63 & 1) == 0)
          {
            v76 = sub_23F310C58();
            sub_23F310CA0(v76);
          }
          sub_23F310CCC();
          if (v48)
          {
            v77 = sub_23F310C70();
            sub_23F310CA0(v77);
          }
          v64 = sub_23F310C34();
          sub_23F310CE4(v64, (uint64_t)v87, v65);

          (*(void (**)(char *, uint64_t))(v95 + 8))(v88, v96);
          goto LABEL_43;
        }
      }
      else
      {
        v32 = v91;
        sub_23F2EBFCC((uint64_t)v91, 1, 1, v96);
      }

      sub_23F2F6AF4((uint64_t)v32, (uint64_t *)&unk_2543461C0);
LABEL_43:
      if (v36 == ++v37)
        goto LABEL_46;
    }
    sub_23F310B94(v39);
    if (v45)
    {
      v46 = v94;
      sub_23F33AD18();
      sub_23F310CE4((uint64_t)v46, v86, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
      v47 = sub_23F310CB0();
      *v46 = v32;
      if ((v47 & 1) == 0)
      {
        v74 = sub_23F310C58();
        sub_23F310CA0(v74);
      }
      sub_23F310CCC();
      if (v48)
      {
        v75 = sub_23F310C70();
        sub_23F310CA0(v75);
      }
      v49 = sub_23F310C34();
      sub_23F310CE4(v49, (uint64_t)v94, v50);

      goto LABEL_43;
    }
LABEL_37:

    goto LABEL_43;
  }
  __break(1u);
}

void sub_23F310414(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v4 = sub_23F2EB3F8(qword_256E6B0F0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v34 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - v9;
  v11 = sub_23F33A3B8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - v16;
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_23F33B4F8();
  v20 = objc_msgSend(v18, sel_processDateMatch_originalString_, a1, v19);

  if (!v20)
  {
    v30 = sub_23F33ACE8();
    sub_23F2EBFCC(a2, 1, 1, v30);
    return;
  }
  v37 = a2;
  v21 = sub_23F33B4A4();

  v22 = sub_23F33B51C();
  sub_23F30F518(v22, v23, v21, &v38);
  swift_bridgeObjectRelease();
  if (!v39)
  {
    sub_23F2F6AF4((uint64_t)&v38, &qword_256E6A290);
    sub_23F2EBFCC((uint64_t)v10, 1, 1, v11);
    goto LABEL_8;
  }
  v24 = swift_dynamicCast();
  sub_23F2EBFCC((uint64_t)v10, v24 ^ 1u, 1, v11);
  if (sub_23F2EBFC0((uint64_t)v10, 1, v11) == 1)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_23F2F6AF4((uint64_t)v10, qword_256E6B0F0);
    v31 = sub_23F33ACE8();
    sub_23F2EBFCC(v37, 1, 1, v31);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v25 = sub_23F33B51C();
  sub_23F30F518(v25, v26, v21, &v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
    v27 = (uint64_t)v36;
    v28 = swift_dynamicCast() ^ 1;
    v29 = v27;
  }
  else
  {
    sub_23F2F6AF4((uint64_t)&v38, &qword_256E6A290);
    v27 = (uint64_t)v36;
    v29 = (uint64_t)v36;
    v28 = 1;
  }
  sub_23F2EBFCC(v29, v28, 1, v11);
  v32 = v37;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_23F310BF4(v27, v35, qword_256E6B0F0);
  sub_23F33ACD0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  v33 = sub_23F33ACE8();
  sub_23F2EBFCC(v32, 0, 1, v33);
  sub_23F2F6AF4(v27, qword_256E6B0F0);
}

uint64_t NSDataDetectorBasedEntityDetector.extractAddressComponents(from:)(void *a1)
{
  uint64_t result;

  sub_23F33AE74();
  result = sub_23F310AC0(a1);
  if (result)
  {
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD12A0]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AE8C();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD1298]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AEF8();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD12A8]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AE50();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD12B8]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AEBC();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD1288]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AE68();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD12B0]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AEA4();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD12C0]);
    sub_23F310C88();
    sub_23F310CC0();
    sub_23F33AEEC();
    sub_23F310C94((uint64_t)(id)*MEMORY[0x24BDD1290]);
    sub_23F310C88();
    swift_bridgeObjectRelease();
    sub_23F310CC0();
    return sub_23F33AED4();
  }
  return result;
}

uint64_t sub_23F310950()
{
  return NSDataDetectorBasedEntityDetector.supportedEntities.getter();
}

uint64_t sub_23F310964(uint64_t a1, uint64_t a2)
{
  return NSDataDetectorBasedEntityDetector.detectEntities(text:)(a1, a2);
}

id sub_23F310988(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_initWithTypes_error_, a1, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_23F33A454();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_23F310A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23F33B51C();
  v2 = v1;
  if (v0 == sub_23F33B51C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23F33B978();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23F310AC0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_components);
  if (!v1)
    return 0;
  v2 = v1;
  type metadata accessor for NSTextCheckingKey(0);
  sub_23F2EAFF0(&qword_256E69AB0, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_23F33E6C8);
  v3 = sub_23F33B4A4();

  return v3;
}

ValueMetadata *type metadata accessor for NSDataDetectorBasedEntityDetector()
{
  return &type metadata for NSDataDetectorBasedEntityDetector;
}

unint64_t sub_23F310B58()
{
  unint64_t result;

  result = qword_256E6B0E8;
  if (!qword_256E6B0E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E6B0E8);
  }
  return result;
}

uint64_t sub_23F310B94(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_phoneNumber);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23F33B51C();

  return v3;
}

void sub_23F310BF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F2EB3F8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_23F2EB20C();
}

unint64_t sub_23F310C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v3;
  return v1
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v0;
}

uint64_t sub_23F310C58()
{
  return sub_23F30B608();
}

uint64_t sub_23F310C70()
{
  return sub_23F30B608();
}

void sub_23F310C88()
{
  void *v0;

}

uint64_t sub_23F310C94(uint64_t a1)
{
  uint64_t v1;

  return sub_23F30F568(a1, v1);
}

uint64_t sub_23F310CA0(uint64_t result)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 112) = result;
  return result;
}

uint64_t sub_23F310CB0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F310CC0()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F310CDC(uint64_t a1, uint64_t a2)
{
  return sub_23F2F6130(a1, a2);
}

uint64_t sub_23F310CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F310CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F310CF4@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_23F310D04()
{
  return sub_23F33AF70();
}

uint64_t sub_23F310D0C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t *sub_23F310D18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for ContextDefinition();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_23F33A9E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(v6 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F33A97C();
    swift_bridgeObjectRetain();
    if (sub_23F2EBFC0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F2EB3F8(qword_256E69B30);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      sub_23F2EBFCC((uint64_t)v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t sub_23F310E3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for ContextDefinition();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(v3 + 24);
  v5 = sub_23F33A97C();
  result = sub_23F2EBFC0(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t sub_23F310ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for ContextDefinition();
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = *(int *)(v5 + 24);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23F33A97C();
  swift_bridgeObjectRetain();
  if (sub_23F2EBFC0((uint64_t)v12, 1, v13))
  {
    v14 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    sub_23F2EBFCC((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_23F310FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for ContextDefinition();
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(v5 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23F33A97C();
  v13 = sub_23F2EBFC0((uint64_t)v10, 1, v12);
  v14 = sub_23F2EBFC0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  sub_23F2EBFCC((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_23F311118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for ContextDefinition();
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  v6 = *(int *)(v5 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23F33A97C();
  if (sub_23F2EBFC0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_23F2EBFCC((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_23F3111F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for ContextDefinition();
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v11 = *(int *)(v5 + 24);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_23F33A97C();
  v15 = sub_23F2EBFC0((uint64_t)v12, 1, v14);
  v16 = sub_23F2EBFC0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_23F2EB3F8(qword_256E69B30);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  sub_23F2EBFCC((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t sub_23F311334()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F311340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F311368()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F311374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentAppEntityProvider()
{
  uint64_t result;

  result = qword_256E6B150;
  if (!qword_256E6B150)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3113D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F311448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F2F0794(v0 + 16, &qword_256E6A290);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentAppEntityProvider();
      sub_23F2EB3F8(&qword_256E6B1A8);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F311FA8, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F311874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v43 = a1;
  v44 = sub_23F33B00C();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F2EB3F8(qword_256E6B1B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23F33B3C0();
  v14 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F33AD30();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23F33AF28();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v20, v17) == *MEMORY[0x24BE540A8])
  {
    v38 = v7;
    v39 = v14;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v20, v49);
    sub_23F33AF10();
    v22 = sub_23F2EBFC0((uint64_t)v13, 1, v45);
    v23 = v46;
    if (v22 == 1)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
      sub_23F2F0794((uint64_t)v13, qword_256E6B1B0);
      v24 = 1;
    }
    else
    {
      v25 = v39;
      v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v16, v13, v45);
      v27 = sub_23F33ABD4();
      sub_23F2EBFCC((uint64_t)v10, 1, 1, v27);
      v28 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v29, v16, v26);
      v30 = (uint64_t)v38;
      *v38 = v28;
      v31 = *MEMORY[0x24BEB99B0];
      v32 = sub_23F33B420();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, v31, v32);
      sub_23F2EBFCC(v30, 0, 1, v32);
      v33 = v40;
      sub_23F33ADD8();
      v34 = (uint64_t)v41;
      sub_23F311CA8();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v44);
      v35 = sub_23F33AAC0();
      sub_23F2EBFCC(v34, 0, 1, v35);
      sub_23F33AA54();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v26);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
      v24 = 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v24 = 1;
    v23 = v46;
  }
  v36 = sub_23F33AA84();
  return sub_23F2EBFCC(v23, v24, 1, v36);
}

uint64_t sub_23F311CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  sub_23F2EB3F8(&qword_256E6B190);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F2EE798();
  v3 = v2 - v1;
  sub_23F2EB3F8(&qword_256E6A7C0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2EE798();
  v7 = v6 - v5;
  sub_23F2EB3F8(&qword_256E6B198);
  sub_23F2EE5B8();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  sub_23F2EB3F8(&qword_256E6A538);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F2EE798();
  v17 = v16 - v15;
  sub_23F33AFDC();
  v18 = sub_23F33A958();
  sub_23F2EE6B8(v17, v19, v20, v18);
  sub_23F311F30(MEMORY[0x24BE54428]);
  sub_23F33A9C4();
  sub_23F311FC0((uint64_t)v13);
  sub_23F311F30(MEMORY[0x24BE54448]);
  sub_23F311FC0((uint64_t)v11);
  v21 = sub_23F33AB2C();
  sub_23F2EE6B8(v7, v22, v23, v21);
  v24 = sub_23F33ABF8();
  sub_23F2EE6B8(v3, v25, v26, v24);
  sub_23F33AFD0();
  sub_23F33B000();
  return sub_23F33AAB4();
}

uint64_t sub_23F311E94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F3113D8(a1);
}

uint64_t sub_23F311EE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23F311F30(void (*a1)(void))
{
  uint64_t v2;
  CGRect v4;
  CGRect v5;

  a1();
  v2 = ((uint64_t (*)(void))a1)();
  v4.origin.x = ((double (*)(uint64_t))a1)(v2);
  CGRectGetWidth(v4);
  v5.origin.x = ((double (*)(void))a1)();
  CGRectGetHeight(v5);
  return sub_23F33A988();
}

uint64_t sub_23F311FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F311874(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F311FC0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFCC(a1, 0, 1, v1);
}

uint64_t sub_23F311FD0()
{
  return type metadata accessor for ContextDefinition();
}

uint64_t sub_23F311FE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F311FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F312014()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F312020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentDateTimeProvider()
{
  uint64_t result;

  result = qword_256E6B210;
  if (!qword_256E6B210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F312084(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F3120F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentDateTimeProvider();
      sub_23F2EB3F8(qword_256E6B258);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F312900, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F312518@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v38 = a2;
  v37 = sub_23F33B00C();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v33 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33AD30();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F33ACE8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == *MEMORY[0x24BE540C0])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v19 = sub_23F33ABD4();
    sub_23F2EBFCC((uint64_t)v10, 1, 1, v19);
    v20 = sub_23F33B408();
    v21 = swift_allocBox();
    v23 = v22;
    sub_23F33ACDC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v23, *MEMORY[0x24BEB9900], v20);
    *v7 = v21;
    v24 = *MEMORY[0x24BEB9A00];
    v25 = sub_23F33B420();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v7, v24, v25);
    sub_23F2EBFCC((uint64_t)v7, 0, 1, v25);
    v26 = v33;
    sub_23F33ADD8();
    v27 = (uint64_t)v34;
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v37);
    v28 = sub_23F33AAC0();
    sub_23F2EBFCC(v27, 0, 1, v28);
    v29 = v38;
    sub_23F33AA54();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v30 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v30 = 1;
    v29 = v38;
  }
  v31 = sub_23F33AA84();
  return sub_23F2EBFCC(v29, v30, 1, v31);
}

uint64_t sub_23F312874(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F312084(a1);
}

uint64_t sub_23F3128C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E6A290);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F312900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F312518(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F312918()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F312924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F31294C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F312958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentEmailAddressProvider()
{
  uint64_t result;

  result = qword_256E6B2B8;
  if (!qword_256E6B2B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3129BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F312A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentEmailAddressProvider();
      sub_23F2EB3F8(qword_256E6B318);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F3134FC, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F312E50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  v61 = a1;
  v65 = a2;
  v62 = sub_23F33B00C();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F2EB3F8(&qword_256E69F00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F33A4A8();
  v63 = *(_QWORD *)(v12 - 8);
  v64 = (char *)v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F33AD30();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F33AD0C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) != *MEMORY[0x24BE540C8])
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_7:
    v51 = 1;
    v29 = v65;
    goto LABEL_8;
  }
  v55 = v11;
  (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  sub_23F33ACF4();
  v23 = (void *)sub_23F33A484();
  (*(void (**)(char *, char *))(v63 + 8))(v14, v64);
  v24 = sub_23F332AF8(v23);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_7;
  }
  v26 = v24;
  v27 = v25;
  v28 = sub_23F313350();
  v29 = v65;
  if ((v28 & 1) != 0)
  {
    v30 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
    sub_23F30B408(v26, v27, 1);
    v32 = v31;
    v33 = sub_23F33A430();
    v34 = (uint64_t)v55;
    sub_23F2EBFCC((uint64_t)v55, 1, 1, v33);
    v35 = objc_allocWithZone(MEMORY[0x24BDD9F30]);
    v36 = sub_23F2F04D8(v32, v34, 0, 0, 0, 0, 0, 0, 0);
    v37 = sub_23F33ABD4();
    sub_23F2EBFCC(v56, 1, 1, v37);
    v38 = sub_23F33B408();
    v39 = swift_allocBox();
    v64 = v22;
    v41 = v40;
    v42 = v36;
    v63 = v20;
    v43 = v42;
    sub_23F33B3D8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v41, *MEMORY[0x24BEB9950], v38);
    v44 = (uint64_t)v57;
    *v57 = v39;
    v45 = *MEMORY[0x24BEB9A00];
    v46 = sub_23F33B420();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
    sub_23F2EBFCC(v44, 0, 1, v46);
    v47 = v58;
    sub_23F33ADD8();
    v48 = v19;
    v49 = (uint64_t)v59;
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v62);
    v50 = sub_23F33AAC0();
    sub_23F2EBFCC(v49, 0, 1, v50);
    sub_23F33AA54();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v48);
    v51 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    swift_bridgeObjectRelease();
    v51 = 1;
  }
LABEL_8:
  v52 = sub_23F33AA84();
  return sub_23F2EBFCC(v29, v51, 1, v52);
}

id sub_23F313350()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  sub_23F313484();
  sub_23F2EB3F8(&qword_256E6B300);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F33E710;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = sub_23F3134C0();
  *(_QWORD *)(v0 + 32) = 0xD00000000000002BLL;
  *(_QWORD *)(v0 + 40) = 0x800000023F33DBC0;
  v1 = (void *)sub_23F33B6CC();
  v2 = (void *)sub_23F33B4F8();
  v3 = objc_msgSend(v1, sel_evaluateWithObject_, v2);

  return v3;
}

uint64_t sub_23F313438(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F3129BC(a1);
}

unint64_t sub_23F313484()
{
  unint64_t result;

  result = qword_256E6B2F8;
  if (!qword_256E6B2F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E6B2F8);
  }
  return result;
}

unint64_t sub_23F3134C0()
{
  unint64_t result;

  result = qword_256E6B308;
  if (!qword_256E6B308)
  {
    result = MEMORY[0x2426695B0](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, &qword_256E6B308);
  }
  return result;
}

uint64_t sub_23F3134FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F312E50(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F313514()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F313520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F313548()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F313554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentPhoneNumberProvider()
{
  uint64_t result;

  result = qword_256E6B378;
  if (!qword_256E6B378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3135B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F313628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentPhoneNumberProvider();
      sub_23F2EB3F8(qword_256E6B3C0);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F313ED8, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F313A4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a1;
  v53 = a2;
  v52 = sub_23F33B00C();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v48 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F2EB3F8(&qword_256E69F00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F33AD30();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F33AF58();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v16, v13) == *MEMORY[0x24BE540B0])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v46 = v17;
    v21(v20, v16, v17);
    v22 = sub_23F33AF4C();
    v24 = v23;
    v25 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
    sub_23F30B408(v22, v24, 2);
    v27 = v26;
    v28 = sub_23F33A430();
    sub_23F2EBFCC((uint64_t)v12, 1, 1, v28);
    v29 = objc_allocWithZone(MEMORY[0x24BDD9F30]);
    v30 = sub_23F2F04D8(v27, (uint64_t)v12, 0, 0, 0, 0, 0, 0, 0);
    v31 = sub_23F33ABD4();
    sub_23F2EBFCC(v47, 1, 1, v31);
    v32 = sub_23F33B408();
    v33 = swift_allocBox();
    v35 = v34;
    v36 = v30;
    sub_23F33B3D8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v35, *MEMORY[0x24BEB9950], v32);
    *v7 = v33;
    v37 = *MEMORY[0x24BEB9A00];
    v38 = sub_23F33B420();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v7, v37, v38);
    sub_23F2EBFCC((uint64_t)v7, 0, 1, v38);
    v39 = v48;
    sub_23F33ADD8();
    v40 = (uint64_t)v49;
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v52);
    v41 = sub_23F33AAC0();
    sub_23F2EBFCC(v40, 0, 1, v41);
    v42 = v53;
    sub_23F33AA54();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v46);
    v43 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v43 = 1;
    v42 = v53;
  }
  v44 = sub_23F33AA84();
  return sub_23F2EBFCC(v42, v43, 1, v44);
}

uint64_t sub_23F313E8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F3135B8(a1);
}

uint64_t sub_23F313ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F313A4C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F313EF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F313EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F313F24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F313F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentPostalAddressProvider()
{
  uint64_t result;

  result = qword_256E6B420;
  if (!qword_256E6B420)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F313F94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F314004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentPostalAddressProvider();
      sub_23F2EB3F8(&qword_256E6B468);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F314AF4, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F314428@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v67 = a1;
  v69 = a2;
  v68 = sub_23F33B00C();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v64 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v65 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v63 = (uint64_t *)((char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F33AF04();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v56 - v12;
  v14 = sub_23F33AD30();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F33ADCC();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v56 - v23;
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == *MEMORY[0x24BE540E8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_init);
    sub_23F33ADB4();
    v25 = sub_23F33AE80();
    v27 = v26;
    v28 = *(void (**)(char *, uint64_t))(v59 + 8);
    v29 = v13;
    v30 = v60;
    v28(v29, v60);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, v18);
    v31 = v18;
    v32 = v24;
    if (v27)
    {
      v33 = v30;
      v34 = v61;
      v59 = v25;
    }
    else
    {
      v34 = v61;
      v56 = v31;
      sub_23F33ADB4();
      v59 = sub_23F33AE44();
      v27 = v37;
      v28(v34, v30);
      v31 = v56;
      v33 = v30;
    }
    v61 = *(char **)(v19 + 8);
    v38 = v22;
    v39 = v31;
    ((void (*)(char *, uint64_t))v61)(v38, v31);
    sub_23F314B0C();
    v58 = v32;
    sub_23F33ADB4();
    v40 = sub_23F314930();
    v28(v34, v33);
    v41 = sub_23F2F040C(v57, v59, v27, v40);
    v42 = sub_23F33ABD4();
    sub_23F2EBFCC(v62, 1, 1, v42);
    v43 = sub_23F33B408();
    v44 = swift_allocBox();
    v46 = v45;
    v47 = v41;
    sub_23F33B3FC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v46, *MEMORY[0x24BEB9968], v43);
    v48 = (uint64_t)v63;
    *v63 = v44;
    v49 = *MEMORY[0x24BEB9A00];
    v50 = sub_23F33B420();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
    sub_23F2EBFCC(v48, 0, 1, v50);
    v51 = v64;
    sub_23F33ADD8();
    v52 = (uint64_t)v65;
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v51, v68);
    v53 = sub_23F33AAC0();
    sub_23F2EBFCC(v52, 0, 1, v53);
    v36 = v69;
    sub_23F33AA54();

    ((void (*)(char *, uint64_t))v61)(v58, v39);
    v35 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v35 = 1;
    v36 = v69;
  }
  v54 = sub_23F33AA84();
  return sub_23F2EBFCC(v36, v35, 1, v54);
}

id sub_23F314930()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD78]), sel_init);
  sub_23F33AEB0();
  v1 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setStreet_, v1);

  sub_23F33AE5C();
  v2 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCity_, v2);

  sub_23F33AEC8();
  v3 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCountry_, v3);

  sub_23F33AE98();
  v4 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setState_, v4);

  sub_23F33AEE0();
  v5 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPostalCode_, v5);

  return v0;
}

uint64_t sub_23F314AA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F313F94(a1);
}

uint64_t sub_23F314AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F314428(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23F314B0C()
{
  unint64_t result;

  result = qword_256E69F08;
  if (!qword_256E69F08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E69F08);
  }
  return result;
}

uint64_t sub_23F314B48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F314B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F314B7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F314B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenContentUriLinkProvider()
{
  uint64_t result;

  result = qword_256E6B4C8;
  if (!qword_256E6B4C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F314BEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F314C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenContentUriLinkProvider();
      sub_23F2EB3F8(qword_256E6B510);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F3154EC, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F315080@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v46 = a1;
  v50 = a2;
  v47 = sub_23F33B00C();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v43 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F33A4A8();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F33AD30();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F33AD0C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v16, v13) != *MEMORY[0x24BE540C8])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_7:
    v25 = 1;
    v24 = v50;
    goto LABEL_8;
  }
  v41 = v9;
  (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  sub_23F33ACF4();
  v21 = (void *)sub_23F33A484();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
  sub_23F332AF8(v21);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    goto LABEL_7;
  }
  v23 = sub_23F313350();
  swift_bridgeObjectRelease();
  v24 = v50;
  if ((v23 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v25 = 1;
  }
  else
  {
    v28 = sub_23F33ABD4();
    sub_23F2EBFCC((uint64_t)v41, 1, 1, v28);
    v29 = sub_23F33B408();
    v30 = swift_allocBox();
    v40 = v20;
    v32 = v31;
    sub_23F33ACF4();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v32, *MEMORY[0x24BEB9920], v29);
    v33 = (uint64_t)v42;
    *v42 = v30;
    v34 = *MEMORY[0x24BEB9A00];
    v35 = sub_23F33B420();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
    sub_23F2EBFCC(v33, 0, 1, v35);
    v36 = v43;
    sub_23F33ADD8();
    v37 = (uint64_t)v44;
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v47);
    v38 = sub_23F33AAC0();
    sub_23F2EBFCC(v37, 0, 1, v38);
    sub_23F33AA54();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v40, v17);
    v25 = 0;
  }
LABEL_8:
  v26 = sub_23F33AA84();
  return sub_23F2EBFCC(v24, v25, 1, v26);
}

uint64_t sub_23F3154A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F314BEC(a1);
}

uint64_t sub_23F3154EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F315080(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F315504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;

  sub_23F33A5A4();
  swift_allocObject();
  *a1 = sub_23F33A598();
  v2 = type metadata accessor for OnScreenHomeProvider();
  v3 = sub_23F33AB2C();
  sub_23F306790(v3);
  sub_23F3067AC();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  v5 = *MEMORY[0x24BE57258];
  v6 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = sub_23F2EE774();
  v8 = sub_23F33A97C();
  sub_23F306790(v8);
  result = sub_23F3067AC();
  v10 = &v4[*(int *)(v7 + 20)];
  *(_QWORD *)v10 = 0xD000000000000054;
  *((_QWORD *)v10 + 1) = 0x800000023F33DBF0;
  return result;
}

uint64_t type metadata accessor for OnScreenHomeProvider()
{
  uint64_t result;

  result = qword_256E6B570;
  if (!qword_256E6B570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F31563C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F315648(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F3156E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F3156EC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F315780()
{
  return &off_250FC5850;
}

uint64_t sub_23F31578C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;

  sub_23F33A6DC();
  swift_allocObject();
  *a1 = sub_23F33A6D0();
  v2 = type metadata accessor for OnScreenNotificationProvider();
  v3 = (uint64_t)a1 + *(int *)(v2 + 20);
  v4 = sub_23F33AB2C();
  sub_23F2EBFCC(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 24);
  v6 = *MEMORY[0x24BE572C8];
  v7 = sub_23F33A9E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = sub_23F2EE774();
  v9 = (uint64_t)&v5[*(int *)(v8 + 24)];
  v10 = *MEMORY[0x24BE571B8];
  v11 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  result = sub_23F2EBFCC(v9, 0, 1, v11);
  v13 = &v5[*(int *)(v8 + 20)];
  *(_QWORD *)v13 = 0xD000000000000047;
  *((_QWORD *)v13 + 1) = 0x800000023F33DC50;
  return result;
}

uint64_t type metadata accessor for OnScreenNotificationProvider()
{
  uint64_t result;

  result = qword_256E6B638;
  if (!qword_256E6B638)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3158EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3158F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a3 + 24);
    }
    return sub_23F2EBFC0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23F315990()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F31599C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23F2EB3F8(&qword_256E6A7C0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F2EE774();
      v10 = *(int *)(a4 + 24);
    }
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

_UNKNOWN **sub_23F315A30()
{
  return &off_250FC5810;
}

uint64_t sub_23F315A3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F315A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F315A70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F315A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OnScreenPeopleProvider()
{
  uint64_t result;

  result = qword_256E6B700;
  if (!qword_256E6B700)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F315AE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23F33B1B0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = sub_23F2F6B70();
  v3 = sub_23F33AE14();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F315B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = v0 + 64;
  sub_23F30D148(*(_QWORD *)(v0 + 72), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_23;
  }
  sub_23F2EB3F8(&qword_254346338);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    sub_23F33AC1C();
    v28 = sub_23F33B1A4();
    v29 = sub_23F33B6E4();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    if (v30)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for OnScreenPeopleProvider();
      sub_23F2EB3F8(&qword_256E6B748);
      v35 = sub_23F33B540();
      *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v35, v36, &v41);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v28, v29, "unable to get source data for %s", v34, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_26:
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v40 = v3;
  v38 = *(_QWORD *)(v3 + 72);
  v39 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v39(v6, v4, v7);
    v8 = sub_23F33ADFC();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = sub_23F2F97C8((void (*)(_QWORD))sub_23F316498, v9, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v7);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = sub_23F30B9DC();
    if (*(_QWORD *)(v10 + 16))
    {
      v13 = *(_QWORD *)(v5 + 16);
      v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
      v15 = sub_23F33AA84();
      if (v14 < v11)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 - 8);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v18 = *(_QWORD *)(v16 + 72);
      v19 = v5 + v17 + v18 * v13;
      v20 = v10 + v17;
      v21 = v18 * v11;
      v22 = v19 + v21;
      v23 = v20 + v21;
      if (v20 < v22 && v19 < v23)
        return sub_23F33B93C();
      swift_arrayInitWithCopy();
      if (v11)
      {
        v25 = *(_QWORD *)(v5 + 16);
        v26 = __OFADD__(v25, v11);
        v27 = v25 + v11;
        if (v26)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v27;
      }
    }
    else if (v11)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    v4 += v38;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_23F33B93C();
}

uint64_t sub_23F315F74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v71 = a1;
  v73 = a2;
  v72 = sub_23F33B00C();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v69 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F2EB3F8(&qword_256E69D98);
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F2EB3F8(&qword_256E69DA0);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F2EB3F8(&qword_256E69DA8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F2EB3F8(&qword_256E69F00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F33AD30();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F33AD78();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AF94();
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v16, v13) == *MEMORY[0x24BE540E0])
  {
    v65 = v12;
    v66 = v9;
    v21 = (uint64_t *)v67;
    v22 = v68;
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v23 = sub_23F33AD54();
    v25 = v20;
    v63 = v18;
    v64 = v17;
    if (v24)
    {
      v26 = v23;
      v27 = v24;
      v28 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
      sub_23F30B408(v26, v27, 1);
      v30 = v29;
      v31 = (uint64_t)v22;
      v32 = v21;
      v34 = (uint64_t)v65;
      v33 = (uint64_t)v66;
    }
    else
    {
      v37 = sub_23F33AD48();
      v39 = v38;
      objc_allocWithZone(MEMORY[0x24BDD9F38]);
      v32 = v21;
      v34 = (uint64_t)v65;
      if (v39)
      {
        v40 = v39;
        v41 = 2;
      }
      else
      {
        v40 = 0;
        v41 = 0;
      }
      sub_23F30B408(v37, v40, v41);
      v30 = v42;
      v33 = (uint64_t)v66;
      v31 = (uint64_t)v22;
    }
    v43 = sub_23F33A430();
    sub_23F2EBFCC(v34, 1, 1, v43);
    v44 = v30;
    v45 = sub_23F33AD6C();
    v68 = v25;
    v47 = v46;
    v48 = objc_allocWithZone(MEMORY[0x24BDD9F30]);
    v49 = sub_23F2F04D8(v44, v34, v45, v47, 0, 0, 0, 0, 0);
    v50 = sub_23F33ABD4();
    sub_23F2EBFCC(v33, 1, 1, v50);
    v51 = sub_23F33B408();
    v52 = swift_allocBox();
    v54 = v53;
    v55 = v49;
    sub_23F33B3D8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v54, *MEMORY[0x24BEB9950], v51);
    *v32 = v52;
    v56 = *MEMORY[0x24BEB9A00];
    v57 = sub_23F33B420();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v32, v56, v57);
    sub_23F2EBFCC((uint64_t)v32, 0, 1, v57);
    v58 = v69;
    sub_23F33ADD8();
    sub_23F311CA8();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v72);
    v59 = sub_23F33AAC0();
    sub_23F2EBFCC(v31, 0, 1, v59);
    v36 = v73;
    sub_23F33AA54();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v68, v64);
    v35 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v35 = 1;
    v36 = v73;
  }
  v60 = sub_23F33AA84();
  return sub_23F2EBFCC(v36, v35, 1, v60);
}

uint64_t sub_23F31644C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F315AE0(a1);
}

uint64_t sub_23F316498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F315F74(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23F3164B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_type;
  v4 = sub_23F2F6C34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_23F3164F0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_class *ObjectType;
  objc_super v15;
  uint64_t v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = sub_23F33B744();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE798();
  v5 = v4 - v3;
  v6 = sub_23F33B738();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE798();
  v7 = sub_23F33B48C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE798();
  v8 = &v0[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_type];
  v9 = *MEMORY[0x24BE571B0];
  v10 = sub_23F2F6C34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  *(_QWORD *)&v0[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_locationManager] = 0;
  sub_23F2F238C();
  v11 = v0;
  sub_23F33B480();
  v16 = MEMORY[0x24BEE4AF8];
  sub_23F2F23C8();
  sub_23F2EB3F8(&qword_256E69FE0);
  sub_23F2F2408();
  sub_23F33B7EC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE5750], v1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_queue] = sub_23F33B750();

  v15.receiver = v11;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  sub_23F3166F4();

  return v12;
}

void sub_23F3166F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_getObjectType();
  v1 = sub_23F33B1B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_queue];
  objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v6 = v5;
  v7 = v0;
  v8 = sub_23F316B38(0xD000000000000034, 0x800000023F33DD30, (uint64_t)v0, v5);
  if (v8)
  {
    v9 = *(void **)&v7[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_locationManager];
    *(_QWORD *)&v7[OBJC_IVAR____TtC30IntelligenceFlowContextRuntime28PlaceInferenceSourceProvider_locationManager] = v8;

  }
  else
  {
    sub_23F33AC1C();
    v10 = sub_23F33B1A4();
    v11 = sub_23F33B6F0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = sub_23F30CD98();
      v16 = sub_23F30DBFC(v14, v15, &v17);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v10, v11, "couldn't create CLLocationManager for %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242669658](v13, -1, -1);
      MEMORY[0x242669658](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_23F31692C()
{
  uint64_t v0;

  return sub_23F316B24(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_23F31699C()
{
  return type metadata accessor for PlaceInferenceSourceProvider();
}

uint64_t type metadata accessor for PlaceInferenceSourceProvider()
{
  uint64_t result;

  result = qword_256E6B7D8;
  if (!qword_256E6B7D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3169DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33A97C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F316A60@<X0>(uint64_t a1@<X8>)
{
  return sub_23F3164B0(a1);
}

uint64_t sub_23F316A80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23F316AC8;
  return sub_23F31692C();
}

uint64_t sub_23F316AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23F316B24(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

id sub_23F316B38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  void *v8;
  id v9;

  v5 = v4;
  if (a2)
  {
    v8 = (void *)sub_23F33B4F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v5, sel_initWithEffectiveBundlePath_delegate_onQueue_, v8, a3, a4);

  swift_unknownObjectRelease();
  return v9;
}

void **initializeBufferWithCopyOfBuffer for LocationSourceContext(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for LocationSourceContext(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *initializeWithTake for LocationSourceContext(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for LocationSourceContext(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for LocationSourceContext(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationSourceContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSourceContext()
{
  return &type metadata for LocationSourceContext;
}

uint64_t sub_23F316D14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F316D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F316D48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F316D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for PointOfInterestProvider()
{
  uint64_t result;

  result = qword_256E6B898;
  if (!qword_256E6B898)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F316DB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[11] = a1;
  v2 = sub_23F33B1B0();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = sub_23F2F8824();
  v1[15] = sub_23F2F8838();
  sub_23F2EB3F8(&qword_256E69D98);
  v1[16] = swift_task_alloc();
  sub_23F2EB3F8(&qword_256E69DA0);
  v1[17] = sub_23F2F8824();
  v1[18] = sub_23F2F8838();
  sub_23F2EB3F8(&qword_256E69DA8);
  v1[19] = sub_23F2F8824();
  v1[20] = sub_23F2F8838();
  return swift_task_switch();
}

uint64_t sub_23F316E78()
{
  uint64_t v0;
  _DWORD *v1;
  id *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;

  v2 = (id *)(v0 + 64);
  sub_23F30D148(*(_QWORD *)(v0 + 88), v0 + 16);
  if (*(_QWORD *)(v0 + 40))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *v2;
      if (*v2
        && (v4 = objc_msgSend(*v2, sel_placemark)) != 0
        && (v5 = sub_23F3173A0(v4), v6))
      {
        v7 = v5;
        v8 = v6;
        v9 = *(_QWORD *)(v0 + 160);
        v10 = *(uint64_t **)(v0 + 144);
        v11 = *(_QWORD *)(v0 + 128);
        sub_23F2EB3F8(&qword_256E69DD8);
        sub_23F2EE7B4();
        v12 = sub_23F31740C();
        *(_OWORD *)(v12 + 16) = xmmword_23F33E710;
        v13 = sub_23F33ABD4();
        sub_23F2EE6B8(v9, v14, v15, v13);
        v16 = v3;
        v17 = sub_23F33B408();
        v18 = swift_allocBox();
        *v19 = v7;
        v19[1] = v8;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEB9958], v17);
        *v10 = v18;
        v20 = *MEMORY[0x24BEB9A00];
        sub_23F33B420();
        v21 = sub_23F317498();
        v22(v21, v20, v7);
        v23 = sub_23F317444();
        sub_23F2EE6B8(v11, v24, v25, v23);
        sub_23F317478();

      }
      else
      {
        sub_23F33AC1C();
        v36 = (void *)sub_23F33B1A4();
        v37 = sub_23F33B6E4();
        v38 = sub_23F3052E8(v37);
        v39 = *(_QWORD *)(v0 + 120);
        v40 = *(_QWORD *)(v0 + 96);
        v41 = *(_QWORD *)(v0 + 104);
        if (v38)
        {
          sub_23F317468();
          v62 = sub_23F317488();
          *v1 = 136315138;
          *(_QWORD *)(v0 + 72) = sub_23F3174AC();
          sub_23F2EB3F8(qword_256E6B8E0);
          v42 = sub_23F33B540();
          *(_QWORD *)(v0 + 80) = sub_23F30DBFC(v42, v43, &v62);
          sub_23F33B7BC();
          swift_bridgeObjectRelease();
          sub_23F317430(&dword_23F2E8000, v44, v45, "could not get POI category for %s");
          swift_arrayDestroy();
          sub_23F2F3748();
        }

        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
        v46 = *(_QWORD *)(v0 + 152);
        v48 = *(_QWORD *)(v0 + 128);
        v47 = *(uint64_t **)(v0 + 136);
        sub_23F2EB3F8(&qword_256E69DD8);
        sub_23F2EE7B4();
        v12 = sub_23F31740C();
        *(_OWORD *)(v12 + 16) = xmmword_23F33E710;
        v49 = sub_23F33ABD4();
        sub_23F2EE6B8(v46, v50, v51, v49);
        v52 = sub_23F33B408();
        v53 = swift_allocBox();
        *v54 = 0x6E776F6E6B6E75;
        v54[1] = 0xE700000000000000;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v54, *MEMORY[0x24BEB9958], v52);
        *v47 = v53;
        v55 = *MEMORY[0x24BEB9A00];
        sub_23F33B420();
        v56 = sub_23F317498();
        v57(v56, v55, v53);
        v58 = sub_23F317444();
        sub_23F2EE6B8(v48, v59, v60, v58);
        sub_23F317478();

      }
      goto LABEL_14;
    }
  }
  else
  {
    sub_23F3128C0(v0 + 16);
  }
  sub_23F33AC1C();
  v26 = (void *)sub_23F33B1A4();
  v27 = sub_23F33B6E4();
  v28 = sub_23F3052E8(v27);
  v30 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 112);
  v31 = *(_QWORD *)(v0 + 96);
  if (v28)
  {
    sub_23F317468();
    v62 = sub_23F317488();
    *v1 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23F3174AC();
    sub_23F2EB3F8(qword_256E6B8E0);
    v32 = sub_23F33B540();
    *(_QWORD *)(v0 + 56) = sub_23F30DBFC(v32, v33, &v62);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    sub_23F317430(&dword_23F2E8000, v34, v35, "unable to get source data for %s");
    swift_arrayDestroy();
    sub_23F2F3748();
  }

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  v12 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_23F317354(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F316DB8(a1);
}

uint64_t sub_23F3173A0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_category);

  if (!v2)
    return 0;
  v3 = sub_23F33B51C();

  return v3;
}

uint64_t sub_23F31740C()
{
  return swift_allocObject();
}

void sub_23F317430(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F317444()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F2EBFCC(v0, 0, 1, v1);
  return sub_23F33AAC0();
}

uint64_t sub_23F317468()
{
  return swift_slowAlloc();
}

uint64_t sub_23F317478()
{
  return sub_23F33AA54();
}

uint64_t sub_23F317488()
{
  return swift_slowAlloc();
}

uint64_t sub_23F317498()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3174AC()
{
  return type metadata accessor for PointOfInterestProvider();
}

uint64_t sub_23F3174B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[11] = a1;
  v2 = sub_23F33B1B0();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  sub_23F2EB3F8(&qword_256E69D98);
  v1[16] = sub_23F317AE8();
  sub_23F2EB3F8(&qword_256E69DA0);
  v1[17] = sub_23F317AE8();
  sub_23F2EB3F8(&qword_256E69DA8);
  v1[18] = sub_23F317AE8();
  return swift_task_switch();
}

uint64_t sub_23F317564()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = (void **)(v0 + 64);
  sub_23F30D148(*(_QWORD *)(v0 + 88), v0 + 16);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_23F3128C0(v0 + 16);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    sub_23F33AC1C();
    v21 = sub_23F33B1A4();
    v22 = sub_23F33B6E4();
    v23 = os_log_type_enabled(v21, v22);
    v25 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 112);
    v26 = *(_QWORD *)(v0 + 96);
    if (v23)
    {
      v27 = (uint8_t *)sub_23F2F8874();
      sub_23F2F8874();
      *(_DWORD *)v27 = 136315138;
      *(_QWORD *)(v0 + 48) = type metadata accessor for SemanticLocationProvider();
      sub_23F2EB3F8(&qword_256E6B988);
      v28 = sub_23F317B18();
      *(_QWORD *)(v0 + 56) = sub_23F317B0C(v28, v29, v30, v31, v32, v33);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v21, v22, "unable to get source data for %s", v27, 0xCu);
      sub_23F317AFC();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    goto LABEL_9;
  }
  v2 = *v1;
  if (!*v1)
  {
    sub_23F33AC1C();
    v35 = sub_23F33B1A4();
    v36 = sub_23F33B6E4();
    v37 = os_log_type_enabled(v35, v36);
    v38 = *(_QWORD *)(v0 + 120);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 104);
    if (v37)
    {
      v41 = (uint8_t *)sub_23F2F8874();
      sub_23F2F8874();
      *(_DWORD *)v41 = 136315138;
      *(_QWORD *)(v0 + 72) = type metadata accessor for SemanticLocationProvider();
      sub_23F2EB3F8(&qword_256E6B988);
      v42 = sub_23F317B18();
      *(_QWORD *)(v0 + 80) = sub_23F317B0C(v42, v43, v44, v45, v46, v47);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v35, v36, "could not get preferred name for %s", v41, 0xCu);
      sub_23F317AFC();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
LABEL_9:
    v6 = MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
  v4 = *(uint64_t **)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  sub_23F2EB3F8(&qword_256E69DD8);
  sub_23F33AA84();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23F33E710;
  v7 = sub_23F33ABD4();
  sub_23F2EE6B8(v3, v8, v9, v7);
  v10 = sub_23F33B408();
  v11 = swift_allocBox();
  v13 = v12;
  v14 = v2;
  *v13 = _CLPlaceInferenceUserSpecificPlaceType.contextValue.getter((uint64_t)objc_msgSend(v14, sel_userType));
  v13[1] = v15;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v13, *MEMORY[0x24BEB9958], v10);
  *v4 = v11;
  v16 = *MEMORY[0x24BEB9A00];
  v17 = sub_23F33B420();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v4, v16, v17);
  sub_23F2EBFCC((uint64_t)v4, 0, 1, v17);
  v18 = sub_23F33AAC0();
  sub_23F2EE6B8(v5, v19, v20, v18);
  sub_23F33AA54();

LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t _CLPlaceInferenceUserSpecificPlaceType.contextValue.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return 0x6E776F6E6B6E75;
  else
    return *(_QWORD *)&aHome[8 * a1 - 8];
}

uint64_t sub_23F3179F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F317A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F317A2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F317A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SemanticLocationProvider()
{
  uint64_t result;

  result = qword_256E6B940;
  if (!qword_256E6B940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F317A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F311EE0;
  return sub_23F3174B8(a1);
}

uint64_t sub_23F317AE8()
{
  return swift_task_alloc();
}

uint64_t sub_23F317AFC()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F317B0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F317B18()
{
  return sub_23F33B540();
}

void **sub_23F317B24(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23F33A97C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_23F317BB8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_23F33A97C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_23F317C00(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23F33A97C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_23F317C6C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23F33A97C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_23F317CDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F33A97C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_23F317D38(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F33A97C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F317DA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F317DB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F2F6C34();
    return sub_23F2EBFC0((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23F317E20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F317E2C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_23F2F6C34();
    return (_QWORD *)sub_23F2EBFCC((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutsOnScreenContentSourceProvider()
{
  uint64_t result;

  result = qword_256E6B9E8;
  if (!qword_256E6B9E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F317ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33A97C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F317F44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[6] = v0;
  v2 = sub_23F33B1B0();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = sub_23F318C70();
  v3 = sub_23F33A724();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = sub_23F318C70();
  v4 = sub_23F318CA4();
  v1[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 + 64);
  v1[16] = sub_23F318C70();
  sub_23F2FD4B0();
  return swift_task_switch();
}

uint64_t sub_23F317FD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  v2 = v0[14];
  sub_23F318A14(v0[6], v1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  v0[17] = v4;
  sub_23F318AD0(v1, v4 + v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v5;
  sub_23F2EB3F8(&qword_256E6BA60);
  *v5 = v0;
  v5[1] = sub_23F3180A0;
  return sub_23F33A718();
}

uint64_t sub_23F3180A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_23F2FD4B0();
  return sub_23F2F6B48();
}

uint64_t sub_23F318100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  sub_23F2F6CE8();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23F318158()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 152);
  swift_release();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = v1;
  sub_23F2EB3F8(&qword_256E6A510);
  if (swift_dynamicCast())
  {

    sub_23F33AC1C();
    v3 = sub_23F33B1A4();
    v4 = sub_23F33B6D8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = *(_QWORD *)(v0 + 104);
      v6 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      *(_DWORD *)v6 = 136315138;
      *(_QWORD *)(v0 + 32) = v5;
      sub_23F2EB3F8(&qword_256E6BA68);
      v7 = sub_23F33B540();
      *(_QWORD *)(v0 + 40) = sub_23F30DBFC(v7, v8, &v13);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v3, v4, "fetching data timed out for %s", v6, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }
    v11 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));

    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F2F6CE8();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {

    swift_task_dealloc();
    sub_23F2F6CE8();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F3183CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23F3183E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  sub_23F2EB3F8(&qword_256E6BA60);
  *v3 = v0;
  v3[1] = sub_23F318488;
  sub_23F2FD4B0();
  return sub_23F33B990();
}

uint64_t sub_23F318488()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F2FD4B0();
    return sub_23F2F6B48();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_23F3184F0()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F31851C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_23F2EB3F8(&qword_256E6BA70);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = *a2;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEC1570]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_23F318C14;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23F318918;
  aBlock[3] = &unk_250FC55C0;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_getOnScreenContentWithOptions_completionHandler_, v8, v11);
  _Block_release(v11);

}

uint64_t sub_23F318674(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23F33B1B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v24 = (uint64_t)a2;
    v8 = a2;
    v9 = a2;
    sub_23F2EB3F8(&qword_256E6BA70);
    sub_23F33B624();
    sub_23F33AC1C();
    v10 = a2;
    v11 = a2;
    v12 = sub_23F33B1A4();
    v13 = sub_23F33B6D8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v24 = v15;
      *(_DWORD *)v14 = 136315394;
      v23 = type metadata accessor for ShortcutsOnScreenContentSourceProvider();
      sub_23F2EB3F8(&qword_256E6BA68);
      v16 = sub_23F33B540();
      v23 = sub_23F30DBFC(v16, v17, &v24);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v23 = (uint64_t)a2;
      v18 = a2;
      sub_23F2EB3F8(&qword_256E6A510);
      v19 = sub_23F33B540();
      v23 = sub_23F30DBFC(v19, v20, &v24);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23F2E8000, v12, v13, "unable to fetch data for %s due to error: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242669658](v15, -1, -1);
      MEMORY[0x242669658](v14, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v24 = (uint64_t)a1;
    v21 = a1;
    sub_23F2EB3F8(&qword_256E6BA70);
    return sub_23F33B630();
  }
}

void sub_23F318918(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23F31898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_23F33A97C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23F3189CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23F316AC8;
  return sub_23F317F44();
}

uint64_t sub_23F318A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsOnScreenContentSourceProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F318A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F318CA4();
  sub_23F318C7C();
  v3 = v0 + v2;

  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_23F2F6C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23F318AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsOnScreenContentSourceProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F318B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23F318CA4();
  sub_23F318C90();
  v5 = v1 + v4;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23F318B74;
  return sub_23F3183CC(a1, v5);
}

uint64_t sub_23F318B74()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_23F2F37A4(*(uint64_t (**)(void))(v2 + 8));
}

void sub_23F318BB4(uint64_t a1)
{
  uint64_t v1;

  sub_23F31851C(a1, *(void ***)(v1 + 16));
}

uint64_t sub_23F318BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F2EB3F8(&qword_256E6BA70);
  sub_23F318C7C();
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v1);
  return swift_deallocObject();
}

uint64_t sub_23F318C14(void *a1, void *a2)
{
  sub_23F2EB3F8(&qword_256E6BA70);
  sub_23F318C90();
  return sub_23F318674(a1, a2);
}

uint64_t sub_23F318C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F318C68()
{
  return swift_release();
}

uint64_t sub_23F318C70()
{
  return swift_task_alloc();
}

uint64_t sub_23F318CA4()
{
  return type metadata accessor for ShortcutsOnScreenContentSourceProvider();
}

uint64_t sub_23F318CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71[4];

  v2 = sub_23F33B1B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE798();
  v6 = v5 - v4;
  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE748();
  v69 = v8;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F2EE748();
  v65 = v10;
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F2EE748();
  v66 = v12;
  sub_23F2EB3F8(&qword_256E6A568);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F2EE798();
  v16 = v15 - v14;
  v17 = sub_23F33AA84();
  v68 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v67 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v60 = (uint64_t)&v58 - v20;
  sub_23F30D148(a1, (uint64_t)v71);
  if (!v71[3])
  {
    sub_23F2F0794((uint64_t)v71, &qword_256E6A290);
    v21 = 0;
    goto LABEL_15;
  }
  sub_23F31955C();
  if (!swift_dynamicCast())
  {
    sub_23F33AC1C();
    v36 = sub_23F33B1A4();
    v37 = sub_23F33B6E4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)v38 = 136315138;
      v39 = sub_23F30CD98();
      v70 = (id)sub_23F30DBFC(v39, v40, v71);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v36, v37, "unable to get source data for %s", v38, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    return MEMORY[0x24BEE4AF8];
  }
  v21 = v70;
  v22 = sub_23F3194F0(v21);
  if (!v23)
  {
LABEL_15:

    return MEMORY[0x24BEE4AF8];
  }
  v24 = v22;
  v25 = v23;
  v26 = MEMORY[0x24BEE4AF8];
  sub_23F2EB3F8(&qword_2543463D8);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23F33E710;
  *(_QWORD *)(v27 + 32) = v24;
  *(_QWORD *)(v27 + 40) = v25;
  v28 = sub_23F33B1BC();
  sub_23F3090FC();
  v71[0] = v26;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23F33B918();
    v29 = result;
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v59 = v21;
  if (v29)
  {
    if (v29 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    v31 = 0;
    do
    {
      if ((v28 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x242668F08](v31, v28);
      else
        v32 = *(id *)(v28 + 8 * v31 + 32);
      v33 = v32;
      ++v31;
      v34 = sub_23F33B78C();

      sub_23F3096CC(v34);
    }
    while (v29 != v31);
    sub_23F3195E0();
    v35 = v71[0];
    v21 = v59;
  }
  else
  {
    sub_23F3195E0();
    v35 = MEMORY[0x24BEE4AF8];
  }
  if (!(v35 >> 62))
  {
    v42 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v42)
      goto LABEL_24;
LABEL_37:

    sub_23F3090FC();
    v41 = MEMORY[0x24BEE4AF8];
LABEL_38:
    sub_23F3090FC();
    return v41;
  }
  swift_bridgeObjectRetain();
  result = sub_23F33B918();
  v42 = result;
  if (!result)
    goto LABEL_37;
LABEL_24:
  v64 = v17;
  if (v42 >= 1)
  {
    v63 = sub_23F33ABD4();
    v43 = 0;
    v44 = *MEMORY[0x24BEB9950];
    v61 = *MEMORY[0x24BEB9A00];
    v62 = v44;
    v41 = MEMORY[0x24BEE4AF8];
    do
    {
      v45 = v35;
      v46 = *(void **)(v35 + 8 * v43 + 32);
      sub_23F2EBFCC(v66, 1, 1, v63);
      v47 = sub_23F33B408();
      v48 = swift_allocBox();
      v50 = v49;
      v51 = v46;
      sub_23F33B3D8();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v50, v62, v47);
      v52 = (uint64_t)v65;
      *v65 = v48;
      v53 = sub_23F33B420();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v52, v61, v53);
      sub_23F2EBFCC(v52, 0, 1, v53);
      v54 = sub_23F33AAC0();
      sub_23F2EBFCC(v69, 1, 1, v54);
      sub_23F33AA54();
      v55 = v64;
      sub_23F2EBFCC(v16, 0, 1, v64);

      if (sub_23F2EBFC0(v16, 1, v55) == 1)
      {
        sub_23F2F0794(v16, &qword_256E6A568);
        v35 = v45;
      }
      else
      {
        v56 = v60;
        sub_23F3195F8(v60, v16);
        sub_23F3195F8(v67, v56);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_23F3195EC();
        v35 = v45;
        v57 = *(_QWORD *)(v41 + 16);
        if (v57 >= *(_QWORD *)(v41 + 24) >> 1)
          v41 = sub_23F3195EC();
        *(_QWORD *)(v41 + 16) = v57 + 1;
        sub_23F3195F8(v41+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v57, v67);
      }
      ++v43;
    }
    while (v42 != v43);

    sub_23F3090FC();
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23F319320()
{
  uint64_t v0;

  sub_23F2F6524(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31ShortcutsOnScreenPersonProvider_contextDefinition);
  return swift_deallocClassInstance();
}

uint64_t sub_23F319350()
{
  return type metadata accessor for ShortcutsOnScreenPersonProvider();
}

uint64_t type metadata accessor for ShortcutsOnScreenPersonProvider()
{
  uint64_t result;

  result = qword_256E6BAA0;
  if (!qword_256E6BAA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F319390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_23F2EB3F8(qword_256E69B30);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE798();
  v4 = v3 - v2;
  v5 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31ShortcutsOnScreenPersonProvider_contextDefinition;
  v6 = *MEMORY[0x24BE57268];
  v7 = sub_23F33A9E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = *MEMORY[0x24BE571C8];
  v9 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v4, v8, v9);
  sub_23F2EBFCC(v4, 0, 1, v9);
  v10 = type metadata accessor for ContextDefinition();
  v11 = (_QWORD *)(v5 + *(int *)(v10 + 20));
  *v11 = 0xD000000000000058;
  v11[1] = 0x800000023F33DDF0;
  sub_23F319598(v4, v5 + *(int *)(v10 + 24));
  return v0;
}

uint64_t sub_23F3194A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23F2EE49C(*v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31ShortcutsOnScreenPersonProvider_contextDefinition, a1);
}

uint64_t sub_23F3194B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F318CAC(a1);
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v2);
}

uint64_t sub_23F3194F0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_contactIdentifier);

  if (!v2)
    return 0;
  v3 = sub_23F33B51C();

  return v3;
}

unint64_t sub_23F31955C()
{
  unint64_t result;

  result = qword_256E6BB30;
  if (!qword_256E6BB30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E6BB30);
  }
  return result;
}

uint64_t sub_23F319598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(qword_256E69B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3195E0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F3195EC()
{
  return sub_23F30B9DC();
}

uint64_t sub_23F3195F8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_23F319600()
{
  sub_23F319648();
}

void sub_23F319624()
{
  sub_23F319648();
}

void sub_23F319648()
{
  void (*v0)(char *, uint64_t);
  void (*v1)(char *, uint64_t);
  unint64_t *v2;
  unint64_t *v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD v21[2];

  sub_23F305674();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = ((uint64_t (*)(_QWORD))v4)(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F31D3CC();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v21 - v14;
  sub_23F31D2AC(v3, v5);
  v21[1] = sub_23F33B6A8();
  v16 = *(_QWORD *)(v7 + 16);
  if (v16)
  {
    v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v21[0] = v7;
    v18 = v7 + v17;
    v19 = *(_QWORD *)(v9 + 72);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    do
    {
      v20(v12, v18, v8);
      v1(v15, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2FD7D0();
  }
  sub_23F2F37B0();
}

uint64_t sub_23F319770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  __int16 v8;
  uint64_t v9;

  v2 = sub_23F33B6A8();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = a1 + 2 * i;
      sub_23F32F4C4(&v8, *(unsigned __int16 *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_23F319804()
{
  sub_23F319648();
}

uint64_t sub_23F319828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_23F33B6A8();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_23F31D57C();
      sub_23F32F820(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    sub_23F2FD7D0();
    return v10;
  }
  else
  {
    v7 = v2;
    sub_23F2FD7D0();
  }
  return v7;
}

void sub_23F3198CC()
{
  sub_23F319648();
}

BOOL sub_23F3198F0(unsigned __int16 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  v4 = MEMORY[0x2426690AC](*(_QWORD *)(a2 + 40), a1, 2);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int16 *)(v8 + 2 * v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int16 *)(v8 + 2 * v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_23F3199BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  sub_23F305674();
  v1 = v0;
  sub_23F310D04();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F31D48C();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_23F31D2AC(&qword_254346208, (void (*)(uint64_t))MEMORY[0x24BE54398]);
    sub_23F31D464();
    sub_23F31D370();
    if ((v5 & 1) != 0)
    {
      sub_23F31D634();
      do
      {
        sub_23F31D4E0();
        sub_23F31D2AC(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
        sub_23F31D408();
        sub_23F31D3F0();
        if ((v4 & 1) != 0)
          break;
        sub_23F31D4C4();
      }
      while ((v6 & 1) != 0);
    }
  }
  sub_23F2F37B0();
}

void sub_23F319A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F33B9F0();
    sub_23F33B564();
    v6 = sub_23F33BA08();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_23F31D3DC();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_23F31D51C() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_23F31D3DC();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_23F31D51C() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_23F31D3DC();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_23F319B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  sub_23F305674();
  v1 = v0;
  sub_23F33AD30();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F31D48C();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_23F31D2AC(&qword_256E6BBB8, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
    sub_23F31D464();
    sub_23F31D370();
    if ((v5 & 1) != 0)
    {
      sub_23F31D634();
      do
      {
        sub_23F31D4E0();
        sub_23F31D2AC(qword_256E6BBC0, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
        sub_23F31D408();
        sub_23F31D3F0();
        if ((v4 & 1) != 0)
          break;
        sub_23F31D4C4();
      }
      while ((v6 & 1) != 0);
    }
  }
  sub_23F2F37B0();
}

uint64_t SiriEntityMatcherEntityDetector.supportedEntities.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);

  sub_23F2EB3F8(&qword_2543463C0);
  v0 = sub_23F310D04();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F33E720;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE54380], v0);
  v6(v5 + v2, *MEMORY[0x24BE54378], v0);
  return sub_23F2EBA7C(v4);
}

uint64_t SiriEntityMatcherEntityDetector.init(entityTypes:maxEntityCount:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  int *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v62;
  os_log_type_t v63;
  _DWORD *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  NSObject *v76;
  id v77;
  char *v78;
  void (*v79)(char *);
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  os_log_type_t v86;
  _DWORD *v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  void (*v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  id v110[12];
  uint64_t v111;
  uint64_t v112;

  sub_23F305674();
  v111 = v1;
  v112 = v2;
  v96 = v3;
  v109 = v4;
  v110[1] = *(id *)MEMORY[0x24BDAC8D0];
  v101 = sub_23F33A4A8();
  v98 = *(_QWORD *)(v101 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2EE798();
  v97 = v7 - v6;
  sub_23F2EB3F8((uint64_t *)&unk_2543461C0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v12 = sub_23F33B1B0();
  v106 = *(_QWORD *)(v12 - 8);
  v107 = v12;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F31D3CC();
  v16 = (char *)(v14 - v15);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F30C890();
  v102 = v18;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v96 - v20;
  sub_23F2EB3F8(&qword_2543461D0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F31D4A8();
  v23 = sub_23F33A568();
  v24 = *(_QWORD *)(v23 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F30C724();
  v99 = v26;
  sub_23F30C738();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v96 - v29;
  MEMORY[0x24BDAC7A8](v28);
  sub_23F31D5D8();
  v105 = v31;
  v108 = (int *)type metadata accessor for SiriEntityMatcherEntityDetector();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F31A4C0();
  v36 = v35;
  if (!*(_QWORD *)(v35 + 16))
  {
    sub_23F31D444();
    sub_23F33AC04();
    swift_bridgeObjectRetain();
    v62 = (void *)sub_23F33B1A4();
    v63 = sub_23F33B6D8();
    if (sub_23F31D4F4(v63))
    {
      v64 = (_DWORD *)sub_23F2F8874();
      v110[0] = (id)sub_23F2F8874();
      *v64 = 136315138;
      sub_23F310D04();
      sub_23F31D2AC(&qword_254346208, (void (*)(uint64_t))MEMORY[0x24BE54398]);
      swift_bridgeObjectRetain();
      v65 = sub_23F33B69C();
      v67 = v66;
      swift_bridgeObjectRelease();
      v68 = sub_23F30DBFC(v65, v67, (uint64_t *)v110);
      sub_23F31D53C(v68);
      sub_23F33B7BC();
      sub_23F31D584();
      swift_bridgeObjectRelease();
      sub_23F31D478(&dword_23F2E8000, v69, v70, "SiriEntityMatcher does not support %s");
      sub_23F31D52C();
      sub_23F2F3748();
    }

    sub_23F31D584();
    sub_23F31D608();
    v82 = v16;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  v37 = *MEMORY[0x24BE57858];
  v38 = sub_23F31D614();
  v100 = *(_QWORD *)(v38 - 8);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 104);
  v104 = v34;
  v40 = v34;
  v41 = v38;
  v39(v40, v37, v38);
  v42 = objc_msgSend((id)objc_opt_self(), sel_indexMatcher);
  v110[0] = 0;
  v103 = v42;
  v43 = objc_msgSend(v42, sel_indexLocale_, v110);
  v44 = v110[0];
  if (v43)
  {
    v45 = v43;
    sub_23F33A55C();
    v46 = v44;

    v47 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
    v47(v0, v30, v23);
    sub_23F31D5E4(v0, 0);
    if (sub_23F2EBFC0(v0, 1, v23) != 1)
    {
      v48 = v105;
      v47(v105, (char *)v0, v23);
      v49 = (void *)objc_opt_self();
      v50 = (void *)sub_23F33A550();
      v51 = objc_msgSend(v49, sel_getAssetPathForLocale_, v50);

      if (v51)
      {
        v52 = v97;
        sub_23F33A490();

        v53 = v101;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v11, v52, v101);
        sub_23F2EBFCC(v11, 0, 1, v53);
        if (sub_23F2EBFC0(v11, 1, v53) != 1)
        {
          sub_23F2F0794(v11, (uint64_t *)&unk_2543461C0);
          sub_23F2F0818(0, &qword_254346380);
          sub_23F31D59C((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
          v54 = sub_23F31A764((uint64_t)v30);
          v55 = v108;
          v56 = v103;
          v57 = (uint64_t)v104;
          *(_QWORD *)&v104[v108[6]] = v54;
          *(_QWORD *)(v57 + v55[5]) = v56;
          v58 = v57 + v55[7];
          *(_QWORD *)v58 = v96;
          *(_BYTE *)(v58 + 8) = 0;
          v59 = sub_23F319770(v36);
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v48, v23);
          *(_QWORD *)(v57 + v55[8]) = v59;
          v60 = v109;
          sub_23F31C89C(v57, v109);
          sub_23F2EBFCC(v60, 0, 1, (uint64_t)v55);
          return sub_23F31C8E0(v57);
        }
      }
      else
      {
        sub_23F2EBFCC(v11, 1, 1, v101);
      }
      sub_23F31D444();
      sub_23F2F0794(v11, (uint64_t *)&unk_2543461C0);
      v83 = v102;
      sub_23F33AC04();
      v84 = v99;
      sub_23F31D59C(v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
      v85 = (void *)sub_23F33B1A4();
      v86 = sub_23F33B6F0();
      if (sub_23F31D4F4(v86))
      {
        v87 = (_DWORD *)sub_23F2F8874();
        v88 = (void *)sub_23F2F8874();
        v101 = v41;
        v110[0] = v88;
        *v87 = 136315138;
        v89 = sub_23F33A544();
        v91 = sub_23F30DBFC(v89, v90, (uint64_t *)v110);
        sub_23F31D53C(v91);
        sub_23F33B7BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v84, v23);
        sub_23F31D478(&dword_23F2E8000, v92, v93, "SiriEntityMatcherEntityDetector initialization failed: no available morphun assets for %s to handle query. Skipping");
        sub_23F31D52C();
        sub_23F2F3748();
      }

      v94 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v94(v84, v23);
      sub_23F31D608();
      v95(v83);
      v94(v48, v23);
      v78 = v104;
      goto LABEL_18;
    }
  }
  else
  {
    v71 = v110[0];
    v72 = (void *)sub_23F33A454();

    swift_willThrow();
    sub_23F31D5E4(v0, 1);
  }
  sub_23F31D444();
  sub_23F2F0794(v0, &qword_2543461D0);
  sub_23F33AC04();
  v73 = sub_23F33B1A4();
  v74 = sub_23F33B6F0();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)sub_23F2F8874();
    *(_WORD *)v75 = 0;
    _os_log_impl(&dword_23F2E8000, v73, v74, "SiriEntityMatcherEntityDetector initialization failed: SEM has no available index and unable to handle query. Skipping", v75, 2u);
    sub_23F2F3748();
  }
  v76 = v73;
  v77 = v103;
  v78 = v104;

  sub_23F31D608();
  v79(v21);
LABEL_18:
  sub_23F31D5BC();
  v82 = v78;
  v80 = v41;
LABEL_19:
  v81(v82, v80);
  return sub_23F2EBFCC(v109, 1, 1, (uint64_t)v108);
}

void sub_23F31A4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  __int16 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F305674();
  v39 = v0;
  v40 = v1;
  v3 = v2;
  v4 = sub_23F310D04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F31D3CC();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - v10;
  v12 = v3 + 56;
  v13 = 1 << *(_BYTE *)(v3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v3 + 56);
  v38 = (unint64_t)(v13 + 63) >> 6;
  v16 = *MEMORY[0x24BE54380];
  v17 = *MEMORY[0x24BE54378];
  sub_23F2FF49C();
  v18 = 0;
  v36 = v3 + 56;
  v37 = MEMORY[0x24BEE4AF8];
  while (v15)
  {
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v20 = v19 | (v18 << 6);
LABEL_20:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v11, *(_QWORD *)(v3 + 48) + *(_QWORD *)(v5 + 72) * v20, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v11, v4);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v8, v4);
    if (v24 == v16)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F31D420();
        v37 = v31;
      }
      sub_23F31D55C();
      if (v27)
      {
        sub_23F31D3A8(v25);
        v26 = v35;
        v37 = v32;
      }
      v28 = 15757;
LABEL_33:
      v30 = v37;
      *(_QWORD *)(v37 + 16) = v26;
      *(_WORD *)(v30 + 2 * v12 + 32) = v28;
      v12 = v36;
    }
    else
    {
      if (v24 == v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F31D420();
          v37 = v33;
        }
        sub_23F31D55C();
        if (v27)
        {
          sub_23F31D3A8(v29);
          v26 = v35;
          v37 = v34;
        }
        v28 = 19668;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v21 >= v38)
    goto LABEL_34;
  v22 = *(_QWORD *)(v12 + 8 * v21);
  ++v18;
  if (v22)
    goto LABEL_19;
  v18 = v21 + 1;
  if (v21 + 1 >= v38)
    goto LABEL_34;
  v22 = *(_QWORD *)(v12 + 8 * v18);
  if (v22)
    goto LABEL_19;
  v18 = v21 + 2;
  if (v21 + 2 >= v38)
    goto LABEL_34;
  v22 = *(_QWORD *)(v12 + 8 * v18);
  if (v22)
  {
LABEL_19:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_20;
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_34:
    swift_release();
    return;
  }
  v22 = *(_QWORD *)(v12 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v38)
      goto LABEL_34;
    v22 = *(_QWORD *)(v12 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
}

id sub_23F31A764(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_23F33A550();
  v4 = objc_msgSend(v2, sel_initWithLocale_, v3);

  v5 = sub_23F33A568();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

void SiriEntityMatcherEntityDetector.detectEntities(text:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  unint64_t v49;
  id v50;
  __int128 v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  unsigned int v58;
  _BOOL8 v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unsigned __int16 v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[2];
  __int128 v125;
  __int128 v126;
  os_log_t v127;
  unsigned int v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  id v159[5];

  v159[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for SiriEntityMatcherEntityDetector();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F30C724();
  v148 = v3;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F30C890();
  v143 = v5;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F30C890();
  v142 = v7;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F30C890();
  v152 = v9;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F31D5D8();
  v145 = v11;
  v153 = sub_23F33B1B0();
  v151 = *(_QWORD *)(v153 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F30C724();
  v147 = v13;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F30C890();
  v146 = v15;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F30C890();
  v141 = v17;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F31D5D8();
  v144 = v19;
  v20 = sub_23F33AD30();
  v21 = *(_QWORD *)(v20 - 8);
  v149 = v20;
  v150 = v21;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F2EE798();
  v25 = v24 - v23;
  v26 = sub_23F33AF04();
  v27 = *(NSObject **)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F31D3CC();
  v30 = v28 - v29;
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v124 - v32;
  v158 = MEMORY[0x24BEE4AF8];
  v154 = v1;
  v155 = v0;
  v34 = *(void **)(v0 + *(int *)(v1 + 24));
  v35 = (void *)sub_23F33B4F8();
  v36 = objc_msgSend(v34, sel_queryFromText_, v35);

  sub_23F2EB3F8(&qword_256E6BB38);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_23F33F6D0;
  sub_23F31D450();
  v38 = v156;
  v39 = sub_23F31C6C8(0x3D98u);
  if (v38)
  {
    *(_QWORD *)(v37 + 16) = 0;

    swift_release();
  }
  else
  {
    v156 = v33;
    v137 = v30;
    v138 = v27;
    v139 = v26;
    v140 = v25;
    v40 = v154;
    v41 = v155;
    *(_QWORD *)(v37 + 32) = v39;
    sub_23F31D450();
    sub_23F31D628();
    *(_QWORD *)(v37 + 40) = sub_23F31C6C8(0x4CDFu);
    sub_23F31D450();
    sub_23F31D628();
    *(_QWORD *)(v37 + 48) = sub_23F31C6C8(0x4CE1u);
    sub_23F31D450();
    sub_23F31D628();
    *(_QWORD *)(v37 + 56) = sub_23F31C6C8(0x4CE0u);
    sub_23F31D450();
    sub_23F31D628();
    v42 = sub_23F31C6C8(0x4CE3u);
    v130 = 0;
    *(_QWORD *)(v37 + 64) = v42;
    v159[0] = (id)v37;
    sub_23F33B5DC();
    v43 = (uint64_t)v159[0];
    if ((unint64_t)v159[0] >> 62)
    {
LABEL_72:
      sub_23F2FF49C();
      sub_23F2EB3F8(&qword_256E6BBA0);
      sub_23F31D550();
      v123 = sub_23F33B90C();
      swift_bridgeObjectRelease_n();
      v43 = v123;
    }
    else
    {
      v44 = (unint64_t)v159[0] & 0xFFFFFFFFFFFFFF8;
      sub_23F2FF49C();
      sub_23F33B984();
      sub_23F2EB3F8(&qword_256E6BBA0);
      if (swift_dynamicCastMetatype() || (v119 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
      }
      else
      {
        v136 = v43;
        v135 = v44;
        v120 = v44 + 32;
        while (1)
        {
          v159[2] = &unk_256E6E580;
          v159[3] = &unk_256E70A48;
          if (!swift_dynamicCastObjCProtocolConditional())
            break;
          v120 += 8;
          if (!--v119)
          {
            v43 = v136;
            goto LABEL_6;
          }
        }
        swift_bridgeObjectRelease();
        v43 = v135 | 1;
      }
    }
    sub_23F31CC00(v43, v36);
    v157 = MEMORY[0x24BEE4AF8];
    v45 = *(void **)(v41 + *(int *)(v40 + 20));
    v159[0] = 0;
    v46 = objc_msgSend(v45, sel_matchSpans_error_, v36, v159);
    v47 = v159[0];
    if (v46)
    {
      v48 = v46;
      v129 = v36;
      sub_23F2F0818(0, &qword_256E6BBA8);
      sub_23F31D550();
      v49 = sub_23F33B5D0();
      v50 = v47;

      v135 = v49;
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        v52 = sub_23F33B918();
        swift_bridgeObjectRelease();
        if (v52)
          goto LABEL_10;
      }
      else
      {
        v52 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v52)
        {
LABEL_10:
          v134 = v135 & 0xC000000000000001;
          v40 = 4;
          v128 = *MEMORY[0x24BE540E8];
          *(_QWORD *)&v51 = 136315138;
          v125 = v51;
          v124[1] = MEMORY[0x24BEE4AD8] + 8;
          *(_QWORD *)&v51 = 136315394;
          v126 = v51;
          v133 = v52;
          do
          {
            if (v134)
              v53 = (id)MEMORY[0x242668F08](v40 - 4, v135);
            else
              v53 = *(id *)(v135 + 8 * v40);
            v54 = v53;
            v41 = v40 - 3;
            if (__OFADD__(v40 - 4, 1))
            {
              __break(1u);
              goto LABEL_72;
            }
            v55 = objc_msgSend(v53, sel_entityInfo);
            objc_opt_self();
            v36 = v55;
            v56 = (void *)swift_dynamicCastObjCClass();
            if (!v56)
            {
              sub_23F31D61C();
              sub_23F31D334();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v121 = sub_23F33AB44();
              sub_23F31D2AC(&qword_256E6BBB0, (void (*)(uint64_t))MEMORY[0x24BE578F0]);
              swift_allocError();
              (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v121 - 8) + 104))(v122, *MEMORY[0x24BE578E8], v121);
              swift_willThrow();

              sub_23F31D648();
              return;
            }
            v57 = v56;
            v136 = v40;
            v58 = objc_msgSend(v56, sel_itemType);
            v59 = sub_23F3198F0(v58, *(_QWORD *)(v155 + *(int *)(v154 + 32)));
            if (v59)
            {
              if (v58 == 19668)
              {
                v64 = sub_23F31D3C4(v59, sel_content);
                objc_opt_self();
                sub_23F31D550();
                v65 = swift_dynamicCastObjCClass();

                if (!v65)
                {
                  sub_23F31D5A8();
                  v88 = v146;
                  sub_23F33AC34();
                  v89 = v143;
                  sub_23F31C89C(v155, v143);
                  sub_23F33B1A4();
                  v90 = sub_23F31D5D0();
                  if (sub_23F31D398(v90))
                  {
                    sub_23F2F8874();
                    v91 = sub_23F31D348();
                    sub_23F31D358(v91);
                    sub_23F31C89C(v89, v152);
                    v92 = sub_23F33B540();
                    *(_QWORD *)(v88 + 4) = sub_23F31D438(v92, v93);
                    swift_bridgeObjectRelease();
                    sub_23F31C8E0(v89);
                    sub_23F31D570(&dword_23F2E8000, v27, (os_log_type_t)v57, "%s SEMSpanMatchResult is a Contact match, but is unable to be casted to CCContactContent");
                    swift_arrayDestroy();
                    sub_23F2F3748();
                  }
                  sub_23F31D33C();
                  sub_23F31D334();
                  sub_23F31C8E0(v89);

                  sub_23F31D5BC();
                  v111 = v88;
                  goto LABEL_61;
                }
                v66 = sub_23F31CC64(v57);
                swift_bridgeObjectRelease();
                if (!v66)
                {
                  v131 = v40 - 3;
                  v96 = v141;
                  sub_23F33AC34();
                  v97 = v142;
                  sub_23F31D514(v155);
                  sub_23F33B1A4();
                  v98 = sub_23F31D5D0();
                  if (sub_23F31D398(v98))
                  {
                    sub_23F2F8874();
                    v99 = sub_23F31D348();
                    sub_23F31D358(v99);
                    sub_23F31D514(v97);
                    v100 = sub_23F31D458();
                    v132 = v54;
                    *(_QWORD *)(v96 + 4) = sub_23F30DBFC(v100, v101, (uint64_t *)v159);
                    swift_bridgeObjectRelease();
                    sub_23F31C8E0(v142);
                    v85 = v27;
                    v86 = OS_LOG_TYPE_DEFAULT;
                    v87 = "%s SEMSpanMatchResult is a Contact match, but could not fetch meta contents";
LABEL_39:
                    sub_23F31D570(&dword_23F2E8000, v85, v86, v87);
                    swift_arrayDestroy();
                    sub_23F2F3748();
                  }

                  sub_23F31D334();
                  sub_23F31C8E0(v97);

                  v110 = *(uint64_t (**)(uint64_t, uint64_t))(v151 + 8);
                  v111 = v96;
LABEL_61:
                  sub_23F31D5C8(v111, v110);
LABEL_62:
                  v116 = v133;
                  v41 = v131;
                  goto LABEL_58;
                }
                v67 = objc_msgSend(v54, sel_spanInfo);
                v68 = objc_msgSend(v67, sel_isApproximateMatch);

                if (v68)
                {

                }
                else
                {
                  v109 = v54;
                  MEMORY[0x242668C80]();
                  if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_23F33B5E8();
                  sub_23F33B60C();
                  sub_23F33B5DC();

                }
                sub_23F31D334();
              }
              else if (v58 == 15757)
              {
                v27 = sub_23F31D3C4(v59, sel_content);
                objc_opt_self();
                v60 = (void *)swift_dynamicCastObjCClass();
                if (!v60)
                {
                  sub_23F31D5A8();

                  v78 = v144;
                  sub_23F33AC34();
                  v79 = v145;
                  sub_23F31C89C(v155, v145);
                  sub_23F33B1A4();
                  v80 = sub_23F31D5D0();
                  if (sub_23F31D398(v80))
                  {
                    sub_23F2F8874();
                    v81 = sub_23F31D348();
                    sub_23F31D358(v81);
                    sub_23F31D514(v79);
                    v82 = sub_23F31D458();
                    v84 = sub_23F31D438(v82, v83);
                    sub_23F31D504(v84);
                    sub_23F31C8E0(v79);
                    v85 = v27;
                    v86 = v57;
                    v87 = "%s SEMSpanMatchResult is a SignificantLocation match, but is unable to be casted to CCSignific"
                          "antLocationContent";
                    goto LABEL_39;
                  }
                  sub_23F31D33C();
                  sub_23F31D334();
                  sub_23F31C8E0(v79);

                  sub_23F31D5C8(v78, *(uint64_t (**)(uint64_t, uint64_t))(v151 + 8));
                  goto LABEL_62;
                }
                v61 = sub_23F31CCC4(v60);
                v132 = v62;
                v63 = sub_23F31D3C4(v61, sel_address);
                if (v63)
                {
                  v63 = (id)sub_23F31CD24(v63, (SEL *)&selRef_locality);
                  v131 = (uint64_t)v63;
                }
                else
                {
                  v131 = 0;
                }
                v94 = v149;
                v95 = sub_23F31D3C4((uint64_t)v63, sel_address);
                if (v95)
                  sub_23F31CD24(v95, (SEL *)&selRef_country);
                v102 = sub_23F33AE74();
                v103 = sub_23F31D3C4(v102, sel_address);
                if (v103)
                {
                  v104 = sub_23F31CD24(v103, (SEL *)&selRef_thoroughfare);
                  if (v105)
                  {
                    v106 = sub_23F31D3C4(v104, sel_address);
                    if (v106)
                    {
                      v107 = (void *)sub_23F31CD24(v106, (SEL *)&selRef_subThoroughfare);
                      if (v108)
                      {
                        v159[0] = v107;
                        v159[1] = v108;
                        sub_23F33B57C();
                        sub_23F33B57C();
                        swift_bridgeObjectRelease();
                      }
                    }
                    sub_23F33AEBC();
                  }
                }
                ((void (*)(uint64_t, char *, uint64_t))v138[2].isa)(v137, v156, v139);
                v112 = v140;
                sub_23F33ADC0();
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v150 + 104))(v112, v128, v94);
                v113 = v158;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v113 = sub_23F31D5F0();
                v114 = *(_QWORD *)(v113 + 16);
                v115 = v150;
                if (v114 >= *(_QWORD *)(v113 + 24) >> 1)
                {
                  v117 = sub_23F31D5F0();
                  v115 = v150;
                  v113 = v117;
                }
                *(_QWORD *)(v113 + 16) = v114 + 1;
                (*(void (**)(unint64_t))(v115 + 32))(v113+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(_QWORD *)(v115 + 72) * v114);
                sub_23F31D334();

                v158 = v113;
                ((void (*)(char *, uint64_t))v138[1].isa)(v156, v139);
              }
              else
              {
                v132 = v54;
                v69 = v147;
                sub_23F33AC34();
                v70 = v148;
                sub_23F31C89C(v155, v148);
                swift_unknownObjectRetain_n();
                v71 = sub_23F33B1A4();
                v72 = sub_23F33B6E4();
                LODWORD(v131) = v72;
                if (os_log_type_enabled((os_log_t)v71, v72))
                {
                  sub_23F2F8874();
                  v127 = (os_log_t)v71;
                  v159[0] = (id)sub_23F31D348();
                  *(_DWORD *)v71 = v126;
                  sub_23F31D514(v70);
                  v73 = sub_23F31D458();
                  v75 = sub_23F31D438(v73, v74);
                  sub_23F31D504(v75);
                  sub_23F31C8E0(v70);
                  *(_WORD *)(v71 + 12) = 512;
                  v76 = (unsigned __int16)objc_msgSend(v57, sel_itemType);
                  sub_23F31D334();
                  *(_WORD *)(v71 + 14) = v76;
                  sub_23F31D334();
                  _os_log_impl(&dword_23F2E8000, v127, (os_log_type_t)v131, "%s SEMSpanMatchResult has an item type %hu that cannot be converted. Skipping", (uint8_t *)v71, 0x10u);
                  swift_arrayDestroy();
                  sub_23F2F3748();
                }
                sub_23F31D33C();
                swift_unknownObjectRelease_n();
                sub_23F31C8E0(v70);

                sub_23F31D334();
                sub_23F31D5BC();
                sub_23F31D5C8(v69, v77);
              }
            }
            else
            {

              sub_23F31D334();
            }
            v116 = v133;
LABEL_58:
            v40 = v136 + 1;
          }
          while (v41 != v116);
        }
      }
      sub_23F31D61C();
      sub_23F31B728();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23F30959C();
      swift_bridgeObjectRelease();
      sub_23F31D648();
    }
    else
    {
      v118 = v159[0];
      swift_bridgeObjectRelease();
      sub_23F33A454();

      swift_willThrow();
    }
  }
}

void sub_23F31B728()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;

  sub_23F305674();
  v3 = v2;
  sub_23F2EB3F8(&qword_256E6BBE8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F31D4A8();
  v5 = sub_23F33AD30();
  v34 = *(_QWORD *)(v5 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F30C724();
  v33 = v7;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F31D5D8();
  v31 = v9;
  v36 = MEMORY[0x24BEE4AF8];
  if (v3 >> 62)
    goto LABEL_11;
  v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_23F31D58C();
  for (; v10; v10 = sub_23F33B918())
  {
    v11 = 0;
    v12 = 4;
    while (1)
    {
      v13 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x242668F08](v12 - 4, v3) : *(id *)(v3 + 8 * v12);
      v1 = v13;
      v14 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      v35 = v13;
      sub_23F31BA50((unint64_t)&v36, &v35);

      ++v12;
      if (v14 == v10)
      {
        sub_23F31D594();
        v15 = v36;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    sub_23F31D58C();
  }
  sub_23F31D594();
  v11 = 0;
  v15 = MEMORY[0x24BEE4AF8];
LABEL_13:
  v16 = sub_23F31D58C();
  v17 = sub_23F31C168(v16, v15);
  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_23F31D57C();
    if (v18)
      goto LABEL_15;
LABEL_30:
    sub_23F31D584();
    sub_23F2F37B0();
    return;
  }
  sub_23F31D57C();
  v18 = sub_23F33B918();
  if (!v18)
    goto LABEL_30;
LABEL_15:
  if (v18 >= 1)
  {
    v19 = v5;
    v20 = 0;
    v21 = v17 & 0xC000000000000001;
    v22 = MEMORY[0x24BEE4AF8];
    do
    {
      if (v21)
        v23 = (id)MEMORY[0x242668F08](v20, v17);
      else
        v23 = *(id *)(v17 + 8 * v20 + 32);
      v24 = v23;
      v36 = (uint64_t)v23;
      sub_23F31C320((id *)&v36, v0);

      if (sub_23F2EBFC0(v0, 1, v19) == 1)
      {
        sub_23F2F0794(v0, &qword_256E6BBE8);
      }
      else
      {
        v32 = v11;
        v25 = v19;
        v26 = v21;
        v27 = v18;
        v28 = v17;
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
        v29(v31, v0, v25);
        v29(v33, v31, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_23F31D5FC();
        v30 = *(_QWORD *)(v22 + 16);
        if (v30 >= *(_QWORD *)(v22 + 24) >> 1)
          v22 = sub_23F31D5FC();
        *(_QWORD *)(v22 + 16) = v30 + 1;
        v29(v22+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v30, v33, v25);
        v17 = v28;
        v18 = v27;
        v21 = v26;
        v19 = v25;
        v11 = v32;
      }
      ++v20;
    }
    while (v18 != v20);
    goto LABEL_30;
  }
  __break(1u);
  sub_23F31D594();

  sub_23F2FD7D0();
  __break(1u);
}

void sub_23F31BA50(unint64_t a1, id *a2)
{
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  unsigned __int16 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v3 = *a2;
  v4 = objc_msgSend(*a2, sel_fieldMatches);
  sub_23F2F0818(0, (unint64_t *)&unk_256E6BBF8);
  v5 = sub_23F33B5D0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23F33B918();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v35 = a1;
  if (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      v21 = sub_23F33B918();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x242668F08](v7, v5);
      else
        v9 = *(id *)(v5 + 8 * v7 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_entityFieldInfo);
      objc_opt_self();
      v12 = (void *)swift_dynamicCastObjCClass();
      if (v12)
      {
        v13 = (unsigned __int16)objc_msgSend(v12, sel_fieldType);

        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F30B8E0(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
          v8 = v16;
        }
        v15 = *(_QWORD *)(v8 + 16);
        v14 = *(_QWORD *)(v8 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_23F30B8E0(v14 > 1, v15 + 1, 1, v8);
          v8 = v17;
        }
        *(_QWORD *)(v8 + 16) = v15 + 1;
        *(_WORD *)(v8 + 2 * v15 + 32) = v13;
      }
      else
      {

        swift_unknownObjectRelease();
      }
      ++v7;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease_n();
  sub_23F2EB3F8((uint64_t *)&unk_2543463F0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23F33E720;
  *(_DWORD *)(v18 + 32) = 1289833695;
  sub_23F2EB3F8(&qword_256E6BC08);
  sub_23F31D2F0();
  v19 = sub_23F33B6B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    return;
  v20 = objc_msgSend(v3, sel_fieldMatches);
  a1 = sub_23F33B5D0();

  if (a1 >> 62)
    goto LABEL_35;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_20:
  if (v21)
  {
    v36 = MEMORY[0x24BEE4AF8];
    sub_23F2F2F3C();
    if (v21 < 0)
    {
      __break(1u);
      return;
    }
    v22 = 0;
    v23 = v36;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v24 = (id)MEMORY[0x242668F08](v22, a1);
      else
        v24 = *(id *)(a1 + 8 * v22 + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_fieldSpanValue);
      v27 = sub_23F33B51C();
      v29 = v28;

      v30 = *(_QWORD *)(v36 + 16);
      if (v30 >= *(_QWORD *)(v36 + 24) >> 1)
        sub_23F2F2F3C();
      ++v22;
      *(_QWORD *)(v36 + 16) = v30 + 1;
      v31 = v36 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v29;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
  }
  v32 = sub_23F319828(v23);
  sub_23F31C79C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F30BBCC);
  v33 = *(_QWORD *)(*(_QWORD *)v35 + 16);
  sub_23F31C80C(v33, (uint64_t (*)(BOOL))sub_23F30BBCC);
  v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 16) = v33 + 1;
  *(_QWORD *)(v34 + 8 * v33 + 32) = v32;
  *(_QWORD *)v35 = v34;
}

void sub_23F31BE98(id *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *a1;
  v5 = objc_msgSend(*a1, sel_spanInfo);
  v6 = objc_msgSend(v5, sel_isPartialMatch);

  if ((v6 & 1) != 0)
    return;
  v7 = objc_msgSend(v4, sel_fieldMatches);
  sub_23F2F0818(0, (unint64_t *)&unk_256E6BBF8);
  v8 = sub_23F33B5D0();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_23F33B918();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_4:
      v28 = MEMORY[0x24BEE4AF8];
      sub_23F2F2F3C();
      if (v9 < 0)
      {
        __break(1u);
        return;
      }
      v26 = a2;
      v27 = v2;
      v10 = 0;
      v11 = v28;
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x242668F08](v10, v8);
        else
          v12 = *(id *)(v8 + 8 * v10 + 32);
        v13 = v12;
        v14 = objc_msgSend(v12, sel_fieldSpanValue, v26, v27);
        v15 = sub_23F33B51C();
        v17 = v16;

        v18 = *(_QWORD *)(v28 + 16);
        if (v18 >= *(_QWORD *)(v28 + 24) >> 1)
          sub_23F2F2F3C();
        ++v10;
        *(_QWORD *)(v28 + 16) = v18 + 1;
        v19 = v28 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v15;
        *(_QWORD *)(v19 + 40) = v17;
      }
      while (v9 != v10);
      swift_bridgeObjectRelease();
      a2 = v26;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x24BEE4AF8];
LABEL_15:
  v20 = sub_23F319828(v11);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    v22 = 0;
    v23 = v21 - 1;
    do
    {
      if (*(_QWORD *)(v20 + 16) < *(_QWORD *)(*(_QWORD *)(a2 + 8 * v22 + 32) + 16)
        && (v24 = swift_bridgeObjectRetain(), v25 = sub_23F31C91C(v24, v20), swift_bridgeObjectRelease(), (v25 & 1) != 0))
      {
        if (v23 == v22)
          goto LABEL_25;
      }
      else if (v23 == v22)
      {
        goto LABEL_25;
      }
      ++v22;
    }
    while (!__OFADD__(v22, 1));
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F31C168(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  id v15;
  uint64_t v16;

  v3 = v2;
  v16 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v8 = a1 & 0xC000000000000001;
      while (v8)
      {
        v9 = (id)MEMORY[0x242668F08](v7, a1);
LABEL_7:
        v10 = v9;
        v11 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_17;
        v15 = v9;
        sub_23F31BE98(&v15, a2);
        if (v3)
        {
          swift_bridgeObjectRelease();

          v13 = v16;
          swift_bridgeObjectRelease();
          swift_release();
          return v13;
        }
        if ((v12 & 1) != 0)
        {
          sub_23F33B87C();
          sub_23F33B894();
          v3 = 0;
          sub_23F33B8A0();
          sub_23F33B888();
          v8 = a1 & 0xC000000000000001;
        }
        else
        {

        }
        ++v7;
        if (v11 == v6)
        {
          v13 = v16;
          goto LABEL_20;
        }
      }
      if (v7 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v6 = sub_23F33B918();
      if (!v6)
        goto LABEL_19;
    }
    v9 = *(id *)(a1 + 8 * v7 + 32);
    goto LABEL_7;
  }
LABEL_19:
  v13 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23F31C320@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v3 = v2;
  v6 = sub_23F2EB3F8(&qword_256E6BBF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23F33AD78();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(*a1, sel_entityInfo);
  objc_opt_self();
  v13 = (void *)swift_dynamicCastObjCClass();
  if (v13 && (v14 = v13, (v38 = sub_23F31CC64(v13)) != 0))
  {
    v35 = v12;
    v15 = (uint64_t)objc_msgSend(v14, sel_content);
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      if (v38 >> 62)
        goto LABEL_19;
      v16 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v16)
      {
        v31 = v11;
        v32 = (id)v15;
        v30 = v9;
        v33 = a2;
        v34 = v3;
        v36 = v38 & 0xC000000000000001;
        v15 = 4;
        while (1)
        {
          a2 = v16;
          v11 = (char *)(v15 - 4);
          v17 = v36 ? (id)MEMORY[0x242668F08](v15 - 4, v38) : *(id *)(v38 + 8 * v15);
          v18 = v17;
          v19 = v15 - 3;
          if (__OFADD__(v11, 1))
            break;
          v20 = objc_msgSend(v17, sel_sourceItemIdentifier);
          sub_23F33B51C();
          v9 = v21;

          v3 = sub_23F33B714();
          swift_bridgeObjectRelease();
          sub_23F33AD3C();

          if (sub_23F2EBFC0((uint64_t)v8, 1, v37) != 1)
          {

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v24 = v31;
            v25 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
            v26 = v37;
            v25(v31, v8, v37);
            v27 = v33;
            v25((char *)v33, v24, v26);
            v28 = *MEMORY[0x24BE540E0];
            v29 = sub_23F33AD30();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
            return sub_23F2EBFCC(v27, 0, 1, v29);
          }
          sub_23F2F0794((uint64_t)v8, &qword_256E6BBF0);
          ++v15;
          v16 = a2;
          if (v19 == a2)
          {

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v33;
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        v16 = sub_23F33B918();
        swift_bridgeObjectRelease();
      }

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_15:
  v22 = sub_23F33AD30();
  return sub_23F2EBFCC(a2, 1, 1, v22);
}

uint64_t sub_23F31C6A0()
{
  return SiriEntityMatcherEntityDetector.supportedEntities.getter();
}

void sub_23F31C6B4()
{
  SiriEntityMatcherEntityDetector.detectEntities(text:)();
}

id sub_23F31C6C8(unsigned __int16 a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_initWithFieldType_error_, a1, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_23F33A454();

    swift_willThrow();
  }
  return v2;
}

void sub_23F31C778()
{
  sub_23F31C79C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F30B608);
}

void sub_23F31C784()
{
  sub_23F31C79C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F30B9A4);
}

void sub_23F31C790()
{
  sub_23F31C79C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F30B9C0);
}

void sub_23F31C79C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  sub_23F2EBFB0();
}

uint64_t sub_23F31C7E8(uint64_t a1)
{
  return sub_23F31C80C(a1, (uint64_t (*)(BOOL))sub_23F30B608);
}

uint64_t sub_23F31C7F4(uint64_t a1)
{
  return sub_23F31C80C(a1, (uint64_t (*)(BOOL))sub_23F30B9A4);
}

uint64_t sub_23F31C800(uint64_t a1)
{
  return sub_23F31C80C(a1, (uint64_t (*)(BOOL))sub_23F30B9C0);
}

uint64_t sub_23F31C80C(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t type metadata accessor for SiriEntityMatcherEntityDetector()
{
  uint64_t result;

  result = qword_254346230;
  if (!qword_254346230)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F31C884(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F31C89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriEntityMatcherEntityDetector();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F31C8E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SiriEntityMatcherEntityDetector();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F31C91C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t i;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v3 = a2;
  v4 = a1;
  v31 = a2 + 56;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v30 = (unint64_t)(63 - v5) >> 6;
  v32 = a1 + 56;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v12)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (i << 6);
      v12 = i;
      goto LABEL_23;
    }
    v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 >= v30)
      goto LABEL_40;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v12 = i + 1;
    if (!v14)
    {
      v12 = i + 2;
      if (i + 2 >= v30)
        goto LABEL_40;
      v14 = *(_QWORD *)(v31 + 8 * v12);
      if (!v14)
      {
        v12 = i + 3;
        if (i + 3 >= v30)
          goto LABEL_40;
        v14 = *(_QWORD *)(v31 + 8 * v12);
        if (!v14)
          break;
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_23:
    if (!*(_QWORD *)(v4 + 16))
    {
      v2 = 0;
      goto LABEL_41;
    }
    v16 = v3;
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v19 = *v17;
    v18 = v17[1];
    sub_23F33B9F0();
    swift_bridgeObjectRetain();
    sub_23F33B564();
    v20 = sub_23F33BA08();
    v21 = v4;
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = v20 & ~v22;
    if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_38;
    v24 = *(_QWORD *)(v21 + 48);
    v25 = (_QWORD *)(v24 + 16 * v23);
    v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_23F33B978() & 1) == 0)
    {
      v27 = ~v22;
      while (1)
      {
        v23 = (v23 + 1) & v27;
        if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          break;
        v28 = (_QWORD *)(v24 + 16 * v23);
        v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_23F33B978() & 1) != 0)
          goto LABEL_37;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      v2 = 0;
LABEL_41:
      sub_23F31D2E8();
      return v2;
    }
LABEL_37:
    result = swift_bridgeObjectRelease();
    v3 = v16;
    v4 = v21;
  }
  v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_40:
    v2 = 1;
    goto LABEL_41;
  }
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v12 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v30)
      goto LABEL_40;
    v14 = *(_QWORD *)(v31 + 8 * v12);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_44:
  __break(1u);
  return result;
}

void sub_23F31CC00(uint64_t a1, void *a2)
{
  id v3;

  sub_23F2EB3F8(&qword_256E6BBA0);
  v3 = (id)sub_23F33B5C4();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setEntityFilters_, v3);

}

uint64_t sub_23F31CC64(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_allMetaContent);
  if (!v1)
    return 0;
  v2 = v1;
  sub_23F2EB3F8(&qword_256E6BBE0);
  v3 = sub_23F33B5D0();

  return v3;
}

uint64_t sub_23F31CCC4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_preferredName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23F33B51C();

  return v3;
}

uint64_t sub_23F31CD24(void *a1, SEL *a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, *a2);

  if (!v3)
    return 0;
  v4 = sub_23F33B51C();

  return v4;
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriEntityMatcherEntityDetector(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F33AB38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v16 = v10;
    v17 = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SiriEntityMatcherEntityDetector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33AB38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriEntityMatcherEntityDetector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  v6 = sub_23F33AB38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v15 = v9;
  v16 = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SiriEntityMatcherEntityDetector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v6 = sub_23F33AB38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SiriEntityMatcherEntityDetector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F33AB38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for SiriEntityMatcherEntityDetector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F33AB38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriEntityMatcherEntityDetector()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F31D134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F31D614();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F2EBFC0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriEntityMatcherEntityDetector()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F31D1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F31D614();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F2EBFCC(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F2EBFB0();
  }
}

uint64_t sub_23F31D21C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33AB38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F31D2AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    a2(255);
    v4 = sub_23F31D550();
    result = MEMORY[0x2426695B0](v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F31D2E8()
{
  return swift_release();
}

unint64_t sub_23F31D2F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6BC10;
  if (!qword_256E6BC10)
  {
    v1 = sub_23F2F244C(&qword_256E6BC08);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256E6BC10);
  }
  return result;
}

uint64_t sub_23F31D334()
{
  return swift_unknownObjectRelease();
}

void sub_23F31D33C()
{
  uint64_t v0;

}

uint64_t sub_23F31D348()
{
  return swift_slowAlloc();
}

__n128 sub_23F31D358(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 128) = a1;
  result = *(__n128 *)(v2 - 416);
  *v1 = result.n128_u32[0];
  return result;
}

BOOL sub_23F31D398(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F31D3A8(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = v1;
  sub_23F30B8E0(a1 > 1, v1, 1, *(_QWORD *)(v2 - 96));
}

id sub_23F31D3C4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F31D3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_23F31D408()
{
  return sub_23F33B4EC();
}

void sub_23F31D420()
{
  uint64_t v0;

  sub_23F30B8E0(0, *(_QWORD *)(*(_QWORD *)(v0 - 96) + 16) + 1, 1, *(_QWORD *)(v0 - 96));
}

uint64_t sub_23F31D438(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23F30DBFC(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_23F31D444()
{
  uint64_t v0;

  return sub_23F31C884(v0, 2u);
}

id sub_23F31D450()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 3200));
}

uint64_t sub_23F31D458()
{
  return sub_23F33B540();
}

uint64_t sub_23F31D464()
{
  return sub_23F33B4BC();
}

void sub_23F31D478(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F31D4A8()
{
  return 0;
}

uint64_t sub_23F31D4E0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v3, *(_QWORD *)(v0 + 48) + v5 * v4, v2);
}

BOOL sub_23F31D4F4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F31D504(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F31D514(uint64_t a1)
{
  uint64_t v1;

  return sub_23F31C89C(a1, v1);
}

uint64_t sub_23F31D51C()
{
  return sub_23F33B978();
}

uint64_t sub_23F31D52C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F31D53C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_23F31D550()
{
  uint64_t v0;

  return v0;
}

void sub_23F31D570(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F31D57C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F31D584()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F31D58C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F31D594()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F31D59C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void sub_23F31D5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 344) = v0;
  *(_QWORD *)(v2 - 352) = v1;
}

uint64_t sub_23F31D5C8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F31D5D0()
{
  return sub_23F33B6E4();
}

uint64_t sub_23F31D5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F2EBFCC(a1, a2, 1, v2);
}

uint64_t sub_23F31D5F0()
{
  return sub_23F30B608();
}

uint64_t sub_23F31D5FC()
{
  return sub_23F30B608();
}

uint64_t sub_23F31D614()
{
  return sub_23F33AB38();
}

uint64_t sub_23F31D61C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F31D648()
{
  uint64_t v0;

}

uint64_t sub_23F31D654()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F31D660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F31D688()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F31D694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F311FD0();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SiriRequestContextProvider()
{
  uint64_t result;

  result = qword_256E6BC78;
  if (!qword_256E6BC78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F31D6F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE6A0();
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F2EE798();
  v6 = v5 - v4;
  sub_23F33ABC8();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE798();
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v12 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
  sub_23F31E5BC();
  v13 = objc_msgSend(v1, sel_Orchestration);
  swift_unknownObjectRelease();
  v14 = objc_msgSend(v13, sel_RequestContext);
  sub_23F31E5BC();
  v15 = sub_23F2ECEEC(v1, 0, 0);

  if (!v15)
    return MEMORY[0x24BEE4AF8];
  sub_23F2EB3F8(&qword_256E69DD8);
  sub_23F33AA84();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23F33E710;
  sub_23F31D90C();
  sub_23F33ABE0();
  v17 = sub_23F33ABD4();
  sub_23F31E5A8(v11, v18, v19, v17);
  v20 = sub_23F33B420();
  sub_23F2EE6B8(v6, v21, v22, v20);
  v23 = sub_23F33AAC0();
  sub_23F2EE6B8(v0, v24, v25, v23);
  sub_23F33AA54();

  return v16;
}

void sub_23F31D90C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = sub_23F33AB98();
  v78 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F2EE798();
  v5 = v4 - v3;
  sub_23F2EB3F8(&qword_256E6BCB8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE748();
  v72 = v7;
  sub_23F2EB3F8(&qword_256E6BCC0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE748();
  v73 = v9;
  sub_23F2EB3F8(&qword_256E6BCC8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F2EE6A0();
  sub_23F2EB3F8(&qword_256E6BCD0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F2EE748();
  v74 = v12;
  sub_23F31E5B4(v13, (SEL *)&selRef_sessionID);
  sub_23F31E5B4(v14, (SEL *)&selRef_requestID);
  sub_23F31E5B4(v15, (SEL *)&selRef_inputOrigin);
  sub_23F31E5B4(v16, (SEL *)&selRef_responseMode);
  v18 = sub_23F2EE720(v17, sel_isEyesFree);
  v19 = sub_23F2EE720((uint64_t)v18, sel_isMultiUser);
  v20 = sub_23F2EE720((uint64_t)v19, sel_isVoiceTriggerEnabled);
  v21 = sub_23F2EE720((uint64_t)v20, sel_isTextToSpeechEnabled);
  v22 = sub_23F2EE720((uint64_t)v21, sel_isTriggerlessFollowup);
  v23 = sub_23F2EE720((uint64_t)v22, sel_deviceRestrictions);
  sub_23F33B5D0();

  v25 = sub_23F2EE720(v24, sel_bargeInModes);
  sub_23F33B5D0();

  v27 = sub_23F2EE720(v26, sel_identifiedUser);
  if (v27)
    sub_23F31E4F4(v27, (SEL *)&selRef_userID);
  v28 = sub_23F2EE720((uint64_t)v27, sel_identifiedUser);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, sel_isOnlyUserInHome);

  }
  v30 = sub_23F2EE720((uint64_t)v28, sel_identifiedUser);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, sel_classification);

    sub_23F31E3C0(v32, v0);
    v33 = sub_23F33AB68();
    v34 = 0;
  }
  else
  {
    v33 = sub_23F33AB68();
    v34 = 1;
  }
  sub_23F2EBFCC(v0, v34, 1, v33);
  sub_23F33AB74();
  v35 = sub_23F33AB80();
  sub_23F31E5A8(v74, v36, v37, v35);
  v38 = sub_23F31E458(v1);
  sub_23F31E5B4(v38, (SEL *)&selRef_countryCode);
  sub_23F31E5B4(v39, (SEL *)&selRef_siriLocale);
  v41 = sub_23F2EE720(v40, sel_contentRestrictions);
  v42 = v41;
  if (v41)
  {
    objc_msgSend(v41, sel_appRestriction);

  }
  v43 = sub_23F2EE720((uint64_t)v41, sel_contentRestrictions);
  if (v43)
    sub_23F31E4F4(v43, (SEL *)&selRef_countryCode);
  v44 = sub_23F2EE720((uint64_t)v43, sel_contentRestrictions);
  v45 = v44;
  if (v44)
  {
    objc_msgSend(v44, sel_movieRestriction);

  }
  v46 = sub_23F2EE720((uint64_t)v44, sel_contentRestrictions);
  v47 = v46;
  if (v46)
  {
    objc_msgSend(v46, sel_tvRestriction);

  }
  sub_23F33AB50();
  v48 = sub_23F33AB5C();
  sub_23F31E5A8(v73, v49, v50, v48);
  sub_23F31E5B4((uint64_t)objc_msgSend(v1, sel_uiScale), (SEL *)&selRef_temperatureUnit);
  v52 = sub_23F2EE720(v51, sel_allowUserGeneratedContent);
  v53 = sub_23F2EE720((uint64_t)v52, sel_censorSpeech);
  v54 = sub_23F2EE720((uint64_t)v53, sel_meCard);
  if (v54)
    sub_23F31E4F4(v54, (SEL *)&selRef_givenName);
  v55 = sub_23F2EE720((uint64_t)v54, sel_meCard);
  if (v55)
    sub_23F31E4F4(v55, (SEL *)&selRef_middleName);
  v56 = sub_23F2EE720((uint64_t)v55, sel_meCard);
  if (v56)
    sub_23F31E4F4(v56, (SEL *)&selRef_familyName);
  v57 = sub_23F2EE720((uint64_t)v56, sel_meCard);
  if (v57)
    sub_23F31E4F4(v57, (SEL *)&selRef_nickName);
  v58 = sub_23F2EE720((uint64_t)v57, sel_meCard);
  if (v58)
    sub_23F31E4F4(v58, (SEL *)&selRef_fullName);
  v59 = sub_23F2EE720((uint64_t)v58, sel_meCard);
  v60 = MEMORY[0x24BEE4AF8];
  if (!v59)
    goto LABEL_40;
  v61 = v59;
  v62 = objc_msgSend(v59, sel_addresses);

  sub_23F31E4B8();
  v63 = sub_23F33B5D0();

  if (!(v63 >> 62))
  {
    v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v64)
      goto LABEL_29;
LABEL_39:
    sub_23F30F0EC();
LABEL_40:
    sub_23F33ABA4();
    v69 = sub_23F33ABB0();
    sub_23F31E5A8(v72, v70, v71, v69);
    sub_23F33ABBC();
    return;
  }
  swift_bridgeObjectRetain();
  v64 = sub_23F33B918();
  sub_23F30F0EC();
  if (!v64)
    goto LABEL_39;
LABEL_29:
  sub_23F2F2E34();
  if ((v64 & 0x8000000000000000) == 0)
  {
    v65 = 0;
    v75 = v63 & 0xC000000000000001;
    v76 = v64;
    v77 = v63;
    do
    {
      if (v75)
        v66 = (id)MEMORY[0x242668F08](v65, v63);
      else
        v66 = *(id *)(v63 + 8 * v65 + 32);
      v67 = v66;
      sub_23F31E554(v66, (SEL *)&selRef_label);
      sub_23F31E554(v67, (SEL *)&selRef_street);
      sub_23F31E554(v67, (SEL *)&selRef_city);
      sub_23F31E554(v67, (SEL *)&selRef_state);
      sub_23F31E554(v67, (SEL *)&selRef_postalCode);
      sub_23F31E554(v67, (SEL *)&selRef_countryCode);
      sub_23F33AB8C();

      v68 = *(_QWORD *)(v60 + 16);
      if (v68 >= *(_QWORD *)(v60 + 24) >> 1)
        sub_23F2F2E34();
      ++v65;
      *(_QWORD *)(v60 + 16) = v68 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v78 + 32))(v60+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v68, v5, v79);
      v63 = v77;
    }
    while (v76 != v65);
    goto LABEL_39;
  }
  __break(1u);
}

uint64_t sub_23F31E38C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F31D6F8();
  return sub_23F2EE1F8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t sub_23F31E3C0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  switch(a1)
  {
    case 1:
      v3 = (unsigned int *)MEMORY[0x24BE579E0];
      break;
    case 2:
      v3 = (unsigned int *)MEMORY[0x24BE579E8];
      break;
    case 3:
      v3 = (unsigned int *)MEMORY[0x24BE579D0];
      break;
    case 4:
      v3 = (unsigned int *)MEMORY[0x24BE579F8];
      break;
    default:
      v3 = (unsigned int *)MEMORY[0x24BE579D8];
      break;
  }
  v4 = *v3;
  v5 = sub_23F33AB68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t sub_23F31E458(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_encodedLocation);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23F33A4C0();

  return v3;
}

unint64_t sub_23F31E4B8()
{
  unint64_t result;

  result = qword_256E6BCD8;
  if (!qword_256E6BCD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_256E6BCD8);
  }
  return result;
}

void sub_23F31E4F4(void *a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend(a1, *a2);

  if (v3)
  {
    sub_23F33B51C();

  }
  sub_23F2EBFB0();
}

void sub_23F31E554(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_23F33B51C();

  }
  sub_23F2EBFB0();
}

uint64_t sub_23F31E5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F2EBFCC(a1, 0, 1, a4);
}

void sub_23F31E5B4(uint64_t a1, SEL *a2)
{
  void *v2;

  sub_23F31E554(v2, a2);
}

uint64_t sub_23F31E5BC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F31E5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  v5 = sub_23F33A97C();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = sub_23F2F6B70();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[21] = AssociatedTypeWitness;
  v4[22] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[23] = sub_23F2F6B70();
  v7 = sub_23F33B8C4();
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = sub_23F2F8824();
  v4[27] = sub_23F2F8838();
  v8 = sub_23F33B8DC();
  v4[28] = v8;
  v4[29] = *(_QWORD *)(v8 - 8);
  v4[30] = sub_23F2F6B70();
  v9 = sub_23F33B138();
  v4[31] = v9;
  v4[32] = *(_QWORD *)(v9 - 8);
  v4[33] = sub_23F2F8824();
  v4[34] = sub_23F2F8838();
  v10 = sub_23F33B1B0();
  v4[35] = v10;
  v4[36] = *(_QWORD *)(v10 - 8);
  v4[37] = sub_23F2F8824();
  v4[38] = sub_23F2F8838();
  v11 = sub_23F33B15C();
  v4[39] = v11;
  v4[40] = *(_QWORD *)(v11 - 8);
  v4[41] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F31E708()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint8_t *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);

  sub_23F33AC1C();
  sub_23F33B144();
  sub_23F33B150();
  sub_23F33B120();
  v1 = sub_23F33B150();
  v2 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v3 = (uint8_t *)sub_23F2F8874();
    *(_WORD *)v3 = 0;
    v4 = sub_23F33B12C();
    _os_signpost_emit_with_name_impl(&dword_23F2E8000, v1, v2, v4, "IFCR.SourceProvider", "", v3, 2u);
    sub_23F2F3748();
  }
  v5 = v0[33];
  v6 = v0[34];
  v7 = v0[31];
  v8 = v0[32];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
  sub_23F33B18C();
  swift_allocObject();
  v0[42] = sub_23F33B180();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  sub_23F33B8D0();
  sub_23F33B8AC();
  v9 = (_QWORD *)sub_23F31F3AC();
  v0[43] = v9;
  *v9 = v0;
  v9[1] = sub_23F31E88C;
  return v11(v0[23], v0[15], v0[16]);
}

uint64_t sub_23F31E88C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F31E8F0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  float v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String_optional v41;

  sub_23F33AC1C();
  v1 = sub_23F33B1A4();
  v2 = sub_23F33B6D8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = (uint8_t *)sub_23F2F8874();
    v5 = sub_23F2F8874();
    *(_DWORD *)v4 = 136315138;
    v40 = v5;
    *(_QWORD *)(v0 + 96) = v3;
    swift_getMetatypeMetadata();
    v6 = sub_23F33B540();
    *(_QWORD *)(v0 + 104) = sub_23F30DBFC(v6, v7, &v40);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F2E8000, v1, v2, "fetching source data completed for %s", v4, 0xCu);
    swift_arrayDestroy();
    sub_23F2F3748();
  }
  v9 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 280);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v36 = *(_QWORD *)(v0 + 328);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 312);
  v26 = *(_QWORD *)(v0 + 240);
  v27 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 192);
  v35 = *(_QWORD *)(v0 + 184);
  v31 = *(_QWORD *)(v0 + 176);
  v32 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 120);
  v30 = *(_QWORD *)(v0 + 112);
  sub_23F2EB3F8(&qword_256E6A3D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33E720;
  *(_QWORD *)(inited + 32) = 0x7954656372756F73;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  sub_23F2F0818(0, &qword_256E6A3E0);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
  sub_23F33A970();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  *(_QWORD *)(inited + 48) = sub_23F32A1B0();
  type metadata accessor for Analytics();
  *(_QWORD *)(inited + 56) = 0x79636E6574616CLL;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  sub_23F33B8AC();
  sub_23F33B8B8();
  v17 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v17(v25, v29);
  v18 = sub_23F33BA14();
  v20 = (double)v18 * 1000.0 + (double)v19 * 1.0e-15;
  v21 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  *(float *)&v22 = v20;
  *(_QWORD *)(inited + 72) = objc_msgSend(v21, sel_initWithFloat_, v22);
  sub_23F2F0818(0, (unint64_t *)&qword_254346390);
  v23 = (void *)sub_23F33B4B0();
  v41.value._countAndFlagsBits = 0;
  v41.value._object = 0;
  static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(1920298835, 1684633199, v41, v23);
  swift_bridgeObjectRelease();
  v17(v27, v29);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v26, v34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v35, v33);
  sub_23F31F05C(v36, "IFCR.SourceProvider", 19, 2, v37, v15);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F31ED98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_23F31F05C(v1, "IFCR.SourceProvider", 19, 2, v2, v7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F31EED0()
{
  uint64_t result;

  result = sub_23F31EEEC();
  qword_256E6D168 = result;
  return result;
}

uint64_t sub_23F31EEEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t *, uint64_t, uint64_t);
  objc_class *v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;

  sub_23F2EB3F8(&qword_256E6AEE0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F33F290;
  *(_QWORD *)(v0 + 56) = type metadata accessor for SRRSourceProvider();
  *(_QWORD *)(v0 + 64) = &off_256E6BEC8;
  v1 = sub_23F2F6A44((uint64_t *)(v0 + 32));
  v2 = *MEMORY[0x24BE571B8];
  v3 = sub_23F33A97C();
  v4 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104);
  v4(v1, v2, v3);
  v5 = (objc_class *)type metadata accessor for PlaceInferenceSourceProvider();
  v6 = objc_msgSend(objc_allocWithZone(v5), sel_init);
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = &off_256E6B7F0;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 136) = type metadata accessor for UIContextSourceProvider();
  *(_QWORD *)(v0 + 144) = &off_256E6C0C0;
  v7 = sub_23F2F6A44((uint64_t *)(v0 + 112));
  v4(v7, *MEMORY[0x24BE571D0], v3);
  v8 = type metadata accessor for ShortcutsOnScreenContentSourceProvider();
  *(_QWORD *)(v0 + 176) = v8;
  *(_QWORD *)(v0 + 184) = &off_256E6BA28;
  v9 = sub_23F2F6A44((uint64_t *)(v0 + 152));
  *v9 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedService);
  v4((uint64_t *)((char *)v9 + *(int *)(v8 + 20)), *MEMORY[0x24BE571C8], v3);
  return v0;
}

uint64_t sub_23F31F05C(uint64_t a1, const char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  uint64_t result;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_signpost_id_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v32 = a6;
  v35 = (char *)a2;
  v7 = sub_23F33B168();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33B138();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v34 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - v15;
  v17 = sub_23F33B150();
  sub_23F33B174();
  v33 = sub_23F33B75C();
  result = sub_23F33B798();
  if ((result & 1) == 0)
    goto LABEL_5;
  v31 = v12;
  if ((a4 & 1) == 0)
  {
    if (!v35)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v35 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v35 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v35 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v35 = &v38;
LABEL_10:
  swift_retain();
  sub_23F33B198();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x24BEE7810])
  {
    v19 = 0;
    v30 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v30 = "SourceProvider=%{signpost.telemetry:string1,public}s %s";
    v19 = 2;
  }
  v20 = v34;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v16, v11);
  v21 = swift_slowAlloc();
  v22 = swift_slowAlloc();
  v37 = v22;
  *(_BYTE *)v21 = v19;
  *(_BYTE *)(v21 + 1) = v19;
  *(_WORD *)(v21 + 2) = 2082;
  v36 = v32;
  swift_getMetatypeMetadata();
  v23 = sub_23F33B540();
  v36 = sub_23F30DBFC(v23, v24, &v37);
  sub_23F33B7BC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2080;
  sub_23F33AA18();
  v25 = sub_23F33B834();
  v36 = sub_23F30DBFC(v25, v26, &v37);
  sub_23F33B7BC();
  swift_bridgeObjectRelease();
  v27 = sub_23F33B12C();
  _os_signpost_emit_with_name_impl(&dword_23F2E8000, v17, (os_signpost_type_t)v33, v27, v35, v30, (uint8_t *)v21, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x242669658](v22, -1, -1);
  MEMORY[0x242669658](v21, -1, -1);

  v28 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28(v16, v11);
  return ((uint64_t (*)(char *, uint64_t))v28)(v20, v11);
}

uint64_t sub_23F31F3AC()
{
  return swift_task_alloc();
}

uint64_t sub_23F31F3C0(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  float v14;
  float v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_23F2F2EB8(0, v3, 0);
    v5 = v18;
    v6 = *(_QWORD *)(sub_23F33AB20() - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v17 = *(_QWORD *)(v6 + 72);
    do
    {
      v8 = a2;
      v9 = COERCE_DOUBLE(sub_23F320D6C(a2));
      v11 = v10;
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      if (v13 >= v12 >> 1)
        sub_23F2F2EB8((char *)(v12 > 1), v13 + 1, 1);
      v14 = v9;
      v15 = 1.0 - v14;
      if ((v11 & 1) != 0)
        v15 = 1.0;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      *(float *)(v18 + 4 * v13 + 32) = v15;
      v7 += v17;
      --v3;
      a2 = v8;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_23F31F518(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_23F2F2EB8(0, v2, 0);
    result = v8;
    v4 = (int *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_23F2F2EB8((char *)(v6 > 1), v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_DWORD *)(result + 4 * v7 + 32) = v5;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_23F31F5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_23F31F5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_23F3212A8();
    sub_23F3232D4();
    v3 = (uint64_t *)(v1 + 40);
    while (1)
    {
      v4 = *(_QWORD *)(v0 + 64);
      v6 = *(v3 - 1);
      v5 = *v3;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v0 + 24) = v4;
      *(_QWORD *)(v0 + 32) = v6;
      *(_QWORD *)(v0 + 40) = v5;
      swift_bridgeObjectRetain();
      if ((sub_23F33B7E0() & 1) != 0)
        break;
      v3 += 2;
      sub_23F2FD7D0();
      if (!--v2)
      {
        sub_23F31D584();
        goto LABEL_6;
      }
    }
    sub_23F31D584();
  }
  else
  {
LABEL_6:
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    sub_23F3212A8();
    sub_23F3232D4();
    v9 = (unint64_t *)(v7 + 40);
    while (1)
    {
      v10 = *(_QWORD *)(v0 + 64);
      v12 = *(v9 - 1);
      v11 = *v9;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v0 + 24) = v10;
      *(_QWORD *)(v0 + 32) = v12;
      *(_QWORD *)(v0 + 40) = v11;
      swift_bridgeObjectRetain();
      if ((sub_23F33B7E0() & 1) != 0)
        break;
      v9 += 2;
      swift_bridgeObjectRelease();
      if (!--v8)
      {
        sub_23F31D584();
        goto LABEL_13;
      }
    }
    sub_23F31D584();
    if (!v5)
    {
LABEL_17:
      if (!v11)
      {
        v13 = 0;
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
      }
      goto LABEL_18;
    }
  }
  else
  {
LABEL_13:
    v12 = 0;
    v11 = 0;
    if (!v5)
      goto LABEL_17;
  }
  if (v11)
  {
LABEL_18:
    v13 = sub_23F31FF74(*(_QWORD *)(v0 + 48), v12, v11, v6, v5);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v13 = sub_23F3201C0(*(_QWORD *)(v0 + 48), v6, v5);
LABEL_19:
  sub_23F2FD7D0();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_23F31F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  int v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  unint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v4 = sub_23F2EB3F8(&qword_256E6A068);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F33AB20();
  v8 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  v79 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_23F2EB3F8(&qword_256E6A048);
  v11 = MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v67 = (char *)&v54 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v66 = (char *)&v54 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v65 = (char *)&v54 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v54 - v19;
  v63 = sub_23F2EB3F8(&qword_256E6BDD0);
  v20 = MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v61 = (unint64_t *)((char *)&v54 - v23);
  MEMORY[0x24BDAC7A8](v22);
  v60 = (uint64_t *)((char *)&v54 - v24);
  v80 = MEMORY[0x24BEE4AF8];
  sub_23F2F2ED4();
  v25 = *(_QWORD *)(a1 + 16);
  v55 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = v25;
  if (v25)
  {
    v26 = 0;
    v27 = v55 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
    v56 = *(_QWORD *)(v79 + 72);
    v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 16);
    v58 = a2;
    v57 = v10;
    v28 = v78;
    v29 = v66;
    while (1)
    {
      result = v77(v10, v27, v78);
      v31 = *(_QWORD *)(a2 + 16);
      if (v26 == v31)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v10, v78);
        goto LABEL_12;
      }
      if (v26 >= v31)
        break;
      v76 = v27;
      v32 = *(_DWORD *)(a2 + 4 * v26 + 32);
      v33 = v69;
      v34 = *(int *)(v69 + 48);
      v74 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
      v35 = v65;
      v74(v65, v10, v28);
      *(_DWORD *)&v35[v34] = v32;
      v36 = (uint64_t)v35;
      v37 = v64;
      sub_23F323248(v36, v64, &qword_256E6A048);
      v38 = v63;
      v39 = (uint64_t)&v62[*(int *)(v63 + 48)];
      sub_23F323248(v37, v39, &qword_256E6A048);
      v40 = (uint64_t)v61;
      v41 = (uint64_t)v61 + *(int *)(v38 + 48);
      v75 = v26;
      *v61 = v26;
      sub_23F323248(v39, v41, &qword_256E6A048);
      v42 = v60;
      sub_23F323248(v40, (uint64_t)v60, &qword_256E6BDD0);
      v43 = *v42;
      v44 = *(_DWORD *)((char *)v42 + *(int *)(v38 + 48) + *(int *)(v33 + 48));
      v72 = *(int *)(v71 + 64);
      v73 = v43;
      v45 = (void (*)(char *, char *, uint64_t))v77;
      ((void (*)(char *))v77)(v29);
      v46 = *(int *)(v33 + 48);
      *(_DWORD *)&v29[v46] = v44;
      v47 = v67;
      v45(v67, v29, v28);
      *(_DWORD *)&v47[v46] = v44;
      sub_23F33AB08();
      v48 = *(void (**)(char *, uint64_t))(v79 + 8);
      v48(v47, v28);
      v49 = *(int *)(v33 + 48);
      v50 = v68;
      v74(v68, v29, v28);
      *(_DWORD *)&v50[v49] = v44;
      v48(v50, v28);
      *v6 = v73;
      *(_DWORD *)((char *)v6 + v72) = v44;
      sub_23F2F0794((uint64_t)v42, &qword_256E6BDD0);
      v51 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F2F2ED4();
        v51 = v80;
      }
      v52 = *(_QWORD *)(v51 + 16);
      v10 = v57;
      v53 = v75;
      if (v52 >= *(_QWORD *)(v51 + 24) >> 1)
      {
        sub_23F2F2ED4();
        v51 = v80;
      }
      v26 = v53 + 1;
      *(_QWORD *)(v51 + 16) = v52 + 1;
      sub_23F323248((uint64_t)v6, v51+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v52, &qword_256E6A068);
      v27 = v76 + v56;
      a2 = v58;
      if (v59 == v26)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v80;
  }
  return result;
}

_QWORD *sub_23F31FCEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_23F2EB3F8(&qword_2543463D8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23F33F7C0;
  *(_QWORD *)(v1 + 32) = 0x7466656C20706F74;
  *(_QWORD *)(v1 + 40) = 0xE800000000000000;
  *(_QWORD *)(v1 + 48) = 0x746E656320706F74;
  *(_QWORD *)(v1 + 56) = 0xEA00000000007265;
  *(_QWORD *)(v1 + 64) = 0x6867697220706F74;
  *(_QWORD *)(v1 + 72) = 0xE900000000000074;
  sub_23F3232B8();
  *(_QWORD *)(v3 + 80) = v2 & 0xFFFFFFFFFFFFLL | 0x6C20000000000000;
  *(_QWORD *)(v3 + 88) = 0xEB00000000746665;
  sub_23F3232B8();
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = 0xE600000000000000;
  sub_23F3232B8();
  *(_QWORD *)(v7 + 112) = v6 & 0xFFFFFFFFFFFFLL | 0x7220000000000000;
  *(_QWORD *)(v7 + 120) = 0xEC00000074686769;
  sub_23F32328C();
  *(_QWORD *)(v9 + 128) = v8 & 0xFFFFFFFFFFFFLL | 0x6C20000000000000;
  *(_QWORD *)(v9 + 136) = v10;
  sub_23F32328C();
  *(_QWORD *)(v12 + 144) = v11 & 0xFFFFFFFFFFFFLL | 0x6320000000000000;
  *(_QWORD *)(v12 + 152) = 0xED00007265746E65;
  sub_23F32328C();
  v14[20] = v13 & 0xFFFFFFFFFFFFLL | 0x7220000000000000;
  v14[21] = v15;
  v14[22] = 7368564;
  v14[23] = 0xE300000000000000;
  sub_23F32328C();
  v16[24] = v17;
  v16[25] = 0xE600000000000000;
  v16[26] = 1952867692;
  v16[27] = 0xE400000000000000;
  v16[28] = 0x7468676972;
  v16[29] = 0xE500000000000000;
  v16[30] = 0x656C6464696DLL;
  v16[31] = 0xE600000000000000;
  v0[2] = v16;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23F33EB10;
  *(_QWORD *)(v18 + 32) = 0x7473726966;
  *(_QWORD *)(v18 + 40) = 0xE500000000000000;
  *(_QWORD *)(v18 + 48) = 0x646E6F636573;
  *(_QWORD *)(v18 + 56) = 0xE600000000000000;
  *(_QWORD *)(v18 + 64) = 0x6472696874;
  *(_QWORD *)(v18 + 72) = 0xE500000000000000;
  *(_QWORD *)(v18 + 80) = 0x687472756F66;
  *(_QWORD *)(v18 + 88) = 0xE600000000000000;
  *(_QWORD *)(v18 + 96) = 0x6874666966;
  *(_QWORD *)(v18 + 104) = 0xE500000000000000;
  *(_QWORD *)(v18 + 112) = 0x6874786973;
  *(_QWORD *)(v18 + 120) = 0xE500000000000000;
  *(_QWORD *)(v18 + 128) = 0x68746E65766573;
  *(_QWORD *)(v18 + 136) = 0xE700000000000000;
  *(_QWORD *)(v18 + 144) = 0x687468676965;
  *(_QWORD *)(v18 + 152) = 0xE600000000000000;
  *(_QWORD *)(v18 + 160) = 0x68746E696ELL;
  *(_QWORD *)(v18 + 168) = 0xE500000000000000;
  *(_QWORD *)(v18 + 176) = 0x68746E6574;
  *(_QWORD *)(v18 + 184) = 0xE500000000000000;
  v0[3] = v18;
  v0[4] = 0x7466656C20706F74;
  v0[5] = 0xE800000000000000;
  v20 = v1;
  sub_23F3232D4();
  sub_23F32132C(&v20, (uint64_t (*)(uint64_t))sub_23F323220, (uint64_t (*)(_QWORD *))sub_23F3213A4);
  sub_23F2FD7D0();
  v0[2] = v20;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23F31FF74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v11 = sub_23F33B1B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F320284();
  if ((v16 & 1) != 0)
  {
    sub_23F33AC1C();
    swift_bridgeObjectRetain_n();
    v19 = sub_23F33B1A4();
    v20 = sub_23F33B6F0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v29 = v22;
      v27 = a1;
      *(_DWORD *)v21 = 136315138;
      v26 = v21 + 4;
      swift_bridgeObjectRetain();
      v28 = sub_23F30DBFC(a2, a3, &v29);
      a1 = v27;
      sub_23F33B7BC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F2E8000, v19, v20, "couldn't convert ordinal keyword to ordinal number for %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242669658](v22, -1, -1);
      MEMORY[0x242669658](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return sub_23F2FEC30(*(_QWORD *)(a1 + 16), 0.0);
  }
  else
  {
    v17 = v15;
    if (a5)
    {
      v18 = a5;
    }
    else
    {
      a4 = *(_QWORD *)(v5 + 32);
      v18 = *(_QWORD *)(v5 + 40);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    v24 = sub_23F3201C0(a1, a4, v18);
    swift_bridgeObjectRelease();
    v25 = sub_23F3203E4(a1, v24, v17);
    swift_bridgeObjectRelease();
    return v25;
  }
}

uint64_t sub_23F3201C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a3)
  {
    v4 = sub_23F320AEC();
    if (!v4)
      return sub_23F2FEC30(*(_QWORD *)(a1 + 16), 0.0);
    v5 = v4;
    swift_bridgeObjectRetain();
    v6 = sub_23F31F3C0(a1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (v7)
    {
      v6 = sub_23F33B600();
      *(_QWORD *)(v6 + 16) = v7;
      bzero((void *)(v6 + 32), 4 * v7);
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return v6;
}

uint64_t sub_23F320284()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F2EB3F8(&qword_256E6BDD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33EB10;
  *(_QWORD *)(inited + 32) = 0x7473726966;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_OWORD *)(inited + 48) = xmmword_23F33F7D0;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_OWORD *)(inited + 72) = xmmword_23F33F7E0;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_OWORD *)(inited + 96) = xmmword_23F33F7F0;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  *(_OWORD *)(inited + 120) = xmmword_23F33F800;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  *(_OWORD *)(inited + 144) = xmmword_23F33F810;
  *(_QWORD *)(inited + 160) = 0xE500000000000000;
  *(_OWORD *)(inited + 168) = xmmword_23F33F820;
  *(_QWORD *)(inited + 184) = 0xE700000000000000;
  *(_OWORD *)(inited + 192) = xmmword_23F33F830;
  *(_QWORD *)(inited + 208) = 0xE600000000000000;
  *(_OWORD *)(inited + 216) = xmmword_23F33F840;
  *(_QWORD *)(inited + 232) = 0xE500000000000000;
  *(_OWORD *)(inited + 240) = xmmword_23F33F850;
  *(_QWORD *)(inited + 256) = 0xE500000000000000;
  *(_QWORD *)(inited + 264) = 10;
  v1 = sub_23F33B4B0();
  v2 = sub_23F33B54C();
  v4 = sub_23F30F4A0(v2, v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23F3203E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t result;
  _QWORD v80[2];
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;

  v92 = a3;
  v5 = sub_23F33A9E8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v80 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v80 - v12;
  v87 = sub_23F2EB3F8(&qword_256E6A068);
  v14 = *(_QWORD *)(v87 - 8);
  v15 = MEMORY[0x24BDAC7A8](v87);
  v86 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (_QWORD *)((char *)v80 - v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = 0;
  v20 = sub_23F31F7C8(a1, a2);
  swift_bridgeObjectRelease();
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v20 + 16);
  v90 = v6;
  v91 = v5;
  if (v22)
  {
    v23 = v21;
    v24 = v21 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v83 = *(_QWORD *)(v14 + 72);
    v80[1] = v23;
    v81 = 0;
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)MEMORY[0x24BEE4B00];
    v84 = v18;
    v85 = v13;
    do
    {
      v89 = v22;
      sub_23F3212E4(v24, (uint64_t)v18);
      v26 = *(int *)(v87 + 48);
      v27 = &v86[v26];
      v28 = *(int *)(v87 + 64);
      v88 = *v18;
      v29 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v29(&v86[v26], (char *)v18 + v26, v5);
      v30 = *(_DWORD *)((char *)v18 + v28);
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v27, v5);
      v29(v11, v13, v5);
      swift_isUniquelyReferenced_nonNull_native();
      v93 = v25;
      sub_23F2F6194();
      if (__OFADD__(v25[2], (v32 & 1) == 0))
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        sub_23F33B9A8();
        __break(1u);
LABEL_61:
        result = swift_release();
        __break(1u);
        return result;
      }
      v33 = v31;
      v34 = v32;
      sub_23F2EB3F8(&qword_256E6BDB8);
      v35 = sub_23F33B8E8();
      v25 = v93;
      v37 = v90;
      v36 = v91;
      if ((v35 & 1) != 0)
      {
        sub_23F2F6194();
        if ((v34 & 1) != (v39 & 1))
          goto LABEL_60;
        v33 = v38;
      }
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        v25[(v33 >> 6) + 8] |= 1 << v33;
        v29((char *)(v25[6] + *(_QWORD *)(v37 + 72) * v33), v11, v36);
        *(_QWORD *)(v25[7] + 8 * v33) = MEMORY[0x24BEE4AF8];
        v40 = v25[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_58;
        v25[2] = v42;
      }
      v43 = v25[7];
      v44 = *(_QWORD *)(v43 + 8 * v33);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v43 + 8 * v33) = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23F30BA4C();
        v44 = v50;
        *(_QWORD *)(v43 + 8 * v33) = v50;
      }
      v46 = v89;
      v47 = *(_QWORD *)(v44 + 16);
      if (v47 >= *(_QWORD *)(v44 + 24) >> 1)
      {
        sub_23F30BA4C();
        v44 = v51;
        *(_QWORD *)(v43 + 8 * v33) = v51;
      }
      *(_QWORD *)(v44 + 16) = v47 + 1;
      v48 = v44 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v88;
      *(_DWORD *)(v48 + 40) = v30;
      v6 = v90;
      v5 = v91;
      v49 = *(void (**)(char *, uint64_t))(v90 + 8);
      v49(v11, v91);
      v13 = v85;
      v49(v85, v5);
      v18 = v84;
      sub_23F2F0794((uint64_t)v84, &qword_256E6A068);
      v24 += v83;
      v22 = v46 - 1;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v19 = v81;
  }
  else
  {
    v25 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  swift_bridgeObjectRelease();
  v52 = sub_23F322F38((uint64_t)v25);
  v86 = v19;
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 64);
  v88 = v52 + 64;
  v54 = 1 << *(_BYTE *)(v52 + 32);
  v55 = -1;
  if (v54 < 64)
    v55 = ~(-1 << v54);
  v56 = v55 & v53;
  v89 = (unint64_t)(v54 + 63) >> 6;
  swift_retain();
  v57 = 0;
  v58 = MEMORY[0x24BEE4AF8];
  v59 = v82;
  v87 = v52;
  while (1)
  {
    if (v56)
    {
      v60 = __clz(__rbit64(v56));
      v56 &= v56 - 1;
      v61 = v60 | (v57 << 6);
      goto LABEL_37;
    }
    v41 = __OFADD__(v57++, 1);
    if (v41)
      goto LABEL_57;
    if (v57 >= v89)
      break;
    v62 = *(_QWORD *)(v88 + 8 * v57);
    if (!v62)
    {
      v63 = v57 + 1;
      if (v57 + 1 >= v89)
        break;
      v62 = *(_QWORD *)(v88 + 8 * v63);
      if (!v62)
      {
        v63 = v57 + 2;
        if (v57 + 2 >= v89)
          break;
        v62 = *(_QWORD *)(v88 + 8 * v63);
        if (!v62)
        {
          v63 = v57 + 3;
          if (v57 + 3 >= v89)
            break;
          v62 = *(_QWORD *)(v88 + 8 * v63);
          if (!v62)
          {
            v63 = v57 + 4;
            if (v57 + 4 >= v89)
              break;
            v62 = *(_QWORD *)(v88 + 8 * v63);
            if (!v62)
            {
              v63 = v57 + 5;
              if (v57 + 5 >= v89)
                break;
              v62 = *(_QWORD *)(v88 + 8 * v63);
              if (!v62)
              {
                while (1)
                {
                  v57 = v63 + 1;
                  if (__OFADD__(v63, 1))
                    goto LABEL_59;
                  if (v57 >= v89)
                    goto LABEL_52;
                  v62 = *(_QWORD *)(v88 + 8 * v57);
                  ++v63;
                  if (v62)
                    goto LABEL_36;
                }
              }
            }
          }
        }
      }
      v57 = v63;
    }
LABEL_36:
    v56 = (v62 - 1) & v62;
    v61 = __clz(__rbit64(v62)) + (v57 << 6);
LABEL_37:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v59, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v6 + 72) * v61, v5);
    if (!*(_QWORD *)(v52 + 16))
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    sub_23F2F6194();
    if ((v65 & 1) == 0)
      goto LABEL_55;
    v66 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v64);
    swift_bridgeObjectRetain();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v59, v5);
    v67 = *(_QWORD *)(v66 + 16);
    if (v67)
    {
      v68 = 0;
      v69 = 32;
      do
      {
        v70 = *(_QWORD *)(v66 + v69);
        sub_23F3211FC(v92, ++v68);
        v72 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F30BA4C();
          v58 = v75;
        }
        v73 = *(_QWORD *)(v58 + 16);
        if (v73 >= *(_QWORD *)(v58 + 24) >> 1)
        {
          sub_23F30BA4C();
          v58 = v76;
        }
        *(_QWORD *)(v58 + 16) = v73 + 1;
        v74 = v58 + 16 * v73;
        *(_QWORD *)(v74 + 32) = v70;
        *(_DWORD *)(v74 + 40) = v72;
        v69 += 16;
      }
      while (v67 != v68);
      swift_bridgeObjectRelease();
      v6 = v90;
      v5 = v91;
      v59 = v82;
      v52 = v87;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
LABEL_52:
  v77 = v86;
  swift_release_n();
  v93 = (_QWORD *)v58;
  swift_bridgeObjectRetain_n();
  sub_23F32132C((uint64_t *)&v93, (uint64_t (*)(uint64_t))sub_23F323234, (uint64_t (*)(_QWORD *))sub_23F321AC4);
  if (v77)
    goto LABEL_61;
  swift_bridgeObjectRelease();
  v78 = sub_23F31F518((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  return v78;
}

uint64_t sub_23F320AEC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F2EB3F8(&qword_256E6BDA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33F7C0;
  *(_QWORD *)(inited + 32) = 0x7466656C20706F74;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = &unk_250FC3D70;
  *(_QWORD *)(inited + 56) = 0x746E656320706F74;
  *(_QWORD *)(inited + 64) = 0xEA00000000007265;
  *(_QWORD *)(inited + 72) = &unk_250FC3DA0;
  *(_QWORD *)(inited + 80) = 0x6867697220706F74;
  *(_QWORD *)(inited + 88) = 0xE900000000000074;
  *(_QWORD *)(inited + 96) = &unk_250FC3DD0;
  *(_QWORD *)(inited + 104) = 0x6C207265746E6563;
  *(_QWORD *)(inited + 112) = 0xEB00000000746665;
  *(_QWORD *)(inited + 120) = &unk_250FC3E00;
  *(_QWORD *)(inited + 128) = 0x7265746E6563;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 144) = &unk_250FC3E30;
  strcpy((char *)(inited + 152), "center right");
  *(_BYTE *)(inited + 165) = 0;
  *(_WORD *)(inited + 166) = -5120;
  *(_QWORD *)(inited + 168) = &unk_250FC3E60;
  *(_QWORD *)(inited + 176) = 0x6C206D6F74746F62;
  *(_QWORD *)(inited + 184) = 0xEB00000000746665;
  *(_QWORD *)(inited + 192) = &unk_250FC3E90;
  strcpy((char *)(inited + 200), "bottom center");
  *(_WORD *)(inited + 214) = -4864;
  *(_QWORD *)(inited + 216) = &unk_250FC3EC0;
  strcpy((char *)(inited + 224), "bottom right");
  *(_BYTE *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  *(_QWORD *)(inited + 240) = &unk_250FC3EF0;
  *(_QWORD *)(inited + 248) = 7368564;
  *(_QWORD *)(inited + 256) = 0xE300000000000000;
  *(_QWORD *)(inited + 264) = &unk_250FC3F20;
  *(_QWORD *)(inited + 272) = 0x6D6F74746F62;
  *(_QWORD *)(inited + 280) = 0xE600000000000000;
  *(_QWORD *)(inited + 288) = &unk_250FC3F50;
  *(_QWORD *)(inited + 296) = 1952867692;
  *(_QWORD *)(inited + 304) = 0xE400000000000000;
  *(_QWORD *)(inited + 312) = &unk_250FC3F80;
  *(_QWORD *)(inited + 320) = 0x7468676972;
  *(_QWORD *)(inited + 328) = 0xE500000000000000;
  *(_QWORD *)(inited + 336) = &unk_250FC3FB0;
  *(_QWORD *)(inited + 344) = 0x656C6464696DLL;
  *(_QWORD *)(inited + 352) = 0xE600000000000000;
  *(_QWORD *)(inited + 360) = &unk_250FC3FE0;
  sub_23F2EB3F8(&qword_256E6BDB0);
  v1 = sub_23F33B4B0();
  v2 = sub_23F33B54C();
  sub_23F30F4E0(v2, v3, v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23F320D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  int v35;
  float v36;
  float v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  int v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  float v46;
  float v47;
  int v48;
  char *v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  double v57;
  double v58;
  double v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v1;
  v4 = sub_23F33B1B0();
  v67 = *(_QWORD *)(v4 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F33A9C4();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2FD8B0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v60 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v60 - v18;
  sub_23F2EB3F8(&qword_256E6B198);
  sub_23F2FD8B0();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v60 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v60 - v27;
  if (*(_QWORD *)(a1 + 16) == 2)
  {
    v61 = a1;
    v62 = v2;
    v63 = v4;
    sub_23F33AB14();
    v29 = sub_23F33AAC0();
    sub_23F32329C((uint64_t)v19);
    if (v30)
    {
      v31 = &qword_256E69D98;
      v32 = (uint64_t)v19;
LABEL_12:
      sub_23F2F0794(v32, v31);
      v4 = v63;
      goto LABEL_13;
    }
    sub_23F33AA9C();
    v33 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
    v33(v19, v29);
    v34 = v66;
    v35 = sub_23F2EBFC0((uint64_t)v28, 1, v66);
    if (v35 == 1)
    {
      v31 = &qword_256E6B198;
      v32 = (uint64_t)v28;
      goto LABEL_12;
    }
    v60 = v33;
    sub_23F33A9AC();
    v37 = v36;
    v38 = v65;
    v39 = v28;
    v40 = *(void (**)(char *, uint64_t))(v65 + 8);
    v40(v39, v34);
    sub_23F33AB14();
    sub_23F32329C((uint64_t)v17);
    if (v30)
    {
      v31 = &qword_256E69D98;
      v32 = (uint64_t)v17;
      goto LABEL_12;
    }
    sub_23F33AA9C();
    sub_23F3232C8((uint64_t)v17);
    v41 = sub_23F2EBFC0((uint64_t)v26, 1, v34);
    if (v41 == 1)
    {
      v31 = &qword_256E6B198;
      v32 = (uint64_t)v26;
      goto LABEL_12;
    }
    sub_23F33A9B8();
    v47 = v46;
    v40(v26, v34);
    sub_23F33AB14();
    sub_23F32329C((uint64_t)v14);
    if (v30)
    {
      sub_23F2F0794((uint64_t)v14, &qword_256E69D98);
      sub_23F2EBFCC((uint64_t)v23, 1, 1, v34);
      v4 = v63;
    }
    else
    {
      sub_23F33AAA8();
      sub_23F3232C8((uint64_t)v14);
      v48 = sub_23F2EBFC0((uint64_t)v23, 1, v34);
      v4 = v63;
      if (v48 != 1)
      {
        v49 = v64;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v64, v23, v34);
        sub_23F33A994();
        v51 = v50;
        sub_23F33A9AC();
        v53 = v52;
        sub_23F33A9A0();
        v55 = v54;
        sub_23F33A9B8();
        v57 = *(double *)(v61 + 32) - (float)((float)(v51 + (float)(v53 * 0.5)) / v37);
        v58 = *(double *)(v61 + 40) - (float)((float)(v55 + (float)(v56 * 0.5)) / v47);
        v59 = sqrt(v57 * v57 + v58 * v58);
        v40(v49, v34);
        return *(_QWORD *)&v59;
      }
    }
    sub_23F2F0794((uint64_t)v23, &qword_256E6B198);
  }
LABEL_13:
  sub_23F33AC1C();
  v42 = sub_23F33B1A4();
  v43 = sub_23F33B708();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_23F2E8000, v42, v43, "incorrect reference point or nil screen dimensions or nil bounding box coordinates", v44, 2u);
    MEMORY[0x242669658](v44, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v67 + 8))(v7, v4);
  return 0;
}

uint64_t sub_23F3211FC(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = result - a2;
  if (__OFSUB__(result, a2))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (v2 < 0 && __OFSUB__(0, v2))
    goto LABEL_6;
  return result;
}

uint64_t sub_23F32123C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23F321268()
{
  sub_23F32123C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SpatialRelevanceScorer()
{
  return objc_opt_self();
}

unint64_t sub_23F3212A8()
{
  unint64_t result;

  result = qword_256E6BDA0;
  if (!qword_256E6BDA0)
  {
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E6BDA0);
  }
  return result;
}

uint64_t sub_23F3212E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_256E6A068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F32132C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

void sub_23F3213A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;

  v3 = a1[1];
  v4 = sub_23F33B960();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F322700(0, v3, 1, a1);
      return;
    }
    goto LABEL_128;
  }
  v5 = v4;
  v103 = v1;
  sub_23F327910(v3 / 2);
  v97 = v6;
  v102 = v7;
  v99 = v3;
  v94 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_93:
    if (v34 < 2)
    {
LABEL_104:
      swift_bridgeObjectRelease();
      if (v99 >= -1)
      {
        *(_QWORD *)(v97 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_133;
    }
    v87 = *v94;
    while (1)
    {
      v88 = v34 - 2;
      if (v34 < 2)
        break;
      if (!v87)
        goto LABEL_137;
      v89 = *(_QWORD *)&v10[16 * v88 + 32];
      v90 = *(_QWORD *)&v10[16 * v34 + 24];
      sub_23F3228D4((char *)(v87 + 16 * v89), (char *)(v87 + 16 * *(_QWORD *)&v10[16 * v34 + 16]), v87 + 16 * v90, v102);
      if (v103)
        goto LABEL_89;
      if (v90 < v89)
        goto LABEL_123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23F322F24((uint64_t)v10);
      if (v88 >= *((_QWORD *)v10 + 2))
        goto LABEL_124;
      v91 = &v10[16 * v88 + 32];
      *(_QWORD *)v91 = v89;
      *((_QWORD *)v91 + 1) = v90;
      v92 = *((_QWORD *)v10 + 2);
      if (v34 > v92)
        goto LABEL_125;
      memmove(&v10[16 * v34 + 16], &v10[16 * v34 + 32], 16 * (v92 - v34));
      *((_QWORD *)v10 + 2) = v92 - 1;
      v34 = v92 - 1;
      if (v92 <= 2)
        goto LABEL_104;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
    return;
  }
  v96 = v5;
  v8 = 0;
  v9 = *a1;
  v93 = *a1 + 40;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v104 = *a1;
  while (1)
  {
    v11 = v8++;
    v100 = v11;
    if (v8 < v3)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_23F33B570();
      v13 = sub_23F33B570();
      v3 = v99;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v11 + 2;
      if (v11 + 2 < v99)
      {
        v14 = v93 + 16 * v11;
        while (1)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v15 = sub_23F33B570();
          v16 = sub_23F33B570();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13 < v12 == v16 >= v15)
            break;
          v14 += 16;
          ++v8;
          v3 = v99;
          if (v8 >= v99)
          {
            v8 = v99;
            goto LABEL_11;
          }
        }
        v3 = v99;
LABEL_11:
        v11 = v100;
      }
      v9 = v104;
      if (v13 < v12)
      {
        if (v8 < v11)
          goto LABEL_130;
        if (v11 < v8)
        {
          v17 = 16 * v8;
          v18 = 16 * v11;
          v19 = v8;
          v20 = v11;
          do
          {
            if (v20 != --v19)
            {
              if (!v104)
                goto LABEL_136;
              v21 = v104 + v17;
              v22 = *(_QWORD *)(v104 + v18);
              v23 = *(_QWORD *)(v104 + v18 + 8);
              *(_OWORD *)(v104 + v18) = *(_OWORD *)(v104 + v17 - 16);
              *(_QWORD *)(v21 - 16) = v22;
              *(_QWORD *)(v21 - 8) = v23;
            }
            ++v20;
            v17 -= 16;
            v18 += 16;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_127;
      if (v8 - v11 < v96)
      {
        v24 = v11 + v96;
        if (__OFADD__(v11, v96))
          goto LABEL_131;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_132;
        if (v8 != v24)
        {
          v95 = v10;
          v25 = (_QWORD *)(v9 + 16 * v8);
          v98 = v24;
          do
          {
            v26 = v11;
            v27 = v25;
            do
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v28 = sub_23F33B570();
              v29 = sub_23F33B570();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v29 >= v28)
                break;
              if (!v104)
                goto LABEL_134;
              v30 = *v27;
              v31 = v27[1];
              *(_OWORD *)v27 = *((_OWORD *)v27 - 1);
              *(v27 - 1) = v31;
              *(v27 - 2) = v30;
              v27 -= 2;
              ++v26;
            }
            while (v8 != v26);
            ++v8;
            v25 += 2;
            v11 = v100;
          }
          while (v8 != v98);
          v8 = v98;
          v10 = v95;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23F322E30(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v33 = *((_QWORD *)v10 + 2);
    v32 = *((_QWORD *)v10 + 3);
    v34 = v33 + 1;
    v9 = v104;
    if (v33 >= v32 >> 1)
    {
      v86 = sub_23F322E30((char *)(v32 > 1), v33 + 1, 1, v10);
      v9 = v104;
      v10 = v86;
    }
    *((_QWORD *)v10 + 2) = v34;
    v35 = v10 + 32;
    v36 = &v10[16 * v33 + 32];
    *(_QWORD *)v36 = v11;
    *((_QWORD *)v36 + 1) = v8;
    if (v33)
      break;
    v34 = 1;
LABEL_84:
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_93;
  }
  v101 = v8;
  while (1)
  {
    v37 = v34 - 1;
    if (v34 >= 4)
    {
      v42 = &v35[16 * v34];
      v43 = *((_QWORD *)v42 - 8);
      v44 = *((_QWORD *)v42 - 7);
      v48 = __OFSUB__(v44, v43);
      v45 = v44 - v43;
      if (v48)
        goto LABEL_111;
      v47 = *((_QWORD *)v42 - 6);
      v46 = *((_QWORD *)v42 - 5);
      v48 = __OFSUB__(v46, v47);
      v40 = v46 - v47;
      v41 = v48;
      if (v48)
        goto LABEL_112;
      v49 = v34 - 2;
      v50 = &v35[16 * v34 - 32];
      v52 = *(_QWORD *)v50;
      v51 = *((_QWORD *)v50 + 1);
      v48 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      if (v48)
        goto LABEL_113;
      v48 = __OFADD__(v40, v53);
      v54 = v40 + v53;
      if (v48)
        goto LABEL_115;
      if (v54 >= v45)
      {
        v72 = &v35[16 * v37];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v48 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v48)
          goto LABEL_121;
        v65 = v40 < v75;
        goto LABEL_73;
      }
    }
    else
    {
      if (v34 != 3)
      {
        v66 = *((_QWORD *)v10 + 4);
        v67 = *((_QWORD *)v10 + 5);
        v48 = __OFSUB__(v67, v66);
        v59 = v67 - v66;
        v60 = v48;
        goto LABEL_67;
      }
      v39 = *((_QWORD *)v10 + 4);
      v38 = *((_QWORD *)v10 + 5);
      v48 = __OFSUB__(v38, v39);
      v40 = v38 - v39;
      v41 = v48;
    }
    if ((v41 & 1) != 0)
      goto LABEL_114;
    v49 = v34 - 2;
    v55 = &v35[16 * v34 - 32];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    v58 = __OFSUB__(v56, v57);
    v59 = v56 - v57;
    v60 = v58;
    if (v58)
      goto LABEL_116;
    v61 = &v35[16 * v37];
    v63 = *(_QWORD *)v61;
    v62 = *((_QWORD *)v61 + 1);
    v48 = __OFSUB__(v62, v63);
    v64 = v62 - v63;
    if (v48)
      goto LABEL_118;
    if (__OFADD__(v59, v64))
      goto LABEL_120;
    if (v59 + v64 >= v40)
    {
      v65 = v40 < v64;
LABEL_73:
      if (v65)
        v37 = v49;
      goto LABEL_75;
    }
LABEL_67:
    if ((v60 & 1) != 0)
      goto LABEL_117;
    v68 = &v35[16 * v37];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v48 = __OFSUB__(v69, v70);
    v71 = v69 - v70;
    if (v48)
      goto LABEL_119;
    if (v71 < v59)
      goto LABEL_84;
LABEL_75:
    v76 = v37 - 1;
    if (v37 - 1 >= v34)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (!v9)
      goto LABEL_135;
    v77 = v10;
    v78 = &v35[16 * v76];
    v79 = v35;
    v80 = *(_QWORD *)v78;
    v81 = v79;
    v82 = v37;
    v83 = &v79[16 * v37];
    v84 = *((_QWORD *)v83 + 1);
    sub_23F3228D4((char *)(v9 + 16 * *(_QWORD *)v78), (char *)(v9 + 16 * *(_QWORD *)v83), v9 + 16 * v84, v102);
    if (v103)
      break;
    if (v84 < v80)
      goto LABEL_108;
    if (v82 > *((_QWORD *)v77 + 2))
      goto LABEL_109;
    *(_QWORD *)v78 = v80;
    *(_QWORD *)&v81[16 * v76 + 8] = v84;
    v85 = *((_QWORD *)v77 + 2);
    if (v82 >= v85)
      goto LABEL_110;
    v35 = v81;
    v10 = v77;
    v103 = 0;
    v34 = v85 - 1;
    memmove(v83, v83 + 16, 16 * (v85 - 1 - v82));
    *((_QWORD *)v77 + 2) = v85 - 1;
    v9 = v104;
    v8 = v101;
    if (v85 <= 2)
      goto LABEL_84;
  }
LABEL_89:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_129;
  *(_QWORD *)(v97 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F321AC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;

  v3 = a1[1];
  v4 = sub_23F33B960();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F3227FC(0, v3, 1, a1);
      return;
    }
    goto LABEL_130;
  }
  v5 = v4;
  sub_23F32797C(v3 / 2);
  v90 = a1;
  v91 = v6;
  v95 = v7;
  v93 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_96:
    if (v32 < 2)
    {
LABEL_107:
      swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(_QWORD *)(v91 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_135;
    }
    v82 = *v90;
    while (1)
    {
      v83 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v82)
        goto LABEL_139;
      v84 = *(_QWORD *)&v10[16 * v83 + 32];
      v85 = *(_QWORD *)&v10[16 * v32 + 24];
      sub_23F322B2C((char *)(v82 + 16 * v84), (char *)(v82 + 16 * *(_QWORD *)&v10[16 * v32 + 16]), v82 + 16 * v85, v95);
      if (v1)
        goto LABEL_92;
      if (v85 < v84)
        goto LABEL_125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23F322F24((uint64_t)v10);
      if (v83 >= *((_QWORD *)v10 + 2))
        goto LABEL_126;
      v86 = &v10[16 * v83 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v10 + 2);
      if (v32 > v87)
        goto LABEL_127;
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v87 - v32));
      *((_QWORD *)v10 + 2) = v87 - 1;
      v32 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_107;
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 16;
  v89 = *a1 + 32;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v92 = v5;
  v94 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 16 * v8);
      v13 = 16 * v11;
      v14 = *(_QWORD *)(v9 + 16 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = (_QWORD *)(v89 + 16 * v11);
        while (v12 < v14 != *v15 >= *(v15 - 2))
        {
          v15 += 2;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v14)
      {
        if (v8 < v11)
          goto LABEL_132;
        if (v11 < v8)
        {
          v16 = 16 * v8 - 16;
          v17 = v8;
          v18 = v11;
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_138;
              v19 = (_OWORD *)(v9 + v13);
              v20 = v9 + v16;
              v21 = *(_QWORD *)(v9 + v13);
              v22 = *(_DWORD *)(v9 + v13 + 8);
              if (v13 != v16 || (unint64_t)v19 >= v9 + v16 + 16)
                *v19 = *(_OWORD *)v20;
              *(_QWORD *)v20 = v21;
              *(_DWORD *)(v20 + 8) = v22;
            }
            ++v18;
            v16 -= 16;
            v13 += 16;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_129;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_133;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_134;
        if (v8 != v24)
        {
          v25 = v88 + 16 * v8;
          do
          {
            v26 = v11;
            v27 = v25;
            do
            {
              v28 = *(_QWORD *)(v27 + 16);
              if (v28 >= *(_QWORD *)v27)
                break;
              if (!v9)
                goto LABEL_136;
              v29 = *(_DWORD *)(v27 + 24);
              *(_OWORD *)(v27 + 16) = *(_OWORD *)v27;
              *(_QWORD *)v27 = v28;
              *(_DWORD *)(v27 + 8) = v29;
              v27 -= 16;
              ++v26;
            }
            while (v8 != v26);
            ++v8;
            v25 += 16;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23F322E30(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v32 = v31 + 1;
    v9 = v94;
    if (v31 >= v30 >> 1)
    {
      v81 = sub_23F322E30((char *)(v30 > 1), v31 + 1, 1, v10);
      v9 = v94;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v32;
    v33 = v10 + 32;
    v34 = &v10[16 * v31 + 32];
    *(_QWORD *)v34 = v11;
    *((_QWORD *)v34 + 1) = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_87:
    v5 = v92;
    v3 = v93;
    if (v8 >= v93)
      goto LABEL_96;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = &v33[16 * v32];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_113;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_114;
      v47 = v32 - 2;
      v48 = &v33[16 * v32 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_115;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_117;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_123;
        v63 = v38 < v73;
        goto LABEL_76;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *((_QWORD *)v10 + 4);
        v65 = *((_QWORD *)v10 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_70;
      }
      v37 = *((_QWORD *)v10 + 4);
      v36 = *((_QWORD *)v10 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_116;
    v47 = v32 - 2;
    v53 = &v33[16 * v32 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_118;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_120;
    if (__OFADD__(v57, v62))
      goto LABEL_122;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_76:
      if (v63)
        v35 = v47;
      goto LABEL_78;
    }
LABEL_70:
    if ((v58 & 1) != 0)
      goto LABEL_119;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_121;
    if (v69 < v57)
      goto LABEL_87;
LABEL_78:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v9)
      goto LABEL_137;
    v76 = &v33[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_23F322B2C((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v95);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_110;
    if (v35 > *((_QWORD *)v74 + 2))
      goto LABEL_111;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v74 + 2);
    if (v35 >= v80)
      goto LABEL_112;
    v10 = v74;
    v32 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v74 + 2) = v80 - 1;
    v9 = v94;
    if (v80 <= 2)
      goto LABEL_87;
  }
LABEL_92:
  swift_bridgeObjectRelease();
  if (v93 < -1)
    goto LABEL_131;
  *(_QWORD *)(v91 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F3220E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  float *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;

  v3 = a1[1];
  v4 = sub_23F33B960();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F32286C(0, v3, 1, a1);
      return;
    }
    goto LABEL_130;
  }
  v5 = v4;
  sub_23F32797C(v3 / 2);
  v91 = v6;
  v95 = v7;
  v93 = v3;
  v89 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_96:
    if (v32 < 2)
    {
LABEL_107:
      swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(_QWORD *)(v91 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_135;
    }
    v82 = *v89;
    while (1)
    {
      v83 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v82)
        goto LABEL_139;
      v84 = *(_QWORD *)&v10[16 * v83 + 32];
      v85 = *(_QWORD *)&v10[16 * v32 + 24];
      sub_23F322CB0((char *)(v82 + 16 * v84), (char *)(v82 + 16 * *(_QWORD *)&v10[16 * v32 + 16]), v82 + 16 * v85, v95);
      if (v1)
        goto LABEL_92;
      if (v85 < v84)
        goto LABEL_125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23F322F24((uint64_t)v10);
      if (v83 >= *((_QWORD *)v10 + 2))
        goto LABEL_126;
      v86 = &v10[16 * v83 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v10 + 2);
      if (v32 > v87)
        goto LABEL_127;
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v87 - v32));
      *((_QWORD *)v10 + 2) = v87 - 1;
      v32 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_107;
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v90 = *a1 + 8;
  v88 = *a1 + 40;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v92 = v5;
  v94 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v90 + 16 * v8);
      v13 = 16 * v11;
      v14 = *(float *)(v90 + 16 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = (float *)(v88 + 16 * v11);
        while (v14 < v12 != *(v15 - 4) >= *v15)
        {
          ++v8;
          v15 += 4;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v14 < v12)
      {
        if (v8 < v11)
          goto LABEL_132;
        if (v11 < v8)
        {
          v16 = 16 * v8 - 16;
          v17 = v8;
          v18 = v11;
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_138;
              v19 = (_OWORD *)(v9 + v13);
              v20 = v9 + v16;
              v21 = *(_QWORD *)(v9 + v13);
              v22 = *(_DWORD *)(v9 + v13 + 8);
              if (v13 != v16 || (unint64_t)v19 >= v9 + v16 + 16)
                *v19 = *(_OWORD *)v20;
              *(_QWORD *)v20 = v21;
              *(_DWORD *)(v20 + 8) = v22;
            }
            ++v18;
            v16 -= 16;
            v13 += 16;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_129;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_133;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_134;
        if (v8 != v24)
        {
          v25 = v9 + 16 * v8;
          do
          {
            v26 = v25;
            v27 = v11;
            do
            {
              v28 = *(float *)(v26 + 8);
              if (*(float *)(v26 - 8) >= v28)
                break;
              if (!v9)
                goto LABEL_136;
              v29 = *(_QWORD *)v26;
              *(_OWORD *)v26 = *(_OWORD *)(v26 - 16);
              *(float *)(v26 - 8) = v28;
              *(_QWORD *)(v26 - 16) = v29;
              v26 -= 16;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 16;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23F322E30(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v32 = v31 + 1;
    v9 = v94;
    if (v31 >= v30 >> 1)
    {
      v81 = sub_23F322E30((char *)(v30 > 1), v31 + 1, 1, v10);
      v9 = v94;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v32;
    v33 = v10 + 32;
    v34 = &v10[16 * v31 + 32];
    *(_QWORD *)v34 = v11;
    *((_QWORD *)v34 + 1) = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_87:
    v5 = v92;
    v3 = v93;
    if (v8 >= v93)
      goto LABEL_96;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = &v33[16 * v32];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_113;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_114;
      v47 = v32 - 2;
      v48 = &v33[16 * v32 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_115;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_117;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_123;
        v63 = v38 < v73;
        goto LABEL_76;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *((_QWORD *)v10 + 4);
        v65 = *((_QWORD *)v10 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_70;
      }
      v37 = *((_QWORD *)v10 + 4);
      v36 = *((_QWORD *)v10 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_116;
    v47 = v32 - 2;
    v53 = &v33[16 * v32 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_118;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_120;
    if (__OFADD__(v57, v62))
      goto LABEL_122;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_76:
      if (v63)
        v35 = v47;
      goto LABEL_78;
    }
LABEL_70:
    if ((v58 & 1) != 0)
      goto LABEL_119;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_121;
    if (v69 < v57)
      goto LABEL_87;
LABEL_78:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v9)
      goto LABEL_137;
    v76 = &v33[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_23F322CB0((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v95);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_110;
    if (v35 > *((_QWORD *)v74 + 2))
      goto LABEL_111;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v74 + 2);
    if (v35 >= v80)
      goto LABEL_112;
    v10 = v74;
    v32 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v74 + 2) = v80 - 1;
    v9 = v94;
    if (v80 <= 2)
      goto LABEL_87;
  }
LABEL_92:
  swift_bridgeObjectRelease();
  if (v93 < -1)
    goto LABEL_131;
  *(_QWORD *)(v91 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23F322700(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;

  v13 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = (_QWORD *)(*a4 + 16 * a3);
    while (2)
    {
      v7 = v13;
      v14 = v6;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = sub_23F33B570();
        v9 = sub_23F33B570();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if (v9 >= v8)
          break;
        if (!v5)
        {
          __break(1u);
          return result;
        }
        v10 = *v6;
        v11 = v6[1];
        *(_OWORD *)v6 = *((_OWORD *)v6 - 1);
        *(v6 - 1) = v11;
        *(v6 - 2) = v10;
        v6 -= 2;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 = v14 + 2;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F3227FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3 - 16;
    while (2)
    {
      v6 = result;
      v7 = v5;
      do
      {
        v8 = *(_QWORD *)(v7 + 16);
        if (v8 >= *(_QWORD *)v7)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_DWORD *)(v7 + 24);
        *(_OWORD *)(v7 + 16) = *(_OWORD *)v7;
        *(_QWORD *)v7 = v8;
        *(_DWORD *)(v7 + 8) = v9;
        v7 -= 16;
        ++v6;
      }
      while (a3 != v6);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F32286C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3;
    while (2)
    {
      v6 = v5;
      v7 = result;
      do
      {
        v8 = *(float *)(v6 + 8);
        if (*(float *)(v6 - 8) >= v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_QWORD *)v6;
        *(_OWORD *)v6 = *(_OWORD *)(v6 - 16);
        *(float *)(v6 - 8) = v8;
        *(_QWORD *)(v6 - 16) = v9;
        v6 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F3228D4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  BOOL v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  char *v22;
  char *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char *v32;
  char *v35;
  char *v36;
  char *v37;

  v6 = a1;
  v7 = a2 - a1;
  v8 = (a2 - a1) / 16;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v8 >= v10)
  {
    sub_23F2F295C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v22 = a2;
    v36 = a4;
    if (v6 >= a2 || v9 < 16)
    {
      v14 = a4;
      v12 = &a4[16 * v10];
    }
    else
    {
      v25 = (char *)(a3 - 16);
      v12 = &a4[16 * v10];
      v35 = v6;
      do
      {
        v26 = (unint64_t)v12;
        v12 -= 16;
        v37 = v25 + 16;
        v27 = v22 - 16;
        v28 = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_23F33B570();
        v30 = sub_23F33B570();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 >= v29)
        {
          v31 = v37 != (char *)v26 || (unint64_t)v25 >= v26;
          v27 = v12;
          v32 = v36;
          v22 = v28;
        }
        else
        {
          v31 = v37 != v28 || v25 >= v28;
          v22 = v27;
          v32 = v36;
          v12 = (char *)v26;
        }
        if (v31)
          *(_OWORD *)v25 = *(_OWORD *)v27;
        v25 -= 16;
      }
      while (v22 > v35 && v12 > v32);
      v14 = v36;
    }
  }
  else
  {
    sub_23F2F295C(a1, (a2 - a1) / 16, a4);
    v12 = &a4[16 * v8];
    v13 = (unint64_t)a2 >= a3 || v7 < 16;
    v14 = a4;
    if (!v13)
    {
      v15 = a2;
      while (1)
      {
        v16 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17 = sub_23F33B570();
        v18 = sub_23F33B570();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18 < v17)
          break;
        v19 = v14;
        v20 = v6 == v14;
        v14 += 16;
        v15 = v16;
        if (!v20)
          goto LABEL_11;
LABEL_12:
        v6 += 16;
        if (v14 >= v12 || (unint64_t)v15 >= a3)
          goto LABEL_17;
      }
      v19 = v16;
      v15 = v16 + 16;
      if (v6 == v16)
        goto LABEL_12;
LABEL_11:
      *(_OWORD *)v6 = *(_OWORD *)v19;
      goto LABEL_12;
    }
LABEL_17:
    v22 = v6;
  }
  sub_23F2F295C(v14, (v12 - v14) / 16, v22);
  return 1;
}

uint64_t sub_23F322B2C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v14;
  BOOL v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_23F2F295C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_39;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = v6 - 16;
      if (*((_QWORD *)v12 - 2) >= *((_QWORD *)v6 - 2))
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = v12 - 16;
        v12 -= 16;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        v6 -= 16;
        if (!v21)
          goto LABEL_35;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_35:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_23F2F295C(a1, (a2 - a1) / 16, a4);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(_QWORD *)v6 >= *(_QWORD *)v4)
    {
      v14 = v4;
      v15 = v7 == v4;
      v4 += 16;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v14 = v6;
    v15 = v7 == v6;
    v6 += 16;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(_OWORD *)v7 = *(_OWORD *)v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_23F2F295C(v4, (v12 - v4) / 16, v6);
  return 1;
}

uint64_t sub_23F322CB0(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v20;
  char *v21;
  char *v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_23F2F295C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_45;
    v20 = (char *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 16;
      if (*((float *)v6 - 2) >= *(float *)(v12 - 8))
      {
        v22 = (char *)(v12 - 16);
        v24 = v21 != (char *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v24)
          goto LABEL_41;
      }
      else
      {
        v22 = v6 - 16;
        v23 = v21 != v6 || v20 >= v6;
        v6 -= 16;
        if (!v23)
          goto LABEL_41;
      }
      *(_OWORD *)v20 = *(_OWORD *)v22;
LABEL_41:
      v20 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_23F2F295C(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    do
    {
      if (*((float *)v4 + 2) >= *((float *)v6 + 2))
      {
        v14 = v7 == v4;
        v15 = v4;
        v4 += 16;
        if (v14 && v7 < v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 16;
        if (v14 && v7 < v6)
          goto LABEL_18;
      }
      *(_OWORD *)v7 = *(_OWORD *)v15;
LABEL_18:
      v7 += 16;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_45:
  sub_23F2F295C(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

char *sub_23F322E30(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F2EB3F8(&qword_256E6BDC0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23F322F24(uint64_t a1)
{
  return sub_23F322E30(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23F322F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_23F33A9E8();
  v5 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v43 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v36 - v8;
  sub_23F2EB3F8(&qword_256E6BDC8);
  result = sub_23F33B924();
  v10 = 0;
  v44 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v36 = v12;
  v37 = (unint64_t)(v14 + 63) >> 6;
  v38 = result + 64;
  v40 = result;
  if ((v15 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v45 = v10;
  for (i = v17 | (v10 << 6); ; i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    v23 = v43;
    v24 = v44;
    v25 = *(_QWORD *)(v43 + 72) * i;
    v26 = v39;
    v27 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v39, *(_QWORD *)(v44 + 48) + v25, v42);
    v28 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * i);
    v29 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30 = v27;
    v31 = v41;
    v29(v41, v26, v30);
    v46 = v28;
    swift_bridgeObjectRetain_n();
    sub_23F32132C(&v46, (uint64_t (*)(uint64_t))sub_23F323234, (uint64_t (*)(_QWORD *))sub_23F3220E0);
    if (v2)
      break;
    swift_bridgeObjectRelease();
    v32 = v46;
    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v33 = v40;
    v29((char *)(*(_QWORD *)(v40 + 48) + v25), v31, v30);
    *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * i) = v32;
    v34 = *(_QWORD *)(v33 + 16);
    v19 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v19)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    result = v33;
    *(_QWORD *)(v33 + 16) = v35;
    v2 = 0;
    v10 = v45;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v19 = __OFADD__(v10, 1);
    v20 = v10 + 1;
    if (v19)
      goto LABEL_26;
    if (v20 >= v37)
      return result;
    v21 = *(_QWORD *)(v36 + 8 * v20);
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v37)
        return result;
      v21 = *(_QWORD *)(v36 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v37)
          return result;
        v21 = *(_QWORD *)(v36 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v37)
            return result;
          v21 = *(_QWORD *)(v36 + 8 * v22);
          if (!v21)
          {
            while (1)
            {
              v20 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_27;
              if (v20 >= v37)
                return result;
              v21 = *(_QWORD *)(v36 + 8 * v20);
              ++v22;
              if (v21)
                goto LABEL_15;
            }
          }
        }
      }
      v20 = v22;
    }
LABEL_15:
    v16 = (v21 - 1) & v21;
    v45 = v20;
  }
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23F323220()
{
  sub_23F2F3240();
}

void sub_23F323234()
{
  sub_23F2F333C();
}

uint64_t sub_23F323248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F2EB3F8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23F32329C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFC0(a1, 1, v1);
}

uint64_t sub_23F3232C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 192))(a1, v1);
}

uint64_t sub_23F3232D4()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F3232DC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalAlarmProvider, MEMORY[0x24BEA0308], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325074);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

void sub_23F323320(uint64_t a1, uint64_t (*a2)(_QWORD), uint8_t *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  void (*v19)(char *);
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29[4];
  uint64_t v30;

  v27 = a4;
  v28 = a5;
  v26 = a3;
  v8 = a2(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v26 - v9);
  v11 = sub_23F33B1B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_retain();
  v16 = MEMORY[0x242667C90](v15);
  swift_release();
  if (v16)
  {
    sub_23F323EA4(a1, (uint64_t)v29, &qword_256E6A290);
    if (v29[3])
    {
      sub_23F2EB3F8(&qword_256E6BDE8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v17 = v30;
        v18 = (uint64_t (*)(_QWORD))v27;
        v19 = v28;
        v20 = v26;
LABEL_9:
        sub_23F323A14(v17, v16, v5 + *(int *)(v8 + 20), (uint64_t (*)(_QWORD))v20, v18, v19);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_11;
      }
    }
    else
    {
      sub_23F2FD434((uint64_t)v29, &qword_256E6A290);
    }
    v18 = (uint64_t (*)(_QWORD))v27;
    v19 = v28;
    v20 = v26;
    v17 = MEMORY[0x24BEE4AF8];
    goto LABEL_9;
  }
  v28 = (void (*)(char *))v11;
  sub_23F33AC1C();
  sub_23F323EEC(v5, (uint64_t)v10, a2);
  v21 = sub_23F33B1A4();
  v22 = sub_23F33B6F0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)v23 = 136315138;
    v26 = v23 + 4;
    v30 = *v10;
    sub_23F33A5D4();
    swift_retain();
    v24 = sub_23F33B540();
    v30 = sub_23F30DBFC(v24, v25, v29);
    sub_23F33B7BC();
    swift_bridgeObjectRelease();
    sub_23F323FA0();
    _os_log_impl(&dword_23F2E8000, v21, v22, "unable to get UsoEntity from UsoEntityBuilder of %s type.", v23, 0xCu);
    swift_arrayDestroy();
    sub_23F2F3748();
  }
  sub_23F323FA0();

  (*(void (**)(char *, void (*)(char *)))(v12 + 8))(v14, v28);
LABEL_11:
  sub_23F2F37B0();
}

uint64_t sub_23F3235E4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalCalendarEventProvider, MEMORY[0x24BEA1568], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F3254FC);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F323628(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalPeopleProvider, MEMORY[0x24BEA04E8], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325968);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F32366C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalPlacesProvider, MEMORY[0x24BEA1600], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325318);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F3236B0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalReminderProvider, MEMORY[0x24BEA07F0], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F3254E8);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F3236F4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationalTimerProvider, MEMORY[0x24BEA0358], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325060);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F323738(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingMediaItemProvider, MEMORY[0x24BEA0A48], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325954);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F32377C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for OnScreenHomeProvider, MEMORY[0x24BE9EBB0], (uint64_t)sub_23F323F40, (void (*)(char *))sub_23F325510);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F3237C0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F323320(a1, (uint64_t (*)(_QWORD))type metadata accessor for OnScreenNotificationProvider, MEMORY[0x24BEA12A0], (uint64_t)sub_23F323ED0, (void (*)(char *))sub_23F3251C4);
  v1 = (uint64_t (*)(uint64_t))sub_23F323F64();
  return sub_23F323F58(v1, v2, v3);
}

uint64_t sub_23F323804(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = sub_23F33AA84();
  v7 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v14 = 0;
    v21 = a2;
    v22 = a3;
    v20 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v26);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v26);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v23(v25, v12, v26);
        v17 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F2F2CF4();
          v17 = v27;
        }
        v18 = *(_QWORD *)(v17 + 16);
        if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_23F2F2CF4();
          v17 = v27;
        }
        *(_QWORD *)(v17 + 16) = v18 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v17 + v15 + v18 * v13, v25, v26);
        v27 = v17;
        a3 = v22;
        a1 = v20;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v26);
      }
      if (v24 == ++v14)
      {
        v13 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_23F323A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *);
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v58 = a6;
  v10 = sub_23F33B390();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F2EE748();
  v63 = v12;
  sub_23F2EB3F8(&qword_256E6A568);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F30C724();
  v57 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v47 - v16;
  v18 = sub_23F33AA84();
  v67 = *(_QWORD *)(v18 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F30C724();
  v64 = v20;
  MEMORY[0x24BDAC7A8](v21);
  v55 = (uint64_t)&v47 - v22;
  v56 = sub_23F33B228();
  v23 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8(&qword_256E6A7C0);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F2EE748();
  v54 = v27;
  v28 = sub_23F33AB2C();
  v53 = *(_QWORD *)(v28 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F2EE748();
  v52 = v30;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v48 = v28;
    v50 = a3;
    v51 = a5;
    v32 = a4(0);
    v33 = a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v61 = *(_QWORD *)(v23 + 72);
    v62 = v32;
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v49 = a1;
    swift_bridgeObjectRetain();
    v34 = MEMORY[0x24BEE4AF8];
    v36 = v56;
    v35 = v57;
    v59 = v23;
    while (1)
    {
      v37 = v34;
      v60(v25, v33, v36);
      v38 = v63;
      sub_23F33B21C();
      sub_23F33B384();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v38, v66);
      sub_23F33A5E0();
      swift_release();
      if (v68)
      {
        v58(v25);
        swift_release();
        if (sub_23F2EBFC0(v35, 1, v18) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v17, v35, v18);
          v39 = 0;
          goto LABEL_8;
        }
        sub_23F2FD434(v35, &qword_256E6A568);
      }
      v39 = 1;
LABEL_8:
      v40 = v59;
      v34 = v37;
      sub_23F2EBFCC((uint64_t)v17, v39, 1, v18);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v36);
      if (sub_23F2EBFC0((uint64_t)v17, 1, v18) == 1)
      {
        sub_23F2FD434((uint64_t)v17, &qword_256E6A568);
      }
      else
      {
        v41 = v55;
        sub_23F323F8C(v55, (uint64_t)v17);
        sub_23F323F8C(v64, v41);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_23F323F94();
        v42 = *(_QWORD *)(v34 + 16);
        if (v42 >= *(_QWORD *)(v34 + 24) >> 1)
          v34 = sub_23F323F94();
        *(_QWORD *)(v34 + 16) = v42 + 1;
        sub_23F323F8C(v34+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v42, v64);
        v36 = v56;
        v35 = v57;
      }
      v33 += v61;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        a3 = v50;
        a5 = v51;
        v28 = v48;
        goto LABEL_18;
      }
    }
  }
  v34 = MEMORY[0x24BEE4AF8];
LABEL_18:
  v43 = v54;
  sub_23F323EA4(a3, v54, &qword_256E6A7C0);
  if (sub_23F2EBFC0(v43, 1, v28) == 1)
  {
    sub_23F2FD434(v43, &qword_256E6A7C0);
  }
  else
  {
    v45 = v52;
    v44 = v53;
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v43, v28);
    MEMORY[0x24BDAC7A8](v46);
    *(&v47 - 2) = v45;
    sub_23F323804(a5, (uint64_t)(&v47 - 4), v34);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v28);
  }
  sub_23F2F37B0();
}

void sub_23F323EA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F2EB3F8(a3);
  sub_23F323F74(v3);
  sub_23F2EB20C();
}

uint64_t sub_23F323ED0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F324688(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_23F323EEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F323F74(v3);
  sub_23F2EB20C();
}

void sub_23F323F18(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23F2FD514(v2);
  sub_23F2EB20C();
}

uint64_t sub_23F323F40(uint64_t a1)
{
  return sub_23F323ED0(a1) & 1;
}

uint64_t sub_23F323F58(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_23F2EE1F8(a1, a2, a3);
}

uint64_t sub_23F323F64()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F323F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F323F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F323F94()
{
  return sub_23F30B9DC();
}

void sub_23F323FA0()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F323F18(v1, v0);
}

uint64_t sub_23F323FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33A97C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23F323FE8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F33A97C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F32401C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F324060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F3240A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F3240E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F33A97C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F32412C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F324138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F324678();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F324160()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F32416C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F324678();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SRRSourceProvider()
{
  uint64_t result;

  result = qword_256E6BE88;
  if (!qword_256E6BE88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3241D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33A97C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F324238()
{
  return sub_23F33B9FC();
}

uint64_t sub_23F32425C()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

uint64_t sub_23F3242A4()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

uint64_t sub_23F3242E0()
{
  uint64_t v0;

  sub_23F2EB3F8(&qword_256E6BEF0);
  *(_QWORD *)(v0 + 16) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F324338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F33B030();
  sub_23F33B024();
  v2 = sub_23F33B39C();
  sub_23F2EBFCC(v1, 1, 1, v2);
  v3 = (void *)sub_23F33B018();
  v5 = v4;
  sub_23F3244C0(v1);
  if ((v5 & 1) != 0)
  {
    sub_23F324500();
    swift_allocError();
    swift_willThrow();
    swift_release();
    sub_23F32453C(v3, 1);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void *))(v0 + 8))(v3);
  }
}

uint64_t sub_23F324440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F33A97C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_23F324478(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23F316AC8;
  return sub_23F3242E0();
}

uint64_t sub_23F3244C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E6BEF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F324500()
{
  unint64_t result;

  result = qword_256E6BEF8;
  if (!qword_256E6BEF8)
  {
    result = MEMORY[0x2426695B0](&unk_23F33F9A0, &type metadata for SRRSourceProvider.SRRSourceProviderError);
    atomic_store(result, (unint64_t *)&qword_256E6BEF8);
  }
  return result;
}

void sub_23F32453C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for SRRSourceProvider.SRRSourceProviderError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SRRSourceProvider.SRRSourceProviderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F3245DC + 4 * asc_23F33F8E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F3245FC + 4 * byte_23F33F8E5[v4]))();
}

_BYTE *sub_23F3245DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F3245FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F324604(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F32460C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F324614(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F32461C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SRRSourceProvider.SRRSourceProviderError()
{
  return &type metadata for SRRSourceProvider.SRRSourceProviderError;
}

unint64_t sub_23F32463C()
{
  unint64_t result;

  result = qword_256E6BF00;
  if (!qword_256E6BF00)
  {
    result = MEMORY[0x2426695B0](&unk_23F33F978, &type metadata for SRRSourceProvider.SRRSourceProviderError);
    atomic_store(result, (unint64_t *)&qword_256E6BF00);
  }
  return result;
}

uint64_t sub_23F324678()
{
  return sub_23F33A97C();
}

uint64_t sub_23F324688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v3 = sub_23F33AB2C();
  v31 = *(_QWORD *)(v3 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2EE748();
  v29 = v5;
  v6 = sub_23F2EB3F8(&qword_256E6BF10);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F30C758();
  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8(&qword_256E6A7C0);
  sub_23F2EE5B8();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  sub_23F33AA78();
  v20 = sub_23F33AAC0();
  if (sub_23F2EBFC0((uint64_t)v10, 1, v20) == 1)
  {
    sub_23F2F6AF4((uint64_t)v10, &qword_256E69D98);
    sub_23F326A28((uint64_t)v19, 1);
  }
  else
  {
    sub_23F33AA90();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v10, v20);
  }
  v21 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v17, v30, v3);
  sub_23F326A28((uint64_t)v17, 0);
  v22 = v2 + *(int *)(v6 + 48);
  sub_23F2F86BC((uint64_t)v19, v2, &qword_256E6A7C0);
  sub_23F2F86BC((uint64_t)v17, v22, &qword_256E6A7C0);
  sub_23F326990(v2);
  if (v24)
  {
    sub_23F3268C0((uint64_t)v17);
    sub_23F3268C0((uint64_t)v19);
    sub_23F326990(v22);
    if (v24)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    sub_23F2F86BC(v2, (uint64_t)v14, &qword_256E6A7C0);
    sub_23F326990(v22);
    if (v24)
    {
      sub_23F2F6AF4((uint64_t)v17, &qword_256E6A7C0);
      sub_23F2F6AF4((uint64_t)v19, &qword_256E6A7C0);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v3);
      v23 = 0;
    }
    else
    {
      v25 = v29;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v29, v22, v3);
      sub_23F32674C();
      v23 = sub_23F33B4EC();
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v25, v3);
      sub_23F3268C0((uint64_t)v17);
      sub_23F3268C0((uint64_t)v19);
      v26((uint64_t)v14, v3);
    }
  }
  sub_23F3268C0(v2);
  return v23 & 1;
}

void sub_23F324990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;

  sub_23F305674();
  v75 = v0;
  v87 = v2;
  v89 = v3;
  sub_23F2EB3F8(&qword_256E69D98);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F2EE748();
  v88 = v5;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE748();
  v86 = v7;
  sub_23F2EB3F8(&qword_256E69DA8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F326884(v9, v69);
  sub_23F2EB3F8(&qword_256E6BF08);
  sub_23F2EE5B8();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v69 - v14;
  v16 = sub_23F33AAC0();
  v83 = *(_QWORD *)(v16 - 8);
  v84 = v16;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F2EE748();
  v82 = v18;
  sub_23F2EB3F8(&qword_256E6A538);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F30C724();
  v92 = v20;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v69 - v22;
  sub_23F2EB3F8(&qword_256E6B190);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F30C724();
  v72 = v25;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v69 - v27;
  sub_23F2EB3F8(&qword_256E6A7C0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F30C724();
  v71 = v30;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v69 - v32;
  sub_23F2EB3F8(&qword_256E6B198);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F30C724();
  v90 = v35;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v36);
  v76 = (uint64_t)&v69 - v37;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v69 - v39;
  v41 = sub_23F33B390();
  v77 = *(_QWORD *)(v41 - 8);
  v78 = v41;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F326900();
  sub_23F33B21C();
  v43 = sub_23F33B378();
  v91 = v40;
  v80 = v33;
  v81 = v28;
  v44 = (uint64_t)v28;
  v45 = (uint64_t)v23;
  v46 = sub_23F325B5C((uint64_t)v40, (uint64_t)v33, v44, v43);
  swift_bridgeObjectRelease();
  sub_23F33B210();
  sub_23F33A94C();
  v47 = sub_23F33A958();
  sub_23F2EBFCC(v45, 0, 1, v47);
  sub_23F33B360();
  v48 = sub_23F33B354();
  v73 = v49;
  v74 = v48;
  sub_23F2F86BC(v45, v92, &qword_256E6A538);
  v50 = sub_23F33A9C4();
  sub_23F2EE6B8(v76, v51, v52, v50);
  sub_23F2F86BC((uint64_t)v91, v90, &qword_256E6B198);
  sub_23F33B36C();
  v53 = sub_23F33B24C();
  v54 = sub_23F2EBFC0((uint64_t)v15, 1, v53);
  v75 = v46;
  if (v54 == 1)
  {
    sub_23F2F6AF4((uint64_t)v15, &qword_256E6BF08);
    v70 = 0.0;
  }
  else
  {
    v55 = sub_23F33B240();
    sub_23F3269F8((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
    v70 = (double)v55;
  }
  sub_23F33B36C();
  v56 = sub_23F2EBFC0((uint64_t)v13, 1, v53);
  v79 = v45;
  if (v56 == 1)
  {
    sub_23F2F6AF4((uint64_t)v13, &qword_256E6BF08);
  }
  else
  {
    sub_23F33B234();
    sub_23F3269F8((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
  }
  v57 = v72;
  v58 = (uint64_t)v80;
  sub_23F2F86BC((uint64_t)v80, v71, &qword_256E6A7C0);
  v59 = (uint64_t)v81;
  sub_23F2F86BC((uint64_t)v81, v57, &qword_256E6B190);
  v60 = v82;
  sub_23F33AAB4();
  v61 = sub_23F33ABD4();
  sub_23F2EE6B8(v85, v62, v63, v61);
  v64 = sub_23F2EE808();
  v65 = v86;
  sub_23F326858(v86, v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16));
  sub_23F326930(v65);
  v66 = v83;
  v67 = v84;
  v68 = v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v88, v60, v84);
  sub_23F2EBFCC(v68, 0, 1, v67);
  sub_23F33AA54();
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v60, v67);
  sub_23F2F6AF4(v79, &qword_256E6A538);
  sub_23F2F6AF4(v59, &qword_256E6B190);
  sub_23F2F6AF4(v58, &qword_256E6A7C0);
  sub_23F2F6AF4((uint64_t)v91, &qword_256E6B198);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v1, v78);
  sub_23F2F37B0();
}

id sub_23F324F20()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD78]), sel_init);
  if (!sub_23F33A670() || (sub_23F3268D4(), sub_23F32683C(), !v0))
  {
    sub_23F326A14();
    v1 = 0;
  }
  sub_23F3268C8();
  v3 = sub_23F326878();
  sub_23F3268A0(v3, sel_setStreet_);

  if (!sub_23F33A664() || (sub_23F3268D4(), sub_23F32683C(), !v0))
  {
    sub_23F326A14();
    v1 = 0;
  }
  sub_23F3268C8();
  v4 = sub_23F326878();
  sub_23F3268A0(v4, sel_setCity_);

  if (!sub_23F33A61C() || (sub_23F3268D4(), sub_23F32683C(), !v0))
  {
    sub_23F326A14();
    v1 = 0;
  }
  sub_23F3268C8();
  v5 = sub_23F326878();
  sub_23F3268A0(v5, sel_setCountry_);

  sub_23F33A658();
  v6 = (void *)sub_23F33B4F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPostalCode_, v6);

  return v2;
}

void sub_23F325060()
{
  sub_23F325088();
}

void sub_23F325074()
{
  sub_23F325088();
}

void sub_23F325088()
{
  uint64_t v0;
  uint64_t *v1;
  unsigned int *v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;

  sub_23F305674();
  v22 = v2;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3268E8();
  v23 = *(_QWORD *)(v7 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3267B4();
  sub_23F326968();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3267D0();
  v10 = v4();
  if (v11)
  {
    v12 = v10;
    v13 = v11;
    v21 = v6;
    v14 = sub_23F3268E0();
    v15 = v7;
    v16 = swift_allocBox();
    *v17 = v12;
    v17[1] = v13;
    v18 = sub_23F3269AC((uint64_t)v17, *MEMORY[0x24BEB9958], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104));
    *v1 = v16;
    sub_23F326940(v18, *MEMORY[0x24BEB9A00]);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v0, *v22, v15);
    sub_23F3269C0();
    sub_23F326960(v0, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    sub_23F326950();
    v19 = sub_23F326824();
    sub_23F2EBFCC(v21, 0, 1, v19);
    sub_23F2F37B0();
  }
  else
  {
    v20 = sub_23F326824();
    sub_23F32678C(v6, 1, 1, v20);
  }
}

void sub_23F3251C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F305674();
  v3 = v2;
  v4 = sub_23F3268E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3267B4();
  sub_23F326968();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3267D0();
  if (sub_23F33A61C() && (v7 = sub_23F33A5BC(), v9 = v8, swift_release(), v9))
  {
    v10 = sub_23F3268E0();
    v16 = v3;
    v11 = swift_allocBox();
    *v12 = v7;
    v12[1] = v9;
    v13 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x24BEB9958], v10);
    *v1 = v11;
    sub_23F326940(v13, *MEMORY[0x24BEB9A00]);
    sub_23F3269AC(v0, *MEMORY[0x24BE57160], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104));
    sub_23F324990();
    sub_23F326A40(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F326950();
    v14 = sub_23F326824();
    sub_23F2EBFCC(v16, 0, 1, v14);
    sub_23F2F37B0();
  }
  else
  {
    v15 = sub_23F326824();
    sub_23F32678C(v3, 1, 1, v15);
  }
}

void sub_23F325318()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F305674();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F3268E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F2EE808();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3267D0();
  if (sub_23F33A64C())
  {
    sub_23F314B0C();
    v36 = v2;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_init);
    v34 = v6;
    v12 = v11;
    v13 = sub_23F33A640();
    v35 = v4;
    v14 = v13;
    v33 = v5;
    v16 = v15;
    v17 = sub_23F324F20();
    v18 = sub_23F2F040C(v12, v14, v16, v17);
    v19 = sub_23F3268E0();
    v20 = swift_allocBox();
    v22 = v21;
    v23 = v18;
    sub_23F33B3FC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v22, *MEMORY[0x24BEB9968], v19);
    *v0 = v20;
    sub_23F3269D8(*MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 104));
    v25 = v33;
    v24 = v34;
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v8, *MEMORY[0x24BE57180], v33);
    v26 = v35;
    sub_23F3269B4();

    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
    sub_23F3269CC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v27 = sub_23F326824();
    sub_23F2EBFCC(v26, 0, 1, v27);
    sub_23F2F37B0();
  }
  else
  {
    sub_23F33AA84();
    v28 = sub_23F32680C();
    sub_23F32678C(v28, v29, v30, v31);
  }
}

void sub_23F3254E8()
{
  sub_23F325088();
}

void sub_23F3254FC()
{
  sub_23F325088();
}

void sub_23F325510()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23F305674();
  v3 = v2;
  v5 = v4;
  sub_23F2EB3F8(&qword_256E69DA0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F30C758();
  v7 = sub_23F3268E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F326918();
  v9 = sub_23F2EE808();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F30C724();
  v66 = v11;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v12);
  v61 = (uint64_t)&v52 - v13;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v52 - v15);
  v60 = sub_23F33B438();
  v58 = *(_QWORD *)(v60 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F326884(v18, (uint64_t)v52);
  v19 = sub_23F33A58C();
  if (!v19)
  {
    sub_23F33AA84();
    v38 = sub_23F32680C();
    sub_23F32678C(v38, v39, v40, v41);
    return;
  }
  v67 = v19;
  v54 = v8;
  v55 = v7;
  v52 = v16;
  v53 = v1;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23F33B918();
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v57 = v5;
  v56 = v3;
  if (!v20)
    goto LABEL_23;
  v21 = v67;
  if (v20 >= 1)
  {
    v22 = 0;
    v65 = v67 & 0xC000000000000001;
    v23 = *MEMORY[0x24BEB9958];
    v62 = *MEMORY[0x24BEB9A00];
    v63 = v23;
    v24 = MEMORY[0x24BEE4AF8];
    v64 = v0;
    do
    {
      if (v65)
        MEMORY[0x242668F08](v22, v21);
      else
        swift_retain();
      sub_23F33A5B0();
      v25 = v69;
      if (v69)
      {
        v26 = v9;
        v27 = v24;
        v28 = v10;
        v29 = v20;
        v30 = v68;
        v31 = sub_23F3268E0();
        v32 = swift_allocBox();
        *v33 = v30;
        v33[1] = v25;
        v20 = v29;
        v10 = v28;
        v24 = v27;
        v9 = v26;
        v0 = v64;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, v63, v31);
        *v0 = v32;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v0, v62, v9);
        v34 = 0;
      }
      else
      {
        v34 = 1;
      }
      sub_23F2EBFCC((uint64_t)v0, v34, 1, v9);
      swift_release();
      if (sub_23F2EBFC0((uint64_t)v0, 1, v9) == 1)
      {
        sub_23F2F6AF4((uint64_t)v0, &qword_256E69DA0);
      }
      else
      {
        v35 = v61;
        sub_23F3269F0(v61, (uint64_t)v0);
        sub_23F3269F0(v66, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_23F326A34();
        v36 = *(_QWORD *)(v24 + 16);
        if (v36 >= *(_QWORD *)(v24 + 24) >> 1)
          v24 = sub_23F326A34();
        *(_QWORD *)(v24 + 16) = v36 + 1;
        sub_23F3269E4();
        sub_23F3269F0(v24 + v37 + *(_QWORD *)(v10 + 72) * v36, v66);
      }
      ++v22;
      v21 = v67;
    }
    while (v20 != v22);
LABEL_23:
    swift_bridgeObjectRelease_n();
    sub_23F33B3B4();
    v42 = swift_allocBox();
    v43 = sub_23F33B42C();
    v44 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, *MEMORY[0x24BEB9CC0], v43);
    v47 = v59;
    v46 = v60;
    *v59 = v44;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v58 + 104))(v47, *MEMORY[0x24BEB9D18], v46);
    sub_23F33B3A8();
    *v52 = v42;
    sub_23F3269D8(*MEMORY[0x24BEB9988], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 104));
    v49 = v53;
    v48 = v54;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v54 + 104))(v53, *MEMORY[0x24BE57170], v55);
    v50 = v57;
    sub_23F3269B4();
    sub_23F3269F8(v49, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
    sub_23F3269CC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v51 = sub_23F326824();
    sub_23F2EBFCC(v50, 0, 1, v51);
    sub_23F2F37B0();
    return;
  }
  __break(1u);
}

void sub_23F325954()
{
  sub_23F325088();
}

void sub_23F325968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F305674();
  v5 = v4;
  v33 = *(_QWORD *)(sub_23F3268E8() - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v6);
  v32 = sub_23F3267B4();
  sub_23F326968();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3267D0();
  sub_23F2EB3F8(&qword_256E69F00);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F326918();
  v9 = sub_23F33A5BC();
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = objc_allocWithZone(MEMORY[0x24BDD9F38]);
    sub_23F30B408(0, 0, 0);
    v15 = v14;
    v16 = sub_23F33A430();
    sub_23F2EE6B8(v3, v17, v18, v16);
    v19 = objc_allocWithZone(MEMORY[0x24BDD9F30]);
    v20 = sub_23F2F04D8(v15, v3, v11, v12, 0, 0, 0, 0, 0);
    v21 = sub_23F3268E0();
    v22 = swift_allocBox();
    v24 = v23;
    v25 = v5;
    v26 = v20;
    sub_23F33B3D8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, *MEMORY[0x24BEB9950], v21);
    *v2 = v22;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BEB9A00], v32);
    sub_23F3269AC(v1, *MEMORY[0x24BE57190], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 104));
    sub_23F3269C0();

    sub_23F326A40(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    (*(void (**)(uint64_t *, uint64_t))(v0 + 8))(v2, v32);
    v27 = sub_23F326824();
    sub_23F2EBFCC(v25, 0, 1, v27);
    sub_23F2F37B0();
  }
  else
  {
    sub_23F326824();
    v28 = sub_23F32680C();
    sub_23F32678C(v28, v29, v30, v31);
  }
}

uint64_t sub_23F325B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  char v85;
  char v86;
  int v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, _QWORD, uint64_t);
  _DWORD v91[5];
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v111 = a4;
  v107 = a2;
  v106 = a1;
  v6 = sub_23F33A9C4();
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE748();
  v143 = v8;
  v142 = sub_23F33B270();
  v147 = *(_QWORD *)(v142 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F2EE748();
  v139 = v10;
  v11 = sub_23F33AAD8();
  v140 = *(_QWORD *)(v11 - 8);
  v141 = v11;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8(&qword_256E6B190);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F2EE748();
  sub_23F32682C(v16);
  v100 = sub_23F33B294();
  v99 = *(_QWORD *)(v100 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F2EE748();
  sub_23F32682C(v18);
  v110 = sub_23F33B330();
  v109 = *(_QWORD *)(v110 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F2EE748();
  sub_23F32682C(v20);
  v124 = sub_23F33B2A0();
  v123 = *(_QWORD *)(v124 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F30C724();
  v116 = v22;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F32682C((uint64_t)v91 - v24);
  v25 = sub_23F33B348();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  sub_23F2EE748();
  sub_23F32682C(v27);
  v28 = sub_23F33B2DC();
  v149 = *(_QWORD *)(v28 - 8);
  v150 = v28;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F2EE748();
  v148 = v30;
  v31 = sub_23F33B204();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  sub_23F326900();
  sub_23F2EB3F8(&qword_256E6A7C0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F30C724();
  v115 = v34;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)v91 - v36;
  sub_23F2EB3F8(&qword_256E6B198);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F30C724();
  v132 = v39;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v40);
  v133 = (uint64_t)v91 - v41;
  v42 = v6;
  sub_23F2EBFCC((uint64_t)v91 - v41, 1, 1, v6);
  v43 = sub_23F33AB2C();
  v120 = v37;
  v44 = (uint64_t)v37;
  v45 = v43;
  sub_23F2EBFCC(v44, 1, 1, v43);
  v46 = sub_23F33ABF8();
  v102 = a3;
  v97 = v46;
  sub_23F2EBFCC(a3, 1, 1, v46);
  v47 = MEMORY[0x24BEE4AF8];
  v138 = *(_QWORD *)(v111 + 16);
  if (!v138)
  {
    v51 = MEMORY[0x24BEE4AF8];
    goto LABEL_49;
  }
  v114 = v45;
  v146 = v14;
  sub_23F3269E4();
  v137 = v48 + v49;
  v136 = *(_QWORD *)(v32 + 72);
  v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v134 = *MEMORY[0x24BEA5518];
  v129 = *MEMORY[0x24BEA5528];
  v121 = *MEMORY[0x24BEA5510];
  v113 = *MEMORY[0x24BEA5520];
  v105 = *MEMORY[0x24BEA5530];
  v112 = *MEMORY[0x24BEA5910];
  v104 = *MEMORY[0x24BEA5928];
  v96 = *MEMORY[0x24BEA5908];
  v94 = *MEMORY[0x24BEA58F8];
  v92 = *MEMORY[0x24BEA5920];
  v91[3] = *MEMORY[0x24BE57830];
  v91[2] = *MEMORY[0x24BE57828];
  v91[4] = *MEMORY[0x24BE57810];
  v93 = *MEMORY[0x24BE57818];
  v95 = *MEMORY[0x24BE57838];
  v103 = *MEMORY[0x24BE57820];
  swift_bridgeObjectRetain();
  v50 = 0;
  v51 = v47;
  v128 = v25;
  v127 = v26;
  v126 = v4;
  v119 = v42;
  v118 = v31;
  v117 = v32;
  do
  {
    v135(v4, v137 + v136 * v50, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 88))(v4, v31);
    sub_23F326800();
    if (v57)
    {
      sub_23F3267A4();
      v52 = v149;
      v53 = v50;
      v54 = v148;
      sub_23F326858(v148, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 32));
      sub_23F33B2AC();
      sub_23F33B2B8();
      sub_23F33B2C4();
      sub_23F33B2D0();
      sub_23F326978();
      goto LABEL_6;
    }
    sub_23F326800();
    if (v57)
    {
      v131 = v50;
      swift_bridgeObjectRelease();
      sub_23F3267A4();
      v58 = v127;
      sub_23F32684C(v130, v4, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v127 + 32));
      v59 = sub_23F33B33C();
      v60 = *(_QWORD *)(v59 + 16);
      if (v60)
      {
        v152 = v47;
        sub_23F2F2F70();
        sub_23F3269E4();
        v125 = v59;
        v62 = v59 + v61;
        v64 = *(_QWORD *)(v63 + 72);
        v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
        v145 = v64;
        do
        {
          v65 = v139;
          v26 = v142;
          v144(v139, v62, v142);
          v151 = sub_23F33B264();
          sub_23F33B258();
          sub_23F33B2AC();
          sub_23F326860();
          sub_23F32686C();
          sub_23F33B2B8();
          sub_23F326860();
          sub_23F32686C();
          sub_23F33B2C4();
          sub_23F326860();
          sub_23F32686C();
          sub_23F33B2D0();
          sub_23F326860();
          sub_23F33A988();
          sub_23F33AACC();
          sub_23F326960(v65, *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));
          v51 = v152;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F2F2F70();
            v51 = v152;
          }
          v66 = *(_QWORD *)(v51 + 16);
          if (v66 >= *(_QWORD *)(v51 + 24) >> 1)
          {
            sub_23F2F2F70();
            v51 = v152;
          }
          *(_QWORD *)(v51 + 16) = v66 + 1;
          sub_23F3269E4();
          (*(void (**)(unint64_t, char *))(v68 + 32))(v51 + v67 + *(_QWORD *)(v68 + 72) * v66, v146);
          v152 = v51;
          v62 += v145;
          --v60;
        }
        while (v60);
        swift_bridgeObjectRelease();
        v42 = v119;
        v76 = v128;
        v58 = v127;
        v31 = v118;
        v32 = v117;
        v4 = v126;
        v47 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        swift_bridgeObjectRelease();
        v76 = v26;
        v51 = v47;
      }
      v50 = v131;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v130, v76);
    }
    else
    {
      sub_23F326800();
      if (v69)
      {
        v70 = v50;
        sub_23F3267A4();
        v71 = v123;
        v72 = v4;
        v73 = v122;
        sub_23F32684C(v122, v72, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v123 + 32));
        v74 = v116;
        sub_23F326858(v116, v73, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
        (*(void (**)(uint64_t, uint64_t))(v71 + 88))(v74, v26);
        sub_23F326800();
        if (v57)
        {
          v75 = v115;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v114 - 8) + 104))(v115, v103, v114);
          sub_23F326930(v75);
          v4 = v126;
        }
        else
        {
          sub_23F326800();
          v4 = v126;
          v79 = v115;
          if (v78 || (sub_23F326800(), v85 || (sub_23F326800(), v86)))
          {
            v88 = sub_23F3267E8();
            goto LABEL_42;
          }
          v89 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v114 - 8) + 104);
          if (v87 == v92)
          {
            v88 = v79;
LABEL_42:
            sub_23F326A08(v88, v89);
            sub_23F3268AC();
          }
          else
          {
            sub_23F326A08(v79, v89);
            sub_23F3268AC();
            sub_23F3268F0(*(uint64_t (**)(_QWORD, _QWORD))(v123 + 8));
          }
          v75 = v79;
        }
        sub_23F3268F0(*(uint64_t (**)(_QWORD, _QWORD))(v123 + 8));
        v26 = (uint64_t)v120;
        sub_23F326A00((uint64_t)v120);
        sub_23F326A1C(v75);
        v50 = v70;
        goto LABEL_45;
      }
      sub_23F326800();
      if (v77)
      {
        sub_23F3267A4();
        v52 = v109;
        v53 = v50;
        v54 = v108;
        sub_23F32684C(v108, v4, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v109 + 32));
        sub_23F33B2E8();
        sub_23F33B2F4();
        sub_23F33B300();
        sub_23F33B318();
        sub_23F33B324();
        sub_23F33B30C();
        sub_23F326978();
LABEL_6:
        sub_23F33A988();
        v55 = v54;
        v50 = v53;
        sub_23F326960(v55, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
        v26 = v133;
        sub_23F326A00(v133);
        sub_23F2EBFCC(v47, 0, 1, v42);
        v56 = v47;
        v47 = MEMORY[0x24BEE4AF8];
LABEL_7:
        sub_23F326A1C(v56);
        goto LABEL_45;
      }
      sub_23F326800();
      if (v80)
      {
        sub_23F3267A4();
        v81 = v99;
        v82 = v98;
        sub_23F32684C(v98, v4, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v99 + 32));
        v131 = v50;
        sub_23F33B27C();
        sub_23F33B288();
        v83 = v101;
        v4 = v126;
        sub_23F33ABEC();
        v84 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
        v47 = MEMORY[0x24BEE4AF8];
        sub_23F326960(v82, v84);
        v26 = v102;
        sub_23F326A00(v102);
        sub_23F2EBFCC(v83, 0, 1, v97);
        v56 = v83;
        v50 = v131;
        goto LABEL_7;
      }
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v4, v31);
    }
LABEL_45:
    ++v50;
  }
  while (v50 != v138);
  swift_bridgeObjectRelease();
LABEL_49:
  sub_23F2F8754(v133, v106, &qword_256E6B198);
  sub_23F2F8754((uint64_t)v120, v107, &qword_256E6A7C0);
  return v51;
}

unint64_t sub_23F32674C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6BF18;
  if (!qword_256E6BF18)
  {
    v1 = sub_23F33AB2C();
    result = MEMORY[0x2426695B0](MEMORY[0x24BE57850], v1);
    atomic_store(result, (unint64_t *)&qword_256E6BF18);
  }
  return result;
}

uint64_t sub_23F32678C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F2EBFCC(a1, a2, a3, a4);
}

uint64_t sub_23F3267A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t sub_23F3267B4()
{
  return sub_23F33B420();
}

uint64_t sub_23F3267E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F32680C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F326824()
{
  return sub_23F33AA84();
}

uint64_t sub_23F32682C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_23F32683C()
{
  return swift_release();
}

uint64_t sub_23F32684C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23F326858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F326860()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F32686C()
{
  return sub_23F33B258();
}

uint64_t sub_23F326878()
{
  return swift_bridgeObjectRelease();
}

void sub_23F326884(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

id sub_23F3268A0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_23F3268AC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F2EBFCC(v0, 0, 1, v1);
}

void sub_23F3268C0(uint64_t a1)
{
  uint64_t *v1;

  sub_23F2F6AF4(a1, v1);
}

uint64_t sub_23F3268C8()
{
  return sub_23F33B4F8();
}

uint64_t sub_23F3268D4()
{
  return sub_23F33A688();
}

uint64_t sub_23F3268E0()
{
  return sub_23F33B408();
}

uint64_t sub_23F3268E8()
{
  return sub_23F33A964();
}

uint64_t sub_23F3268F0@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), *(_QWORD *)(v2 - 368));
}

uint64_t sub_23F326930(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFCC(a1, 0, 1, v1);
}

uint64_t sub_23F326940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

uint64_t sub_23F326950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F326960@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

float sub_23F326978()
{
  float v0;

  return v0;
}

uint64_t sub_23F326990(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFC0(a1, 1, v1);
}

uint64_t sub_23F3269AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_23F3269B4()
{
  sub_23F324990();
}

void sub_23F3269C0()
{
  sub_23F324990();
}

uint64_t sub_23F3269CC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3269D8@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_23F3269F0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F3269F8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_23F326A00(uint64_t a1)
{
  uint64_t *v1;

  sub_23F2F6AF4(a1, v1);
}

uint64_t sub_23F326A08@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(unsigned int *)(v2 - 256), v3);
}

uint64_t sub_23F326A14()
{
  return swift_bridgeObjectRelease();
}

void sub_23F326A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_23F2F8754(a1, v1, v2);
}

uint64_t sub_23F326A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F2EBFCC(a1, a2, 1, v2);
}

uint64_t sub_23F326A34()
{
  return sub_23F30B624();
}

uint64_t sub_23F326A40@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_23F326A4C()
{
  sub_23F328D54();
}

uint64_t TextEntityDetectorProtocol.detectEntitiesWithLogging(text:)(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = sub_23F33B8C4();
  v30 = *(_QWORD *)(v32 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE798();
  v11 = v10 - v9;
  v31 = sub_23F33B8DC();
  v29 = *(_QWORD *)(v31 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F2EE798();
  v15 = v14 - v13;
  sub_23F2EB3F8((uint64_t *)&unk_254346220);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F2EE798();
  v19 = v18 - v17;
  v28 = sub_23F33AA48();
  v27 = *(_QWORD *)(v28 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F2EE798();
  v23 = v22 - v21;
  v24 = sub_23F33B1B0();
  sub_23F2EBFCC(v19, 1, 1, v24);
  sub_23F33AA30();
  sub_23F326C54(v19);
  sub_23F33B8D0();
  sub_23F33B8AC();
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, uint64_t))(a4 + 16))(a1, a2, a3, a4);
  sub_23F326CF0(v23, a1, a2, v11, v15, a3);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v11, v32);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v15, v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v23, v28);
  return v25;
}

uint64_t sub_23F326C54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8((uint64_t *)&unk_254346220);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F326C94()
{
  sub_23F328800();
}

#error "23F326CBC: call analysis failed (funcsize=6)"

void sub_23F326CC8()
{
  sub_23F328BB0();
}

uint64_t sub_23F326CDC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  return TextEntityDetectorProtocol.detectEntitiesWithLogging(text:)(a1, a2, a3, a4);
}

uint64_t sub_23F326CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  NSObject *v23;
  uint64_t result;
  char *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  os_signpost_id_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float v42;
  id v43;
  double v44;
  void *v45;
  _QWORD v46[2];
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  Swift::String_optional v69;

  v64 = a6;
  v61 = a5;
  v63 = a4;
  v58 = a3;
  v57 = a2;
  v62 = sub_23F33B8C4();
  v60 = *(_QWORD *)(v62 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F2EE748();
  v59 = v7;
  v56 = sub_23F33B168();
  v55 = *(_QWORD *)(v56 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F2EE748();
  v54 = v9;
  v10 = sub_23F33B138();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v53 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v46 - v14;
  v16 = sub_23F33B15C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F2EE798();
  v20 = v19 - v18;
  sub_23F33AA0C();
  v65 = sub_23F33AA24();
  v22 = v21;
  sub_23F33AA3C();
  v23 = sub_23F33B150();
  sub_23F33B174();
  v52 = sub_23F33B75C();
  result = sub_23F33B798();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
    v30 = v64;
    sub_23F2EB3F8(&qword_256E6A3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F33EA90;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000023F33DF10;
    *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, sub_23F33B570());
    *(_QWORD *)(inited + 56) = 0xD000000000000013;
    *(_QWORD *)(inited + 64) = 0x800000023F33DF30;
    sub_23F2F0818(0, &qword_256E6A3E0);
    v68 = (uint64_t)v30;
    swift_getMetatypeMetadata();
    sub_23F33B540();
    *(_QWORD *)(inited + 72) = sub_23F32A1B0();
    type metadata accessor for Analytics();
    *(_QWORD *)(inited + 80) = 0x79636E6574616CLL;
    *(_QWORD *)(inited + 88) = 0xE700000000000000;
    v39 = v59;
    sub_23F33B8AC();
    sub_23F33B8B8();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v39, v62);
    v40 = sub_23F33BA14();
    v42 = (double)v40 * 1000.0 + (double)v41 * 1.0e-15;
    v43 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    *(float *)&v44 = v42;
    *(_QWORD *)(inited + 96) = objc_msgSend(v43, sel_initWithFloat_, v44);
    sub_23F2F0818(0, (unint64_t *)&qword_254346390);
    v45 = (void *)sub_23F33B4B0();
    v69.value._countAndFlagsBits = 0;
    v69.value._object = 0;
    static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(1769238085, 1952671092, v69, v45);
    return swift_bridgeObjectRelease();
  }
  v49 = v20;
  v48 = v23;
  v50 = v17;
  v51 = v16;
  v47 = v10;
  if ((v22 & 1) == 0)
  {
    if (v65)
    {
      v25 = v15;
      v26 = v64;
      v27 = v56;
      v28 = v55;
      v29 = v54;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (HIDWORD(v65))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v65 >> 11 != 27)
  {
    v25 = v15;
    v26 = v64;
    v27 = v56;
    v28 = v55;
    v29 = v54;
    if (WORD1(v65) <= 0x10u)
    {
      v65 = (unint64_t)&v67;
LABEL_10:
      swift_retain();
      sub_23F33B198();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v28 + 88))(v29, v27) == *MEMORY[0x24BEE7810])
      {
        v31 = 0;
        v64 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
        v64 = "EntityDetector=%{signpost.telemetry:string1,public}s %s";
        v31 = 2;
      }
      v46[1] = v11;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v25, v47);
      v32 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      *(_BYTE *)v32 = v31;
      *(_BYTE *)(v32 + 1) = v31;
      *(_WORD *)(v32 + 2) = 2082;
      v66 = (uint64_t)v26;
      swift_getMetatypeMetadata();
      v33 = sub_23F33B540();
      v66 = sub_23F3273CC(v33, v34);
      sub_23F3273BC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_23F33AA18();
      v35 = sub_23F33B834();
      v66 = sub_23F3273CC(v35, v36);
      sub_23F3273BC();
      swift_bridgeObjectRelease();
      v37 = sub_23F33B12C();
      _os_signpost_emit_with_name_impl(&dword_23F2E8000, v48, (os_signpost_type_t)v52, v37, (const char *)v65, v64, (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      sub_23F2F3748();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of TextEntityDetectorProtocol.supportedEntities.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TextEntityDetectorProtocol.detectEntities(text:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TextEntityDetectorProtocol.detectEntitiesWithLogging(text:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_23F3273BC()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F3273CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23F30DBFC(a1, a2, (uint64_t *)(v2 - 216));
}

uint64_t sub_23F3273D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;

  v70 = a2;
  sub_23F2EB3F8(&qword_256E69DB0);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F2EE748();
  v72 = v4;
  sub_23F2EB3F8(&qword_256E6BF20);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F2EE748();
  v71 = v6;
  sub_23F2EB3F8(&qword_256E6BF28);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F2EE748();
  v68 = v8;
  sub_23F2EB3F8(&qword_2543461B8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F30C724();
  v73 = v10;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v66 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v66 - v15;
  v17 = sub_23F33A46C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F30C724();
  v75 = v19;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v74 = (char *)v66 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v66 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)v66 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v66 - v29;
  sub_23F3278C8(a1, (uint64_t)v16);
  v31 = sub_23F33A31C();
  sub_23F3279F0((uint64_t)v16);
  if (v32)
  {
    sub_23F2F0794((uint64_t)v16, &qword_2543461B8);
    sub_23F327A24();
  }
  else
  {
    sub_23F33A2F8();
    sub_23F31D5C8((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8));
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v30, v28, v17);
  }
  v33 = sub_23F33B528();
  v69 = v34;
  sub_23F3278C8(a1, (uint64_t)v14);
  sub_23F3279F0((uint64_t)v14);
  v35 = v73;
  if (v32)
  {
    sub_23F2F0794((uint64_t)v14, &qword_2543461B8);
    v38 = v68;
    sub_23F2EBFCC(v68, 1, 1, v17);
    v36 = v72;
LABEL_8:
    sub_23F327A24();
    sub_23F2F0794(v38, &qword_256E6BF28);
    goto LABEL_10;
  }
  v37 = v68;
  sub_23F33A304();
  v38 = v37;
  sub_23F31D5C8((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8));
  v39 = sub_23F2EBFC0(v37, 1, v17);
  v36 = v72;
  if (v39 == 1)
    goto LABEL_8;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v25, v38, v17);
LABEL_10:
  v40 = v71;
  v41 = sub_23F33B528();
  v43 = v42;
  v44 = sub_23F33B450();
  sub_23F2EE6B8(v40, v45, v46, v44);
  v47 = sub_23F33B444();
  sub_23F2EE6B8(v36, v48, v49, v47);
  sub_23F3278C8(a1, v35);
  sub_23F3279F0(v35);
  if (v32)
  {
    sub_23F2F0794(v35, &qword_2543461B8);
  }
  else
  {
    v68 = v43;
    v50 = sub_23F33A310();
    sub_23F31D5C8(v35, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8));
    v51 = v50;
    v52 = *(_QWORD *)(v50 + 16);
    if (v52)
    {
      v66[1] = v41;
      v66[2] = v33;
      v67 = a1;
      v53 = v51 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      v73 = *(_QWORD *)(v18 + 72);
      v54 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
      v66[0] = v51;
      swift_bridgeObjectRetain();
      v55 = MEMORY[0x24BEE4AF8];
      v56 = v18;
      do
      {
        v57 = v74;
        v54(v74, v53, v17);
        v54(v75, (unint64_t)v57, v17);
        v58 = sub_23F33B528();
        v60 = v59;
        (*(void (**)(char *, uint64_t))(v18 + 8))(v57, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F327A18();
          v55 = v63;
        }
        v61 = *(_QWORD *)(v55 + 16);
        if (v61 >= *(_QWORD *)(v55 + 24) >> 1)
        {
          sub_23F327A18();
          v55 = v64;
        }
        *(_QWORD *)(v55 + 16) = v61 + 1;
        v62 = v55 + 16 * v61;
        *(_QWORD *)(v62 + 32) = v58;
        *(_QWORD *)(v62 + 40) = v60;
        v53 += v73;
        --v52;
        v18 = v56;
      }
      while (v52);
      swift_bridgeObjectRelease_n();
      a1 = v67;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_23F33B468();
  return sub_23F2F0794(a1, &qword_2543461B8);
}

uint64_t sub_23F3278C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_2543461B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F327910(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F2FF434();
    sub_23F2FF3E8();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_23F33B600() + 16) = a1;
    sub_23F327A0C();
  }
}

void sub_23F32797C(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F2FF434();
    sub_23F2FF3E8();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23F2EB3F8(&qword_256E6BF30);
      *(_QWORD *)(sub_23F33B600() + 16) = a1;
    }
    sub_23F327A0C();
  }
}

uint64_t sub_23F3279F0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFC0(a1, 1, v1);
}

void sub_23F327A18()
{
  sub_23F30BA30();
}

uint64_t sub_23F327A24()
{
  return sub_23F33A460();
}

uint64_t sub_23F327A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v7 = sub_23F2EB3F8(&qword_256E6BF40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F33B00C();
  v28 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v27 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v25 = (char *)&v22 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = *(_QWORD *)(sub_23F33A868() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v26 = *(_QWORD *)(v15 + 72);
    v22 = a1;
    swift_bridgeObjectRetain();
    v17 = MEMORY[0x24BEE4AF8];
    v23 = a2;
    v24 = a3;
    while (1)
    {
      sub_23F328470(v16, a2, a3, (uint64_t)v9);
      if (v3)
        break;
      if (sub_23F2EBFC0((uint64_t)v9, 1, v10) == 1)
      {
        sub_23F3287C0((uint64_t)v9);
      }
      else
      {
        v18 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        v19 = v25;
        v18(v25, v9, v10);
        v18(v27, v19, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_23F30BBE8();
        v20 = *(_QWORD *)(v17 + 16);
        if (v20 >= *(_QWORD *)(v17 + 24) >> 1)
          v17 = sub_23F30BBE8();
        *(_QWORD *)(v17 + 16) = v20 + 1;
        v18((char *)(v17+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v20), v27, v10);
        a2 = v23;
        a3 = v24;
      }
      v16 += v26;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v17;
}

uint64_t sub_23F327CB4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[2];

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23F327E60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_23F33B1B0();
  v0[11] = v1;
  v0[12] = *(_QWORD *)(v1 - 8);
  v0[13] = sub_23F2F6B70();
  v2 = sub_23F33B0F0();
  v0[14] = v2;
  v0[15] = *(_QWORD *)(v2 - 8);
  v0[16] = sub_23F2F6B70();
  v3 = sub_23F33B108();
  v0[17] = v3;
  v0[18] = *(_QWORD *)(v3 - 8);
  v0[19] = sub_23F2F6B70();
  v4 = sub_23F33B06C();
  v0[20] = v4;
  v0[21] = *(_QWORD *)(v4 - 8);
  v0[22] = sub_23F2F6B70();
  v5 = sub_23F33B090();
  v0[23] = v5;
  v0[24] = *(_QWORD *)(v5 - 8);
  v0[25] = sub_23F2F6B70();
  v6 = sub_23F33B0CC();
  v0[26] = v6;
  v0[27] = *(_QWORD *)(v6 - 8);
  v0[28] = sub_23F2F6B70();
  return swift_task_switch();
}

uint64_t sub_23F327F3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  sub_23F33B0C0();
  sub_23F2EB3F8(&qword_2543463C8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F33E710;
  sub_23F33B078();
  v0[8] = v4;
  sub_23F309500(&qword_254346218, (uint64_t (*)(uint64_t))MEMORY[0x24BEBBD68], MEMORY[0x24BEBBD78]);
  sub_23F2EB3F8(&qword_254346348);
  sub_23F32832C();
  sub_23F33B7EC();
  sub_23F33B0B4();
  sub_23F33B114();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEBBDD8], v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[29] = v5;
  *v5 = v0;
  v5[1] = sub_23F32809C;
  return sub_23F33B0FC();
}

uint64_t sub_23F32809C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23F328110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *(_QWORD *)(v0 + 72) = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 120);
  sub_23F33B048();
  v3 = sub_23F33B0D8();
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v0 + 72;
  sub_23F327CB4(sub_23F328458, v4, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_23F33AC34();
  v5 = sub_23F33B1A4();
  v6 = sub_23F33B6D8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134349056;
    sub_23F2FD878();
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
    sub_23F33B7BC();
    _os_log_impl(&dword_23F2E8000, v5, v6, "retrieved %{public}ld elements", v7, 0xCu);
    MEMORY[0x242669658](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 216);
  v9 = v5;
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  sub_23F2FD4F4(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v17);
  sub_23F2FD878();
  v15 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

unint64_t sub_23F32832C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254346350;
  if (!qword_254346350)
  {
    v1 = sub_23F2F244C(&qword_254346348);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254346350);
  }
  return result;
}

void sub_23F328370(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23F33B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v6 = a1[1];
  sub_23F33B048();
  v8 = sub_23F33B0E4();
  swift_bridgeObjectRetain();
  sub_23F327A30(v8, v7, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23F3099B0();
}

void sub_23F328458(uint64_t *a1)
{
  sub_23F328370(a1);
}

uint64_t sub_23F328470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a3;
  v45 = a2;
  v6 = sub_23F2EB3F8(&qword_2543461E0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F33A82C();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33AD9C();
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F33A868();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F33A85C();
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 0x2000000000000000) != 0)
    v20 = HIBYTE(v19) & 0xF;
  else
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v21 = sub_23F33A844();
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 0x2000000000000000) != 0)
      v24 = HIBYTE(v23) & 0xF;
    else
      v24 = v21 & 0xFFFFFFFFFFFFLL;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (!v24)
    {
      v34 = 1;
      goto LABEL_11;
    }
  }
  v25 = sub_23F33A85C();
  v37[0] = v26;
  v37[1] = v25;
  sub_23F33A844();
  v38 = a4;
  sub_23F33A838();
  sub_23F309500(&qword_256E6BF48, (uint64_t (*)(uint64_t))MEMORY[0x24BEBB6F0], MEMORY[0x24BEBB710]);
  v27 = v40;
  sub_23F33B96C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v27);
  sub_23F33A850();
  v28 = v41;
  a4 = v38;
  sub_23F33AD90();
  v30 = v42;
  v29 = v43;
  v31 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v44, v28, v43);
  v32 = *MEMORY[0x24BE54190];
  v33 = sub_23F33ADA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  sub_23F2EBFCC(v31, 0, 1, v33);
  swift_bridgeObjectRetain();
  sub_23F33AFF4();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  v34 = 0;
LABEL_11:
  v35 = sub_23F33B00C();
  return sub_23F2EBFCC(a4, v34, 1, v35);
}

uint64_t sub_23F3287C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_256E6BF40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F328800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F33357C();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F2FD7C8();
  v20 = *(_QWORD *)(v10 - 8);
  v21 = v10;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F2FD6F0();
  v19 = *(_QWORD *)(sub_23F33B8DC() - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F33366C();
  sub_23F2EB3F8((uint64_t *)&unk_254346220);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3335B4();
  v18 = sub_23F33AA48();
  v14 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v15 = sub_23F33350C();
  sub_23F2EE6B8(v2, v16, v17, v15);
  sub_23F3334E4();
  sub_23F2FD434(v2, (uint64_t *)&unk_254346220);
  sub_23F33B8D0();
  sub_23F33B8AC();
  sub_23F2EBE84(v9, v7, v5);
  sub_23F33B774();
  sub_23F32A6B0(v0, v9, v7, v1, v3, (uint64_t)&type metadata for NLTaggerBasedEntityDetector, (uint64_t)&unk_256E6C000);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v21);
  sub_23F333858(v19);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v18);
  sub_23F3332E4();
}

void sub_23F3289F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_23F33357C();
  a19 = v25;
  a20 = v26;
  v49 = v22;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = sub_23F2FD7C8();
  v52 = *(_QWORD *)(v33 - 8);
  v53 = v33;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v48 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23F33369C();
  v50 = *(_QWORD *)(v37 - 8);
  v51 = v37;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F333684();
  sub_23F2EB3F8((uint64_t *)&unk_254346220);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F31D4A8();
  v40 = sub_23F33AA48();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F2FD6F0();
  v42 = sub_23F33B1B0();
  sub_23F2EE6B8(v20, v43, v44, v42);
  sub_23F3334E4();
  sub_23F2FD434(v20, (uint64_t *)&unk_254346220);
  sub_23F33B8D0();
  v45 = sub_23F33B8AC();
  a10 = MEMORY[0x24BEE4AF8];
  v46 = (void *)MEMORY[0x242669178](v45);
  v47 = v49;
  sub_23F30FCB8(v28, v32, v30, (uint64_t)&a10);
  objc_autoreleasePoolPop(v46);
  if (v47)
  {
    __break(1u);
  }
  else
  {
    sub_23F32A6B0(v24, v32, v30, (uint64_t)v36, v21, (uint64_t)&type metadata for NSDataDetectorBasedEntityDetector, (uint64_t)&unk_256E6BFF8);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v53);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v21, v51);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v40);
    sub_23F3332E4();
  }
}

void sub_23F328BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F33357C();
  v20 = v0;
  v4 = v3;
  v6 = v5;
  v24 = sub_23F2FD7C8();
  v22 = *(_QWORD *)(v24 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F33369C();
  v21 = *(_QWORD *)(v23 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F2EB3F8((uint64_t *)&unk_254346220);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F333684();
  v14 = sub_23F33AA48();
  sub_23F33356C();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F3334F0();
  sub_23F2EE6B8(v0, v17, v18, v16);
  sub_23F3334E4();
  sub_23F2FD434(v0, (uint64_t *)&unk_254346220);
  sub_23F33B8D0();
  sub_23F33B8AC();
  SiriEntityMatcherEntityDetector.detectEntities(text:)();
  sub_23F32AB48(v2, v6, v4, (uint64_t)v9, (uint64_t)v12, (uint64_t)type metadata accessor for SiriEntityMatcherEntityDetector, (uint64_t)&unk_256E6BFF0);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v24);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v14);
  sub_23F3332E4();
}

void sub_23F328D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F33357C();
  v19 = v4;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F2FD7C8();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F326900();
  v20 = *(_QWORD *)(sub_23F33369C() - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F33366C();
  sub_23F2EB3F8((uint64_t *)&unk_254346220);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F2FD6F0();
  v13 = sub_23F33AA48();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_23F33350C();
  sub_23F2EE6B8(v2, v16, v17, v15);
  sub_23F3334E4();
  sub_23F2FD434(v2, (uint64_t *)&unk_254346220);
  sub_23F33B8D0();
  sub_23F33B8AC();
  sub_23F2EBE84(v8, v6, v19);
  if (qword_256E69960 != -1)
    v18 = swift_once();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F33B774();
  sub_23F32A6B0(v0, v8, v6, v1, v3, (uint64_t)&type metadata for BERTBasedEntityDetector, (uint64_t)&unk_256E6C008);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v22);
  sub_23F333858(v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v13);
  sub_23F3332E4();
}

uint64_t sub_23F328F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = sub_23F33B8C4();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F33B8DC();
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F2EB3F8((uint64_t *)&unk_254346220);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33AA48();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F33B1B0();
  sub_23F2EBFCC((uint64_t)v10, 1, 1, v15);
  sub_23F33AA30();
  sub_23F2FD434((uint64_t)v10, (uint64_t *)&unk_254346220);
  sub_23F33B8D0();
  sub_23F33B8AC();
  v16 = sub_23F337DF0(a1, a2);
  sub_23F32AB48((uint64_t)v14, a1, a2, (uint64_t)v5, (uint64_t)v7, (uint64_t)type metadata accessor for UIEntityDetector, (uint64_t)&unk_256E6BF88);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v22);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v21);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v16;
}

uint64_t sub_23F329188(uint64_t a1)
{
  int64_t v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23F2F2D28(0, v1, 0);
    isUniquelyReferenced_nonNull_native = sub_23F33A940();
    v4 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
      sub_23F33A8BC();
      swift_bridgeObjectRelease();
      v7 = v12;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_23F2F2D28(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v7 = v12;
      }
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      v10 = v9 + 1;
      if (v9 >= v8 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_23F2F2D28((char *)(v8 > 1), v9 + 1, 1);
        v7 = v12;
      }
      *(_QWORD *)(v7 + 16) = v10;
      v5 += v6;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_23F329350(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t *v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;

  v51 = a3;
  v6 = sub_23F33AD30();
  v53 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v42 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v57 = MEMORY[0x24BEE4AF8];
    v43 = v12;
    sub_23F2F2D28(0, v12, 0);
    v13 = v57;
    v14 = *(_QWORD *)(sub_23F33A4A8() - 8);
    v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v46 = v3;
    v16 = a1 + v15;
    v44 = *(_QWORD *)(v14 + 72);
    v17 = sub_23F33A478();
    v45 = a2;
    v18 = v46;
    v20 = sub_23F328F74(v17, v19);
    v21 = v18;
    if (v18)
    {
LABEL_3:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42[1] = v16;
      v22 = 1;
      while (1)
      {
        v47 = v22;
        v48 = v20;
        swift_bridgeObjectRelease();
        v50 = *(_QWORD *)(v48 + 16);
        if (v50)
        {
          v46 = v21;
          v23 = 0;
          v49 = v48 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
          v24 = *(void (**)(char *, unint64_t, uint64_t))(v53 + 16);
          v54 = *(_QWORD *)(v53 + 72);
          v55 = v24;
          do
          {
            v52 = v23;
            v55(v11, v49 + v54 * v23, v6);
            v25 = *v51;
            sub_23F3331C8(&qword_256E6BBB8, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
            swift_bridgeObjectRetain();
            v26 = v11;
            v27 = sub_23F33B4BC();
            v28 = -1 << *(_BYTE *)(v25 + 32);
            v29 = v27 & ~v28;
            if (((*(_QWORD *)(v25 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
            {
              v30 = ~v28;
              while (1)
              {
                v55(v9, *(_QWORD *)(v25 + 48) + v29 * v54, v6);
                sub_23F3331C8(qword_256E6BBC0, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
                v31 = sub_23F33B4EC();
                v32 = *(void (**)(char *, uint64_t))(v53 + 8);
                v32(v9, v6);
                if ((v31 & 1) != 0)
                  break;
                v29 = (v29 + 1) & v30;
                if (((*(_QWORD *)(v25 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
                  goto LABEL_12;
              }
              swift_bridgeObjectRelease();
              v11 = v26;
            }
            else
            {
LABEL_12:
              swift_bridgeObjectRelease();
              v33 = v51;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v11 = v26;
              v55(v9, (unint64_t)v26, v6);
              v56 = *v33;
              *v33 = 0x8000000000000000;
              sub_23F331268((uint64_t)v9, v29, isUniquelyReferenced_nonNull_native);
              *v33 = v56;
              swift_bridgeObjectRelease();
              v32 = *(void (**)(char *, uint64_t))(v53 + 8);
            }
            v35 = v52;
            v32(v11, v6);
            v23 = v35 + 1;
          }
          while (v23 != v50);
          swift_bridgeObjectRelease();
          v21 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v13 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F2F2D28(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = v57;
        }
        v37 = *(_QWORD *)(v13 + 16);
        v36 = *(_QWORD *)(v13 + 24);
        v38 = v37 + 1;
        if (v37 >= v36 >> 1)
        {
          sub_23F2F2D28((char *)(v36 > 1), v37 + 1, 1);
          v13 = v57;
        }
        *(_QWORD *)(v13 + 16) = v38;
        if (v47 == v43)
          break;
        v22 = v47 + 1;
        v39 = sub_23F33A478();
        v20 = sub_23F328F74(v39, v40);
        if (v21)
          goto LABEL_3;
      }
      swift_release();
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v13;
}

uint64_t sub_23F32977C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  int v15;
  int v16;
  char v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int64_t v22;
  void (*v23)(char *, int64_t, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;

  v37 = sub_23F33AD30();
  v39 = *(_QWORD *)(v37 - 8);
  v5 = MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)v29 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)v29 - v9;
  v10 = sub_23F33AFA0();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v29[1] = v2;
    v42 = MEMORY[0x24BEE4AF8];
    sub_23F2F2E00();
    result = sub_23F333108(a1);
    v14 = result;
    v16 = v15;
    v18 = v17 & 1;
    v31 = a2;
    v32 = a1 + 56;
    v30 = a1;
    v20 = v36;
    v19 = v37;
    while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v32 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(a1 + 36) != v16)
        goto LABEL_17;
      v40 = v18;
      v21 = v39;
      v22 = *(_QWORD *)(a1 + 48) + *(_QWORD *)(v39 + 72) * v14;
      v23 = *(void (**)(char *, int64_t, uint64_t))(v39 + 16);
      v24 = v35;
      v23(v35, v22, v19);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v24, v19);
      v23(v38, (int64_t)v20, v19);
      sub_23F319B78();
      sub_23F33AFAC();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v19);
      v25 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F2F2E00();
        v25 = v42;
      }
      v26 = *(_QWORD *)(v25 + 16);
      if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_23F2F2E00();
        v25 = v42;
      }
      *(_QWORD *)(v25 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v25+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v26, v41, v34);
      v42 = v25;
      a1 = v30;
      result = sub_23F333024(v14, v16, v40 & 1, v30);
      v14 = result;
      v16 = v27;
      v18 = v28 & 1;
      if (!--v12)
      {
        sub_23F333188(result, v27, v18);
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23F329A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v3 = v2;
  v6 = sub_23F2EB3F8(&qword_2543461F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F33AE14();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v36 = (char *)&v32 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v32 = a1;
    v33 = v18;
    v19 = a1 + v18;
    v20 = *(_QWORD *)(v10 + 72);
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v40 = MEMORY[0x24BEE4AF8];
    v34 = v10;
    v35 = a2;
    v38 = v20;
    do
    {
      v37(v15, v19, v9);
      v21 = sub_23F33ADFC();
      swift_bridgeObjectRetain();
      sub_23F32A2E0(v21, a2);
      sub_23F33AE08();
      v22 = *(_QWORD *)(sub_23F33ADFC() + 16);
      swift_bridgeObjectRelease();
      if (v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v15, v9);
        v23 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        v23 = 1;
      }
      sub_23F2EBFCC((uint64_t)v8, v23, 1, v9);
      if (sub_23F2EBFC0((uint64_t)v8, 1, v9) == 1)
      {
        sub_23F2FD434((uint64_t)v8, &qword_2543461F0);
        v24 = v38;
      }
      else
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v26 = v36;
        v25(v36, v8, v9);
        v25(v39, v26, v9);
        v27 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v28 = v40;
        else
          v28 = sub_23F30B9C0();
        v29 = *(_QWORD *)(v28 + 16);
        if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
          v28 = sub_23F30B9C0();
        *(_QWORD *)(v28 + 16) = v29 + 1;
        v40 = v28;
        v30 = v38;
        v25((char *)(v28 + v33 + v29 * v38), v39, v9);
        v24 = v30;
        v3 = v27;
        v10 = v34;
        a2 = v35;
      }
      v19 += v24;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t sub_23F329D7C(char *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v42 = a3;
  v37 = a2;
  v49 = a1;
  v3 = sub_23F2EB3F8((uint64_t *)&unk_2543461C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23F33A4A8();
  v47 = *(_QWORD *)(v36 - 8);
  v6 = MEMORY[0x24BDAC7A8](v36);
  v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v36 - v8;
  v9 = sub_23F2EB3F8(&qword_256E6BF90);
  MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F2EB3F8(&qword_256E6BF98);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F2EB3F8(&qword_256E6BF70);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F2EB3F8(&qword_256E6BFA0);
  v38 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v49, v14);
  sub_23F333194(&qword_256E6BFA8, &qword_256E6BF70);
  v21 = v9;
  sub_23F33B5AC();
  sub_23F333194(&qword_256E6BFB0, &qword_256E6BFA0);
  v23 = v22;
  v49 = v20;
  v24 = v18;
  sub_23F33B7B0();
  if (sub_23F2EBFC0((uint64_t)v13, 1, v9) == 1)
  {
    v48 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v43 = v23;
    v26 = v36;
    v27 = v37;
    v48 = MEMORY[0x24BEE4AF8];
    v39 = v24;
    v40 = v21;
    v44 = v13;
    do
    {
      v28 = (uint64_t)v13;
      v29 = v45;
      sub_23F2F8754(v28, v45, &qword_256E6BF90);
      v27(v29, v29 + *(int *)(v21 + 48));
      sub_23F2FD434(v29, &qword_256E6BF90);
      if (sub_23F2EBFC0((uint64_t)v5, 1, v26) == 1)
      {
        sub_23F2FD434((uint64_t)v5, (uint64_t *)&unk_2543461C0);
        v30 = v24;
      }
      else
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v32 = v41;
        v31(v41, v5, v26);
        v31(v46, v32, v26);
        v33 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_23F30BC04();
        v34 = *(_QWORD *)(v33 + 16);
        if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
          v33 = sub_23F30BC04();
        *(_QWORD *)(v33 + 16) = v34 + 1;
        v35 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        v48 = v33;
        v31((char *)(v33 + v35 + *(_QWORD *)(v47 + 72) * v34), v46, v26);
        v30 = v39;
        v21 = v40;
      }
      v13 = v44;
      v24 = v30;
      sub_23F33B7B0();
    }
    while (sub_23F2EBFC0((uint64_t)v13, 1, v21) != 1);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v24);
  return v48;
}

id sub_23F32A1B0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_23F33B4F8();
  sub_23F2FD7D0();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_23F32A21C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_23F33B978();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23F33B978() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F32A2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a2;
  v4 = sub_23F33AF70();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F33AD30();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F33AFA0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)v35 - v14;
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v35 - v16;
  v18 = MEMORY[0x24BEE4AF8];
  v50 = MEMORY[0x24BEE4AF8];
  v38 = *(_QWORD *)(a1 + 16);
  if (!v38)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  v35[1] = v2;
  v36 = a1;
  v19 = 0;
  v42 = v9;
  v48 = (char *)v35 - v16;
  v49 = v10;
  while (v19 < *(_QWORD *)(a1 + 16))
  {
    v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v46 = *(_QWORD *)(v10 + 72);
    v47 = v20;
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v21(v17, a1 + v20 + v46 * v19, v9);
    v22 = v39;
    sub_23F33AF94();
    sub_23F33AD24();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v41);
    v23 = *(_QWORD *)(v44 + 16);
    if (!v23)
    {
LABEL_9:
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
      v26 = v37;
      v17 = v48;
      v21(v37, (unint64_t)v48, v9);
      v10 = v49;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v9);
LABEL_10:
      v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v27(v45, v17, v9);
      v28 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F2F2E00();
        v28 = v50;
      }
      v29 = *(_QWORD *)(v28 + 16);
      if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
      {
        sub_23F2F2E00();
        v28 = v50;
      }
      *(_QWORD *)(v28 + 16) = v29 + 1;
      v9 = v42;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v28 + v47 + v29 * v46, v45, v42);
      v50 = v28;
      v17 = v48;
      v10 = v49;
      goto LABEL_15;
    }
    v24 = v44 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    v25 = *(_QWORD *)(v43 + 72);
    sub_23F3331C8(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
    swift_bridgeObjectRetain();
    while ((sub_23F33B4EC() & 1) == 0)
    {
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        a1 = v36;
        v9 = v42;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
    v30 = v37;
    v31 = v48;
    v9 = v42;
    v21(v37, (unint64_t)v48, v42);
    v32 = sub_23F33AF88();
    v10 = v49;
    v33 = *(void (**)(char *, uint64_t))(v49 + 8);
    v34 = v30;
    v17 = v31;
    v33(v34, v9);
    a1 = v36;
    if ((v32 & 1) != 0)
      goto LABEL_10;
    result = ((uint64_t (*)(char *, uint64_t))v33)(v17, v9);
LABEL_15:
    if (++v19 == v38)
    {
      v18 = v50;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

void sub_23F32A6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_signpost_id_t v32;
  uint64_t inited;
  id v34;
  id v35;
  id v36;
  double v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  os_signpost_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t *v49;
  const char *v50;
  char v51;
  uint64_t v52;

  sub_23F3333FC(a1, a2, a3, a4, a5, a6, a7);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v12);
  v45 = sub_23F333474(v13, v40);
  v44 = *(_QWORD *)(v45 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = sub_23F333498(v15, v41);
  sub_23F33356C();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F30C724();
  v43 = v18;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F3335E4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F326900();
  sub_23F33AA0C();
  v22 = sub_23F33AA24();
  sub_23F333780(v22);
  v23 = sub_23F33B150();
  sub_23F333768();
  v42 = sub_23F33B75C();
  if ((sub_23F33B798() & 1) == 0)
  {
    sub_23F333864();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v16);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v10, v20);
    sub_23F2EB3F8(&qword_256E6A3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F33EA90;
    sub_23F3334C4(inited, (uint64_t)"characterTextCount");
    v34 = objc_msgSend(sub_23F333610(), sel_initWithInteger_, v23);
    *(_QWORD *)(inited + 48) = v34;
    *(_QWORD *)(inited + 56) = 0xD000000000000013;
    *(_QWORD *)(inited + 64) = 0x800000023F33DF30;
    sub_23F3336A4((uint64_t)v34, &qword_256E6A3E0);
    v52 = v47;
    sub_23F2EB3F8(v49);
    sub_23F33382C();
    v35 = sub_23F32A1B0();
    sub_23F33386C((uint64_t)v35);
    sub_23F3333A4();
    sub_23F333600();
    sub_23F333444();
    sub_23F3337E0();
    v36 = sub_23F3335D0();
    LODWORD(v37) = v11;
    v38 = objc_msgSend(v36, sel_initWithFloat_, v37);
    *(_QWORD *)(inited + 96) = v38;
    sub_23F3336A4((uint64_t)v38, (unint64_t *)&qword_254346390);
    v39 = (void *)sub_23F33B4B0();
    sub_23F33336C(v39);
    sub_23F2FD7D0();
    sub_23F333534();
    return;
  }
  if ((v7 & 1) == 0)
  {
    v24 = v46;
    if (v50)
    {
      v25 = v45;
      v26 = v44;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_15;
  }
  v24 = v46;
  if ((unint64_t)v50 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v50 >> 11 != 27)
  {
    v25 = v45;
    v26 = v44;
    if (v50 >> 16 <= 0x10)
    {
      v50 = &v51;
LABEL_10:
      swift_retain();
      sub_23F33B198();
      sub_23F333818();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v24, v25) == *MEMORY[0x24BEE7810])
      {
        v48 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F326960(v24, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
        v48 = "EntityDetector=%{signpost.telemetry:string1,public}s %s";
      }
      sub_23F3334BC(v43, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      sub_23F2F8874();
      v27 = sub_23F2F8874();
      sub_23F333594(v27);
      sub_23F333798();
      v28 = sub_23F33B540();
      sub_23F333528(v28, v29);
      sub_23F3336DC();
      sub_23F2EB230();
      sub_23F3336AC();
      v30 = sub_23F33B834();
      sub_23F333528(v30, v31);
      sub_23F3336DC();
      sub_23F2EB230();
      v32 = sub_23F33B12C();
      sub_23F3337EC(&dword_23F2E8000, v23, v42, v32, v50, v48);
      sub_23F33364C();
      sub_23F2F3748();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

void sub_23F32AB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_signpost_id_t v36;
  uint64_t inited;
  id v38;
  id v39;
  id v40;
  double v41;
  id v42;
  void *v43;
  uint64_t v44;
  NSObject *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  const char *v58;
  const char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v56 = sub_23F3333FC(a1, a2, a3, a4, a5, a6, a7);
  v55 = *(_QWORD *)(v56 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v11);
  v51 = sub_23F333474(v12, v44);
  v50 = *(_QWORD *)(v51 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_23F333498(v14, v44);
  sub_23F33356C();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F30C724();
  v53 = v17;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F3335E4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AA0C();
  v23 = sub_23F33AA24();
  v24 = sub_23F333780(v23);
  v25 = sub_23F33B150();
  sub_23F333768();
  v52 = sub_23F33B75C();
  if ((sub_23F33B798() & 1) == 0)
  {
    sub_23F333864();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v15);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v29 = v57;
    sub_23F2EB3F8(&qword_256E6A3D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F33EA90;
    sub_23F3334C4(inited, (uint64_t)"characterTextCount");
    v38 = objc_msgSend(sub_23F333610(), sel_initWithInteger_, v25);
    *(_QWORD *)(inited + 48) = v38;
    *(_QWORD *)(inited + 56) = 0xD000000000000013;
    *(_QWORD *)(inited + 64) = 0x800000023F33DF30;
    sub_23F3336A4((uint64_t)v38, &qword_256E6A3E0);
    v62 = v29(0);
    sub_23F333798();
    sub_23F33382C();
    v39 = sub_23F32A1B0();
    sub_23F33386C((uint64_t)v39);
    sub_23F3333A4();
    sub_23F333600();
    sub_23F333444();
    sub_23F3337E0();
    v40 = sub_23F3335D0();
    LODWORD(v41) = v10;
    v42 = objc_msgSend(v40, sel_initWithFloat_, v41);
    *(_QWORD *)(inited + 96) = v42;
    sub_23F3336A4((uint64_t)v42, (unint64_t *)&qword_254346390);
    v43 = (void *)sub_23F33B4B0();
    sub_23F33336C(v43);
    sub_23F2FD7D0();
    sub_23F333534();
    return;
  }
  v49 = v24;
  v45 = v25;
  v47 = v20;
  v48 = v19;
  v46 = v22;
  if ((v7 & 1) == 0)
  {
    v26 = v57;
    if (v59)
    {
      v27 = v8;
      v28 = v54;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_15;
  }
  v26 = v57;
  if ((unint64_t)v59 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v59 >> 11 != 27)
  {
    v27 = v8;
    v28 = v54;
    if (v59 >> 16 <= 0x10)
    {
      v59 = &v61;
LABEL_10:
      swift_retain();
      sub_23F33B198();
      swift_release();
      v30 = v50;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v50 + 88))(v28, v51) == *MEMORY[0x24BEE7810])
      {
        v58 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F326960(v28, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
        v58 = "EntityDetector=%{signpost.telemetry:string1,public}s %s";
      }
      v44 = v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v53, v27, v15);
      sub_23F2F8874();
      v31 = sub_23F2F8874();
      sub_23F333594(v31);
      v60 = v26(0);
      sub_23F333798();
      v32 = sub_23F33B540();
      v60 = sub_23F333528(v32, v33);
      sub_23F3336CC();
      sub_23F2EB230();
      sub_23F3336AC();
      v34 = sub_23F33B834();
      v60 = sub_23F333528(v34, v35);
      sub_23F3336CC();
      sub_23F2EB230();
      v36 = sub_23F33B12C();
      sub_23F3337EC(&dword_23F2E8000, v45, (os_signpost_type_t)v52, v36, v59, v58);
      sub_23F33364C();
      sub_23F2F3748();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_23F32B004()
{
  uint64_t result;

  sub_23F2EB3F8(&qword_2543463D8);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_23F33E720;
  *(_QWORD *)(result + 32) = 0xD000000000000015;
  *(_QWORD *)(result + 40) = 0x800000023F33DFC0;
  strcpy((char *)(result + 48), "com.apple.siri");
  *(_BYTE *)(result + 63) = -18;
  qword_254346790 = result;
  return result;
}

uint64_t sub_23F32B080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  sub_23F33B1B0();
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F31D4A8();
  sub_23F33B15C();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F33AC34();
  sub_23F33B144();
  sub_23F3334BC(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime18UIContextRetriever_signposter, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  return v0;
}

uint64_t sub_23F32B128(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_23F33AFC4();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = sub_23F2F6B70();
  v4 = sub_23F33B108();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = sub_23F2F6B70();
  v5 = sub_23F33B06C();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = sub_23F2F6B70();
  v6 = sub_23F33B090();
  v2[17] = v6;
  v2[18] = *(_QWORD *)(v6 - 8);
  v2[19] = sub_23F2F6B70();
  v7 = sub_23F33B0CC();
  v2[20] = v7;
  v2[21] = *(_QWORD *)(v7 - 8);
  v2[22] = sub_23F2F6B70();
  v8 = sub_23F33B138();
  v2[23] = v8;
  v2[24] = *(_QWORD *)(v8 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F32B224()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint8_t *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F33B150();
  sub_23F33B120();
  v1 = sub_23F33B150();
  v2 = sub_23F33B768();
  if ((sub_23F33B798() & 1) != 0)
  {
    v3 = (uint8_t *)sub_23F2F8874();
    *(_WORD *)v3 = 0;
    v4 = sub_23F33B12C();
    _os_signpost_emit_with_name_impl(&dword_23F2E8000, v1, v2, v4, "UIContextRetriever.uiContextElements", "", v3, 2u);
    sub_23F2F3748();
  }
  v5 = v0[25];
  v6 = v0[26];
  v8 = v0[23];
  v7 = v0[24];
  v12 = v0[12];
  v13 = v0[11];
  v14 = v0[13];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v8);
  sub_23F33B18C();
  sub_23F2FD748();
  v0[27] = sub_23F33B180();
  sub_23F33378C(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  type metadata accessor for UIContextRetrieverCAEventLogger();
  sub_23F2FD748();
  v0[28] = sub_23F333944();
  sub_23F333A54();
  sub_23F33B0C0();
  sub_23F2EB3F8(&qword_2543463C8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23F33E710;
  sub_23F33B084();
  v0[5] = v9;
  sub_23F3331C8(&qword_254346218, (void (*)(uint64_t))MEMORY[0x24BEBBD68]);
  sub_23F2EB3F8(&qword_254346348);
  sub_23F333194(&qword_254346350, &qword_254346348);
  sub_23F33B7EC();
  sub_23F33B0B4();
  sub_23F333A60();
  sub_23F33B114();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEBBDD8], v13);
  v10 = (_QWORD *)swift_task_alloc();
  v0[29] = v10;
  *v10 = v0;
  v10[1] = sub_23F32B4B0;
  return sub_23F33B0FC();
}

uint64_t sub_23F32B4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  sub_23F2F6B38();
  sub_23F326960(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return swift_task_switch();
}

uint64_t sub_23F32B514()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F333B94();
  sub_23F33B060();
  MEMORY[0x2426684F4]();
  type metadata accessor for UIEntityDetector();
  v0[30] = swift_initStackObject();
  v0[31] = UIEntityDetector.init(entityTypes:)();
  sub_23F32BAB4();
  v0[32] = v1;
  sub_23F2F6D18();
  if (qword_256E69988 != -1)
    swift_once();
  v0[33] = qword_256E6D100;
  sub_23F33B054();
  swift_bridgeObjectRetain();
  sub_23F33AFB8();
  return swift_task_switch();
}

uint64_t sub_23F32B748()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_23F2F5E5C(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23F32B7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 56);
  swift_release();
  sub_23F326960(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F33378C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F32B8A8(v1, v5, "UIContextRetriever.uiContextElements", 36, 2);
  sub_23F333864();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 256));
}

uint64_t sub_23F32B8A8(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  uint64_t result;
  const char *v16;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  _BYTE v20[12];
  int v21;
  const char *v22;
  char v23;

  v22 = a3;
  v6 = sub_23F33B168();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23F33B138();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F333E18();
  v14 = sub_23F33B150();
  sub_23F33B174();
  v21 = sub_23F33B75C();
  result = sub_23F33B798();
  if ((result & 1) == 0)
  {
LABEL_13:

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
  if ((a5 & 1) == 0)
  {
    v16 = v22;
    if (v22)
    {
LABEL_9:
      swift_retain();
      sub_23F33B198();
      swift_release();
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x24BEE7810])
      {
        v17 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
        v17 = "";
      }
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = sub_23F33B12C();
      _os_signpost_emit_with_name_impl(&dword_23F2E8000, v14, (os_signpost_type_t)v21, v19, v16, v17, v18, 2u);
      MEMORY[0x242669658](v18, -1, -1);
      goto LABEL_13;
    }
    __break(1u);
  }
  if ((unint64_t)v22 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v22 >> 11 != 27)
  {
    if (v22 >> 16 <= 0x10)
    {
      v16 = &v23;
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_23F32BAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  _QWORD v55[3];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_23F33357C();
  v76 = v5;
  v77 = v1;
  v75 = v0;
  v6 = sub_23F33AD30();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F33AF70();
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3335B4();
  v11 = sub_23F33AFA0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F30C724();
  v68 = v13;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v14);
  v67 = (char *)v55 - v15;
  sub_23F30C738();
  MEMORY[0x24BDAC7A8](v16);
  v66 = (char *)v55 - v17;
  v63 = sub_23F33AE14();
  sub_23F33356C();
  MEMORY[0x24BDAC7A8](v18);
  v56 = sub_23F3334F0();
  v55[2] = *(_QWORD *)(v56 - 8);
  sub_23F2FD8B0();
  MEMORY[0x24BDAC7A8](v19);
  v57 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BEE4AF8];
  v81 = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22 = v77;
  sub_23F329188(v76);
  v23 = v22;
  swift_bridgeObjectRelease();
  v80 = v21;
  v62 = *(_QWORD *)(v81 + 16);
  if (v62)
  {
    v55[0] = v22;
    v61 = v81 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v60 = *(_QWORD *)(v2 + 72);
    v58 = v2;
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v55[1] = v81;
    swift_bridgeObjectRetain_n();
    v24 = 0;
    v75 = v3;
    v76 = v11;
    v77 = v12;
    v25 = v63;
    v64 = v4;
    while (1)
    {
      v65 = v24;
      v59(v4, v61 + v60 * v24, v25);
      v26 = sub_23F33ADFC();
      v79 = v21;
      v74 = *(_QWORD *)(v26 + 16);
      if (v74)
        break;
      v33 = v21;
LABEL_16:
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v33 + 16);
      if (v25)
      {
        v79 = v21;
        sub_23F2F2DCC();
        v34 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        v74 = v33;
        v35 = v33 + v34;
        v36 = *(_QWORD *)(v12 + 72);
        v37 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
        do
        {
          v38 = v68;
          v39 = v76;
          v37(v68, v35, v76);
          v40 = v71;
          sub_23F33AF94();
          sub_23F33AD24();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v73);
          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v38, v39);
          if ((sub_23F33384C() & 1) == 0)
          {
            sub_23F3336F8();
            sub_23F2F2DCC();
            v40 = (char *)v79;
          }
          v41 = *((_QWORD *)v40 + 2);
          if (v41 >= *((_QWORD *)v40 + 3) >> 1)
          {
            sub_23F2F2DCC();
            v40 = (char *)v79;
          }
          *((_QWORD *)v40 + 2) = v41 + 1;
          (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(&v40[((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v41], v75, v70);
          v79 = (uint64_t)v40;
          v35 += v36;
          --v25;
        }
        while (v25);
        swift_release();
        v11 = v76;
        v21 = MEMORY[0x24BEE4AF8];
        sub_23F333804();
        v4 = v64;
      }
      else
      {
        swift_release();
        sub_23F333804();
      }
      v43 = v65 + 1;
      (*(void (**)(uint64_t, _QWORD))(v42 + 8))(v4, 0);
      sub_23F3096A8();
      v24 = v43;
      v12 = v77;
      if (v43 == v62)
      {
        swift_bridgeObjectRelease_n();
        v21 = v80;
        v44 = v57;
        v23 = v55[0];
        goto LABEL_28;
      }
    }
    v27 = 0;
    v28 = v66;
    while (v27 < *(_QWORD *)(v26 + 16))
    {
      v29 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v30 = *(_QWORD *)(v12 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v28, v26 + v29 + v30 * v27, v11);
      if ((sub_23F33AF88() & 1) != 0)
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v31(v67, v28, v11);
        if ((sub_23F33384C() & 1) == 0)
        {
          sub_23F3336F8();
          sub_23F2F2E00();
          v28 = v66;
          v12 = v79;
        }
        v32 = *(_QWORD *)(v12 + 16);
        if (v32 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_23F2F2E00();
          v28 = v66;
          v12 = v79;
        }
        *(_QWORD *)(v12 + 16) = v32 + 1;
        v11 = v76;
        v31((char *)(v12 + v29 + v32 * v30), v67, v76);
        v79 = v12;
        v12 = v77;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v28, v11);
      }
      if (v74 == ++v27)
      {
        v33 = v79;
        v21 = MEMORY[0x24BEE4AF8];
        v4 = v64;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    v44 = v57;
LABEL_28:
    swift_bridgeObjectRetain();
    v45 = swift_bridgeObjectRetain();
    v46 = v23;
    sub_23F329A90(v45, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_23F33AC34();
    v47 = sub_23F33B1A4();
    v48 = sub_23F33B6D8();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v77 = v46;
      v80 = v50;
      *(_DWORD *)v49 = 136446210;
      sub_23F2FD878();
      swift_bridgeObjectRetain();
      v51 = sub_23F33B5F4();
      v53 = v52;
      swift_bridgeObjectRelease();
      v78 = sub_23F30DBFC(v51, v53, &v80);
      sub_23F33B7BC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F2E8000, v47, v48, "%{public}s", v49, 0xCu);
      swift_arrayDestroy();
      sub_23F2F3748();
    }

    sub_23F3337D4();
    v54(v44, v56);
    sub_23F2FD878();
    sub_23F3332E4();
  }
}

uint64_t sub_23F32C1B4()
{
  uint64_t v0;

  v0 = sub_23F33B15C();
  sub_23F2FD514(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_23F32C1F4()
{
  return type metadata accessor for UIContextRetriever();
}

uint64_t type metadata accessor for UIContextRetriever()
{
  uint64_t result;

  result = qword_254346258;
  if (!qword_254346258)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F32C234()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F33B15C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23F32C2A0(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  double v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (**v80)(uint64_t, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void (*v95)(char *, unint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  void (**v103)(uint64_t, char *, uint64_t);
  uint64_t v104;
  char v105;
  char v106;
  uint64_t (*v107)(char *, uint64_t);
  uint64_t v108;
  unsigned int *v109;
  char v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  void (**v128)(uint64_t, char *, uint64_t);
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, unint64_t, uint64_t);
  char *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, unint64_t, uint64_t);
  char *v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  void (**v202)(uint64_t, char *, uint64_t);
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t (*v212)(char *, uint64_t);
  unint64_t v213;
  uint64_t v214;
  char *v215;
  double *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232[3];
  uint64_t v233;

  v213 = a8;
  v200 = a7;
  v219 = a6;
  v221 = a5;
  v216 = a4;
  v218 = a2;
  v224 = a1;
  v11 = sub_23F2EB3F8(&qword_2543461E0);
  MEMORY[0x24BDAC7A8](v11);
  v214 = (uint64_t)&v181 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F33B00C();
  MEMORY[0x24BDAC7A8](v13);
  v206 = (char *)&v181 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_23F33AE14();
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x24BDAC7A8](v209);
  v207 = (char *)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_23F33B1B0();
  v197 = *(_QWORD *)(v198 - 8);
  MEMORY[0x24BDAC7A8](v198);
  v199 = (char *)&v181 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F2EB3F8(&qword_254346330);
  MEMORY[0x24BDAC7A8](v17);
  v196 = (uint64_t)&v181 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F2EB3F8(&qword_2543461B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v195 = (uint64_t)&v181 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v211 = (uint64_t)&v181 - v22;
  v201 = sub_23F33A328();
  v205 = *(_QWORD *)(v201 - 8);
  MEMORY[0x24BDAC7A8](v201);
  v204 = (char *)&v181 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_23F33AF70();
  v210 = *(_QWORD **)(v223 - 8);
  v24 = MEMORY[0x24BDAC7A8](v223);
  v215 = (char *)&v181 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v220 = (char *)&v181 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v222 = (char *)&v181 - v28;
  v29 = sub_23F33AD30();
  v30 = *(_QWORD *)(v29 - 8);
  v229 = v29;
  v230 = v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v194 = (char *)&v181 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v225 = (char *)&v181 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v226 = (char *)&v181 - v35;
  v36 = sub_23F33AFA0();
  v227 = *(_QWORD *)(v36 - 8);
  v228 = v36;
  v37 = MEMORY[0x24BDAC7A8](v36);
  v191 = (char *)&v181 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v190 = (char *)&v181 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v193 = (char *)&v181 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v192 = (char *)&v181 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v181 - v45;
  v203 = sub_23F33A8F8();
  v202 = *(void (***)(uint64_t, char *, uint64_t))(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v217 = (uint64_t)&v181 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23F33A91C();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v181 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_23F33A928();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v56 = (char *)&v181 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v58 = (char *)&v181 - v57;
  v59 = a3;
  sub_23F333DD0();
  v233 = MEMORY[0x24BEE4B08];
  v232[2] = MEMORY[0x24BEE4AF8];
  v60 = v224;
  sub_23F33A934();
  v212 = *(uint64_t (**)(char *, uint64_t))(v53 + 88);
  v61 = v212(v58, v52);
  if (v61 == *MEMORY[0x24BEBB968])
  {
    v62 = sub_23F32DA2C(v60, v218);
    v63 = v216;
    *v216 = v62;
    *((_QWORD *)v63 + 1) = v64;
    *((_QWORD *)v63 + 2) = v65;
    *((_QWORD *)v63 + 3) = v66;
    sub_23F333DB8();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v58, v52);
    v67 = v219;
    v68 = v59;
  }
  else
  {
    v189 = v59;
    if (v61 == *MEMORY[0x24BEBB980])
    {
      (*(void (**)(char *, uint64_t))(v53 + 96))(v58, v52);
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v51, v58, v48);
      v69 = sub_23F33A904();
      v70 = v219;
      *v219 = v69;
      v70[1] = v71;
      swift_bridgeObjectRelease();
      v72 = sub_23F33A910();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v48);
      *(_BYTE *)v200 = v72 & 1;
      v68 = v189;
      sub_23F333DC4();
      v67 = v70;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v58, v52);
      v67 = v219;
      v68 = v189;
    }
  }
  v73 = v217;
  v74 = v67[1];
  v75 = v224;
  if (v74)
  {
    v76 = v68;
    v77 = *v67;
    v78 = qword_254345C88;
    swift_bridgeObjectRetain();
    if (v78 != -1)
      swift_once();
    v79 = sub_23F32A21C(v77, v74, (_QWORD *)qword_254346790);
    swift_bridgeObjectRelease();
    v68 = v76;
    v73 = v217;
    if ((v79 & 1) != 0)
      goto LABEL_70;
  }
  sub_23F33A934();
  if (v212(v56, v52) == *MEMORY[0x24BEBB948])
  {
    (*(void (**)(char *, uint64_t))(v53 + 96))(v56, v52);
    v80 = v202;
    v81 = v56;
    v82 = v203;
    v202[4](v73, v81, v203);
    v84 = *v219;
    v83 = v219[1];
    swift_bridgeObjectRetain();
    v85 = sub_23F32DDAC(v73, v84, v83, v213, v68);
    swift_bridgeObjectRelease();
    sub_23F337514(v85);
    sub_23F32E77C(v75, v218);
    sub_23F3099D4();
    ((void (*)(uint64_t, uint64_t))v80[1])(v73, v82);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v52);
  }
  v86 = v222;
  v87 = sub_23F33A8A4();
  if (v88)
  {
    v90 = sub_23F337DF0(v87, v88);
    swift_bridgeObjectRelease();
    v91 = *(_QWORD *)(v90 + 16);
    if (v91)
    {
      v232[0] = MEMORY[0x24BEE4AF8];
      sub_23F2F2E00();
      v92 = (*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80);
      v217 = v90;
      v93 = v90 + v92;
      v94 = *(_QWORD *)(v230 + 72);
      v95 = *(void (**)(char *, unint64_t, uint64_t))(v230 + 16);
      do
      {
        v96 = v226;
        v97 = v229;
        v95(v226, v93, v229);
        v95(v225, (unint64_t)v96, v97);
        sub_23F33AFAC();
        (*(void (**)(char *, uint64_t))(v230 + 8))(v96, v97);
        v98 = v232[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F2F2E00();
          v98 = v232[0];
        }
        v99 = *(_QWORD *)(v98 + 16);
        if (v99 >= *(_QWORD *)(v98 + 24) >> 1)
        {
          sub_23F2F2E00();
          v98 = v232[0];
        }
        *(_QWORD *)(v98 + 16) = v99 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v227 + 32))(v98+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(_QWORD *)(v227 + 72) * v99, v46, v228);
        v232[0] = v98;
        v93 += v94;
        --v91;
      }
      while (v91);
      swift_bridgeObjectRelease();
      v75 = v224;
    }
    else
    {
      swift_bridgeObjectRelease();
      v98 = MEMORY[0x24BEE4AF8];
    }
    sub_23F337514(v98);
    v89 = v218;
    v86 = v222;
  }
  else
  {
    v89 = v218;
  }
  v100 = sub_23F33A898();
  if (v101 >> 60 != 15)
  {
    v217 = v100;
    v213 = v101;
    MEMORY[0x2426684F4]();
    v102 = v210;
    v103 = (void (**)(uint64_t, char *, uint64_t))v210[13];
    LODWORD(v212) = *MEMORY[0x24BE54348];
    v104 = v223;
    ((void (*)(char *))v103)(v86);
    sub_23F3199BC();
    v106 = v105;
    swift_bridgeObjectRelease();
    v107 = (uint64_t (*)(char *, uint64_t))v102[1];
    v108 = v107(v86, v104);
    v109 = (unsigned int *)MEMORY[0x24BE54390];
    if ((v106 & 1) != 0
      || (MEMORY[0x2426684F4](v108),
          ((void (*)(char *, _QWORD, uint64_t))v103)(v86, *v109, v104),
          sub_23F3199BC(),
          v111 = v110,
          swift_bridgeObjectRelease(),
          v107(v86, v104),
          (v111 & 1) != 0))
    {
      v225 = (char *)v107;
      v202 = v103;
      v203 = a9;
      sub_23F2F0818(0, &qword_256E6BF58);
      sub_23F2F0818(0, &qword_256E6BF60);
      v112 = v213;
      v113 = sub_23F33B72C();
      v121 = (void *)v113;
      v75 = v224;
      v89 = v218;
      if (v113)
      {
        v122 = sub_23F33B720();
        v199 = *(char **)(v122 + 16);
        if (v199)
        {
          v181 = v121;
          v123 = 0;
          v124 = v205;
          v125 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
          v200 = v122;
          v198 = v122 + v125;
          LODWORD(v197) = *MEMORY[0x24BDB6230];
          v185 = *MEMORY[0x24BDB6238];
          v184 = *v109;
          v182 = *MEMORY[0x24BE540F0];
          v183 = *MEMORY[0x24BE540A8];
          v126 = v201;
          v127 = (uint64_t *)v204;
          v128 = v202;
          while (1)
          {
            if (v123 >= *(_QWORD *)(v200 + 16))
            {
              __break(1u);
              return;
            }
            (*(void (**)(uint64_t *, unint64_t, uint64_t))(v124 + 16))(v127, v198 + *(_QWORD *)(v124 + 72) * v123, v126);
            v129 = (*(uint64_t (**)(uint64_t *, uint64_t))(v124 + 88))(v127, v126);
            if (v129 == (_DWORD)v197)
            {
              (*(void (**)(uint64_t *, uint64_t))(v124 + 96))(v127, v126);
              v187 = *v127;
              v189 = v127[1];
              v186 = v127[2];
              v188 = v127[3];
              v130 = sub_23F2EB3F8(&qword_256E6BF68);
              sub_23F2F8754((uint64_t)v127 + *(int *)(v130 + 64), v211, &qword_2543461B8);
              v132 = MEMORY[0x2426684F4](v131);
              ((void (*)(char *, _QWORD, uint64_t))v128)(v220, v212, v223);
              if (*(_QWORD *)(v132 + 16))
              {
                sub_23F3331C8(&qword_254346208, (void (*)(uint64_t))MEMORY[0x24BE54398]);
                v133 = sub_23F33B4BC();
                v134 = -1 << *(_BYTE *)(v132 + 32);
                v135 = v133 & ~v134;
                if (((*(_QWORD *)(v132 + 56 + ((v135 >> 3) & 0xFFFFFFFFFFFFF8)) >> v135) & 1) != 0)
                {
                  v136 = ~v134;
                  v137 = v210[9];
                  v138 = (void (*)(char *, unint64_t, uint64_t))v210[2];
                  while (1)
                  {
                    v139 = v222;
                    v140 = v223;
                    v138(v222, *(_QWORD *)(v132 + 48) + v137 * v135, v223);
                    sub_23F3331C8(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
                    v141 = sub_23F33B4EC();
                    v142 = v140;
                    v143 = (void (*)(char *, uint64_t))v225;
                    ((void (*)(char *, uint64_t))v225)(v139, v142);
                    if ((v141 & 1) != 0)
                      break;
                    v135 = (v135 + 1) & v136;
                    if (((*(_QWORD *)(v132 + 56 + ((v135 >> 3) & 0xFFFFFFFFFFFFF8)) >> v135) & 1) == 0)
                      goto LABEL_45;
                  }
                  swift_bridgeObjectRelease();
                  v143(v220, v223);
                  v160 = v195;
                  sub_23F2F86BC(v211, v195, &qword_2543461B8);
                  v161 = v196;
                  sub_23F3273D8(v160, v196);
                  v162 = sub_23F33B474();
                  sub_23F2EBFCC(v161, 0, 1, v162);
                  v75 = v224;
                  v126 = v201;
                  v128 = v202;
                  swift_bridgeObjectRetain();
                  v165 = v194;
                  sub_23F33AF1C();
                  (*(void (**)(char *, _QWORD, uint64_t))(v230 + 104))(v165, v183, v229);
                  sub_23F33AFAC();
                  v166 = v192;
                  sub_23F32FA54();
                  (*(void (**)(char *, uint64_t))(v227 + 8))(v166, v228);
                  sub_23F2FD434(v211, &qword_2543461B8);
                  v124 = v205;
                  v127 = (uint64_t *)v204;
                  goto LABEL_59;
                }
              }
LABEL_45:
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v225)(v220, v223);
              sub_23F2FD434(v211, &qword_2543461B8);
              swift_bridgeObjectRelease();
LABEL_46:
              swift_bridgeObjectRelease();
            }
            else
            {
              if (v129 != v185)
              {
                (*(void (**)(uint64_t *, uint64_t))(v124 + 8))(v127, v126);
                goto LABEL_59;
              }
              v144 = (*(uint64_t (**)(uint64_t *, uint64_t))(v124 + 96))(v127, v126);
              v188 = *v127;
              v189 = v127[1];
              v145 = MEMORY[0x2426684F4](v144);
              v146 = v215;
              v147 = v223;
              ((void (*)(char *, _QWORD, uint64_t))v128)(v215, v184, v223);
              if (!*(_QWORD *)(v145 + 16)
                || (sub_23F3331C8(&qword_254346208, (void (*)(uint64_t))MEMORY[0x24BE54398]),
                    v146 = v215,
                    v148 = sub_23F33B4BC(),
                    v149 = -1 << *(_BYTE *)(v145 + 32),
                    v150 = v148 & ~v149,
                    ((*(_QWORD *)(v145 + 56 + ((v150 >> 3) & 0xFFFFFFFFFFFFF8)) >> v150) & 1) == 0))
              {
                swift_bridgeObjectRelease();
                ((void (*)(char *, uint64_t))v225)(v146, v147);
                swift_bridgeObjectRelease();
                v75 = v224;
                v124 = v205;
                v127 = (uint64_t *)v204;
                goto LABEL_59;
              }
              v151 = ~v149;
              v152 = v210[9];
              v153 = (void (*)(char *, unint64_t, uint64_t))v210[2];
              while (1)
              {
                v154 = v222;
                v155 = v223;
                v153(v222, *(_QWORD *)(v145 + 48) + v152 * v150, v223);
                sub_23F3331C8(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
                v156 = sub_23F33B4EC();
                v157 = v155;
                v158 = (void (*)(char *, uint64_t))v225;
                ((void (*)(char *, uint64_t))v225)(v154, v157);
                if ((v156 & 1) != 0)
                  break;
                v150 = (v150 + 1) & v151;
                v159 = v215;
                if (((*(_QWORD *)(v145 + 56 + ((v150 >> 3) & 0xFFFFFFFFFFFFF8)) >> v150) & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v225)(v159, v223);
                  goto LABEL_46;
                }
              }
              swift_bridgeObjectRelease();
              v158(v215, v223);
              v163 = v226;
              sub_23F33AD18();
              (*(void (**)(char *, _QWORD, uint64_t))(v230 + 104))(v163, v182, v229);
              sub_23F33AFAC();
              v164 = v190;
              sub_23F32FA54();
              (*(void (**)(char *, uint64_t))(v227 + 8))(v164, v228);
            }
            v75 = v224;
            v126 = v201;
            v124 = v205;
            v127 = (uint64_t *)v204;
            v128 = v202;
LABEL_59:
            if ((char *)++v123 == v199)
            {

              swift_bridgeObjectRelease();
              v112 = v213;
              v89 = v218;
              goto LABEL_62;
            }
          }
        }

        swift_bridgeObjectRelease();
LABEL_62:
        sub_23F304EB4(v217, v112);
      }
      else
      {
        v114 = v199;
        sub_23F33AC34();
        v115 = sub_23F33B1A4();
        v116 = sub_23F33B6F0();
        if (os_log_type_enabled(v115, v116))
        {
          v117 = (uint8_t *)swift_slowAlloc();
          v118 = swift_slowAlloc();
          v232[0] = v118;
          *(_DWORD *)v117 = 136315138;
          v119 = sub_23F33BA20();
          v231 = sub_23F30DBFC(v119, v120, v232);
          v89 = v218;
          sub_23F33B7BC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23F2E8000, v115, v116, "unable to convert decoded data of type %s to annotation identifiers", v117, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242669658](v118, -1, -1);
          MEMORY[0x242669658](v117, -1, -1);
        }
        sub_23F304EB4(v217, v213);

        (*(void (**)(char *, uint64_t))(v197 + 8))(v114, v198);
      }
    }
    else
    {
      sub_23F304EB4(v217, v213);
      v75 = v224;
      v89 = v218;
    }
  }
  if (!*(_QWORD *)(v233 + 16))
  {
LABEL_70:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_23F332944(v233);
  swift_bridgeObjectRelease();
  sub_23F32DA2C(v75, v89);
  v167 = sub_23F33ADA8();
  sub_23F2EBFCC(v214, 1, 1, v167);
  swift_bridgeObjectRetain();
  v168 = sub_23F33A88C();
  v169 = sub_23F30F5BC(0x7463656C65537369, 0xEA00000000006465, v168);
  v171 = v170;
  swift_bridgeObjectRelease();
  if (v171)
  {
    if (v169 != 1702195828 || v171 != 0xE400000000000000)
      sub_23F33B978();
    swift_bridgeObjectRelease();
  }
  v173 = sub_23F33A88C();
  v174 = sub_23F30F5BC(0x72616D6972507369, 0xE900000000000079, v173);
  v176 = v175;
  swift_bridgeObjectRelease();
  if (v176)
  {
    if (v174 != 1702195828 || v176 != 0xE400000000000000)
      sub_23F33B978();
    swift_bridgeObjectRelease();
  }
  sub_23F33AFE8();
  v178 = v207;
  sub_23F33ADF0();
  sub_23F31C790();
  v179 = *(_QWORD *)(*a10 + 16);
  sub_23F31C800(v179);
  v180 = *a10;
  *(_QWORD *)(v180 + 16) = v179 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v208 + 32))(v180+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v179, v178, v209);
}

double sub_23F32DA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  BOOL IsNull;
  void (*v20)(char *, uint64_t, uint64_t);
  BOOL v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  BOOL IsInfinite;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat Height;
  CGFloat Width;
  char *v45;
  double v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v4 = sub_23F33A940();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v47 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)v47 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v47 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v47 - v17;
  sub_23F33A874();
  IsNull = CGRectIsNull(v50);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v18, a1, v4);
  if (IsNull)
  {
    v21 = 0;
  }
  else
  {
    sub_23F33A874();
    v21 = !sub_23F2F0858(v22, v23, v24, v25);
  }
  v49 = v5;
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v18, v4);
  v20(v16, a1, v4);
  if (v21)
  {
    sub_23F33A874();
    IsInfinite = CGRectIsInfinite(v51);
    v26(v16, v4);
    if (!IsInfinite)
    {
      sub_23F33A874();
      return v28;
    }
  }
  else
  {
    v26(v16, v4);
  }
  v30 = *(_QWORD *)(a2 + 16);
  if (!v30)
    return *MEMORY[0x24BDBF090];
  v31 = a2 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
  v32 = *(_QWORD *)(v49 + 72);
  v47[1] = a2;
  swift_bridgeObjectRetain();
  while (1)
  {
    v20(v11, v31, v4);
    sub_23F33A874();
    v33 = CGRectIsNull(v52);
    v20(v8, (uint64_t)v11, v4);
    if (v33)
      goto LABEL_21;
    sub_23F33A874();
    v38 = v34;
    v39 = v35;
    v40 = v36;
    v41 = v37;
    if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&v36 & 0xFFFFFFFFFFFFFLL) != 0)
      goto LABEL_21;
    if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&v37 & 0xFFFFFFFFFFFFFLL) != 0
      || (Height = CGRectGetHeight(*(CGRect *)&v34), (~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
      && (*(_QWORD *)&Height & 0xFFFFFFFFFFFFFLL) != 0
      || (v53.origin.x = v38,
          v53.origin.y = v39,
          v53.size.width = v40,
          v53.size.height = v41,
          Width = CGRectGetWidth(v53),
          (~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
      && (*(_QWORD *)&Width & 0xFFFFFFFFFFFFFLL) != 0
      || (~*(_QWORD *)&v38 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&v38 & 0xFFFFFFFFFFFFFLL) != 0)
    {
LABEL_21:
      v26(v8, v4);
      goto LABEL_22;
    }
    if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) != 0)
      break;
    v26(v8, v4);
    if ((*(_QWORD *)&v39 & 0xFFFFFFFFFFFFFLL) == 0)
      goto LABEL_30;
LABEL_22:
    v26(v11, v4);
    v31 += v32;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      return *MEMORY[0x24BDBF090];
    }
  }
  v26(v8, v4);
LABEL_30:
  swift_bridgeObjectRelease();
  v45 = v48;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v11, v4);
  sub_23F33A874();
  v29 = v46;
  v26(v45, v4);
  return v29;
}

uint64_t sub_23F32DDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v67;
  void (*v68)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93[16];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t KeyPath;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v75[2] = a5;
  v84 = a4;
  v91 = a3;
  v87 = a2;
  v92 = sub_23F33AD30();
  v90 = *(_QWORD *)(v92 - 8);
  v6 = MEMORY[0x24BDAC7A8](v92);
  v89 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)v75 - v8;
  v85 = sub_23F2EB3F8(&qword_256E6BF70);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v10 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_23F33A3E8();
  v11 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v13 = (char *)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F33A40C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = MEMORY[0x24BEE4B08];
  sub_23F2EB3F8(&qword_2543463D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F33E710;
  *(_QWORD *)(inited + 32) = sub_23F33A8EC();
  *(_QWORD *)(inited + 40) = v19;
  v100 = sub_23F2EBCD8(inited);
  sub_23F33A8C8();
  sub_23F33A400();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_23F332A78();
  sub_23F33A3F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v82);
  v94 = v87;
  v95 = v91;
  v96 = a1;
  v97 = &v100;
  v20 = v86;
  v21 = sub_23F329D7C(v10, (void (*)(uint64_t, uint64_t))sub_23F332AEC, (uint64_t)v93);
  v22 = v20;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v85);
  v75[1] = a1;
  v23 = sub_23F33A8E0();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v91 = v21;
    swift_bridgeObjectRetain();
    v87 = v23;
    v21 = v23 + 40;
    v25 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v26 = *(_QWORD *)(v21 - 8);
      v27 = *(_QWORD *)v21;
      swift_bridgeObjectRetain();
      v28 = sub_23F328F74(v26, v27);
      if (v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
      v29 = v28;
      v22 = 0;
      swift_bridgeObjectRelease();
      v30 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v25 + 16);
      if (__OFADD__(v31, v30))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v31 + v30 > *(_QWORD *)(v25 + 24) >> 1)
        v25 = sub_23F30B608();
      v32 = v92;
      if (*(_QWORD *)(v29 + 16))
      {
        v33 = *(_QWORD *)(v25 + 16);
        if ((*(_QWORD *)(v25 + 24) >> 1) - v33 < v30)
          goto LABEL_63;
        v34 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        v35 = *(_QWORD *)(v90 + 72);
        v36 = v25 + v34 + v35 * v33;
        if (v29 + v34 < v36 + v35 * v30 && v36 < v29 + v34 + v35 * v30)
          goto LABEL_67;
        swift_arrayInitWithCopy();
        if (v30)
        {
          v38 = *(_QWORD *)(v25 + 16);
          v39 = __OFADD__(v38, v30);
          v40 = v38 + v30;
          if (v39)
            goto LABEL_64;
          *(_QWORD *)(v25 + 16) = v40;
        }
      }
      else if (v30)
      {
        goto LABEL_62;
      }
      v21 += 16;
      swift_bridgeObjectRelease();
      --v24;
      v41 = v84;
      if (!v24)
      {
        swift_bridgeObjectRelease();
        v21 = v91;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    result = sub_23F33B93C();
    __break(1u);
  }
  else
  {
    v41 = v84;
    v32 = v92;
LABEL_22:
    swift_bridgeObjectRelease();
    sub_23F3198CC();
    v76 = swift_bridgeObjectRetain();
    sub_23F337500(v76);
    swift_retain();
    sub_23F329350(v21, v41, &v101);
    v42 = v22;
    swift_bridgeObjectRelease();
    v43 = v88;
    if (!v22)
    {
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v100 + 56);
      v77 = v100 + 56;
      v45 = 1 << *(_BYTE *)(v100 + 32);
      if (v45 < 64)
        v46 = ~(-1 << v45);
      else
        v46 = -1;
      v47 = v46 & v44;
      v78 = (unint64_t)(v45 + 63) >> 6;
      v79 = v100;
      swift_bridgeObjectRetain();
      v21 = 0;
      while (1)
      {
        if (v47)
        {
          v48 = __clz(__rbit64(v47));
          v47 &= v47 - 1;
          v49 = v48 | (v21 << 6);
        }
        else
        {
          v39 = __OFADD__(v21++, 1);
          if (v39)
            goto LABEL_65;
          if (v21 >= v78)
          {
LABEL_60:
            swift_release();
            sub_23F33A8EC();
            v72 = sub_23F33B570();
            swift_bridgeObjectRelease();
            sub_23F333DF8(v72);
            v73 = v76;
            swift_bridgeObjectRetain();
            v74 = swift_bridgeObjectRetain();
            v21 = sub_23F32977C(v74, v73);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          v50 = *(_QWORD *)(v77 + 8 * v21);
          if (!v50)
          {
            v51 = v21 + 1;
            if (v21 + 1 >= v78)
              goto LABEL_60;
            v50 = *(_QWORD *)(v77 + 8 * v51);
            if (!v50)
            {
              v51 = v21 + 2;
              if (v21 + 2 >= v78)
                goto LABEL_60;
              v50 = *(_QWORD *)(v77 + 8 * v51);
              if (!v50)
              {
                v51 = v21 + 3;
                if (v21 + 3 >= v78)
                  goto LABEL_60;
                v50 = *(_QWORD *)(v77 + 8 * v51);
                if (!v50)
                {
                  while (1)
                  {
                    v21 = v51 + 1;
                    if (__OFADD__(v51, 1))
                      goto LABEL_66;
                    if (v21 >= v78)
                      goto LABEL_60;
                    v50 = *(_QWORD *)(v77 + 8 * v21);
                    ++v51;
                    if (v50)
                      goto LABEL_39;
                  }
                }
              }
            }
            v21 = v51;
          }
LABEL_39:
          v47 = (v50 - 1) & v50;
          v49 = __clz(__rbit64(v50)) + (v21 << 6);
        }
        v52 = (uint64_t *)(*(_QWORD *)(v79 + 48) + 16 * v49);
        v53 = *v52;
        v54 = v52[1];
        swift_bridgeObjectRetain();
        v55 = sub_23F328F74(v53, v54);
        if (v42)
        {
          swift_release();
          swift_bridgeObjectRelease();
          break;
        }
        v56 = v55;
        swift_bridgeObjectRelease();
        v86 = *(_QWORD *)(v56 + 16);
        if (v86)
        {
          v81 = v47;
          v82 = v21;
          v83 = 0;
          v57 = 0;
          v58 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
          v80 = v56;
          v85 = v56 + v58;
          v91 = *(_QWORD *)(v90 + 72);
          v59 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
          do
          {
            v87 = v57;
            v59(v43, v85 + v91 * v57, v32);
            v60 = v101;
            sub_23F3331C8(&qword_256E6BBB8, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
            swift_bridgeObjectRetain();
            v61 = sub_23F33B4BC();
            v62 = -1 << *(_BYTE *)(v60 + 32);
            v63 = v61 & ~v62;
            if (((*(_QWORD *)(v60 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) != 0)
            {
              v64 = ~v62;
              while (1)
              {
                v65 = v92;
                v66 = v89;
                v59(v89, *(_QWORD *)(v60 + 48) + v63 * v91, v92);
                sub_23F3331C8(qword_256E6BBC0, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
                v67 = sub_23F33B4EC();
                v68 = *(void (**)(char *, uint64_t))(v90 + 8);
                v68(v66, v65);
                if ((v67 & 1) != 0)
                  break;
                v63 = (v63 + 1) & v64;
                v43 = v88;
                if (((*(_QWORD *)(v60 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
                  goto LABEL_47;
              }
              swift_bridgeObjectRelease();
              v32 = v92;
              v43 = v88;
              v68(v88, v92);
            }
            else
            {
LABEL_47:
              swift_bridgeObjectRelease();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v70 = (uint64_t)v89;
              v32 = v92;
              v59(v89, (uint64_t)v43, v92);
              v99 = v101;
              sub_23F331268(v70, v63, isUniquelyReferenced_nonNull_native);
              v101 = v99;
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v90 + 8))(v43, v32);
            }
            v57 = v87 + 1;
          }
          while (v87 + 1 != v86);
          swift_bridgeObjectRelease();
          v42 = v83;
          v21 = v82;
          v47 = v81;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
LABEL_58:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_23F32E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  int v54;
  uint64_t v55;
  uint64_t v56;

  v4 = sub_23F2EB3F8(&qword_2543461E0);
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F33B00C();
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23F33AE14();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v49 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23F33A928();
  v9 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F33A8F8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F33A940();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
    return MEMORY[0x24BEE4AF8];
  v48 = v15;
  v51 = v13;
  v20 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = sub_23F33A880();
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v50 = v12;
  v55 = v9;
  v39 = v21;
  v23 = v21 + v20;
  v24 = *(_QWORD *)(v17 + 72);
  v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v17 + 16);
  v54 = *MEMORY[0x24BEBB948];
  v40 = *MEMORY[0x24BE54160];
  v52 = MEMORY[0x24BEE4AF8];
  v53 = v25;
  v46 = v17;
  v47 = a1;
  v45 = v24;
  do
  {
    v25(v19, v23, v16);
    if ((MEMORY[0x242667F78](v19, a1) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    else
    {
      sub_23F33A934();
      v27 = v55;
      v26 = v56;
      v28 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v11, v56);
      if (v28 == v54)
      {
        (*(void (**)(char *, uint64_t))(v27 + 96))(v11, v26);
        v29 = v50;
        v30 = v51;
        v31 = v48;
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v11, v50);
        sub_23F33A8EC();
        v32 = sub_23F33B570();
        swift_bridgeObjectRelease();
        if (v32 > 79)
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
          v17 = v46;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v16);
          a1 = v47;
          v24 = v45;
        }
        else
        {
          sub_23F32DA2C((uint64_t)v19, MEMORY[0x24BEE4AF8]);
          sub_23F33A8EC();
          v33 = (uint64_t)v44;
          sub_23F33AD84();
          v34 = sub_23F33ADA8();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v40, v34);
          sub_23F2EBFCC(v33, 0, 1, v34);
          sub_23F33AFF4();
          sub_23F33ADE4();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v24 = v45;
            v35 = v52;
          }
          else
          {
            v35 = sub_23F30B9C0();
            v24 = v45;
          }
          v36 = *(_QWORD *)(v35 + 16);
          if (v36 >= *(_QWORD *)(v35 + 24) >> 1)
            v35 = sub_23F30B9C0();
          *(_QWORD *)(v35 + 16) = v36 + 1;
          v37 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
          v52 = v35;
          (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v35 + v37 + *(_QWORD *)(v41 + 72) * v36, v49, v42);
          (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v50);
          v17 = v46;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v16);
          a1 = v47;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
      }
      v25 = v53;
    }
    v23 += v24;
    --v22;
  }
  while (v22);
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_23F32ECB0()
{
  sub_23F2EB3F8(&qword_256E6BFC0);
  return sub_23F33B4EC() & 1;
}

uint64_t sub_23F32ED08()
{
  sub_23F2EB3F8(&qword_256E6BFC0);
  return sub_23F33B4C8();
}

void sub_23F32ED4C()
{
  sub_23F332A78();
  sub_23F33A43C();
  __break(1u);
}

uint64_t sub_23F32ED70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[3];

  v71 = a6;
  v72 = a3;
  v73 = a5;
  v74 = a2;
  v79 = (char *)a4;
  v80 = a7;
  v81 = a1;
  v7 = sub_23F33A388();
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F2EB3F8(&qword_256E6BFB8);
  MEMORY[0x24BDAC7A8](v9);
  v75 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F33A3D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F33A40C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F2EB3F8((uint64_t *)&unk_2543461C0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F33A4A8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v26;
  sub_23F2F86BC(v81, (uint64_t)v21, (uint64_t *)&unk_2543461C0);
  if (sub_23F2EBFC0((uint64_t)v21, 1, v27) != 1)
  {
    v66 = v18;
    v67 = v16;
    v68 = v15;
    v69 = v14;
    v70 = v12;
    v28 = v76;
    v30 = v77;
    v29 = v78;
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
    v81 = v27;
    v65 = v31;
    v31((uint64_t)v25, v21, v27);
    v32 = sub_23F319828((uint64_t)&unk_250FC4038);
    v33 = v23;
    if (v79)
    {
      sub_23F319A80(v72, (uint64_t)v79, v32);
      v35 = v34;
      swift_bridgeObjectRelease();
      if ((v35 & 1) != 0)
      {
        v36 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v37 = (uint64_t)v25;
LABEL_13:
        v27 = v81;
        v36(v37, v81);
        goto LABEL_35;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v72 = v33;
    v79 = v25;
    v38 = sub_23F33A49C();
    v40 = v30;
    v41 = v70;
    if (v39)
    {
      if (v38 == 0xD000000000000016 && v39 == 0x800000023F33DFE0)
        goto LABEL_10;
      v42 = sub_23F33B978();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_12;
    }
    v43 = v66;
    sub_23F33A8C8();
    v44 = v69;
    sub_23F33A3C4();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v68);
    sub_23F33A3DC();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v11);
    v82[0] = sub_23F33B534();
    v82[1] = v45;
    sub_23F33A37C();
    sub_23F3212A8();
    v46 = sub_23F33B7D4();
    v48 = v47;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
    swift_bridgeObjectRelease();
    v49 = (void *)sub_23F33A484();
    v50 = sub_23F332AF8(v49);
    v52 = v51;
    if (v46 == sub_23F33A478() && v48 == v53)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v55 = sub_23F33B978();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
      {
        if (!v52)
          goto LABEL_37;
        if (v46 != v50 || v52 != v48)
        {
          v57 = sub_23F33B978();
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0)
          {
            v58 = sub_23F33A49C();
            if (v59)
            {
              if (v58 == 7103860 && v59 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v61 = sub_23F33B978();
                swift_bridgeObjectRelease();
                if ((v61 & 1) == 0)
                  goto LABEL_37;
              }
              sub_23F32F820(v82, v50, v52);
LABEL_10:
              swift_bridgeObjectRelease();
LABEL_12:
              v36 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
              v37 = (uint64_t)v79;
              goto LABEL_13;
            }
LABEL_37:
            swift_bridgeObjectRelease();
            v63 = v80;
            v27 = v81;
            v65(v80, v79, v81);
            v62 = 0;
            return sub_23F2EBFCC(v63, v62, 1, v27);
          }
LABEL_34:
          v27 = v81;
          (*(void (**)(char *, uint64_t))(v72 + 8))(v79, v81);
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  sub_23F2FD434((uint64_t)v21, (uint64_t *)&unk_2543461C0);
LABEL_35:
  v62 = 1;
  v63 = v80;
  return sub_23F2EBFCC(v63, v62, 1, v27);
}

void sub_23F32F298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F32C2A0(a1, a2, *(_QWORD *)(v2 + 16), *(double **)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(uint64_t **)(v2 + 72));
}

uint64_t sub_23F32F2C8(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_23F32F2E4()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F305674();
  sub_23F3333E8();
  sub_23F33A97C();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F333294();
  sub_23F3331C8(qword_256E6BBD0, v2);
  sub_23F333468();
  sub_23F33332C();
  sub_23F3331FC();
  if ((v4 & 1) != 0)
  {
    sub_23F333354(v3);
    while (1)
    {
      sub_23F333250(v5);
      sub_23F3331C8(&qword_256E6A250, (void (*)(uint64_t))MEMORY[0x24BE571D8]);
      sub_23F3332CC();
      sub_23F3332B4();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F333228();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F333720();
        goto LABEL_7;
      }
    }
    sub_23F2EBF64();
    sub_23F33343C(v10);
    sub_23F333314();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F333630();
LABEL_7:
    sub_23F3335F8();
    sub_23F3332FC();
    v7 = sub_23F333270();
    sub_23F330684(v7, v8, v9);
    sub_23F3333D8();
    sub_23F333340();
  }
  sub_23F2F37B0();
}

void sub_23F32F3D4()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F305674();
  sub_23F3333E8();
  sub_23F33A9E8();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F333294();
  sub_23F3331C8(&qword_256E6A260, v2);
  sub_23F333468();
  sub_23F33332C();
  sub_23F3331FC();
  if ((v4 & 1) != 0)
  {
    sub_23F333354(v3);
    while (1)
    {
      sub_23F333250(v5);
      sub_23F3331C8(&qword_256E6A268, (void (*)(uint64_t))MEMORY[0x24BE57320]);
      sub_23F3332CC();
      sub_23F3332B4();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F333228();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F333720();
        goto LABEL_7;
      }
    }
    sub_23F2EBF64();
    sub_23F33343C(v10);
    sub_23F333314();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F333630();
LABEL_7:
    sub_23F3335F8();
    sub_23F3332FC();
    v7 = sub_23F333270();
    sub_23F3308D8(v7, v8, v9);
    sub_23F3333D8();
    sub_23F333340();
  }
  sub_23F2F37B0();
}

uint64_t sub_23F32F4C4(_WORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x2426690AC](*(_QWORD *)(v6 + 40), (unsigned __int16)a2, 2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23F330B2C(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_23F32F5C4()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F305674();
  sub_23F3333E8();
  sub_23F33AF70();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F333294();
  sub_23F3331C8(&qword_254346208, v2);
  sub_23F333468();
  sub_23F33332C();
  sub_23F3331FC();
  if ((v4 & 1) != 0)
  {
    sub_23F333354(v3);
    while (1)
    {
      sub_23F333250(v5);
      sub_23F3331C8(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
      sub_23F3332CC();
      sub_23F3332B4();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F333228();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F333720();
        goto LABEL_7;
      }
    }
    sub_23F2EBF64();
    sub_23F33343C(v10);
    sub_23F333314();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F333630();
LABEL_7:
    sub_23F3335F8();
    sub_23F3332FC();
    v7 = sub_23F333270();
    sub_23F330C50(v7, v8, v9);
    sub_23F3333D8();
    sub_23F333340();
  }
  sub_23F2F37B0();
}

void sub_23F32F6B4(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v4 = v2;
  v7 = *v2;
  sub_23F33B51C();
  sub_23F33B9F0();
  swift_bridgeObjectRetain();
  sub_23F33B564();
  v8 = sub_23F33BA08();
  sub_23F30F0EC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_23F3337A0();
  if ((v11 & 1) != 0)
  {
    sub_23F333774();
    if (v3 == sub_23F33363C() && v8 == v12)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v14 = sub_23F30F060();
      sub_23F2EB230();
      sub_23F30F0EC();
      if ((v14 & 1) == 0)
      {
        v15 = ~v9;
        do
        {
          v10 = (v10 + 1) & v15;
          sub_23F3337A0();
          if ((v16 & 1) == 0)
            goto LABEL_15;
          sub_23F333774();
          if (v14 == sub_23F33363C() && v8 == v17)
            goto LABEL_16;
          v14 = sub_23F30F060();
          sub_23F2EB230();
          sub_23F30F0EC();
        }
        while ((v14 & 1) == 0);
      }
    }

    sub_23F2F6D18();
    v29 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v10);
    *a1 = v29;
    v30 = v29;
    goto LABEL_18;
  }
LABEL_15:
  sub_23F2F6D18();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23F33372C();
  v20 = a2;
  v21 = sub_23F330EA4((uint64_t)v20, v10, isUniquelyReferenced_nonNull_native);
  sub_23F3336BC(v21, v22, v23, v24, v25, v26, v27, v28, v31, v32);
  *a1 = v20;
LABEL_18:
  sub_23F333550();
}

void sub_23F32F820(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = *v3;
  sub_23F33B9F0();
  swift_bridgeObjectRetain();
  sub_23F33B564();
  v8 = sub_23F33BA08();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_23F31D3DC();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    sub_23F30F0EC();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23F33372C();
    swift_bridgeObjectRetain();
    v22 = sub_23F3310D0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    sub_23F3336BC(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
    *a1 = a2;
    a1[1] = a3;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v7 + 48);
  v13 = (_QWORD *)(v12 + 16 * v10);
  v14 = *v13 == a2 && v13[1] == a3;
  if (!v14 && (sub_23F333710() & 1) == 0)
  {
    v17 = ~v9;
    do
    {
      v10 = (v10 + 1) & v17;
      sub_23F31D3DC();
      if ((v18 & 1) == 0)
        goto LABEL_16;
      v19 = (_QWORD *)(v12 + 16 * v10);
      v20 = *v19 == a2 && v19[1] == a3;
    }
    while (!v20 && (sub_23F333710() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  sub_23F30F0EC();
  v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v16 = v15[1];
  *a1 = *v15;
  a1[1] = v16;
  swift_bridgeObjectRetain();
LABEL_17:
  sub_23F333550();
}

void sub_23F32F964()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F305674();
  sub_23F3333E8();
  sub_23F33AD30();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F333294();
  sub_23F3331C8(&qword_256E6BBB8, v2);
  sub_23F333468();
  sub_23F33332C();
  sub_23F3331FC();
  if ((v4 & 1) != 0)
  {
    sub_23F333354(v3);
    while (1)
    {
      sub_23F333250(v5);
      sub_23F3331C8(qword_256E6BBC0, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
      sub_23F3332CC();
      sub_23F3332B4();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F333228();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F333720();
        goto LABEL_7;
      }
    }
    sub_23F2EBF64();
    sub_23F33343C(v10);
    sub_23F333314();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F333630();
LABEL_7:
    sub_23F3335F8();
    sub_23F3332FC();
    v7 = sub_23F333270();
    sub_23F331268(v7, v8, v9);
    sub_23F3333D8();
    sub_23F333340();
  }
  sub_23F2F37B0();
}

void sub_23F32FA54()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F305674();
  sub_23F3333E8();
  sub_23F33AFA0();
  sub_23F33342C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F333294();
  sub_23F3331C8(&qword_256E6BFC8, v2);
  sub_23F333468();
  sub_23F33332C();
  sub_23F3331FC();
  if ((v4 & 1) != 0)
  {
    sub_23F333354(v3);
    while (1)
    {
      sub_23F333250(v5);
      sub_23F3331C8(&qword_256E6BFD0, (void (*)(uint64_t))MEMORY[0x24BE543D8]);
      sub_23F3332CC();
      sub_23F3332B4();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F333228();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F333720();
        goto LABEL_7;
      }
    }
    sub_23F2EBF64();
    sub_23F33343C(v10);
    sub_23F333314();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F333630();
LABEL_7:
    sub_23F3335F8();
    sub_23F3332FC();
    v7 = sub_23F333270();
    sub_23F3314BC(v7, v8, v9);
    sub_23F3333D8();
    sub_23F333340();
  }
  sub_23F2F37B0();
}

void sub_23F32FB44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F305674();
  v46 = v1;
  v47 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_23F333620(v6, v7);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - v9;
  v11 = (_QWORD *)*v0;
  sub_23F2EB3F8(v4);
  v12 = sub_23F33B804();
  if (v11[2])
  {
    sub_23F3336EC();
    v44 = v11 + 7;
    sub_23F333838();
    v15 = v14 & v13;
    v42 = v0;
    v43 = (unint64_t)(v16 + 63) >> 6;
    v17 = v12 + 56;
    swift_retain();
    v18 = 0;
    if (!v15)
      goto LABEL_4;
LABEL_3:
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    for (i = v19 | (v18 << 6); ; i = v27 + (v18 << 6))
    {
      v28 = v11;
      v29 = v11[6];
      v30 = *(_QWORD *)(v45 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 32);
      v31(v10, v29 + v30 * i, v8);
      sub_23F3337C8();
      sub_23F33B4BC();
      sub_23F3337B4();
      if (((v34 << v33) & ~*(_QWORD *)(v17 + 8 * v32)) == 0)
      {
        sub_23F333740();
        while (++v37 != v38 || (v36 & 1) == 0)
        {
          v39 = v37 == v38;
          if (v37 == v38)
            v37 = 0;
          v36 |= v39;
          if (*(_QWORD *)(v17 + 8 * v37) != -1)
          {
            sub_23F333878();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      sub_23F333754();
LABEL_27:
      *(_QWORD *)(v17 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
      v31((char *)(*(_QWORD *)(v12 + 48) + v35 * v30), (unint64_t)v10, v8);
      ++*(_QWORD *)(v12 + 16);
      v11 = v28;
      if (v15)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v18, 1))
        goto LABEL_35;
      if (v18 + 1 >= v43)
        goto LABEL_29;
      sub_23F3337F8();
      v18 = v21;
      if (!v22)
      {
        v18 = v21 + 1;
        if (v21 + 1 >= v43)
          goto LABEL_29;
        if (!v44[v18])
        {
          v18 = v21 + 2;
          if (v21 + 2 >= v43)
            goto LABEL_29;
          if (!v44[v18])
          {
            if (v21 + 3 >= v43)
            {
LABEL_29:
              swift_release();
              v5 = v42;
              sub_23F3336EC();
              if (v40 > 63)
                sub_23F32F2C8(0, (unint64_t)(v40 + 63) >> 6, v44);
              else
                *v44 = -1 << v40;
              v11[2] = 0;
              break;
            }
            sub_23F3337F8();
            if (!v24)
            {
              while (1)
              {
                v18 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_36;
                if (v18 >= v43)
                  goto LABEL_29;
                ++v23;
                if (v44[v18])
                  goto LABEL_17;
              }
            }
            v18 = v23;
          }
        }
      }
LABEL_17:
      sub_23F33365C();
      v15 = v26 & v25;
    }
  }
  swift_release();
  *v5 = v12;
  sub_23F2F37B0();
}

uint64_t sub_23F32FE1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_256E6C010);
  result = sub_23F33B804();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
      result = MEMORY[0x2426690AC](*(_QWORD *)(v4 + 40), v18, 2);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_23F32F2C8(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23F3300A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_2543463A0);
  v3 = sub_23F33B804();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_23F33B51C();
      sub_23F33B9F0();
      sub_23F33B564();
      v17 = sub_23F33BA08();
      result = swift_bridgeObjectRelease();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v16;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v28)
        goto LABEL_32;
      v14 = v29[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_32;
        v14 = v29[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_32;
          v14 = v29[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_32:
              swift_release();
              v1 = v27;
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_23F32F2C8(0, (unint64_t)(v26 + 63) >> 6, v29);
              else
                *v29 = -1 << v26;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v28)
                  goto LABEL_32;
                v14 = v29[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23F3303AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_256E69B28);
  v3 = sub_23F33B804();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_23F33B9F0();
      sub_23F33B564();
      result = sub_23F33BA08();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_23F32F2C8(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23F330684(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F33A97C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F32FB44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F331BFC();
      goto LABEL_12;
    }
    sub_23F331DF0();
  }
  v12 = *v3;
  sub_23F3331C8(qword_256E6BBD0, (void (*)(uint64_t))MEMORY[0x24BE571D8]);
  v13 = sub_23F33B4BC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3331C8(&qword_256E6A250, (void (*)(uint64_t))MEMORY[0x24BE571D8]);
      v18 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

uint64_t sub_23F3308D8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F33A9E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F32FB44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F331BFC();
      goto LABEL_12;
    }
    sub_23F331DF0();
  }
  v12 = *v3;
  sub_23F3331C8(&qword_256E6A260, (void (*)(uint64_t))MEMORY[0x24BE57320]);
  v13 = sub_23F33B4BC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3331C8(&qword_256E6A268, (void (*)(uint64_t))MEMORY[0x24BE57320]);
      v18 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

uint64_t sub_23F330B2C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = (unsigned __int16)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23F32FE1C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23F331710();
      goto LABEL_14;
    }
    sub_23F332084();
  }
  v8 = *v3;
  result = MEMORY[0x2426690AC](*(_QWORD *)(*v3 + 40), v5, 2);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int16 *)(v10 + 2 * a2) == (_DWORD)v5)
    {
LABEL_13:
      result = sub_23F33B99C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int16 *)(v10 + 2 * a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(_QWORD *)(v12 + 48) + 2 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23F330C50(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F33AF70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F32FB44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F331BFC();
      goto LABEL_12;
    }
    sub_23F331DF0();
  }
  v12 = *v3;
  sub_23F3331C8(&qword_254346208, (void (*)(uint64_t))MEMORY[0x24BE54398]);
  v13 = sub_23F33B4BC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3331C8(&qword_254346210, (void (*)(uint64_t))MEMORY[0x24BE54398]);
      v18 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

uint64_t sub_23F330EA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_23F3300A0();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_23F3318A4();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_23F3322E4();
  }
  v9 = *v3;
  sub_23F33B51C();
  sub_23F33B9F0();
  sub_23F33B564();
  v10 = sub_23F33BA08();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_23F33B51C();
  v14 = v13;
  if (v12 == sub_23F33B51C() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_23F33B978();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_23F33B51C();
      v21 = v20;
      if (v19 == sub_23F33B51C() && v21 == v22)
        goto LABEL_25;
      v24 = sub_23F33B978();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for NLTagScheme(0);
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

uint64_t sub_23F3310D0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23F3303AC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23F331A4C();
      goto LABEL_22;
    }
    sub_23F3325BC();
  }
  v11 = *v4;
  sub_23F33B9F0();
  sub_23F33B564();
  result = sub_23F33BA08();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23F33B978(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23F33B99C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23F33B978();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23F331268(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F33AD30();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F32FB44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F331BFC();
      goto LABEL_12;
    }
    sub_23F331DF0();
  }
  v12 = *v3;
  sub_23F3331C8(&qword_256E6BBB8, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
  v13 = sub_23F33B4BC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3331C8(qword_256E6BBC0, (void (*)(uint64_t))MEMORY[0x24BE540F8]);
      v18 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

uint64_t sub_23F3314BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F33AFA0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F32FB44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F331BFC();
      goto LABEL_12;
    }
    sub_23F331DF0();
  }
  v12 = *v3;
  sub_23F3331C8(&qword_256E6BFC8, (void (*)(uint64_t))MEMORY[0x24BE543D8]);
  v13 = sub_23F33B4BC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3331C8(&qword_256E6BFD0, (void (*)(uint64_t))MEMORY[0x24BE543D8]);
      v18 = sub_23F33B4EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F33B99C();
  __break(1u);
  return result;
}

void *sub_23F331710()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23F2EB3F8(&qword_256E6C010);
  v2 = *v0;
  v3 = sub_23F33B7F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * i) = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23F3318A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;

  v1 = v0;
  sub_23F2EB3F8(&qword_2543463A0);
  v2 = *v0;
  v3 = sub_23F33B7F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    result = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23F331A4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_23F2EB3F8(&qword_256E69B28);
  v2 = *v0;
  v3 = sub_23F33B7F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23F331BFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  sub_23F305674();
  v2 = v1;
  v3 = v0;
  v5 = v4(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - v7;
  sub_23F2EB3F8(v2);
  v9 = (_QWORD *)*v0;
  v10 = sub_23F33B7F8();
  if (!v9[2])
  {
    swift_release();
LABEL_30:
    *v3 = v10;
    sub_23F2F37B0();
    return;
  }
  v31 = v3;
  sub_23F3336EC();
  v12 = v9 + 7;
  v14 = (unint64_t)(v13 + 63) >> 6;
  if ((_QWORD *)v10 != v9 || v11 >= &v9[v14 + 7])
    memmove(v11, v9 + 7, 8 * v14);
  v16 = 0;
  *(_QWORD *)(v10 + 16) = v9[2];
  sub_23F3336EC();
  v18 = v9[7];
  v19 = -1;
  if (v17 < 64)
    v19 = ~(-1 << v17);
  v20 = v19 & v18;
  v21 = (unint64_t)(v17 + 63) >> 6;
  if ((v19 & v18) == 0)
    goto LABEL_12;
LABEL_11:
  v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v22 | (v16 << 6); ; i = v28 + (v16 << 6))
  {
    v29 = *(_QWORD *)(v6 + 72) * i;
    sub_23F3334BC((uint64_t)v8, v9[6] + v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    sub_23F3334BC(*(_QWORD *)(v10 + 48) + v29, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    if (v20)
      goto LABEL_11;
LABEL_12:
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v21)
      goto LABEL_28;
    ++v16;
    if (!v12[v24])
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v21)
        goto LABEL_28;
      if (!v12[v16])
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v21)
          goto LABEL_28;
        if (!v12[v16])
          break;
      }
    }
LABEL_25:
    sub_23F33365C();
    v20 = v27 & v26;
  }
  v25 = v24 + 3;
  if (v25 >= v21)
  {
LABEL_28:
    swift_release();
    v3 = v31;
    goto LABEL_30;
  }
  if (v12[v25])
  {
    v16 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v21)
      goto LABEL_28;
    ++v25;
    if (v12[v16])
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

void sub_23F331DF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F305674();
  v41 = v1;
  v42 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_23F333620(v6, v7);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  v12 = *v0;
  sub_23F2EB3F8(v4);
  v13 = sub_23F33B804();
  if (!*(_QWORD *)(v12 + 16))
  {
    sub_23F333818();
LABEL_31:
    *v5 = v13;
    sub_23F2F37B0();
    return;
  }
  sub_23F3336EC();
  v38 = v0;
  v39 = v12 + 56;
  sub_23F333838();
  v16 = v15 & v14;
  v40 = (unint64_t)(v17 + 63) >> 6;
  v18 = v13 + 56;
  swift_retain();
  v19 = 0;
  if (!v16)
    goto LABEL_4;
LABEL_3:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v20 | (v19 << 6); ; i = v28 + (v19 << 6))
  {
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v29 * i, v8);
    sub_23F3337C8();
    sub_23F33B4BC();
    sub_23F3337B4();
    if (((v32 << v31) & ~*(_QWORD *)(v18 + 8 * v30)) == 0)
    {
      sub_23F333740();
      while (++v35 != v36 || (v34 & 1) == 0)
      {
        v37 = v35 == v36;
        if (v35 == v36)
          v35 = 0;
        v34 |= v37;
        if (*(_QWORD *)(v18 + 8 * v35) != -1)
        {
          sub_23F333878();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    sub_23F333754();
LABEL_27:
    *(_QWORD *)(v18 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v13 + 48) + v33 * v29, v11, v8);
    ++*(_QWORD *)(v13 + 16);
    if (v16)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v19, 1))
      goto LABEL_33;
    if (v19 + 1 >= v40)
      goto LABEL_29;
    sub_23F3337F8();
    v19 = v22;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_29;
      if (!*(_QWORD *)(v39 + 8 * v19))
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v40)
          goto LABEL_29;
        if (!*(_QWORD *)(v39 + 8 * v19))
          break;
      }
    }
LABEL_17:
    sub_23F33365C();
    v16 = v27 & v26;
  }
  if (v22 + 3 >= v40)
  {
LABEL_29:
    swift_release_n();
    v5 = v38;
    goto LABEL_31;
  }
  sub_23F3337F8();
  if (v25)
  {
    v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v40)
      goto LABEL_29;
    ++v24;
    if (*(_QWORD *)(v39 + 8 * v19))
      goto LABEL_17;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_23F332084()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int16 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_256E6C010);
  result = sub_23F33B804();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
    result = MEMORY[0x2426690AC](*(_QWORD *)(v4 + 40), v17, 2);
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23F3322E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_2543463A0);
  v3 = sub_23F33B804();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_23F33B51C();
    sub_23F33B9F0();
    v17 = v16;
    sub_23F33B564();
    v18 = sub_23F33BA08();
    result = swift_bridgeObjectRelease();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v29)
        goto LABEL_32;
      v14 = *(_QWORD *)(v28 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v29)
          goto LABEL_32;
        v14 = *(_QWORD *)(v28 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23F3325BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23F2EB3F8(&qword_256E69B28);
  v3 = sub_23F33B804();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_23F33B9F0();
    swift_bridgeObjectRetain();
    sub_23F33B564();
    result = sub_23F33BA08();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

_QWORD *sub_23F332864(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23F2EB3F8((uint64_t *)&unk_2543463E0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 8);
  v5 = sub_23F332B64(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23F31D2E8();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_23F332944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23F2EB3F8(&qword_256E6A020);
  v3 = *(_QWORD *)(sub_23F33AFA0() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_23F332D5C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_23F31D2E8();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23F332A5C()
{
  sub_23F33A8D4();
  __break(1u);
}

unint64_t sub_23F332A78()
{
  unint64_t result;

  result = qword_256E6BF78;
  if (!qword_256E6BF78)
  {
    result = MEMORY[0x2426695B0](MEMORY[0x24BDCC090], MEMORY[0x24BDCC0A0]);
    atomic_store(result, (unint64_t *)&qword_256E6BF78);
  }
  return result;
}

uint64_t sub_23F332AB8()
{
  return 8;
}

uint64_t sub_23F332AC4()
{
  return swift_release();
}

uint64_t sub_23F332ACC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_23F332AE0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23F332AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_23F32ED70(a1, a2, v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_23F332AF8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_resourceSpecifier);

  if (!v2)
    return 0;
  v3 = sub_23F33B51C();

  return v3;
}

_QWORD *sub_23F332B64(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23F332D5C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_23F33AFA0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

int64_t sub_23F333024(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F333108(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23F333188(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23F333194(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_23F2F244C(a2);
    sub_23F333820();
  }
  sub_23F2EB20C();
}

void sub_23F3331C8(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_23F333820();
  }
  sub_23F2EB20C();
}

uint64_t sub_23F3331FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F333228()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F333250(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v4, *(_QWORD *)(a1 + 48) + v1 * v5, v3);
}

uint64_t sub_23F333270()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *v1;
  *v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_23F3332B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t sub_23F3332CC()
{
  return sub_23F33B4EC();
}

uint64_t sub_23F3332FC()
{
  uint64_t (*v0)(uint64_t, _QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, *(_QWORD *)(v3 - 96), v1);
}

uint64_t sub_23F333314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 120), *(_QWORD *)(**(_QWORD **)(v3 - 128) + 48) + v1, v0);
}

uint64_t sub_23F33332C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_23F33B4BC();
}

uint64_t sub_23F333340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

void sub_23F333354(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = ~a1;
  *(_QWORD *)(v4 - 104) = v2;
}

uint64_t sub_23F33336C(void *a1)
{
  Swift::String_optional v2;

  v2.value._countAndFlagsBits = 0;
  v2.value._object = 0;
  return static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(1769238085, 1952671092, v2, a1);
}

uint64_t sub_23F3333A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = 0x79636E6574616CLL;
  *(_QWORD *)(v0 + 88) = 0xE700000000000000;
  return sub_23F33B8AC();
}

uint64_t sub_23F3333D8()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3333E8()
{
  return 0;
}

uint64_t sub_23F3333FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 - 256) = a6;
  *(_QWORD *)(v7 - 248) = a7;
  *(_QWORD *)(v7 - 280) = a5;
  *(_QWORD *)(v7 - 264) = a4;
  *(_QWORD *)(v7 - 304) = a3;
  *(_QWORD *)(v7 - 312) = a2;
  return sub_23F33B8C4();
}

uint64_t sub_23F33343C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F333444()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 288) + 8))(v0, *(_QWORD *)(v1 - 272));
}

uint64_t sub_23F333468()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F333474@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 296) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23F33B168();
}

uint64_t sub_23F333498@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23F33B138();
}

uint64_t sub_23F3334BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F3334C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = (a2 - 32) | 0x8000000000000000;
  return sub_23F33B570();
}

uint64_t sub_23F3334E4()
{
  return sub_23F33AA30();
}

uint64_t sub_23F3334F0()
{
  return sub_23F33B1B0();
}

uint64_t sub_23F33350C()
{
  return sub_23F33B1B0();
}

uint64_t sub_23F333528(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23F30DBFC(a1, a2, (uint64_t *)(v2 - 216));
}

uint64_t sub_23F333594(uint64_t result)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 216) = result;
  *(_BYTE *)v2 = v1;
  *(_BYTE *)(v2 + 1) = v1;
  *(_WORD *)(v2 + 2) = 2082;
  return result;
}

uint64_t sub_23F3335B4()
{
  return 0;
}

id sub_23F3335D0()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 1760));
}

uint64_t sub_23F3335E4()
{
  return sub_23F33B15C();
}

uint64_t sub_23F3335F8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F333600()
{
  return sub_23F33B8B8();
}

id sub_23F333610()
{
  return objc_allocWithZone(MEMORY[0x24BDD16E0]);
}

uint64_t sub_23F333620(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

uint64_t sub_23F33363C()
{
  return sub_23F33B51C();
}

uint64_t sub_23F33364C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F33369C()
{
  return sub_23F33B8DC();
}

uint64_t sub_23F3336A4(uint64_t a1, unint64_t *a2)
{
  return sub_23F2F0818(0, a2);
}

uint64_t sub_23F3336AC()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23F33AA18();
}

uint64_t sub_23F3336BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  *v10 = a10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3336CC()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F3336DC()
{
  return sub_23F33B7BC();
}

uint64_t sub_23F3336F8()
{
  return 0;
}

uint64_t sub_23F333710()
{
  return sub_23F33B978();
}

void sub_23F33372C()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23F333768()
{
  return sub_23F33B174();
}

uint64_t sub_23F333774()
{
  return sub_23F33B51C();
}

uint64_t sub_23F333780(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = a1;
  return sub_23F33AA3C();
}

uint64_t sub_23F33378C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F333798()
{
  uint64_t *v0;

  return sub_23F2EB3F8(v0);
}

void sub_23F3337C8()
{
  uint64_t v0;

  sub_23F3331C8(*(_QWORD **)(v0 - 96), *(void (**)(uint64_t))(v0 - 104));
}

uint64_t sub_23F3337E0()
{
  return sub_23F33BA14();
}

void sub_23F3337EC(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 0x16u);
}

uint64_t sub_23F333818()
{
  return swift_release();
}

void sub_23F333820()
{
  JUMPOUT(0x2426695B0);
}

uint64_t sub_23F33382C()
{
  return sub_23F33B540();
}

uint64_t sub_23F33384C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F333858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F333864()
{
  return swift_release();
}

uint64_t sub_23F33386C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return type metadata accessor for Analytics();
}

void sub_23F33388C()
{
  strcpy((char *)&qword_2543462C8, "overallLatency");
  algn_2543462D0[7] = -18;
}

void sub_23F3338BC()
{
  qword_254346280 = 0x6F436E6565726373;
  *(_QWORD *)algn_254346288 = 0xEB00000000746E75;
}

void sub_23F3338E8()
{
  strcpy((char *)&qword_2543462E8, "uiElementCount");
  unk_2543462F7 = -18;
}

void sub_23F333918()
{
  qword_2543462A0 = 0x6F43776F646E6977;
  *(_QWORD *)algn_2543462A8 = 0xEB00000000746E75;
}

uint64_t sub_23F333944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_23F33369C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE798();
  v5 = v4 - v3;
  v6 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_overallStart;
  sub_23F2FD7C8();
  sub_23F334BA8(v6);
  sub_23F334BA8(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCollectionStart);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_screenCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_windowCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCount) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_totalCharacterTextCount) = 0;
  v7 = OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_payload;
  sub_23F2EAA74();
  *(_QWORD *)(v0 + v7) = sub_23F33B4B0();
  sub_23F33B8D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_clock, v5, v1);
  return v0;
}

uint64_t sub_23F333A54()
{
  return sub_23F333A6C(&OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_overallStart);
}

uint64_t sub_23F333A60()
{
  return sub_23F333A6C(&OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCollectionStart);
}

uint64_t sub_23F333A6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_23F33369C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F333684();
  sub_23F2EB3F8(&qword_2543463A8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F334B58();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v1 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_clock, v4);
  sub_23F33B8AC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  v10 = sub_23F2FD7C8();
  sub_23F2EBFCC((uint64_t)v9, 0, 1, v10);
  sub_23F2F8754((uint64_t)v9, v2, &qword_2543463A8);
  v11 = v1 + *a1;
  sub_23F334B28();
  sub_23F334AE8(v2, v11, &qword_2543463A8);
  return swift_endAccess();
}

void sub_23F333B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  id v20;
  _BYTE v21[24];

  v2 = sub_23F33369C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F333684();
  v4 = sub_23F2FD7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F334B58();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v21[-v7];
  sub_23F2EB3F8(&qword_2543463A8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F2EE798();
  v12 = v11 - v10;
  v13 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCollectionStart;
  sub_23F2F6BD4();
  sub_23F3344FC(v13, v12);
  if (sub_23F2EBFC0(v12, 1, v4))
  {
    sub_23F334544(v12);
    v14 = 0.0;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v8, v12, v4);
    sub_23F334544(v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_clock, v2);
    sub_23F33B8AC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
    sub_23F33B8B8();
    v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v15(v1, v4);
    v15((uint64_t)v8, v4);
    v16 = sub_23F33BA14();
    v14 = (double)v16 * 1000.0 + (double)v17 * 1.0e-15;
  }
  v18 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  *(float *)&v19 = v14;
  v20 = objc_msgSend(v18, sel_initWithFloat_, v19);
  sub_23F334B28();
  sub_23F3345EC((uint64_t)v20, 0xD00000000000001ALL, 0x800000023F33E0E0, sub_23F3348D0);
  sub_23F334B44();
  sub_23F333534();
}

_QWORD *sub_23F333DB8()
{
  return sub_23F333DDC(&OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_screenCount);
}

_QWORD *sub_23F333DC4()
{
  return sub_23F333DDC(&OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_windowCount);
}

_QWORD *sub_23F333DD0()
{
  return sub_23F333DDC(&OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCount);
}

_QWORD *sub_23F333DDC(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + *result);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1 + *result) = v4;
  return result;
}

uint64_t sub_23F333DF8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_totalCharacterTextCount);
  v3 = __OFADD__(v2, result);
  v4 = v2 + result;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_totalCharacterTextCount) = v4;
  return result;
}

void sub_23F333E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  id v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String_optional v44;

  v1 = sub_23F33369C();
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  MEMORY[0x24BDAC7A8](v1);
  sub_23F2EE798();
  v4 = v3 - v2;
  v5 = sub_23F2FD7C8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - v10;
  sub_23F2EB3F8(&qword_2543463A8);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F2EE798();
  v15 = v14 - v13;
  if (qword_2543462E0 != -1)
    swift_once();
  v16 = *(_QWORD *)algn_2543462D0;
  v43 = qword_2543462C8;
  v17 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_overallStart;
  sub_23F2F6BD4();
  sub_23F3344FC(v17, v15);
  if (sub_23F2EBFC0(v15, 1, v5))
  {
    swift_bridgeObjectRetain();
    sub_23F334544(v15);
    v18 = 0.0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v15, v5);
    swift_bridgeObjectRetain();
    sub_23F334544(v15);
    v20 = v41;
    v19 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v4, v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_clock, v42);
    sub_23F33B8AC();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v4, v19);
    sub_23F33B8B8();
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v21(v9, v5);
    v21(v11, v5);
    v22 = sub_23F33BA14();
    v18 = (double)v22 * 1000.0 + (double)v23 * 1.0e-15;
  }
  v24 = v0;
  v25 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  *(float *)&v26 = v18;
  v27 = objc_msgSend(v25, sel_initWithFloat_, v26);
  v28 = (void **)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_payload);
  sub_23F334B14();
  sub_23F3345EC((uint64_t)v27, v43, v16, sub_23F3348D0);
  sub_23F334B44();
  swift_bridgeObjectRelease();
  if (qword_254346298 != -1)
    swift_once();
  v29 = qword_254346280;
  v30 = *(_QWORD *)algn_254346288;
  sub_23F334B4C();
  sub_23F334B74();
  v31 = sub_23F334B34();
  sub_23F334B14();
  sub_23F3345EC((uint64_t)v31, v29, v30, sub_23F3348D0);
  sub_23F334B44();
  sub_23F2EBF5C();
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v24+ OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_totalCharacterTextCount));
  sub_23F334B14();
  sub_23F3345EC((uint64_t)v32, 0xD000000000000017, 0x800000023F33E0A0, sub_23F3348D0);
  sub_23F334B44();
  if (qword_254346300 != -1)
    swift_once();
  sub_23F334B4C();
  sub_23F334B74();
  sub_23F334B34();
  v33 = sub_23F334B14();
  sub_23F334B80(v33, v34, v35, sub_23F3348D0);
  sub_23F334B44();
  sub_23F2EBF5C();
  if (qword_2543462B8 != -1)
    swift_once();
  sub_23F334B4C();
  sub_23F334B74();
  sub_23F334B34();
  v36 = sub_23F334B14();
  sub_23F334B80(v36, v37, v38, sub_23F3348D0);
  sub_23F334B44();
  sub_23F2EBF5C();
  type metadata accessor for Analytics();
  v39 = *v28;
  swift_bridgeObjectRetain();
  v44.value._countAndFlagsBits = 0;
  v44.value._object = 0;
  static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(18, 0x3F33E0C0, v44, v39);
  sub_23F2EBF5C();
  sub_23F334280();
  sub_23F333534();
}

uint64_t sub_23F334280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;

  sub_23F2EAA74();
  v1 = sub_23F33B4B0();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_payload);
  sub_23F2F6BD4();
  *v2 = v1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_screenCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_windowCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCount) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_totalCharacterTextCount) = 0;
  return result;
}

void sub_23F33432C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_clock;
  v2 = sub_23F33369C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23F334544(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_overallStart);
  sub_23F334544(v0 + OBJC_IVAR____TtC30IntelligenceFlowContextRuntime31UIContextRetrieverCAEventLogger_uiElementCollectionStart);
  swift_bridgeObjectRelease();
  sub_23F2EB20C();
}

uint64_t sub_23F334398()
{
  sub_23F33432C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F3343BC()
{
  return type metadata accessor for UIContextRetrieverCAEventLogger();
}

uint64_t type metadata accessor for UIContextRetrieverCAEventLogger()
{
  uint64_t result;

  result = qword_254346320;
  if (!qword_254346320)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F3343FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F33B8DC();
  if (v0 <= 0x3F)
  {
    sub_23F3344A8();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_23F3344A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543463B0)
  {
    sub_23F33B8C4();
    v0 = sub_23F33B7A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543463B0);
  }
}

uint64_t sub_23F3344FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_2543463A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F334544(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_2543463A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F334584(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  sub_23F334B90();
  sub_23F33465C(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3345E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3345EC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F3347BC);
}

uint64_t sub_23F3345EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v10;

  swift_isUniquelyReferenced_nonNull_native();
  sub_23F334B90();
  a4(a1, a2, a3);
  *v4 = v10;
  return swift_bridgeObjectRelease();
}

void sub_23F33465C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = sub_23F33A97C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  sub_23F2F60C0();
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  sub_23F2EB3F8(&qword_256E6A2E8);
  if ((sub_23F33B8E8() & 1) == 0)
    goto LABEL_5;
  sub_23F2F60C0();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    sub_23F33B9A8();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    v19 = sub_23F2EB3F8(&qword_256E6A2E0);
    sub_23F334AE8(a1, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, &qword_256E6A2E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_23F3349E4(v13, (uint64_t)v9, a1, v17);
  }
}

uint64_t sub_23F3347BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F2F6130(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F2EB3F8(qword_256E6C020);
  if ((sub_23F33B8E8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F2F6130(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23F33B9A8();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_23F334AA0(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_23F3348D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F2F6130(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F2EB3F8(&qword_2543463B8);
  if ((sub_23F33B8E8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F2F6130(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    sub_23F33B9A8();
    __break(1u);
    return;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];

    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_23F334AA0(v11, a2, a3, a1, v15);
    swift_bridgeObjectRetain();
  }
}

void sub_23F3349E4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23F33A97C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_23F2EB3F8(&qword_256E6A2E0);
  sub_23F2F8754(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, &qword_256E6A2E0);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

unint64_t sub_23F334AA0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_23F334AE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F2F8840(a1, a2, a3);
  sub_23F2F8868(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23F2EB20C();
}

uint64_t sub_23F334B14()
{
  return swift_beginAccess();
}

uint64_t sub_23F334B28()
{
  return swift_beginAccess();
}

id sub_23F334B34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 94), v0);
}

uint64_t sub_23F334B44()
{
  return swift_endAccess();
}

id sub_23F334B4C()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 1760));
}

uint64_t sub_23F334B74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F334B80(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_23F3345EC(v6, v4, v5, a4);
}

void sub_23F334B90()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23F334BA8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFCC(a1, 1, 1, v1);
}

uint64_t sub_23F334BB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F334BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F324678();
  return sub_23F2EBFC0(v1, v0, v2);
}

uint64_t sub_23F334BEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F334BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F324678();
  return sub_23F2EBFCC(v1, v0, v0, v2);
}

uint64_t type metadata accessor for UIContextSourceProvider()
{
  uint64_t result;

  result = qword_256E6C080;
  if (!qword_256E6C080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F334C5C()
{
  return swift_task_switch();
}

uint64_t sub_23F334C70()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for UIContextRetriever();
  sub_23F2FD748();
  v0[2] = sub_23F32B080();
  sub_23F33AF64();
  sub_23F319804();
  sub_23F33AE38();
  sub_23F2FD748();
  v1 = sub_23F33AE20();
  v0[3] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23F334D08;
  return sub_23F32B128(v1);
}

uint64_t sub_23F334D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F30558C();
  v4 = *v3;
  *v5 = v4;
  *(_QWORD *)(v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v0);
}

uint64_t sub_23F334D90()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F334DCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_23F334E14;
  return sub_23F334C5C();
}

uint64_t sub_23F334E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F30558C();
  v4 = *v3;
  *v5 = v4;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void sub_23F334E64(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, uint64_t))
{
  a3(*a1, a1[1], a2);
  sub_23F2EB20C();
}

void sub_23F334E90(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    v6 = (void *)sub_23F33A4B4();
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_23F33A448();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

void sub_23F334F10()
{
  sub_23F33B9FC();
  sub_23F2EB20C();
}

void sub_23F334F30()
{
  sub_23F334F10();
}

id sub_23F334F38(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_23F334F78(a1, a2);
}

id sub_23F334F78(uint64_t a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime25UIContextXPCServiceServer6Server_encoder;
  sub_23F33A370();
  sub_23F2FD748();
  v7 = v2;
  *(_QWORD *)&v2[v6] = sub_23F33A364();
  v8 = OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime25UIContextXPCServiceServer6Server_decoder;
  sub_23F33A34C();
  sub_23F2FD748();
  *(_QWORD *)&v7[v8] = sub_23F33A340();
  v9 = sub_23F33ACB8();
  v10 = (uint64_t *)&v7[OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime25UIContextXPCServiceServer6Server_clientApplicationIdentifier];
  *v10 = v9;
  v10[1] = v11;
  type metadata accessor for UIContextRetriever();
  sub_23F2FD748();
  *(_QWORD *)&v7[OBJC_IVAR____TtCC30IntelligenceFlowContextRuntime25UIContextXPCServiceServer6Server_retriever] = sub_23F32B080();

  v15.receiver = v7;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, sel_init);

  v13 = sub_23F33ACC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  return v12;
}

uint64_t sub_23F335088(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;

  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F337440();
  sub_23F33745C(v10);
  v11 = sub_23F2F6C44();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v12 = (_QWORD *)sub_23F2F6C44();
  v12[2] = v4;
  v12[3] = a1;
  v12[4] = a2;
  swift_retain();
  v13 = v4;
  sub_23F304DB0(a1, a2);
  sub_23F33B654();
  swift_release();
  swift_release();
  swift_release();
  return sub_23F3374E4();
}

uint64_t sub_23F33517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_23F33B864();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = sub_23F33B1B0();
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v7 = sub_23F33B858();
  v4[22] = v7;
  v4[23] = *(_QWORD *)(v7 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F33524C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F3052F8();
  sub_23F33AE38();
  sub_23F304E74(&qword_2543461F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54250], MEMORY[0x24BE54258]);
  sub_23F33A334();
  v1 = v0[2];
  v0[25] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[26] = v2;
  *v2 = v0;
  v2[1] = sub_23F3356BC;
  return sub_23F32B128(v1);
}

uint64_t sub_23F3356BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  return sub_23F2F6B54();
}

#error "23F335A80: call analysis failed (funcsize=249)"

#error "23F335E40: call analysis failed (funcsize=203)"

void sub_23F336004(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F337440();
  sub_23F33745C(v6);
  v7 = sub_23F2F6C44();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(sub_23F2F6C44() + 16) = v2;
  swift_retain();
  v8 = v2;
  sub_23F33B654();
  swift_release();
  swift_release();
  swift_release();
  sub_23F3374E4();
  sub_23F2EE710();
}

uint64_t sub_23F3360CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = a2;
  v3 = sub_23F33B1B0();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v4 = sub_23F33B864();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F336164()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v1;
  *v1 = v0;
  v1[1] = sub_23F3361B8;
  return sub_23F327E60();
}

uint64_t sub_23F3361B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  swift_task_dealloc();
  return sub_23F2F6B54();
}

#error "23F336420: call analysis failed (funcsize=170)"

#error "23F3366C0: call analysis failed (funcsize=139)"

void sub_23F336838(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F2EB3F8((uint64_t *)&unk_254346358);
  sub_23F2EE5B8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F337440();
  sub_23F33745C(v9);
  v10 = sub_23F2F6C44();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = sub_23F2F6C44();
  *(_QWORD *)(v11 + 16) = a2;
  *(_BYTE *)(v11 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23F33B654();
  swift_release();
  swift_release();
  swift_release();
  sub_23F3374E4();
  sub_23F2EE710();
}

uint64_t sub_23F336910(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 120) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v4 = sub_23F33B108();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  v5 = sub_23F33B06C();
  *(_QWORD *)(v3 + 56) = v5;
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  v6 = sub_23F33B0CC();
  *(_QWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3369D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (*(_QWORD *)(v0[3] + 16))
    sub_23F33B0A8();
  else
    sub_23F33B09C();
  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[4];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 32))(v0[13], v0[12], v0[10]);
  sub_23F33B114();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEBBDD0], v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_23F336A98;
  return sub_23F33B0FC();
}

uint64_t sub_23F336A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  sub_23F2F6B38();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23F336B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  sub_23F33A370();
  sub_23F2FD748();
  sub_23F33A364();
  sub_23F304E74(&qword_256E6C118, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEBBD48], MEMORY[0x24BEBBD50]);
  v1 = sub_23F33A358();
  v3 = v2;
  swift_release();
  v4 = *(uint64_t **)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v5 = sub_23F3374B8();
  v6(v5);
  *v4 = v1;
  v4[1] = v3;
  sub_23F2FD528();
  sub_23F2FD500();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23F336D50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = sub_23F334F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for UIContextXPCServiceServer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UIContextXPCServiceServer.Server()
{
  return objc_opt_self();
}

uint64_t sub_23F336DB4(uint64_t a1, uint64_t a2)
{
  return sub_23F304E74(&qword_254346268, a2, (uint64_t (*)(uint64_t))type metadata accessor for UIContextXPCServiceServer.Server, (uint64_t)&unk_23F33FC64);
}

uint64_t sub_23F336DE0()
{
  return sub_23F304E74(&qword_254346200, 255, MEMORY[0x24BE54338], MEMORY[0x24BE54330]);
}

uint64_t sub_23F336E10()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_2543467A0;
  v1 = (id)qword_2543467A0;
  return v0;
}

void sub_23F336E58(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_2543467A0;
  qword_2543467A0 = a1;

}

uint64_t (*sub_23F336EA4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23F336EE4()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23F336F28(uint64_t a1)
{
  swift_beginAccess();
  qword_254346798 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23F336F74())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23F336FB4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23F336FD8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 16))(*a1, a1[1], a2);
  sub_23F2EB20C();
}

uint64_t sub_23F337000()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F337024()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_23F3374EC(v3);
  return sub_23F336910(v4, v5, v2);
}

uint64_t sub_23F337080()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F3370A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23F3370C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F2F6B2C;
  return sub_23F3360CC(a1, v4);
}

unint64_t sub_23F337120()
{
  unint64_t result;

  result = qword_256E6C130;
  if (!qword_256E6C130)
  {
    result = MEMORY[0x2426695B0](&unk_23F33FDA8, &type metadata for UIContextXPCServiceServer.UIContextXPCServiceServerError);
    atomic_store(result, (unint64_t *)&qword_256E6C130);
  }
  return result;
}

unint64_t sub_23F33715C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E6C140;
  if (!qword_256E6C140)
  {
    v1 = sub_23F2F244C(&qword_256E6C138);
    v2 = sub_23F304E74(&qword_256E6C148, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54460], MEMORY[0x24BE54470]);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E6C140);
  }
  return result;
}

uint64_t sub_23F3371DC()
{
  uint64_t v0;

  sub_23F304CDC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23F337208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_23F3374EC(v4);
  return sub_23F33517C(v5, v6, v2, v3);
}

unint64_t sub_23F337268()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254346340;
  if (!qword_254346340)
  {
    v1 = sub_23F2F244C(&qword_254346338);
    v2 = sub_23F304E74(&qword_2543461E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54220], MEMORY[0x24BE54230]);
    result = MEMORY[0x2426695B0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254346340);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UIContextXPCServiceServer.UIContextXPCServiceServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F337334 + 4 * byte_23F33FC35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F337368 + 4 * byte_23F33FC30[v4]))();
}

uint64_t sub_23F337368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F337370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F337378);
  return result;
}

uint64_t sub_23F337384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F33738CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F337390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F337398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIContextXPCServiceServer.UIContextXPCServiceServerError()
{
  return &type metadata for UIContextXPCServiceServer.UIContextXPCServiceServerError;
}

unint64_t sub_23F3373B8()
{
  unint64_t result;

  result = qword_256E6C160;
  if (!qword_256E6C160)
  {
    result = MEMORY[0x2426695B0](&unk_23F33FD80, &type metadata for UIContextXPCServiceServer.UIContextXPCServiceServerError);
    atomic_store(result, (unint64_t *)&qword_256E6C160);
  }
  return result;
}

uint64_t sub_23F337408@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(0xD000000000000028, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_23F337420@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_23F30DBFC(0xD000000000000019, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_23F337438()
{
  return sub_23F33AC34();
}

uint64_t sub_23F337440()
{
  return sub_23F33B648();
}

uint64_t sub_23F33745C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F2EBFCC(v1, 1, 1, a1);
}

unint64_t sub_23F337470()
{
  return sub_23F337120();
}

void sub_23F33747C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_23F337490()
{
  uint64_t v0;

}

unint64_t sub_23F33749C()
{
  return sub_23F337120();
}

void sub_23F3374A8()
{
  uint64_t v0;

}

uint64_t sub_23F3374B8()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_23F3374C4(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return v1;
}

unint64_t sub_23F3374D8()
{
  return sub_23F337120();
}

uint64_t sub_23F3374E4()
{
  uint64_t v0;

  return sub_23F2F2C24(v0);
}

uint64_t sub_23F3374EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_23F337500(uint64_t a1)
{
  sub_23F337618(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE540F8], (void (*)(char *, char *))sub_23F32F964);
}

void sub_23F337514(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = sub_23F33AFA0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v11 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v12(v6, v10, v2);
      sub_23F32FA54();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    sub_23F2F37B0();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_23F337618(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v5 = a2(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v31 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v31 - v13;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v31 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v32 = (unint64_t)(v17 + 63) >> 6;
  if ((v18 & v16) == 0)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v14, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v14, v5);
    a3(v12, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v22 >= v32)
      goto LABEL_27;
    v23 = *(_QWORD *)(v31 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      sub_23F338A20();
      if (v24 == v25)
        goto LABEL_27;
      sub_23F338A08();
      if (!v23)
      {
        v15 = v26 + 2;
        sub_23F338A20();
        if (v24 == v25)
          goto LABEL_27;
        sub_23F338A08();
        if (!v23)
        {
          v15 = v27 + 3;
          sub_23F338A20();
          if (v24 == v25)
            goto LABEL_27;
          sub_23F338A08();
          if (!v23)
            break;
        }
      }
    }
LABEL_24:
    v19 = (v23 - 1) & v23;
  }
  v29 = v28 + 4;
  if (v29 >= v32)
  {
LABEL_27:
    swift_release();
    sub_23F2F37B0();
    return;
  }
  v23 = *(_QWORD *)(v31 + 8 * v29);
  if (v23)
  {
    v15 = v29;
    goto LABEL_24;
  }
  while (1)
  {
    v15 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    sub_23F338A20();
    if (v24 == v25)
      goto LABEL_27;
    sub_23F338A08();
    v29 = v30 + 1;
    if (v23)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

uint64_t UIEntityDetector.__allocating_init(entityTypes:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  UIEntityDetector.init(entityTypes:)();
  return v0;
}

uint64_t sub_23F337868()
{
  sub_23F2FD878();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F337894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = MEMORY[0x24BEE4B08];
  v13 = MEMORY[0x24BEE4B08];
  sub_23F2FD878();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x24BE54398];
    do
    {
      sub_23F2F2D44(v4, (uint64_t)v10);
      v6 = v11;
      v7 = v12;
      sub_23F2F2D88(v10, v11);
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      sub_23F337618(v8, (uint64_t (*)(_QWORD))v5, (void (*)(char *, char *))sub_23F32F5C4);
      sub_23F2F2DAC((uint64_t)v10);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v13;
  }
  return v1;
}

BOOL static UIEntityDetector.UIEntityDetectorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UIEntityDetector.UIEntityDetectorError.hash(into:)()
{
  return sub_23F33B9FC();
}

uint64_t UIEntityDetector.UIEntityDetectorError.hashValue.getter()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

uint64_t UIEntityDetector.init(entityTypes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  void *v23;

  v1 = v0;
  v2 = sub_23F2EB3F8(&qword_254346240);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = (_QWORD *)sub_23F33AA00();
  v6 = *(v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  (*(void (**)(_BYTE *, _QWORD, _QWORD *))(v6 + 104))(v8, *MEMORY[0x24BE57408], v5);
  v9 = sub_23F33A9F4();
  (*(void (**)(_BYTE *, _QWORD *))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    BERTBasedEntityDetector.init(entityTypes:)(&v23);
    v10 = v23;
    if (v23)
    {
      sub_23F33898C();
      v11 = v10;
      sub_23F338A14();
      v12 = sub_23F3389F8();
      sub_23F3389E8(v12, v13, v14, (uint64_t)&type metadata for BERTBasedEntityDetector, (uint64_t)&protocol witness table for BERTBasedEntityDetector);
      swift_endAccess();

    }
  }
  v15 = swift_bridgeObjectRetain();
  NSDataDetectorBasedEntityDetector.init(entityTypes:)(v15, &v23);
  v16 = v23;
  if (v23)
  {
    sub_23F33898C();
    v17 = v16;
    sub_23F338A14();
    v18 = sub_23F3389F8();
    sub_23F3389E8(v18, v19, v20, (uint64_t)&type metadata for NSDataDetectorBasedEntityDetector, (uint64_t)&protocol witness table for NSDataDetectorBasedEntityDetector);
    swift_endAccess();

  }
  SiriEntityMatcherEntityDetector.init(entityTypes:maxEntityCount:)();
  swift_retain();
  sub_23F337BC0((uint64_t)v4, v1);
  sub_23F337CEC((uint64_t)v4);
  return v1;
}

uint64_t sub_23F337BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  uint64_t result;
  _BYTE v13[15];

  v5 = type metadata accessor for SiriEntityMatcherEntityDetector();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23F2EB3F8(&qword_254346240);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F338858(a1, (uint64_t)v10);
  v11 = sub_23F2EBFC0((uint64_t)v10, 1, v5);
  if (v11 == 1)
  {
    swift_release();
  }
  else
  {
    sub_23F3388A0((uint64_t)v10, (uint64_t)v7);
    sub_23F337D2C((uint64_t)v7, a2);
    sub_23F31C8E0((uint64_t)v7);
    result = swift_release();
    if (v2)
      return result;
  }
  return v11 == 1;
}

uint64_t sub_23F337CEC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2EB3F8(&qword_254346240);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F337D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for SiriEntityMatcherEntityDetector();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  sub_23F31C784();
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  sub_23F31C7F4(v8);
  sub_23F31C89C(a1, (uint64_t)v6);
  sub_23F3388E4(v8, (uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_23F337DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    v8 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_23F2F2D44(v7, (uint64_t)v31);
      v9 = v32;
      v10 = v33;
      sub_23F2F2D88(v31, v32);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(a1, v34, v9, v10);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F2F2DAC((uint64_t)v31);
        return v8;
      }
      v12 = v11;
      v13 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v8 + 16);
      if (__OFADD__(v14, v13))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v8 + 24) >> 1)
        v8 = sub_23F30B608();
      if (*(_QWORD *)(v12 + 16))
      {
        v15 = *(_QWORD *)(v8 + 16);
        v16 = (*(_QWORD *)(v8 + 24) >> 1) - v15;
        v17 = sub_23F33AD30();
        if (v16 < v13)
          goto LABEL_26;
        v18 = *(_QWORD *)(v17 - 8);
        v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v20 = *(_QWORD *)(v18 + 72);
        v21 = v8 + v19 + v20 * v15;
        v22 = v12 + v19;
        v23 = v20 * v13;
        v24 = v21 + v23;
        v25 = v22 + v23;
        if (v22 < v24 && v21 < v25)
          goto LABEL_28;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v27 = *(_QWORD *)(v8 + 16);
          v28 = __OFADD__(v27, v13);
          v29 = v27 + v13;
          if (v28)
            goto LABEL_27;
          *(_QWORD *)(v8 + 16) = v29;
        }
      }
      else if (v13)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      sub_23F2F2DAC((uint64_t)v31);
      v7 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_23F30C710();
    sub_23F30C8C0();
    result = sub_23F33B93C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t UIEntityDetector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UIEntityDetector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23F338054()
{
  return sub_23F337868();
}

uint64_t sub_23F338074()
{
  return sub_23F337894();
}

uint64_t sub_23F338094(uint64_t a1, uint64_t a2)
{
  return sub_23F337DF0(a1, a2);
}

uint64_t sub_23F3380B4(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F3380C0(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F3380CC(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

void *sub_23F3380D8(char *a1, size_t a2, char *a3)
{
  void *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    if (&a3[a2] <= a1 || &a1[a2] <= a3)
      return sub_23F338984(a3, a1, a2);
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = (void *)sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F338168(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    sub_23F3389D8();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      sub_23F2EB3F8(&qword_256E6A2D0);
      sub_23F338970();
      return sub_23F338960();
    }
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F338208(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338214(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338220(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F33822C(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338238(uint64_t a1, uint64_t a2)
{
  return sub_23F33826C(a1, a2);
}

uint64_t sub_23F33824C(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338258(uint64_t a1, uint64_t a2)
{
  return sub_23F33826C(a1, a2);
}

uint64_t sub_23F33826C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    sub_23F3389A0();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      sub_23F2F0818(0, v3);
      sub_23F338970();
      return sub_23F338960();
    }
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F338300(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy();
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

void *sub_23F33839C(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    if (&a3[4 * a2] <= a1 || &a1[4 * a2] <= a3)
      return sub_23F338984(a3, a1, 4 * a2);
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = (void *)sub_23F30C830();
  __break(1u);
  return result;
}

void *sub_23F338430(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    if (&a3[16 * a2] <= a1 || &a1[16 * a2] <= a3)
      return sub_23F338984(a3, a1, 16 * a2);
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = (void *)sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F3384C4(uint64_t a1, uint64_t a2)
{
  return sub_23F3384DC(a1, a2);
}

uint64_t sub_23F3384D0(uint64_t a1, uint64_t a2)
{
  return sub_23F3384DC(a1, a2);
}

uint64_t sub_23F3384DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    sub_23F3389D8();
    sub_23F2EB3F8(v3);
    sub_23F3389BC();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_23F338970();
      return sub_23F338960();
    }
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F33856C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    sub_23F3389A0();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F2EB3F8(&qword_256E6A590);
      sub_23F338970();
      return sub_23F338960();
    }
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F3385FC(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338608(uint64_t a1, uint64_t a2)
{
  return sub_23F338614(a1, a2);
}

uint64_t sub_23F338614(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F30C710();
    sub_23F30C8B0();
  }
  else
  {
    sub_23F3389D8();
    v3(0);
    sub_23F3389BC();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_23F338970();
      return sub_23F338960();
    }
    sub_23F30C710();
    sub_23F30C8C0();
  }
  result = sub_23F30C830();
  __break(1u);
  return result;
}

uint64_t sub_23F3386A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a4;
  v9 = a5;
  *(_QWORD *)&v7 = a2;
  v5 = *a3;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  return sub_23F2F68D4(&v7, v5 + 40 * a1 + 32);
}

unint64_t sub_23F3386E8()
{
  unint64_t result;

  result = qword_256E6C168;
  if (!qword_256E6C168)
  {
    result = MEMORY[0x2426695B0](&protocol conformance descriptor for UIEntityDetector.UIEntityDetectorError, &type metadata for UIEntityDetector.UIEntityDetectorError);
    atomic_store(result, (unint64_t *)&qword_256E6C168);
  }
  return result;
}

uint64_t type metadata accessor for UIEntityDetector()
{
  return objc_opt_self();
}

uint64_t method lookup function for UIEntityDetector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIEntityDetector.backingTextEntityDetectors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of UIEntityDetector.supportedEntities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UIEntityDetector.__allocating_init(entityTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of UIEntityDetector.detectEntities(text:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for UIEntityDetector.UIEntityDetectorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F3387D8 + 4 * byte_23F33FDF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F33880C + 4 * byte_23F33FDF0[v4]))();
}

uint64_t sub_23F33880C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F338814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F33881CLL);
  return result;
}

uint64_t sub_23F338828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F338830);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F338834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F33883C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIEntityDetector.UIEntityDetectorError()
{
  return &type metadata for UIEntityDetector.UIEntityDetectorError;
}

uint64_t sub_23F338858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2EB3F8(&qword_254346240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3388A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriEntityMatcherEntityDetector();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3388E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v10 = type metadata accessor for SiriEntityMatcherEntityDetector();
  v11 = &protocol witness table for SiriEntityMatcherEntityDetector;
  v6 = sub_23F2F6A44((uint64_t *)&v9);
  sub_23F3388A0(a2, (uint64_t)v6);
  v7 = *a3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  return sub_23F2F68D4(&v9, v7 + 40 * a1 + 32);
}

uint64_t sub_23F338960()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F338970()
{
  uint64_t v0;

  return v0;
}

void *sub_23F338984(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t sub_23F33898C()
{
  return swift_beginAccess();
}

uint64_t sub_23F3389E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  return sub_23F3386A4(v7, v6, v5, a4, a5);
}

uint64_t sub_23F3389F8()
{
  uint64_t v0;

  return sub_23F31C7F4(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

void sub_23F338A14()
{
  sub_23F31C784();
}

uint64_t dispatch thunk of UIEntityDetectorProtocol.backingTextEntityDetectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23F338A34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_23F33B1B0();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = sub_23F2F8838();
  v2[9] = sub_23F2F8838();
  v2[10] = sub_23F2F8838();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F338A98()
{
  os_log_type_t v0;
  uint64_t v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE642C8]), sel_init);
  *(_QWORD *)(v1 + 88) = v2;
  sub_23F3052D8();
  v3 = v2;
  v4 = sub_23F33B1A4();
  v5 = sub_23F33B708();
  if (sub_23F33A02C(v5))
  {
    v6 = (uint8_t *)sub_23F2F8874();
    *(_DWORD *)v6 = 134217984;
    *(_QWORD *)(v1 + 24) = objc_msgSend(v3, sel_version);
    sub_23F33B7BC();

    _os_log_impl(&dword_23F2E8000, v4, v0, "embedding string using MADTextEmbeddingRequest version %lu", v6, 0xCu);
    sub_23F2F3748();
  }

  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 56) + 8);
  *(_QWORD *)(v1 + 96) = v10;
  v10(v7, v8);
  v11 = *(void **)(v9 + 16);
  *(_QWORD *)(v1 + 104) = v11;
  if (v11)
  {
    sub_23F2EB3F8(&qword_256E6BB38);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_23F33FF50;
    *(_QWORD *)(v12 + 32) = v3;
    v21 = v12;
    sub_23F33B5DC();
    *(_QWORD *)(v1 + 112) = v21;
    v13 = v3;
    v11;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 120) = v14;
    *v14 = v1;
    v14[1] = sub_23F338CF4;
    return sub_23F338FC4(v21, *(_QWORD *)(v1 + 32), 0, 0);
  }
  else
  {
    sub_23F3052D8();
    v16 = sub_23F33B1A4();
    v17 = sub_23F33B6F0();
    if (sub_23F33A02C(v17))
    {
      v18 = (uint8_t *)sub_23F2F8874();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23F2E8000, v16, v0, "couldn't fetch embedding due to error: madService is nil", v18, 2u);
      sub_23F2F3748();
    }
    v19 = *(_QWORD *)(v1 + 72);
    v20 = *(_QWORD *)(v1 + 48);

    v10(v19, v20);
    sub_23F33A03C();
    sub_23F2FD894();
    sub_23F2F6CE8();
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23F338CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 136) = a1;
  }
  sub_23F2FD4B0();
  return swift_task_switch();
}

uint64_t sub_23F338D6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 104);

  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  sub_23F2F6CE8();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_23F338DD0()
{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(void **)(v1 + 128);
  swift_bridgeObjectRelease();
  sub_23F33AC1C();
  v3 = v2;
  v4 = v2;
  v5 = sub_23F33B1A4();
  v6 = sub_23F33B6F0();
  if (sub_23F33A02C(v6))
  {
    v7 = *(void **)(v1 + 128);
    v8 = (uint8_t *)sub_23F2F8874();
    v9 = (_QWORD *)sub_23F2F8874();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 16) = v11;
    sub_23F33B7BC();
    *v9 = v11;

    _os_log_impl(&dword_23F2E8000, v5, v0, "couldn't fetch embedding due to error: %@", v8, 0xCu);
    sub_23F2EB3F8(&qword_256E6A720);
    swift_arrayDestroy();
    sub_23F2F3748();
  }
  sub_23F3051E4();
  sub_23F3051E4();
  v13 = *(void (**)(uint64_t, uint64_t))(v1 + 96);
  v12 = *(void **)(v1 + 104);
  v14 = *(void **)(v1 + 88);
  v15 = *(_QWORD *)(v1 + 64);
  v16 = *(_QWORD *)(v1 + 48);

  v13(v15, v16);
  sub_23F3051E4();
  sub_23F33A03C();
  sub_23F2FD894();
  sub_23F2F6CE8();
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23F338F6C()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_service);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

uint64_t sub_23F338FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = swift_getObjectType();
  v6 = sub_23F33B1B0();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_23F2FD4B0();
  return sub_23F2F6B54();
}

uint64_t sub_23F33902C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23F33B918();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v3 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    v15 = *(_OWORD *)(v0 + 40);
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v4;
    v5 = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v4 + 16) = v3;
    *(_OWORD *)(v4 + 24) = v5;
    *(_OWORD *)(v4 + 40) = v15;
    *(_QWORD *)(v4 + 56) = v2;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v6;
    sub_23F2EB3F8(&qword_256E6A2F8);
    *v6 = v0;
    v6[1] = sub_23F3391F0;
    sub_23F2FD4B0();
    return sub_23F33B990();
  }
  sub_23F3052D8();
  v9 = sub_23F33B1A4();
  v10 = sub_23F33B6D8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_23F2F8874();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23F2E8000, v9, v10, "no requests to perform", v11, 2u);
    sub_23F2F3748();
  }
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23F3391F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  sub_23F2FD4B0();
  return swift_task_switch();
}

uint64_t sub_23F339258()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23F339294()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F2FD894();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for UniversalEmbeddingModelClient()
{
  return objc_opt_self();
}

BOOL sub_23F3392EC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23F3392FC()
{
  return sub_23F33B9FC();
}

uint64_t sub_23F339320()
{
  sub_23F33B9F0();
  sub_23F33B9FC();
  return sub_23F33BA08();
}

BOOL sub_23F339364(char *a1, char *a2)
{
  return sub_23F3392EC(*a1, *a2);
}

uint64_t sub_23F339370()
{
  return sub_23F339320();
}

uint64_t sub_23F339378()
{
  return sub_23F3392FC();
}

void sub_23F339380(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD aBlock[6];

  v22 = a7;
  v23 = a2;
  v20 = a5;
  v10 = sub_23F2EB3F8(&qword_256E6C228);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    sub_23F2F0818(0, &qword_256E6C230);
    swift_bridgeObjectRetain();
    sub_23F33B90C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23F33B984();
    sub_23F2F0818(0, &qword_256E6C230);
  }
  sub_23F2F0818(0, &qword_256E6C230);
  v21 = sub_23F33B5C4();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_23F33B5C4();
  if (a6)
    a6 = (void *)sub_23F33B4F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v13, v10);
  *(_QWORD *)(v17 + v16) = a3;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  aBlock[4] = sub_23F339CB8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23F339BC8;
  aBlock[3] = &unk_250FC5D28;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  v19 = (void *)v21;
  objc_msgSend(v23, sel_performRequests_text_identifier_completionHandler_, v21, v14, a6, v18, v20);
  _Block_release(v18);

}

void sub_23F3395EC(int a1, id a2, uint64_t a3, unint64_t a4)
{
  id v4;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  if (a2)
  {
    v4 = a2;
LABEL_3:
    sub_23F2EB3F8(&qword_256E6C228);
    sub_23F33B624();
    return;
  }
  if (!(a4 >> 62))
  {
    v6 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_6;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_23F339E54();
    swift_allocError();
    *v16 = 1;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  if (!sub_23F33B918())
    goto LABEL_17;
LABEL_6:
  sub_23F30C14C(0, (a4 & 0xC000000000000001) == 0, a4);
  if ((a4 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x242668F08](0, a4);
  else
    v7 = *(id *)(a4 + 32);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = sub_23F339DE8(v8);
  if (v9)
  {
    v10 = v9;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_23F33B918();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_11:
        if ((v10 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x242668F08](0, v10);
        else
          v11 = *(id *)(v10 + 32);
        v12 = objc_msgSend(v11, sel_embeddingData);
        sub_23F33A4C0();
        v14 = v13;

        __asm { BR              X9 }
      }
    }
    else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_23F2EB3F8(&qword_256E6C228);
    sub_23F33B630();
  }
  else
  {
    sub_23F339E54();
    swift_allocError();
    *v15 = 2;
    sub_23F2EB3F8(&qword_256E6C228);
    sub_23F33B624();
  }

}

char *sub_23F339A98@<X0>(char *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    result = sub_23F339AE0(result, (a2 - (uint64_t)result) / 2, &v5);
    v4 = v5;
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v4;
  return result;
}

char *sub_23F339AE0@<X0>(char *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v9;
  uint64_t v15;
  uint64_t v16;

  v4 = MEMORY[0x24BEE4AF8];
  if (!a2)
  {
LABEL_7:
    *a3 = v4;
    return result;
  }
  v5 = a2;
  v6 = result;
  v15 = MEMORY[0x24BEE4AF8];
  result = sub_23F2F2EB8(0, a2 & ~(a2 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v4 = v15;
    v7 = *(_QWORD *)(v15 + 16);
    do
    {
      _H8 = *(_WORD *)v6;
      v16 = v4;
      v9 = *(_QWORD *)(v4 + 24);
      if (v7 >= v9 >> 1)
      {
        result = sub_23F2F2EB8((char *)(v9 > 1), v7 + 1, 1);
        v4 = v16;
      }
      __asm { FCVT            S0, H8 }
      *(_QWORD *)(v4 + 16) = v7 + 1;
      *(_DWORD *)(v4 + 4 * v7 + 32) = _S0;
      v6 += 2;
      ++v7;
      --v5;
    }
    while (v5);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_23F339BC8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_23F339C28(uint64_t a1)
{
  uint64_t v1;

  sub_23F339380(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23F339C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F2EB3F8(&qword_256E6C228);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F339CB8(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_23F2EB3F8(&qword_256E6C228) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23F3395EC(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23F339D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F339D38()
{
  return swift_release();
}

uint64_t sub_23F339D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_23F33A394();
  v6 = (char *)result;
  if (result)
  {
    result = sub_23F33A3AC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v6 += a1 - result;
  }
  v7 = __OFSUB__(a2, a1);
  v8 = a2 - a1;
  if (v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  v9 = sub_23F33A3A0();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  v11 = &v6[v10];
  if (v6)
    v12 = (uint64_t)v11;
  else
    v12 = 0;
  result = (uint64_t)sub_23F339A98(v6, v12, &v13);
  if (!v2)
    return v13;
  return result;
}

uint64_t sub_23F339DE8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_embeddingResults);
  if (!v1)
    return 0;
  v2 = v1;
  sub_23F2F0818(0, &qword_256E6C240);
  v3 = sub_23F33B5D0();

  return v3;
}

unint64_t sub_23F339E54()
{
  unint64_t result;

  result = qword_256E6C238;
  if (!qword_256E6C238)
  {
    result = MEMORY[0x2426695B0](&unk_23F340018, &_s14EmbeddingErrorON);
    atomic_store(result, (unint64_t *)&qword_256E6C238);
  }
  return result;
}

uint64_t _s14EmbeddingErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14EmbeddingErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F339F64 + 4 * byte_23F33FF65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F339F98 + 4 * byte_23F33FF60[v4]))();
}

uint64_t sub_23F339F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F339FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F339FA8);
  return result;
}

uint64_t sub_23F339FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F339FBCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F339FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F339FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23F339FD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s14EmbeddingErrorOMa()
{
  return &_s14EmbeddingErrorON;
}

unint64_t sub_23F339FF0()
{
  unint64_t result;

  result = qword_256E6C248;
  if (!qword_256E6C248)
  {
    result = MEMORY[0x2426695B0](&unk_23F33FFF0, &_s14EmbeddingErrorON);
    atomic_store(result, (unint64_t *)&qword_256E6C248);
  }
  return result;
}

BOOL sub_23F33A02C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F33A03C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F33A2F8()
{
  return MEMORY[0x24BDB5DC0]();
}

uint64_t sub_23F33A304()
{
  return MEMORY[0x24BDB5DE0]();
}

uint64_t sub_23F33A310()
{
  return MEMORY[0x24BDB5DE8]();
}

uint64_t sub_23F33A31C()
{
  return MEMORY[0x24BDB5DF0]();
}

uint64_t sub_23F33A328()
{
  return MEMORY[0x24BDB6240]();
}

uint64_t sub_23F33A334()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23F33A340()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23F33A34C()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23F33A358()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23F33A364()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23F33A370()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23F33A37C()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_23F33A388()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23F33A394()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23F33A3A0()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23F33A3AC()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23F33A3B8()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_23F33A3C4()
{
  return MEMORY[0x24BDCC268]();
}

uint64_t sub_23F33A3D0()
{
  return MEMORY[0x24BDCC290]();
}

uint64_t sub_23F33A3DC()
{
  return MEMORY[0x24BDCC2C8]();
}

uint64_t sub_23F33A3E8()
{
  return MEMORY[0x24BDCC4A8]();
}

uint64_t sub_23F33A3F4()
{
  return MEMORY[0x24BDCC4D0]();
}

uint64_t sub_23F33A400()
{
  return MEMORY[0x24BDCC4E0]();
}

uint64_t sub_23F33A40C()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_23F33A418()
{
  return MEMORY[0x24BDCCBB0]();
}

uint64_t sub_23F33A424()
{
  return MEMORY[0x24BDCCBD0]();
}

uint64_t sub_23F33A430()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_23F33A43C()
{
  return MEMORY[0x24BEBB650]();
}

uint64_t sub_23F33A448()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23F33A454()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23F33A460()
{
  return MEMORY[0x24BDCD320]();
}

uint64_t sub_23F33A46C()
{
  return MEMORY[0x24BDCD380]();
}

uint64_t sub_23F33A478()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_23F33A484()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23F33A490()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23F33A49C()
{
  return MEMORY[0x24BDCDA48]();
}

uint64_t sub_23F33A4A8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23F33A4B4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23F33A4C0()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23F33A4CC()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23F33A4D8()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_23F33A4E4()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23F33A4F0()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23F33A4FC()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23F33A508()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23F33A514()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23F33A520()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23F33A52C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23F33A538()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23F33A544()
{
  return MEMORY[0x24BDCEB48]();
}

uint64_t sub_23F33A550()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23F33A55C()
{
  return MEMORY[0x24BDCECE0]();
}

uint64_t sub_23F33A568()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23F33A574()
{
  return MEMORY[0x24BE30C20]();
}

uint64_t sub_23F33A580()
{
  return MEMORY[0x24BE30C38]();
}

uint64_t sub_23F33A58C()
{
  return MEMORY[0x24BE9EBA8]();
}

uint64_t sub_23F33A598()
{
  return MEMORY[0x24BE9EDA8]();
}

uint64_t sub_23F33A5A4()
{
  return MEMORY[0x24BE9EDB0]();
}

uint64_t sub_23F33A5B0()
{
  return MEMORY[0x24BE9FE70]();
}

uint64_t sub_23F33A5BC()
{
  return MEMORY[0x24BEA04D8]();
}

uint64_t sub_23F33A5C8()
{
  return MEMORY[0x24BEA06B0]();
}

uint64_t sub_23F33A5D4()
{
  return MEMORY[0x24BEA0970]();
}

uint64_t sub_23F33A5E0()
{
  return MEMORY[0x24BEA0990]();
}

uint64_t sub_23F33A5EC()
{
  return MEMORY[0x24BEA0FD8]();
}

uint64_t sub_23F33A5F8()
{
  return MEMORY[0x24BEA0FE0]();
}

uint64_t sub_23F33A604()
{
  return MEMORY[0x24BEA1078]();
}

uint64_t sub_23F33A610()
{
  return MEMORY[0x24BEA1080]();
}

uint64_t sub_23F33A61C()
{
  return MEMORY[0x24BEA1298]();
}

uint64_t sub_23F33A628()
{
  return MEMORY[0x24BEA1508]();
}

uint64_t sub_23F33A634()
{
  return MEMORY[0x24BEA1510]();
}

uint64_t sub_23F33A640()
{
  return MEMORY[0x24BEA15F0]();
}

uint64_t sub_23F33A64C()
{
  return MEMORY[0x24BEA15F8]();
}

uint64_t sub_23F33A658()
{
  return MEMORY[0x24BEA1798]();
}

uint64_t sub_23F33A664()
{
  return MEMORY[0x24BEA17B8]();
}

uint64_t sub_23F33A670()
{
  return MEMORY[0x24BEA17D0]();
}

uint64_t sub_23F33A67C()
{
  return MEMORY[0x24BEA17D8]();
}

uint64_t sub_23F33A688()
{
  return MEMORY[0x24BEA1BC8]();
}

uint64_t sub_23F33A694()
{
  return MEMORY[0x24BEA1DB8]();
}

uint64_t sub_23F33A6A0()
{
  return MEMORY[0x24BEA1DC0]();
}

uint64_t sub_23F33A6AC()
{
  return MEMORY[0x24BEA2100]();
}

uint64_t sub_23F33A6B8()
{
  return MEMORY[0x24BEA2108]();
}

uint64_t sub_23F33A6C4()
{
  return MEMORY[0x24BEA21D0]();
}

uint64_t sub_23F33A6D0()
{
  return MEMORY[0x24BEA2860]();
}

uint64_t sub_23F33A6DC()
{
  return MEMORY[0x24BEA2868]();
}

uint64_t sub_23F33A6E8()
{
  return MEMORY[0x24BEA2AB8]();
}

uint64_t sub_23F33A6F4()
{
  return MEMORY[0x24BEA2AC0]();
}

uint64_t sub_23F33A700()
{
  return MEMORY[0x24BEA2B28]();
}

uint64_t sub_23F33A70C()
{
  return MEMORY[0x24BEA2B30]();
}

uint64_t sub_23F33A718()
{
  return MEMORY[0x24BEA8AA8]();
}

uint64_t sub_23F33A724()
{
  return MEMORY[0x24BEA8B10]();
}

uint64_t sub_23F33A730()
{
  return MEMORY[0x24BE580A0]();
}

uint64_t sub_23F33A73C()
{
  return MEMORY[0x24BE581A0]();
}

uint64_t sub_23F33A748()
{
  return MEMORY[0x24BE581A8]();
}

uint64_t sub_23F33A754()
{
  return MEMORY[0x24BE581B8]();
}

uint64_t sub_23F33A760()
{
  return MEMORY[0x24BE581C0]();
}

uint64_t sub_23F33A76C()
{
  return MEMORY[0x24BE581C8]();
}

uint64_t sub_23F33A778()
{
  return MEMORY[0x24BE581F0]();
}

uint64_t sub_23F33A784()
{
  return MEMORY[0x24BE581F8]();
}

uint64_t sub_23F33A790()
{
  return MEMORY[0x24BE58210]();
}

uint64_t sub_23F33A79C()
{
  return MEMORY[0x24BE58238]();
}

uint64_t sub_23F33A7A8()
{
  return MEMORY[0x24BE58240]();
}

uint64_t sub_23F33A7B4()
{
  return MEMORY[0x24BE58248]();
}

uint64_t sub_23F33A7C0()
{
  return MEMORY[0x24BE58268]();
}

uint64_t sub_23F33A7CC()
{
  return MEMORY[0x24BE58270]();
}

uint64_t sub_23F33A7D8()
{
  return MEMORY[0x24BE58278]();
}

uint64_t sub_23F33A7E4()
{
  return MEMORY[0x24BE58280]();
}

uint64_t sub_23F33A7F0()
{
  return MEMORY[0x24BE58288]();
}

uint64_t sub_23F33A7FC()
{
  return MEMORY[0x24BE58298]();
}

uint64_t sub_23F33A808()
{
  return MEMORY[0x24BE582E8]();
}

uint64_t sub_23F33A814()
{
  return MEMORY[0x24BE583F8]();
}

uint64_t sub_23F33A820()
{
  return MEMORY[0x24BE58430]();
}

uint64_t sub_23F33A82C()
{
  return MEMORY[0x24BEBB6F0]();
}

uint64_t sub_23F33A838()
{
  return MEMORY[0x24BEBB730]();
}

uint64_t sub_23F33A844()
{
  return MEMORY[0x24BEBB748]();
}

uint64_t sub_23F33A850()
{
  return MEMORY[0x24BEBB758]();
}

uint64_t sub_23F33A85C()
{
  return MEMORY[0x24BEBB768]();
}

uint64_t sub_23F33A868()
{
  return MEMORY[0x24BEBB778]();
}

uint64_t sub_23F33A874()
{
  return MEMORY[0x24BEBB7B0]();
}

uint64_t sub_23F33A880()
{
  return MEMORY[0x24BEBB7D0]();
}

uint64_t sub_23F33A88C()
{
  return MEMORY[0x24BEBB7F0]();
}

uint64_t sub_23F33A898()
{
  return MEMORY[0x24BEBB810]();
}

uint64_t sub_23F33A8A4()
{
  return MEMORY[0x24BEBB820]();
}

uint64_t sub_23F33A8B0()
{
  return MEMORY[0x24BEBB838]();
}

uint64_t sub_23F33A8BC()
{
  return MEMORY[0x24BEBB840]();
}

uint64_t sub_23F33A8C8()
{
  return MEMORY[0x24BEBB850]();
}

uint64_t sub_23F33A8D4()
{
  return MEMORY[0x24BEBB860]();
}

uint64_t sub_23F33A8E0()
{
  return MEMORY[0x24BEBB8A0]();
}

uint64_t sub_23F33A8EC()
{
  return MEMORY[0x24BEBB8A8]();
}

uint64_t sub_23F33A8F8()
{
  return MEMORY[0x24BEBB8C8]();
}

uint64_t sub_23F33A904()
{
  return MEMORY[0x24BEBB900]();
}

uint64_t sub_23F33A910()
{
  return MEMORY[0x24BEBB908]();
}

uint64_t sub_23F33A91C()
{
  return MEMORY[0x24BEBB920]();
}

uint64_t sub_23F33A928()
{
  return MEMORY[0x24BEBB990]();
}

uint64_t sub_23F33A934()
{
  return MEMORY[0x24BEBB9A0]();
}

uint64_t sub_23F33A940()
{
  return MEMORY[0x24BEBB9C0]();
}

uint64_t sub_23F33A94C()
{
  return MEMORY[0x24BE57130]();
}

uint64_t sub_23F33A958()
{
  return MEMORY[0x24BE57150]();
}

uint64_t sub_23F33A964()
{
  return MEMORY[0x24BE571A8]();
}

uint64_t sub_23F33A970()
{
  return MEMORY[0x24BE571C0]();
}

uint64_t sub_23F33A97C()
{
  return MEMORY[0x24BE571D8]();
}

uint64_t sub_23F33A988()
{
  return MEMORY[0x24BE57208]();
}

uint64_t sub_23F33A994()
{
  return MEMORY[0x24BE57210]();
}

uint64_t sub_23F33A9A0()
{
  return MEMORY[0x24BE57218]();
}

uint64_t sub_23F33A9AC()
{
  return MEMORY[0x24BE57220]();
}

uint64_t sub_23F33A9B8()
{
  return MEMORY[0x24BE57228]();
}

uint64_t sub_23F33A9C4()
{
  return MEMORY[0x24BE57230]();
}

uint64_t sub_23F33A9D0()
{
  return MEMORY[0x24BE57310]();
}

uint64_t sub_23F33A9DC()
{
  return MEMORY[0x24BE57318]();
}

uint64_t sub_23F33A9E8()
{
  return MEMORY[0x24BE57320]();
}

uint64_t sub_23F33A9F4()
{
  return MEMORY[0x24BE574A0]();
}

uint64_t sub_23F33AA00()
{
  return MEMORY[0x24BE574A8]();
}

uint64_t sub_23F33AA0C()
{
  return MEMORY[0x24BE574B0]();
}

uint64_t sub_23F33AA18()
{
  return MEMORY[0x24BE574B8]();
}

uint64_t sub_23F33AA24()
{
  return MEMORY[0x24BE574C0]();
}

uint64_t sub_23F33AA30()
{
  return MEMORY[0x24BE574C8]();
}

uint64_t sub_23F33AA3C()
{
  return MEMORY[0x24BE574D0]();
}

uint64_t sub_23F33AA48()
{
  return MEMORY[0x24BE574D8]();
}

uint64_t sub_23F33AA54()
{
  return MEMORY[0x24BE574F8]();
}

uint64_t sub_23F33AA60()
{
  return MEMORY[0x24BE57500]();
}

uint64_t sub_23F33AA6C()
{
  return MEMORY[0x24BE57508]();
}

uint64_t sub_23F33AA78()
{
  return MEMORY[0x24BE57510]();
}

uint64_t sub_23F33AA84()
{
  return MEMORY[0x24BE57518]();
}

uint64_t sub_23F33AA90()
{
  return MEMORY[0x24BE57678]();
}

uint64_t sub_23F33AA9C()
{
  return MEMORY[0x24BE57688]();
}

uint64_t sub_23F33AAA8()
{
  return MEMORY[0x24BE57690]();
}

uint64_t sub_23F33AAB4()
{
  return MEMORY[0x24BE576B0]();
}

uint64_t sub_23F33AAC0()
{
  return MEMORY[0x24BE576C8]();
}

uint64_t sub_23F33AACC()
{
  return MEMORY[0x24BE57710]();
}

uint64_t sub_23F33AAD8()
{
  return MEMORY[0x24BE57720]();
}

uint64_t sub_23F33AAE4()
{
  return MEMORY[0x24BE57768]();
}

uint64_t sub_23F33AAF0()
{
  return MEMORY[0x24BE57778]();
}

uint64_t sub_23F33AAFC()
{
  return MEMORY[0x24BE57780]();
}

uint64_t sub_23F33AB08()
{
  return MEMORY[0x24BE57790]();
}

uint64_t sub_23F33AB14()
{
  return MEMORY[0x24BE577A0]();
}

uint64_t sub_23F33AB20()
{
  return MEMORY[0x24BE577B0]();
}

uint64_t sub_23F33AB2C()
{
  return MEMORY[0x24BE57840]();
}

uint64_t sub_23F33AB38()
{
  return MEMORY[0x24BE57878]();
}

uint64_t sub_23F33AB44()
{
  return MEMORY[0x24BE578F0]();
}

uint64_t sub_23F33AB50()
{
  return MEMORY[0x24BE57960]();
}

uint64_t sub_23F33AB5C()
{
  return MEMORY[0x24BE57980]();
}

uint64_t sub_23F33AB68()
{
  return MEMORY[0x24BE57A00]();
}

uint64_t sub_23F33AB74()
{
  return MEMORY[0x24BE57A18]();
}

uint64_t sub_23F33AB80()
{
  return MEMORY[0x24BE57A28]();
}

uint64_t sub_23F33AB8C()
{
  return MEMORY[0x24BE57A60]();
}

uint64_t sub_23F33AB98()
{
  return MEMORY[0x24BE57A80]();
}

uint64_t sub_23F33ABA4()
{
  return MEMORY[0x24BE57AA8]();
}

uint64_t sub_23F33ABB0()
{
  return MEMORY[0x24BE57AB8]();
}

uint64_t sub_23F33ABBC()
{
  return MEMORY[0x24BE57AE0]();
}

uint64_t sub_23F33ABC8()
{
  return MEMORY[0x24BE57AF0]();
}

uint64_t sub_23F33ABD4()
{
  return MEMORY[0x24BE57B20]();
}

uint64_t sub_23F33ABE0()
{
  return MEMORY[0x24BE57B30]();
}

uint64_t sub_23F33ABEC()
{
  return MEMORY[0x24BE57E38]();
}

uint64_t sub_23F33ABF8()
{
  return MEMORY[0x24BE57E40]();
}

uint64_t sub_23F33AC04()
{
  return MEMORY[0x24BE57EB0]();
}

uint64_t sub_23F33AC10()
{
  return MEMORY[0x24BE57EC8]();
}

uint64_t sub_23F33AC1C()
{
  return MEMORY[0x24BE57F30]();
}

uint64_t _s30IntelligenceFlowContextRuntime0abC6DaemonV6logger2os6LoggerVvgZ_0()
{
  return MEMORY[0x24BE57F38]();
}

uint64_t sub_23F33AC34()
{
  return MEMORY[0x24BE57F78]();
}

uint64_t sub_23F33AC40()
{
  return MEMORY[0x24BE79720]();
}

uint64_t sub_23F33AC4C()
{
  return MEMORY[0x24BE797E8]();
}

uint64_t sub_23F33AC58()
{
  return MEMORY[0x24BE79848]();
}

uint64_t sub_23F33AC64()
{
  return MEMORY[0x24BE79850]();
}

uint64_t sub_23F33AC70()
{
  return MEMORY[0x24BE79860]();
}

uint64_t sub_23F33AC7C()
{
  return MEMORY[0x24BE79868]();
}

uint64_t sub_23F33AC88()
{
  return MEMORY[0x24BE79870]();
}

uint64_t sub_23F33AC94()
{
  return MEMORY[0x24BE79878]();
}

uint64_t sub_23F33ACA0()
{
  return MEMORY[0x24BE798B8]();
}

uint64_t sub_23F33ACAC()
{
  return MEMORY[0x24BE798C0]();
}

uint64_t sub_23F33ACB8()
{
  return MEMORY[0x24BE798E8]();
}

uint64_t sub_23F33ACC4()
{
  return MEMORY[0x24BE798F0]();
}

uint64_t sub_23F33ACD0()
{
  return MEMORY[0x24BE54060]();
}

uint64_t sub_23F33ACDC()
{
  return MEMORY[0x24BE54068]();
}

uint64_t sub_23F33ACE8()
{
  return MEMORY[0x24BE54078]();
}

uint64_t sub_23F33ACF4()
{
  return MEMORY[0x24BE54088]();
}

uint64_t sub_23F33AD00()
{
  return MEMORY[0x24BE54090]();
}

uint64_t sub_23F33AD0C()
{
  return MEMORY[0x24BE54098]();
}

uint64_t sub_23F33AD18()
{
  return MEMORY[0x24BE540A0]();
}

uint64_t sub_23F33AD24()
{
  return MEMORY[0x24BE540D0]();
}

uint64_t sub_23F33AD30()
{
  return MEMORY[0x24BE540F8]();
}

uint64_t sub_23F33AD3C()
{
  return MEMORY[0x24BE54118]();
}

uint64_t sub_23F33AD48()
{
  return MEMORY[0x24BE54120]();
}

uint64_t sub_23F33AD54()
{
  return MEMORY[0x24BE54128]();
}

uint64_t sub_23F33AD60()
{
  return MEMORY[0x24BE54130]();
}

uint64_t sub_23F33AD6C()
{
  return MEMORY[0x24BE54138]();
}

uint64_t sub_23F33AD78()
{
  return MEMORY[0x24BE54148]();
}

uint64_t sub_23F33AD84()
{
  return MEMORY[0x24BE54158]();
}

uint64_t sub_23F33AD90()
{
  return MEMORY[0x24BE54178]();
}

uint64_t sub_23F33AD9C()
{
  return MEMORY[0x24BE54188]();
}

uint64_t sub_23F33ADA8()
{
  return MEMORY[0x24BE54198]();
}

uint64_t sub_23F33ADB4()
{
  return MEMORY[0x24BE541A8]();
}

uint64_t sub_23F33ADC0()
{
  return MEMORY[0x24BE541B0]();
}

uint64_t sub_23F33ADCC()
{
  return MEMORY[0x24BE541B8]();
}

uint64_t sub_23F33ADD8()
{
  return MEMORY[0x24BE541E8]();
}

uint64_t sub_23F33ADE4()
{
  return MEMORY[0x24BE541F0]();
}

uint64_t sub_23F33ADF0()
{
  return MEMORY[0x24BE54208]();
}

uint64_t sub_23F33ADFC()
{
  return MEMORY[0x24BE54210]();
}

uint64_t sub_23F33AE08()
{
  return MEMORY[0x24BE54218]();
}

uint64_t sub_23F33AE14()
{
  return MEMORY[0x24BE54220]();
}

uint64_t sub_23F33AE20()
{
  return MEMORY[0x24BE54240]();
}

uint64_t sub_23F33AE2C()
{
  return MEMORY[0x24BE54248]();
}

uint64_t sub_23F33AE38()
{
  return MEMORY[0x24BE54250]();
}

uint64_t sub_23F33AE44()
{
  return MEMORY[0x24BE54260]();
}

uint64_t sub_23F33AE50()
{
  return MEMORY[0x24BE54268]();
}

uint64_t sub_23F33AE5C()
{
  return MEMORY[0x24BE54270]();
}

uint64_t sub_23F33AE68()
{
  return MEMORY[0x24BE54278]();
}

uint64_t sub_23F33AE74()
{
  return MEMORY[0x24BE54280]();
}

uint64_t sub_23F33AE80()
{
  return MEMORY[0x24BE54288]();
}

uint64_t sub_23F33AE8C()
{
  return MEMORY[0x24BE54290]();
}

uint64_t sub_23F33AE98()
{
  return MEMORY[0x24BE54298]();
}

uint64_t sub_23F33AEA4()
{
  return MEMORY[0x24BE542A0]();
}

uint64_t sub_23F33AEB0()
{
  return MEMORY[0x24BE542A8]();
}

uint64_t sub_23F33AEBC()
{
  return MEMORY[0x24BE542B0]();
}

uint64_t sub_23F33AEC8()
{
  return MEMORY[0x24BE542B8]();
}

uint64_t sub_23F33AED4()
{
  return MEMORY[0x24BE542C0]();
}

uint64_t sub_23F33AEE0()
{
  return MEMORY[0x24BE542C8]();
}

uint64_t sub_23F33AEEC()
{
  return MEMORY[0x24BE542D0]();
}

uint64_t sub_23F33AEF8()
{
  return MEMORY[0x24BE542D8]();
}

uint64_t sub_23F33AF04()
{
  return MEMORY[0x24BE542E0]();
}

uint64_t sub_23F33AF10()
{
  return MEMORY[0x24BE542E8]();
}

uint64_t sub_23F33AF1C()
{
  return MEMORY[0x24BE542F0]();
}

uint64_t sub_23F33AF28()
{
  return MEMORY[0x24BE542F8]();
}

uint64_t sub_23F33AF34()
{
  return MEMORY[0x24BE54300]();
}

uint64_t sub_23F33AF40()
{
  return MEMORY[0x24BE54318]();
}

uint64_t sub_23F33AF4C()
{
  return MEMORY[0x24BE54320]();
}

uint64_t sub_23F33AF58()
{
  return MEMORY[0x24BE54328]();
}

uint64_t sub_23F33AF64()
{
  return MEMORY[0x24BE54388]();
}

uint64_t sub_23F33AF70()
{
  return MEMORY[0x24BE54398]();
}

uint64_t sub_23F33AF7C()
{
  return MEMORY[0x24BE543C0]();
}

uint64_t sub_23F33AF88()
{
  return MEMORY[0x24BE543C8]();
}

uint64_t sub_23F33AF94()
{
  return MEMORY[0x24BE543D0]();
}

uint64_t sub_23F33AFA0()
{
  return MEMORY[0x24BE543D8]();
}

uint64_t sub_23F33AFAC()
{
  return MEMORY[0x24BE543F8]();
}

uint64_t sub_23F33AFB8()
{
  return MEMORY[0x24BE54400]();
}

uint64_t sub_23F33AFC4()
{
  return MEMORY[0x24BE54408]();
}

uint64_t sub_23F33AFD0()
{
  return MEMORY[0x24BE54420]();
}

uint64_t sub_23F33AFDC()
{
  return MEMORY[0x24BE54430]();
}

uint64_t sub_23F33AFE8()
{
  return MEMORY[0x24BE54438]();
}

uint64_t sub_23F33AFF4()
{
  return MEMORY[0x24BE54440]();
}

uint64_t sub_23F33B000()
{
  return MEMORY[0x24BE54458]();
}

uint64_t sub_23F33B00C()
{
  return MEMORY[0x24BE54460]();
}

uint64_t sub_23F33B018()
{
  return MEMORY[0x24BEA5468]();
}

uint64_t sub_23F33B024()
{
  return MEMORY[0x24BEA54A8]();
}

uint64_t sub_23F33B030()
{
  return MEMORY[0x24BEA54B0]();
}

uint64_t sub_23F33B03C()
{
  return MEMORY[0x24BEBBD28]();
}

uint64_t sub_23F33B048()
{
  return MEMORY[0x24BEBBD30]();
}

uint64_t sub_23F33B054()
{
  return MEMORY[0x24BEBBD38]();
}

uint64_t sub_23F33B060()
{
  return MEMORY[0x24BEBBD40]();
}

uint64_t sub_23F33B06C()
{
  return MEMORY[0x24BEBBD48]();
}

uint64_t sub_23F33B078()
{
  return MEMORY[0x24BEBBD58]();
}

uint64_t sub_23F33B084()
{
  return MEMORY[0x24BEBBD60]();
}

uint64_t sub_23F33B090()
{
  return MEMORY[0x24BEBBD68]();
}

uint64_t sub_23F33B09C()
{
  return MEMORY[0x24BEBBD80]();
}

uint64_t sub_23F33B0A8()
{
  return MEMORY[0x24BEBBD88]();
}

uint64_t sub_23F33B0B4()
{
  return MEMORY[0x24BEBBD90]();
}

uint64_t sub_23F33B0C0()
{
  return MEMORY[0x24BEBBD98]();
}

uint64_t sub_23F33B0CC()
{
  return MEMORY[0x24BEBBDA0]();
}

uint64_t sub_23F33B0D8()
{
  return MEMORY[0x24BEBBDA8]();
}

uint64_t sub_23F33B0E4()
{
  return MEMORY[0x24BEBBDB0]();
}

uint64_t sub_23F33B0F0()
{
  return MEMORY[0x24BEBBDB8]();
}

uint64_t sub_23F33B0FC()
{
  return MEMORY[0x24BEBBDC0]();
}

uint64_t sub_23F33B108()
{
  return MEMORY[0x24BEBBDE0]();
}

uint64_t sub_23F33B114()
{
  return MEMORY[0x24BEBBDE8]();
}

uint64_t sub_23F33B120()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_23F33B12C()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23F33B138()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23F33B144()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23F33B150()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23F33B15C()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23F33B168()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23F33B174()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23F33B180()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23F33B18C()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23F33B198()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23F33B1A4()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23F33B1B0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23F33B1BC()
{
  return MEMORY[0x24BE55010]();
}

uint64_t sub_23F33B1C8()
{
  return MEMORY[0x24BE55C38]();
}

uint64_t sub_23F33B1D4()
{
  return MEMORY[0x24BE55C40]();
}

uint64_t sub_23F33B1E0()
{
  return MEMORY[0x24BE55E58]();
}

uint64_t sub_23F33B1EC()
{
  return MEMORY[0x24BE55E60]();
}

uint64_t sub_23F33B1F8()
{
  return MEMORY[0x24BE55E68]();
}

uint64_t sub_23F33B204()
{
  return MEMORY[0x24BEA5540]();
}

uint64_t sub_23F33B210()
{
  return MEMORY[0x24BEA5570]();
}

uint64_t sub_23F33B21C()
{
  return MEMORY[0x24BEA5578]();
}

uint64_t sub_23F33B228()
{
  return MEMORY[0x24BEA5580]();
}

uint64_t sub_23F33B234()
{
  return MEMORY[0x24BEA5670]();
}

uint64_t sub_23F33B240()
{
  return MEMORY[0x24BEA5678]();
}

uint64_t sub_23F33B24C()
{
  return MEMORY[0x24BEA5680]();
}

uint64_t sub_23F33B258()
{
  return MEMORY[0x24BEA5840]();
}

uint64_t sub_23F33B264()
{
  return MEMORY[0x24BEA5850]();
}

uint64_t sub_23F33B270()
{
  return MEMORY[0x24BEA5858]();
}

uint64_t sub_23F33B27C()
{
  return MEMORY[0x24BEA58C8]();
}

uint64_t sub_23F33B288()
{
  return MEMORY[0x24BEA58D0]();
}

uint64_t sub_23F33B294()
{
  return MEMORY[0x24BEA58D8]();
}

uint64_t sub_23F33B2A0()
{
  return MEMORY[0x24BEA5930]();
}

uint64_t sub_23F33B2AC()
{
  return MEMORY[0x24BEA5950]();
}

uint64_t sub_23F33B2B8()
{
  return MEMORY[0x24BEA5958]();
}

uint64_t sub_23F33B2C4()
{
  return MEMORY[0x24BEA5960]();
}

uint64_t sub_23F33B2D0()
{
  return MEMORY[0x24BEA5968]();
}

uint64_t sub_23F33B2DC()
{
  return MEMORY[0x24BEA5970]();
}

uint64_t sub_23F33B2E8()
{
  return MEMORY[0x24BEA5978]();
}

uint64_t sub_23F33B2F4()
{
  return MEMORY[0x24BEA5980]();
}

uint64_t sub_23F33B300()
{
  return MEMORY[0x24BEA5988]();
}

uint64_t sub_23F33B30C()
{
  return MEMORY[0x24BEA5990]();
}

uint64_t sub_23F33B318()
{
  return MEMORY[0x24BEA5998]();
}

uint64_t sub_23F33B324()
{
  return MEMORY[0x24BEA59A0]();
}

uint64_t sub_23F33B330()
{
  return MEMORY[0x24BEA59A8]();
}

uint64_t sub_23F33B33C()
{
  return MEMORY[0x24BEA59B8]();
}

uint64_t sub_23F33B348()
{
  return MEMORY[0x24BEA59C0]();
}

uint64_t sub_23F33B354()
{
  return MEMORY[0x24BEA59F0]();
}

uint64_t sub_23F33B360()
{
  return MEMORY[0x24BEA5A40]();
}

uint64_t sub_23F33B36C()
{
  return MEMORY[0x24BEA5A48]();
}

uint64_t sub_23F33B378()
{
  return MEMORY[0x24BEA5A60]();
}

uint64_t sub_23F33B384()
{
  return MEMORY[0x24BEA5A68]();
}

uint64_t sub_23F33B390()
{
  return MEMORY[0x24BEA5A70]();
}

uint64_t sub_23F33B39C()
{
  return MEMORY[0x24BEA5A98]();
}

uint64_t sub_23F33B3A8()
{
  return MEMORY[0x24BEB96F8]();
}

uint64_t sub_23F33B3B4()
{
  return MEMORY[0x24BEB9710]();
}

uint64_t sub_23F33B3C0()
{
  return MEMORY[0x24BEB9760]();
}

uint64_t sub_23F33B3CC()
{
  return MEMORY[0x24BEB9850]();
}

uint64_t sub_23F33B3D8()
{
  return MEMORY[0x24BEB9888]();
}

uint64_t sub_23F33B3E4()
{
  return MEMORY[0x24BEB9890]();
}

uint64_t sub_23F33B3F0()
{
  return MEMORY[0x24BEB9898]();
}

uint64_t sub_23F33B3FC()
{
  return MEMORY[0x24BEB98A8]();
}

uint64_t sub_23F33B408()
{
  return MEMORY[0x24BEB9970]();
}

uint64_t sub_23F33B414()
{
  return MEMORY[0x24BEB9998]();
}

uint64_t sub_23F33B420()
{
  return MEMORY[0x24BEB9A18]();
}

uint64_t sub_23F33B42C()
{
  return MEMORY[0x24BEB9CD8]();
}

uint64_t sub_23F33B438()
{
  return MEMORY[0x24BEB9D20]();
}

uint64_t sub_23F33B444()
{
  return MEMORY[0x24BEBA428]();
}

uint64_t sub_23F33B450()
{
  return MEMORY[0x24BEBA448]();
}

uint64_t sub_23F33B45C()
{
  return MEMORY[0x24BEBA470]();
}

uint64_t sub_23F33B468()
{
  return MEMORY[0x24BEBA478]();
}

uint64_t sub_23F33B474()
{
  return MEMORY[0x24BEBA4B0]();
}

uint64_t sub_23F33B480()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23F33B48C()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23F33B498()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23F33B4A4()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23F33B4B0()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23F33B4BC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23F33B4C8()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_23F33B4D4()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_23F33B4E0()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23F33B4EC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23F33B4F8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23F33B504()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23F33B510()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23F33B51C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23F33B528()
{
  return MEMORY[0x24BDCFB28]();
}

uint64_t sub_23F33B534()
{
  return MEMORY[0x24BDCFB38]();
}

uint64_t sub_23F33B540()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23F33B54C()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23F33B558()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23F33B564()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23F33B570()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23F33B57C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23F33B588()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23F33B594()
{
  return MEMORY[0x24BEE0C90]();
}

uint64_t sub_23F33B5A0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23F33B5AC()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23F33B5B8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23F33B5C4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23F33B5D0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23F33B5DC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23F33B5E8()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23F33B5F4()
{
  return MEMORY[0x24BE54478]();
}

uint64_t sub_23F33B600()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23F33B60C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23F33B618()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23F33B624()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23F33B630()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23F33B63C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23F33B648()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23F33B654()
{
  return MEMORY[0x24BE799A0]();
}

uint64_t sub_23F33B660()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_23F33B66C()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_23F33B678()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_23F33B684()
{
  return MEMORY[0x24BEE6BB8]();
}

uint64_t sub_23F33B690()
{
  return MEMORY[0x24BDCFC40]();
}

uint64_t sub_23F33B69C()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23F33B6A8()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23F33B6B4()
{
  return MEMORY[0x24BEE7628]();
}

uint64_t sub_23F33B6C0()
{
  return MEMORY[0x24BDCFD70]();
}

uint64_t sub_23F33B6CC()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_23F33B6D8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23F33B6E4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23F33B6F0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23F33B6FC()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23F33B708()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23F33B714()
{
  return MEMORY[0x24BE57098]();
}

uint64_t sub_23F33B720()
{
  return MEMORY[0x24BDB6660]();
}

uint64_t sub_23F33B72C()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_23F33B738()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23F33B744()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23F33B750()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23F33B75C()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23F33B768()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23F33B774()
{
  return MEMORY[0x24BEE5B58]();
}

uint64_t sub_23F33B780()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23F33B78C()
{
  return MEMORY[0x24BE570A0]();
}

uint64_t sub_23F33B798()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23F33B7A4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23F33B7B0()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23F33B7BC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23F33B7C8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23F33B7D4()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23F33B7E0()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23F33B7EC()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23F33B7F8()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23F33B804()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23F33B810()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23F33B81C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23F33B828()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23F33B834()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23F33B840()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23F33B84C()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23F33B858()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23F33B864()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_23F33B870()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23F33B87C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23F33B888()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23F33B894()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23F33B8A0()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23F33B8AC()
{
  return MEMORY[0x24BEE6D80]();
}

uint64_t sub_23F33B8B8()
{
  return MEMORY[0x24BEE6DC0]();
}

uint64_t sub_23F33B8C4()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23F33B8D0()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23F33B8DC()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23F33B8E8()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_23F33B8F4()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_23F33B900()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23F33B90C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23F33B918()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23F33B924()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23F33B930()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23F33B93C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23F33B948()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23F33B954()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23F33B960()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23F33B96C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23F33B978()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23F33B984()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_23F33B990()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23F33B99C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23F33B9A8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23F33B9B4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23F33B9C0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23F33B9CC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23F33B9D8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23F33B9E4()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23F33B9F0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23F33B9FC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23F33BA08()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23F33BA14()
{
  return MEMORY[0x24BEE4828]();
}

uint64_t sub_23F33BA20()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x24BE1A1B0]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return MEMORY[0x24BDBF058]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x24BDBF060]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t DDResultGetType()
{
  return MEMORY[0x24BE2B2E0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get()
{
  return MEMORY[0x24BEE71A8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

