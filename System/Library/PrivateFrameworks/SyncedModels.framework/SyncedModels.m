uint64_t SyncedModelTester.model.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SyncedModelTester.localParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22931CF24(&OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant, (uint64_t)&unk_255A41BC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_229324E44, a1);
}

uint64_t sub_22931CCC8@<X0>(uint64_t a1@<X8>)
{
  return SyncedModelTester.localParticipant.getter(a1);
}

uint64_t sub_22931CCE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, &qword_255A41BC0);
  return SyncedModelTester.localParticipant.setter((uint64_t)v4);
}

uint64_t SyncedModelTester.localParticipant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant;
  swift_beginAccess();
  sub_229324E88(a1, v3, &qword_255A41BC0);
  return swift_endAccess();
}

void (*SyncedModelTester.localParticipant.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = *(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant;
  swift_beginAccess();
  sub_229324E44(v6, (uint64_t)v5, &qword_255A41BC0);
  return sub_22931CE84;
}

void sub_22931CE84(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_229324E44(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, &qword_255A41BC0);
    SyncedModelTester.localParticipant.setter((uint64_t)v3);
    sub_2293251F8((uint64_t)v4, &qword_255A41BC0);
  }
  else
  {
    SyncedModelTester.localParticipant.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t SyncedModelTester.ownerState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22931CF24(&OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState, (uint64_t)type metadata accessor for SyncedModelOwnerState, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_229324D74, a1);
}

uint64_t sub_22931CF24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = *(_QWORD *)(v4 + 24) + *a1;
  swift_beginAccess();
  return a3(v8, a4, a2);
}

uint64_t sub_22931CF88@<X0>(uint64_t a1@<X8>)
{
  return SyncedModelTester.ownerState.getter(a1);
}

uint64_t sub_22931CFA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for SyncedModelOwnerState();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324D74(a1, (uint64_t)v4, v5);
  return SyncedModelTester.ownerState.setter((uint64_t)v4);
}

uint64_t SyncedModelTester.ownerState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = type metadata accessor for SyncedModelOwnerState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v12[-v7];
  v9 = *(_QWORD *)(v1 + 24);
  sub_229324D74(a1, (uint64_t)&v12[-v7], (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  v10 = v9 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_229324D74(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  swift_beginAccess();
  sub_229324508((uint64_t)v8, v10);
  swift_endAccess();
  sub_22935A04C((uint64_t)v6);
  sub_22932454C((uint64_t)v8);
  sub_22932454C((uint64_t)v6);
  return sub_22932454C(a1);
}

void (*SyncedModelTester.ownerState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SyncedModelOwnerState() - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = *(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_229324D74(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  return sub_22931D1F4;
}

void sub_22931D1F4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_229324D74(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
    SyncedModelTester.ownerState.setter((uint64_t)v3);
    sub_22932454C((uint64_t)v4);
  }
  else
  {
    SyncedModelTester.ownerState.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t SyncedModelTester.shouldReceiveOwnership.getter()
{
  uint64_t v0;

  v0 = sub_229324588();
  sub_2293245A4(v0);
  return v0;
}

uint64_t sub_22931D298@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)@<X0>(_BYTE *@<X8>);

  v2 = sub_229324588();
  v3 = v2;
  v5 = v4;
  if (v2)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_229324F40;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;
  return sub_2293245A4(v3);
}

uint64_t sub_22931D304(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_229324F10;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2293245A4(v1);
  return SyncedModelTester.shouldReceiveOwnership.setter((uint64_t)v4, v3);
}

uint64_t SyncedModelTester.shouldReceiveOwnership.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(*(_QWORD *)(v2 + 24)
                 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_2293245B4(v4);
}

uint64_t (*SyncedModelTester.shouldReceiveOwnership.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = (uint64_t *)(*(_QWORD *)(v1 + 24)
                 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  sub_2293245A4(v4);
  return sub_22931D3F8;
}

uint64_t sub_22931D3F8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    sub_2293245A4(*a1);
    v5 = (uint64_t *)(*(_QWORD *)(v4 + 24)
                   + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
    v6 = *v5;
    *v5 = v3;
    v5[1] = v2;
    sub_2293245B4(v6);
    v7 = v3;
  }
  else
  {
    v8 = (uint64_t *)(*(_QWORD *)(v4 + 24)
                   + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
    v7 = *v8;
    *v8 = v3;
    v8[1] = v2;
  }
  return sub_2293245B4(v7);
}

uint64_t SyncedModelTester.requestRemoteOwnership(participant:finishBlock:)(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3)
{
  return sub_22935A314(a1, a2, a3);
}

Swift::Void __swiftcall SyncedModelTester.releaseRemoteOwnership()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _BYTE v14[24];

  v1 = type metadata accessor for SyncedModelOwnerState();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = &v14[-v6];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v14[-v8];
  v10 = *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_229324D74(v10, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  v11 = sub_2293B8B40();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 2, v11);
  sub_22932454C((uint64_t)v9);
  if (!v13)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 2, v11);
    sub_229324D74(v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
    swift_beginAccess();
    sub_229324508((uint64_t)v7, v10);
    swift_endAccess();
    sub_22935A04C((uint64_t)v4);
    sub_22932454C((uint64_t)v7);
    sub_22932454C((uint64_t)v4);
  }
}

uint64_t SyncedModelTester.applyRemoteChange<A>(value:keyPath:participant:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  _QWORD v16[3];

  v6 = type metadata accessor for SyncedModelOwnerState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - v10;
  v12 = *(_QWORD *)(v3 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_229324D74(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  v13 = sub_2293B8B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 2, 2, v13);
  v14 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v9);
  sub_22932454C((uint64_t)v9);
  result = sub_22932454C((uint64_t)v11);
  if ((v14 & 1) == 0)
  {
    v16[2] = *(_QWORD *)(v3 + 16);
    swift_unknownObjectRetain();
    swift_getAtKeyPath();
    swift_unknownObjectRelease();
    sub_229327480(a1, a3);
    return swift_release();
  }
  return result;
}

{
  return sub_22931D790(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_2293454B8);
}

uint64_t SyncedModelTester.applyRemoteChange<A, B>(value:keyPath:participant:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22931D790(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_2293A65F4);
}

uint64_t sub_22931D790(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  _QWORD v18[3];

  v8 = type metadata accessor for SyncedModelOwnerState();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - v12;
  v14 = *(_QWORD *)(v4 + 24) + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_229324D74(v14, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  v15 = sub_2293B8B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 2, 2, v15);
  v16 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v11);
  sub_22932454C((uint64_t)v11);
  result = sub_22932454C((uint64_t)v13);
  if ((v16 & 1) == 0)
  {
    v18[2] = *(_QWORD *)(v4 + 16);
    swift_unknownObjectRetain();
    swift_getAtKeyPath();
    swift_unknownObjectRelease();
    a4(a1, a3);
    return swift_release();
  }
  return result;
}

uint64_t SyncedModelTester.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t SyncedModelTester.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_22931D948()
{
  unint64_t result;

  result = sub_229327BD4(MEMORY[0x24BEE4AF8]);
  qword_255A44C58 = result;
  return result;
}

uint64_t (*sub_22931D96C())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t (*v6)();
  __int128 v8;

  if (qword_255A41A80 != -1)
    swift_once();
  v0 = sub_2293B9470();
  v2 = v1;
  swift_beginAccess();
  v3 = qword_255A44C58;
  if (*(_QWORD *)(qword_255A44C58 + 16) && (v4 = sub_22936F454(v0, v2), (v5 & 1) != 0))
  {
    v8 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
    swift_retain();
    swift_bridgeObjectRelease();
    *(_OWORD *)(swift_allocObject() + 16) = v8;
    v6 = sub_22932519C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = 0;
  }
  swift_endAccess();
  return v6;
}

uint64_t static SyncedModelsTester.enableTestMode<A>(for:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  if (qword_255A41A80 != -1)
    swift_once();
  v9 = sub_2293B9470();
  v11 = v10;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a2;
  v12[5] = a3;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = qword_255A44C58;
  qword_255A44C58 = 0x8000000000000000;
  sub_2293219D4((uint64_t)sub_2293245E8, (uint64_t)v12, v9, v11, isUniquelyReferenced_nonNull_native);
  qword_255A44C58 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_22931DB9C(uint64_t a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  _BYTE v10[32];

  sub_2293251BC(a1, (uint64_t)v10);
  type metadata accessor for SyncedModelTester(0, a4, a5, v8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t static SyncedModelsTester.disableTestMode<A>(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_255A41A80 != -1)
    swift_once();
  v0 = sub_2293B9470();
  v2 = v1;
  swift_beginAccess();
  v3 = sub_22931DCE4(v0, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_2293245B4(v3);
}

void sub_22931DCD8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_22931DCE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22936F454(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_229322B54();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_2293209A8(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_22931DDC8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22936F3E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_229322D14();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_2293B8A20();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    *a2 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
    sub_229320B7C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_2293B99C0;
  }
  return result;
}

uint64_t sub_22931DEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22936F3E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_229323144();
      v9 = v18;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_2293B8A20();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_2293B8B40();
    v14 = MEMORY[0x24BDD1F00];
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v12 + *(_QWORD *)(v15 + 72) * v6, v13);
    sub_229321200(v6, v9, (uint64_t (*)(_QWORD))v14);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v17 = sub_2293B8B40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

uint64_t sub_22931DFFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22936F3E8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_229323424();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_2293B8A20();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_229320F9C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22931E0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22936F3E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_229323A70();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_2293B8A20();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for CachedOwnershipRequest(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_229324CE8(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_229321200(v6, v9, type metadata accessor for CachedOwnershipRequest);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for CachedOwnershipRequest(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_22931E214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22936F3E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_229323CF0();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_2293B8A20();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_229324DFC(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_2293214B4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_22931E350(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22936F3E8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_229323F74();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_2293B8A20();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v4);
  sub_229321764(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22931E44C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _BYTE v32[16];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D28);
  result = sub_2293B9254();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v17);
      v22 = *(_QWORD *)(v5 + 56) + 16 * v17;
      if ((a2 & 1) != 0)
        sub_22932513C(v22, (uint64_t)v32);
      else
        sub_229325100(v22, (uint64_t)v32);
      result = MEMORY[0x22E2C8198](*(_QWORD *)(v7 + 40), v21, 4);
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v15) = v21;
      result = sub_22932513C((uint64_t)v32, *(_QWORD *)(v7 + 56) + 16 * v15);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_22931E710(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D30);
  v6 = a2;
  v7 = sub_2293B9254();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_2293B93D4();
      sub_2293B8F18();
      result = sub_2293B93F8();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_22931EA18(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_2293B8A20();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D18);
  v44 = a2;
  v9 = sub_2293B9254();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v29 = *v28;
      v30 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v29 = *v31;
      v30 = v31[1];
      sub_229324ECC(*v31, v30);
    }
    sub_229324D2C();
    result = sub_2293B8EE8();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v29;
    v19[1] = v30;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_22931EDB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34[8];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D20);
  result = sub_2293B9254();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_34;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_34;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_41;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(v5 + 56) + v22;
      if ((a2 & 1) != 0)
        sub_229325028(v24, (uint64_t)v34);
      else
        sub_229324FEC(v24, (uint64_t)v34);
      result = sub_2293B93C8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      result = sub_229325028((uint64_t)v34, *(_QWORD *)(v7 + 56) + v16);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_22931F07C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_2293B8B40();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_2293B8A20();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF0);
  v11 = sub_2293B9254();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_229324D2C();
    result = sub_2293B8EE8();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_22931F460(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  int v41;

  v3 = v2;
  v5 = sub_2293B8A20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D08);
  v41 = a2;
  v10 = sub_2293B9254();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v37 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v21 = v20 | (v18 << 6);
      }
      else
      {
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38)
          goto LABEL_34;
        v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          v18 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_34;
          v23 = v39[v18];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v41 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v9 + 32);
                if (v35 >= 64)
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v35;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v18 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v18 >= v38)
                  goto LABEL_34;
                v23 = v39[v18];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v18 = v24;
          }
        }
LABEL_21:
        v15 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      v25 = *(_QWORD *)(v6 + 72);
      v26 = *(_QWORD *)(v9 + 48) + v25 * v21;
      if ((v41 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
        swift_retain();
      }
      sub_229324D2C();
      result = sub_2293B8EE8();
      v28 = -1 << *(_BYTE *)(v11 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v25 * v19, v8, v5);
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v27;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_22931F7CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D00);
  result = sub_2293B9254();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        sub_229324ECC(v31, *((unint64_t *)&v31 + 1));
      result = MEMORY[0x22E2C8198](*(_QWORD *)(v7 + 40), v28, 4);
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_22931FA94(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;
  uint64_t v44;

  v3 = v2;
  v5 = sub_2293B8A20();
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF8);
  v43 = a2;
  v9 = sub_2293B9254();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v39 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v41 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v40 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    for (i = v8; ; v8 = i)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v40)
          goto LABEL_34;
        v23 = v41[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v40)
            goto LABEL_34;
          v23 = v41[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v40)
            {
LABEL_34:
              swift_release();
              v3 = v39;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v8 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v41[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v40)
                  goto LABEL_34;
                v23 = v41[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = *(_QWORD *)(v44 + 72);
      v26 = *(_QWORD *)(v8 + 48) + v25 * v21;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v44 + 32))(v7, v26, v5);
        v27 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
        v29 = *v27;
        v28 = v27[1];
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v7, v26, v5);
        v30 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
        v29 = *v30;
        v28 = v30[1];
        swift_bridgeObjectRetain();
      }
      sub_229324D2C();
      result = sub_2293B8EE8();
      v31 = -1 << *(_BYTE *)(v10 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v15 + 8 * v33);
        }
        while (v37 == -1);
        v18 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v44 + 32))(*(_QWORD *)(v10 + 48) + v25 * v18, v7, v5);
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
      *v19 = v29;
      v19[1] = v28;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_22931FE18(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = type metadata accessor for CachedOwnershipRequest(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B8A20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CD8);
  v47 = a2;
  v12 = sub_2293B9254();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v44 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v42 = v2;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v43)
      break;
    v25 = v44;
    v26 = v44[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v43)
        goto LABEL_34;
      v26 = v44[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v44[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v43)
              goto LABEL_34;
            v26 = v44[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_229324CE8(v30 + v31 * v23, v48);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v32 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_229324D74(v32 + v31 * v23, v48, type metadata accessor for CachedOwnershipRequest);
    }
    sub_229324D2C();
    result = sub_2293B8EE8();
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v21 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    result = sub_229324CE8(v48, *(_QWORD *)(v13 + 56) + v31 * v21);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v42;
  v25 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v11 + 32);
  if (v40 >= 64)
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v40;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_2293201FC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B8A20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE8);
  v47 = a2;
  v12 = sub_2293B9254();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v44 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v42 = v2;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v43)
      break;
    v25 = v44;
    v26 = v44[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v43)
        goto LABEL_34;
      v26 = v44[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v44[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v43)
              goto LABEL_34;
            v26 = v44[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_229324DFC(v30 + v31 * v23, v48);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v32 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_229324E44(v32 + v31 * v23, v48, &qword_255A41CE0);
    }
    sub_229324D2C();
    result = sub_2293B8EE8();
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v21 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    result = sub_229324DFC(v48, *(_QWORD *)(v13 + 56) + v31 * v21);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v42;
  v25 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v11 + 32);
  if (v40 >= 64)
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v40;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_2293205E4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  int v45;
  __int128 v46;

  v3 = v2;
  v5 = sub_2293B8A20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D10);
  v45 = a2;
  v10 = sub_2293B9254();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v43 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v41 = v2;
  v42 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_34;
      v25 = v43[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v42)
              goto LABEL_34;
            v25 = v43[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
      v29 = *(_QWORD *)(v9 + 56) + 24 * v22;
      v46 = *(_OWORD *)v29;
      v30 = *(_QWORD *)(v29 + 16);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v31 = *(_QWORD *)(v9 + 56) + 24 * v22;
      v46 = *(_OWORD *)v31;
      v30 = *(_QWORD *)(v31 + 16);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_229324D2C();
    result = sub_2293B8EE8();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v8, v5);
    v20 = *(_QWORD *)(v11 + 56) + 24 * v19;
    *(_OWORD *)v20 = v46;
    *(_QWORD *)(v20 + 16) = v30;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v41;
  v24 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_2293209A8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2293B9134();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2293B93D4();
        swift_bridgeObjectRetain();
        sub_2293B8F18();
        v9 = sub_2293B93F8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_229320B7C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_2293B8A20();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_2293B9134();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_229324D2C();
        v15 = sub_2293B8EE8();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_OWORD *)(v20 + 16 * a1);
            v22 = (_OWORD *)(v20 + 16 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_229320DE0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2293B9134();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_2293B93C8();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + 8 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 8 * v6 + 8)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_229320F9C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_2293B8A20();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_2293B9134();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_229324D2C();
        v15 = sub_2293B8EE8();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_229321200(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v34 = a3;
  v5 = sub_2293B8A20();
  v37 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_2293B9134();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v36 = (result + 1) & v12;
      v13 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v14 = v12;
      do
      {
        v15 = v13;
        v16 = v13 * v11;
        v17 = v14;
        v35(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v5);
        sub_229324D2C();
        v18 = sub_2293B8EE8();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v8, v5);
        v14 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(v34(0) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v11;
            v26 = v22 + v23 * v11 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              v14 = v17;
            }
            else
            {
              a1 = v11;
              v14 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v14 = v17;
                a1 = v11;
              }
            }
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v11 = (v11 + 1) & v14;
        v13 = v15;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2293214B4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_2293B8A20();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_2293B9134();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v12;
        v15 = v12 * v10;
        v16 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_229324D2C();
        v17 = sub_2293B8EE8();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v35)
        {
          if (v18 >= v35 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            if (v14 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v14))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v14 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v21 = *(_QWORD *)(a2 + 56);
            v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0) - 8) + 72);
            v23 = v22 * a1;
            result = v21 + v22 * a1;
            v24 = v22 * v10;
            v25 = v21 + v22 * v10 + v22;
            if (v23 < v24 || result >= v25)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v16;
            }
            else
            {
              a1 = v10;
              v13 = v16;
              if (v23 != v24)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v16;
                a1 = v10;
              }
            }
          }
        }
        else if (v18 >= v35 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        v10 = (v10 + 1) & v13;
        v12 = v14;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_229321764(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v4 = sub_2293B8A20();
  v32 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v33 = a2 + 64;
    result = sub_2293B9134();
    v11 = v33;
    if ((*(_QWORD *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v32 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v14 = v13 * v9;
        v31(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_229324D2C();
        v15 = sub_2293B8EE8();
        result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 24 * a1;
            v22 = (__int128 *)(v20 + 24 * v9);
            v11 = v33;
            if (a1 != v9 || (a1 = v9, v21 >= (unint64_t)v22 + 24))
            {
              v23 = *v22;
              *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
              *(_OWORD *)v21 = v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v33;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v24 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2293219D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_22936F454(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_229322B54();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_release();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_22931E710(v17, a5 & 1);
  v23 = sub_22936F454(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_229321B48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_2293B8A20();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_22936F3E8(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7] + 16 * v15;
      result = sub_229324F6C(*(_QWORD *)v22, *(_QWORD *)(v22 + 8));
      v24 = v28;
      *(_QWORD *)v22 = a1;
      *(_QWORD *)(v22 + 8) = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_229322D14();
    goto LABEL_7;
  }
  sub_22931EA18(v18, a4 & 1);
  v25 = sub_22936F3E8(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_2293B9380();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_229322524(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_229321CB4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22936F4B8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_229324FB0(a1, v16[7] + 8 * v10);
      return sub_2293225C4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_229322F88();
      goto LABEL_7;
    }
    sub_22931EDB4(v13, a3 & 1);
    v18 = sub_22936F4B8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_229324FB0(a1, v16[7] + 8 * v10);
      return sub_2293225C4(v10, a2, a1, v16);
    }
  }
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_229321DC0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_2293B8A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22936F3E8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_2293B8B40();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_229323144();
      goto LABEL_7;
    }
    sub_22931F07C(v17, a3 & 1);
    v24 = sub_22936F3E8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_22932262C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_229321F48(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_2293B8A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22936F3E8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_229323424();
    goto LABEL_7;
  }
  sub_22931F460(v17, a3 & 1);
  v23 = sub_22936F3E8(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2293B9380();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2293226E4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2293220A4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_2293B8A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22936F3E8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
      return sub_229324E88(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, &qword_255A41CE0);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_229323CF0();
    goto LABEL_7;
  }
  sub_2293201FC(v17, a3 & 1);
  v24 = sub_22936F3E8(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_2293B9380();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_22932277C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_229322218(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_2293B8A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22936F3E8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for CachedOwnershipRequest(0);
        return sub_229324DB8(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_229323A70();
      goto LABEL_7;
    }
    sub_22931FE18(v17, a3 & 1);
    v24 = sub_22936F3E8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_229322830(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_229322398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (_QWORD **)v5;
  v28 = a2;
  v29 = a3;
  v10 = sub_2293B8A20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_22936F3E8(a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    v22 = *v6;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_release();
      v25 = v28;
      *v23 = a1;
      v23[1] = v25;
      v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_229323F74();
    goto LABEL_7;
  }
  sub_2293205E4(v19, a5 & 1);
  v26 = sub_22936F3E8(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_2293B9380();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v6;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_2293228E0(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_229322524(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_2293B8A20();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_2293225C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_229325028(a3, a4[7] + 8 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_22932262C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2293B8A20();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_2293B8B40();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_2293226E4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2293B8A20();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_22932277C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2293B8A20();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  result = sub_229324DFC(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_229322830(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2293B8A20();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for CachedOwnershipRequest(0);
  result = sub_229324CE8(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_2293228E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a6[6];
  v13 = sub_2293B8A20();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v15 = (_QWORD *)(a6[7] + 24 * a1);
  *v15 = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16 = a6[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a6[2] = v18;
  return result;
}

void *sub_229322994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D28);
  v2 = *v0;
  v3 = sub_2293B9248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    sub_229325100(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_22932513C((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_229322B54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D30);
  v2 = *v0;
  v3 = sub_2293B9248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_229322D14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = sub_2293B8A20();
  v1 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D18);
  v33 = v0;
  v3 = *v0;
  v4 = sub_2293B9248();
  v5 = *(_QWORD *)(v3 + 16);
  v39 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v31 = v39;
    v30 = v33;
LABEL_28:
    *v30 = v31;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    v6 = v39;
  }
  v34 = v3 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v38 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v15 = v36;
  v14 = v37;
  v16 = v39;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v38;
      goto LABEL_12;
    }
    v27 = v10 + 1;
    v19 = v38;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *(_QWORD *)(v34 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 16 * v18;
    v23 = (uint64_t *)(v21 + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v26 = (uint64_t *)(*(_QWORD *)(v16 + 56) + v22);
    *v26 = v24;
    v26[1] = v25;
    result = (void *)sub_229324ECC(v24, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_26:
    result = (void *)swift_release();
    v30 = v33;
    v31 = v39;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v34 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_229322F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char v21[8];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D20);
  v2 = *v0;
  v3 = sub_2293B9248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_229324FEC(*(_QWORD *)(v2 + 56) + 8 * v15, (uint64_t)v21);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_229325028((uint64_t)v21, *(_QWORD *)(v4 + 56) + v16);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_229323144()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_2293B8B40();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_2293B8A20();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF0);
  v33 = v0;
  v3 = *v0;
  v4 = sub_2293B9248();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_229323424()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_2293B8A20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D08);
  v24 = v0;
  v5 = *v0;
  v6 = sub_2293B9248();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_229323654()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D00);
  v2 = *v0;
  v3 = sub_2293B9248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)sub_229324ECC(v19, *((unint64_t *)&v19 + 1));
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_229323800()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_2293B8A20();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF8);
  v32 = v0;
  v3 = *v0;
  v4 = sub_2293B9248();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_229323A70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for CachedOwnershipRequest(0);
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2293B8A20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CD8);
  v24 = v0;
  v8 = *v0;
  v9 = sub_2293B9248();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v25 = v8 + 64;
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_229324D74(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3, type metadata accessor for CachedOwnershipRequest);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_229324CE8((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_229323CF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2293B8A20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE8);
  v24 = v0;
  v8 = *v0;
  v9 = sub_2293B9248();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v25 = v8 + 64;
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_229324E44(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3, &qword_255A41CE0);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_229324DFC((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_229323F74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;
  __int128 v31;

  v1 = sub_2293B8A20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D10);
  v28 = v0;
  v5 = *v0;
  v6 = sub_2293B9248();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v28 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v30 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 24 * v16;
    v19 = *(_QWORD *)(v5 + 56) + 24 * v16;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v7 + 48) + v17;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v31 = *(_OWORD *)v19;
    v22(v21, v4, v1);
    v23 = *(_QWORD *)(v7 + 56) + v18;
    *(_OWORD *)v23 = v31;
    *(_QWORD *)(v23 + 16) = v20;
    swift_retain();
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v3 = sub_2293B8A20();
  v4 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v34 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - v8;
  v10 = sub_2293B8B40();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SyncedModelOwnerState();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D38);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_229324D74(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  sub_229324D74(v35, v21, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v23 = v22(v20, 2, v10);
  if (!v23)
  {
    v24 = v9;
    v25 = v34;
    sub_229324D74((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SyncedModelOwnerState);
    if (!v22((char *)v21, 2, v10))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v21, v10);
      v27 = v24;
      sub_2293B8B34();
      sub_2293B8B34();
      v26 = sub_2293B89F0();
      v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      v29 = v33;
      v28(v7, v33);
      v28(v27, v29);
      v30 = *(void (**)(char *, uint64_t))(v11 + 8);
      v30(v13, v10);
      v30(v16, v10);
      sub_22932454C((uint64_t)v20);
      return v26 & 1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_9;
  }
  if (v23 == 1)
  {
    if (v22((char *)v21, 2, v10) != 1)
      goto LABEL_9;
  }
  else if (v22((char *)v21, 2, v10) != 2)
  {
LABEL_9:
    sub_2293251F8((uint64_t)v20, &qword_255A41D38);
    v26 = 0;
    return v26 & 1;
  }
  sub_22932454C((uint64_t)v20);
  v26 = 1;
  return v26 & 1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2C85C4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for SyncedModelOwnerState()
{
  uint64_t result;

  result = qword_255A41C38;
  if (!qword_255A41C38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_229324508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncedModelOwnerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_22932454C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SyncedModelOwnerState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_229324588()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 24)
                   + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
}

uint64_t sub_2293245A4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2293245B4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2293245C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2293245E8(uint64_t a1)
{
  uint64_t v1;

  return sub_22931DB9C(a1, *(void (**)())(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2293245F4()
{
  return 16;
}

__n128 sub_229324600(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22932460C()
{
  return 16;
}

__n128 sub_229324618(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_229324624()
{
  return 16;
}

__n128 sub_229324630(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SyncedModelOwnerState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_2293B8B40();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for SyncedModelOwnerState(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_2293B8B40();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for SyncedModelOwnerState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for SyncedModelOwnerState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for SyncedModelOwnerState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for SyncedModelOwnerState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedModelOwnerState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229324AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_2293B8B40();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SyncedModelOwnerState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229324AF8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_2293B8B40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_229324B4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2293B8B40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_229324B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_229324BC8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_229324C20()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SyncedModelTester(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedModelTester);
}

uint64_t method lookup function for SyncedModelTester()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for SyncedModelsTester()
{
  return &type metadata for SyncedModelsTester;
}

void type metadata accessor for CFRunLoopObserver()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_255A41CC8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_255A41CC8);
  }
}

uint64_t sub_229324CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CachedOwnershipRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_229324D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255A41CD0;
  if (!qword_255A41CD0)
  {
    v1 = sub_2293B8A20();
    result = MEMORY[0x22E2C85DC](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_255A41CD0);
  }
  return result;
}

uint64_t sub_229324D74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_229324DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CachedOwnershipRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_229324DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_229324E44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_229324E88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_229324ECC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_229324F10()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_229324F40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_229324F6C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_229324FB0(uint64_t a1, uint64_t a2)
{
  assignWithTake for SyncedModelControllerTable.Storage(a2, a1);
  return a2;
}

uint64_t sub_229324FEC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SyncedModelControllerTable.Storage(a2, a1);
  return a2;
}

uint64_t sub_229325028(uint64_t a1, uint64_t a2)
{
  initializeWithTake for SyncedModelControllerTable.Storage(a2, a1);
  return a2;
}

uint64_t sub_229325064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  type metadata accessor for TestSyncedModelController();
  v2 = swift_unknownObjectRetain();
  *(_QWORD *)(v1 + 24) = sub_22935A7B4(v2);
  return v1;
}

uint64_t sub_2293250C8(uint64_t a1)
{
  swift_allocObject();
  return sub_229325064(a1);
}

uint64_t sub_229325100(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SyncedModelController.PropertyStorage(a2, a1);
  return a2;
}

uint64_t sub_22932513C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for SyncedModelController.PropertyStorage(a2, a1);
  return a2;
}

uint64_t sub_229325178()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22932519C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2293251BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2293251F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E2C857C](a1, v6, a5);
}

uint64_t sub_229325268()
{
  uint64_t v0;

  v0 = sub_2293B8D5C();
  __swift_allocate_value_buffer(v0, qword_255A44C60);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44C60);
  return sub_2293B8D50();
}

uint64_t sub_2293252E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];
  _QWORD v5[2];

  v4[2] = a2;
  sub_2293B9104();
  sub_229325408((void (*)(char *, char *))sub_2293253EC, (uint64_t)v4, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], v2, (uint64_t)v5);
  if (v5[1])
    return v5[0];
  else
    return 7104878;
}

uint64_t sub_229325368@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_2293B8F0C();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2293253EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_229325368(a1, a2);
}

uint64_t sub_229325408@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2293255F0()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE4B00];
  *(_OWORD *)(v0 + 32) = xmmword_2293B9AE0;
  sub_2293B8AB0();
  *(_QWORD *)(v0 + 16) = sub_2293B8AA4();
  return v0;
}

uint64_t sub_22932565C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE4B00];
  *(_OWORD *)(v0 + 32) = xmmword_2293B9AE0;
  sub_2293B8AB0();
  *(_QWORD *)(v0 + 16) = sub_2293B8AA4();
  return v0;
}

void sub_2293256B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[28];

  v13[14] = a4;
  v13[18] = a3;
  v5 = sub_2293B8E1C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_2293B8E40();
  v13[11] = *(_QWORD *)(v6 - 8);
  v13[12] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v13[10] = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2293B8E28();
  v13[8] = *(_QWORD *)(v8 - 8);
  v13[9] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v13[7] = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2293B8A20();
  v13[13] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13[19] = (char *)v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  MEMORY[0x24BDAC7A8](v12);
  __asm { BR              X10 }
}

void sub_229325830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;

  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v7 - 256) = v2;
  if (v8 < BYTE6(v4))
  {
    v9 = *(_QWORD *)(v3 + 40);
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
    {
      __break(1u);
      JUMPOUT(0x229325DDCLL);
    }
    *(_QWORD *)(v3 + 40) = v11;
    if (v11 < 201)
LABEL_10:
      __asm { BR              X11 }
    *(_QWORD *)(v7 - 168) = a1;
    *(_QWORD *)(v7 - 264) = v1;
    if (qword_255A41A88 != -1)
      swift_once();
    v12 = sub_2293B8D5C();
    __swift_project_value_buffer(v12, (uint64_t)qword_255A44C60);
    v13 = sub_2293B8D44();
    v14 = sub_2293B90A4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)(v7 - 280) = v5;
      v16 = v15;
      *(_DWORD *)v15 = 134217984;
      *(_QWORD *)(v7 - 136) = 200;
      sub_2293B9110();
      _os_log_impl(&dword_22931B000, v13, v14, "SyncedModel message size has been constantly increasing for more than %ld messages.", v16, 0xCu);
      MEMORY[0x22E2C869C](v16, -1, -1);
    }

  }
  *(_QWORD *)(v3 + 40) = 0;
  goto LABEL_10;
}

void sub_229325E24(void *a1, uint64_t a2, NSObject *a3)
{
  id *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = (id *)(a2 + 16);
  v6 = a1;
  if (!a1)
  {
    swift_beginAccess();
    v6 = *v5;
    v7 = *v5;
  }
  swift_beginAccess();
  v8 = *v5;
  *v5 = v6;
  v9 = a1;

  dispatch_group_leave(a3);
}

void sub_229325EBC(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  v6 = v5;
  a1(v5);

}

uint64_t sub_229325F20(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_229325F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v6 = sub_2293B8A20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_10;
  v14 = Strong;
  v31 = a2;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v12, a1, v6);
  swift_beginAccess();
  v16 = *(_QWORD *)(v14 + 24);
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v17 = sub_22936F3E8((uint64_t)v12);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    v33 = xmmword_2293B9AF0;
    goto LABEL_7;
  }
  v19 = (_QWORD *)(*(_QWORD *)(v16 + 56) + 16 * v17);
  v20 = v19[1];
  *(_QWORD *)&v33 = *v19;
  *((_QWORD *)&v33 + 1) = v20;
  sub_229324ECC(v33, v20);
  swift_bridgeObjectRelease();
LABEL_7:
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v12, v6);
  v22 = type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  sub_2293B89A8();
  if ((*(_BYTE *)(a1 + *(int *)(v22 + 24)) & 1) != 0)
  {
    swift_beginAccess();
    sub_22931DDC8(a1, &v32);
    sub_2293270C8(v32, *((unint64_t *)&v32 + 1));
    swift_endAccess();
    swift_release();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F50);
    v24 = (char *)a3 + *(int *)(v23 + 48);
    *a3 = v33;
    v25 = sub_2293B8A80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v31, v25);
    return (*(uint64_t (**)(__int128 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 0, 1, v23);
  }
  v15(v10, a1, v6);
  v27 = v33;
  swift_beginAccess();
  sub_229324ECC(v27, *((unint64_t *)&v27 + 1));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v32 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v14 + 24) = 0x8000000000000000;
  sub_229321B48(v27, *((uint64_t *)&v27 + 1), (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v14 + 24) = v32;
  swift_bridgeObjectRelease();
  v21(v10, v6);
  swift_endAccess();
  swift_release();
  sub_229324F6C(v33, *((unint64_t *)&v33 + 1));
LABEL_10:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F50);
  return (*(uint64_t (**)(__int128 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a3, 1, 1, v29);
}

BOOL sub_229326230(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_229326244()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

uint64_t sub_229326288()
{
  return sub_2293B93E0();
}

uint64_t sub_2293262B0()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

uint64_t sub_2293262F0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64616F6C796170;
  if (*v0 != 1)
    v1 = 0x6E7568437473616CLL;
  if (*v0)
    return v1;
  else
    return 1684632949;
}

uint64_t sub_229326348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_229327330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22932636C()
{
  return 0;
}

void sub_229326378(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_229326384()
{
  sub_229326D80();
  return sub_2293B9458();
}

uint64_t sub_2293263AC()
{
  sub_229326D80();
  return sub_2293B9464();
}

uint64_t sub_2293263D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_229326D80();
  sub_2293B944C();
  LOBYTE(v11) = 0;
  sub_2293B8A20();
  sub_229326FD0(&qword_255A41F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2293B92E4();
  if (!v2)
  {
    v11 = *(_OWORD *)(v3
                    + *(int *)(type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage()
                             + 20));
    v10[15] = 1;
    sub_229326EA8();
    sub_2293B92E4();
    LOBYTE(v11) = 2;
    sub_2293B92D8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_22932656C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char v23;

  v16 = a2;
  v17 = sub_2293B8A20();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41EE8);
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_229326D80();
  v20 = v7;
  v11 = v21;
  sub_2293B9434();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v5;
  LOBYTE(v22) = 0;
  sub_229326FD0(&qword_255A41EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v17;
  sub_2293B92A8();
  v21 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v18, v13);
  v23 = 1;
  sub_229326DE4();
  sub_2293B92A8();
  *(_OWORD *)&v10[*(int *)(v8 + 20)] = v22;
  LOBYTE(v22) = 2;
  v14 = sub_2293B929C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v19);
  v10[*(int *)(v8 + 24)] = v14 & 1;
  sub_229326E28((uint64_t)v10, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_229326E6C((uint64_t)v10);
}

uint64_t sub_229326834@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22932656C(a1, a2);
}

uint64_t sub_229326848(_QWORD *a1)
{
  return sub_2293263D4(a1);
}

uint64_t sub_22932685C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncedModelGroupSessionMessenger()
{
  return objc_opt_self();
}

_QWORD *sub_2293268A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2293B8A20();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_229324ECC(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_229326958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_229324F6C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_2293269A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_229324ECC(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_229326A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_229324ECC(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_229324F6C(v12, v13);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_229326AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_229326B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_229324F6C(v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_229326B88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229326B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_2293B8A20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_229326C20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229326C2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2293B8A20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage()
{
  uint64_t result;

  result = qword_255A41EA8;
  if (!qword_255A41EA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_229326CE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8A20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_229326D80()
{
  unint64_t result;

  result = qword_255A41EF0;
  if (!qword_255A41EF0)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293B9CE4, &type metadata for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255A41EF0);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_229326DE4()
{
  unint64_t result;

  result = qword_255A41F00;
  if (!qword_255A41F00)
  {
    result = MEMORY[0x22E2C85DC](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255A41F00);
  }
  return result;
}

uint64_t sub_229326E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_229326E6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_229326EA8()
{
  unint64_t result;

  result = qword_255A41F18;
  if (!qword_255A41F18)
  {
    result = MEMORY[0x22E2C85DC](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255A41F18);
  }
  return result;
}

uint64_t sub_229326EEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_229326F10()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_229326F3C(void *a1)
{
  uint64_t v1;

  sub_229325E24(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

unint64_t sub_229326F44()
{
  unint64_t result;

  result = qword_255A41F30;
  if (!qword_255A41F30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255A41F30);
  }
  return result;
}

uint64_t sub_229326F80()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_229326FAC()
{
  uint64_t v0;

  sub_229325EBC(*(void (**)(void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_229326FD0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E2C85DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_229327010()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255A41F48;
  if (!qword_255A41F48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41F40);
    result = MEMORY[0x22E2C85DC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255A41F48);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2C85D0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2293270A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_2293270C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_229324F6C(a1, a2);
  return a1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2293271C8 + 4 * byte_2293B9B15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2293271FC + 4 * byte_2293B9B10[v4]))();
}

uint64_t sub_2293271FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_229327204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22932720CLL);
  return result;
}

uint64_t sub_229327218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x229327220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_229327224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22932722C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_229327238(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_229327240(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys()
{
  return &type metadata for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys;
}

unint64_t sub_22932725C()
{
  unint64_t result;

  result = qword_255A41F58;
  if (!qword_255A41F58)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293B9CBC, &type metadata for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255A41F58);
  }
  return result;
}

unint64_t sub_2293272A4()
{
  unint64_t result;

  result = qword_255A41F60;
  if (!qword_255A41F60)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293B9C2C, &type metadata for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255A41F60);
  }
  return result;
}

unint64_t sub_2293272EC()
{
  unint64_t result;

  result = qword_255A41F68;
  if (!qword_255A41F68)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293B9C54, &type metadata for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255A41F68);
  }
  return result;
}

uint64_t sub_229327330(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E7568437473616CLL && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2293B9350();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_229327480(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 280);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v26 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v7 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v9 = (char *)&v23 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)v2 + *(_QWORD *)(v4 + 304);
  swift_beginAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24 = v13;
  v17(v15, v16, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, a1, v5);
  swift_endAccess();
  v18 = sub_2293B8B40();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v12, v25, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
  v20 = &v9[*(int *)(TupleTypeMetadata3 + 48)];
  v21 = (uint64_t)&v9[*(int *)(TupleTypeMetadata3 + 64)];
  v17(v9, (uint64_t)v15, v5);
  v17(v20, v16, v5);
  sub_22932E9D0((uint64_t)v12, v21, &qword_255A41BC0);
  sub_2293B8D8C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, TupleTypeMetadata3);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v15, v5);
}

unint64_t sub_2293276AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42270);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF0);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42270);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_2293B8B40();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_229327864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42268);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CD8);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42268);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for CachedOwnershipRequest(0);
    result = sub_22932EA14(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, type metadata accessor for CachedOwnershipRequest);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_229327A1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42260);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE8);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42260);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    result = sub_22932E9D0(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, &qword_255A41CE0);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_229327BD4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D30);
  v2 = (_QWORD *)sub_2293B9260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_22936F454(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_229327CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42280);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D08);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42280);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_229327E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42230);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF8);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42230);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = (_QWORD *)(v7[7] + 16 * v16);
    v20 = *((_QWORD *)v9 + 1);
    *v19 = *(_QWORD *)v9;
    v19[1] = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22932802C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42248);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D10);
  v6 = sub_2293B9260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_229324E44(v12, (uint64_t)v5, &qword_255A42248);
    result = sub_22936F3E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2293B8A20();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 24 * v16;
    v20 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v19 = *(_OWORD *)v9;
    *(_QWORD *)(v19 + 16) = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2293281D4()
{
  return swift_retain();
}

uint64_t sub_2293281E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) = a1;
  return swift_release();
}

uint64_t sub_2293281FC(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID) = result;
  return result;
}

uint64_t sub_22932820C(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t Strong;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  char isUniquelyReferenced_nonNull_native;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[24];
  uint64_t v58;

  v52 = a3;
  v51 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v46 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v46 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v46 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - v16;
  v18 = sub_2293B8A20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v46 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v46 - v26;
  sub_229324E44(a1, (uint64_t)v57, &qword_255A41F90);
  if (!v58)
    return sub_2293251F8((uint64_t)v57, &qword_255A41F90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v48 = v9;
    v29 = v55;
    v30 = v56;
    ObjectType = swift_getObjectType();
    v49 = v29;
    v32 = sub_2293410E0(ObjectType, v30);
    v33 = *(_QWORD *)(v53 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
    if (v33 && (Strong = swift_weakLoadStrong()) != 0)
    {
      v46 = Strong;
      sub_229324E44((uint64_t)v51, (uint64_t)v17, &qword_255A41F70);
      v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v35 = v51(v17, 1, v18);
      v47 = v33;
      if (v35 == 1)
      {
        swift_retain();
        sub_2293251F8((uint64_t)v17, &qword_255A41F70);
      }
      else
      {
        v39 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
        v39(v27, v17, v18);
        v39(v25, v27, v18);
        v40 = v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v41 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 40);
        swift_retain();
        v41(v40, v25, v18);
        swift_endAccess();
      }
      sub_229324E44(v52, (uint64_t)v15, &qword_255A41F70);
      if (v51(v15, 1, v18) == 1)
      {
        sub_2293251F8((uint64_t)v15, &qword_255A41F70);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v15, v18);
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v12, v22, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
        v42 = v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
        swift_beginAccess();
        v43 = (uint64_t)v48;
        sub_229324E44(v42, (uint64_t)v48, &qword_255A41F70);
        swift_beginAccess();
        sub_22932E988((uint64_t)v12, v42);
        swift_endAccess();
        v44 = v50;
        sub_229324E44(v42, v50, &qword_255A41F70);
        sub_22935FF10(v43, v44);
        sub_2293251F8(v44, &qword_255A41F70);
        sub_2293251F8((uint64_t)v12, &qword_255A41F70);
        sub_2293251F8(v43, &qword_255A41F70);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      }
      sub_22932EA58(v32, v47);
      v45 = v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, v45, v18);
      swift_beginAccess();
      sub_22931DFFC((uint64_t)v25);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      v36 = v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, v36, v18);
      v37 = (uint64_t *)(v53 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v54 = *v37;
      *v37 = 0x8000000000000000;
      sub_229321F48(v32, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
      *v37 = v54;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2293287B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _BYTE v14[32];

  v2 = v1;
  v4 = sub_2293B8A20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2293251BC(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v9 = v13[2];
    ObjectType = swift_getObjectType();
    v11 = sub_2293410E0(ObjectType, v9) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    swift_beginAccess();
    sub_22931DFFC((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_endAccess();
    swift_release();
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) && swift_weakLoadStrong())
    {
      v12 = sub_2293410E0(ObjectType, v9);
      sub_22932EEC8(v12);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t SyncedPropertyBase.deinit()
{
  uint64_t v0;

  sub_22932E904(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SyncedPropertyBase.__deallocating_deinit()
{
  uint64_t v0;

  sub_22932E904(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_229328A20(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_229328A30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656E776FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2293B9350();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_229328BCC(uint64_t result)
{
  return result;
}

uint64_t sub_229328BD8(uint64_t result)
{
  return result;
}

uint64_t sub_229328BE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_229328C10 + 4 * byte_2293B9D40[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_229328C10()
{
  return 0x6D617473656D6974;
}

uint64_t sub_229328C2C()
{
  return 25705;
}

uint64_t sub_229328C38()
{
  return 0x72656E776FLL;
}

uint64_t sub_229328C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2C85DC](&unk_2293B9F18, a3);
  return sub_2293B9374();
}

uint64_t sub_229328C9C(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293B9F18, a1);
  return sub_2293B8F54();
}

uint64_t sub_229328CE8()
{
  MEMORY[0x22E2C85DC](&unk_2293B9F18);
  return sub_2293B8F6C();
}

uint64_t sub_229328D38()
{
  MEMORY[0x22E2C85DC](&unk_2293B9F18);
  return sub_2293B8F60();
}

unint64_t sub_229328D88@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229328A20(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_229328DB0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_229328BD8(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_229328DD8()
{
  unsigned __int8 *v0;

  return sub_229328BE0(*v0);
}

uint64_t sub_229328DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_229328A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_229328E04()
{
  unsigned __int8 *v0;

  return sub_229328BCC(*v0);
}

unint64_t sub_229328E20@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229328A20(a1);
  *a2 = result;
  return result;
}

uint64_t sub_229328E44(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293B9FB8, a1);
  return sub_2293B9458();
}

uint64_t sub_229328E78(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293B9FB8, a1);
  return sub_2293B9464();
}

uint64_t SyncedProperty.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SyncedProperty.init(from:)(a1);
  return v2;
}

_QWORD *SyncedProperty.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  _QWORD *v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  char v61;
  uint64_t v62;

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - v8;
  v54 = type metadata accessor for LamportTimestamp(0);
  v9 = MEMORY[0x24BDAC7A8](v54);
  v47 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v45 - v12;
  v13 = v4[35];
  v52 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v45 - v16;
  v17 = v4[37];
  v51 = v4[36];
  v18 = type metadata accessor for SyncedProperty.CodingKeys(255, v13, v51, v17);
  v59 = (void (*)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x22E2C85DC](&unk_2293B9FB8, v18);
  v19 = sub_2293B92B4();
  v49 = *(_QWORD *)(v19 - 8);
  v50 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v45 - v20;
  if (swift_conformsToProtocol2())
    v22 = v13;
  else
    v22 = 0;
  v57 = v4;
  *((_BYTE *)v2 + v4[39]) = v22 != 0;
  v23 = (char *)v2 + *(_QWORD *)(*v2 + 320);
  v24 = sub_2293B8A20();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25((char *)v2 + *(_QWORD *)(*v2 + 328), 1, 1, v24);
  v26 = *(_QWORD *)(*v2 + 336);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  v55 = v13;
  swift_getTupleTypeMetadata3();
  sub_2293B8DB0();
  swift_retain();
  *(_QWORD *)((char *)v2 + v26) = sub_2293B8DA4();
  v27 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v28 = v62;
  sub_2293B9434();
  if (v28)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    sub_2293251F8((uint64_t)v2 + *(_QWORD *)(*v2 + 320), &qword_255A41F70);
    sub_2293251F8((uint64_t)v2 + *(_QWORD *)(*v2 + 328), &qword_255A41F70);
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v29 = (uint64_t)v53;
    v59 = v25;
    v30 = v52;
    v62 = v24;
    v61 = 0;
    v31 = v55;
    v32 = v50;
    sub_2293B92A8();
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v2 + *(_QWORD *)(*v2 + 304), v56, v31);
    swift_release();
    v61 = 1;
    sub_229326FD0(&qword_255A41F78, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA86C);
    sub_2293B92A8();
    v57 = v21;
    v34 = v47;
    sub_229324D74(v29, v47, type metadata accessor for LamportTimestamp);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) = 0;
    *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__parentPropertyID) = -1;
    *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID) = -1;
    v35 = v30;
    v36 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers;
    *(_QWORD *)((char *)v2 + v36) = sub_229327CFC(MEMORY[0x24BEE4AF8]);
    sub_22932EA14(v34, (uint64_t)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
    v37 = (char *)v2 + *(_QWORD *)(*v2 + 304);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v48, v37, v31);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      LOBYTE(v60) = 2;
      sub_229326FD0(&qword_255A41EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
      v38 = (uint64_t)v46;
      v39 = v62;
      v40 = v57;
      sub_2293B92A8();
      v59((char *)v38, 0, 1, v39);
      v41 = (uint64_t)v2 + *(_QWORD *)(*v2 + 320);
      swift_beginAccess();
      sub_22932D7AC(v38, v41);
      swift_endAccess();
      LOBYTE(v60) = 3;
      v42 = (uint64_t)v45;
      sub_2293B9290();
      v43 = v49;
      sub_22932E904(v29, type metadata accessor for LamportTimestamp);
      (*(void (**)(_QWORD *, uint64_t))(v43 + 8))(v40, v32);
      v44 = (uint64_t)v2 + *(_QWORD *)(*v2 + 328);
      swift_beginAccess();
      sub_22932D7AC(v42, v44);
      swift_endAccess();
    }
    else
    {
      sub_22932E904(v29, type metadata accessor for LamportTimestamp);
      (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v57, v32);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    swift_release();
  }
  return v2;
}

uint64_t type metadata accessor for SyncedProperty.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedProperty.CodingKeys);
}

uint64_t SyncedProperty.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;

  v3 = (_QWORD *)*v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_2293B8A20();
  v44 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for LamportTimestamp(0);
  v7 = MEMORY[0x24BDAC7A8](v46);
  v47 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[35];
  ObjectType = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - v12;
  v14 = v3[36];
  v50 = v3[37];
  v15 = type metadata accessor for SyncedProperty.CodingKeys(255, v9, v14, v50);
  MEMORY[0x22E2C85DC](&unk_2293B9FB8, v15);
  v16 = sub_2293B92F0();
  v48 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = v52;
  sub_2293B944C();
  v20 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 304);
  swift_beginAccess();
  v21 = ObjectType;
  v22 = *(char **)(ObjectType + 16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v13, v20, v9);
  v57 = 0;
  v49 = v16;
  v23 = v53;
  sub_2293B92E4();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v49);
  }
  else
  {
    v53 = v22;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v9);
    v25 = v18;
    v26 = v19 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
    swift_beginAccess();
    v27 = v26;
    v28 = v47;
    sub_229324D74(v27, v47, type metadata accessor for LamportTimestamp);
    LOBYTE(v55) = 1;
    sub_229326FD0(&qword_255A41F88, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA844);
    v29 = v49;
    sub_2293B92E4();
    sub_22932E904(v28, type metadata accessor for LamportTimestamp);
    ((void (*)(char *, uint64_t, uint64_t))v53)(v45, v20, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v25;
      v31 = v56;
      ObjectType = swift_getObjectType();
      v52 = v31;
      v32 = sub_2293410E0(ObjectType, v31) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v33 = v44;
      v34 = v43;
      v35 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v32, v42);
      swift_release();
      v54 = 2;
      sub_229326FD0(&qword_255A41F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
      v53 = v30;
      sub_2293B92E4();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
      v36 = sub_2293410E0(ObjectType, v52) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
      swift_beginAccess();
      v37 = v36;
      v38 = v41;
      sub_229324E44(v37, v41, &qword_255A41F70);
      swift_release();
      v58 = 3;
      v39 = v53;
      sub_2293B92CC();
      v40 = v48;
      swift_unknownObjectRelease();
      sub_2293251F8(v38, &qword_255A41F70);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v39, v29);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v25, v29);
    }
  }
}

uint64_t SyncedProperty.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SyncedProperty.init(wrappedValue:)(a1);
  return v2;
}

_QWORD *SyncedProperty.init(wrappedValue:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33[4];

  v2 = v1;
  v4 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v29 - v8);
  v9 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_DWORD *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(v4 + 280);
  if (swift_conformsToProtocol2())
    v13 = v12;
  else
    v13 = 0;
  *((_BYTE *)v2 + *(_QWORD *)(v4 + 312)) = v13 != 0;
  v14 = (char *)v2 + *(_QWORD *)(*v2 + 320);
  v15 = sub_2293B8A20();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v16((char *)v2 + *(_QWORD *)(*v2 + 328), 1, 1, v15);
  v17 = *(_QWORD *)(*v2 + 336);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  swift_getTupleTypeMetadata3();
  sub_2293B8DB0();
  swift_retain();
  *(_QWORD *)((char *)v2 + v17) = sub_2293B8DA4();
  v18 = (char *)v2 + *(_QWORD *)(*v2 + 304);
  v19 = *(_QWORD *)(v12 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v32 = a1;
  v20(v18, a1, v12);
  swift_release();
  *v11 = 0;
  sub_2293B8B70();
  v21 = (char *)v11 + *(int *)(v9 + 24);
  v22 = type metadata accessor for PBUUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) = 0;
  *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__parentPropertyID) = -1;
  *(_DWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID) = -1;
  v23 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers;
  *(_QWORD *)((char *)v2 + v23) = sub_229327CFC(MEMORY[0x24BEE4AF8]);
  sub_22932EA14((uint64_t)v11, (uint64_t)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 312)) == 1)
  {
    v33[3] = v12;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
    v25 = v32;
    v20((char *)boxed_opaque_existential_0, v32, v12);
    v26 = v30;
    v16((char *)v30, 1, 1, v15);
    v27 = (uint64_t)v31;
    v16(v31, 1, 1, v15);
    swift_retain();
    sub_22932820C((uint64_t)v33, v26, v27);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v12);
    sub_2293251F8(v27, &qword_255A41F70);
    sub_2293251F8((uint64_t)v26, &qword_255A41F70);
    sub_2293251F8((uint64_t)v33, &qword_255A41F90);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v32, v12);
  }
  return v2;
}

uint64_t SyncedProperty.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 304);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 280) - 8) + 16))(a1, v4);
}

uint64_t sub_229329F9C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return SyncedProperty.wrappedValue.setter((uint64_t)v2);
}

uint64_t SyncedProperty.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata3;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(int *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v55;
  unint64_t *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  _QWORD *v70;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t Strong;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t *v114;
  int *v115;
  void (*v116)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123[3];
  uint64_t v124;

  v2 = v1;
  v122 = a1;
  v3 = *v1;
  v117 = type metadata accessor for LamportTimestamp(0);
  v98 = *(_QWORD *)(v117 - 8);
  v4 = MEMORY[0x24BDAC7A8](v117);
  v100 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v104 = (uint64_t)&v95 - v6;
  v97 = type metadata accessor for PropertyChangedMessage(0);
  MEMORY[0x24BDAC7A8](v97);
  v101 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = type metadata accessor for ValueData(0);
  v96 = *(_QWORD *)(v103 - 8);
  v8 = MEMORY[0x24BDAC7A8](v103);
  v99 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v102 = (uint64_t)&v95 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v107 = (uint64_t)&v95 - v12;
  v13 = *(_QWORD *)(v3 + 280);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v111 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v112 = TupleTypeMetadata3;
  v15 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v110 = (char *)&v95 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v109 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PBUUID(0);
  v115 = *(int **)(v18 - 8);
  v116 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18;
  MEMORY[0x24BDAC7A8](v18);
  v114 = (unint64_t *)((char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v106 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v105 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v95 - v24);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (int *)((char *)&v95 - v25);
  v27 = sub_2293B8A20();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v95 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v113 = (char *)&v95 - v36;
  v120 = v13;
  v37 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v121 = (char *)&v95 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = v37;
  v119 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller;
  v39 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  if (!v39)
  {
LABEL_4:
    v43 = (char *)v2 + *(_QWORD *)(v3 + 304);
    swift_beginAccess();
    v44 = v120;
    v108 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v108(v121, v43, v120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 24))(v43, v122, v44);
    swift_endAccess();
    v45 = *(_QWORD *)((char *)v2 + v119);
    if (v45)
    {
      v46 = *(void (**)(int *, uint64_t, uint64_t))(v28 + 16);
      v46(v26, v45 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v27);
      v95 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v95((char *)v26, 0, 1, v27);
      if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
      {
        v47 = v113;
        (*(void (**)(char *, int *, uint64_t))(v28 + 32))(v113, v26, v27);
        while (1)
        {
          v26 = (int *)((char *)v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp);
          swift_beginAccess();
          v46((int *)v34, (uint64_t)v47, v27);
          v46((int *)v31, (uint64_t)v34, v27);
          v56 = v114;
          sub_229357158((uint64_t)v31, v114);
          v57 = (uint64_t)v26 + *(int *)(v117 + 24);
          sub_2293251F8(v57, &qword_255A41F98);
          sub_22932EA14((uint64_t)v56, v57, type metadata accessor for PBUUID);
          (*((void (**)(uint64_t, _QWORD, uint64_t, _QWORD))v115 + 7))(v57, 0, 1, v116);
          v31 = *(char **)(v28 + 8);
          ((void (*)(char *, uint64_t))v31)(v34, v27);
          v58 = *v26 + 1;
          if (*v26 != -1)
            break;
          __break(1u);
LABEL_29:
          swift_once();
LABEL_14:
          v55 = __swift_project_value_buffer(v27, (uint64_t)qword_255A44CF0);
          v46 = *(void (**)(int *, uint64_t, uint64_t))(v28 + 16);
          v47 = v113;
          v46((int *)v113, v55, v27);
          sub_2293251F8((uint64_t)v26, &qword_255A41F70);
        }
        v115 = v26;
        v116 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43;
        *v26 = v58;
        ((void (*)(char *, uint64_t))v31)(v47, v27);
        swift_endAccess();
        v59 = sub_2293B8B40();
        v60 = (uint64_t)v109;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v109, 1, 1, v59);
        v61 = v112;
        v62 = v110;
        v63 = v27;
        v64 = v2;
        v65 = &v110[*(int *)(v112 + 48)];
        v66 = (uint64_t)&v110[*(int *)(v112 + 64)];
        v67 = v120;
        v68 = (void (*)(char *, uint64_t, uint64_t))v108;
        v108(v110, v121, v120);
        v69 = v65;
        v70 = v64;
        v68(v69, v122, v67);
        sub_22932E9D0(v60, v66, &qword_255A41BC0);
        sub_2293B8D8C();
        (*(void (**)(char *, uint64_t))(v111 + 8))(v62, v61);
        if ((*((_BYTE *)v64 + *(_QWORD *)(*v64 + 312)) & 1) != 0)
        {
          v124 = v67;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v123);
          v68((char *)boxed_opaque_existential_0, (uint64_t)v121, v67);
          sub_2293287B0((uint64_t)v123);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v123);
          v124 = v67;
          v72 = __swift_allocate_boxed_opaque_existential_0(v123);
          v68((char *)v72, (uint64_t)v116, v67);
          v73 = v105;
          v74 = v95;
          v95((char *)v105, 1, 1, v63);
          v75 = (uint64_t)v106;
          v74(v106, 1, 1, v63);
          sub_22932820C((uint64_t)v123, v73, v75);
          sub_2293251F8(v75, &qword_255A41F70);
          sub_2293251F8((uint64_t)v73, &qword_255A41F70);
          sub_2293251F8((uint64_t)v123, &qword_255A41F90);
        }
        v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v64 + v119);
        if (!v76)
          goto LABEL_26;
        Strong = swift_weakLoadStrong();
        if (!Strong)
          goto LABEL_26;
        v78 = Strong;
        if (*(_QWORD *)(Strong + 24))
        {
          swift_retain();
          swift_retain();
          sub_2293B8DBC();
          swift_release();
          v79 = v107;
          v80 = (uint64_t)v115;
          if (LOBYTE(v123[0]) == 1 && *(_BYTE *)(v78 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options) != 1)
          {
            swift_release();
            swift_release();
LABEL_26:
            v91 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
            v91(v122, v67);
            v93 = v121;
            v94 = v67;
            return ((uint64_t (*)(char *, uint64_t))v91)(v93, v94);
          }
        }
        else
        {
          swift_retain();
          v79 = v107;
          v80 = (uint64_t)v115;
        }
        sub_22932ADA0(v122, v79);
        sub_229324D74(v80, v104, type metadata accessor for LamportTimestamp);
        LODWORD(v119) = *(_DWORD *)((char *)v70 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID);
        sub_229324D74(v79, v102, type metadata accessor for ValueData);
        v81 = v101;
        *(_DWORD *)v101 = 0;
        v82 = v97;
        sub_2293B8B70();
        v83 = (uint64_t)v81 + *(int *)(v82 + 24);
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
        v85 = v117;
        v84(v83, 1, 1, v117);
        v86 = (uint64_t)v81 + *(int *)(v82 + 28);
        v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
        v116(v86, 1, 1, v103);
        v87 = v100;
        sub_229324D74(v104, v100, type metadata accessor for LamportTimestamp);
        sub_2293251F8(v83, &qword_255A41FA8);
        sub_22932EA14(v87, v83, type metadata accessor for LamportTimestamp);
        v84(v83, 0, 1, v85);
        *(_DWORD *)v81 = v119;
        v88 = v102;
        v89 = v99;
        sub_229324D74(v102, v99, type metadata accessor for ValueData);
        sub_2293251F8(v86, &qword_255A41FB0);
        sub_22932EA14(v89, v86, type metadata accessor for ValueData);
        v116(v86, 0, 1, v103);
        sub_22932E904(v88, type metadata accessor for ValueData);
        v90 = sub_22932E904(v104, type metadata accessor for LamportTimestamp);
        MEMORY[0x24BDAC7A8](v90);
        *(&v95 - 2) = v76;
        *(&v95 - 1) = v81;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB8);
        sub_2293B8A2C();
        swift_release();
        swift_release();
        v91 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
        v92 = v120;
        v91(v122, v120);
        sub_22932E904((uint64_t)v81, type metadata accessor for PropertyChangedMessage);
        sub_22932E904(v107, type metadata accessor for ValueData);
        v93 = v121;
        v94 = v92;
        return ((uint64_t (*)(char *, uint64_t))v91)(v93, v94);
      }
    }
    else
    {
      v95 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v95((char *)v26, 1, 1, v27);
    }
    if (qword_255A41AD0 != -1)
      goto LABEL_29;
    goto LABEL_14;
  }
  v40 = v122;
  v41 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 744);
  v42 = swift_retain();
  if ((v41(v42) & 1) != 0)
  {
    swift_release();
    v3 = *v2;
    v37 = v118;
    goto LABEL_4;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v48 = sub_2293B8D5C();
  __swift_project_value_buffer(v48, (uint64_t)qword_255A44C60);
  v49 = sub_2293B8D44();
  v50 = sub_2293B908C();
  v51 = os_log_type_enabled(v49, v50);
  v52 = v120;
  if (v51)
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_22931B000, v49, v50, "Controller does not exist or model is owned by somebody else", v53, 2u);
    MEMORY[0x22E2C869C](v53, -1, -1);
  }

  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v40, v52);
}

uint64_t sub_22932ADA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a2;
  v66 = a1;
  v3 = *v2;
  v68 = *(_QWORD *)(*v2 + 280);
  v4 = *(_QWORD *)(v68 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v59 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v59 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v59 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v29 = v3;
  v31 = (char *)&v59 - v30;
  if ((*((_BYTE *)v2 + *(_QWORD *)(v29 + 312)) & 1) != 0)
  {
    v60 = v28;
    v61 = v27;
    v62 = v26;
    v63 = v10;
    v64 = v29;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v32(v13, v66, v68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if (swift_dynamicCast())
    {
      v33 = v67;
      ObjectType = swift_getObjectType();
      v35 = sub_2293410E0(ObjectType, v33) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v36 = sub_2293B8A20();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v61, v35, v36);
      swift_release();
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v39(v38, 0, 1, v36);
      v40 = (uint64_t)v63;
      v41 = v68;
      v32(v63, v66, v68);
      v42 = v62;
      v39(v62, 1, 1, v36);
      sub_229353580(v38, v40, v42, v41, *(_QWORD *)(v64 + 296), v65);
      return swift_unknownObjectRelease();
    }
    v55 = sub_2293B8A20();
    v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
    v56(v20, 1, 1, v55);
    v57 = v68;
    v32(v7, v66, v68);
    v58 = v60;
    v56((char *)v60, 1, 1, v55);
    v49 = *(_QWORD *)(v64 + 296);
    v50 = v65;
    v51 = (uint64_t)v20;
    v52 = (uint64_t)v7;
    v53 = v58;
    v54 = v57;
  }
  else
  {
    v44 = v29;
    v45 = sub_2293B8A20();
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
    v46(v31, 1, 1, v45);
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v48 = v68;
    v47(v15, v66, v68);
    v46(v25, 1, 1, v45);
    v49 = *(_QWORD *)(v44 + 296);
    v50 = v65;
    v51 = (uint64_t)v31;
    v52 = (uint64_t)v15;
    v53 = (uint64_t)v25;
    v54 = v48;
  }
  return sub_229353580(v51, v52, v53, v54, v49, v50);
}

void (*SyncedProperty.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 280);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 304);
  swift_beginAccess();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  return sub_22932B224;
}

void sub_22932B224(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    SyncedProperty.wrappedValue.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    SyncedProperty.wrappedValue.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t SyncedProperty.projectedValue.getter()
{
  return swift_retain();
}

uint64_t sub_22932B2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for LamportTimestamp(0);
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v8 = (unsigned int *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ValueData(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PropertyChangedMessage(0);
  v17 = *(int *)(v16 + 28);
  v28 = a1;
  sub_229324E44(a1 + v17, (uint64_t)v11, &qword_255A41FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    *(_OWORD *)v15 = xmmword_2293B9AF0;
    sub_2293B8B70();
    v18 = &v15[*(int *)(v12 + 24)];
    v19 = type metadata accessor for PBUUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    v26[1] = v2;
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v21(v18, 1, 1, v19);
    v21(&v15[*(int *)(v12 + 28)], 1, 1, v19);
    sub_2293251F8((uint64_t)v11, &qword_255A41FB0);
  }
  else
  {
    sub_22932EA14((uint64_t)v11, (uint64_t)v15, type metadata accessor for ValueData);
  }
  sub_229324E44(v28 + *(int *)(v16 + 24), (uint64_t)v6, &qword_255A41FA8);
  v22 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v30) == 1)
  {
    *v8 = 0;
    sub_2293B8B70();
    v23 = (char *)v8 + *(int *)(v22 + 24);
    v24 = type metadata accessor for PBUUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    sub_2293251F8((uint64_t)v6, &qword_255A41FA8);
  }
  else
  {
    sub_22932EA14((uint64_t)v6, (uint64_t)v8, type metadata accessor for LamportTimestamp);
  }
  sub_22932B590((uint64_t)v15, v8, v29, 0);
  sub_22932E904((uint64_t)v8, type metadata accessor for LamportTimestamp);
  return sub_22932E904((uint64_t)v15, type metadata accessor for ValueData);
}

void sub_22932B590(uint64_t a1, unsigned int *a2, uint64_t a3, int a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  unsigned int *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint8_t *v68;
  char *v69;
  uint64_t *boxed_opaque_existential_0;
  char *v71;
  uint64_t *v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t TupleTypeMetadata3;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  unsigned int *v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  unsigned int *v105;
  uint64_t v106[3];
  uint64_t v107;

  v97 = a4;
  v87 = a3;
  v105 = a2;
  v101 = a1;
  v94 = *v4;
  v5 = *(_QWORD *)(v94 + 280);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v89 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v88 = (char *)&v84 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v5;
  v96 = *(_QWORD *)(v5 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v93 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v102 = (char *)&v84 - v12;
  v13 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v13);
  v99 = (unsigned int *)((char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v92 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v91 = (uint64_t)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v84 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v85 = (uint64_t)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v84 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v84 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v84 - v27;
  v29 = sub_2293B8A20();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v104 = (char *)&v84 - v34;
  v100 = v4;
  v35 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  if (!v35)
  {
    sub_2293B9230();
    __break(1u);
    return;
  }
  v36 = v35 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v36, (uint64_t)v28, &qword_255A41F70);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  v103 = v35;
  if (v37 == 1)
  {
    swift_retain();
    sub_2293251F8((uint64_t)v28, &qword_255A41F70);
    v38 = v102;
    v39 = v100;
LABEL_14:
    v52 = (uint64_t)v39 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
    swift_beginAccess();
    v53 = v99;
    sub_229324D74(v52, (uint64_t)v99, type metadata accessor for LamportTimestamp);
    v54 = sub_22935382C(v105, v53);
    sub_22932E904((uint64_t)v53, type metadata accessor for LamportTimestamp);
    v55 = v98;
    if ((v54 & 1) != 0 || (v97 & 1) != 0)
    {
      v60 = (uint64_t)v39 + *(_QWORD *)(*v39 + 304);
      swift_beginAccess();
      v61 = v96;
      v62 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
      v62(v38, v60, v55);
      v63 = v93;
      sub_229353E08(v55, *(_QWORD *)(v94 + 288), v93);
      v104 = (char *)v62;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 40))(v60, v63, v55);
      swift_endAccess();
      v69 = v38;
      if (*((_BYTE *)v39 + *(_QWORD *)(*v39 + 312)) == 1)
      {
        v107 = v55;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v106);
        v71 = v104;
        ((void (*)(uint64_t *, char *, uint64_t))v104)(boxed_opaque_existential_0, v38, v55);
        sub_2293287B0((uint64_t)v106);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
        v107 = v55;
        v72 = __swift_allocate_boxed_opaque_existential_0(v106);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v71)(v72, v60, v55);
        v73 = v84;
        sub_229353FBC((uint64_t)v84);
        v74 = v85;
        sub_22935419C(v85);
        sub_22932820C((uint64_t)v106, v73, v74);
        sub_2293251F8(v74, &qword_255A41F70);
        sub_2293251F8((uint64_t)v73, &qword_255A41F70);
        sub_2293251F8((uint64_t)v106, &qword_255A41F90);
      }
      v75 = (uint64_t)v99;
      sub_229324D74((uint64_t)v105, (uint64_t)v99, type metadata accessor for LamportTimestamp);
      swift_beginAccess();
      sub_22932E940(v75, v52);
      swift_endAccess();
      v76 = sub_2293B8B40();
      v77 = *(_QWORD *)(v76 - 8);
      v78 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v86, v87, v76);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
      v79 = TupleTypeMetadata3;
      v80 = v88;
      v81 = &v88[*(int *)(TupleTypeMetadata3 + 48)];
      v82 = (uint64_t)&v88[*(int *)(TupleTypeMetadata3 + 64)];
      v83 = v104;
      ((void (*)(char *, char *, uint64_t))v104)(v88, v69, v55);
      ((void (*)(char *, uint64_t, uint64_t))v83)(v81, v60, v55);
      sub_22932E9D0(v78, v82, &qword_255A41BC0);
      sub_2293B8D8C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v80, v79);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v69, v55);
    }
    else
    {
      if (qword_255A41A88 != -1)
        swift_once();
      v56 = sub_2293B8D5C();
      __swift_project_value_buffer(v56, (uint64_t)qword_255A44C60);
      v57 = sub_2293B8D44();
      v58 = sub_2293B908C();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v59 = 0;
        _os_log_impl(&dword_22931B000, v57, v58, "SyncedProperty: Timestamp failed and not forcing replace", v59, 2u);
        MEMORY[0x22E2C869C](v59, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
    }
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v104, v28, v29);
  v40 = (char *)v105 + *(int *)(v13 + 24);
  sub_229324E44((uint64_t)v40, (uint64_t)v21, &qword_255A41F98);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v42 = v95;
  v43 = v41(v21, 1, v95);
  swift_retain();
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if (v43 == 1)
  {
    v39 = v100;
    if (qword_255A41AD0 != -1)
      swift_once();
    v44 = __swift_project_value_buffer(v29, (uint64_t)qword_255A44CF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v44, v29);
    v38 = v102;
    v45 = v104;
  }
  else
  {
    v46 = (uint64_t)v40;
    v47 = v91;
    sub_229324E44(v46, v91, &qword_255A41F98);
    v48 = v41((char *)v47, 1, v42);
    v39 = v100;
    v49 = v92;
    if (v48 == 1)
    {
      *v92 = 0;
      v49[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v47, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14(v47, (uint64_t)v92, type metadata accessor for PBUUID);
    }
    v38 = v102;
    v45 = v104;
    sub_229357288();
    sub_22932E904((uint64_t)v49, type metadata accessor for PBUUID);
  }
  sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v50 = sub_2293B8F00();
  v51 = *(void (**)(char *, uint64_t))(v30 + 8);
  v51(v33, v29);
  if ((v50 & 1) != 0)
  {
    v51(v45, v29);
    goto LABEL_14;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v64 = sub_2293B8D5C();
  __swift_project_value_buffer(v64, (uint64_t)qword_255A44C60);
  v65 = sub_2293B8D44();
  v66 = sub_2293B908C();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v67 = 0;
    _os_log_impl(&dword_22931B000, v65, v66, "SyncedProperty: Cannot apply property changed message. Not the current owner or unowned", v67, 2u);
    v68 = v67;
    v45 = v104;
    MEMORY[0x22E2C869C](v68, -1, -1);
  }
  swift_release();

  v51(v45, v29);
}

uint64_t sub_22932C1B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t Strong;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v4 = v3;
  v40 = a3;
  v43 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v11 = (unsigned int *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ValueData(0);
  v37 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2293B8B94();
  MEMORY[0x24BDAC7A8](v17);
  v18 = type metadata accessor for PropertyCatchupData(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  v38 = v14;
  if (v21 && (Strong = swift_weakLoadStrong()) != 0)
  {
    v23 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options);
    swift_release();
    v39 = v23 ^ 1;
  }
  else
  {
    v39 = 0;
  }
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  sub_229324ECC(v43, a2);
  sub_2293B8B88();
  sub_229326FD0(&qword_255A42238, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBEC);
  sub_2293B8C60();
  v24 = v42;
  sub_229324E44((uint64_t)&v20[*(int *)(v18 + 20)], v42, &qword_255A41FB0);
  v25 = v38;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v24, 1, v38) == 1)
  {
    *(_OWORD *)v16 = xmmword_2293B9AF0;
    sub_2293B8B70();
    v26 = &v16[*(int *)(v25 + 24)];
    v27 = type metadata accessor for PBUUID(0);
    v43 = v9;
    v28 = v20;
    v29 = v27;
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v30(v26, 1, 1, v27);
    v31 = v29;
    v20 = v28;
    v9 = v43;
    v30(&v16[*(int *)(v25 + 28)], 1, 1, v31);
    sub_2293251F8(v42, &qword_255A41FB0);
  }
  else
  {
    sub_22932EA14(v24, (uint64_t)v16, type metadata accessor for ValueData);
  }
  sub_229324E44((uint64_t)&v20[*(int *)(v18 + 24)], (uint64_t)v8, &qword_255A41FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v41) == 1)
  {
    *v11 = 0;
    v32 = v41;
    sub_2293B8B70();
    v33 = (char *)v11 + *(int *)(v32 + 24);
    v34 = type metadata accessor for PBUUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
    sub_2293251F8((uint64_t)v8, &qword_255A41FA8);
  }
  else
  {
    sub_22932EA14((uint64_t)v8, (uint64_t)v11, type metadata accessor for LamportTimestamp);
  }
  sub_22932B590((uint64_t)v16, v11, v40, v39 & 1);
  sub_22932E904((uint64_t)v11, type metadata accessor for LamportTimestamp);
  sub_22932E904((uint64_t)v16, type metadata accessor for ValueData);
  return sub_22932E904((uint64_t)v20, type metadata accessor for PropertyCatchupData);
}

uint64_t *sub_22932C7B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t));
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t ObjectType;
  uint64_t v65;
  void (*v66)(char *, char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t));
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v1 = *v0;
  v73 = type metadata accessor for LamportTimestamp(0);
  v71 = *(_QWORD *)(v73 - 8);
  v2 = MEMORY[0x24BDAC7A8](v73);
  v72 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v78 = (uint64_t)&v63 - v4;
  v79 = type metadata accessor for PropertyCatchupData(0);
  MEMORY[0x24BDAC7A8](v79);
  v74 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for ValueData(0);
  v67 = *(_QWORD *)(v70 - 8);
  v6 = MEMORY[0x24BDAC7A8](v70);
  v68 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v77 = (uint64_t)&v63 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v63 - v11;
  v84 = (char *)v1;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 280);
  v13 = *((_QWORD *)v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v82 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v63 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v81 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v80 = (uint64_t)&v63 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v76 = (char *)&v63 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v63 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v63 - v28;
  v30 = sub_2293B8A20();
  v75 = *(_QWORD *)(v30 - 8);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
  v31(v29, 1, 1, v30);
  v31(v27, 1, 1, v30);
  v32 = *(_QWORD *)(*v0 + 304);
  v69 = v0;
  v33 = (char *)v0 + v32;
  swift_beginAccess();
  v34 = *(void (**)(char *, char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v13 + 16);
  v34(v17, v33, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
  v83 = v12;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v66 = v34;
    v35 = v86;
    v65 = v86;
    ObjectType = swift_getObjectType();
    v36 = sub_2293410E0(ObjectType, v35);
    sub_2293251F8((uint64_t)v29, &qword_255A41F70);
    v37 = v36 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v38 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v76, v37, v30);
    swift_release();
    v31((char *)v38, 0, 1, v30);
    sub_22932E9D0(v38, (uint64_t)v29, &qword_255A41F70);
    v39 = sub_2293410E0(ObjectType, v65);
    swift_unknownObjectRelease();
    sub_2293251F8((uint64_t)v27, &qword_255A41F70);
    v40 = v39 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    v41 = v40;
    v34 = v66;
    sub_229324E44(v41, (uint64_t)v27, &qword_255A41F70);
    swift_release();
  }
  v42 = v80;
  sub_229324E44((uint64_t)v29, v80, &qword_255A41F70);
  v44 = (uint64_t)v82;
  v43 = (uint64_t)v83;
  v34(v82, v33, v83);
  v45 = v81;
  sub_229324E44((uint64_t)v27, v81, &qword_255A41F70);
  v46 = (uint64_t)v85;
  v47 = v87;
  sub_229353580(v42, v44, v45, v43, *((_QWORD *)v84 + 37), v87);
  if (v46)
  {
    v48 = &qword_255A41F70;
    sub_2293251F8((uint64_t)v27, &qword_255A41F70);
    sub_2293251F8((uint64_t)v29, &qword_255A41F70);
  }
  else
  {
    v49 = v77;
    sub_229324D74(v47, v77, type metadata accessor for ValueData);
    v84 = v27;
    v85 = v29;
    v50 = (uint64_t)v69 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
    swift_beginAccess();
    sub_229324D74(v50, v78, type metadata accessor for LamportTimestamp);
    v51 = (uint64_t)v74;
    sub_2293B8B70();
    v52 = v79;
    v53 = v51 + *(int *)(v79 + 20);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
    v55 = v70;
    v54(v53, 1, 1, v70);
    v56 = v51 + *(int *)(v52 + 24);
    v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
    v57 = v73;
    v83(v56, 1, 1, v73);
    v58 = v49;
    v59 = v68;
    sub_229324D74(v58, v68, type metadata accessor for ValueData);
    sub_2293251F8(v53, &qword_255A41FB0);
    sub_22932EA14(v59, v53, type metadata accessor for ValueData);
    v54(v53, 0, 1, v55);
    v60 = v78;
    v61 = v72;
    sub_229324D74(v78, v72, type metadata accessor for LamportTimestamp);
    sub_2293251F8(v56, &qword_255A41FA8);
    sub_22932EA14(v61, v56, type metadata accessor for LamportTimestamp);
    v83(v56, 0, 1, v57);
    sub_22932E904(v60, type metadata accessor for LamportTimestamp);
    sub_22932E904(v77, type metadata accessor for ValueData);
    sub_229326FD0(&qword_255A42238, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBEC);
    v48 = (uint64_t *)sub_2293B8C6C();
    sub_22932E904(v51, type metadata accessor for PropertyCatchupData);
    sub_22932E904(v87, type metadata accessor for ValueData);
    sub_2293251F8((uint64_t)v84, &qword_255A41F70);
    sub_2293251F8((uint64_t)v85, &qword_255A41F70);
  }
  return v48;
}

uint64_t sub_22932CED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PBUUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v51 = (unint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v45 = (_QWORD **)((char *)&v45 - v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  v14 = sub_2293B8A20();
  v53 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v54 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v45 - v19;
  v21 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v0;
  v24 = v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
  swift_beginAccess();
  v46 = v24;
  sub_229324D74(v24, (uint64_t)v23, type metadata accessor for LamportTimestamp);
  v47 = v21;
  v25 = (uint64_t)&v23[*(int *)(v21 + 24)];
  sub_229324E44(v25, (uint64_t)v13, &qword_255A41F98);
  v52 = v4;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v21) = v26(v13, 1, v3);
  sub_2293251F8((uint64_t)v13, &qword_255A41F98);
  if ((_DWORD)v21 == 1)
  {
    if (qword_255A41AD0 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v14, (uint64_t)qword_255A44CF0);
    v28 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v20, v27, v14);
    v29 = v3;
    v30 = (uint64_t)v54;
  }
  else
  {
    sub_229324E44(v25, (uint64_t)v11, &qword_255A41F98);
    v31 = v26(v11, 1, v3);
    v29 = v3;
    v32 = v45;
    if (v31 == 1)
    {
      *v45 = 0;
      v32[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v11, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v11, (uint64_t)v45, type metadata accessor for PBUUID);
    }
    v28 = v53;
    v30 = (uint64_t)v54;
    sub_229357288();
    sub_22932E904((uint64_t)v32, type metadata accessor for PBUUID);
  }
  sub_22932E904((uint64_t)v23, type metadata accessor for LamportTimestamp);
  if (qword_255A41AD0 != -1)
    swift_once();
  v33 = __swift_project_value_buffer(v14, (uint64_t)qword_255A44CF0);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v34(v30, v33, v14);
  v35 = sub_2293B89F0();
  v36 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v36(v30, v14);
  result = ((uint64_t (*)(char *, uint64_t))v36)(v20, v14);
  if ((v35 & 1) != 0)
  {
    v38 = *(_QWORD *)(v48 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
    if (v38)
    {
      v39 = (uint64_t)v50;
      v34((uint64_t)v50, v38 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v14);
      v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v39, 1, v14);
      v41 = v49;
      if (v40 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v49, v39, v14);
LABEL_17:
        v42 = v46;
        swift_beginAccess();
        v34(v30, (uint64_t)v41, v14);
        v43 = v51;
        sub_229357158(v30, v51);
        v44 = v42 + *(int *)(v47 + 24);
        sub_2293251F8(v44, &qword_255A41F98);
        sub_22932EA14((uint64_t)v43, v44, type metadata accessor for PBUUID);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v44, 0, 1, v29);
        v36((uint64_t)v41, v14);
        return swift_endAccess();
      }
    }
    else
    {
      v39 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v50, 1, 1, v14);
      v41 = v49;
    }
    v34((uint64_t)v41, v33, v14);
    sub_2293251F8(v39, &qword_255A41F70);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_22932D418()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v17[4];

  v1 = *(_QWORD **)v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  result = MEMORY[0x24BDAC7A8](v3);
  v8 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v17 - v7 + 64);
  if (*(_BYTE *)(v0 + v1[39]) == 1)
  {
    v9 = v0 + v1[38];
    swift_beginAccess();
    v10 = v1[35];
    v17[3] = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, v9, v10);
    v12 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 320);
    swift_beginAccess();
    sub_229324E44(v12, (uint64_t)v8, &qword_255A41F70);
    v13 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 328);
    swift_beginAccess();
    sub_229324E44(v13, (uint64_t)v5, &qword_255A41F70);
    sub_22932820C((uint64_t)v17, v8, (uint64_t)v5);
    sub_2293251F8((uint64_t)v5, &qword_255A41F70);
    sub_2293251F8((uint64_t)v8, &qword_255A41F70);
    sub_2293251F8((uint64_t)v17, &qword_255A41F90);
    v14 = sub_2293B8A20();
    v15 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v15(v8, 1, 1, v14);
    swift_beginAccess();
    sub_22932D7AC((uint64_t)v8, v12);
    swift_endAccess();
    v15(v8, 1, 1, v14);
    swift_beginAccess();
    sub_22932D7AC((uint64_t)v8, v13);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_22932D61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD v12[3];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(v6 + 312)) == 1)
  {
    v9 = v1 + *(_QWORD *)(v6 + 304);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v9, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v10 = v12[2];
      ObjectType = swift_getObjectType();
      sub_2293410E0(ObjectType, v10);
      sub_22935CD30(a1);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void sub_22932D720()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v5[4];

  v1 = *v0;
  if (*((_BYTE *)v0 + *(_QWORD *)(*v0 + 312)) == 1)
  {
    v2 = (uint64_t)v0 + *(_QWORD *)(v1 + 304);
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 280);
    v5[3] = v3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v5);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v2, v3);
    sub_2293287B0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
}

uint64_t sub_22932D7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t SyncedProperty.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_2293B8D98();
}

uint64_t sub_22932D8B8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 280) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 304));
  sub_2293251F8(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320), &qword_255A41F70);
  sub_2293251F8(v0 + *(_QWORD *)(*(_QWORD *)v0 + 328), &qword_255A41F70);
  return swift_release();
}

uint64_t *SyncedProperty.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22932E904((uint64_t)v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 280) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 304));
  sub_2293251F8((uint64_t)v0 + *(_QWORD *)(*v0 + 320), &qword_255A41F70);
  sub_2293251F8((uint64_t)v0 + *(_QWORD *)(*v0 + 328), &qword_255A41F70);
  swift_release();
  return v0;
}

uint64_t SyncedProperty.__deallocating_deinit()
{
  SyncedProperty.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_22932DA08()
{
  return sub_22932C7B0();
}

uint64_t sub_22932DA2C(uint64_t a1)
{
  return SyncedProperty.receive<A>(subscriber:)(a1);
}

uint64_t sub_22932DA4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = SyncedProperty.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_22932DA74(_QWORD *a1)
{
  return SyncedProperty.encode(to:)(a1);
}

uint64_t sub_22932DA94(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_22932DAA4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_22932DAD8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_22932DAE8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22932DB08(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_22932DB78(v6, v7, a3);
  v8 = *a1 + 8;
  sub_2293B9110();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_22932DB78(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22932E090(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2293251BC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2293251BC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22932DC48@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_229368828(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_22932DC60()
{
  return MEMORY[0x24BEE40A8];
}

uint64_t sub_22932DC6C@<X0>(uint64_t a1@<X8>)
{
  return SyncedProperty.wrappedValue.getter(a1);
}

uint64_t sub_22932DC90()
{
  return 24;
}

__n128 sub_22932DC9C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_22932DCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_22932DCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_22932DCC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22932DCD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22932DCE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22932DCE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22932DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_22932DCF8()
{
  return type metadata accessor for SyncedPropertyBase();
}

uint64_t type metadata accessor for SyncedPropertyBase()
{
  uint64_t result;

  result = qword_255A41FE8;
  if (!qword_255A41FE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22932DD3C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LamportTimestamp(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SyncedPropertyBase()
{
  return swift_lookUpClassMethod();
}

void sub_22932DDDC()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_22932DEB8();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for SyncedProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncedProperty);
}

uint64_t method lookup function for SyncedProperty()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncedProperty.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of SyncedProperty.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

void sub_22932DEB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255A421A8[0])
  {
    sub_2293B8A20();
    v0 = sub_2293B9104();
    if (!v1)
      atomic_store(v0, qword_255A421A8);
  }
}

uint64_t sub_22932DF0C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22932DF14(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_22932DFA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22932DFF0 + 4 * byte_2293B9D49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22932E024 + 4 * byte_2293B9D44[v4]))();
}

uint64_t sub_22932E024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22932E02C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22932E034);
  return result;
}

uint64_t sub_22932E040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22932E048);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22932E04C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22932E054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22932E060()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_22932E070()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_22932E080()
{
  JUMPOUT(0x22E2C85DCLL);
}

uint64_t sub_22932E090(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2293B911C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22932E248(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2293B91B8();
  if (!v8)
  {
    sub_2293B9224();
    __break(1u);
LABEL_17:
    result = sub_2293B926C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22932E248(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22932E2DC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22932E4B4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22932E4B4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22932E2DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22932E450(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2293B9194();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2293B9224();
      __break(1u);
LABEL_10:
      v2 = sub_2293B8F30();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2293B926C();
    __break(1u);
LABEL_14:
    result = sub_2293B9224();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_22932E450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A42250);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22932E4B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A42250);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

unint64_t sub_22932E600(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D28);
    v3 = (_QWORD *)sub_2293B9260();
    for (i = a1 + 32; ; i += 24)
    {
      sub_229324E44(i, (uint64_t)&v11, &qword_255A42278);
      v5 = v11;
      result = sub_22936F3B4(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      result = sub_22932513C((uint64_t)&v12, v3[7] + 16 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22932E700(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D20);
    v3 = (_QWORD *)sub_2293B9260();
    for (i = a1 + 32; ; i += 16)
    {
      sub_229324E44(i, (uint64_t)&v11, &qword_255A42258);
      v5 = v11;
      result = sub_22936F4B8(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      result = sub_229325028((uint64_t)&v12, v3[7] + 8 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22932E804(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  unint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D00);
  v3 = (_QWORD *)sub_2293B9260();
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_22936F3B4(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = (uint64_t *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    sub_229324ECC(v5, v6);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_DWORD *)v9 - 4);
    v5 = *(v9 - 1);
    v6 = *v9;
    result = sub_22936F3B4(v4);
    v9 += 3;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_22932E904(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22932E940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LamportTimestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22932E988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_22932E9D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22932EA14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22932EA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v6 = sub_2293B8B40();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2293B8A20();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  swift_beginAccess();
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v42 = v16;
  v41(v15, v16, v12);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = 0x8000000000000000;
  sub_229321F48(a1, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 32) = v44;
  swift_bridgeObjectRelease();
  v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v15, v12);
  swift_endAccess();
  v19 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
  swift_beginAccess();
  sub_229324E44(v19, (uint64_t)v11, &qword_255A41BC0);
  sub_22935C6F4(v3, 2, 1, (uint64_t)v11);
  sub_2293251F8((uint64_t)v11, &qword_255A41BC0);
  if (qword_255A41A88 != -1)
    swift_once();
  v20 = sub_2293B8D5C();
  __swift_project_value_buffer(v20, (uint64_t)qword_255A44C60);
  swift_retain_n();
  swift_retain_n();
  v21 = sub_2293B8D44();
  v22 = sub_2293B90B0();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v44 = v38;
    *(_DWORD *)v24 = 136315394;
    v36[1] = v24 + 4;
    v37 = v23;
    v25 = v8;
    v26 = v39;
    v27 = v18;
    v28 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v25, v3 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v40);
    sub_2293B8B34();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v28);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v29 = sub_2293B9308();
    v31 = v30;
    v27(v15, v12);
    v43 = sub_22932DB78(v29, v31, &v44);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    v41(v15, v42, v12);
    v32 = sub_2293B89E4();
    v34 = v33;
    v27(v15, v12);
    v43 = sub_22932DB78(v32, v34, &v44);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22931B000, v21, (os_log_type_t)v37, "SyncedModelManager[%s] Registered dynamic SyncedModel with uuid:%s", (uint8_t *)v24, 0x16u);
    v35 = v38;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v35, -1, -1);
    MEMORY[0x22E2C869C](v24, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
}

void sub_22932EEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  os_log_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38[3];

  v2 = v1;
  v35 = sub_2293B8B40();
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B8A20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  swift_beginAccess();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  swift_beginAccess();
  sub_22931DFFC((uint64_t)v10);
  v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  v36(v10, v7);
  swift_endAccess();
  swift_release();
  sub_22935D310();
  if (qword_255A41A88 != -1)
    swift_once();
  v13 = sub_2293B8D5C();
  __swift_project_value_buffer(v13, (uint64_t)qword_255A44C60);
  swift_retain_n();
  swift_retain_n();
  v14 = sub_2293B8D44();
  v15 = sub_2293B90B0();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v31 = v12;
    v18 = v17;
    v34 = swift_slowAlloc();
    v38[0] = v34;
    *(_DWORD *)v18 = 136315394;
    v30 = v18 + 4;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v33 = v16;
    v20 = v35;
    v19(v6, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v35);
    v32 = v14;
    sub_2293B8B34();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v21 = sub_2293B9308();
    v23 = v22;
    v24 = v36;
    v36(v10, v7);
    v37 = sub_22932DB78(v21, v23, v38);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v31(v10, v11, v7);
    v25 = sub_2293B89E4();
    v27 = v26;
    v24(v10, v7);
    v37 = sub_22932DB78(v25, v27, v38);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    v28 = v32;
    _os_log_impl(&dword_22931B000, v32, (os_log_type_t)v33, "SyncedModelManager[%s] Unregistered dynamic SyncedModel with uuid:%s", (uint8_t *)v18, 0x16u);
    v29 = v34;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v29, -1, -1);
    MEMORY[0x22E2C869C](v18, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
}

BOOL static CatchupKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CatchupKind.hash(into:)()
{
  return sub_2293B93E0();
}

uint64_t CatchupKind.hashValue.getter()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

BOOL sub_22932F30C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SyncedModelOptions.catchupKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SyncedModelOptions.catchupKind.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SyncedModelOptions.catchupKind.modify())()
{
  return nullsub_1;
}

SyncedModels::SyncedModelOptions __swiftcall SyncedModelOptions.init()()
{
  _BYTE *v0;
  SyncedModels::SyncedModelOptions result;

  *v0 = 0;
  return result;
}

SyncedModels::SyncedModelOptions __swiftcall SyncedModelOptions.init(catchupKind:)(SyncedModels::SyncedModelOptions catchupKind)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)catchupKind.catchupKind;
  return catchupKind;
}

uint64_t SyncedModelOptions.description.getter()
{
  sub_2293B9188();
  sub_2293B8F24();
  sub_2293B9200();
  return 0;
}

unint64_t sub_22932F3F0()
{
  unint64_t result;

  result = qword_255A42288;
  if (!qword_255A42288)
  {
    result = MEMORY[0x22E2C85DC](&protocol conformance descriptor for CatchupKind, &type metadata for CatchupKind);
    atomic_store(result, (unint64_t *)&qword_255A42288);
  }
  return result;
}

_BYTE *sub_22932F440(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CatchupKind()
{
  return &type metadata for CatchupKind;
}

uint64_t _s12SyncedModels11CatchupKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SyncedModels11CatchupKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22932F538 + 4 * byte_2293BA025[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22932F56C + 4 * byte_2293BA020[v4]))();
}

uint64_t sub_22932F56C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22932F574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22932F57CLL);
  return result;
}

uint64_t sub_22932F588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22932F590);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22932F594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22932F59C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelOptions()
{
  return &type metadata for SyncedModelOptions;
}

uint64_t sub_22932F5B8(char *a1, char a2, void *a3, unsigned __int8 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  os_log_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  _QWORD v43[2];
  void (*v44)(char *, uint64_t);
  os_log_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  id v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v5 = v4;
  v52 = sub_2293B8A20();
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2293B8B40();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v43 - v16;
  v18 = *a4;
  v19 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = sub_229327CFC(v19);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_remoteParticipants) = v19;
  v20 = (_QWORD *)(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_sendDataHandler);
  *v20 = 0;
  v20[1] = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_precatchupMessageBuffer) = v19;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  v21(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, a1, v11);
  *(_BYTE *)(v5 + 48) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  v51 = v18;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options) = v18;
  v22 = qword_255A41A88;
  v53 = a3;
  if (v22 != -1)
    swift_once();
  v23 = sub_2293B8D5C();
  __swift_project_value_buffer(v23, (uint64_t)qword_255A44C60);
  v21((uint64_t)v17, a1, v11);
  swift_retain_n();
  v24 = sub_2293B8D44();
  v25 = sub_2293B90B0();
  v26 = v25;
  v27 = v17;
  if (os_log_type_enabled(v24, v25))
  {
    v28 = swift_slowAlloc();
    v48 = a1;
    v29 = v28;
    v47 = swift_slowAlloc();
    v57 = v47;
    *(_DWORD *)v29 = 136315650;
    v46 = v26;
    v21((uint64_t)v15, (char *)(v5 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant), v11);
    v30 = v50;
    v45 = v24;
    sub_2293B8B34();
    v44 = *(void (**)(char *, uint64_t))(v12 + 8);
    v44(v15, v11);
    v43[1] = sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v31 = v52;
    v32 = sub_2293B9308();
    v34 = v33;
    v49 = *(_QWORD *)(v49 + 8);
    ((void (*)(char *, uint64_t))v49)(v30, v31);
    v55 = sub_22932DB78(v32, v34, &v57);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v55 = 0;
    v56 = 0xE000000000000000;
    sub_2293B9188();
    sub_2293B8F24();
    v54 = v51;
    sub_2293B9200();
    v55 = sub_22932DB78(v55, v56, &v57);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2080;
    sub_2293B8B34();
    v35 = sub_2293B9308();
    v37 = v36;
    ((void (*)(char *, uint64_t))v49)(v30, v31);
    v55 = sub_22932DB78(v35, v37, &v57);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    v38 = v44;
    v44(v27, v11);
    v39 = v45;
    _os_log_impl(&dword_22931B000, v45, (os_log_type_t)v46, "SyncedModelManager[%s] Init with options: %s. Local participant:%s", (uint8_t *)v29, 0x20u);
    v40 = v47;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v40, -1, -1);
    MEMORY[0x22E2C869C](v29, -1, -1);

    v38(v48, v11);
  }
  else
  {

    v41 = *(void (**)(char *, uint64_t))(v12 + 8);
    v41(v17, v11);
    swift_release_n();
    v41(a1, v11);
  }
  return v5;
}

uint64_t sub_22932FA8C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[2];
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v1 = v0;
  v2 = sub_2293B8B58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (_QWORD *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = v1[3];
  if (!result)
    return result;
  v39 = v8;
  v35 = v5;
  v36 = v3;
  v12 = v2;
  v37 = swift_retain();
  sub_22935BD28();
  swift_beginAccess();
  v13 = v1[4];
  v16 = *(_QWORD *)(v13 + 64);
  v15 = v13 + 64;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v1[4] + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v14;
  v20 = (unint64_t)(v17 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  while (1)
  {
    if (v19)
    {
      v19 &= v19 - 1;
      goto LABEL_6;
    }
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
    if (v22 >= v20)
      goto LABEL_24;
    v23 = *(_QWORD *)(v15 + 8 * v22);
    ++v21;
    if (!v23)
    {
      v21 = v22 + 1;
      if (v22 + 1 >= v20)
        goto LABEL_24;
      v23 = *(_QWORD *)(v15 + 8 * v21);
      if (!v23)
      {
        v21 = v22 + 2;
        if (v22 + 2 >= v20)
          goto LABEL_24;
        v23 = *(_QWORD *)(v15 + 8 * v21);
        if (!v23)
        {
          v21 = v22 + 3;
          if (v22 + 3 >= v20)
            goto LABEL_24;
          v23 = *(_QWORD *)(v15 + 8 * v21);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v19 = (v23 - 1) & v23;
LABEL_6:
    swift_retain();
    sub_22935BD28();
    result = swift_release();
  }
  v24 = v22 + 4;
  if (v24 < v20)
  {
    v23 = *(_QWORD *)(v15 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        v21 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_31;
        if (v21 >= v20)
          goto LABEL_24;
        v23 = *(_QWORD *)(v15 + 8 * v21);
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v21 = v24;
    goto LABEL_23;
  }
LABEL_24:
  swift_release();
  v25 = v1 + 2;
  swift_beginAccess();
  v26 = v1[2];
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v33[1] = v1[2];
    v34 = v1 + 2;
    v39 = (char *)v10 + *((int *)v39 + 5);
    v28 = v26 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v38 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    v29 = (uint64_t)v35;
    v30 = v36;
    do
    {
      sub_229324D74(v28, (uint64_t)v10, type metadata accessor for SyncedModelManager.MessageWrapper);
      v31 = *v10;
      v32 = v10[1];
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v29, v39, v12);
      sub_229324ECC(v31, v32);
      sub_22932E904((uint64_t)v10, type metadata accessor for SyncedModelManager.MessageWrapper);
      sub_22932FDB8(v31, v32, v29);
      sub_229324F6C(v31, v32);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v12);
      v28 += v38;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v25 = v34;
  }
  *v25 = MEMORY[0x24BEE4AF8];
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_22932FDB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  v8 = sub_2293B8B40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2293B8A20();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41A88 != -1)
    swift_once();
  v15 = sub_2293B8D5C();
  __swift_project_value_buffer(v15, (uint64_t)qword_255A44C60);
  swift_retain();
  sub_229324ECC(a1, a2);
  swift_retain();
  sub_229324ECC(a1, a2);
  v16 = sub_2293B8D44();
  v17 = sub_2293B908C();
  v34 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v32 = a3;
    v19 = v18;
    v31 = swift_slowAlloc();
    v36 = v31;
    *(_DWORD *)v19 = 136315394;
    v29 = v19 + 4;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v8);
    v30 = v16;
    sub_2293B8B34();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_2293B9308();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v12);
    v35 = sub_22932DB78(v20, v22, &v36);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    sub_229324ECC(a1, a2);
    v23 = sub_2293B899C();
    v25 = v24;
    sub_229324F6C(a1, a2);
    v35 = sub_22932DB78(v23, v25, &v36);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    sub_229324F6C(a1, a2);
    sub_229324F6C(a1, a2);
    v16 = v30;
    _os_log_impl(&dword_22931B000, v30, (os_log_type_t)v34, "SyncedModelManager[%s] Sending data of size:%s", (uint8_t *)v19, 0x16u);
    v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v26, -1, -1);
    v27 = v19;
    a3 = v32;
    MEMORY[0x22E2C869C](v27, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_229324F6C(a1, a2);
    sub_229324F6C(a1, a2);
  }

  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4
                                                                  + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_sendDataHandler);
  if (v28)
  {
    swift_retain();
    v28(a1, a2, a3);
    sub_2293245B4((uint64_t)v28);
  }
}

uint64_t sub_229330158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  int v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  _QWORD *v46;
  uint8_t *v47;
  uint8_t *v48;
  char *v49;
  uint64_t v50;
  uint8_t *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  NSObject *v57;
  uint8_t *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint8_t *v60;
  uint64_t v61;
  uint8_t *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint8_t *v69;
  void (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  uint64_t result;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  char *v78;
  uint8_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  NSObject *v90;
  uint8_t *v91;
  uint64_t v92;
  void (*v93)(_QWORD, _QWORD, _QWORD);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  uint8_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[4];

  v2 = v1;
  v4 = sub_2293B8B58();
  v95 = *(_QWORD *)(v4 - 8);
  v96 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v94 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v6);
  v97 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2293B8B40();
  v9 = *(uint8_t **)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v100 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2293B8A20();
  v12 = *(_QWORD **)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41A88 != -1)
    swift_once();
  v15 = sub_2293B8D5C();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_255A44C60);
  swift_retain_n();
  swift_retain_n();
  v102 = (uint8_t *)v16;
  v17 = sub_2293B8D44();
  LODWORD(v93) = sub_2293B90B0();
  v18 = os_log_type_enabled(v17, (os_log_type_t)v93);
  v103 = v14;
  v101 = v12;
  v98 = a1;
  v99 = v8;
  if (v18)
  {
    v90 = v17;
    v19 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    v106[0] = v89;
    *(_DWORD *)v19 = 136315650;
    v20 = a1;
    v21 = v100;
    (*((void (**)(char *, uint64_t, uint64_t))v9 + 2))(v100, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v8);
    sub_2293B8B34();
    v91 = v9;
    (*((void (**)(char *, uint64_t))v9 + 1))(v21, v8);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_2293B9308();
    v24 = v23;
    v25 = (void (*)(char *, uint64_t))v12[1];
    v25(v14, v11);
    v104 = sub_22932DB78(v22, v24, v106);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v26 = v20 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v27 = (void (*)(char *, uint64_t, uint64_t))v12[2];
    v27(v14, v26, v11);
    v28 = sub_2293B89E4();
    v30 = v29;
    v88 = v25;
    v25(v14, v11);
    v105 = sub_22932DB78(v28, v30, v106);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    if (qword_255A41AD8 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v11, (uint64_t)qword_255A44D08);
    v27(v14, v31, v11);
    v32 = sub_2293B89E4();
    v34 = v33;
    v88(v14, v11);
    v105 = sub_22932DB78(v32, v34, v106);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    v35 = (uint8_t *)v90;
    _os_log_impl(&dword_22931B000, v90, (os_log_type_t)v93, "SyncedModelManager[%s] Setting root model that had original UUID=%s to UUID=%s", (uint8_t *)v19, 0x20u);
    v36 = v89;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v36, -1, -1);
    MEMORY[0x22E2C869C](v19, -1, -1);

    v12 = v101;
    v9 = v91;
    a1 = v98;
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  if (qword_255A41AD8 != -1)
    swift_once();
  v37 = __swift_project_value_buffer(v11, (uint64_t)qword_255A44D08);
  v38 = v103;
  ((void (*)(char *, uint64_t, uint64_t))v12[2])(v103, v37, v11);
  v39 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  swift_beginAccess();
  v40 = (void (*)(uint64_t, char *, uint64_t))v12[5];
  v41 = v11;
  v40(v39, v38, v11);
  swift_endAccess();
  *(_QWORD *)(v2 + 24) = a1;
  swift_release();
  v42 = *(unsigned __int8 *)(v2 + 48);
  swift_retain_n();
  swift_retain();
  v43 = sub_2293B8D44();
  v44 = sub_2293B90B0();
  v45 = os_log_type_enabled(v43, v44);
  v46 = &unk_255A44000;
  v92 = v41;
  if (v42 != 1)
  {
    if (v45)
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      v62 = v9;
      v63 = v38;
      v93 = (void (*)(_QWORD, _QWORD, _QWORD))v61;
      *(_DWORD *)v60 = 136315138;
      v106[0] = v61;
      v90 = (v60 + 4);
      v91 = v60;
      v50 = v99;
      v64 = v100;
      (*((void (**)(char *, uint64_t, uint64_t))v62 + 2))(v100, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v99);
      sub_2293B8B34();
      (*((void (**)(char *, uint64_t))v62 + 1))(v64, v50);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v65 = sub_2293B9308();
      v67 = v66;
      v68 = v63;
      v9 = v62;
      v46 = (_QWORD *)&unk_255A44000;
      ((void (*)(char *, uint64_t))v101[1])(v68, v41);
      v105 = sub_22932DB78(v65, v67, v106);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      v69 = v91;
      _os_log_impl(&dword_22931B000, v43, v44, "SyncedModelManager[%s] Not initial authority so sending catchup request", v91, 0xCu);
      v70 = v93;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v70, -1, -1);
      MEMORY[0x22E2C869C](v69, -1, -1);

    }
    else
    {

      swift_release_n();
      v50 = v99;
    }
    v73 = (uint64_t)v97;
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v9 + 7))(v97, 1, 1, v50);
    sub_22935C6F4(v2, 1, 1, v73);
    sub_2293251F8(v73, &qword_255A41BC0);
    LOBYTE(v106[0]) = 1;
    swift_retain();
    sub_2293B8DC8();
    swift_release();
    goto LABEL_20;
  }
  if (v45)
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = (uint8_t *)swift_slowAlloc();
    v91 = v48;
    v90 = v47;
    *(_DWORD *)v47 = 136315138;
    v106[0] = (uint64_t)v48;
    v89 = (uint64_t)(v47 + 4);
    v93 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v9 + 2);
    v50 = v99;
    v49 = v100;
    v93(v100, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v99);
    v51 = v9;
    v52 = v103;
    sub_2293B8B34();
    (*((void (**)(char *, uint64_t))v51 + 1))(v49, v50);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v53 = sub_2293B9308();
    v55 = v54;
    v56 = v52;
    v9 = v51;
    ((void (*)(char *, uint64_t))v101[1])(v56, v41);
    v105 = sub_22932DB78(v53, v55, v106);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    v57 = v90;
    _os_log_impl(&dword_22931B000, v43, v44, "SyncedModelManager[%s] Is initial authority", (uint8_t *)v90, 0xCu);
    v58 = v91;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v58, -1, -1);
    v46 = (_QWORD *)&unk_255A44000;
    MEMORY[0x22E2C869C](v57, -1, -1);

    v59 = (void (*)(char *, uint64_t, uint64_t))v93;
  }
  else
  {

    swift_release_n();
    v59 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v9 + 2);
    v50 = v99;
  }
  v71 = (uint64_t)v97;
  v59(v97, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v50);
  (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v9 + 7))(v71, 0, 1, v50);
  sub_22935C6F4(v2, 1, 1, v71);
  result = sub_2293251F8(v71, &qword_255A41BC0);
  if ((*(_BYTE *)(v2 + v46[405]) & 1) != 0)
LABEL_20:
    result = sub_229330D2C();
  if (*(_BYTE *)(v2 + v46[405]) == 1)
  {
    swift_retain_n();
    v74 = sub_2293B8D44();
    v75 = sub_2293B90B0();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_DWORD *)v76 = 136315138;
      v106[0] = v77;
      v102 = v76 + 4;
      v78 = v100;
      (*((void (**)(char *, uint64_t, uint64_t))v9 + 2))(v100, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v50);
      v79 = v9;
      v80 = v103;
      sub_2293B8B34();
      (*((void (**)(char *, uint64_t))v79 + 1))(v78, v50);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v81 = v92;
      v82 = sub_2293B9308();
      v84 = v83;
      ((void (*)(char *, uint64_t))v101[1])(v80, v81);
      v105 = sub_22932DB78(v82, v84, v106);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22931B000, v74, v75, "SyncedModelManager[%s] Broadcasting existing state", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v77, -1, -1);
      MEMORY[0x22E2C869C](v76, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v86 = (uint64_t)v94;
    v85 = v95;
    v87 = v96;
    (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, *MEMORY[0x24BDD1F50], v96);
    sub_2293311A8(v86);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
  }
  return result;
}

uint64_t sub_229330D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = sub_2293B8B58();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v41);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CatchupRequestMessage(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v35 - v9;
  v10 = sub_2293B8B40();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2293B8A20();
  v38 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41A88 != -1)
    swift_once();
  v17 = sub_2293B8D5C();
  __swift_project_value_buffer(v17, (uint64_t)qword_255A44C60);
  swift_retain_n();
  v18 = sub_2293B8D44();
  v19 = sub_2293B90B0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v37 = v21;
    v39 = v1;
    *(_DWORD *)v20 = 136315138;
    v47 = v21;
    v35[1] = v20 + 4;
    v36 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v39 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v10);
    sub_2293B8B34();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_2293B9308();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v14);
    v46 = sub_22932DB78(v22, v24, &v47);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    v25 = v36;
    _os_log_impl(&dword_22931B000, v18, v19, "SyncedModelManager[%s] Requesting catchup", v36, 0xCu);
    v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v26, -1, -1);
    MEMORY[0x22E2C869C](v25, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v27 = (uint64_t)v42;
  sub_2293B8B70();
  v28 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v5, 1, 1, v28);
  sub_2293B8B70();
  v30 = v40;
  sub_229324D74(v27, v40, type metadata accessor for CatchupRequestMessage);
  sub_2293251F8((uint64_t)v5, qword_255A42398);
  sub_22932EA14(v30, (uint64_t)v5, type metadata accessor for CatchupRequestMessage);
  swift_storeEnumTagMultiPayload();
  v29(v5, 0, 1, v28);
  v32 = (uint64_t)v43;
  v31 = v44;
  v33 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x24BDD1F50], v45);
  sub_2293390A8((uint64_t)v5, v32);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
  sub_22932E904((uint64_t)v5, type metadata accessor for SyncMessage);
  return sub_22932E904(v27, type metadata accessor for CatchupRequestMessage);
}

void sub_2293311A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  _QWORD *v41;
  void (*v42)(_QWORD);
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  uint64_t *v62;
  char v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint8_t *v76;
  void (*v77)(_QWORD);
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98[3];
  uint64_t v99;

  v85 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v85);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for CatchupResponseMessage(0);
  v5 = MEMORY[0x24BDAC7A8](v83);
  v84 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v75 - v7;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A424C0);
  MEMORY[0x24BDAC7A8](v90);
  v93 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v91 = (uint64_t)&v75 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v75 - v15;
  v92 = type metadata accessor for ModelData(0);
  MEMORY[0x24BDAC7A8](v92);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2293B8B40();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v96 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2293B8A20();
  v95 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v94 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v1;
  v24 = *(_QWORD *)(v1 + 24);
  if (v24)
  {
    v87 = v20;
    v80 = v4;
    v81 = a1;
    v25 = qword_255A41A88;
    swift_retain();
    if (v25 != -1)
      swift_once();
    v26 = sub_2293B8D5C();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v82 = v27;
    v28 = sub_2293B8D44();
    v29 = sub_2293B90B0();
    v30 = os_log_type_enabled(v28, v29);
    v86 = v18;
    v89 = v24;
    v78 = v22;
    v79 = v8;
    if (v30)
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v77 = (void (*)(_QWORD))v32;
      *(_DWORD *)v31 = 136315138;
      v98[0] = v32;
      v76 = v31 + 4;
      v33 = v96;
      v34 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v96, v97 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v19);
      v35 = v94;
      sub_2293B8B34();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v19);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v36 = sub_2293B9308();
      v37 = v22;
      v39 = v38;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v35, v37);
      v99 = sub_22932DB78(v36, v39, v98);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      v40 = v29;
      v41 = (_QWORD *)&unk_255A44000;
      _os_log_impl(&dword_22931B000, v28, v40, "SyncedModelManager[%s] Sending catchup response for root model.", v31, 0xCu);
      v42 = v77;
      swift_arrayDestroy();
      v18 = v86;
      MEMORY[0x22E2C869C](v42, -1, -1);
      v43 = v31;
      v24 = v89;
      MEMORY[0x22E2C869C](v43, -1, -1);

    }
    else
    {

      swift_release_n();
      v41 = &unk_255A44000;
      v34 = v87;
    }
    sub_22935E608((uint64_t)v18);
    v55 = *(void (**)(_QWORD))(v34 + 16);
    v76 = (uint8_t *)(v97 + v41[404]);
    v77 = v55;
    v55(v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v16, 0, 1, v19);
    v56 = v24 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
    swift_beginAccess();
    v57 = v91;
    sub_229324E44(v56, v91, &qword_255A41BC0);
    v58 = v93;
    v59 = v93 + *(int *)(v90 + 48);
    sub_229324E44((uint64_t)v16, v93, &qword_255A41BC0);
    sub_229324E44(v57, v59, &qword_255A41BC0);
    v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v60(v58, 1, v19) == 1)
    {
      sub_2293251F8(v57, &qword_255A41BC0);
      sub_2293251F8((uint64_t)v16, &qword_255A41BC0);
      v61 = v60(v59, 1, v19);
      if (v61 == 1)
        v62 = &qword_255A41BC0;
      else
        v62 = &qword_255A424C0;
      if (v61 == 1)
        v63 = -1;
      else
        v63 = 0;
    }
    else
    {
      v64 = (uint64_t)v88;
      sub_229324E44(v58, (uint64_t)v88, &qword_255A41BC0);
      if (v60(v59, 1, v19) == 1)
      {
        sub_2293251F8(v57, &qword_255A41BC0);
        sub_2293251F8((uint64_t)v16, &qword_255A41BC0);
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v64, v19);
        v63 = 0;
        v62 = &qword_255A424C0;
      }
      else
      {
        v65 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v96, v59, v19);
        sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
        v63 = sub_2293B8F00();
        v66 = *(void (**)(char *, uint64_t))(v34 + 8);
        v66(v65, v19);
        v62 = &qword_255A41BC0;
        sub_2293251F8(v57, &qword_255A41BC0);
        sub_2293251F8((uint64_t)v16, &qword_255A41BC0);
        v66(v88, v19);
      }
    }
    sub_2293251F8(v58, v62);
    sub_229326FD0(&qword_255A424D0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB64C);
    v67 = sub_2293B8C6C();
    v69 = v68;
    v70 = (uint64_t)v79;
    sub_229324ECC(v67, v68);
    sub_2293B8B70();
    *(_QWORD *)v70 = v67;
    *(_QWORD *)(v70 + 8) = v69;
    *(_QWORD *)(v70 + 16) = 0;
    *(_BYTE *)(v70 + 24) = v63 & 1;
    v71 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
    v73 = (uint64_t)v80;
    v72(v80, 1, 1, v71);
    sub_2293B8B70();
    v74 = v84;
    sub_229324D74(v70, v84, type metadata accessor for CatchupResponseMessage);
    sub_2293251F8(v73, qword_255A42398);
    sub_22932EA14(v74, v73, type metadata accessor for CatchupResponseMessage);
    swift_storeEnumTagMultiPayload();
    v72((char *)v73, 0, 1, v71);
    sub_2293390A8(v73, v81);
    swift_release();
    sub_229324F6C(v67, v69);
    sub_22932E904(v73, type metadata accessor for SyncMessage);
    sub_22932E904(v70, type metadata accessor for CatchupResponseMessage);
    sub_22932E904((uint64_t)v18, type metadata accessor for ModelData);
  }
  else
  {
    if (qword_255A41A88 != -1)
      swift_once();
    v44 = sub_2293B8D5C();
    __swift_project_value_buffer(v44, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v45 = sub_2293B8D44();
    v46 = sub_2293B90B0();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v93 = v48;
      *(_DWORD *)v47 = 136315138;
      v98[0] = v48;
      v92 = (uint64_t)(v47 + 4);
      v49 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v96, v97 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v19);
      v50 = v94;
      sub_2293B8B34();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v51 = sub_2293B9308();
      v53 = v52;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v22);
      v99 = sub_22932DB78(v51, v53, v98);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22931B000, v45, v46, "SyncedModelManager[%s] Cannot send catchup because no root model exists", v47, 0xCu);
      v54 = v93;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v54, -1, -1);
      MEMORY[0x22E2C869C](v47, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_229331D98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  void (**v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  os_log_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD, _QWORD, _QWORD);
  NSObject *v90;
  os_log_type_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  os_log_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t *v113;
  unint64_t v114;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v121;
  void (*v122)(_QWORD, _QWORD, _QWORD);
  uint64_t v123;
  char *v124;
  uint64_t *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  os_log_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;

  v141 = a2;
  v129 = a3;
  v128 = type metadata accessor for SyncedModelManager.SyncedModelMessageBufferItem(0);
  v126 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v127 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_2293B8A20();
  v136 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v137 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2293B8B40();
  v7 = *(char **)(v6 - 8);
  v139 = v6;
  v140 = v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v134 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v135 = (char *)&v121 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v133 = (char *)&v121 - v12;
  v13 = type metadata accessor for CatchupResponseMessage(0);
  MEMORY[0x24BDAC7A8](v13);
  v125 = (uint64_t *)((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v15);
  v132 = (os_log_t)((char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v130 = *(_QWORD *)(v17 - 8);
  v131 = (void (*)(char *, uint64_t))v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v121 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v121 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v121 - v27;
  v29 = sub_2293B8B94();
  MEMORY[0x24BDAC7A8](v29);
  v30 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = 0;
  memset(v145, 0, sizeof(v145));
  sub_229324ECC(a1, v141);
  sub_2293B8B88();
  sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
  sub_2293B8C60();
  v124 = v20;
  v33 = (uint64_t)v23;
  v34 = v133;
  v35 = v134;
  v141 = (unint64_t)v28;
  v36 = v132;
  sub_229324E44((uint64_t)v32, (uint64_t)v132, qword_255A42398);
  if ((*(unsigned int (**)(os_log_t, uint64_t, void (*)(char *, uint64_t)))(v130 + 48))(v36, 1, v131) != 1)
  {
    v54 = v141;
    sub_22932EA14((uint64_t)v36, v141, type metadata accessor for SyncMessage.OneOf_Contents);
    v55 = v142;
    if (*(_QWORD *)(v142 + 24) && (swift_retain(), sub_2293B8DBC(), swift_release(), LOBYTE(v145[0]) == 1))
    {
      sub_229324D74(v54, (uint64_t)v26, type metadata accessor for SyncMessage.OneOf_Contents);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v56 = (uint64_t)v125;
        sub_22932EA14((uint64_t)v26, (uint64_t)v125, type metadata accessor for CatchupResponseMessage);
        v57 = v139;
        if (*(_BYTE *)(v56 + 24) == 1)
        {
          v58 = v140;
          if (qword_255A41A88 != -1)
            swift_once();
          v59 = sub_2293B8D5C();
          __swift_project_value_buffer(v59, (uint64_t)qword_255A44C60);
          v60 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v58 + 2);
          v61 = v34;
          v62 = v34;
          v63 = v57;
          v60(v62, v129, v57);
          swift_retain_n();
          v64 = sub_2293B8D44();
          v65 = sub_2293B90B0();
          v66 = v65;
          if (os_log_type_enabled(v64, v65))
          {
            v67 = swift_slowAlloc();
            v134 = (char *)swift_slowAlloc();
            *(_QWORD *)&v145[0] = v134;
            *(_DWORD *)v67 = 136315394;
            v131 = (void (*)(char *, uint64_t))(v67 + 4);
            v132 = v64;
            v68 = v135;
            v60(v135, v55 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v63);
            v69 = v137;
            sub_2293B8B34();
            v140 = (char *)*((_QWORD *)v58 + 1);
            ((void (*)(char *, uint64_t))v140)(v68, v63);
            sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
            LODWORD(v135) = v66;
            v70 = v138;
            v71 = sub_2293B9308();
            v72 = v32;
            v74 = v73;
            v75 = *(void (**)(char *, uint64_t))(v136 + 8);
            v75(v69, v70);
            v143 = sub_22932DB78(v71, v74, (uint64_t *)v145);
            sub_2293B9110();
            swift_release_n();
            v32 = v72;
            swift_bridgeObjectRelease();
            *(_WORD *)(v67 + 12) = 2080;
            sub_2293B8B34();
            v76 = sub_2293B9308();
            v78 = v77;
            v79 = v129;
            v75(v69, v70);
            v143 = sub_22932DB78(v76, v78, (uint64_t *)v145);
            v56 = (uint64_t)v125;
            sub_2293B9110();
            swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t))v140)(v133, v139);
            v80 = v132;
            _os_log_impl(&dword_22931B000, v132, (os_log_type_t)v135, "SyncedModelManager[%s] Received catchup response from authority:%s)", (uint8_t *)v67, 0x16u);
            v81 = v134;
            swift_arrayDestroy();
            MEMORY[0x22E2C869C](v81, -1, -1);
            MEMORY[0x22E2C869C](v67, -1, -1);

          }
          else
          {
            swift_release_n();
            (*((void (**)(char *, uint64_t))v58 + 1))(v61, v63);

            v79 = v129;
          }
          sub_229332E68((uint64_t)v32, v79);
          sub_22932E904(v56, type metadata accessor for CatchupResponseMessage);
          v119 = v141;
          goto LABEL_29;
        }
        sub_22932E904(v56, type metadata accessor for CatchupResponseMessage);
        v82 = v140;
      }
      else
      {
        sub_22932E904((uint64_t)v26, type metadata accessor for SyncMessage.OneOf_Contents);
        v57 = v139;
        v82 = v140;
      }
      v83 = v33;
      if (qword_255A41A88 != -1)
        swift_once();
      v84 = sub_2293B8D5C();
      __swift_project_value_buffer(v84, (uint64_t)qword_255A44C60);
      sub_229324D74(v54, v33, type metadata accessor for SyncMessage.OneOf_Contents);
      v85 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v82 + 2);
      v86 = v35;
      v87 = v57;
      v88 = v57;
      v89 = v85;
      v85(v35, v129, v88);
      swift_retain_n();
      v90 = sub_2293B8D44();
      v91 = sub_2293B90B0();
      v92 = v91;
      if (os_log_type_enabled(v90, v91))
      {
        v93 = swift_slowAlloc();
        v133 = (char *)swift_slowAlloc();
        *(_QWORD *)&v145[0] = v133;
        *(_DWORD *)v93 = 136315650;
        v132 = v90;
        v94 = v135;
        v122 = v89;
        v89(v135, v142 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v87);
        v123 = v83;
        v95 = v137;
        sub_2293B8B34();
        v131 = (void (*)(char *, uint64_t))*((_QWORD *)v140 + 1);
        v131(v94, v87);
        v135 = (char *)sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v96 = v138;
        v97 = sub_2293B9308();
        v140 = v32;
        v99 = v98;
        v136 = *(_QWORD *)(v136 + 8);
        ((void (*)(char *, uint64_t))v136)(v95, v96);
        v143 = sub_22932DB78(v97, v99, (uint64_t *)v145);
        v125 = &v144;
        v55 = v142;
        sub_2293B9110();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 256;
        v100 = v123;
        LODWORD(v130) = v92;
        v101 = (uint64_t)v124;
        sub_229324D74(v123, (uint64_t)v124, type metadata accessor for SyncMessage.OneOf_Contents);
        LOBYTE(v99) = swift_getEnumCaseMultiPayload();
        v102 = v134;
        sub_22932E904(v101, type metadata accessor for SyncMessage.OneOf_Contents);
        sub_22932E904(v100, type metadata accessor for SyncMessage.OneOf_Contents);
        LOBYTE(v143) = v99;
        v32 = v140;
        sub_2293B9110();
        *(_WORD *)(v93 + 15) = 2080;
        v103 = v102;
        sub_2293B8B34();
        v104 = sub_2293B9308();
        v106 = v105;
        ((void (*)(char *, uint64_t))v136)(v95, v96);
        v143 = sub_22932DB78(v104, v106, (uint64_t *)v145);
        v87 = v139;
        v107 = v129;
        sub_2293B9110();
        v89 = v122;
        swift_bridgeObjectRelease();
        v131(v103, v87);
        v108 = v132;
        _os_log_impl(&dword_22931B000, v132, (os_log_type_t)v130, "SyncedModelManager[%s] Received message before root model has caught up. Caching in precatchup buffer. Message was type:%hhu from participant:%s", (uint8_t *)v93, 0x19u);
        v109 = v133;
        swift_arrayDestroy();
        MEMORY[0x22E2C869C](v109, -1, -1);
        v110 = v93;
        v54 = v141;
        MEMORY[0x22E2C869C](v110, -1, -1);

        v111 = (uint64_t)v127;
        v112 = v128;
      }
      else
      {
        sub_22932E904(v83, type metadata accessor for SyncMessage.OneOf_Contents);
        swift_release_n();
        (*((void (**)(char *, uint64_t))v140 + 1))(v86, v87);

        v111 = (uint64_t)v127;
        v112 = v128;
        v107 = v129;
      }
      sub_229324D74((uint64_t)v32, v111, type metadata accessor for SyncMessage);
      v89(v111 + *(int *)(v112 + 20), v107, v87);
      v113 = (unint64_t *)(v55 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_precatchupMessageBuffer);
      swift_beginAccess();
      v114 = *v113;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v113 = v114;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v114 = sub_22936F2D0(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
        *v113 = v114;
      }
      v116 = v126;
      v118 = *(_QWORD *)(v114 + 16);
      v117 = *(_QWORD *)(v114 + 24);
      if (v118 >= v117 >> 1)
      {
        v114 = sub_22936F2D0(v117 > 1, v118 + 1, 1, v114);
        *v113 = v114;
      }
      *(_QWORD *)(v114 + 16) = v118 + 1;
      sub_22932EA14(v111, v114+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72) * v118, type metadata accessor for SyncedModelManager.SyncedModelMessageBufferItem);
      swift_endAccess();
    }
    else
    {
      sub_229332E68((uint64_t)v32, v129);
    }
    v119 = v54;
LABEL_29:
    sub_22932E904(v119, type metadata accessor for SyncMessage.OneOf_Contents);
    goto LABEL_30;
  }
  sub_2293251F8((uint64_t)v36, qword_255A42398);
  v37 = v142;
  if (qword_255A41A88 != -1)
    swift_once();
  v38 = sub_2293B8D5C();
  __swift_project_value_buffer(v38, (uint64_t)qword_255A44C60);
  swift_retain_n();
  v39 = sub_2293B8D44();
  v40 = sub_2293B9098();
  if (!os_log_type_enabled(v39, v40))
  {
    swift_release_n();

LABEL_30:
    v53 = (uint64_t)v32;
    return sub_22932E904(v53, type metadata accessor for SyncMessage);
  }
  v41 = (uint8_t *)swift_slowAlloc();
  v42 = swift_slowAlloc();
  v141 = v42;
  *(_DWORD *)v41 = 136315138;
  *(_QWORD *)&v145[0] = v42;
  v134 = (char *)(v41 + 4);
  v44 = v139;
  v43 = (void (**)(char *, uint64_t))v140;
  v45 = v135;
  (*((void (**)(char *, uint64_t, uint64_t))v140 + 2))(v135, v37 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v139);
  v46 = v137;
  sub_2293B8B34();
  v43[1](v45, v44);
  sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v47 = v138;
  v48 = sub_2293B9308();
  v49 = v32;
  v51 = v50;
  (*(void (**)(char *, uint64_t))(v136 + 8))(v46, v47);
  v143 = sub_22932DB78(v48, v51, (uint64_t *)v145);
  sub_2293B9110();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_22931B000, v39, v40, "SyncedModelManager[%s] Received message without contents", v41, 0xCu);
  v52 = v141;
  swift_arrayDestroy();
  MEMORY[0x22E2C869C](v52, -1, -1);
  MEMORY[0x22E2C869C](v41, -1, -1);

  v53 = (uint64_t)v49;
  return sub_22932E904(v53, type metadata accessor for SyncMessage);
}

uint64_t sub_229332E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  int v111;
  _BOOL4 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  os_log_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  int v137;
  char *v138;
  os_log_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  void (*v142)(char *, uint64_t, uint64_t);
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v200 = a2;
  v202 = a1;
  v184 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  MEMORY[0x24BDAC7A8](v184);
  v194 = (char *)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  MEMORY[0x24BDAC7A8](v183);
  v188 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  MEMORY[0x24BDAC7A8](v182);
  v187 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for OwnershipChangeReplyMessage(0);
  MEMORY[0x24BDAC7A8](v181);
  v186 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for OwnershipChangeRequestMessage(0);
  MEMORY[0x24BDAC7A8](v179);
  v185 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v193 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v180 = (char *)&v134 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v178 = (char *)&v134 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v177 = (char *)&v134 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v176 = (char *)&v134 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v162 = (char *)&v134 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v147 = (char *)&v134 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v149 = (char *)&v134 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v157 = (char *)&v134 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v153 = (char *)&v134 - v26;
  v195 = type metadata accessor for PBUUID(0);
  v191 = *(_QWORD *)(v195 - 8);
  v27 = MEMORY[0x24BDAC7A8](v195);
  v170 = (char *)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v169 = (char *)&v134 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v168 = (char *)&v134 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v167 = (char *)&v134 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v166 = (char *)&v134 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v161 = (char *)&v134 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v145 = (char *)&v134 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v150 = (char *)&v134 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v155 = (char *)&v134 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v152 = (char *)&v134 - v45;
  v164 = type metadata accessor for SyncTransactionMessage(0);
  v46 = MEMORY[0x24BDAC7A8](v164);
  v163 = (char *)&v134 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v154 = (char *)&v134 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v158 = (char *)&v134 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v159 = (char *)&v134 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v189 = (char *)&v134 - v54;
  v55 = type metadata accessor for CatchupResponseMessage(0);
  MEMORY[0x24BDAC7A8](v55);
  v190 = (char *)&v134 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_2293B8A20();
  v58 = *(_QWORD *)(v57 - 8);
  v197 = v57;
  v198 = v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v175 = (char *)&v134 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = MEMORY[0x24BDAC7A8](v59);
  v174 = (char *)&v134 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v173 = (char *)&v134 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v172 = (char *)&v134 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v171 = (char *)&v134 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v160 = (char *)&v134 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v146 = (char *)&v134 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v148 = (char *)&v134 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v156 = (char *)&v134 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v151 = (char *)&v134 - v78;
  MEMORY[0x24BDAC7A8](v77);
  v80 = (char *)&v134 - v79;
  v199 = sub_2293B8B40();
  v81 = *(_QWORD *)(v199 - 8);
  v82 = MEMORY[0x24BDAC7A8](v199);
  v192 = (char *)&v134 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v82);
  v85 = (char *)&v134 - v84;
  v86 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v86);
  v88 = (char *)&v134 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = MEMORY[0x24BDAC7A8](v89);
  v196 = (uint64_t)&v134 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = MEMORY[0x24BDAC7A8](v91);
  v95 = (char *)&v134 - v94;
  v96 = MEMORY[0x24BDAC7A8](v93);
  v98 = (char *)&v134 - v97;
  MEMORY[0x24BDAC7A8](v96);
  v100 = (char *)&v134 - v99;
  sub_229324E44(v202, (uint64_t)v88, qword_255A42398);
  v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
  v202 = v89;
  if (v101(v88, 1, v89) != 1)
  {
    sub_22932EA14((uint64_t)v88, (uint64_t)v100, type metadata accessor for SyncMessage.OneOf_Contents);
    if (qword_255A41A88 != -1)
      swift_once();
    v103 = sub_2293B8D5C();
    v104 = __swift_project_value_buffer(v103, (uint64_t)qword_255A44C60);
    sub_229324D74((uint64_t)v100, (uint64_t)v98, type metadata accessor for SyncMessage.OneOf_Contents);
    v105 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    v165 = v100;
    v106 = v85;
    v107 = v199;
    v105(v85, v200, v199);
    v108 = v201;
    swift_retain_n();
    v144 = v104;
    v109 = sub_2293B8D44();
    v110 = sub_2293B908C();
    v111 = v110;
    v112 = os_log_type_enabled(v109, v110);
    v143 = v80;
    v142 = v105;
    if (v112)
    {
      v113 = swift_slowAlloc();
      v138 = v106;
      v114 = v108;
      v115 = v113;
      v140 = swift_slowAlloc();
      v203 = v140;
      *(_DWORD *)v115 = 136315650;
      v134 = v115 + 4;
      v139 = v109;
      v116 = v192;
      v105(v192, v114 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v107);
      sub_2293B8B34();
      v141 = *(void (**)(char *, uint64_t))(v81 + 8);
      v141(v116, v107);
      v136 = sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v117 = v197;
      v118 = sub_2293B9308();
      v137 = v111;
      v120 = v119;
      v135 = *(void (**)(char *, uint64_t))(v198 + 8);
      v135(v80, v117);
      v204 = sub_22932DB78(v118, v120, &v203);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v115 + 12) = 256;
      sub_229324D74((uint64_t)v98, (uint64_t)v95, type metadata accessor for SyncMessage.OneOf_Contents);
      LOBYTE(v120) = swift_getEnumCaseMultiPayload();
      v121 = (uint64_t)v95;
      v122 = v117;
      sub_22932E904(v121, type metadata accessor for SyncMessage.OneOf_Contents);
      sub_22932E904((uint64_t)v98, type metadata accessor for SyncMessage.OneOf_Contents);
      LOBYTE(v204) = v120;
      v123 = (uint64_t)v165;
      sub_2293B9110();
      *(_WORD *)(v115 + 15) = 2080;
      v124 = v138;
      sub_2293B8B34();
      v125 = sub_2293B9308();
      v127 = v126;
      v128 = v80;
      v129 = v141;
      v135(v128, v122);
      v204 = sub_22932DB78(v125, v127, &v203);
      sub_2293B9110();
      v130 = v199;
      swift_bridgeObjectRelease();
      v129(v124, v130);
      v131 = v139;
      _os_log_impl(&dword_22931B000, v139, (os_log_type_t)v137, "SyncedModelManager[%s] Received message of type:%hhu from participant:%s", (uint8_t *)v115, 0x19u);
      v132 = v140;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v132, -1, -1);
      MEMORY[0x22E2C869C](v115, -1, -1);

    }
    else
    {
      sub_22932E904((uint64_t)v98, type metadata accessor for SyncMessage.OneOf_Contents);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v106, v107);

      v123 = (uint64_t)v165;
    }
    sub_229324D74(v123, v196, type metadata accessor for SyncMessage.OneOf_Contents);
    v133 = (char *)&loc_229333AFC + 4 * word_2293BA02A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return sub_2293251F8((uint64_t)v88, qword_255A42398);
}

uint64_t sub_229335C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t result;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v79 = a1;
  v2 = sub_2293B8A20();
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v65 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)&v64 - v5;
  v6 = sub_2293B8D5C();
  v74 = *(_QWORD *)(v6 - 8);
  v75 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2293B8B58();
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2293B8B40();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A424C0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v66 = (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v64 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v64 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v64 - v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v67 = v1 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant;
  v68 = v27;
  ((void (*)(char *))v27)((char *)&v64 - v25);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v28(v26, 0, 1, v10);
  v80 = v1;
  v29 = *(_QWORD *)(v1 + 24);
  if (v29)
  {
    v30 = v29 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
    swift_beginAccess();
    sub_229324E44(v30, (uint64_t)v24, &qword_255A41BC0);
  }
  else
  {
    v28(v24, 1, 1, v10);
  }
  v31 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_229324E44((uint64_t)v26, (uint64_t)v15, &qword_255A41BC0);
  sub_229324E44((uint64_t)v24, v31, &qword_255A41BC0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v15, 1, v10) == 1)
  {
    sub_2293251F8((uint64_t)v24, &qword_255A41BC0);
    sub_2293251F8((uint64_t)v26, &qword_255A41BC0);
    if (v32(v31, 1, v10) == 1)
    {
      sub_2293251F8((uint64_t)v15, &qword_255A41BC0);
LABEL_18:
      v63 = (uint64_t)v76;
      sub_2293B8B4C();
      sub_2293311A8(v63);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v63, v78);
    }
    goto LABEL_9;
  }
  sub_229324E44((uint64_t)v15, (uint64_t)v21, &qword_255A41BC0);
  if (v32(v31, 1, v10) == 1)
  {
    sub_2293251F8((uint64_t)v24, &qword_255A41BC0);
    sub_2293251F8((uint64_t)v26, &qword_255A41BC0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);
LABEL_9:
    v64 = v32;
    sub_2293251F8((uint64_t)v15, &qword_255A424C0);
    v33 = v80;
    goto LABEL_10;
  }
  v64 = v32;
  v60 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v72, v31, v10);
  sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
  v61 = sub_2293B8F00();
  v62 = *(void (**)(char *, uint64_t))(v11 + 8);
  v62(v60, v10);
  sub_2293251F8((uint64_t)v24, &qword_255A41BC0);
  sub_2293251F8((uint64_t)v26, &qword_255A41BC0);
  v62(v21, v10);
  sub_2293251F8((uint64_t)v15, &qword_255A41BC0);
  v33 = v80;
  if ((v61 & 1) != 0)
    goto LABEL_18;
LABEL_10:
  if (*(_BYTE *)(v33 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options) == 1)
    goto LABEL_18;
  if (qword_255A41A88 != -1)
    swift_once();
  v34 = v75;
  v35 = __swift_project_value_buffer(v75, (uint64_t)qword_255A44C60);
  v36 = v73;
  v37 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v35, v34);
  swift_retain_n();
  v38 = sub_2293B8D44();
  v39 = sub_2293B90B0();
  if (os_log_type_enabled(v38, (os_log_type_t)v39))
  {
    LODWORD(v79) = v39;
    v40 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v83 = v78;
    *(_DWORD *)v40 = 136315394;
    v41 = v72;
    v68(v72, v67, v10);
    v42 = v69;
    sub_2293B8B34();
    v77 = *(_QWORD *)(v11 + 8);
    ((void (*)(char *, uint64_t))v77)(v41, v10);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v43 = v71;
    v44 = sub_2293B9308();
    v46 = v45;
    v47 = *(void (**)(char *, uint64_t))(v70 + 8);
    v47(v42, v43);
    v82 = sub_22932DB78(v44, v46, &v83);
    sub_2293B9110();
    swift_release_n();
    v48 = v80;
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    v49 = *(_QWORD *)(v48 + 24);
    if (v49)
    {
      v50 = v49 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
      swift_beginAccess();
      v51 = v50;
      v52 = v66;
      sub_229324E44(v51, v66, &qword_255A41BC0);
      if (v64(v52, 1, v10) != 1)
      {
        v53 = v65;
        sub_2293B8B34();
        ((void (*)(uint64_t, uint64_t))v77)(v52, v10);
        v54 = v71;
        v55 = sub_2293B9308();
        v57 = v56;
        v47(v53, v54);
        v81 = sub_22932DB78(v55, v57, &v83);
        sub_2293B9110();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22931B000, v38, (os_log_type_t)v79, "SyncedModelManager[%s] Not authority of root model so ignoring catchup request. Authority:%s", (uint8_t *)v40, 0x16u);
        v58 = v78;
        swift_arrayDestroy();
        MEMORY[0x22E2C869C](v58, -1, -1);
        MEMORY[0x22E2C869C](v40, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v73, v75);
      }
    }
    else
    {
      swift_release();
      __break(1u);
    }
    result = swift_release();
    __break(1u);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v34);
  }
  return result;
}

uint64_t sub_229336434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _DWORD *v68;
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;

  v3 = v2;
  v6 = sub_2293B8B94();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ModelData(0);
  MEMORY[0x24BDAC7A8](v9);
  v68 = (_DWORD *)((char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for CatchupResponseMessage(0);
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2293B8B40();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2293B8A20();
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v3 + 24);
  if (!v22)
    return result;
  v64 = (uint64_t *)a1;
  v65 = v9;
  v61 = v21;
  v62 = v13;
  v63 = v19;
  v23 = qword_255A41A88;
  swift_retain();
  if (v23 != -1)
    swift_once();
  v24 = sub_2293B8D5C();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_255A44C60);
  swift_retain_n();
  v60 = v25;
  v26 = sub_2293B8D44();
  v27 = sub_2293B90B0();
  v28 = os_log_type_enabled(v26, v27);
  v57 = v16;
  v58 = v17;
  v66 = v8;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v59 = v22;
    v55 = v30;
    v56 = a2;
    *(_DWORD *)v29 = 136315138;
    *(_QWORD *)&v70[0] = v30;
    v54[1] = v29 + 4;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v32 = v16;
    v33 = v16;
    v34 = v14;
    v35 = v62;
    v31(v32, v3 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v62);
    v36 = v61;
    sub_2293B8B34();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v37 = sub_2293B9308();
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v17);
    v69 = sub_22932DB78(v37, v39, (uint64_t *)v70);
    a2 = v56;
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22931B000, v26, v27, "SyncedModelManager[%s] Received catchup response", v29, 0xCu);
    v40 = v55;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v40, -1, -1);
    MEMORY[0x22E2C869C](v29, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v41 = v67;
  v42 = v64;
  if (*(_QWORD *)(v3 + 24))
  {
    swift_retain();
    sub_2293B8DBC();
    swift_release();
    v43 = LOBYTE(v70[0]);
    sub_229324D74((uint64_t)v42, v41, type metadata accessor for CatchupResponseMessage);
    if (v43 == 1)
    {
      v44 = *(_BYTE *)(v41 + 24);
      sub_22932E904(v41, type metadata accessor for CatchupResponseMessage);
      if ((v44 & 1) != 0)
        sub_22935CD30(a2);
      goto LABEL_13;
    }
  }
  else
  {
    sub_229324D74((uint64_t)v64, v67, type metadata accessor for CatchupResponseMessage);
  }
  sub_22932E904(v41, type metadata accessor for CatchupResponseMessage);
LABEL_13:
  v45 = *v42;
  v46 = v42[1];
  v71 = 0;
  memset(v70, 0, sizeof(v70));
  sub_229324ECC(v45, v46);
  sub_2293B8B88();
  sub_229326FD0(&qword_255A424D0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB64C);
  sub_2293B8C60();
  sub_22935DD00(v68, a2);
  v47 = (uint64_t *)(v3 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_precatchupMessageBuffer);
  swift_beginAccess();
  v48 = *v47;
  if (*(_QWORD *)(*v47 + 16))
  {
    *v47 = MEMORY[0x24BEE4AF8];
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
    {
      v50 = type metadata accessor for SyncedModelManager.SyncedModelMessageBufferItem(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = v48 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
      v53 = *(_QWORD *)(v51 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_229332E68(v52, v52 + *(int *)(v50 + 20));
        v52 += v53;
        --v49;
      }
      while (v49);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_22932E904((uint64_t)v68, type metadata accessor for ModelData);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_22932E904((uint64_t)v68, type metadata accessor for ModelData);
    return swift_release();
  }
}

uint64_t sub_229336BA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _QWORD v41[2];
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];
  uint64_t v47;

  v4 = v3;
  v8 = sub_2293B8B40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2293B8A20();
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    v45 = v13;
    if (qword_255A41A88 != -1)
      swift_once();
    v16 = sub_2293B8D5C();
    __swift_project_value_buffer(v16, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v17 = sub_2293B8D44();
    v18 = sub_2293B9098();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = v4;
      v43 = v4;
      v21 = v19;
      v44 = swift_slowAlloc();
      v46[0] = v44;
      *(_DWORD *)v21 = 136315394;
      v42 = (uint8_t *)(v21 + 4);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v8);
      sub_2293B8B34();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = sub_2293B9308();
      v24 = v23;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v12);
      v47 = sub_22932DB78(v22, v24, v46);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      v47 = a2;
      sub_2293B9110();
      _os_log_impl(&dword_22931B000, v17, v18, "SyncedModelManager[%s] Received ownership request for unrecognized model type:%ld in sharing session", (uint8_t *)v21, 0x16u);
      v25 = v44;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v25, -1, -1);
      MEMORY[0x22E2C869C](v21, -1, -1);

      return 0;
    }

    goto LABEL_20;
  }
  if (!a2)
  {
    v45 = v13;
    if (qword_255A41A88 != -1)
      swift_once();
    v27 = sub_2293B8D5C();
    __swift_project_value_buffer(v27, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v28 = sub_2293B8D44();
    v29 = sub_2293B9098();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v44 = v31;
      v42 = v30;
      *(_DWORD *)v30 = 136315138;
      v46[0] = v31;
      v41[1] = v30 + 4;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v8);
      sub_2293B8B34();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v32 = sub_2293B9308();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v12);
      v47 = sub_22932DB78(v32, v34, v46);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      v35 = v42;
      _os_log_impl(&dword_22931B000, v28, v29, "SyncedModelManager[%s] Received ownership request for unregistered model in sharing session", v42, 0xCu);
      v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v36, -1, -1);
      MEMORY[0x22E2C869C](v35, -1, -1);

      return 0;
    }

LABEL_20:
    swift_release_n();
    return 0;
  }
  if (a2 == 1)
  {
    v26 = *(_QWORD *)(v4 + 24);
    swift_retain();
  }
  else
  {
    swift_beginAccess();
    v37 = *(_QWORD *)(v4 + 32);
    if (*(_QWORD *)(v37 + 16) && (v38 = sub_22936F3E8(a1), (v39 & 1) != 0))
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v38);
      swift_retain();
    }
    else
    {
      v26 = 0;
    }
    swift_endAccess();
  }
  return v26;
}

uint64_t sub_2293370CC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(uint64_t *, uint64_t);
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  int v98;
  int v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char v105;
  char *v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t *v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t *v122;
  char *v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  void (*v145)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char v150;
  char *v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  NSObject *v158;
  uint64_t v159;
  char *v160;
  char v161;
  char *v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t result;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t *v192;
  char *v193;
  uint64_t v194;
  void (*v195)(char *, uint64_t);
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  unint64_t v201;
  void (*v202)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v203)(char *, char *, uint64_t);
  uint64_t v204;
  char *v205;
  NSObject *v206;
  char *v207;
  char v208;
  uint64_t v209[4];

  v2 = v1;
  v205 = a1;
  v209[3] = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v182 = (char *)&v169 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v181 = (uint64_t)&v169 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v180 = (char *)&v169 - v8;
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A424C0);
  v9 = MEMORY[0x24BDAC7A8](v204);
  v193 = (char *)&v169 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v169 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v190 = (char *)&v169 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v175 = (uint64_t)&v169 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v186 = (char *)&v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v197 = (char *)&v169 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v196 = (uint64_t)&v169 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v178 = (uint64_t)&v169 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v177 = (char *)&v169 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v187 = (uint64_t)&v169 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v199 = (uint64_t)&v169 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v198 = (uint64_t)&v169 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v172 = (uint64_t *)((char *)&v169 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (uint64_t *)((char *)&v169 - v37);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v189 = (char *)&v169 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v179 = (uint64_t)&v169 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v171 = (uint64_t)&v169 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v170 = (char *)&v169 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v173 = (uint64_t)&v169 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v201 = (unint64_t)&v169 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)&v169 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v185 = (char *)&v169 - v54;
  v184 = sub_2293B8A20();
  v183 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184);
  v56 = (uint64_t *)((char *)&v169 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_2293B8B40();
  v58 = *(uint64_t **)(v57 - 8);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v188 = (char *)&v169 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v59);
  v62 = (char *)&v169 - v61;
  if (qword_255A41A88 != -1)
    goto LABEL_74;
  while (1)
  {
    v63 = sub_2293B8D5C();
    __swift_project_value_buffer(v63, (uint64_t)qword_255A44C60);
    v64 = (void (*)(char *, char *, uint64_t))v58[2];
    v64(v62, v205, v57);
    swift_retain_n();
    v65 = sub_2293B8D44();
    v66 = sub_2293B90B0();
    v206 = v65;
    LODWORD(v202) = v66;
    v67 = os_log_type_enabled(v65, v66);
    v191 = v13;
    v192 = v58;
    v203 = v64;
    v194 = (uint64_t)v38;
    v200 = v53;
    if (v67)
    {
      v68 = swift_slowAlloc();
      v176 = swift_slowAlloc();
      v209[0] = v176;
      *(_DWORD *)v68 = 136315394;
      v174 = v68 + 4;
      v69 = v188;
      v64(v188, (char *)(v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant), v57);
      sub_2293B8B34();
      v195 = (void (*)(char *, uint64_t))v58[1];
      v195(v69, v57);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v70 = v184;
      v71 = sub_2293B9308();
      v73 = v72;
      v74 = *(void (**)(uint64_t *, uint64_t))(v183 + 8);
      v74(v56, v70);
      v207 = (char *)sub_22932DB78(v71, v73, v209);
      v169 = &v208;
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      v174 = v68 + 14;
      sub_2293B8B34();
      v75 = sub_2293B9308();
      v77 = v76;
      v78 = v70;
      v58 = v192;
      v64 = v203;
      v74(v56, v78);
      v207 = (char *)sub_22932DB78(v75, v77, v209);
      sub_2293B9110();
      swift_bridgeObjectRelease();
      v195(v62, v57);
      v79 = (_QWORD *)&unk_255A44000;
      v80 = v206;
      _os_log_impl(&dword_22931B000, v206, (os_log_type_t)v202, "SyncedModelManager[%s] Removing participant: %s", (uint8_t *)v68, 0x16u);
      v81 = v176;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v81, -1, -1);
      MEMORY[0x22E2C869C](v68, -1, -1);

      v82 = v201;
    }
    else
    {
      swift_release_n();
      v195 = (void (*)(char *, uint64_t))v58[1];
      v195(v62, v57);

      v82 = v201;
      v79 = &unk_255A44000;
    }
    v83 = (uint64_t *)(v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_remoteParticipants);
    v84 = swift_beginAccess();
    v85 = *v83;
    MEMORY[0x24BDAC7A8](v84);
    *(&v169 - 2) = v205;
    swift_bridgeObjectRetain();
    *v83 = sub_229338A1C((uint64_t (*)(_QWORD))sub_22933F844, (uint64_t)(&v169 - 4), v85);
    swift_bridgeObjectRelease();
    v86 = (_QWORD *)*v83;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A424E8);
    v87 = (*((unsigned __int8 *)v58 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v58 + 80);
    v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_2293BA260;
    v64((char *)(v88 + v87), (char *)(v2 + v79[404]), v57);
    v207 = (char *)v86;
    swift_bridgeObjectRetain();
    sub_2293B5F9C(v88);
    swift_bridgeObjectRetain();
    sub_22933F860((_QWORD **)&v207);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v207 + 2))
    {
      v89 = (uint64_t)v185;
      v64(v185, &v207[v87], v57);
      v90 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v58[7];
      v90(v89, 0, 1, v57);
    }
    else
    {
      v90 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v58[7];
      v90((uint64_t)v185, 1, 1, v57);
    }
    v53 = v191;
    swift_release();
    v174 = v2;
    v91 = *(_QWORD *)(v2 + 24);
    if (!v91)
      return sub_2293251F8((uint64_t)v185, &qword_255A41BC0);
    v92 = v91 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
    swift_beginAccess();
    v169 = (char *)v92;
    v93 = (uint64_t)v200;
    sub_229324E44(v92, (uint64_t)v200, &qword_255A41BC0);
    v64((char *)v82, v205, v57);
    v90(v82, 0, 1, v57);
    v94 = v175;
    v95 = v175 + *(int *)(v204 + 48);
    sub_229324E44(v93, v175, &qword_255A41BC0);
    sub_229324E44(v82, v95, &qword_255A41BC0);
    v96 = v82;
    v97 = v192[6];
    v98 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v97)(v94, 1, v57);
    v202 = v90;
    v206 = v97;
    v176 = v91;
    if (v98 == 1)
      break;
    v102 = v173;
    sub_229324E44(v94, v173, &qword_255A41BC0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v97)(v95, 1, v57) == 1)
    {
      swift_retain();
      sub_2293251F8(v201, &qword_255A41BC0);
      sub_2293251F8((uint64_t)v200, &qword_255A41BC0);
      v195((char *)v102, v57);
      v13 = v190;
      v100 = (uint64_t)v189;
      v101 = (void (*)(uint64_t, char *, uint64_t))v203;
      v58 = v192;
LABEL_14:
      v103 = sub_2293251F8(v94, &qword_255A424C0);
      goto LABEL_18;
    }
    v58 = v192;
    v104 = v188;
    ((void (*)(char *, uint64_t, uint64_t))v192[4])(v188, v95, v57);
    sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
    swift_retain();
    v105 = sub_2293B8F00();
    v106 = v104;
    v107 = (void (*)(uint64_t, uint64_t))v195;
    v195(v106, v57);
    sub_2293251F8(v201, &qword_255A41BC0);
    sub_2293251F8((uint64_t)v200, &qword_255A41BC0);
    v107(v102, v57);
    v90 = v202;
    v103 = sub_2293251F8(v94, &qword_255A41BC0);
    v13 = v190;
    v100 = (uint64_t)v189;
    v101 = (void (*)(uint64_t, char *, uint64_t))v203;
    if ((v105 & 1) != 0)
      goto LABEL_16;
LABEL_18:
    (*(void (**)(uint64_t))(*(_QWORD *)v176 + 752))(v103);
    v113 = v194;
    v101(v194, v205, v57);
    v90(v113, 0, 1, v57);
    v114 = (uint64_t)&v13[*(int *)(v204 + 48)];
    v38 = &qword_255A41BC0;
    sub_229324E44(v100, (uint64_t)v13, &qword_255A41BC0);
    sub_229324E44(v113, v114, &qword_255A41BC0);
    v62 = (char *)v206;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v206)(v13, 1, v57) == 1)
    {
      sub_2293251F8(v113, &qword_255A41BC0);
      sub_2293251F8(v100, &qword_255A41BC0);
      v115 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v114, 1, v57);
      v116 = v199;
      v117 = v176;
      if (v115 != 1)
        goto LABEL_23;
      sub_2293251F8((uint64_t)v13, &qword_255A41BC0);
LABEL_25:
      v125 = (uint64_t)v180;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56))(v180, 1, 1, v184);
      v126 = v117 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
      swift_beginAccess();
      v38 = &qword_255A41F70;
      v127 = v181;
      sub_229324E44(v126, v181, &qword_255A41F70);
      swift_beginAccess();
      sub_22932E988(v125, v126);
      swift_endAccess();
      v128 = v126;
      v13 = v182;
      sub_229324E44(v128, (uint64_t)v182, &qword_255A41F70);
      sub_22935FF10(v127, (uint64_t)v13);
      sub_2293251F8((uint64_t)v13, &qword_255A41F70);
      v129 = v125;
      v53 = v191;
      sub_2293251F8(v129, &qword_255A41F70);
      v120 = v127;
      v119 = &qword_255A41F70;
      goto LABEL_26;
    }
    v38 = v172;
    sub_229324E44((uint64_t)v13, (uint64_t)v172, &qword_255A41BC0);
    v118 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v114, 1, v57);
    v116 = v199;
    if (v118 == 1)
    {
      sub_2293251F8(v194, &qword_255A41BC0);
      sub_2293251F8(v100, &qword_255A41BC0);
      v195((char *)v38, v57);
LABEL_23:
      v119 = &qword_255A424C0;
      v120 = (uint64_t)v13;
LABEL_26:
      sub_2293251F8(v120, v119);
      goto LABEL_27;
    }
    v121 = (void (*)(char *, uint64_t, uint64_t))v58[4];
    v58 = (uint64_t *)v100;
    v122 = v38;
    v123 = v188;
    v121(v188, v114, v57);
    sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
    v124 = sub_2293B8F00();
    v62 = (char *)v195;
    v195(v123, v57);
    v38 = &qword_255A41BC0;
    sub_2293251F8(v194, &qword_255A41BC0);
    sub_2293251F8((uint64_t)v58, &qword_255A41BC0);
    ((void (*)(uint64_t *, uint64_t))v62)(v122, v57);
    sub_2293251F8((uint64_t)v13, &qword_255A41BC0);
    v117 = v176;
    if ((v124 & 1) != 0)
      goto LABEL_25;
LABEL_27:
    v130 = v174;
    swift_beginAccess();
    v131 = *(_QWORD *)(v130 + 32);
    v132 = *(_QWORD *)(v131 + 64);
    v189 = (char *)(v131 + 64);
    v133 = 1 << *(_BYTE *)(v131 + 32);
    v134 = -1;
    if (v133 < 64)
      v134 = ~(-1 << v133);
    v135 = v134 & v132;
    v190 = (char *)((unint64_t)(v133 + 63) >> 6);
    v194 = v131;
    swift_bridgeObjectRetain();
    v2 = 0;
    v56 = &qword_255A41BC0;
    while (1)
    {
      if (v135)
      {
        v201 = (v135 - 1) & v135;
        v136 = __clz(__rbit64(v135)) | (v2 << 6);
        goto LABEL_51;
      }
      v137 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
        goto LABEL_73;
      }
      if (v137 >= (uint64_t)v190)
        goto LABEL_70;
      v138 = *(_QWORD *)&v189[8 * v137];
      ++v2;
      if (!v138)
      {
        v2 = v137 + 1;
        if (v137 + 1 >= (uint64_t)v190)
          goto LABEL_70;
        v138 = *(_QWORD *)&v189[8 * v2];
        if (!v138)
        {
          v2 = v137 + 2;
          if (v137 + 2 >= (uint64_t)v190)
            goto LABEL_70;
          v138 = *(_QWORD *)&v189[8 * v2];
          if (!v138)
          {
            v2 = v137 + 3;
            if (v137 + 3 >= (uint64_t)v190)
              goto LABEL_70;
            v138 = *(_QWORD *)&v189[8 * v2];
            if (!v138)
              break;
          }
        }
      }
LABEL_50:
      v201 = (v138 - 1) & v138;
      v136 = __clz(__rbit64(v138)) + (v2 << 6);
LABEL_51:
      v38 = *(uint64_t **)(*(_QWORD *)(v194 + 56) + 8 * v136);
      v140 = (uint64_t)v38 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
      swift_beginAccess();
      v141 = v198;
      sub_229324E44(v140, v198, &qword_255A41BC0);
      v203((char *)v116, v205, v57);
      v202(v116, 0, 1, v57);
      v142 = (uint64_t)&v53[*(int *)(v204 + 48)];
      sub_229324E44(v141, (uint64_t)v53, &qword_255A41BC0);
      sub_229324E44(v116, v142, &qword_255A41BC0);
      v58 = (uint64_t *)v206;
      v143 = ((uint64_t (*)(char *, uint64_t, uint64_t))v206)(v53, 1, v57);
      v200 = (char *)v2;
      if (v143 == 1)
      {
        swift_retain();
        sub_2293251F8(v116, &qword_255A41BC0);
        sub_2293251F8(v141, &qword_255A41BC0);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v58)(v142, 1, v57) != 1)
        {
          v13 = v197;
          v145 = v202;
          v147 = (uint64_t)v53;
          goto LABEL_57;
        }
        v144 = (uint64_t)v53;
        sub_2293251F8((uint64_t)v53, &qword_255A41BC0);
        v145 = v202;
LABEL_59:
        v153 = v178;
        sub_229324E44((uint64_t)v185, v178, &qword_255A41BC0);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v153, 1, v57) == 1)
          __break(1u);
        v154 = (uint64_t)v177;
        ((void (*)(char *, uint64_t, uint64_t))v192[4])(v177, v153, v57);
        v145(v154, 0, 1, v57);
        v155 = v179;
        sub_22933F8E0(v154, v179);
        swift_beginAccess();
        sub_22933F928(v155, v140);
        v148 = swift_endAccess();
        goto LABEL_61;
      }
      v146 = v187;
      sub_229324E44((uint64_t)v53, v187, &qword_255A41BC0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v58)(v142, 1, v57) == 1)
      {
        swift_retain();
        sub_2293251F8(v199, &qword_255A41BC0);
        sub_2293251F8(v198, &qword_255A41BC0);
        v195((char *)v146, v57);
        v13 = v197;
        v145 = v202;
        v147 = (uint64_t)v53;
LABEL_57:
        v144 = v147;
        v148 = sub_2293251F8(v147, &qword_255A424C0);
        goto LABEL_62;
      }
      v149 = v188;
      ((void (*)(char *, uint64_t, uint64_t))v192[4])(v188, v142, v57);
      sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
      swift_retain();
      v144 = (uint64_t)v191;
      v150 = sub_2293B8F00();
      v151 = v149;
      v152 = (void (*)(uint64_t, uint64_t))v195;
      v195(v151, v57);
      sub_2293251F8(v199, &qword_255A41BC0);
      sub_2293251F8(v198, &qword_255A41BC0);
      v152(v146, v57);
      v148 = sub_2293251F8(v144, &qword_255A41BC0);
      v145 = v202;
      if ((v150 & 1) != 0)
        goto LABEL_59;
LABEL_61:
      v13 = v197;
LABEL_62:
      v156 = v196;
      (*(void (**)(uint64_t))(*v38 + 752))(v148);
      v203(v13, v205, v57);
      v145((uint64_t)v13, 0, 1, v57);
      v62 = v193;
      v157 = (uint64_t)&v193[*(int *)(v204 + 48)];
      sub_229324E44(v156, (uint64_t)v193, &qword_255A41BC0);
      sub_229324E44((uint64_t)v13, v157, &qword_255A41BC0);
      v158 = v206;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v206)(v62, 1, v57) == 1)
      {
        sub_2293251F8((uint64_t)v13, &qword_255A41BC0);
        sub_2293251F8(v156, &qword_255A41BC0);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v158)(v157, 1, v57) != 1)
          goto LABEL_31;
        sub_2293251F8((uint64_t)v62, &qword_255A41BC0);
      }
      else
      {
        v13 = v186;
        sub_229324E44((uint64_t)v62, (uint64_t)v186, &qword_255A41BC0);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v158)(v157, 1, v57) == 1)
        {
          sub_2293251F8((uint64_t)v197, &qword_255A41BC0);
          sub_2293251F8(v196, &qword_255A41BC0);
          v195(v13, v57);
LABEL_31:
          v116 = v199;
          v53 = (char *)v144;
          sub_2293251F8((uint64_t)v62, &qword_255A424C0);
          goto LABEL_32;
        }
        v159 = (uint64_t)v62;
        v160 = v188;
        ((void (*)(char *, uint64_t, uint64_t))v192[4])(v188, v157, v57);
        sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
        v161 = sub_2293B8F00();
        v162 = v160;
        v163 = v195;
        v195(v162, v57);
        sub_2293251F8((uint64_t)v197, &qword_255A41BC0);
        sub_2293251F8(v196, &qword_255A41BC0);
        v163(v13, v57);
        v62 = (char *)v159;
        sub_2293251F8(v159, &qword_255A41BC0);
        if ((v161 & 1) == 0)
        {
          v53 = (char *)v144;
          goto LABEL_69;
        }
      }
      v164 = (uint64_t)v180;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56))(v180, 1, 1, v184);
      v165 = (uint64_t)v38 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
      swift_beginAccess();
      v166 = v181;
      v58 = &qword_255A41F70;
      sub_229324E44(v165, v181, &qword_255A41F70);
      swift_beginAccess();
      sub_22932E988(v164, v165);
      swift_endAccess();
      v13 = v182;
      sub_229324E44(v165, (uint64_t)v182, &qword_255A41F70);
      sub_22935FF10(v166, (uint64_t)v13);
      sub_2293251F8((uint64_t)v13, &qword_255A41F70);
      sub_2293251F8(v164, &qword_255A41F70);
      v167 = v166;
      v53 = v191;
      sub_2293251F8(v167, &qword_255A41F70);
LABEL_69:
      v116 = v199;
LABEL_32:
      v2 = (uint64_t)v200;
      v135 = v201;
      swift_release();
    }
    v139 = v137 + 4;
    if (v139 >= (uint64_t)v190)
    {
LABEL_70:
      swift_release();
      swift_release();
      return sub_2293251F8((uint64_t)v185, &qword_255A41BC0);
    }
    v138 = *(_QWORD *)&v189[8 * v139];
    if (v138)
    {
      v2 = v139;
      goto LABEL_50;
    }
    while (1)
    {
      v2 = v139 + 1;
      if (__OFADD__(v139, 1))
        break;
      if (v2 >= (uint64_t)v190)
        goto LABEL_70;
      v138 = *(_QWORD *)&v189[8 * v2];
      ++v139;
      if (v138)
        goto LABEL_50;
    }
LABEL_73:
    __break(1u);
LABEL_74:
    swift_once();
  }
  swift_retain();
  sub_2293251F8(v96, &qword_255A41BC0);
  sub_2293251F8(v93, &qword_255A41BC0);
  v99 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v97)(v95, 1, v57);
  v13 = v190;
  v100 = (uint64_t)v189;
  v101 = (void (*)(uint64_t, char *, uint64_t))v203;
  v58 = v192;
  if (v99 != 1)
    goto LABEL_14;
  sub_2293251F8(v94, &qword_255A41BC0);
LABEL_16:
  v108 = v171;
  sub_229324E44((uint64_t)v185, v171, &qword_255A41BC0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v206)(v108, 1, v57) != 1)
  {
    v109 = v170;
    ((void (*)(char *, uint64_t, uint64_t))v58[4])(v170, v108, v57);
    v90((uint64_t)v109, 0, 1, v57);
    v110 = (uint64_t)v109;
    v111 = v179;
    sub_22933F8E0(v110, v179);
    v112 = (uint64_t)v169;
    swift_beginAccess();
    sub_22933F928(v111, v112);
    v103 = swift_endAccess();
    goto LABEL_18;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

BOOL sub_2293389A4()
{
  sub_2293B8B40();
  sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
  return (sub_2293B8F00() & 1) == 0;
}

uint64_t sub_229338A1C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_2293B8B40();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22936F9D0(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_22936F9D0(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v17 + v15 + v19 * v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_229338C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD v39[2];
  void (*v40)(char *, uint64_t);
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51[3];

  v2 = v1;
  v47 = sub_2293B8A20();
  v4 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B8B40();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v39 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v39 - v15;
  if (qword_255A41A88 != -1)
    swift_once();
  v17 = sub_2293B8D5C();
  __swift_project_value_buffer(v17, (uint64_t)qword_255A44C60);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v49(v16, a1, v7);
  swift_retain_n();
  v18 = sub_2293B8D44();
  v19 = sub_2293B90B0();
  v46 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v44 = a1;
    v21 = v20;
    v42 = swift_slowAlloc();
    v51[0] = v42;
    *(_DWORD *)v21 = 136315394;
    v39[1] = v21 + 4;
    v49(v14, v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v7);
    v41 = v18;
    sub_2293B8B34();
    v43 = v8;
    v40 = *(void (**)(char *, uint64_t))(v8 + 8);
    v40(v14, v7);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = v47;
    v23 = sub_2293B9308();
    v48 = v2;
    v25 = v24;
    v45 = v11;
    v26 = *(void (**)(char *, uint64_t))(v4 + 8);
    v26(v6, v22);
    v50 = sub_22932DB78(v23, v25, v51);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    sub_2293B8B34();
    v27 = sub_2293B9308();
    v29 = v28;
    v26(v6, v22);
    v11 = v45;
    v50 = sub_22932DB78(v27, v29, v51);
    v2 = v48;
    sub_2293B9110();
    swift_bridgeObjectRelease();
    v40(v16, v7);
    v30 = v41;
    _os_log_impl(&dword_22931B000, v41, (os_log_type_t)v46, "SyncedModelManager[%s] Adding participant: %s", (uint8_t *)v21, 0x16u);
    v31 = v42;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v31, -1, -1);
    v32 = v21;
    a1 = v44;
    MEMORY[0x22E2C869C](v32, -1, -1);

    v8 = v43;
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);

  }
  v49(v11, a1, v7);
  v33 = (unint64_t *)(v2 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_remoteParticipants);
  swift_beginAccess();
  v34 = *v33;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v33 = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v34 = sub_22936F2E4(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
    *v33 = v34;
  }
  v37 = *(_QWORD *)(v34 + 16);
  v36 = *(_QWORD *)(v34 + 24);
  if (v37 >= v36 >> 1)
  {
    v34 = sub_22936F2E4(v36 > 1, v37 + 1, 1, v34);
    *v33 = v34;
  }
  *(_QWORD *)(v34 + 16) = v37 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v34+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v37, v11, v7);
  return swift_endAccess();
}

uint64_t sub_2293390A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = sub_2293B8B40();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2293B8A20();
  MEMORY[0x24BDAC7A8](v4);
  type metadata accessor for SyncMessage(0);
  sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
  v5 = sub_2293B8C6C();
  v7 = v6;
  sub_22932FDB8(v5, v6, a2);
  return sub_229324F6C(v5, v7);
}

uint64_t sub_229339480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant;
  v2 = sub_2293B8B40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_2293245B4(*(_QWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_sendDataHandler));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_229339518()
{
  sub_229339480();
  return swift_deallocClassInstance();
}

uint64_t sub_22933953C()
{
  return type metadata accessor for SyncedModelManager(0);
}

uint64_t type metadata accessor for SyncedModelManager(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A422C8);
}

uint64_t sub_229339558()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_229339610(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7))
    {
      v10 = (char *)&loc_2293396DC + 4 * word_2293BA03A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(type metadata accessor for SyncMessage(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2293B8B7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = *(int *)(a3 + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2293B8B40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t sub_22933A300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = type metadata accessor for SyncTransactionMessage(0);
        v11 = a1 + *(int *)(v10 + 32);
        v12 = sub_2293B8B7C();
        v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(v11, v12);
        v14 = a1 + *(int *)(v10 + 36);
        v15 = type metadata accessor for PBUUID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
          v13(v14 + *(int *)(v15 + 24), v12);
        break;
      case 1u:
        v16 = sub_2293B8B7C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
        break;
      case 2u:
        sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        v17 = a1 + *(int *)(type metadata accessor for CatchupResponseMessage(0) + 32);
        v18 = sub_2293B8B7C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        break;
      case 3u:
        v19 = type metadata accessor for OwnershipChangeRequestMessage(0);
        goto LABEL_11;
      case 4u:
        v20 = (int *)type metadata accessor for OwnershipChangeReplyMessage(0);
        v21 = a1 + v20[7];
        v22 = sub_2293B8B7C();
        v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
        v23(v21, v22);
        v24 = a1 + v20[8];
        v25 = type metadata accessor for PBUUID(0);
        v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
        v27 = v26(v24, 1, v25);
        goto LABEL_21;
      case 5u:
        v19 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
LABEL_11:
        v28 = (int *)v19;
        v29 = a1 + *(int *)(v19 + 28);
        v22 = sub_2293B8B7C();
        v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
        v23(v29, v22);
        v30 = a1 + v28[8];
        v25 = type metadata accessor for PBUUID(0);
        v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
        if (!v26(v30, 1, v25))
          v23(v30 + *(int *)(v25 + 24), v22);
        v31 = a1 + v28[9];
        if (!v26(v31, 1, v25))
          v23(v31 + *(int *)(v25 + 24), v22);
        v32 = v28[10];
        goto LABEL_24;
      case 6u:
        v33 = type metadata accessor for OwnershipHandoffRequestMessage(0);
        goto LABEL_18;
      case 7u:
        v33 = type metadata accessor for OwnershipHandoffReplyMessage(0);
LABEL_18:
        v20 = (int *)v33;
        v34 = a1 + *(int *)(v33 + 24);
        v22 = sub_2293B8B7C();
        v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
        v23(v34, v22);
        v35 = a1 + v20[7];
        v25 = type metadata accessor for PBUUID(0);
        v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
        if (!v26(v35, 1, v25))
          v23(v35 + *(int *)(v25 + 24), v22);
        v24 = a1 + v20[8];
        v27 = v26(v24, 1, v25);
LABEL_21:
        if (!v27)
          v23(v24 + *(int *)(v25 + 24), v22);
        v32 = v20[9];
LABEL_24:
        v36 = a1 + v32;
        if (!v26(a1 + v32, 1, v25))
          v23(v36 + *(int *)(v25 + 24), v22);
        break;
      default:
        break;
    }
  }
  v5 = a1 + *(int *)(type metadata accessor for SyncMessage(0) + 20);
  v6 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_2293B8B40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

char *sub_22933A6A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_22933A748 + 4 * word_2293BA052[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(type metadata accessor for SyncMessage(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2293B8B40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

char *sub_22933B360(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_22933B3F4 + 4 * word_2293BA062[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
    v12 = (char *)&loc_22933B548 + 4 * word_2293BA072[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(type metadata accessor for SyncMessage(0) + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = *(int *)(a3 + 20);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_2293B8B40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

char *sub_22933CCFC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a2, 1, v5))
  {
    v7 = (char *)&loc_22933CD9C + 4 * word_2293BA082[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v8 = *(int *)(type metadata accessor for SyncMessage(0) + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2293B8B40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

char *sub_22933D9A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_22933DA34 + 4 * word_2293BA092[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
    v12 = (char *)&loc_22933DB64 + 4 * word_2293BA0A2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(type metadata accessor for SyncMessage(0) + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(a3 + 20);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_2293B8B40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_22933F218()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22933F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SyncMessage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2293B8B40();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22933F298()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22933F2A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SyncMessage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2293B8B40();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SyncedModelManager.SyncedModelMessageBufferItem(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A423F8);
}

uint64_t sub_22933F334()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SyncMessage(319);
  if (v1 <= 0x3F)
  {
    result = sub_2293B8B40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22933F3B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_229324ECC(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2293B8B58();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_22933F45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2293B8B58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_22933F4A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_22933F520(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_229324F6C(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2293B8B58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_22933F5A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B8B58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_22933F5FC(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_229324F6C(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_22933F66C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22933F678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_2293B8B58();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22933F700()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_22933F70C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_2293B8B58();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SyncedModelManager.MessageWrapper(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A42488);
}

uint64_t sub_22933F79C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22933F7D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_22933F844()
{
  return sub_2293389A4();
}

uint64_t sub_22933F860(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_2293B8B40() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2293410CC(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_22933F970(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_22933F8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22933F928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22933F970(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(void);
  uint64_t v28;
  const void *v29;
  const void *v30;
  void (*v31)(const void *, uint64_t);
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  const void *v44;
  const void *v45;
  const void *v46;
  uint64_t v47;
  void (*v48)(const void *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  const void *v72;
  _QWORD *v73;
  const void *v74;
  void (*v75)(const void *, uint64_t);
  const void *v76;
  uint64_t v77;
  const void *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void (*v157)(const void *, uint64_t);
  void (*v158)(char *, uint64_t, uint64_t);
  char *v159;
  char *v160;
  size_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  void (*v170)(char *, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;

  v2 = v1;
  v172 = *MEMORY[0x24BDAC8D0];
  v162 = sub_2293B8A20();
  v155 = *(_QWORD *)(v162 - 8);
  v4 = MEMORY[0x24BDAC7A8](v162);
  v160 = (char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v159 = (char *)&v144 - v6;
  v167 = sub_2293B8B40();
  v171 = *(_QWORD *)(v167 - 8);
  v7 = MEMORY[0x24BDAC7A8](v167);
  v151 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v168 = (char *)&v144 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v164 = (char *)&v144 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v163 = (char *)&v144 - v13;
  v14 = a1[1];
  result = sub_2293B92FC();
  if (result >= v14)
  {
    if (v14 < 0)
      goto LABEL_137;
    if (v14)
      return sub_22934054C(0, v14, 1, a1);
  }
  else
  {
    if (v14 >= 0)
      v16 = v14;
    else
      v16 = v14 + 1;
    if (v14 < -1)
    {
      result = sub_2293B9224();
      __break(1u);
    }
    else
    {
      v146 = result;
      if (v14 >= 2)
      {
        v17 = v16 >> 1;
        v18 = sub_2293B8F9C();
        *(_QWORD *)(v18 + 16) = v17;
        v19 = *(unsigned __int8 *)(v171 + 80);
        v145 = v18;
        v153 = v18 + ((v19 + 32) & ~v19);
        goto LABEL_12;
      }
      v20 = (char *)MEMORY[0x24BEE4AF8];
      v153 = MEMORY[0x24BEE4AF8]
           + ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80));
      v145 = MEMORY[0x24BEE4AF8];
      if (v14 == 1)
      {
LABEL_12:
        v21 = 0;
        v20 = (char *)MEMORY[0x24BEE4AF8];
        v166 = a1;
        while (1)
        {
          v147 = v20;
          v23 = (uint64_t)v21;
          v24 = v21 + 1;
          v152 = v21;
          if ((uint64_t)(v21 + 1) >= v14)
          {
            v37 = (uint64_t)(v21 + 1);
            v20 = v147;
          }
          else
          {
            v148 = *a1;
            v25 = v148;
            v169 = *(char **)(v171 + 72);
            v26 = v169;
            v27 = *(void (**)(void))(v171 + 16);
            v28 = v167;
            v27();
            v158 = (void (*)(char *, uint64_t, uint64_t))v27;
            ((void (*)(char *, uint64_t, uint64_t))v27)(v164, v25 + (_QWORD)v26 * v23, v28);
            v29 = v159;
            sub_2293B8B34();
            v30 = v160;
            sub_2293B8B34();
            LODWORD(v165) = memcmp(v29, v30, v161);
            v31 = *(void (**)(const void *, uint64_t))(v155 + 8);
            v32 = v162;
            v31(v30, v162);
            v33 = v29;
            v34 = v148;
            v157 = v31;
            v31(v33, v32);
            v35 = *(void (**)(char *, uint64_t))(v171 + 8);
            v35(v164, v28);
            v156 = (char *)v35;
            v35(v163, v28);
            v36 = v169;
            v37 = v23 + 2;
            if (v23 + 2 < v14)
            {
              v150 = v2;
              v154 = (_QWORD)v169 * (_QWORD)v24;
              v149 = (_QWORD)v169 * v37;
              while (1)
              {
                v38 = v14;
                v39 = v37;
                v40 = v163;
                v41 = v167;
                v42 = v158;
                v158(v163, v34 + v149, v167);
                v43 = v164;
                v42(v164, v34 + v154, v41);
                v44 = v159;
                sub_2293B8B34();
                v45 = v160;
                sub_2293B8B34();
                LODWORD(v170) = memcmp(v44, v45, v161);
                v46 = v45;
                v47 = v162;
                v48 = v157;
                v157(v46, v162);
                v48(v44, v47);
                v49 = (void (*)(char *, uint64_t))v156;
                ((void (*)(char *, uint64_t))v156)(v43, v41);
                v49(v40, v41);
                if (((v170 ^ v165) & 0x80000000) != 0)
                  break;
                v37 = v39 + 1;
                v36 = v169;
                v34 += (uint64_t)v169;
                v14 = v38;
                if (v38 == v37)
                {
                  v37 = v38;
                  v2 = v150;
                  v23 = (uint64_t)v152;
                  goto LABEL_23;
                }
              }
              v2 = v150;
              v37 = v39;
              v23 = (uint64_t)v152;
              v14 = v38;
              v36 = v169;
            }
LABEL_23:
            a1 = v166;
            v20 = v147;
            if ((v165 & 0x80000000) != 0)
            {
              if (v37 < v23)
                goto LABEL_138;
              if (v23 < v37)
              {
                v165 = v14;
                v50 = v23;
                v51 = 0;
                v52 = (_QWORD)v36 * (v37 - 1);
                v53 = v37 * (_QWORD)v36;
                v54 = v50;
                v55 = v50 * (_QWORD)v36;
                do
                {
                  if (v54 != v37 + v51 - 1)
                  {
                    if (!v148)
                      goto LABEL_143;
                    v150 = v2;
                    v57 = v148 + v55;
                    v58 = (char *)(v148 + v52);
                    v59 = v148;
                    v170 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 32);
                    v170(v151, v148 + v55, v167);
                    if (v55 < v52 || v57 >= v59 + v53)
                    {
                      v56 = v167;
                      swift_arrayInitWithTakeFrontToBack();
                    }
                    else
                    {
                      v56 = v167;
                      if (v55 != v52)
                        swift_arrayInitWithTakeBackToFront();
                    }
                    v170(v58, (uint64_t)v151, v56);
                    a1 = v166;
                    v2 = v150;
                    v36 = v169;
                  }
                  ++v54;
                  --v51;
                  v52 -= (uint64_t)v36;
                  v53 -= (uint64_t)v36;
                  v55 += (uint64_t)v36;
                }
                while (v54 < v37 + v51);
                v20 = v147;
                v23 = (uint64_t)v152;
                v14 = v165;
              }
            }
          }
          if (v37 < v14)
          {
            if (__OFSUB__(v37, v23))
              goto LABEL_136;
            if (v37 - v23 < v146)
            {
              if (__OFADD__(v23, v146))
                goto LABEL_139;
              if (v23 + v146 >= v14)
                v60 = v14;
              else
                v60 = v23 + v146;
              if (v60 < v23)
              {
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
              }
              if (v37 != v60)
              {
                v150 = v2;
                v61 = *(char **)(v171 + 72);
                v154 = *(_QWORD *)(v171 + 16);
                v62 = (_QWORD)v61 * (v37 - 1);
                v156 = v61;
                v63 = v37 * (_QWORD)v61;
                v64 = v167;
                v149 = v60;
                do
                {
                  v66 = 0;
                  v165 = v37;
                  v157 = (void (*)(const void *, uint64_t))v63;
                  v158 = (void (*)(char *, uint64_t, uint64_t))v62;
                  while (1)
                  {
                    v170 = (void (*)(char *, uint64_t, uint64_t))v23;
                    v67 = *a1;
                    v169 = (char *)(v63 + v66);
                    v68 = v163;
                    v69 = (void (*)(char *, uint64_t, uint64_t))v154;
                    ((void (*)(char *, uint64_t, uint64_t))v154)(v163, v63 + v66 + v67, v64);
                    v70 = v62 + v66 + v67;
                    v71 = v164;
                    v69(v164, v70, v64);
                    v72 = v159;
                    sub_2293B8B34();
                    v73 = a1;
                    v74 = v160;
                    sub_2293B8B34();
                    LODWORD(v69) = memcmp(v72, v74, v161);
                    v75 = *(void (**)(const void *, uint64_t))(v155 + 8);
                    v76 = v74;
                    v77 = v162;
                    v75(v76, v162);
                    v78 = v72;
                    v64 = v167;
                    v75(v78, v77);
                    v79 = *(void (**)(char *, uint64_t))(v171 + 8);
                    v79(v71, v64);
                    v79(v68, v64);
                    if ((v69 & 0x80000000) == 0)
                      break;
                    v80 = *v73;
                    if (!*v73)
                      goto LABEL_141;
                    v63 = (uint64_t)v157;
                    v62 = (uint64_t)v158;
                    v81 = (char *)v158 + v80 + v66;
                    v82 = *(void (**)(char *, char *, uint64_t))(v171 + 32);
                    v82(v168, (char *)v157 + v80 + v66, v64);
                    swift_arrayInitWithTakeFrontToBack();
                    v82(v81, v168, v64);
                    v66 -= (uint64_t)v156;
                    v23 = (uint64_t)v170 + 1;
                    v65 = v165;
                    a1 = v166;
                    if ((void (*)(char *, uint64_t, uint64_t))v165 == (void (*)(char *, uint64_t, uint64_t))((char *)v170 + 1))
                      goto LABEL_48;
                  }
                  v65 = v165;
                  a1 = v73;
                  v63 = (uint64_t)v157;
                  v62 = (uint64_t)v158;
LABEL_48:
                  v37 = v65 + 1;
                  v62 += (uint64_t)v156;
                  v63 += (uint64_t)v156;
                  v23 = (uint64_t)v152;
                }
                while (v37 != v149);
                v37 = v149;
                v2 = v150;
                v20 = v147;
              }
            }
          }
          if (v37 < v23)
            goto LABEL_131;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v165 = v37;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v20 = sub_229340EB4(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
          v85 = *((_QWORD *)v20 + 2);
          v84 = *((_QWORD *)v20 + 3);
          v22 = v85 + 1;
          if (v85 >= v84 >> 1)
            v20 = sub_229340EB4((char *)(v84 > 1), v85 + 1, 1, v20);
          *((_QWORD *)v20 + 2) = v22;
          v86 = v20 + 32;
          v87 = &v20[16 * v85 + 32];
          v88 = v165;
          *(_QWORD *)v87 = v152;
          *((_QWORD *)v87 + 1) = v88;
          if (v85)
            break;
          v22 = 1;
LABEL_14:
          v14 = a1[1];
          v21 = (char *)v165;
          if (v165 >= v14)
            goto LABEL_103;
        }
        while (1)
        {
          v89 = v22 - 1;
          if (v22 >= 4)
          {
            v94 = &v86[16 * v22];
            v95 = *((_QWORD *)v94 - 8);
            v96 = *((_QWORD *)v94 - 7);
            v100 = __OFSUB__(v96, v95);
            v97 = v96 - v95;
            if (v100)
              goto LABEL_120;
            v99 = *((_QWORD *)v94 - 6);
            v98 = *((_QWORD *)v94 - 5);
            v100 = __OFSUB__(v98, v99);
            v92 = v98 - v99;
            v93 = v100;
            if (v100)
              goto LABEL_121;
            v101 = v22 - 2;
            v102 = &v86[16 * v22 - 32];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v100 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v100)
              goto LABEL_123;
            v100 = __OFADD__(v92, v105);
            v106 = v92 + v105;
            if (v100)
              goto LABEL_126;
            if (v106 >= v97)
            {
              v124 = &v86[16 * v89];
              v126 = *(_QWORD *)v124;
              v125 = *((_QWORD *)v124 + 1);
              v100 = __OFSUB__(v125, v126);
              v127 = v125 - v126;
              if (v100)
                goto LABEL_130;
              v117 = v92 < v127;
              goto LABEL_92;
            }
          }
          else
          {
            if (v22 != 3)
            {
              v118 = *((_QWORD *)v20 + 4);
              v119 = *((_QWORD *)v20 + 5);
              v100 = __OFSUB__(v119, v118);
              v111 = v119 - v118;
              v112 = v100;
              goto LABEL_86;
            }
            v91 = *((_QWORD *)v20 + 4);
            v90 = *((_QWORD *)v20 + 5);
            v100 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            v93 = v100;
          }
          if ((v93 & 1) != 0)
            goto LABEL_122;
          v101 = v22 - 2;
          v107 = &v86[16 * v22 - 32];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          v110 = __OFSUB__(v108, v109);
          v111 = v108 - v109;
          v112 = v110;
          if (v110)
            goto LABEL_125;
          v113 = &v86[16 * v89];
          v115 = *(_QWORD *)v113;
          v114 = *((_QWORD *)v113 + 1);
          v100 = __OFSUB__(v114, v115);
          v116 = v114 - v115;
          if (v100)
            goto LABEL_128;
          if (__OFADD__(v111, v116))
            goto LABEL_129;
          if (v111 + v116 >= v92)
          {
            v117 = v92 < v116;
LABEL_92:
            if (v117)
              v89 = v101;
            goto LABEL_94;
          }
LABEL_86:
          if ((v112 & 1) != 0)
            goto LABEL_124;
          v120 = &v86[16 * v89];
          v122 = *(_QWORD *)v120;
          v121 = *((_QWORD *)v120 + 1);
          v100 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          if (v100)
            goto LABEL_127;
          if (v123 < v111)
            goto LABEL_14;
LABEL_94:
          v128 = v89 - 1;
          if (v89 - 1 >= v22)
          {
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          v129 = *a1;
          if (!*a1)
            goto LABEL_142;
          v130 = v20;
          v131 = &v86[16 * v128];
          v132 = *(_QWORD *)v131;
          v133 = &v86[16 * v89];
          v134 = *((_QWORD *)v133 + 1);
          sub_229340878(v129 + *(_QWORD *)(v171 + 72) * *(_QWORD *)v131, v129 + *(_QWORD *)(v171 + 72) * *(_QWORD *)v133, v129 + *(_QWORD *)(v171 + 72) * v134, v153);
          if (v2)
            goto LABEL_114;
          if (v134 < v132)
            goto LABEL_117;
          if (v89 > *((_QWORD *)v130 + 2))
            goto LABEL_118;
          *(_QWORD *)v131 = v132;
          *(_QWORD *)&v86[16 * v128 + 8] = v134;
          v135 = *((_QWORD *)v130 + 2);
          if (v89 >= v135)
            goto LABEL_119;
          v20 = v130;
          v22 = v135 - 1;
          memmove(&v86[16 * v89], v133 + 16, 16 * (v135 - 1 - v89));
          *((_QWORD *)v130 + 2) = v135 - 1;
          a1 = v166;
          if (v135 <= 2)
            goto LABEL_14;
        }
      }
      v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_103:
      if (v22 >= 2)
      {
        v136 = *a1;
        do
        {
          v137 = v22 - 2;
          if (v22 < 2)
            goto LABEL_132;
          if (!v136)
            goto LABEL_144;
          v138 = v20;
          v139 = v20 + 32;
          v140 = *(_QWORD *)&v20[16 * v137 + 32];
          v141 = *(_QWORD *)&v20[16 * v22 + 24];
          sub_229340878(v136 + *(_QWORD *)(v171 + 72) * v140, v136 + *(_QWORD *)(v171 + 72) * *(_QWORD *)&v139[16 * v22 - 16], v136 + *(_QWORD *)(v171 + 72) * v141, v153);
          if (v2)
            break;
          if (v141 < v140)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v138 = sub_2293410B8((uint64_t)v138);
          if (v137 >= *((_QWORD *)v138 + 2))
            goto LABEL_134;
          v142 = &v138[16 * v137 + 32];
          *(_QWORD *)v142 = v140;
          *((_QWORD *)v142 + 1) = v141;
          v143 = *((_QWORD *)v138 + 2);
          if (v22 > v143)
            goto LABEL_135;
          v20 = v138;
          memmove(&v138[16 * v22 + 16], &v138[16 * v22 + 32], 16 * (v143 - v22));
          *((_QWORD *)v138 + 2) = v143 - 1;
          v22 = v143 - 1;
        }
        while (v143 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22934054C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  const void *v28;
  _QWORD *v29;
  const void *v30;
  void (*v31)(const void *, uint64_t);
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  size_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  v43 = a1;
  v61 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2293B8A20();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v41 - v10;
  v11 = sub_2293B8B40();
  v59 = *(_QWORD **)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v41 - v15;
  result = MEMORY[0x24BDAC7A8](v14);
  v46 = (char *)&v41 - v17;
  v56 = a3;
  v42 = a2;
  if (a3 != a2)
  {
    v18 = v59[9];
    v44 = (void (*)(char *, uint64_t, uint64_t))v59[2];
    v45 = v11;
    v19 = v18 * (v56 - 1);
    v53 = v18;
    v20 = v18 * v56;
    do
    {
      v21 = 0;
      v60 = v43;
      v54 = v20;
      v55 = v19;
      do
      {
        v22 = *a4;
        v58 = v20 + v21;
        v23 = v20 + v21 + v22;
        v24 = v46;
        v25 = v44;
        v44(v46, v23, v11);
        v26 = v19 + v21 + v22;
        v27 = v47;
        v25(v47, v26, v11);
        v28 = v48;
        sub_2293B8B34();
        v29 = a4;
        v30 = v49;
        sub_2293B8B34();
        LODWORD(v22) = memcmp(v28, v30, v50);
        v31 = *(void (**)(const void *, uint64_t))(v51 + 8);
        v32 = v30;
        v33 = v52;
        v31(v32, v52);
        v34 = v33;
        a4 = v29;
        v11 = v45;
        v31(v28, v34);
        v35 = (void (*)(char *, uint64_t))v59[1];
        v36 = v27;
        v19 = v55;
        v35(v36, v11);
        v37 = v24;
        v20 = v54;
        result = ((uint64_t (*)(char *, uint64_t))v35)(v37, v11);
        if ((v22 & 0x80000000) == 0)
          break;
        v38 = *a4;
        if (!*a4)
          __break(1u);
        v39 = v38 + v19 + v21;
        v40 = (void (*)(char *, uint64_t, uint64_t))v59[4];
        v40(v57, v38 + v20 + v21, v11);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v39, v57, v11);
        v21 -= v53;
        ++v60;
      }
      while (v56 != v60);
      v19 += v53;
      v20 += v53;
      ++v56;
    }
    while (v56 != v42);
  }
  return result;
}

uint64_t sub_229340878(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  unint64_t v30;
  const void *v31;
  const void *v32;
  void (*v33)(const void *, uint64_t);
  const void *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, unint64_t, uint64_t);
  unint64_t v47;
  char *v48;
  uint64_t v49;
  const void *v50;
  unint64_t v51;
  const void *v52;
  int v53;
  void (*v54)(const void *, uint64_t);
  const void *v55;
  uint64_t v56;
  const void *v57;
  void (*v58)(char *, uint64_t);
  unint64_t v59;
  void (*v60)(_QWORD, _QWORD, _QWORD);
  unint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, unint64_t, uint64_t);
  void (*v66)(_QWORD, _QWORD, _QWORD);
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  size_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80[2];

  v80[1] = *MEMORY[0x24BDAC8D0];
  v75 = sub_2293B8A20();
  v69 = *(_QWORD *)(v75 - 8);
  v8 = MEMORY[0x24BDAC7A8](v75);
  v73 = v9;
  v74 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v63 - v10;
  v11 = sub_2293B8B40();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v70 = (char *)&v63 - v14;
  v76 = v15;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
LABEL_63:
    __break(1u);
  v18 = (uint64_t)(a2 - a1) / v16;
  v79 = a4;
  v80[0] = a1;
  v19 = v17 / v16;
  v67 = a4;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v22 = v19 * v16;
      v23 = v67;
      if (v67 < a2 || a2 + v22 <= v67)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v67 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v42 = v23 + v22;
      v78 = v23 + v22;
      v80[0] = a2;
      if (v22 >= 1 && a1 < a2)
      {
        v44 = -v16;
        v65 = *(void (**)(char *, unint64_t, uint64_t))(v76 + 16);
        v66 = (void (*)(_QWORD, _QWORD, _QWORD))a1;
        v64 = -v16;
        do
        {
          v77 = a3;
          v68 = a3 + v44;
          v45 = v70;
          v46 = v65;
          v65(v70, v42 + v44, v11);
          v47 = a2 + v44;
          v48 = v71;
          v46(v71, a2 + v44, v11);
          v49 = v11;
          v50 = v72;
          sub_2293B8B34();
          v51 = a2;
          v52 = v74;
          sub_2293B8B34();
          v53 = memcmp(v50, v52, v73);
          v54 = *(void (**)(const void *, uint64_t))(v69 + 8);
          v55 = v52;
          v56 = v75;
          v54(v55, v75);
          v57 = v50;
          v11 = v49;
          v54(v57, v56);
          v58 = *(void (**)(char *, uint64_t))(v76 + 8);
          v58(v48, v49);
          v58(v45, v49);
          if (v53 < 0)
          {
            v44 = v64;
            a3 = v68;
            if (v77 < v51 || v68 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
              v60 = v66;
              v59 = v67;
            }
            else
            {
              v60 = v66;
              v59 = v67;
              if (v77 != v51)
                swift_arrayInitWithTakeBackToFront();
            }
            v80[0] += v44;
          }
          else
          {
            v61 = v78;
            v78 += v64;
            v44 = v64;
            a3 = v68;
            if (v77 < v61 || v68 >= v61)
            {
              swift_arrayInitWithTakeFrontToBack();
              v47 = v51;
              v60 = v66;
              v59 = v67;
            }
            else
            {
              v60 = v66;
              v59 = v67;
              if (v77 != v61)
                swift_arrayInitWithTakeBackToFront();
              v47 = v51;
            }
          }
          v42 = v78;
          if (v78 <= v59)
            break;
          a2 = v47;
        }
        while (v47 > (unint64_t)v60);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    v21 = v67;
    if (v67 < a1 || a1 + v20 <= v67)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v67 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v68 = v21 + v20;
    v78 = v21 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v25 = v21;
      v66 = *(void (**)(_QWORD, _QWORD, _QWORD))(v76 + 16);
      v77 = a3;
      v26 = v71;
      do
      {
        v27 = v16;
        v28 = v70;
        v29 = (void (*)(char *, unint64_t, uint64_t))v66;
        v66(v70, a2, v11);
        v29(v26, v25, v11);
        v30 = a2;
        v31 = v72;
        sub_2293B8B34();
        v32 = v74;
        sub_2293B8B34();
        LODWORD(v29) = memcmp(v31, v32, v73);
        v33 = *(void (**)(const void *, uint64_t))(v69 + 8);
        v34 = v32;
        v35 = v75;
        v33(v34, v75);
        v33(v31, v35);
        v36 = *(void (**)(char *, uint64_t))(v76 + 8);
        v36(v26, v11);
        v36(v28, v11);
        v37 = v80[0];
        if ((v29 & 0x80000000) != 0)
        {
          v16 = v27;
          v38 = v30 + v27;
          if (v80[0] < v30 || v80[0] >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
            v39 = v77;
          }
          else
          {
            v39 = v77;
            if (v80[0] == v30)
              v37 = v30;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v16 = v27;
          v40 = v79 + v27;
          if (v80[0] < v79 || v80[0] >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
            v39 = v77;
            v41 = v30;
          }
          else
          {
            v39 = v77;
            v41 = v30;
            if (v80[0] != v79)
              swift_arrayInitWithTakeBackToFront();
          }
          v79 = v40;
          v38 = v41;
        }
        v80[0] = v37 + v16;
        v25 = v79;
        if (v79 >= v68)
          break;
        a2 = v38;
      }
      while (v38 < v39);
    }
LABEL_60:
    sub_229340FAC(v80, &v79, (uint64_t *)&v78);
    return 1;
  }
  result = sub_2293B926C();
  __break(1u);
  return result;
}

char *sub_229340EB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A424F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_229340FAC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_2293B8B40();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_2293B926C();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2293410B8(uint64_t a1)
{
  return sub_229340EB4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2293410CC(_QWORD *a1)
{
  return sub_22936FEF0(0, a1[2], 0, a1);
}

uint64_t sub_2293410E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v6[4];
  uint64_t v7;

  type metadata accessor for SyncedModelControllerFactory();
  v6[2] = a1;
  v6[3] = a2;
  v7 = v2;
  return sub_22935A8E4(v2, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v6);
}

uint64_t sub_229341140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  v5 = sub_22931D96C();
  if (v5)
  {
    v7 = v5;
    v8 = type metadata accessor for SyncedModelTester(0, a2, a3, v6);
    v9 = swift_unknownObjectRetain();
    v10 = sub_2293250C8(v9);
    swift_unknownObjectRelease();
    v16[3] = v8;
    v16[0] = v10;
    swift_retain();
    ((void (*)(_QWORD *))v7)(v16);
    sub_2293245B4((uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v11 = *(_QWORD *)(v10 + 24);
    swift_retain();
    swift_release();
    return v11;
  }
  else
  {
    type metadata accessor for SyncedModelController(0);
    v13 = swift_allocObject();
    v14 = swift_unknownObjectRetain();
    v15 = sub_229370634(v14, v13);
    swift_unknownObjectRelease();
    return v15;
  }
}

uint64_t SyncedModel.statusPublisher.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];
  uint64_t v8;

  type metadata accessor for SyncedModelControllerFactory();
  v7[2] = a1;
  v7[3] = a2;
  v8 = v2;
  v5 = *(_QWORD *)(sub_22935A8E4(v2, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v7)
                 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_status);
  swift_retain();
  swift_release();
  return v5;
}

uint64_t SyncedModel.requestOwnership(finishBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD v11[4];
  uint64_t v12;

  type metadata accessor for SyncedModelControllerFactory();
  v11[2] = a3;
  v11[3] = a4;
  v12 = v4;
  v9 = sub_22935A8E4(v4, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 760))(a1, a2);
  return swift_release();
}

Swift::Void __swiftcall SyncedModel.releaseOwnership()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  uint64_t v7;

  v3 = v1;
  v4 = v0;
  type metadata accessor for SyncedModelControllerFactory();
  v6[2] = v4;
  v6[3] = v3;
  v7 = v2;
  v5 = sub_22935A8E4(v2, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 768))(v5);
  swift_release();
}

uint64_t SyncedModel.canBeChanged.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];
  uint64_t v8;

  type metadata accessor for SyncedModelControllerFactory();
  v7[2] = a1;
  v7[3] = a2;
  v8 = v2;
  v5 = sub_22935A8E4(v2, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v7);
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 744))(v5);
  swift_release();
  return a2 & 1;
}

uint64_t SyncedModel.owner.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];
  uint64_t v8;

  type metadata accessor for SyncedModelControllerFactory();
  v7[2] = a1;
  v7[3] = a2;
  v8 = v2;
  v5 = sub_22935A8E4(v2, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v7);
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 752))(v5);
  return swift_release();
}

uint64_t SyncedModel.ownershipRequestHandler.getter(uint64_t a1, uint64_t a2)
{
  return sub_229341720(a1, a2, &OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler, (void (*)(_QWORD, _QWORD))sub_2293245A4);
}

uint64_t sub_2293414E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)@<X0>(_BYTE *@<X8>);

  result = SyncedModel.ownershipRequestHandler.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  if (result)
  {
    v6 = result;
    v7 = v5;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v6;
    *(_QWORD *)(result + 24) = v7;
    v8 = sub_229341AF8;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = result;
  return result;
}

uint64_t sub_229341558(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  v6 = *a1;
  v7 = a1[1];
  if (*a1)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = sub_229324F10;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  sub_2293245A4(v6);
  return SyncedModel.ownershipRequestHandler.setter((uint64_t)v9, v8, v4, v5);
}

uint64_t SyncedModel.ownershipRequestHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  type metadata accessor for SyncedModelControllerFactory();
  v12[2] = a3;
  v12[3] = a4;
  v13 = v4;
  v9 = (uint64_t *)(sub_22935A8E4(v4, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v12)
                 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
  v10 = *v9;
  *v9 = a1;
  v9[1] = a2;
  sub_2293245B4(v10);
  return swift_release();
}

void (*SyncedModel.ownershipRequestHandler.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  *v7 = SyncedModel.ownershipRequestHandler.getter(a2, a3);
  v7[1] = v8;
  return sub_2293416F0;
}

void sub_2293416F0(uint64_t **a1, char a2)
{
  sub_229341A04(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))SyncedModel.ownershipRequestHandler.setter, (void (*)(uint64_t, uint64_t))sub_2293245A4, (void (*)(uint64_t, uint64_t))sub_2293245B4);
}

uint64_t SyncedModel.ownershipChangedHandler.getter(uint64_t a1, uint64_t a2)
{
  return sub_229341720(a1, a2, &OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler, (void (*)(_QWORD, _QWORD))sub_229341B0C);
}

uint64_t sub_229341720(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  type metadata accessor for SyncedModelControllerFactory();
  v12[2] = a1;
  v12[3] = a2;
  v13 = v4;
  v9 = (_QWORD *)(sub_22935A8E4(v4, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v12) + *a3);
  v10 = *v9;
  a4(*v9, v9[1]);
  swift_release();
  return v10;
}

uint64_t sub_2293417BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  result = SyncedModel.ownershipChangedHandler.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  if (result)
  {
    v6 = result;
    v7 = v5;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v6;
    *(_QWORD *)(result + 24) = v7;
    v8 = sub_22932519C;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_22934182C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  v6 = *a1;
  v7 = a1[1];
  if (*a1)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = sub_22932519C;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  sub_2293245A4(v6);
  return SyncedModel.ownershipChangedHandler.setter((uint64_t)v9, v8, v4, v5);
}

uint64_t SyncedModel.ownershipChangedHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  type metadata accessor for SyncedModelControllerFactory();
  v12[2] = a3;
  v12[3] = a4;
  v13 = v4;
  v9 = (uint64_t *)(sub_22935A8E4(v4, (uint64_t (*)(uint64_t))sub_229341B00, (uint64_t)v12)
                 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler);
  v10 = *v9;
  *v9 = a1;
  v9[1] = a2;
  sub_2293245A4(a1);
  sub_2293245B4(v10);
  sub_229367870();
  sub_2293245B4(a1);
  return swift_release();
}

void (*SyncedModel.ownershipChangedHandler.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  *v7 = SyncedModel.ownershipChangedHandler.getter(a2, a3);
  v7[1] = v8;
  return sub_2293419E8;
}

void sub_2293419E8(uint64_t **a1, char a2)
{
  sub_229341A04(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))SyncedModel.ownershipChangedHandler.setter, (void (*)(uint64_t, uint64_t))sub_229341B0C, (void (*)(uint64_t, uint64_t))sub_229341B10);
}

void sub_229341A04(uint64_t **a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a1;
  v7 = **a1;
  v8 = (*a1)[1];
  v9 = (*a1)[3];
  v10 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    a4(**a1, v8);
    a3(v7, v8, v10, v9);
    a5(*v6, v6[1]);
  }
  else
  {
    a3(**a1, v8, v10, v9);
  }
  free(v6);
}

uint64_t sub_229341A9C()
{
  return 16;
}

__n128 sub_229341AA8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_229341ABC()
{
  return 16;
}

__n128 sub_229341AC8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_229341AD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_229341AF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_22935B938(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_229341B00()
{
  uint64_t *v0;

  return sub_229341140(v0[4], v0[2], v0[3]);
}

unint64_t sub_229341B20()
{
  _QWORD *v0;
  unint64_t result;

  type metadata accessor for SyncedModelManagerStore();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  sub_2293B8A68();
  swift_allocObject();
  v0[3] = sub_2293B8A5C();
  result = sub_22932802C(MEMORY[0x24BEE4AF8]);
  v0[4] = result;
  qword_255A44CB8 = (uint64_t)v0;
  return result;
}

void sub_229341B88(void *a1)
{
  uint64_t v1;
  __CFRunLoopObserver *v2;
  __CFRunLoop *v3;
  CFRunLoopMode *v4;
  __CFRunLoopObserver *v5;
  __CFRunLoop *v6;
  void *v7;
  __CFRunLoopObserver *v8;
  __CFRunLoop *v9;
  __CFRunLoop *v10;

  v2 = *(__CFRunLoopObserver **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  v3 = a1;
  v4 = (CFRunLoopMode *)MEMORY[0x24BDBD598];
  v10 = v3;
  if (v2)
  {
    v5 = v2;
    v6 = CFRunLoopGetCurrent();
    CFRunLoopRemoveObserver(v6, v5, *v4);

  }
  v7 = *(void **)(v1 + 16);
  if (v7)
  {
    v8 = v7;
    v9 = CFRunLoopGetCurrent();
    CFRunLoopAddObserver(v9, v8, *v4);

    v2 = v8;
    v10 = v9;
  }

}

void sub_229341C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const __CFAllocator *v9;
  void *v10;
  CFRunLoopObserverRef v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD v16[6];

  v2 = v1;
  sub_2293B8A38();
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  if ((*(_QWORD *)(a1 + 16) != 0) == (v4 == 0))
  {
    if (v4)
    {
      if (qword_255A41A88 != -1)
        swift_once();
      v5 = sub_2293B8D5C();
      __swift_project_value_buffer(v5, (uint64_t)qword_255A44C60);
      v6 = sub_2293B8D44();
      v7 = sub_2293B90B0();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_22931B000, v6, v7, "Setting up CFRunLoopObserver", v8, 2u);
        MEMORY[0x22E2C869C](v8, -1, -1);
      }

      v9 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
      v16[4] = sub_22934530C;
      v16[5] = v2;
      v16[0] = MEMORY[0x24BDAC760];
      v16[1] = 1107296256;
      v16[2] = sub_229341EA0;
      v16[3] = &block_descriptor_0;
      v10 = _Block_copy(v16);
      swift_retain();
      swift_release();
      v11 = CFRunLoopObserverCreateWithHandler(v9, 0xFFFFFFFuLL, 1u, 0, v10);
      _Block_release(v10);
      sub_229341B88(v11);
    }
    else
    {
      if (qword_255A41A88 != -1)
        swift_once();
      v12 = sub_2293B8D5C();
      __swift_project_value_buffer(v12, (uint64_t)qword_255A44C60);
      v13 = sub_2293B8D44();
      v14 = sub_2293B90B0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_22931B000, v13, v14, "Tearing down CFRunLoopObserver since no more active SyncedModelManager", v15, 2u);
        MEMORY[0x22E2C869C](v15, -1, -1);
      }

      sub_229341B88(0);
    }
  }
}

void sub_229341EA0(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(void *, uint64_t);
  id v6;

  v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_229341F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v10 = sub_2293B8A20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v14 = *(_QWORD *)(a1 + 32);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = v14;
  sub_229322398(a3, a4, a5, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  v16 = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  sub_229341C48(v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_229342024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = sub_22931E350(a2);
  sub_2293453F4(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  sub_229341C48(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_229342098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42678);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v31 - v6;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(v8 + 64);
  v33 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v32 = v34 - 1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  if (!v12)
    goto LABEL_8;
LABEL_6:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v17 = v16 | (v14 << 6);
  while (2)
  {
    v18 = *(_QWORD *)(v8 + 48);
    v19 = sub_2293B8A20();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v19);
    v20 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 24 * v17);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42680);
    v22 = &v5[*(int *)(v21 + 48)];
    v23 = *v20;
    v24 = v20[1];
    v25 = v20[2];
    *(_QWORD *)v22 = v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 2) = v25;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_229345394((uint64_t)v5, (uint64_t)v7);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42680);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v7, 1, v30) == 1)
        return swift_release();
      sub_22932FA8C();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v15 = sub_2293B8A20();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v7, v15);
      if (v12)
        goto LABEL_6;
LABEL_8:
      v26 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v26 < v34)
      {
        v27 = *(_QWORD *)(v33 + 8 * v26);
        if (v27)
          goto LABEL_11;
        v28 = v14 + 2;
        ++v14;
        if (v26 + 1 < v34)
        {
          v27 = *(_QWORD *)(v33 + 8 * v28);
          if (v27)
            goto LABEL_14;
          v14 = v26 + 1;
          if (v26 + 2 < v34)
          {
            v27 = *(_QWORD *)(v33 + 8 * (v26 + 2));
            if (v27)
            {
              v26 += 2;
              goto LABEL_11;
            }
            v28 = v26 + 3;
            v14 = v26 + 2;
            if (v26 + 3 < v34)
              break;
          }
        }
      }
LABEL_25:
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42680);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
      v12 = 0;
    }
    v27 = *(_QWORD *)(v33 + 8 * v28);
    if (v27)
    {
LABEL_14:
      v26 = v28;
LABEL_11:
      v12 = (v27 - 1) & v27;
      v17 = __clz(__rbit64(v27)) + (v26 << 6);
      v14 = v26;
      continue;
    }
    break;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v14 = v32;
      goto LABEL_25;
    }
    v27 = *(_QWORD *)(v33 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2293423CC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t GroupSession.replaceRootSyncedModel(_:)(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = 0;
  return GroupSession.replaceRootSyncedModel(_:options:)(a1, a2, &v3);
}

uint64_t GroupSession.replaceRootSyncedModel(_:options:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  char v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  _QWORD v104[4];

  v4 = v3;
  v97 = a2;
  v98 = a1;
  v6 = *v4;
  v7 = sub_2293B8A20();
  v100 = *(_QWORD *)(v7 - 8);
  v101 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v99 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v6 + *MEMORY[0x24BDD1EA8]);
  v10 = v9[1];
  v88 = *v9;
  v87 = v10;
  sub_2293B8B10();
  v11 = sub_2293B8DE0();
  v93 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)&v74 - v12;
  v13 = sub_229326F44();
  v14 = MEMORY[0x22E2C85DC](MEMORY[0x24BDB9EE8], v11);
  v15 = sub_229326FD0(&qword_255A424F8, (uint64_t (*)(uint64_t))sub_229326F44, MEMORY[0x24BEE5670]);
  v94 = v11;
  v104[0] = v11;
  v104[1] = v13;
  v89 = v15;
  v90 = v14;
  v104[2] = v14;
  v104[3] = v15;
  v16 = sub_2293B8D68();
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v92 = (char *)&v74 - v17;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42500);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42508);
  MEMORY[0x24BDAC7A8](v19);
  v86 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42510);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v74 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42518);
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v75 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42520);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v79 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2293B8B40();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v74 - v29;
  v31 = *a3;
  if (qword_255A41A88 != -1)
    swift_once();
  v32 = sub_2293B8D5C();
  __swift_project_value_buffer(v32, (uint64_t)qword_255A44C60);
  v33 = sub_2293B8D44();
  v34 = sub_2293B90B0();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_22931B000, v33, v34, "replaceRootSyncedModel called", v35, 2u);
    MEMORY[0x22E2C869C](v35, -1, -1);
  }

  sub_2293B8AC8();
  if ((sub_2293B8AE0() & 1) != 0)
    v36 = sub_2293B8ABC();
  else
    v36 = 0;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  v37 = (void *)sub_2293B90E0();
  LOBYTE(v104[0]) = v31;
  type metadata accessor for SyncedModelManager(0);
  swift_allocObject();
  v38 = sub_22932F5B8(v28, v36 & 1, v37, (unsigned __int8 *)v104);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    v73 = sub_2293B923C();
    v40 = v81;
    if (v73)
      v39 = sub_229344C04(MEMORY[0x24BEE4AF8]);
    else
      v39 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v39 = MEMORY[0x24BEE4B08];
    v40 = v81;
  }
  v104[0] = v39;
  type metadata accessor for SyncedModelGroupSessionMessenger();
  swift_retain();
  v41 = sub_2293255F0();
  v42 = swift_allocObject();
  swift_weakInit();
  v43 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38
                                                           + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_sendDataHandler);
  v44 = *(_QWORD *)(v38 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_sendDataHandler);
  *v43 = sub_229343014;
  v43[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
  sub_2293245B4(v44);
  type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage();
  sub_229326FD0(&qword_255A41F20, (uint64_t (*)(uint64_t))type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage, (uint64_t)&unk_2293B9BF8);
  sub_229326FD0(&qword_255A41F28, (uint64_t (*)(uint64_t))type metadata accessor for SyncedModelGroupSessionMessenger.ChunkedSyncedModelMessage, (uint64_t)&unk_2293B9BD0);
  v45 = v74;
  sub_2293B8A98();
  v46 = swift_allocObject();
  v81 = v41;
  swift_weakInit();
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_22934301C;
  *(_QWORD *)(v47 + 24) = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F50);
  sub_229343CBC(&qword_255A42528, &qword_255A42510, MEMORY[0x24BDD1CE8]);
  v48 = v75;
  v49 = v77;
  sub_2293B8DF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v45, v49);
  sub_229343CBC(&qword_255A42530, &qword_255A42518, MEMORY[0x24BDB94C8]);
  v50 = (void *)sub_2293B8DEC();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v40);
  v103 = v50;
  v102 = (id)sub_2293B90E0();
  v51 = sub_2293B90D4();
  v78 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 56);
  v52 = (uint64_t)v86;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v86, 1, 1, v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A42538);
  sub_229343CBC(&qword_255A42540, &qword_255A42538, MEMORY[0x24BDB9AF8]);
  v53 = v79;
  sub_2293B8E04();
  sub_2293251F8(v52, &qword_255A42508);

  swift_release();
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = sub_229343330;
  *(_QWORD *)(v54 + 24) = v38;
  sub_229343CBC(&qword_255A42548, &qword_255A42520, MEMORY[0x24BDB9A08]);
  swift_retain();
  v55 = v82;
  sub_2293B8E10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v53, v55);
  sub_2293B8D74();
  swift_release();
  v56 = v83;
  sub_2293B8AEC();
  v57 = swift_allocObject();
  swift_weakInit();
  v58 = (_QWORD *)swift_allocObject();
  v59 = v87;
  v58[2] = v88;
  v58[3] = v59;
  v58[4] = v57;
  v58[5] = v38;
  sub_229343CBC(&qword_255A42550, &qword_255A42500, MEMORY[0x24BDB9EE8]);
  swift_retain();
  v60 = v85;
  sub_2293B8E10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v56, v60);
  sub_2293B8D74();
  swift_release();
  v61 = v91;
  sub_2293B8B28();
  v103 = (id)sub_2293B90E0();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v78)(v52, 1, 1, v51);
  v62 = v92;
  v63 = v94;
  sub_2293B8E04();
  sub_2293251F8(v52, &qword_255A42508);

  (*(void (**)(char *, uint64_t))(v93 + 8))(v61, v63);
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v4;
  v64[3] = v38;
  v65 = v97;
  v64[4] = v98;
  v64[5] = v65;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v66 = v96;
  MEMORY[0x22E2C85DC](MEMORY[0x24BDB9A08], v96);
  sub_2293B8E10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v62, v66);
  sub_2293B8D74();
  swift_release();
  if (qword_255A41A90 != -1)
    swift_once();
  v67 = qword_255A44CB8;
  swift_retain();
  v68 = v99;
  v69 = sub_2293B8AF8();
  v70 = (char *)v104[0];
  MEMORY[0x24BDAC7A8](v69);
  *(&v74 - 6) = (char *)v67;
  *(&v74 - 5) = v68;
  v71 = (char *)v81;
  *(&v74 - 4) = (char *)v38;
  *(&v74 - 3) = v71;
  *(&v74 - 2) = v70;
  swift_retain();
  swift_retain();
  sub_2293B8A2C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release_n();
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v68, v101);
}

uint64_t sub_229342F6C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_229342F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2293256B4(a1, a2, a3, (uint64_t)sub_229343094);
    return swift_release();
  }
  return result;
}

uint64_t sub_229343014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229342F90(a1, a2, a3);
}

uint64_t sub_22934301C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X8>)
{
  return sub_229325F4C(a1, a2, a3);
}

uint64_t sub_229343024()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_229343048(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42688);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_229343094(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (a1)
  {
    v2 = a1;
    if (qword_255A41A88 != -1)
      swift_once();
    v3 = sub_2293B8D5C();
    __swift_project_value_buffer(v3, (uint64_t)qword_255A44C60);
    v4 = a1;
    v5 = a1;
    oslog = sub_2293B8D44();
    v6 = sub_2293B9098();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v13 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA0);
      v10 = sub_2293B8F0C();
      sub_22932DB78(v10, v11, &v13);
      sub_2293B9110();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22931B000, oslog, v6, "Send failed: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v8, -1, -1);
      MEMORY[0x22E2C869C](v7, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_229343288(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_2293B8B40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2293B8A74();
  sub_229331D98(a1, a2, (uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_229343330(uint64_t a1, unint64_t a2)
{
  return sub_229343288(a1, a2);
}

uint64_t sub_229343338(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t, char *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F50);
  return v3(v4, v5, &a1[*(int *)(v6 + 48)]);
}

uint64_t sub_22934338C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v81 = a3;
  v87 = sub_2293B8A20();
  v90 = *(_QWORD *)(v87 - 8);
  v4 = MEMORY[0x24BDAC7A8](v87);
  v89 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v88 = (char *)&v75 - v6;
  v7 = sub_2293B8B40();
  v85 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v77 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v75 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v75 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v75 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v82 = (char *)&v75 - v17;
  v18 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    if (qword_255A41A88 != -1)
      goto LABEL_56;
    while (1)
    {
      v21 = sub_2293B8D5C();
      __swift_project_value_buffer(v21, (uint64_t)qword_255A44C60);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v22 = sub_2293B8D44();
      v23 = sub_2293B90B0();
      v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        v25 = swift_slowAlloc();
        v84 = swift_slowAlloc();
        v92 = v84;
        *(_DWORD *)v25 = 134218754;
        v26 = sub_2293B8AD4();
        LODWORD(v79) = v24;
        v27 = *(_QWORD *)(v26 + 16);
        swift_release();
        swift_bridgeObjectRelease();
        v91 = v27;
        sub_2293B9110();
        swift_release();
        *(_WORD *)(v25 + 12) = 2048;
        v28 = *(_QWORD *)(v18 + 16);
        swift_bridgeObjectRelease();
        v91 = v28;
        sub_2293B9110();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 22) = 2080;
        v83 = v25 + 24;
        sub_229326FD0(&qword_255A42658, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F10]);
        swift_bridgeObjectRetain();
        v29 = sub_2293B8FF0();
        v31 = v30;
        swift_bridgeObjectRelease();
        v91 = sub_22932DB78(v29, v31, &v92);
        sub_2293B9110();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 32) = 2080;
        v83 = v25 + 34;
        sub_2293B8AD4();
        swift_release();
        v32 = sub_2293B8FF0();
        v34 = v33;
        swift_bridgeObjectRelease();
        v91 = sub_22932DB78(v32, v34, &v92);
        sub_2293B9110();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22931B000, v22, (os_log_type_t)v79, "Active participants count changed from:%ld to:%ld. Latest participants:%s. Previous participants:%s", (uint8_t *)v25, 0x2Au);
        v35 = v84;
        swift_arrayDestroy();
        MEMORY[0x22E2C869C](v35, -1, -1);
        MEMORY[0x22E2C869C](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      v92 = sub_2293B8AD4();
      v76 = v18;
      sub_2293442C4(v18);
      v18 = 0;
      v36 = *(_QWORD *)(v92 + 56);
      v78 = v92 + 56;
      v83 = v92;
      v84 = v7;
      v37 = 1 << *(_BYTE *)(v92 + 32);
      v38 = -1;
      if (v37 < 64)
        v38 = ~(-1 << v37);
      v39 = v38 & v36;
      v79 = (unint64_t)(v37 + 63) >> 6;
      v40 = v88;
      while (1)
      {
        if (v39)
        {
          v41 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          v42 = v41 | (v18 << 6);
          goto LABEL_26;
        }
        v43 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v43 >= v79)
          goto LABEL_28;
        v44 = *(_QWORD *)(v78 + 8 * v43);
        ++v18;
        if (!v44)
        {
          v18 = v43 + 1;
          if (v43 + 1 >= v79)
            goto LABEL_28;
          v44 = *(_QWORD *)(v78 + 8 * v18);
          if (!v44)
          {
            v18 = v43 + 2;
            if (v43 + 2 >= v79)
              goto LABEL_28;
            v44 = *(_QWORD *)(v78 + 8 * v18);
            if (!v44)
              break;
          }
        }
LABEL_25:
        v39 = (v44 - 1) & v44;
        v42 = __clz(__rbit64(v44)) + (v18 << 6);
LABEL_26:
        v46 = v82;
        v47 = v85;
        (*(void (**)(char *, unint64_t, uint64_t))(v85 + 16))(v82, *(_QWORD *)(v83 + 48) + *(_QWORD *)(v85 + 72) * v42, v7);
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v14, v46, v7);
        sub_2293B8B34();
        v48 = v14;
        v49 = v86;
        v50 = v20;
        sub_2293B8AC8();
        v51 = v89;
        sub_2293B8B34();
        v52 = *(void (**)(char *, uint64_t))(v47 + 8);
        v52(v49, v7);
        sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v53 = v87;
        LOBYTE(v46) = sub_2293B8F00();
        v54 = *(void (**)(char *, uint64_t))(v90 + 8);
        v54(v51, v53);
        v55 = v53;
        v14 = v48;
        v54(v40, v55);
        if ((v46 & 1) == 0)
          sub_2293370CC(v48);
        v7 = v84;
        v52(v48, v84);
        v20 = v50;
      }
      v45 = v43 + 3;
      if (v45 >= v79)
      {
LABEL_28:
        swift_release();
        v91 = v76;
        swift_bridgeObjectRetain();
        v56 = sub_2293B8AD4();
        sub_2293442C4(v56);
        swift_bridgeObjectRelease();
        v57 = 0;
        v18 = v91;
        v58 = *(_QWORD *)(v91 + 56);
        v79 = v91 + 56;
        v59 = 1 << *(_BYTE *)(v91 + 32);
        v60 = -1;
        if (v59 < 64)
          v60 = ~(-1 << v59);
        v61 = v60 & v58;
        v82 = (char *)((unint64_t)(v59 + 63) >> 6);
        v83 = v20;
        v62 = (uint64_t)v77;
        v63 = v88;
        while (1)
        {
          if (v61)
          {
            v64 = __clz(__rbit64(v61));
            v61 &= v61 - 1;
            v65 = v64 | (v57 << 6);
          }
          else
          {
            v66 = v57 + 1;
            if (__OFADD__(v57, 1))
              goto LABEL_53;
            if (v66 >= (uint64_t)v82)
            {
LABEL_50:
              swift_release();
              return swift_release();
            }
            v67 = *(_QWORD *)(v79 + 8 * v66);
            ++v57;
            if (!v67)
            {
              v57 = v66 + 1;
              if (v66 + 1 >= (uint64_t)v82)
                goto LABEL_50;
              v67 = *(_QWORD *)(v79 + 8 * v57);
              if (!v67)
              {
                v57 = v66 + 2;
                if (v66 + 2 >= (uint64_t)v82)
                  goto LABEL_50;
                v67 = *(_QWORD *)(v79 + 8 * v57);
                if (!v67)
                {
                  v68 = v66 + 3;
                  if (v68 >= (uint64_t)v82)
                    goto LABEL_50;
                  v67 = *(_QWORD *)(v79 + 8 * v68);
                  if (!v67)
                  {
                    while (1)
                    {
                      v57 = v68 + 1;
                      if (__OFADD__(v68, 1))
                        goto LABEL_55;
                      if (v57 >= (uint64_t)v82)
                        goto LABEL_50;
                      v67 = *(_QWORD *)(v79 + 8 * v57);
                      ++v68;
                      if (v67)
                        goto LABEL_47;
                    }
                  }
                  v57 = v68;
                }
              }
            }
LABEL_47:
            v61 = (v67 - 1) & v67;
            v65 = __clz(__rbit64(v67)) + (v57 << 6);
          }
          v69 = v85;
          v70 = v80;
          (*(void (**)(char *, unint64_t, uint64_t))(v85 + 16))(v80, *(_QWORD *)(v18 + 48) + *(_QWORD *)(v85 + 72) * v65, v7);
          (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v62, v70, v7);
          sub_2293B8B34();
          v71 = v86;
          sub_2293B8AC8();
          v72 = v89;
          sub_2293B8B34();
          v14 = *(char **)(v69 + 8);
          ((void (*)(char *, uint64_t))v14)(v71, v7);
          sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v73 = v87;
          LOBYTE(v71) = sub_2293B8F00();
          v74 = *(void (**)(char *, uint64_t))(v90 + 8);
          v74(v72, v73);
          v74(v63, v73);
          if ((v71 & 1) == 0)
            sub_229338C2C(v62);
          v7 = v84;
          ((void (*)(uint64_t, uint64_t))v14)(v62, v84);
          v20 = v83;
        }
      }
      v44 = *(_QWORD *)(v78 + 8 * v45);
      if (v44)
        break;
      while (1)
      {
        v18 = v45 + 1;
        if (__OFADD__(v45, 1))
          break;
        if (v18 >= v79)
          goto LABEL_28;
        v44 = *(_QWORD *)(v78 + 8 * v18);
        ++v45;
        if (v44)
          goto LABEL_25;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      swift_once();
    }
    v18 = v45;
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_229343C84()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_229343CB0(uint64_t *a1)
{
  uint64_t v1;

  return sub_22934338C(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_229343CBC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2C85DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_229343CFC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t ObjectType;
  uint64_t v48;
  id *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(id *, uint64_t, uint64_t);
  id *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];

  v67 = a5;
  v68 = a4;
  v69 = a3;
  v7 = *a2;
  v61 = sub_2293B8A20();
  v8 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(v7 + *MEMORY[0x24BDD1EA8]);
  v11 = *v10;
  v72 = v10[1];
  v73 = v11;
  v12 = sub_2293B8B10();
  v13 = sub_2293B9104();
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v54 - v15;
  v17 = *(_QWORD *)(v12 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v66 = (id *)((char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v18);
  v71 = (char *)&v54 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v54 - v22;
  if (qword_255A41A88 != -1)
    swift_once();
  v24 = sub_2293B8D5C();
  __swift_project_value_buffer(v24, (uint64_t)qword_255A44C60);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25(v23, a1, v12);
  swift_retain_n();
  v26 = sub_2293B8D44();
  v27 = sub_2293B90B0();
  v62 = v27;
  v28 = os_log_type_enabled(v26, v27);
  v29 = a1;
  v65 = (void (*)(id *, uint64_t, uint64_t))v25;
  if (v28)
  {
    v30 = swift_slowAlloc();
    v59 = v8;
    v31 = v30;
    v57 = swift_slowAlloc();
    v75[0] = v57;
    *(_DWORD *)v31 = 136315394;
    v56 = v26;
    v25(v16, (uint64_t)v23, v12);
    v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
    v55(v16, 0, 1, v12);
    v32 = sub_2293252E0((uint64_t)v16, v12);
    v70 = a2;
    v33 = v32;
    v35 = v34;
    v58 = v29;
    v36 = v64;
    v37 = *(void (**)(char *, uint64_t))(v63 + 8);
    v37(v16, v64);
    v74 = sub_22932DB78(v33, v35, v75);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v17 + 8);
    v38(v23, v12);
    *(_WORD *)(v31 + 12) = 2080;
    v63 = v31 + 14;
    sub_2293B8B1C();
    v55(v16, 0, 1, v12);
    v39 = sub_2293252E0((uint64_t)v16, v12);
    v41 = v40;
    v37(v16, v36);
    v29 = v58;
    v74 = sub_22932DB78(v39, v41, v75);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    v42 = v56;
    _os_log_impl(&dword_22931B000, v56, (os_log_type_t)v62, "GroupSession state changed to:%s from:%s", (uint8_t *)v31, 0x16u);
    v43 = v57;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v43, -1, -1);
    v44 = v31;
    v8 = v59;
    MEMORY[0x22E2C869C](v44, -1, -1);

  }
  else
  {
    v38 = *(void (**)(char *, uint64_t))(v17 + 8);
    v38(v23, v12);

    swift_release_n();
  }
  v45 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v71, *MEMORY[0x24BDD1E30], v12);
  v46 = sub_2293B8B04();
  v38(v45, v12);
  if ((v46 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    v48 = sub_2293410E0(ObjectType, v67);
    sub_229330158(v48);
    return swift_release();
  }
  else
  {
    v50 = v66;
    v65(v66, v29, v12);
    if ((*(unsigned int (**)(id *, uint64_t))(v17 + 88))(v50, v12) == *MEMORY[0x24BDD1E20])
    {
      (*(void (**)(id *, uint64_t))(v17 + 96))(v50, v12);

      if (qword_255A41A90 != -1)
        swift_once();
      v51 = qword_255A44CB8;
      swift_retain();
      v52 = v60;
      v53 = sub_2293B8AF8();
      MEMORY[0x24BDAC7A8](v53);
      *(&v54 - 2) = v51;
      *(&v54 - 1) = (uint64_t)v52;
      sub_2293B8A2C();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v52, v61);
    }
    else
    {
      return ((uint64_t (*)(id *, uint64_t))v38)(v50, v12);
    }
  }
}

uint64_t sub_229344264()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_229344298(uint64_t a1)
{
  uint64_t v1;

  return sub_229343CFC(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_2293442A4()
{
  uint64_t *v0;

  return sub_229341F00(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_2293442C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v25 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        return swift_release();
      v23 = *(_QWORD *)(v26 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          return swift_release();
        v23 = *(_QWORD *)(v26 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v18)
            return swift_release();
          v23 = *(_QWORD *)(v26 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_229344528((uint64_t)v10, (uint64_t)v5);
    sub_2293251F8((uint64_t)v5, &qword_255A41BC0);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v24 = v22 + 4;
  if (v24 >= v18)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_229344528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_2293B8B40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_229326FD0(&qword_255A42658, v11, MEMORY[0x24BDD1F10]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_2293B8EE8();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
      v19 = sub_2293B8F00();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_229344764();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_229344988(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

void *sub_229344764()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_2293B8B40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A42650);
  v6 = *v0;
  v7 = sub_2293B9164();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_229344988(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_2293B8B40();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_2293B9134();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_229326FD0(&qword_255A42658, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F10]);
        v16 = sub_2293B8EE8();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_229344C04(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2293B923C();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A42660);
      result = sub_2293B9170();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2293B923C();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x22E2C7F88](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_2293B8D80();
    sub_229326FD0(&qword_255A42668, v8, MEMORY[0x24BDB9B70]);
    result = sub_2293B8EE8();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_229326FD0(&qword_255A42670, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_2293B8F00();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SyncedModelManagerStore()
{
  return objc_opt_self();
}

uint64_t destroy for SyncedModelManagerStore.Item()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12SyncedModels23SyncedModelManagerStoreC4ItemVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SyncedModelManagerStore.Item(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SyncedModelManagerStore.Item(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedModelManagerStore.Item(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedModelManagerStore.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelManagerStore.Item()
{
  return &type metadata for SyncedModelManagerStore.Item;
}

uint64_t sub_2293450A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_2293B8B40();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A42650);
    v10 = sub_2293B9170();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_229326FD0(&qword_255A42658, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F10]);
      v14 = sub_2293B8EE8();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
          v20 = sub_2293B8F00();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_22934530C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 == 4)
    return sub_2293B8A2C();
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_22934537C()
{
  uint64_t v0;

  return sub_229342098(v0);
}

uint64_t sub_229345394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2293453DC()
{
  uint64_t v0;

  return sub_229342024(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2293453F4(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_229345434()
{
  uint64_t v0;
  uint64_t result;

  sub_2293B8990();
  swift_allocObject();
  v0 = sub_2293B8984();
  result = sub_2293B896C();
  qword_255A44CC0 = v0;
  return result;
}

uint64_t sub_22934547C()
{
  uint64_t result;

  sub_2293B8960();
  swift_allocObject();
  result = sub_2293B8954();
  qword_255A44CC8 = result;
  return result;
}

void sub_2293454B8()
{
  type metadata accessor for SyncedSet.SyncedSetChangeInfo();
}

uint64_t sub_229345508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[96];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v4 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  *(_QWORD *)(v2 - 144) = TupleTypeMetadata2;
  *(_QWORD *)(v2 - 136) = v4;
  v5 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v7 = (uint64_t *)&v21[-v6];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (_QWORD *)(v0 + qword_255A426B8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v11 = sub_2293B8FFC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_2293B8FFC();
  swift_bridgeObjectRelease();
  *v10 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 120) = v11;
  v13 = sub_2293B9044();
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE1718], v13);
  v14 = sub_2293B8FE4();
  *(_QWORD *)(v2 - 120) = v12;
  v15 = sub_2293B8FE4();
  v16 = sub_2293B8B40();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 16))(v9, *(_QWORD *)(v2 - 128), v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  v18 = *(_QWORD *)(v2 - 144);
  v19 = (uint64_t)v7 + *(int *)(v18 + 48);
  *v7 = v14;
  v7[1] = v15;
  sub_22932E9D0((uint64_t)v9, v19, &qword_255A41BC0);
  sub_2293B8D8C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v7, v18);
}

unint64_t sub_229345728(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t sub_229345738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7628147 && a2 == 0xE300000000000000;
  if (v2 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F7473626D6F74 && a2 == 0xEA00000000007365 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2293B9350();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_229345894(char a1)
{
  if (!a1)
    return 7628147;
  if (a1 == 1)
    return 0x6E6F7473626D6F74;
  return 0x6D617473656D6974;
}

BOOL sub_2293458EC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_2293458FC()
{
  return sub_2293B93E0();
}

uint64_t sub_229345920()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

uint64_t sub_229345964(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_229345994
                                                            + 4 * asc_2293BA320[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_229345994()
{
  return 0x6D617473656D6974;
}

uint64_t sub_2293459B0()
{
  return 25705;
}

uint64_t sub_2293459BC()
{
  return 0x72656E776FLL;
}

void sub_2293459CC()
{
  type metadata accessor for SyncedSet.Element.CodingKeys();
}

uint64_t sub_229345A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x22E2C85DC](&unk_2293BA790, a1);
  v3 = sub_2293B92F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_2293B944C();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_2293B92E4();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    type metadata accessor for LamportTimestamp(0);
    sub_229326FD0(&qword_255A41F88, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA844);
    sub_2293B92E4();
    *(_BYTE *)(v2 - 112) = 2;
    sub_2293B8A20();
    sub_229326FD0(&qword_255A41F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_2293B92CC();
    *(_BYTE *)(v2 - 112) = 3;
    sub_2293B92CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_229345C1C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[7];
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v16[2] = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v16[3] = (char *)v16 - v12;
  v17 = type metadata accessor for LamportTimestamp(0);
  v13 = MEMORY[0x24BDAC7A8](v17);
  v16[6] = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)v16 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  type metadata accessor for SyncedSet.Element.CodingKeys();
}

void sub_229345D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x22E2C85DC](&unk_2293BA790, a1);
  v6 = sub_2293B92B4();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for SyncedSet.Element();
}

uint64_t sub_229345DAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  *(_QWORD *)(v3 - 192) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v21 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 128) = v1;
  v7 = *(_QWORD *)(v3 - 72);
  sub_2293B9434();
  v8 = v2;
  if (v7)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  v9 = *(_QWORD *)(v3 - 176);
  *(_QWORD *)(v3 - 224) = v4;
  v11 = *(int **)(v3 - 192);
  v10 = *(_QWORD *)(v3 - 184);
  v12 = v6;
  v13 = *(_QWORD *)(v3 - 152);
  v14 = *(_QWORD *)(v3 - 144);
  *(_QWORD *)(v3 - 72) = v8;
  *(_BYTE *)(v3 - 112) = 0;
  sub_2293B92A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 32))(v12, *(_QWORD *)(v3 - 136), v14);
  *(_BYTE *)(v3 - 112) = 1;
  sub_229326FD0(&qword_255A41F78, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA86C);
  sub_2293B92A8();
  sub_22932EA14(v9, (uint64_t)&v12[v11[13]], type metadata accessor for LamportTimestamp);
  sub_2293B8A20();
  v15 = v12;
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  *(_BYTE *)(v3 - 112) = 2;
  sub_229326FD0(&qword_255A41EF8, v16, MEMORY[0x24BDCEAA8]);
  v17 = *(_QWORD *)(v3 - 200);
  sub_2293B9290();
  sub_22932E9D0(v17, (uint64_t)&v15[v11[14]], &qword_255A41F70);
  *(_BYTE *)(v3 - 112) = 3;
  v18 = *(_QWORD *)(v3 - 208);
  sub_2293B9290();
  (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 120));
  sub_22932E9D0(v18, (uint64_t)&v15[v11[15]], &qword_255A41F70);
  v19 = *(_QWORD *)(v3 - 224);
  (*(void (**)(_QWORD, char *, int *))(v19 + 16))(*(_QWORD *)(v3 - 216), v15, v11);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 72));
  return (*(uint64_t (**)(char *, int *))(v19 + 8))(v15, v11);
}

void sub_2293460AC(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SyncedSet.Element();
}

uint64_t sub_229346114(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22932EA14(v3, v4 + a1[13], type metadata accessor for LamportTimestamp);
  sub_22932E9D0(v2, v4 + a1[14], &qword_255A41F70);
  return sub_22932E9D0(v1, v4 + a1[15], &qword_255A41F70);
}

uint64_t sub_22934617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2C85DC](&unk_2293BA568, a3);
  return sub_2293B9374();
}

uint64_t sub_2293461D0(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BA568, a1);
  return sub_2293B8F54();
}

uint64_t sub_22934621C()
{
  MEMORY[0x22E2C85DC](&unk_2293BA568);
  return sub_2293B8F6C();
}

uint64_t sub_22934626C()
{
  MEMORY[0x22E2C85DC](&unk_2293BA568);
  return sub_2293B8F60();
}

unint64_t sub_2293462BC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229345728(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2293462E4()
{
  char *v0;

  return sub_229345894(*v0);
}

uint64_t sub_2293462EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_229345738(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_229346310@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229345728(a1);
  *a2 = result;
  return result;
}

uint64_t sub_229346334(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BA658, a1);
  return sub_2293B9458();
}

uint64_t sub_229346368(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BA658, a1);
  return sub_2293B9464();
}

BOOL sub_22934639C(char *a1, char *a2)
{
  return sub_2293458EC(*a1, *a2);
}

uint64_t sub_2293463B4()
{
  return sub_229345920();
}

uint64_t sub_2293463C4()
{
  return sub_2293458FC();
}

uint64_t sub_2293463D4()
{
  sub_2293B93D4();
  sub_2293458FC();
  return sub_2293B93F8();
}

uint64_t sub_22934641C()
{
  unsigned __int8 *v0;

  return sub_229345964(*v0);
}

uint64_t sub_22934642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_229328A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22934645C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22935038C();
  *a1 = result;
  return result;
}

uint64_t sub_22934648C(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BA790, a1);
  return sub_2293B9458();
}

uint64_t sub_2293464C0(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BA790, a1);
  return sub_2293B9464();
}

void sub_2293464F4(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_229345C1C(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_229346514()
{
  sub_2293459CC();
}

void SyncedSet.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  SyncedSet.init(from:)(a1);
}

void SyncedSet.init(from:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[50];

  v21[26] = a1;
  v2 = (_QWORD *)*v1;
  v3 = type metadata accessor for LamportTimestamp(0);
  v21[21] = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21[2] = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v21[3] = (char *)v21 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v7);
  v21[8] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v21[9] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[35];
  v21[22] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v21[20] = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v21[19] = (char *)v21 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v21[27] = (char *)v21 - v17;
  v19 = v2[36];
  v18 = v2[37];
  v21[11] = v2;
  v20 = v2[38];
  v21[46] = v12;
  v21[47] = v19;
  v21[48] = v18;
  v21[49] = v20;
  type metadata accessor for SyncedSet.Element();
}

void type metadata accessor for SyncedSet.Element()
{
  JUMPOUT(0x22E2C857CLL);
}

void type metadata accessor for SyncedSet.CodingKeys()
{
  JUMPOUT(0x22E2C857CLL);
}

void SyncedSet.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[27];
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = (_QWORD *)*v0;
  v16 = type metadata accessor for LamportTimestamp(0);
  v15[24] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v15[1] = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v15[20] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v15[19] = (char *)v15 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v17 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v18 = (char *)v15 - v10;
  v12 = v1[35];
  v11 = v1[36];
  v14 = v1[37];
  v13 = v1[38];
  v19 = v12;
  v20 = v11;
  v21 = v14;
  v22 = v13;
  type metadata accessor for SyncedSet.Element();
}

void SyncedSet.__allocating_init(wrappedValue:)()
{
  swift_allocObject();
  sub_229350394();
}

uint64_t sub_229347ECC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void SyncedSet.init(wrappedValue:)()
{
  sub_229350394();
}

uint64_t sub_229347EFC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_229347F18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *v0;
  v11 = type metadata accessor for LamportTimestamp(0);
  v8 = *(_QWORD *)(v11 - 8);
  v2 = MEMORY[0x24BDAC7A8](v11);
  v9 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v7 = type metadata accessor for SetChangedMessage(0);
  MEMORY[0x24BDAC7A8](v7);
  v4 = *(_QWORD *)(v1 + 296);
  v5 = *(_QWORD *)(v1 + 304);
  v10 = *(_OWORD *)(v1 + 280);
  v13 = v10;
  v14 = v4;
  v15 = v5;
  v12 = v5;
  type metadata accessor for SyncedSet.SyncedSetChangeInfo();
}

uint64_t sub_229348008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  _BYTE *v36;
  unint64_t *v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[96];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 264) = TupleTypeMetadata2;
  *(_QWORD *)(v4 - 272) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v4 - 280) = &v88[-v7];
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v4 - 288) = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for PBUUID(0);
  *(_QWORD *)(v4 - 248) = v9;
  *(_QWORD *)(v4 - 208) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v88[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v88[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_2293B8A20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v4 - 216) = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v88[-v20];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 256) = &v88[-v22];
  v23 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller;
  *(_QWORD *)(v4 - 200) = v1;
  *(_QWORD *)(v4 - 184) = v23;
  v24 = *(_QWORD *)(v1 + v23);
  if (v24)
  {
    v25 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 744);
    v26 = swift_retain();
    LOBYTE(v25) = v25(v26);
    result = swift_release();
    if ((v25 & 1) == 0)
      return result;
  }
  *(_QWORD *)(v4 - 304) = v11;
  *(_QWORD *)(v4 - 352) = v3;
  *(_QWORD *)(v4 - 344) = v2;
  v28 = *(_QWORD *)(v4 - 200);
  v29 = (_QWORD *)(v28 + qword_255A426B8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v30 = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v4 - 296) = sub_2293B8FFC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 - 312) = v30;
  *(_QWORD *)(v4 - 240) = sub_2293B8FFC();
  swift_bridgeObjectRelease();
  *v29 = v0;
  swift_bridgeObjectRetain();
  v31 = v28;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v28 + *(_QWORD *)(v4 - 184));
  if (!v32)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    v35 = *(_QWORD *)(v4 - 248);
LABEL_7:
    v37 = *(unint64_t **)(v4 - 304);
    if (qword_255A41AD0 != -1)
      goto LABEL_29;
    goto LABEL_8;
  }
  v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v33(v14, v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v34 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v35 = *(_QWORD *)(v4 - 248);
  if (v34 == 1)
    goto LABEL_7;
  v36 = *(_BYTE **)(v4 - 256);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v36, v14, v15);
  v37 = *(unint64_t **)(v4 - 304);
  while (1)
  {
    v39 = (_DWORD *)(v31 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp);
    swift_beginAccess();
    v33(v21, (uint64_t)v36, v15);
    v14 = *(_BYTE **)(v4 - 216);
    v33(v14, (uint64_t)v21, v15);
    sub_229357158((uint64_t)v14, v37);
    v40 = (uint64_t)v39 + *(int *)(*(_QWORD *)(v4 - 192) + 24);
    sub_2293251F8(v40, &qword_255A41F98);
    sub_22932EA14((uint64_t)v37, v40, type metadata accessor for PBUUID);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 56))(v40, 0, 1, v35);
    v41 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
    v41(v21, v15);
    if (*v39 != -1)
      break;
    __break(1u);
LABEL_29:
    swift_once();
LABEL_8:
    v38 = __swift_project_value_buffer(v15, (uint64_t)qword_255A44CF0);
    v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
    v36 = *(_BYTE **)(v4 - 256);
    v33(v36, v38, v15);
    sub_2293251F8((uint64_t)v14, &qword_255A41F70);
  }
  ++*v39;
  v41(v36, v15);
  swift_endAccess();
  v42 = *(_QWORD *)(v4 - 296);
  *(_QWORD *)(v4 - 152) = v42;
  v43 = sub_2293B9044();
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE1718], v43);
  sub_2293B8F3C();
  v44 = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v4 - 152) = v44;
  sub_2293B8F3C();
  *(_QWORD *)(v4 - 208) = 0;
  *(_QWORD *)(v4 - 152) = v42;
  swift_bridgeObjectRetain();
  v45 = sub_2293B8FE4();
  *(_QWORD *)(v4 - 152) = v44;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 - 176) = v43;
  v46 = sub_2293B8FE4();
  v47 = sub_2293B8B40();
  v48 = *(_QWORD *)(v4 - 288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v48, 1, 1, v47);
  v49 = *(_QWORD *)(v4 - 264);
  v50 = *(uint64_t **)(v4 - 280);
  v51 = (uint64_t)v50 + *(int *)(v49 + 48);
  *v50 = v45;
  v50[1] = v46;
  sub_22932E9D0(v48, v51, &qword_255A41BC0);
  sub_2293B8D8C();
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 272) + 8))(v50, v49);
  v52 = *(_QWORD *)(v31 + *(_QWORD *)(v4 - 184));
  if (!v52)
    goto LABEL_16;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_16;
  v54 = Strong;
  if (*(_QWORD *)(Strong + 24))
  {
    swift_retain();
    swift_retain();
    sub_2293B8DBC();
    swift_release();
    v55 = *(_QWORD *)(v4 - 176);
    if (*(_BYTE *)(v4 - 152) == 1 && *(_BYTE *)(v54 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options) != 1)
    {
      swift_release();
      swift_release();
LABEL_16:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_retain();
    v55 = *(_QWORD *)(v4 - 176);
  }
  *(_QWORD *)(v4 - 184) = v54;
  *(_QWORD *)(v4 - 176) = v52;
  v56 = *(_QWORD *)(v4 - 344);
  v57 = *(_QWORD *)(v4 - 352);
  sub_229324D74((uint64_t)v39, v57, type metadata accessor for LamportTimestamp);
  *(_DWORD *)(v4 - 216) = *(_DWORD *)(v31 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID);
  *(_DWORD *)v56 = 0;
  v58 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v56 + 8) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v56 + 16) = v58;
  v59 = *(_QWORD *)(v4 - 336);
  sub_2293B8B70();
  v60 = v56 + *(int *)(v59 + 32);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 328) + 56);
  v62 = *(_QWORD *)(v4 - 192);
  v61(v60, 1, 1, v62);
  v63 = *(_QWORD *)(v4 - 320);
  sub_229324D74(v57, v63, type metadata accessor for LamportTimestamp);
  sub_2293251F8(v60, &qword_255A41FA8);
  sub_22932EA14(v63, v60, type metadata accessor for LamportTimestamp);
  v64 = v60;
  v65 = *(_QWORD *)(v4 - 296);
  v61(v64, 0, 1, v62);
  sub_22932E904(v57, type metadata accessor for LamportTimestamp);
  *(_DWORD *)v56 = *(_DWORD *)(v4 - 216);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v56 + 16) = v58;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v56 + 8) = v58;
  *(_QWORD *)(v4 - 152) = v65;
  v66 = type metadata accessor for ValueData(0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA0);
  v68 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE1728], v55);
  v69 = *(_QWORD *)(v4 - 208);
  v70 = sub_229354644((void (*)(char *, char *))sub_2293529B0, v31, v55, v66, v67, v68, MEMORY[0x24BEE3F20], v4 - 168);
  if (v69)
  {
    swift_bridgeObjectRelease();
    v71 = *(void **)(v4 - 168);
    if (qword_255A41A88 != -1)
      swift_once();
    v72 = sub_2293B8D5C();
    __swift_project_value_buffer(v72, (uint64_t)qword_255A44C60);
    v73 = v71;
    v74 = v71;
    v75 = sub_2293B8D44();
    v76 = sub_2293B9098();
    if (os_log_type_enabled(v75, v76))
    {
      *(_QWORD *)(v4 - 208) = v68;
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      *(_QWORD *)(v4 - 152) = v78;
      *(_QWORD *)(v4 - 192) = v66;
      *(_DWORD *)v77 = 136315138;
      *(_QWORD *)(v4 - 216) = v77 + 4;
      *(_QWORD *)(v4 - 168) = v71;
      v79 = v71;
      v80 = sub_2293B8F0C();
      *(_QWORD *)(v4 - 168) = sub_22932DB78(v80, v81, (uint64_t *)(v4 - 152));
      v66 = *(_QWORD *)(v4 - 192);
      sub_2293B9110();
      v68 = *(_QWORD *)(v4 - 208);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22931B000, v75, v76, "SyncedSet: failed to encode removed element data: %s", v77, 0xCu);
      swift_arrayDestroy();
      v82 = v78;
      v56 = *(_QWORD *)(v4 - 344);
      MEMORY[0x22E2C869C](v82, -1, -1);
      MEMORY[0x22E2C869C](v77, -1, -1);

    }
    else
    {

    }
    v31 = *(_QWORD *)(v4 - 200);
    v84 = *(_QWORD *)(v4 - 240);
  }
  else
  {
    v83 = v70;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v56 + 16) = v83;
    v84 = *(_QWORD *)(v4 - 240);
  }
  *(_QWORD *)(v4 - 152) = v84;
  v85 = sub_229354644((void (*)(char *, char *))sub_2293529B0, v31, v55, v66, v67, v68, MEMORY[0x24BEE3F20], v4 - 168);
  swift_bridgeObjectRelease();
  v86 = swift_bridgeObjectRelease();
  *(_QWORD *)(v56 + 8) = v85;
  v87 = *(_QWORD *)(v4 - 176);
  MEMORY[0x24BDAC7A8](v86);
  *(_QWORD *)&v88[-16] = v87;
  *(_QWORD *)&v88[-8] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB8);
  sub_2293B8A2C();
  swift_release();
  swift_release();
  return sub_22932E904(v56, type metadata accessor for SetChangedMessage);
}

uint64_t SyncedSet.wrappedValue.getter()
{
  sub_229350674();
  return swift_bridgeObjectRetain();
}

void SyncedSet.wrappedValue.setter()
{
  sub_2293506B8();
}

uint64_t sub_229348CC8()
{
  return swift_bridgeObjectRelease();
}

void (*SyncedSet.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + qword_255A426B8);
  swift_beginAccess();
  v3[3] = *v4;
  swift_bridgeObjectRetain();
  return sub_229348D4C;
}

void sub_229348D4C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_229347F18();
  }
  sub_229347F18();
}

uint64_t SyncedSet.projectedValue.getter()
{
  return swift_retain();
}

uint64_t sub_229348DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
  swift_beginAccess();
  sub_229324D74(v7, (uint64_t)v6, type metadata accessor for LamportTimestamp);
  sub_229348E7C(a1, (uint64_t)v6);
  return sub_22932E904((uint64_t)v6, type metadata accessor for LamportTimestamp);
}

uint64_t sub_229348E7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18[4];

  v3 = v2;
  v6 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v6 + 280);
  MEMORY[0x24BDAC7A8](v8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  sub_229324D74(a2, (uint64_t)v10, type metadata accessor for LamportTimestamp);
  v15 = type metadata accessor for LamportTimestamp(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
  swift_beginAccess();
  sub_2293B8EC4();
  sub_2293B8EDC();
  swift_endAccess();
  swift_beginAccess();
  sub_2293B8E88();
  swift_endAccess();
  result = sub_2293251F8((uint64_t)v10, &qword_255A41FA8);
  if (*((_BYTE *)v3 + qword_255A426B0) == 1)
  {
    v18[3] = v11;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
    v14((char *)boxed_opaque_existential_0, a1, v11);
    sub_2293287B0((uint64_t)v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  return result;
}

uint64_t sub_229349060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v4 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v17 - v11);
  v13 = sub_2293B8A20();
  v14 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14((uint64_t (*)(char *, uint64_t, uint64_t))v10, 1, 1, v13);
  v15 = a2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
  swift_beginAccess();
  sub_229324D74(v15, (uint64_t)v6, type metadata accessor for LamportTimestamp);
  sub_2293491EC(a1, v12, (uint64_t)v10, (uint64_t)v6);
  sub_22932E904((uint64_t)v6, type metadata accessor for LamportTimestamp);
  sub_2293251F8((uint64_t)v10, &qword_255A41F70);
  return sub_2293251F8((uint64_t)v12, &qword_255A41F70);
}

uint64_t sub_2293491EC(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[4];

  v19 = a3;
  v20 = a4;
  v18 = a2;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 280);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = type metadata accessor for LamportTimestamp(255);
  sub_2293B8EC4();
  sub_2293B8E88();
  swift_endAccess();
  sub_2293251F8((uint64_t)v12, &qword_255A41FA8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v9, a1, v6);
  sub_229324D74(v20, (uint64_t)v12, type metadata accessor for LamportTimestamp);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  swift_beginAccess();
  sub_2293B8EDC();
  result = swift_endAccess();
  if (*(_BYTE *)(v4 + qword_255A426B0) == 1)
  {
    v21[3] = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
    v14((char *)boxed_opaque_existential_0, a1, v6);
    sub_22932820C((uint64_t)v21, v18, v19);
    return sub_2293251F8((uint64_t)v21, &qword_255A41F90);
  }
  return result;
}

uint64_t sub_2293493DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2293493E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a1;
  v66 = a2;
  v3 = *v2;
  v68 = *(_QWORD *)(*v2 + 280);
  v4 = *(_QWORD *)(v68 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v59 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v59 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v59 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)&v59 - v29;
  if ((*((_BYTE *)v2 + qword_255A426B0) & 1) != 0)
  {
    v60 = v28;
    v61 = v27;
    v62 = v26;
    v63 = v10;
    v64 = v3;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v32 = v65;
    v31(v13, v65, v68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if (swift_dynamicCast())
    {
      v33 = v67;
      ObjectType = swift_getObjectType();
      v35 = sub_2293410E0(ObjectType, v33) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v36 = sub_2293B8A20();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v61, v35, v36);
      swift_release();
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v39(v38, 0, 1, v36);
      v40 = (uint64_t)v63;
      v41 = v68;
      v31(v63, v32, v68);
      v42 = v62;
      v39(v62, 1, 1, v36);
      sub_229353580(v38, v40, v42, v41, *(_QWORD *)(v64 + 296), v66);
      return swift_unknownObjectRelease();
    }
    v54 = sub_2293B8A20();
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v55(v20, 1, 1, v54);
    v56 = v7;
    v57 = v68;
    v31(v7, v32, v68);
    v58 = v60;
    v55((char *)v60, 1, 1, v54);
    v48 = *(_QWORD *)(v64 + 296);
    v49 = v66;
    v50 = (uint64_t)v20;
    v51 = (uint64_t)v56;
    v52 = v58;
    v53 = v57;
  }
  else
  {
    v44 = sub_2293B8A20();
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
    v45(v30, 1, 1, v44);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v47 = v68;
    v46(v15, v65, v68);
    v45(v25, 1, 1, v44);
    v48 = *(_QWORD *)(v3 + 296);
    v49 = v66;
    v50 = (uint64_t)v30;
    v51 = (uint64_t)v15;
    v52 = (uint64_t)v25;
    v53 = v47;
  }
  return sub_229353580(v50, v51, v52, v53, v48, v49);
}

void sub_2293497C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[30];

  v12[8] = a3;
  v12[11] = a1;
  v12[12] = a2;
  v4 = (_QWORD *)*v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v5);
  v12[5] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v7);
  v12[2] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v4[36];
  v10 = v4[37];
  v11 = v4[38];
  v12[24] = v4[35];
  v12[25] = v9;
  v12[7] = v9;
  v12[6] = v10;
  v12[26] = v10;
  v12[27] = v11;
  type metadata accessor for SyncedSet.MergeValues();
}

void sub_2293498A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t Strong;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _DWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[96];

  *(_QWORD *)(v6 - 288) = a1;
  *(_QWORD *)(v6 - 296) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v35[-v7];
  v9 = sub_2293B8B94();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for SetCatchupData(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller;
  *(_QWORD *)(v6 - 248) = v1;
  *(_QWORD *)(v6 - 240) = v2;
  if (*(_QWORD *)(v1 + v13))
  {
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v15 = *(_BYTE *)(Strong + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options);
      swift_release();
      if ((v15 & 1) == 0)
      {
        if (qword_255A41A88 != -1)
          swift_once();
        v16 = sub_2293B8D5C();
        __swift_project_value_buffer(v16, (uint64_t)qword_255A44C60);
        v17 = sub_2293B8D44();
        v18 = sub_2293B90B0();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v19 = 0;
          _os_log_impl(&dword_22931B000, v17, v18, "SyncedSet: clearing existing data due to catchup response and replaceFromLeader option", v19, 2u);
          v20 = v19;
          v2 = *(_QWORD *)(v6 - 240);
          MEMORY[0x22E2C869C](v20, -1, -1);
        }

        v21 = sub_2293B8F90();
        v22 = MEMORY[0x22E2C7DA8](v21, v4);
        *(_QWORD *)(v6 - 312) = v5;
        if (v22)
          *(_QWORD *)(v6 - 320) = sub_229350084(v21, v4, v2);
        else
          *(_QWORD *)(v6 - 320) = MEMORY[0x24BEE4B08];
        swift_bridgeObjectRelease();
        v23 = *(_QWORD *)(v6 - 248);
        v24 = (_QWORD *)(v23 + qword_255A426B8);
        swift_beginAccess();
        *v24 = *(_QWORD *)(v6 - 320);
        swift_bridgeObjectRelease();
        swift_getTupleTypeMetadata2();
        sub_2293B8F90();
        v25 = sub_2293B8E94();
        v26 = (uint64_t *)(v23 + qword_255A42690);
        swift_beginAccess();
        *v26 = v25;
        swift_bridgeObjectRelease();
        sub_2293B8F90();
        v27 = sub_2293B8E94();
        v28 = (uint64_t *)(v23 + qword_255A42698);
        swift_beginAccess();
        *v28 = v27;
        swift_bridgeObjectRelease();
        v5 = *(_QWORD *)(v6 - 312);
      }
    }
  }
  *(_QWORD *)(v6 - 96) = 0;
  *(_OWORD *)(v6 - 128) = 0u;
  *(_OWORD *)(v6 - 112) = 0u;
  sub_229324ECC(*(_QWORD *)(v6 - 232), *(_QWORD *)(v6 - 224));
  sub_2293B8B88();
  sub_229326FD0(&qword_255A428C0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB7B4);
  sub_2293B8C60();
  v29 = *(_QWORD *)(v6 - 280);
  sub_229324E44((uint64_t)&v12[*(int *)(v10 + 36)], v29, &qword_255A41FA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v3) == 1)
  {
    v30 = *(_DWORD **)(v6 - 304);
    *v30 = 0;
    sub_2293B8B70();
    v31 = (char *)v30 + *(int *)(v3 + 24);
    v32 = type metadata accessor for PBUUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    sub_2293251F8(v29, &qword_255A41FA8);
  }
  else
  {
    v30 = *(_DWORD **)(v6 - 304);
    sub_22932EA14(v29, (uint64_t)v30, type metadata accessor for LamportTimestamp);
  }
  sub_22932EA14((uint64_t)v30, (uint64_t)v8, type metadata accessor for LamportTimestamp);
  v33 = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = v33;
  v34 = *(_QWORD *)(v6 - 240);
  *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 272);
  *(_QWORD *)(v6 - 104) = v34;
  type metadata accessor for SyncedSet.MergeValues();
}

void sub_229349F18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22932EA14(a1, a2, type metadata accessor for LamportTimestamp);
  type metadata accessor for SyncedSet.MergeValues();
}

int *sub_229349F80(int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + result[13]) = v4;
  *(_QWORD *)(v5 + result[14]) = v3;
  *(_QWORD *)(v5 + result[15]) = v2;
  *(_QWORD *)(v5 + result[16]) = v1;
  return result;
}

void sub_229349FC0()
{
  type metadata accessor for SyncedSet.SyncedSetChangeInfo();
}

uint64_t sub_22934BF5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t result;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  int64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, _QWORD, uint64_t, _QWORD *);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t TupleTypeMetadata2;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  int64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  _QWORD *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  _QWORD *v246;
  char *v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;

  v1 = *v0;
  v204 = type metadata accessor for SetCatchupData(0);
  MEMORY[0x24BDAC7A8](v204);
  v205 = (uint64_t *)((char *)&v202 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for LamportTimestamp(0);
  v234 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v202 = (uint64_t)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v203 = (uint64_t)&v202 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v235 = (uint64_t)&v202 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v214 = (char *)&v202 - v10;
  v11 = *(_QWORD *)(v1 + 280);
  v13 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v224 = sub_2293B9104();
  v223 = *(_QWORD *)(v224 - 8);
  v14 = MEMORY[0x24BDAC7A8](v224);
  v225 = (char *)&v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v222 = (char *)&v202 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v17);
  v240 = (char *)&v202 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v221 = (char *)&v202 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v220 = (uint64_t)&v202 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v237 = (uint64_t)&v202 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v232 = (char *)&v202 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v231 = (char *)&v202 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v212 = (char *)&v202 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v211 = (char *)&v202 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v210 = (uint64_t)&v202 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v209 = (char *)&v202 - v36;
  v37 = type metadata accessor for ValueData(0);
  v250 = *(_QWORD *)(v37 - 8);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v236 = (uint64_t)&v202 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v242 = (uint64_t)&v202 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v228 = (uint64_t)&v202 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v227 = (uint64_t)&v202 - v45;
  v256 = *(_QWORD *)(v11 - 8);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v219 = (char *)&v202 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v218 = (char *)&v202 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v247 = (char *)&v202 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v230 = (char *)&v202 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v208 = (char *)&v202 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v207 = (char *)&v202 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v229 = (char *)&v202 - v59;
  MEMORY[0x24BDAC7A8](v58);
  v245 = (char *)&v202 - v60;
  v61 = sub_2293B9104();
  MEMORY[0x24BDAC7A8](v61);
  v63 = (char *)&v202 - v62;
  v246 = v0;
  v64 = (_QWORD *)((char *)v0 + qword_255A426B8);
  swift_beginAccess();
  v251 = v1;
  v65 = *(_QWORD *)(v1 + 304);
  swift_bridgeObjectRetain();
  v66 = sub_2293B9008();
  swift_bridgeObjectRelease();
  v67 = MEMORY[0x24BEE4AF8];
  v255 = sub_22936F1B0(0, v66 & ~(v66 >> 63), 0, MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v266 = v11;
  v68 = sub_2293B9008();
  swift_bridgeObjectRelease();
  v254 = sub_22936F19C(0, v68 & ~(v68 >> 63), 0, v67);
  v69 = (char *)*v64;
  if ((*v64 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2293B914C();
    result = sub_2293B902C();
    v69 = v261;
    v215 = v262;
    v72 = v263;
    v71 = v264;
    v73 = v265;
  }
  else
  {
    v74 = -1 << v69[32];
    v75 = *((_QWORD *)v69 + 7);
    v215 = v69 + 56;
    v72 = ~v74;
    v76 = -v74;
    if (v76 < 64)
      v77 = ~(-1 << v76);
    else
      v77 = -1;
    v78 = v77 & v75;
    result = swift_bridgeObjectRetain();
    v73 = v78;
    v71 = 0;
  }
  v244 = qword_255A426B0;
  v241 = (_QWORD *)((char *)v246 + qword_255A42698);
  v216 = (unint64_t)v69 & 0x7FFFFFFFFFFFFFFFLL;
  v206 = v72;
  v233 = (unint64_t)(v72 + 64) >> 6;
  v79 = v13;
  v213 = v13;
  v80 = v234;
  v81 = v256;
  v239 = v65;
  v238 = v63;
  v82 = v245;
  v243 = v69;
  while (1)
  {
    v249 = v71;
    v248 = v73;
    if (((unint64_t)v69 & 0x8000000000000000) == 0)
      break;
    if (!sub_2293B9158())
      goto LABEL_45;
    sub_2293B9344();
    swift_unknownObjectRelease();
    v253 = v249;
    v252 = v248;
LABEL_27:
    v87 = v266;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v63, 0, 1, v266);
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v82, v63, v87);
    if (*((_BYTE *)v246 + v244) == 1)
    {
      v88 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
      v88(v229, v82, v266);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
      if (swift_dynamicCast())
      {
        v90 = v259;
        v89 = v260;
        v217 = v260;
        ObjectType = swift_getObjectType();
        v92 = sub_2293410E0(ObjectType, v89) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v93 = sub_2293B8A20();
        v94 = *(_QWORD *)(v93 - 8);
        v95 = (uint64_t)v209;
        (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v209, v92, v93);
        swift_release();
        v96 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56);
        v97 = v251;
        v96(v95, 0, 1, v93);
        v98 = (uint64_t)v207;
        v88(v207, v82, v266);
        v99 = sub_2293410E0(ObjectType, v217) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
        swift_beginAccess();
        v100 = v99;
        v101 = v210;
        sub_229324E44(v100, v210, &qword_255A41F70);
        swift_release();
        v102 = v257;
        sub_229353580(v95, v98, v101, v266, *(_QWORD *)(v97 + 296), v227);
        v257 = v102;
        if (v102)
        {
          swift_unknownObjectRelease();
LABEL_86:
          (*(void (**)(char *, uint64_t))(v256 + 8))(v245, v266);
          sub_22935007C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v90;
        }
        v103 = v255;
        v105 = *(_QWORD *)(v255 + 16);
        v104 = *(_QWORD *)(v255 + 24);
        if (v105 >= v104 >> 1)
          v103 = sub_22936F1B0(v104 > 1, v105 + 1, 1, v255);
        v106 = v213;
        v80 = v234;
        v107 = v240;
        v108 = v239;
        v63 = v238;
        v82 = v245;
        *(_QWORD *)(v103 + 16) = v105 + 1;
        v109 = (*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
        v255 = v103;
        sub_22932EA14(v227, v103 + v109 + *(_QWORD *)(v250 + 72) * v105, type metadata accessor for ValueData);
        swift_unknownObjectRelease();
        v110 = (uint64_t)v107;
        v111 = v106;
        v69 = v243;
        v112 = v108;
        v79 = v111;
      }
      else
      {
        v129 = v79;
        v130 = sub_2293B8A20();
        v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56);
        v131 = (uint64_t)v211;
        v90(v211, 1, 1, v130);
        v132 = (uint64_t)v208;
        v133 = v266;
        v88(v208, v82, v266);
        v134 = (uint64_t)v212;
        v90(v212, 1, 1, v130);
        v135 = v257;
        sub_229353580(v131, v132, v134, v133, *(_QWORD *)(v251 + 296), v228);
        v257 = v135;
        if (v135)
          goto LABEL_86;
        v136 = v255;
        v138 = *(_QWORD *)(v255 + 16);
        v137 = *(_QWORD *)(v255 + 24);
        v69 = v243;
        if (v138 >= v137 >> 1)
          v136 = sub_22936F1B0(v137 > 1, v138 + 1, 1, v255);
        v79 = v129;
        v139 = v239;
        v63 = v238;
        v82 = v245;
        v110 = (uint64_t)v240;
        *(_QWORD *)(v136 + 16) = v138 + 1;
        v140 = (*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
        v255 = v136;
        sub_22932EA14(v228, v136 + v140 + *(_QWORD *)(v250 + 72) * v138, type metadata accessor for ValueData);
        v80 = v234;
        v112 = v139;
      }
    }
    else
    {
      v113 = v79;
      v114 = v80;
      v115 = v82;
      v116 = v81;
      v117 = sub_2293B8A20();
      v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56);
      v118 = (uint64_t)v231;
      v90(v231, 1, 1, v117);
      v119 = (uint64_t)v230;
      v120 = v115;
      v121 = v266;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v230, v120, v266);
      v122 = (uint64_t)v232;
      v90(v232, 1, 1, v117);
      v123 = v257;
      sub_229353580(v118, v119, v122, v121, *(_QWORD *)(v251 + 296), v242);
      v257 = v123;
      if (v123)
        goto LABEL_86;
      v124 = v255;
      v126 = *(_QWORD *)(v255 + 16);
      v125 = *(_QWORD *)(v255 + 24);
      if (v126 >= v125 >> 1)
        v124 = sub_22936F1B0(v125 > 1, v126 + 1, 1, v255);
      v110 = (uint64_t)v240;
      v127 = v113;
      v80 = v114;
      v63 = v238;
      *(_QWORD *)(v124 + 16) = v126 + 1;
      v128 = (*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
      v255 = v124;
      sub_22932EA14(v242, v124 + v128 + *(_QWORD *)(v250 + 72) * v126, type metadata accessor for ValueData);
      v112 = v239;
      v82 = v245;
      v69 = v243;
      v79 = v127;
    }
    v141 = v241;
    swift_beginAccess();
    MEMORY[0x22E2C7CAC](v82, *v141, v266, v79, v112);
    swift_endAccess();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v110, 1, v79);
    if ((_DWORD)result == 1)
      goto LABEL_91;
    v142 = v254;
    v144 = *(_QWORD *)(v254 + 16);
    v143 = *(_QWORD *)(v254 + 24);
    if (v144 >= v143 >> 1)
      v142 = sub_22936F19C(v143 > 1, v144 + 1, 1, v254);
    *(_QWORD *)(v142 + 16) = v144 + 1;
    v145 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v254 = v142;
    sub_22932EA14(v110, v142 + v145 + *(_QWORD *)(v80 + 72) * v144, type metadata accessor for LamportTimestamp);
    v81 = v256;
    result = (*(uint64_t (**)(char *, uint64_t))(v256 + 8))(v82, v266);
    v71 = v253;
    v73 = v252;
  }
  if (v73)
  {
    v252 = (v73 - 1) & v73;
    v83 = __clz(__rbit64(v73)) | (v71 << 6);
    v253 = v71;
LABEL_26:
    (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v63, *((_QWORD *)v69 + 6) + *(_QWORD *)(v81 + 72) * v83, v266);
    goto LABEL_27;
  }
  v84 = v71 + 1;
  if (!__OFADD__(v71, 1))
  {
    if (v84 >= v233)
      goto LABEL_45;
    v85 = *(_QWORD *)&v215[8 * v84];
    if (v85)
      goto LABEL_25;
    if ((uint64_t)(v71 + 2) >= v233)
      goto LABEL_45;
    v85 = *(_QWORD *)&v215[8 * v71 + 16];
    if (v85)
    {
      v84 = v71 + 2;
LABEL_25:
      v252 = (v85 - 1) & v85;
      v253 = v84;
      v83 = __clz(__rbit64(v85)) + (v84 << 6);
      goto LABEL_26;
    }
    v84 = v71 + 3;
    if ((uint64_t)(v71 + 3) < v233)
    {
      v85 = *(_QWORD *)&v215[8 * v84];
      if (!v85)
      {
        v86 = v71 + 4;
        do
        {
          if (v233 == v86)
            goto LABEL_45;
          v85 = *(_QWORD *)&v215[8 * v86++];
        }
        while (!v85);
        v84 = v86 - 1;
      }
      goto LABEL_25;
    }
LABEL_45:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v63, 1, 1, v266);
    sub_22935007C();
    v146 = (char *)v246 + qword_255A42690;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v147 = sub_2293B8EAC();
    swift_bridgeObjectRelease();
    v148 = MEMORY[0x24BEE4AF8];
    v149 = sub_22936F19C(0, v147 & ~(v147 >> 63), 0, MEMORY[0x24BEE4AF8]);
    v150 = *(_QWORD *)v146;
    v151 = *(_QWORD *)(*(_QWORD *)v146 + 64);
    v244 = *(_QWORD *)v146 + 64;
    v152 = 1 << *(_BYTE *)(v150 + 32);
    v153 = -1;
    if (v152 < 64)
      v153 = ~(-1 << v152);
    v154 = v153 & v151;
    v245 = (char *)((unint64_t)(v152 + 63) >> 6);
    v243 = v245 - 1;
    v248 = v150;
    result = swift_bridgeObjectRetain();
    v155 = 0;
    v156 = (uint64_t)v214;
    v157 = v225;
    v158 = v237;
    while (1)
    {
      v159 = TupleTypeMetadata2;
      if (v154)
      {
        v252 = (v154 - 1) & v154;
        v249 = v155;
        v160 = __clz(__rbit64(v154)) | (v155 << 6);
        goto LABEL_50;
      }
      v163 = v155 + 1;
      if (__OFADD__(v155, 1))
        goto LABEL_89;
      if (v163 >= (uint64_t)v245)
        break;
      v164 = *(_QWORD *)(v244 + 8 * v163);
      if (v164)
        goto LABEL_54;
      v190 = v155 + 2;
      if ((uint64_t)(v155 + 2) < (uint64_t)v245)
      {
        v164 = *(_QWORD *)(v244 + 8 * v190);
        if (v164)
        {
          v163 = v155 + 2;
          goto LABEL_54;
        }
        v191 = v155 + 3;
        if (v191 < (uint64_t)v245)
        {
          v164 = *(_QWORD *)(v244 + 8 * v191);
          if (!v164)
          {
            while (1)
            {
              v163 = v191 + 1;
              if (__OFADD__(v191, 1))
                goto LABEL_90;
              if (v163 >= (uint64_t)v245)
              {
                v252 = 0;
                v162 = 1;
                v163 = (uint64_t)v243;
                goto LABEL_73;
              }
              v164 = *(_QWORD *)(v244 + 8 * v163);
              ++v191;
              if (v164)
                goto LABEL_54;
            }
          }
          v163 = v191;
LABEL_54:
          v252 = (v164 - 1) & v164;
          v160 = __clz(__rbit64(v164)) + (v163 << 6);
          v249 = v163;
LABEL_50:
          v161 = v248;
          (*(void (**)(char *, unint64_t, uint64_t))(v256 + 16))(v157, *(_QWORD *)(v248 + 48) + *(_QWORD *)(v256 + 72) * v160, v266);
          sub_229324D74(*(_QWORD *)(v161 + 56) + *(_QWORD *)(v80 + 72) * v160, (uint64_t)&v157[*(int *)(v159 + 48)], type metadata accessor for LamportTimestamp);
          v162 = 0;
          goto LABEL_57;
        }
        v249 = v190;
        goto LABEL_56;
      }
      v252 = 0;
      v162 = 1;
LABEL_73:
      v249 = v163;
LABEL_57:
      v253 = v149;
      v165 = *(_QWORD *)(v159 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v157, v162, 1, v159);
      v166 = v222;
      (*(void (**)(void))(v223 + 32))();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v166, 1, v159) == 1)
      {
        swift_release();
        v192 = (uint64_t)v246 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
        swift_beginAccess();
        v193 = v203;
        sub_229324D74(v192, v203, type metadata accessor for LamportTimestamp);
        v194 = v205;
        v195 = MEMORY[0x24BEE4AF8];
        *v205 = MEMORY[0x24BEE4AF8];
        v194[1] = v195;
        v194[2] = v195;
        v194[3] = v195;
        v196 = v204;
        sub_2293B8B70();
        v197 = (uint64_t)v194 + *(int *)(v196 + 36);
        v198 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
        v199 = v213;
        v198(v197, 1, 1, v213);
        v200 = v202;
        sub_229324D74(v193, v202, type metadata accessor for LamportTimestamp);
        sub_2293251F8(v197, &qword_255A41FA8);
        sub_22932EA14(v200, v197, type metadata accessor for LamportTimestamp);
        v198(v197, 0, 1, v199);
        sub_22932E904(v193, type metadata accessor for LamportTimestamp);
        swift_bridgeObjectRelease();
        *v194 = v255;
        swift_bridgeObjectRelease();
        v194[1] = v254;
        swift_bridgeObjectRelease();
        v194[2] = v148;
        swift_bridgeObjectRelease();
        v194[3] = v253;
        sub_229326FD0(&qword_255A428C0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB7B4);
        v201 = v257;
        v90 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2293B8C6C();
        sub_22932E904((uint64_t)v194, type metadata accessor for SetCatchupData);
        v257 = v201;
        return (uint64_t)v90;
      }
      v167 = (uint64_t)&v166[*(int *)(v159 + 48)];
      v168 = v256;
      v169 = v247;
      v170 = v266;
      (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v247, v166, v266);
      sub_22932EA14(v167, v156, type metadata accessor for LamportTimestamp);
      v171 = *(void (**)(char *, char *, uint64_t))(v168 + 16);
      v171(v218, v169, v170);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
      if (swift_dynamicCast())
      {
        v172 = v258;
        v173 = swift_getObjectType();
        v174 = sub_2293410E0(v173, v172);
        swift_unknownObjectRelease();
        v175 = v174 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v90 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2293B8A20();
        v176 = *((_QWORD *)v90 - 1);
        v177 = v175;
        v80 = v234;
        (*(void (**)(uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v176 + 16))(v237, v177, v90);
        swift_release();
        v178 = *(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v176 + 56);
        v158 = v237;
        v156 = (uint64_t)v214;
        v178(v237, 0, 1, v90);
      }
      else
      {
        v90 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2293B8A20();
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(*((_QWORD *)v90 - 1) + 56))(v158, 1, 1, v90);
      }
      v179 = v158;
      v180 = v220;
      sub_229324E44(v179, v220, &qword_255A41F70);
      v181 = (uint64_t)v219;
      v182 = v266;
      v171(v219, v247, v266);
      sub_2293B8A20();
      v183 = (uint64_t)v221;
      (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(*((_QWORD *)v90 - 1) + 56))(v221, 1, 1, v90);
      v184 = v257;
      sub_229353580(v180, v181, v183, v182, *(_QWORD *)(v251 + 296), v236);
      v257 = v184;
      if (v184)
      {
        sub_2293251F8(v237, &qword_255A41F70);
        sub_22932E904(v156, type metadata accessor for LamportTimestamp);
        (*(void (**)(char *, uint64_t))(v256 + 8))(v247, v266);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v90;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v149 = v253;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v148 = sub_22936F1B0(0, *(_QWORD *)(v148 + 16) + 1, 1, v148);
      v157 = v225;
      v158 = v237;
      v187 = *(_QWORD *)(v148 + 16);
      v186 = *(_QWORD *)(v148 + 24);
      if (v187 >= v186 >> 1)
        v148 = sub_22936F1B0(v186 > 1, v187 + 1, 1, v148);
      *(_QWORD *)(v148 + 16) = v187 + 1;
      sub_22932EA14(v236, v148+ ((*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80))+ *(_QWORD *)(v250 + 72) * v187, type metadata accessor for ValueData);
      sub_229324D74(v156, v235, type metadata accessor for LamportTimestamp);
      v189 = *(_QWORD *)(v149 + 16);
      v188 = *(_QWORD *)(v149 + 24);
      if (v189 >= v188 >> 1)
        v149 = sub_22936F19C(v188 > 1, v189 + 1, 1, v149);
      *(_QWORD *)(v149 + 16) = v189 + 1;
      sub_22932EA14(v235, v149+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v189, type metadata accessor for LamportTimestamp);
      sub_2293251F8(v158, &qword_255A41F70);
      sub_22932E904(v156, type metadata accessor for LamportTimestamp);
      result = (*(uint64_t (**)(char *, uint64_t))(v256 + 8))(v247, v266);
      v154 = v252;
      v155 = v249;
    }
    v249 = v155;
LABEL_56:
    v252 = 0;
    v162 = 1;
    goto LABEL_57;
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

char *sub_22934D7F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *result;
  void (*v52)(void);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  void (*v71)(void);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t);
  int v99;
  char *v100;
  char *v101;
  void (*v102)(void);
  uint64_t v103;
  int v104;
  _QWORD *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char v109;
  char *v110;
  void (*v111)(char *, uint64_t);
  void (*v112)(void);
  char *v113;
  _DWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  unint64_t v132;
  char *v133;
  _DWORD *v134;
  _DWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t);
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(char *, uint64_t);
  char *v158;
  void (*v159)(void);
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  uint64_t TupleTypeMetadata2;
  uint64_t v165;
  uint64_t v166;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v138 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = v1;
  v5 = *(_QWORD *)(v1 + 280);
  v165 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v151 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v163 = (char *)&v127 - v8;
  v9 = type metadata accessor for LamportTimestamp(255);
  v166 = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v153 = sub_2293B9104();
  v154 = *(_QWORD *)(v153 - 8);
  v10 = MEMORY[0x24BDAC7A8](v153);
  v144 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v143 = (char *)&v127 - v12;
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(char **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v137 = (_QWORD **)((char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v141 = (unint64_t *)((char *)&v127 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v161 = (_QWORD **)((char *)&v127 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v136 = (uint64_t)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v152 = (uint64_t)&v127 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v147 = (uint64_t)&v127 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v127 - v28;
  v162 = v9;
  v155 = *(_QWORD *)(v9 - 8);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v135 = (_DWORD *)((char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (_DWORD *)((char *)&v127 - v33);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v127 - v35;
  v37 = sub_2293B8A20();
  v38 = MEMORY[0x24BDAC7A8](v37);
  v133 = (char *)&v127 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v150 = (char *)&v127 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v140 = (char *)&v127 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v158 = (char *)&v127 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (uint64_t *)((char *)&v127 - v47);
  MEMORY[0x24BDAC7A8](v46);
  result = (char *)&v127 - v49;
  if (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller))
  {
    v157 = (void (*)(char *, uint64_t))v50;
    v52 = *(void (**)(void))(v50 + 16);
    v145 = (char *)&v127 - v49;
    v159 = v52;
    v52();
    v160 = v0;
    v53 = (uint64_t)v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp;
    swift_beginAccess();
    v146 = v53;
    sub_229324D74(v53, (uint64_t)v36, type metadata accessor for LamportTimestamp);
    v54 = *(int *)(v162 + 24);
    v148 = v36;
    v55 = &v36[v54];
    sub_229324E44((uint64_t)&v36[v54], (uint64_t)v29, &qword_255A41F98);
    v142 = v14;
    v56 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v14 + 6);
    v57 = v56(v29, 1, v13);
    sub_2293251F8((uint64_t)v29, &qword_255A41F98);
    v156 = v13;
    v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
    if (v57 == 1)
    {
      if (qword_255A41AD0 != -1)
        swift_once();
      v58 = __swift_project_value_buffer(v37, (uint64_t)qword_255A44CF0);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v159)(v48, v58, v37);
      v59 = v142;
      v60 = (uint64_t)v148;
    }
    else
    {
      v61 = (uint64_t)v55;
      v62 = v147;
      sub_229324E44(v61, v147, &qword_255A41F98);
      if (v56((char *)v62, 1, v13) == 1)
      {
        v63 = v161;
        *v161 = 0;
        v63[1] = 0;
        sub_2293B8B70();
        sub_2293251F8(v62, &qword_255A41F98);
      }
      else
      {
        sub_22932EA14(v62, (uint64_t)v161, type metadata accessor for PBUUID);
      }
      v60 = (uint64_t)v148;
      v64 = v161;
      sub_229357288();
      sub_22932E904((uint64_t)v64, type metadata accessor for PBUUID);
      v59 = v142;
    }
    v65 = (unint64_t)v160;
    sub_22932E904(v60, type metadata accessor for LamportTimestamp);
    if (qword_255A41AD0 != -1)
LABEL_47:
      swift_once();
    v66 = __swift_project_value_buffer(v37, (uint64_t)qword_255A44CF0);
    v67 = v158;
    v148 = (char *)v66;
    ((void (*)(char *))v159)(v158);
    v68 = sub_2293B89F0();
    v69 = (void (*)(char *, uint64_t))*((_QWORD *)v157 + 1);
    v69(v67, v37);
    v157 = v69;
    v69((char *)v48, v37);
    v70 = v143;
    if ((v68 & 1) != 0)
    {
      v72 = v158;
      v71 = v159;
      ((void (*)(char *, char *, uint64_t))v159)(v158, v145, v37);
      v73 = v146;
      swift_beginAccess();
      v74 = (uint64_t)v140;
      ((void (*)(char *, char *, uint64_t))v71)(v140, v72, v37);
      v75 = v141;
      sub_229357158(v74, v141);
      v76 = v73 + *(int *)(v162 + 24);
      sub_2293251F8(v76, &qword_255A41F98);
      sub_22932EA14((uint64_t)v75, v76, type metadata accessor for PBUUID);
      (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v59 + 7))(v76, 0, 1, v156);
      v157(v72, v37);
      swift_endAccess();
    }
    v77 = v65 + qword_255A42690;
    swift_beginAccess();
    v132 = v77;
    v78 = *(_QWORD *)v77;
    v79 = *(_QWORD *)(*(_QWORD *)v77 + 64);
    v130 = *(_QWORD *)v77 + 64;
    v80 = 1 << *(_BYTE *)(v78 + 32);
    v81 = -1;
    if (v80 < 64)
      v81 = ~(-1 << v80);
    v65 = v81 & v79;
    v82 = (unint64_t)(v80 + 63) >> 6;
    v127 = (_QWORD *)(v82 - 1);
    v83 = swift_bridgeObjectRetain();
    v84 = 0;
    v131 = v82;
    v128 = (_QWORD *)(v82 - 4);
    v146 = v83;
    v129 = v83 + 96;
    v48 = &qword_255A41F98;
    v85 = v144;
    v134 = v34;
    while (!v65)
    {
      v106 = v84 + 1;
      if (__OFADD__(v84, 1))
      {
        __break(1u);
        goto LABEL_47;
      }
      if (v106 >= v131)
      {
        v87 = 0;
        v90 = 1;
      }
      else
      {
        v107 = *(_QWORD *)(v130 + 8 * v106);
        if (v107)
          goto LABEL_28;
        if (v84 + 2 >= v131)
        {
          v87 = 0;
          v90 = 1;
          ++v84;
        }
        else
        {
          v107 = *(_QWORD *)(v130 + 8 * (v84 + 2));
          if (v107)
          {
            v106 = v84 + 2;
LABEL_28:
            v87 = (v107 - 1) & v107;
            v88 = __clz(__rbit64(v107)) + (v106 << 6);
            v84 = v106;
LABEL_19:
            v89 = v146;
            (*(void (**)(char *, unint64_t, uint64_t))(v165 + 16))(v85, *(_QWORD *)(v146 + 48) + *(_QWORD *)(v165 + 72) * v88, v166);
            sub_229324D74(*(_QWORD *)(v89 + 56) + *(_QWORD *)(v155 + 72) * v88, (uint64_t)&v85[*(int *)(TupleTypeMetadata2 + 48)], type metadata accessor for LamportTimestamp);
            v90 = 0;
            goto LABEL_20;
          }
          v106 = v84 + 3;
          if (v84 + 3 >= v131)
          {
            v87 = 0;
            v90 = 1;
            v84 += 2;
          }
          else
          {
            v107 = *(_QWORD *)(v130 + 8 * v106);
            if (v107)
              goto LABEL_28;
            while (v128 != (_QWORD *)v84)
            {
              v107 = *(_QWORD *)(v129 + 8 * v84++);
              if (v107)
              {
                v106 = v84 + 3;
                goto LABEL_28;
              }
            }
            v87 = 0;
            v90 = 1;
            v84 = (uint64_t)v127;
          }
        }
      }
LABEL_20:
      v91 = TupleTypeMetadata2;
      v92 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v85, v90, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v70, v85, v153);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v70, 1, v91) == 1)
      {
        swift_release();
        return (char *)((uint64_t (*)(char *, uint64_t))v157)(v145, v37);
      }
      v160 = (_QWORD *)v87;
      v161 = (_QWORD *)v84;
      v93 = v37;
      v94 = (uint64_t)&v70[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v163, v70, v166);
      sub_22932EA14(v94, (uint64_t)v34, type metadata accessor for LamportTimestamp);
      v95 = (uint64_t)v34 + *(int *)(v162 + 24);
      v96 = v152;
      sub_229324E44(v95, v152, &qword_255A41F98);
      v97 = v156;
      v98 = v149;
      v99 = v149(v96, 1, v156);
      sub_2293251F8(v96, &qword_255A41F98);
      if (v99 == 1)
      {
        v100 = v150;
        v101 = v148;
        v37 = v93;
        v102 = v159;
        ((void (*)(char *, char *, uint64_t))v159)(v150, v148, v93);
      }
      else
      {
        v103 = v136;
        sub_229324E44(v95, v136, &qword_255A41F98);
        v104 = v98(v103, 1, v97);
        v37 = v93;
        v105 = v137;
        if (v104 == 1)
        {
          *v137 = 0;
          v105[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v103, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v103, (uint64_t)v137, type metadata accessor for PBUUID);
        }
        v100 = v150;
        sub_229357288();
        sub_22932E904((uint64_t)v105, type metadata accessor for PBUUID);
        v102 = v159;
        v101 = v148;
      }
      v108 = v158;
      ((void (*)(char *, char *, uint64_t))v102)(v158, v101, v37);
      v59 = v100;
      v109 = sub_2293B89F0();
      v110 = v108;
      v111 = v157;
      v157(v110, v37);
      v111(v59, v37);
      if ((v109 & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v151, v163, v166);
        v113 = v158;
        v112 = v159;
        ((void (*)(char *, char *, uint64_t))v159)(v158, v145, v37);
        LODWORD(v147) = *v34;
        v114 = v135;
        *v135 = 0;
        v115 = v162;
        sub_2293B8B70();
        v116 = (uint64_t)v114 + *(int *)(v115 + 24);
        v117 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v142 + 7);
        v118 = v156;
        v117(v116, 1, 1, v156);
        v119 = v140;
        ((void (*)(char *, char *, uint64_t))v112)(v140, v113, v93);
        v120 = (uint64_t)v133;
        ((void (*)(char *, char *, uint64_t))v112)(v133, v119, v93);
        v121 = v141;
        sub_229357158(v120, v141);
        sub_2293251F8(v116, &qword_255A41F98);
        sub_22932EA14((uint64_t)v121, v116, type metadata accessor for PBUUID);
        v117(v116, 0, 1, v118);
        v122 = v162;
        v85 = v144;
        v123 = v157;
        v157(v119, v93);
        v37 = v93;
        v123(v113, v93);
        *v114 = v147;
        v124 = (uint64_t)v114;
        v34 = v134;
        v125 = v138;
        sub_22932EA14(v124, v138, type metadata accessor for LamportTimestamp);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v155 + 56))(v125, 0, 1, v122);
        v126 = (char *)v132;
        swift_beginAccess();
        sub_2293B8EC4();
        v70 = v143;
        v59 = v126;
        sub_2293B8EDC();
        swift_endAccess();
      }
      sub_22932E904((uint64_t)v34, type metadata accessor for LamportTimestamp);
      (*(void (**)(char *, uint64_t))(v165 + 8))(v163, v166);
      v65 = (unint64_t)v160;
      v84 = (uint64_t)v161;
    }
    v86 = __clz(__rbit64(v65));
    v87 = (v65 - 1) & v65;
    v88 = v86 | (v84 << 6);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_22934E5B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t i;
  uint64_t v49;
  uint64_t v50[16];

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - v7);
  v9 = *(_QWORD *)(v1 + 280);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2293B9104();
  result = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v42 - v15;
  if (*((_BYTE *)v0 + qword_255A426B0) == 1)
  {
    v17 = (_QWORD *)((char *)v0 + qword_255A426B8);
    swift_beginAccess();
    v18 = *v17;
    v19 = (*v17 & 0xC000000000000001) == 0;
    v49 = v1;
    if (v19)
    {
      v22 = -1 << *(_BYTE *)(v18 + 32);
      v23 = *(_QWORD *)(v18 + 56);
      v44 = v18 + 56;
      v24 = ~v22;
      v25 = -v22;
      if (v25 < 64)
        v26 = ~(-1 << v25);
      else
        v26 = -1;
      v21 = v26 & v23;
      result = swift_bridgeObjectRetain();
      v20 = v24;
      v46 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_2293B914C();
      sub_2293B902C();
      result = v50[10];
      v44 = v50[11];
      v20 = v50[12];
      v46 = v50[13];
      v21 = v50[14];
    }
    v27 = (_QWORD *)((char *)v0 + qword_255A426A0);
    v47 = v0;
    v28 = (_QWORD *)((char *)v0 + qword_255A426A8);
    v45 = result & 0x7FFFFFFFFFFFFFFFLL;
    v42 = v20;
    v43 = (unint64_t)(v20 + 64) >> 6;
    for (i = result; ; result = i)
    {
      if (result < 0)
      {
        if (!sub_2293B9158())
          goto LABEL_34;
        sub_2293B9344();
        swift_unknownObjectRelease();
      }
      else
      {
        if (v21)
        {
          v30 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
          v31 = v30 | (v46 << 6);
        }
        else
        {
          v32 = v46 + 1;
          if (__OFADD__(v46, 1))
          {
            __break(1u);
            return result;
          }
          if (v32 >= v43)
            goto LABEL_34;
          v33 = *(_QWORD *)(v44 + 8 * v32);
          v34 = v46 + 1;
          if (!v33)
          {
            v34 = v46 + 2;
            if (v46 + 2 >= v43)
              goto LABEL_34;
            v33 = *(_QWORD *)(v44 + 8 * v34);
            if (!v33)
            {
              v34 = v46 + 3;
              if (v46 + 3 >= v43)
                goto LABEL_34;
              v33 = *(_QWORD *)(v44 + 8 * v34);
              if (!v33)
              {
                v35 = v46 + 4;
                while (v43 != v35)
                {
                  v33 = *(_QWORD *)(v44 + 8 * v35++);
                  if (v33)
                  {
                    v34 = v35 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_34:
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v16, 1, 1, v9);
                sub_22935007C();
                swift_beginAccess();
                *v27 = 0;
                swift_bridgeObjectRelease();
                swift_beginAccess();
                *v28 = 0;
                return swift_bridgeObjectRelease();
              }
            }
          }
LABEL_27:
          v21 = (v33 - 1) & v33;
          v31 = __clz(__rbit64(v33)) + (v34 << 6);
          v46 = v34;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v16, *(_QWORD *)(result + 48) + *(_QWORD *)(v10 + 72) * v31, v9);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
      v50[3] = v9;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v50);
      (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_0, v12, v9);
      swift_beginAccess();
      v37 = *v27;
      if (*v27)
      {
        v38 = sub_2293B8A20();
        MEMORY[0x22E2C7CAC](v12, v37, v9, v38, *(_QWORD *)(v49 + 304));
        swift_endAccess();
      }
      else
      {
        swift_endAccess();
        v39 = sub_2293B8A20();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 1, 1, v39);
      }
      swift_beginAccess();
      v40 = *v28;
      if (*v28)
      {
        v29 = sub_2293B8A20();
        MEMORY[0x22E2C7CAC](v12, v40, v9, v29, *(_QWORD *)(v49 + 304));
        swift_endAccess();
      }
      else
      {
        swift_endAccess();
        v41 = sub_2293B8A20();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v5, 1, 1, v41);
      }
      sub_22932820C((uint64_t)v50, v8, (uint64_t)v5);
      sub_2293251F8((uint64_t)v5, &qword_255A41F70);
      sub_2293251F8((uint64_t)v8, &qword_255A41F70);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_2293251F8((uint64_t)v50, &qword_255A41F90);
    }
  }
  return result;
}

uint64_t sub_22934EAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  _QWORD v28[2];
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B9104();
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - v9;
  if (*(_BYTE *)(v1 + qword_255A426B0) == 1)
  {
    v32 = a1;
    v11 = (uint64_t *)(v1 + qword_255A426B8);
    swift_beginAccess();
    v12 = *v11;
    if ((*v11 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_2293B914C();
      result = sub_2293B902C();
      v12 = v34;
      v30 = v35;
      v13 = v36;
      v14 = v37;
      v15 = v38;
    }
    else
    {
      v16 = -1 << *(_BYTE *)(v12 + 32);
      v17 = *(_QWORD *)(v12 + 56);
      v30 = v12 + 56;
      v13 = ~v16;
      v18 = -v16;
      if (v18 < 64)
        v19 = ~(-1 << v18);
      else
        v19 = -1;
      v15 = v19 & v17;
      result = swift_bridgeObjectRetain();
      v14 = 0;
    }
    v31 = v12 & 0x7FFFFFFFFFFFFFFFLL;
    v28[1] = v13;
    v29 = (unint64_t)(v13 + 64) >> 6;
    while (1)
    {
      if (v12 < 0)
      {
        if (!sub_2293B9158())
          goto LABEL_29;
        sub_2293B9344();
        swift_unknownObjectRelease();
      }
      else
      {
        if (v15)
        {
          v20 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
          v21 = v20 | (v14 << 6);
        }
        else
        {
          v22 = v14 + 1;
          if (__OFADD__(v14, 1))
          {
            __break(1u);
            return result;
          }
          if (v22 >= v29)
            goto LABEL_29;
          v23 = *(_QWORD *)(v30 + 8 * v22);
          v24 = v14 + 1;
          if (!v23)
          {
            v24 = v14 + 2;
            if (v14 + 2 >= v29)
              goto LABEL_29;
            v23 = *(_QWORD *)(v30 + 8 * v24);
            if (!v23)
            {
              v24 = v14 + 3;
              if (v14 + 3 >= v29)
                goto LABEL_29;
              v23 = *(_QWORD *)(v30 + 8 * v24);
              if (!v23)
              {
                v25 = v14 + 4;
                while (v29 != v25)
                {
                  v23 = *(_QWORD *)(v30 + 8 * v25++);
                  if (v23)
                  {
                    v24 = v25 - 1;
                    goto LABEL_25;
                  }
                }
LABEL_29:
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
                return sub_22935007C();
              }
            }
          }
LABEL_25:
          v15 = (v23 - 1) & v23;
          v21 = __clz(__rbit64(v23)) + (v24 << 6);
          v14 = v24;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v10, *(_QWORD *)(v12 + 48) + *(_QWORD *)(v4 + 72) * v21, v3);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v26 = v33;
        ObjectType = swift_getObjectType();
        sub_2293410E0(ObjectType, v26);
        sub_22935CD30(v32);
        swift_unknownObjectRelease();
        result = swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_22934EE04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  char *v36;
  unint64_t v37;
  char v38;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59[32];
  uint64_t v60[12];

  v1 = v0;
  v2 = *v0;
  v3 = sub_2293B8A20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 280);
  v8 = sub_2293B9104();
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v45 - v10;
  if (*((_BYTE *)v0 + qword_255A426B0) == 1)
  {
    v12 = (_QWORD *)((char *)v0 + qword_255A426B8);
    swift_beginAccess();
    v13 = *v12;
    if ((*v12 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_2293B914C();
      result = sub_2293B902C();
      v13 = v60[7];
      v50 = v60[8];
      v14 = v60[9];
      v53 = v60[10];
      v15 = v60[11];
    }
    else
    {
      v16 = -1 << *(_BYTE *)(v13 + 32);
      v17 = *(_QWORD *)(v13 + 56);
      v50 = v13 + 56;
      v18 = ~v16;
      v19 = -v16;
      if (v19 < 64)
        v20 = ~(-1 << v19);
      else
        v20 = -1;
      v15 = v20 & v17;
      result = swift_bridgeObjectRetain();
      v14 = v18;
      v53 = 0;
    }
    v45[2] = v13 & 0x7FFFFFFFFFFFFFFFLL;
    v45[1] = v14;
    v49 = (unint64_t)(v14 + 64) >> 6;
    v56 = MEMORY[0x24BEE4AD8] + 8;
    v48 = v11;
    v47 = v4;
    v46 = v13;
    while (1)
    {
      if (v13 < 0)
      {
        if (!sub_2293B9158())
          goto LABEL_39;
        sub_2293B9344();
        swift_unknownObjectRelease();
        v23 = *(_QWORD *)(v7 - 8);
      }
      else
      {
        if (v15)
        {
          v21 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
          v22 = v21 | (v53 << 6);
        }
        else
        {
          v24 = v53 + 1;
          if (__OFADD__(v53, 1))
          {
            __break(1u);
            return result;
          }
          if (v24 >= v49)
            goto LABEL_39;
          v25 = *(_QWORD *)(v50 + 8 * v24);
          v26 = v53 + 1;
          if (!v25)
          {
            v26 = v53 + 2;
            if (v53 + 2 >= v49)
              goto LABEL_39;
            v25 = *(_QWORD *)(v50 + 8 * v26);
            if (!v25)
            {
              v26 = v53 + 3;
              if (v53 + 3 >= v49)
                goto LABEL_39;
              v25 = *(_QWORD *)(v50 + 8 * v26);
              if (!v25)
              {
                v27 = v53 + 4;
                while (v49 != v27)
                {
                  v25 = *(_QWORD *)(v50 + 8 * v27++);
                  if (v25)
                  {
                    v26 = v27 - 1;
                    goto LABEL_28;
                  }
                }
LABEL_39:
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v11, 1, 1, v7);
                return sub_22935007C();
              }
            }
          }
LABEL_28:
          v15 = (v25 - 1) & v25;
          v22 = __clz(__rbit64(v25)) + (v26 << 6);
          v53 = v26;
        }
        v23 = *(_QWORD *)(v7 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v11, *(_QWORD *)(v13 + 48) + *(_QWORD *)(v23 + 72) * v22, v7);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v11, 0, 1, v7);
      v60[3] = v7;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v60);
      (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_0, v11, v7);
      sub_2293251BC((uint64_t)v60, (uint64_t)v59);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
      if (swift_dynamicCast())
      {
        v55 = v15;
        v29 = v58;
        ObjectType = swift_getObjectType();
        v52 = v29;
        v54 = sub_2293410E0(ObjectType, v29);
        v30 = v54 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v31 = v6;
        v32 = (uint64_t)v6;
        v33 = v3;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v31, v30, v3);
        v34 = v1;
        v35 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v36 = (char *)v32;
        v37 = sub_22936F3E8(v32);
        LOBYTE(v32) = v38;
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v40 = *v35;
          v57 = *v35;
          *v35 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_229323424();
            v40 = v57;
          }
          v41 = *(_QWORD *)(v40 + 48) + *(_QWORD *)(v4 + 72) * v37;
          v42 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
          v42(v41, v33);
          v43 = v57;
          sub_229320F9C(v37, v57);
          *v35 = v43;
          swift_bridgeObjectRelease();
        }
        else
        {
          v42 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
        }
        v1 = v34;
        v3 = v33;
        v6 = v36;
        v42((unint64_t)v36, v3);
        swift_endAccess();
        swift_release();
        if (*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller)
          && swift_weakLoadStrong())
        {
          v44 = sub_2293410E0(ObjectType, v52);
          sub_22932EEC8(v44);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_release();
        v11 = v48;
        v4 = v47;
        v13 = v46;
        v15 = v55;
      }
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    }
  }
  return result;
}

void sub_22934F3FC()
{
  type metadata accessor for SyncedSet.MergeValues();
}

uint64_t sub_22934F45C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_BYTE *, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  _BYTE v68[96];

  *(_QWORD *)(v2 - 240) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 232) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v4 = &v68[-v3];
  v5 = type metadata accessor for PBUUID(0);
  *(_QWORD *)(v2 - 200) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v2 - 304) = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v9 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v2 - 296) = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v68[-v11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v2 - 280) = &v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v68[-v16];
  v18 = type metadata accessor for LamportTimestamp(0);
  *(_QWORD *)(v2 - 192) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v2 - 184) = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v2 - 216) = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v68[-v21];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v23);
  v25 = &v68[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_2293B8A20();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v2 - 288) = &v68[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v2 - 208) = &v68[-v31];
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  if (v32)
  {
    v33 = v32 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    sub_229324E44(v33, (uint64_t)v25, &qword_255A41F70);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      v34 = sub_2293251F8((uint64_t)v25, &qword_255A41F70);
      v35 = *(_QWORD *)(v2 - 176);
      v36 = *(_QWORD *)(v2 - 200);
      v37 = *(char **)(v2 - 216);
      goto LABEL_17;
    }
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(v27 + 32))(*(_QWORD *)(v2 - 208), v25, v26);
    v38 = type metadata accessor for SetChangedMessage(0);
    sub_229324E44(*(_QWORD *)(v2 - 176) + *(int *)(v38 + 32), (uint64_t)v17, &qword_255A41FA8);
    v39 = *(_QWORD *)(v2 - 184);
    v40 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 48))(v17, 1, v39);
    *(_QWORD *)(v2 - 312) = v1;
    if (v40 == 1)
    {
      *(_DWORD *)v22 = 0;
      sub_2293B8B70();
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v42 = v6;
      v43 = *(_QWORD *)(v2 - 200);
      v41(&v22[*(int *)(v39 + 24)], 1, 1, v43);
      sub_2293251F8((uint64_t)v17, &qword_255A41FA8);
    }
    else
    {
      sub_22932EA14((uint64_t)v17, (uint64_t)v22, type metadata accessor for LamportTimestamp);
      v42 = v6;
      v43 = *(_QWORD *)(v2 - 200);
    }
    v44 = (uint64_t)&v22[*(int *)(v39 + 24)];
    sub_229324E44(v44, (uint64_t)v12, &qword_255A41F98);
    *(_QWORD *)(v2 - 320) = v42;
    v45 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48);
    v46 = v45(v12, 1, v43);
    sub_2293251F8((uint64_t)v12, &qword_255A41F98);
    if (v46 == 1)
    {
      v37 = *(char **)(v2 - 216);
      if (qword_255A41AD0 != -1)
        swift_once();
      v47 = __swift_project_value_buffer(v26, (uint64_t)qword_255A44CF0);
      v48 = *(_QWORD *)(v2 - 288);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v48, v47, v26);
      v43 = *(_QWORD *)(v2 - 200);
    }
    else
    {
      v49 = *(_QWORD *)(v2 - 296);
      sub_229324E44(v44, v49, &qword_255A41F98);
      v50 = v45((_BYTE *)v49, 1, v43);
      v37 = *(char **)(v2 - 216);
      v51 = *(_QWORD **)(v2 - 304);
      if (v50 == 1)
      {
        *v51 = 0;
        v51[1] = 0;
        sub_2293B8B70();
        sub_2293251F8(v49, &qword_255A41F98);
      }
      else
      {
        sub_22932EA14(v49, *(_QWORD *)(v2 - 304), type metadata accessor for PBUUID);
      }
      v48 = *(_QWORD *)(v2 - 288);
      sub_229357288();
      sub_22932E904((uint64_t)v51, type metadata accessor for PBUUID);
    }
    v52 = *(_QWORD *)(v2 - 208);
    sub_22932E904((uint64_t)v22, type metadata accessor for LamportTimestamp);
    sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v53 = sub_2293B8F00();
    v54 = v48;
    v55 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v55(v54, v26);
    if ((v53 & 1) != 0)
    {
      v34 = ((uint64_t (*)(uint64_t, uint64_t))v55)(v52, v26);
      v35 = *(_QWORD *)(v2 - 176);
      v36 = v43;
      v6 = *(_QWORD *)(v2 - 320);
LABEL_17:
      MEMORY[0x24BDAC7A8](v34);
      *(_QWORD *)&v68[-16] = v35;
      v57 = sub_2293A76F8((void (*)(uint64_t *))sub_229353544, (uint64_t)&v68[-32], 0, v56);
      MEMORY[0x24BDAC7A8](v57);
      *(_QWORD *)&v68[-16] = v35;
      sub_2293A76F8((void (*)(uint64_t *))sub_229352964, (uint64_t)&v68[-32], 0, v58);
      v59 = type metadata accessor for SetChangedMessage(0);
      v60 = *(_QWORD *)(v2 - 280);
      sub_229324E44(v35 + *(int *)(v59 + 32), v60, &qword_255A41FA8);
      v61 = *(_QWORD *)(v2 - 184);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 48))(v60, 1, v61) == 1)
      {
        *(_DWORD *)v37 = 0;
        sub_2293B8B70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(&v37[*(int *)(v61 + 24)], 1, 1, v36);
        sub_2293251F8(v60, &qword_255A41FA8);
      }
      else
      {
        sub_22932EA14(v60, (uint64_t)v37, type metadata accessor for LamportTimestamp);
      }
      sub_22932EA14((uint64_t)v37, (uint64_t)v4, type metadata accessor for LamportTimestamp);
      v62 = *(_QWORD *)(v2 - 256);
      *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 248);
      *(_QWORD *)(v2 - 112) = v62;
      v63 = *(_QWORD *)(v2 - 272);
      *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 264);
      *(_QWORD *)(v2 - 96) = v63;
      type metadata accessor for SyncedSet.MergeValues();
    }
    if (qword_255A41A88 != -1)
      swift_once();
    v64 = sub_2293B8D5C();
    __swift_project_value_buffer(v64, (uint64_t)qword_255A44C60);
    v65 = sub_2293B8D44();
    v66 = sub_2293B908C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_22931B000, v65, v66, "SyncedSet: Cannot apply set change message. Not the current owner or unowned", v67, 2u);
      MEMORY[0x22E2C869C](v67, -1, -1);
    }

    return ((uint64_t (*)(_QWORD, uint64_t))v55)(*(_QWORD *)(v2 - 208), v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22934FC40@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SetChangedMessage(0);
  sub_229324E44(a1 + *(int *)(v7 + 32), (uint64_t)v6, &qword_255A41FA8);
  v8 = type metadata accessor for LamportTimestamp(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_22932EA14((uint64_t)v6, (uint64_t)a2, type metadata accessor for LamportTimestamp);
  *a2 = 0;
  sub_2293B8B70();
  v9 = (char *)a2 + *(int *)(v8 + 24);
  v10 = type metadata accessor for PBUUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_2293251F8((uint64_t)v6, &qword_255A41FA8);
}

uint64_t SyncedSet.SyncedSetChangeInfo.removedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedSet.SyncedSetChangeInfo.removedElements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SyncedSet.SyncedSetChangeInfo.removedElements.modify())()
{
  return nullsub_1;
}

uint64_t SyncedSet.SyncedSetChangeInfo.addedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedSet.SyncedSetChangeInfo.addedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SyncedSet.SyncedSetChangeInfo.addedElements.modify())()
{
  return nullsub_1;
}

uint64_t SyncedSet.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_2293B8D98();
}

uint64_t sub_22934FE6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t SyncedSet.deinit()
{
  uint64_t v0;

  sub_22932E904(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SyncedSet.__deallocating_deinit()
{
  SyncedSet.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22934FFB8(uint64_t a1)
{
  return SyncedSet.receive<A>(subscriber:)(a1);
}

void sub_22934FFD8(uint64_t a1)
{
  SyncedSet.__allocating_init(from:)(a1);
}

void sub_229350000()
{
  SyncedSet.encode(to:)();
}

uint64_t sub_229350024()
{
  return sub_22934BF5C();
}

void type metadata accessor for SyncedSet.SyncedSetChangeInfo()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_22935007C()
{
  return swift_release();
}

uint64_t sub_229350084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x22E2C7D90](v12))
  {
    sub_2293B917C();
    v15 = sub_2293B9170();
  }
  else
  {
    v15 = MEMORY[0x24BEE4B08];
  }
  v40 = MEMORY[0x22E2C7DA8](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_2293B8FA8();
    sub_2293B8F84();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_2293B91A0();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_2293B8EE8();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_2293B8F00();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_22935038C()
{
  return 4;
}

void sub_229350394()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = qword_255A42690;
  v4 = *(_QWORD *)(v1 + 280);
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_2293B8F90();
  *(_QWORD *)((char *)v0 + v3) = sub_2293B8E94();
  v5 = qword_255A42698;
  sub_2293B8F90();
  *(_QWORD *)((char *)v0 + v5) = sub_2293B8E94();
  *(_QWORD *)((char *)v0 + qword_255A426A0) = 0;
  *(_QWORD *)((char *)v0 + qword_255A426A8) = 0;
  if (swift_conformsToProtocol2())
    v6 = v4;
  else
    v6 = 0;
  *((_BYTE *)v0 + qword_255A426B0) = v6 != 0;
  type metadata accessor for SyncedSet.SyncedSetChangeInfo();
}

void sub_2293504DC()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  swift_getTupleTypeMetadata2();
  sub_2293B8DB0();
  *(_QWORD *)(v0 + v5) = sub_2293B8DA4();
  v6 = sub_2293B8F90();
  if (MEMORY[0x22E2C7DA8](v6, v3))
    v7 = sub_229350084(v6, v3, v4);
  else
    v7 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + qword_255A426B8) = v7;
  swift_release();
  *v1 = 0;
  sub_2293B8B70();
  v8 = (char *)v1 + *(int *)(v2 + 24);
  v9 = type metadata accessor for PBUUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) = 0;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__parentPropertyID) = -1;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID) = -1;
  v10 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers;
  *(_QWORD *)(v0 + v10) = sub_229327CFC(MEMORY[0x24BEE4AF8]);
  sub_22932EA14((uint64_t)v1, v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_retain();
  sub_229347F18();
}

uint64_t sub_229350648()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_229350674()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255A426B8;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2293506BC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_229350674();
  return swift_bridgeObjectRetain();
}

void sub_2293506E4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_2293506B8(v0);
}

uint64_t sub_229350704()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_229350714()
{
  return 32;
}

__n128 sub_229350720(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_22935072C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_229350734()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for SyncedSet()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t method lookup function for SyncedSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncedSet.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of SyncedSet.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t sub_2293507D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2293507E4()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22935080C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_229350840(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_2293508A8(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2293508E4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_22935092C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_229350968()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_229350970(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2293509BC + 4 * byte_2293BA329[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2293509F0 + 4 * asc_2293BA322[v4 + 2]))();
}

uint64_t sub_2293509F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293509F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x229350A00);
  return result;
}

uint64_t sub_229350A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x229350A14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_229350A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_229350A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_229350A2C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_229350A34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LamportTimestamp(319);
    if (v1 <= 0x3F)
    {
      sub_22932DEB8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_229350AD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  size_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  unint64_t v32;
  _DWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  _QWORD *v43;
  _QWORD *v44;
  void *v45;
  const void *v46;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  size_t v48;
  void *v49;
  const void *v50;
  uint64_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  size_t __n;
  size_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(unint64_t, unint64_t, uint64_t);
  unsigned int v62;
  uint64_t v63;
  _DWORD *v65;

  v60 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v60 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v63 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v63 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 | 7;
  v9 = v8 + v4;
  v10 = v6 + 4;
  v11 = *(_QWORD *)(v5 + 64);
  v12 = v8 + v11;
  v13 = ((v7 + 16) & ~v7) + v11;
  v62 = *(_DWORD *)(v5 + 84);
  v57 = v13;
  if (!v62)
    ++v13;
  __n = v13;
  v14 = ((v12 + ((v6 + 4) & ~(unint64_t)v6)) & ~(v6 | 7))
      + v13;
  v15 = sub_2293B8A20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = *(_DWORD *)(v16 + 84);
  v19 = v17;
  v58 = v16;
  v59 = v15;
  v20 = *(_QWORD *)(v16 + 64);
  if (!v18)
    ++v20;
  v21 = v17 | *(_DWORD *)(v3 + 80);
  v22 = v8 | (v17 | *(_BYTE *)(v3 + 80));
  v23 = (v21 | v6) & 0x100000;
  if (v22 != 7
    || v23 != 0
    || ((v20 + v19 + ((v14 + v19 + (v9 & ~(v6 | 7))) & ~v19)) & ~v19) + v20 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v27 = v26 + ((v22 + 16) & ~v22);
    swift_retain();
    return (uint64_t *)v27;
  }
  v54 = v20;
  v55 = v14 + v19;
  v28 = ~v8;
  v29 = ~(unint64_t)v6;
  v52 = ~v19;
  v53 = v20 + v19;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v60);
  v30 = (_DWORD *)(((unint64_t)a1 + v9) & v28);
  v31 = (_DWORD *)(((unint64_t)a2 + v9) & v28);
  *v30 = *v31;
  v65 = v30;
  v32 = ((unint64_t)v30 + v10) & ~v7;
  v33 = v31;
  v34 = ((unint64_t)v31 + v10) & ~v7;
  v61 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v61(((unint64_t)v30 + v10) & v29, ((unint64_t)v31 + v10) & v29, v63);
  v35 = (_QWORD *)((v12 + v32) & v28);
  v36 = (_QWORD *)((v12 + v34) & v28);
  if (v62)
  {
    v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v5 + 48))((v7 + (((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v29, v62, v63);
    v39 = v58;
    v38 = v59;
    v40 = v52;
    if (!v37)
    {
LABEL_27:
      *v35 = *v36;
      v43 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v44;
      v61(((unint64_t)v43 + v7 + 8) & ~v7, ((unint64_t)v44 + v7 + 8) & ~v7, v63);
      if (!v62)
        *((_BYTE *)v35 + v57) = 0;
      goto LABEL_29;
    }
  }
  else
  {
    v39 = v58;
    v38 = v59;
    v40 = v52;
    if (!*((_BYTE *)v36 + v57))
      goto LABEL_27;
    v41 = (*((unsigned __int8 *)v36 + v57) - 1) << (8 * v57);
    if (v57 > 3)
      v41 = 0;
    if ((_DWORD)v57)
    {
      if (v57 <= 3)
        v42 = v57;
      else
        v42 = 4;
      __asm { BR              X11 }
    }
    if (v41 == -1)
      goto LABEL_27;
  }
  memcpy(v35, v36, __n);
LABEL_29:
  v45 = (void *)(((unint64_t)v65 + v55) & v40);
  v46 = (const void *)(((unint64_t)v33 + v55) & v40);
  v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  if (v47(v46, 1, v38))
  {
    v48 = v54;
    memcpy(v45, v46, v54);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v45, v46, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
    v48 = v54;
  }
  v49 = (void *)(((unint64_t)v45 + v53) & v40);
  v50 = (const void *)(((unint64_t)v46 + v53) & v40);
  if (v47(v50, 1, v38))
  {
    memcpy(v49, v50, v48);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v49, v50, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v49, 0, 1, v38);
  }
  return a1;
}

uint64_t sub_229350EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_2293B8B7C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + a1 + (v7 | 7)) & ~(v7 | 7);
  v9 = ~v7;
  v26 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v26((v7 + 4 + v8) & ~v7, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = ((v7 | 7) + v10 + ((v7 + 4 + v8) & ~v7)) & ~(v7 | 7);
  v12 = *(unsigned int *)(v6 + 84);
  v13 = ((v7 + 16) & ~v7) + v10;
  v27 = (v7 | 7) + v10;
  if ((_DWORD)v12)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v7 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v9, v12, v5))
    {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!*(_BYTE *)(v11 + v13))
    goto LABEL_13;
  v14 = (*(unsigned __int8 *)(v11 + v13) - 1) << (8 * v13);
  if (v13 > 3)
    v14 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X11 }
  }
  if (v14 == -1)
LABEL_13:
    v26((v7 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v9, v5);
LABEL_14:
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v8 + v13;
  if (!(_DWORD)v12)
    ++v19;
  v20 = v19 + ((v27 + ((v7 + 4) & v9)) & ~(v7 | 7)) + v18;
  v21 = ~v18;
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v22(v20 & ~v18, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20 & ~v18, v16);
  v23 = (v20 | v18) + *(_QWORD *)(v17 + 64);
  if (!*(_DWORD *)(v17 + 84))
    ++v23;
  v24 = v23 & v21;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v23 & v21, 1, v16);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return result;
}

uint64_t sub_229351124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  size_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const void *v46;
  int v47;
  size_t v48;
  size_t v49;
  size_t v50;
  void *v51;
  const void *v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v56 = a1;
  v12 = (_DWORD *)((v11 + a1) & ~(v9 | 7));
  v13 = (_DWORD *)((v11 + a2) & ~(v9 | 7));
  *v12 = *v13;
  v14 = v12;
  v15 = ~v9;
  v16 = ((unint64_t)v12 + v9 + 4) & ~v9;
  v58 = v13;
  v17 = v9 + 4;
  v18 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v54(v16, v18, v7);
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v19 + (v9 | 7) + v16;
  v21 = (_QWORD *)(v20 & ~(v9 | 7));
  v22 = (_QWORD *)((v19 + v10 + v18) & ~v10);
  v23 = *(unsigned int *)(v8 + 84);
  v24 = v19 + ((v9 + 16) & ~v9);
  v55 = v7;
  v57 = v19;
  if (!(_DWORD)v23)
  {
    v28 = v14;
    v29 = ~(v9 | 7);
    if (!*((_BYTE *)v22 + v24))
      goto LABEL_17;
    v30 = (*((unsigned __int8 *)v22 + v24) - 1) << (8 * v24);
    if (v24 > 3)
      v30 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v31 = v19 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v31 = 4;
      __asm { BR              X11 }
    }
    if (v30 == -1)
      goto LABEL_17;
LABEL_13:
    if ((_DWORD)v23)
      v32 = v24;
    else
      v32 = v24 + 1;
    memcpy(v21, v22, v32);
    goto LABEL_19;
  }
  v25 = v7;
  v26 = (_QWORD *)(v20 & ~v10);
  v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))((v9 + (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v15, v23, v25);
  v21 = v26;
  v28 = v14;
  v29 = ~(v9 | 7);
  if (v27)
    goto LABEL_13;
LABEL_17:
  *v21 = *v22;
  v33 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = ((unint64_t)v33 + v9 + 8) & v15;
  v36 = ((unint64_t)v34 + v9 + 8) & v15;
  v37 = v21;
  v54(v35, v36, v55);
  if (!(_DWORD)v23)
    *((_BYTE *)v37 + v24) = 0;
LABEL_19:
  if ((_DWORD)v23)
    v38 = v24;
  else
    v38 = v24 + 1;
  v39 = v38 + (((v17 & v15) + v10 + v57) & v29);
  v40 = sub_2293B8A20();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (uint64_t)v28 + v39 + v42;
  v44 = ~v42;
  v45 = (unint64_t)v58 + v39 + v42;
  v46 = (const void *)(v45 & ~v42);
  v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  if (v59(v46, 1, v40))
  {
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
    if (v47)
      v49 = *(_QWORD *)(v41 + 64);
    else
      v49 = v48 + 1;
    memcpy((void *)(v43 & ~v42), v46, v49);
  }
  else
  {
    (*(void (**)(uint64_t, const void *, uint64_t))(v41 + 16))(v43 & ~v42, v46, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43 & ~v42, 0, 1, v40);
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
  }
  if (v47)
    v50 = v48;
  else
    v50 = v48 + 1;
  v51 = (void *)(((v43 | v42) + v50) & v44);
  v52 = (const void *)(((v45 | v42) + v50) & v44);
  if (v59(v52, 1, v40))
  {
    memcpy(v51, v52, v50);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v51, v52, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v51, 0, 1, v40);
  }
  return v56;
}

uint64_t sub_229351488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  size_t v21;
  uint64_t (*v22)(unint64_t, uint64_t, uint64_t);
  size_t v23;
  _QWORD *v24;
  int v25;
  int v26;
  _DWORD *v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  size_t v56;
  size_t v57;
  void *v58;
  const void *v59;
  int v60;
  int v61;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, unint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = ~(v9 | 7);
  v13 = (_DWORD *)((v11 + a1) & v12);
  v14 = (_DWORD *)((v11 + a2) & v12);
  *v13 = *v14;
  v69 = v13;
  v15 = ~v9;
  v16 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v66 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 24);
  v66(v16, ((unint64_t)v14 + v9 + 4) & ~v9, v7);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = (_QWORD *)((v17 + v10 + v16) & ~v10);
  v70 = v17;
  v19 = (_QWORD *)((v17 + v10 + (((unint64_t)v14 + v9 + 4) & ~v9)) & ~v10);
  v20 = *(unsigned int *)(v8 + 84);
  v21 = v17 + ((v9 + 16) & ~v9);
  v71 = a1;
  v72 = v14;
  v67 = v8;
  if ((_DWORD)v20)
  {
    v68 = ~(v9 | 7);
    v22 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v23 = v17 + ((v9 + 16) & ~v9);
    v24 = v18;
    v25 = v22((v9 + 8 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v26 = v22((v9 + 8 + (((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v18 = v24;
    v21 = v23;
    v27 = v69;
    v28 = ~v9;
    if (v25)
    {
      v12 = ~(v9 | 7);
      if (v26)
        goto LABEL_4;
      goto LABEL_61;
    }
    goto LABEL_28;
  }
  v31 = 8 * v21;
  v32 = v7;
  if (!*((_BYTE *)v18 + v21))
    goto LABEL_19;
  v33 = (*((unsigned __int8 *)v18 + v21) - 1) << v31;
  if (v21 > 3)
    v33 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v34 = v17 + ((v9 + 16) & ~(_DWORD)v9);
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_19:
    v27 = v69;
    v28 = ~v9;
    if (!*((_BYTE *)v19 + v21))
      goto LABEL_34;
    v35 = (*((unsigned __int8 *)v19 + v21) - 1) << v31;
    if (v21 > 3)
      v35 = 0;
    v68 = ~(v9 | 7);
    if ((_DWORD)v21)
    {
      if (v21 <= 3)
        v36 = v17 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v36 = 4;
      __asm { BR              X11 }
    }
    v26 = v35 + 1;
LABEL_28:
    v32 = v7;
    v12 = v68;
    if (v26)
    {
      v37 = v18;
      (*(void (**)(unint64_t, uint64_t))(v67 + 8))((v9 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v28, v7);
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v37;
      goto LABEL_33;
    }
LABEL_34:
    *v18 = *v19;
    v38 = (unint64_t)v18 + 15;
    v39 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF8) = *v39;
    v66((v9 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & v28, ((unint64_t)v39 + v9 + 8) & v28, v32);
    goto LABEL_35;
  }
  v27 = v69;
  v28 = ~v9;
  if (*((_BYTE *)v19 + v21))
  {
    v12 = ~(v9 | 7);
    if ((*((unsigned __int8 *)v19 + v21) - 1) << v31 != -1)
    {
LABEL_4:
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v18;
LABEL_33:
      memcpy(v30, v19, v29);
LABEL_35:
      v41 = v70;
      v40 = v9 + 4;
      v42 = v9 | 7;
      goto LABEL_36;
    }
  }
LABEL_61:
  *v18 = *v19;
  v63 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 16))(((unint64_t)v63 + v9 + 8) & v28, ((unint64_t)v64 + v9 + 8) & v28, v7);
  v41 = v70;
  v40 = v9 + 4;
  v42 = v9 | 7;
  if (!(_DWORD)v20)
    *((_BYTE *)v65 + v21) = 0;
LABEL_36:
  v43 = ((v40 & v28) + v42 + v41) & v12;
  if ((_DWORD)v20)
    v44 = v21;
  else
    v44 = v21 + 1;
  v45 = v44 + v43;
  v46 = sub_2293B8A20();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (uint64_t)v27 + v45 + v48;
  v50 = ~v48;
  v51 = (unint64_t)v72 + v45 + v48;
  v52 = (const void *)(v51 & ~v48);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  v54 = v53(v49 & ~v48, 1, v46);
  v55 = v53((uint64_t)v52, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 16))(v49 & ~v48, v52, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49 & ~v48, 0, 1, v46);
      goto LABEL_48;
    }
  }
  else
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 24))(v49 & ~v48, v52, v46);
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49 & ~v48, v46);
  }
  if (*(_DWORD *)(v47 + 84))
    v56 = *(_QWORD *)(v47 + 64);
  else
    v56 = *(_QWORD *)(v47 + 64) + 1;
  memcpy((void *)(v49 & ~v48), v52, v56);
LABEL_48:
  if (*(_DWORD *)(v47 + 84))
    v57 = *(_QWORD *)(v47 + 64);
  else
    v57 = *(_QWORD *)(v47 + 64) + 1;
  v58 = (void *)(((v49 | v48) + v57) & v50);
  v59 = (const void *)(((v51 | v48) + v57) & v50);
  v60 = v53((uint64_t)v58, 1, v46);
  v61 = v53((uint64_t)v59, 1, v46);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 24))(v58, v59, v46);
      return v71;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v58, v46);
    goto LABEL_56;
  }
  if (v61)
  {
LABEL_56:
    memcpy(v58, v59, v57);
    return v71;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v58, v59, v46);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
  return v71;
}

uint64_t sub_229351A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  size_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const void *v46;
  int v47;
  size_t v48;
  size_t v49;
  size_t v50;
  void *v51;
  const void *v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v56 = a1;
  v12 = (_DWORD *)((v11 + a1) & ~(v9 | 7));
  v13 = (_DWORD *)((v11 + a2) & ~(v9 | 7));
  *v12 = *v13;
  v14 = v12;
  v15 = ~v9;
  v16 = ((unint64_t)v12 + v9 + 4) & ~v9;
  v58 = v13;
  v17 = v9 + 4;
  v18 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v54(v16, v18, v7);
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v19 + (v9 | 7) + v16;
  v21 = (_QWORD *)(v20 & ~(v9 | 7));
  v22 = (_QWORD *)((v19 + v10 + v18) & ~v10);
  v23 = *(unsigned int *)(v8 + 84);
  v24 = v19 + ((v9 + 16) & ~v9);
  v55 = v7;
  v57 = v19;
  if (!(_DWORD)v23)
  {
    v28 = v14;
    v29 = ~(v9 | 7);
    if (!*((_BYTE *)v22 + v24))
      goto LABEL_17;
    v30 = (*((unsigned __int8 *)v22 + v24) - 1) << (8 * v24);
    if (v24 > 3)
      v30 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v31 = v19 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v31 = 4;
      __asm { BR              X11 }
    }
    if (v30 == -1)
      goto LABEL_17;
LABEL_13:
    if ((_DWORD)v23)
      v32 = v24;
    else
      v32 = v24 + 1;
    memcpy(v21, v22, v32);
    goto LABEL_19;
  }
  v25 = v7;
  v26 = (_QWORD *)(v20 & ~v10);
  v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))((v9 + (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v15, v23, v25);
  v21 = v26;
  v28 = v14;
  v29 = ~(v9 | 7);
  if (v27)
    goto LABEL_13;
LABEL_17:
  *v21 = *v22;
  v33 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = ((unint64_t)v33 + v9 + 8) & v15;
  v36 = ((unint64_t)v34 + v9 + 8) & v15;
  v37 = v21;
  v54(v35, v36, v55);
  if (!(_DWORD)v23)
    *((_BYTE *)v37 + v24) = 0;
LABEL_19:
  if ((_DWORD)v23)
    v38 = v24;
  else
    v38 = v24 + 1;
  v39 = v38 + (((v17 & v15) + v10 + v57) & v29);
  v40 = sub_2293B8A20();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (uint64_t)v28 + v39 + v42;
  v44 = ~v42;
  v45 = (unint64_t)v58 + v39 + v42;
  v46 = (const void *)(v45 & ~v42);
  v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  if (v59(v46, 1, v40))
  {
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
    if (v47)
      v49 = *(_QWORD *)(v41 + 64);
    else
      v49 = v48 + 1;
    memcpy((void *)(v43 & ~v42), v46, v49);
  }
  else
  {
    (*(void (**)(uint64_t, const void *, uint64_t))(v41 + 32))(v43 & ~v42, v46, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43 & ~v42, 0, 1, v40);
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
  }
  if (v47)
    v50 = v48;
  else
    v50 = v48 + 1;
  v51 = (void *)(((v43 | v42) + v50) & v44);
  v52 = (const void *)(((v45 | v42) + v50) & v44);
  if (v59(v52, 1, v40))
  {
    memcpy(v51, v52, v50);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v51, v52, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v51, 0, 1, v40);
  }
  return v56;
}

uint64_t sub_229351D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  size_t v21;
  uint64_t (*v22)(unint64_t, uint64_t, uint64_t);
  size_t v23;
  _QWORD *v24;
  int v25;
  int v26;
  _DWORD *v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  size_t v56;
  size_t v57;
  void *v58;
  const void *v59;
  int v60;
  int v61;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, unint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = ~(v9 | 7);
  v13 = (_DWORD *)((v11 + a1) & v12);
  v14 = (_DWORD *)((v11 + a2) & v12);
  *v13 = *v14;
  v69 = v13;
  v15 = ~v9;
  v16 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v66 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 40);
  v66(v16, ((unint64_t)v14 + v9 + 4) & ~v9, v7);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = (_QWORD *)((v17 + v10 + v16) & ~v10);
  v70 = v17;
  v19 = (_QWORD *)((v17 + v10 + (((unint64_t)v14 + v9 + 4) & ~v9)) & ~v10);
  v20 = *(unsigned int *)(v8 + 84);
  v21 = v17 + ((v9 + 16) & ~v9);
  v71 = a1;
  v72 = v14;
  v67 = v8;
  if ((_DWORD)v20)
  {
    v68 = ~(v9 | 7);
    v22 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v23 = v17 + ((v9 + 16) & ~v9);
    v24 = v18;
    v25 = v22((v9 + 8 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v26 = v22((v9 + 8 + (((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v18 = v24;
    v21 = v23;
    v27 = v69;
    v28 = ~v9;
    if (v25)
    {
      v12 = ~(v9 | 7);
      if (v26)
        goto LABEL_4;
      goto LABEL_61;
    }
    goto LABEL_28;
  }
  v31 = 8 * v21;
  v32 = v7;
  if (!*((_BYTE *)v18 + v21))
    goto LABEL_19;
  v33 = (*((unsigned __int8 *)v18 + v21) - 1) << v31;
  if (v21 > 3)
    v33 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v34 = v17 + ((v9 + 16) & ~(_DWORD)v9);
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_19:
    v27 = v69;
    v28 = ~v9;
    if (!*((_BYTE *)v19 + v21))
      goto LABEL_34;
    v35 = (*((unsigned __int8 *)v19 + v21) - 1) << v31;
    if (v21 > 3)
      v35 = 0;
    v68 = ~(v9 | 7);
    if ((_DWORD)v21)
    {
      if (v21 <= 3)
        v36 = v17 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v36 = 4;
      __asm { BR              X11 }
    }
    v26 = v35 + 1;
LABEL_28:
    v32 = v7;
    v12 = v68;
    if (v26)
    {
      v37 = v18;
      (*(void (**)(unint64_t, uint64_t))(v67 + 8))((v9 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v28, v7);
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v37;
      goto LABEL_33;
    }
LABEL_34:
    *v18 = *v19;
    v38 = (unint64_t)v18 + 15;
    v39 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF8) = *v39;
    v66((v9 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & v28, ((unint64_t)v39 + v9 + 8) & v28, v32);
    goto LABEL_35;
  }
  v27 = v69;
  v28 = ~v9;
  if (*((_BYTE *)v19 + v21))
  {
    v12 = ~(v9 | 7);
    if ((*((unsigned __int8 *)v19 + v21) - 1) << v31 != -1)
    {
LABEL_4:
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v18;
LABEL_33:
      memcpy(v30, v19, v29);
LABEL_35:
      v41 = v70;
      v40 = v9 + 4;
      v42 = v9 | 7;
      goto LABEL_36;
    }
  }
LABEL_61:
  *v18 = *v19;
  v63 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 32))(((unint64_t)v63 + v9 + 8) & v28, ((unint64_t)v64 + v9 + 8) & v28, v7);
  v41 = v70;
  v40 = v9 + 4;
  v42 = v9 | 7;
  if (!(_DWORD)v20)
    *((_BYTE *)v65 + v21) = 0;
LABEL_36:
  v43 = ((v40 & v28) + v42 + v41) & v12;
  if ((_DWORD)v20)
    v44 = v21;
  else
    v44 = v21 + 1;
  v45 = v44 + v43;
  v46 = sub_2293B8A20();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (uint64_t)v27 + v45 + v48;
  v50 = ~v48;
  v51 = (unint64_t)v72 + v45 + v48;
  v52 = (const void *)(v51 & ~v48);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  v54 = v53(v49 & ~v48, 1, v46);
  v55 = v53((uint64_t)v52, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 32))(v49 & ~v48, v52, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49 & ~v48, 0, 1, v46);
      goto LABEL_48;
    }
  }
  else
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 40))(v49 & ~v48, v52, v46);
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49 & ~v48, v46);
  }
  if (*(_DWORD *)(v47 + 84))
    v56 = *(_QWORD *)(v47 + 64);
  else
    v56 = *(_QWORD *)(v47 + 64) + 1;
  memcpy((void *)(v49 & ~v48), v52, v56);
LABEL_48:
  if (*(_DWORD *)(v47 + 84))
    v57 = *(_QWORD *)(v47 + 64);
  else
    v57 = *(_QWORD *)(v47 + 64) + 1;
  v58 = (void *)(((v49 | v48) + v57) & v50);
  v59 = (const void *)(((v51 | v48) + v57) & v50);
  v60 = v53((uint64_t)v58, 1, v46);
  v61 = v53((uint64_t)v59, 1, v46);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 40))(v58, v59, v46);
      return v71;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v58, v46);
    goto LABEL_56;
  }
  if (v61)
  {
LABEL_56:
    memcpy(v58, v59, v57);
    return v71;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v58, v59, v46);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
  return v71;
}

uint64_t sub_229352334(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(sub_2293B8A20() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v14 <= v11)
    v14 = v11;
  v15 = *(_QWORD *)(v9 + 64);
  if ((_DWORD)v10)
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = v15 + 1;
  if (v13)
    v17 = *(_QWORD *)(v12 + 64);
  else
    v17 = *(_QWORD *)(v12 + 64) + 1;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = v18 | 7;
  v20 = (v18 | 7) + *(_QWORD *)(v6 + 64);
  v21 = v16 + ((v18 + 16) & ~v18) + (((v18 | 7) + v15 + ((v18 + 4) & ~v18)) & ~(v18 | 7));
  v22 = *(unsigned __int8 *)(v12 + 80);
  if (a2 <= v14)
    goto LABEL_33;
  v23 = ((v17 + v22 + ((v21 + v22 + (v20 & ~v19)) & ~v22)) & ~v22) + v17;
  v24 = 8 * v23;
  if (v23 > 3)
    goto LABEL_17;
  v26 = ((a2 - v14 + ~(-1 << v24)) >> v24) + 1;
  if (HIWORD(v26))
  {
    v25 = *(_DWORD *)(a1 + v23);
    if (!v25)
      goto LABEL_33;
    goto LABEL_24;
  }
  if (v26 > 0xFF)
  {
    v25 = *(unsigned __int16 *)(a1 + v23);
    if (!*(_WORD *)(a1 + v23))
      goto LABEL_33;
    goto LABEL_24;
  }
  if (v26 >= 2)
  {
LABEL_17:
    v25 = *(unsigned __int8 *)(a1 + v23);
    if (!*(_BYTE *)(a1 + v23))
      goto LABEL_33;
LABEL_24:
    v27 = (v25 - 1) << v24;
    if (v23 > 3)
      v27 = 0;
    if ((_DWORD)v23)
    {
      if (v23 <= 3)
        v28 = v23;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    return v14 + v27 + 1;
  }
LABEL_33:
  if (!v14)
    return 0;
  if ((_DWORD)v7 == v14)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v30 = a1;
    v31 = v7;
    v32 = v5;
    return v29(v30, v31, v32);
  }
  v33 = (v20 + a1) & ~v19;
  if ((_DWORD)v10 == v14)
  {
    v30 = (v18 + 4 + v33) & ~v18;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v31 = v10;
    v32 = v8;
    return v29(v30, v31, v32);
  }
  v34 = (*(uint64_t (**)(uint64_t))(v12 + 48))((v33 + v22 + v21) & ~v22);
  if (v34 >= 2)
    return v34 - 1;
  else
    return 0;
}

void sub_2293525A4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2293B8B7C() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = 0;
  v13 = *(_QWORD *)(sub_2293B8A20() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = v14 - 1;
  if (!v14)
    v15 = 0;
  if (v15 <= v11)
    v16 = v11;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v9 + 64);
  if (v10)
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = v17 + 1;
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = v18 + ((v19 + 16) & ~v19) + (((v19 | 7) + v17 + ((v19 + 4) & ~v19)) & ~(v19 | 7));
  v21 = *(unsigned __int8 *)(v13 + 80);
  if (v14)
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v23 = ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22;
  if (a3 > v16)
  {
    if (v23 > 3)
    {
      v12 = 1u;
      if (v16 >= a2)
LABEL_31:
        __asm { BR              X5 }
LABEL_24:
      v25 = ~v16 + a2;
      if (v23 < 4)
      {
        if ((_DWORD)v23)
        {
          v26 = v25 & ~(-1 << (8 * v23));
          bzero(a1, ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22);
          if ((_DWORD)v23 == 3)
          {
            *(_WORD *)a1 = v26;
            a1[2] = BYTE2(v26);
          }
          else if ((_DWORD)v23 == 2)
          {
            *(_WORD *)a1 = v26;
          }
          else
          {
            *a1 = v26;
          }
        }
      }
      else
      {
        bzero(a1, ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22);
        *(_DWORD *)a1 = v25;
      }
      __asm { BR              X10 }
    }
    v24 = ((a3 - v16 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      v12 = 4u;
      if (v16 >= a2)
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v24 >= 0x100)
      v12 = 2;
    else
      v12 = v24 > 1;
  }
  if (v16 >= a2)
    goto LABEL_31;
  goto LABEL_24;
}

void sub_229352898()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_2293528A0()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_2293528F8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_229352908()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_229352910()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_22935291C()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_22935292C()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_22935293C()
{
  JUMPOUT(0x22E2C85DCLL);
}

void type metadata accessor for SyncedSet.Element.CodingKeys()
{
  JUMPOUT(0x22E2C857CLL);
}

void type metadata accessor for SyncedSet.MergeValues()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t sub_229352964@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_22934FC40(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_229352980(uint64_t a1)
{
  uint64_t v1;

  return sub_229348DB4(a1, v1);
}

uint64_t sub_229352998(uint64_t a1)
{
  uint64_t v1;

  return sub_229349060(a1, v1);
}

uint64_t sub_2293529B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2293529C4(a1, a2, a3);
}

uint64_t sub_2293529C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_2293493E4(a1, a3);
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_2293529F0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_229368BA0(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_229352A08()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_229352A10()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LamportTimestamp(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_229352A8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = type metadata accessor for LamportTimestamp(0);
    v8 = *(int *)(v7 + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 24);
    v14 = (_OWORD *)((char *)v4 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    v21 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_229352C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for LamportTimestamp(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_2293B8B7C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + *(int *)(v2 + 24);
  v7 = type metadata accessor for PBUUID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    v5(v6 + *(int *)(v7 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_229352CE4(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = type metadata accessor for LamportTimestamp(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 24);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_229352E40(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v21;

  *a1 = *a2;
  v5 = type metadata accessor for LamportTimestamp(0);
  v6 = *(int *)(v5 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v21 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v21 + 24);
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      v10(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
      goto LABEL_7;
    }
    sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_22935303C(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = type metadata accessor for LamportTimestamp(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 24);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  return a1;
}

_DWORD *sub_22935317C(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v21;

  *a1 = *a2;
  v5 = type metadata accessor for LamportTimestamp(0);
  v6 = *(int *)(v5 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v21 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v21 + 40);
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v10(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
      goto LABEL_7;
    }
    sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_229353348()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229353354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for LamportTimestamp(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2293533D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293533DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

uint64_t sub_229353454(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2293534A0 + 4 * byte_2293BA36D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2293534D4 + 4 * byte_2293BA368[v4]))();
}

uint64_t sub_2293534D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293534DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2293534E4);
  return result;
}

uint64_t sub_2293534F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2293534F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2293534FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_229353504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_229353510()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_229353520()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_229353530()
{
  JUMPOUT(0x22E2C85DCLL);
}

uint64_t sub_229353544@<X0>(_DWORD *a1@<X8>)
{
  return sub_229352964(a1);
}

uint64_t sub_22935355C()
{
  return sub_229358074(&qword_255A429E8, (uint64_t)&unk_2293BCD44);
}

uint64_t sub_229353580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];

  v28[0] = a5;
  v29 = a2;
  v30 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)a6 = xmmword_2293B9AF0;
  v12 = type metadata accessor for ValueData(0);
  sub_2293B8B70();
  v13 = a6 + *(int *)(v12 + 24);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(a6 + *(int *)(v12 + 28), 1, 1, v14);
  v31 = a1;
  sub_229324E44(a1, (uint64_t)v11, &qword_255A41F70);
  sub_229356CE8((uint64_t)v11);
  if (qword_255A41AA8 != -1)
    swift_once();
  sub_2293586FC(a4, a4);
  v16 = *(_QWORD *)(a4 - 8);
  swift_allocObject();
  v17 = sub_2293B8F78();
  v18 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v29, a4);
  v20 = sub_2293B8FD8();
  v32[2] = v17;
  v32[0] = v28[0];
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12A0], v20, v32);
  v21 = v28[1];
  v22 = sub_2293B8978();
  if (v21)
  {
    sub_2293251F8(v30, &qword_255A41F70);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, a4);
    sub_2293251F8(v31, &qword_255A41F70);
    swift_bridgeObjectRelease();
    return sub_22932E904(a6, type metadata accessor for ValueData);
  }
  else
  {
    v25 = v22;
    v26 = v23;
    swift_bridgeObjectRelease();
    sub_229324F6C(*(_QWORD *)a6, *(_QWORD *)(a6 + 8));
    *(_QWORD *)a6 = v25;
    *(_QWORD *)(a6 + 8) = v26;
    v27 = v30;
    sub_229324E44(v30, (uint64_t)v11, &qword_255A41F70);
    sub_229356F20((uint64_t)v11);
    sub_2293251F8(v27, &qword_255A41F70);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, a4);
    return sub_2293251F8(v31, &qword_255A41F70);
  }
}

uint64_t sub_22935382C(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  int *v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  char *v62;
  void (*v63)(const void *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  v75 = type metadata accessor for PBUUID(0);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 - 8);
  v4 = MEMORY[0x24BDAC7A8](v75);
  v70 = (uint64_t *)((char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v68 = (uint64_t *)((char *)&v65 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)&v65 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v67 = (uint64_t)&v65 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v65 - v14;
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  v78 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v76 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v79 = (char *)&v65 - v20;
  v72 = type metadata accessor for LamportTimestamp(0);
  v21 = MEMORY[0x24BDAC7A8](v72);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v65 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (int *)((char *)&v65 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (int *)((char *)&v65 - v30);
  v32 = *a2;
  v33 = *a1;
  sub_229324D74((uint64_t)a2, (uint64_t)&v65 - v30, type metadata accessor for LamportTimestamp);
  sub_229324D74((uint64_t)a1, (uint64_t)v29, type metadata accessor for LamportTimestamp);
  if (v32 >= v33)
  {
    v35 = *v31;
    v36 = *v29;
    sub_229324D74((uint64_t)v31, (uint64_t)v26, type metadata accessor for LamportTimestamp);
    sub_229324D74((uint64_t)v29, (uint64_t)v23, type metadata accessor for LamportTimestamp);
    v37 = (uint64_t)v26;
    if (v35 == v36)
    {
      v38 = v23;
      v39 = v72;
      v40 = *(int *)(v72 + 24);
      v66 = v37;
      v41 = v37 + v40;
      sub_229324E44(v37 + v40, (uint64_t)v15, &qword_255A41F98);
      v42 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v71 + 6);
      v43 = v75;
      v44 = v42(v15, 1, v75);
      sub_2293251F8((uint64_t)v15, &qword_255A41F98);
      v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
      if (v44 == 1)
      {
        v45 = v78;
        if (qword_255A41AD0 != -1)
          swift_once();
        v46 = v77;
        v47 = __swift_project_value_buffer(v77, (uint64_t)qword_255A44CF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v79, v47, v46);
        v23 = v38;
      }
      else
      {
        v48 = v67;
        sub_229324E44(v41, v67, &qword_255A41F98);
        if (v42((char *)v48, 1, v43) == 1)
        {
          v49 = v68;
          *v68 = 0;
          v49[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v48, &qword_255A41F98);
        }
        else
        {
          v49 = v68;
          sub_22932EA14(v48, (uint64_t)v68, type metadata accessor for PBUUID);
        }
        v46 = v77;
        v23 = v38;
        sub_229357288();
        sub_22932E904((uint64_t)v49, type metadata accessor for PBUUID);
      }
      v50 = (uint64_t)&v23[*(int *)(v39 + 24)];
      v51 = v73;
      sub_229324E44(v50, v73, &qword_255A41F98);
      v52 = v71;
      v53 = v43;
      v54 = v71(v51, 1, v43);
      sub_2293251F8(v51, &qword_255A41F98);
      if (v54 == 1)
      {
        v55 = v76;
        if (qword_255A41AD0 != -1)
          swift_once();
        v56 = __swift_project_value_buffer(v46, (uint64_t)qword_255A44CF0);
        v57 = v78;
        (*(void (**)(const void *, uint64_t, uint64_t))(v78 + 16))(v55, v56, v46);
      }
      else
      {
        v58 = v50;
        v59 = v69;
        sub_229324E44(v58, v69, &qword_255A41F98);
        v60 = v52(v59, 1, v53);
        v55 = v76;
        v61 = v70;
        if (v60 == 1)
        {
          *v70 = 0;
          v61[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v59, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v59, (uint64_t)v70, type metadata accessor for PBUUID);
        }
        v57 = v78;
        sub_229357288();
        sub_22932E904((uint64_t)v61, type metadata accessor for PBUUID);
      }
      v62 = v79;
      v34 = memcmp(v79, v55, v74) >> 31;
      v63 = *(void (**)(const void *, uint64_t))(v57 + 8);
      v63(v55, v46);
      v63(v62, v46);
      v37 = v66;
    }
    else
    {
      v34 = 0;
    }
    sub_22932E904(v37, type metadata accessor for LamportTimestamp);
    sub_22932E904((uint64_t)v23, type metadata accessor for LamportTimestamp);
  }
  else
  {
    v34 = 1;
  }
  sub_22932E904((uint64_t)v31, type metadata accessor for LamportTimestamp);
  sub_22932E904((uint64_t)v29, type metadata accessor for LamportTimestamp);
  return v34;
}

uint64_t sub_229353E08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v13 = a3;
  v12 = sub_2293B9104();
  v6 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v8 = (char *)&v12 - v7;
  if (qword_255A41AB0 != -1)
    swift_once();
  v9 = sub_2293B8FD8();
  v15[0] = a2;
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12D0], v9, v15);
  result = sub_2293B8948();
  if (!v3)
  {
    v14 = v15[2];
    MEMORY[0x22E2C85DC](MEMORY[0x24BEE12E0], v9);
    sub_2293B9074();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(a1 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, a1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      sub_229359664();
      swift_allocError();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v13, v8, a1);
    }
  }
  return result;
}

uint64_t sub_229353FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for PBUUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v13 = v1 + *(int *)(type metadata accessor for ValueData(0) + 24);
  sub_229324E44(v13, (uint64_t)v12, &qword_255A41F98);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v15 = v14(v12, 1, v3);
  sub_2293251F8((uint64_t)v12, &qword_255A41F98);
  if (v15 == 1)
  {
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    sub_229324E44(v13, (uint64_t)v10, &qword_255A41F98);
    if (v14(v10, 1, v3) == 1)
    {
      *v6 = 0;
      v6[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v10, (uint64_t)v6, type metadata accessor for PBUUID);
    }
    sub_229357288();
    sub_22932E904((uint64_t)v6, type metadata accessor for PBUUID);
    v18 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
}

uint64_t sub_22935419C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for PBUUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v13 = v1 + *(int *)(type metadata accessor for ValueData(0) + 28);
  sub_229324E44(v13, (uint64_t)v12, &qword_255A41F98);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v15 = v14(v12, 1, v3);
  sub_2293251F8((uint64_t)v12, &qword_255A41F98);
  if (v15 == 1)
  {
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    sub_229324E44(v13, (uint64_t)v10, &qword_255A41F98);
    if (v14(v10, 1, v3) == 1)
    {
      *v6 = 0;
      v6[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v10, (uint64_t)v6, type metadata accessor for PBUUID);
    }
    sub_229357288();
    sub_22932E904((uint64_t)v6, type metadata accessor for PBUUID);
    v18 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
}

uint64_t sub_22935437C(uint64_t a1)
{
  sub_2293B8FD8();
  return a1;
}

uint64_t sub_2293543A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = type metadata accessor for ModelData.PropertyDataMap(0);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v28[1] = v1;
  v37 = MEMORY[0x24BEE4AF8];
  sub_22936F8F8(0, v6, 0);
  v7 = v37;
  result = sub_2293705A8(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v29 = a1 + 80;
  v30 = v6;
  v31 = v9;
  v32 = a1 + 64;
  v33 = a1;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_24;
    v36 = v11;
    v16 = v7;
    v17 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v10);
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v19 = *v18;
    v20 = v18[1];
    sub_229324ECC(*v18, v20);
    sub_2293B8B70();
    *(_DWORD *)v5 = v17;
    v7 = v16;
    *((_QWORD *)v5 + 1) = v19;
    *((_QWORD *)v5 + 2) = v20;
    v37 = v16;
    v22 = *(_QWORD *)(v16 + 16);
    v21 = *(_QWORD *)(v16 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_22936F8F8(v21 > 1, v22 + 1, 1);
      v7 = v37;
    }
    *(_QWORD *)(v7 + 16) = v22 + 1;
    result = sub_22932EA14((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v22, type metadata accessor for ModelData.PropertyDataMap);
    a1 = v33;
    v13 = 1 << *(_BYTE *)(v33 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v32;
    v23 = *(_QWORD *)(v32 + 8 * v15);
    if ((v23 & (1 << v10)) == 0)
      goto LABEL_26;
    LODWORD(v9) = v31;
    if (*(_DWORD *)(v33 + 36) != (_DWORD)v31)
      goto LABEL_27;
    v24 = v23 & (-2 << (v10 & 0x3F));
    if (v24)
    {
      v13 = __clz(__rbit64(v24)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v30;
    }
    else
    {
      v25 = v15 + 1;
      v26 = (unint64_t)(v13 + 63) >> 6;
      v14 = v30;
      if (v15 + 1 < v26)
      {
        v27 = *(_QWORD *)(v32 + 8 * v25);
        if (v27)
        {
LABEL_20:
          v13 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v15)
          {
            v27 = *(_QWORD *)(v29 + 8 * v15++);
            if (v27)
            {
              v25 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v11 = v36 + 1;
    v10 = v13;
    if (v36 + 1 == v14)
      return v7;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_229354644(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_2293B905C();
  if (!v20)
    return sub_2293B8F90();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_2293B91DC();
  v34 = sub_2293B91E8();
  sub_2293B91C4();
  v37 = v8;
  result = sub_2293B9050();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_2293B9080();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_2293B91D0();
      result = sub_2293B9068();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_229354934()
{
  uint64_t v0;
  uint64_t result;

  sub_2293B8990();
  swift_allocObject();
  v0 = sub_2293B8984();
  result = sub_2293B896C();
  qword_255A429D8 = v0;
  return result;
}

uint64_t sub_22935497C()
{
  uint64_t result;

  sub_2293B8960();
  swift_allocObject();
  result = sub_2293B8954();
  qword_255A429E0 = result;
  return result;
}

uint64_t sub_2293549B8@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t result;
  uint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a5;
  v33 = a6;
  v30 = a3;
  v31 = a4;
  v29 = a2;
  v9 = type metadata accessor for PBUUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2293B8A20();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a7 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a7 + 24) = v20;
  *(_QWORD *)(a7 + 32) = v20;
  v21 = type metadata accessor for SyncTransactionMessage(0);
  sub_2293B8B70();
  v22 = a7 + *(int *)(v21 + 36);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v23(v22, 1, 1, v9);
  *(_QWORD *)a7 = a1;
  *(_BYTE *)(a7 + 8) = v29 & 1;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v25 = v30;
  v24(v19, (uint64_t)v30, v13);
  v24(v17, (uint64_t)v19, v13);
  sub_229357158((uint64_t)v17, v12);
  sub_2293251F8(v22, &qword_255A41F98);
  sub_22932EA14((uint64_t)v12, v22, type metadata accessor for PBUUID);
  v23(v22, 0, 1, v28);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v19, v13);
  v26(v25, v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a7 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a7 + 32) = v32;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a7 + 24) = v33;
  return result;
}

uint64_t sub_229354BAC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v33 = a4;
  v34 = a5;
  v32 = a3;
  v31 = a2;
  v35 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PBUUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2293B8A20();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  *(_DWORD *)a6 = 0;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a6 + 8) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a6 + 16) = v20;
  v21 = type metadata accessor for ModelData(0);
  sub_2293B8B70();
  v22 = a6 + *(int *)(v21 + 32);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v23(v22, 1, 1, v9);
  v23(a6 + *(int *)(v21 + 36), 1, 1, v9);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v19, v35, v13);
  v24(v17, v19, v13);
  sub_229357158((uint64_t)v17, v12);
  sub_2293251F8(v22, &qword_255A41F98);
  sub_22932EA14((uint64_t)v12, v22, type metadata accessor for PBUUID);
  v23(v22, 0, 1, v9);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v19, v13);
  v26 = v30;
  v27 = v31;
  sub_229324E44(v31, v30, &qword_255A41F70);
  sub_229354E18(v26);
  *(_DWORD *)a6 = v32;
  v28 = sub_2293543A4(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 8) = v28;
  sub_229355050(v34);
  sub_2293251F8(v27, &qword_255A41F70);
  return ((uint64_t (*)(char *, uint64_t))v25)(v35, v13);
}

uint64_t sub_229354E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = type metadata accessor for PBUUID(0);
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (unint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8A20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v20 = a1;
  sub_229324E44(a1, (uint64_t)v8, &qword_255A41F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41F70);
    v16 = v1 + *(int *)(type metadata accessor for ModelData(0) + 36);
    sub_2293251F8(v16, &qword_255A41F98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, 1, 1, v19);
    return sub_2293251F8(v20, &qword_255A41F70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_229357158((uint64_t)v13, v5);
    v18 = v1 + *(int *)(type metadata accessor for ModelData(0) + 36);
    sub_2293251F8(v18, &qword_255A41F98);
    sub_22932EA14((uint64_t)v5, v18, type metadata accessor for PBUUID);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v19);
    sub_2293251F8(v20, &qword_255A41F70);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_229355050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v3 = type metadata accessor for PBUUID(0);
  v66 = *(_QWORD *)(v3 - 8);
  v67 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v65 = (unint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42A00);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v62 = (uint64_t)&v53 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v53 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v60 = (uint64_t)&v53 - v11;
  v12 = type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v57 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v55 = (uint64_t)&v53 - v15;
    v53 = v1;
    v73 = MEMORY[0x24BEE4AF8];
    sub_22936F924(0, v16, 0);
    v17 = sub_2293705A8(a1);
    v19 = v18;
    v21 = v20 & 1;
    v54 = a1 + 64;
    v68 = v16 - 1;
    v56 = a1;
    v22 = v67;
    while (1)
    {
      v23 = v64;
      v24 = v60;
      v25 = (uint64_t *)(v60 + *(int *)(v64 + 48));
      v72 = v17;
      v69 = v19;
      v26 = sub_229358F94(v60, v17, v19, v21 & 1, a1);
      v28 = v27;
      *v25 = v26;
      v25[1] = v27;
      v29 = sub_2293B8A20();
      v71 = *(_QWORD *)(v29 - 8);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v31 = v61;
      v30(v61, v24, v29);
      v32 = v30;
      v70 = (void (*)(uint64_t, uint64_t, uint64_t))v30;
      v33 = (uint64_t *)&v31[*(int *)(v23 + 48)];
      *v33 = v26;
      v33[1] = v28;
      v34 = (uint64_t)v31;
      v35 = v62;
      sub_22932E9D0(v34, v62, &qword_255A42A00);
      swift_bridgeObjectRetain();
      sub_2293251F8(v24, &qword_255A42A00);
      v36 = v57;
      *v57 = 0;
      v36[1] = 0xE000000000000000;
      v37 = v59;
      sub_2293B8B70();
      v38 = (uint64_t)v36 + *(int *)(v37 + 24);
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v39(v38, 1, 1, v22);
      v40 = (uint64_t *)(v35 + *(int *)(v23 + 48));
      v41 = (uint64_t)v63;
      v32(v63, v35, v29);
      v42 = v65;
      sub_229357158(v41, v65);
      sub_2293251F8(v38, &qword_255A41F98);
      sub_22932EA14((uint64_t)v42, v38, type metadata accessor for PBUUID);
      v39(v38, 0, 1, v22);
      v43 = (uint64_t *)(v41 + *(int *)(v23 + 48));
      v70(v41, v35, v29);
      v45 = *v40;
      v44 = v40[1];
      *v43 = *v40;
      v43[1] = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v36 = v45;
      v36[1] = v44;
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v41, v29);
      v46 = (uint64_t)v36;
      v47 = v55;
      sub_22932EA14(v46, v55, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
      sub_2293251F8(v35, &qword_255A42A00);
      v48 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22936F924(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v48 = v73;
      }
      v50 = *(_QWORD *)(v48 + 16);
      v49 = *(_QWORD *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_22936F924(v49 > 1, v50 + 1, 1);
        v48 = v73;
      }
      *(_QWORD *)(v48 + 16) = v50 + 1;
      sub_22932EA14(v47, v48+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v50, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
      a1 = v56;
      result = v72;
      if (v72 < 0 || v72 >= -(-1 << *(_BYTE *)(v56 + 32)))
        break;
      if (((*(_QWORD *)(v54 + (((unint64_t)v72 >> 3) & 0xFFFFFFFFFFFFF8)) >> v72) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v56 + 36) != (_DWORD)v69)
        goto LABEL_18;
      v52 = sub_2293B9140();
      if (!v68)
      {
        swift_bridgeObjectRelease();
        v1 = v53;
        goto LABEL_15;
      }
      v17 = v52;
      v21 = 0;
      v19 = *(unsigned int *)(a1 + 36);
      --v68;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
LABEL_15:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 16) = v48;
  }
  return result;
}

uint64_t sub_229355524@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  unint64_t *v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v33)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v43 = a8;
  v44 = a4;
  v41 = a6;
  v42 = a7;
  v40 = a5;
  v45 = a3;
  v38 = a2;
  v37 = a1;
  v10 = type metadata accessor for PBUUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (unint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2293B8A20();
  v35 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  *(_QWORD *)(a9 + 16) = 0;
  *(_BYTE *)(a9 + 24) = 1;
  *(_DWORD *)(a9 + 28) = 0;
  v19 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  sub_2293B8B70();
  v20 = a9 + v19[8];
  v21 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56);
  v33 = v21;
  v21(v20, 1, 1, v10);
  v22 = a9 + v19[9];
  v21(v22, 1, 1, v10);
  v39 = a9 + v19[10];
  v34 = v10;
  ((void (*)(void))v21)();
  *(_QWORD *)a9 = v37;
  *(_BYTE *)(a9 + 8) = v38 & 1;
  v23 = v35;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v24(v18, v45, v13);
  v24(v16, (uint64_t)v18, v13);
  v25 = v36;
  sub_229357158((uint64_t)v16, v36);
  sub_2293251F8(v20, &qword_255A41F98);
  sub_22932EA14((uint64_t)v25, v20, type metadata accessor for PBUUID);
  v26 = v10;
  v27 = v33;
  v33(v20, 0, 1, v26);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v18, v13);
  v24(v18, (uint64_t)v44, v13);
  v24(v16, (uint64_t)v18, v13);
  sub_229357158((uint64_t)v16, v25);
  sub_2293251F8(v22, &qword_255A41F98);
  sub_22932EA14((uint64_t)v25, v22, type metadata accessor for PBUUID);
  v29 = v34;
  v27(v22, 0, 1, v34);
  v28(v18, v13);
  *(_QWORD *)(a9 + 16) = v40;
  *(_BYTE *)(a9 + 24) = v41 & 1;
  *(_DWORD *)(a9 + 28) = v42;
  v30 = v43;
  v24(v18, (uint64_t)v43, v13);
  v24(v16, (uint64_t)v18, v13);
  sub_229357158((uint64_t)v16, v25);
  v31 = v39;
  sub_2293251F8(v39, &qword_255A41F98);
  sub_22932EA14((uint64_t)v25, v31, type metadata accessor for PBUUID);
  v27(v31, 0, 1, v29);
  v28(v18, v13);
  v28(v30, v13);
  v28(v44, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v45, v13);
}

uint64_t sub_229355860@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  unint64_t *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  char *v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v40;

  v36 = a6;
  v37 = a7;
  v34 = a4;
  v35 = a5;
  v40 = a3;
  v33 = a2;
  v32 = a1;
  v9 = type metadata accessor for PBUUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (unint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_2293B8A20();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - v16;
  *(_QWORD *)(a8 + 16) = 0;
  *(_BYTE *)(a8 + 24) = 1;
  *(_DWORD *)(a8 + 28) = 0;
  v18 = type metadata accessor for OwnershipChangeReplyMessage(0);
  sub_2293B8B70();
  v19 = a8 + *(int *)(v18 + 32);
  v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56);
  v39 = v20;
  v20(v19, 1, 1, v9);
  v21 = a8 + *(int *)(v18 + 36);
  v20(v21, 1, 1, v9);
  *(_QWORD *)a8 = v32;
  *(_BYTE *)(a8 + 8) = v33 & 1;
  v22 = v13;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v23(v17, v40, v12);
  v24 = (uint64_t)v38;
  v23(v38, (uint64_t)v17, v12);
  v25 = v31;
  sub_229357158(v24, v31);
  sub_2293251F8(v19, &qword_255A41F98);
  sub_22932EA14((uint64_t)v25, v19, type metadata accessor for PBUUID);
  v39(v19, 0, 1, v9);
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v17, v12);
  v27 = v34;
  v23(v17, (uint64_t)v34, v12);
  v28 = (uint64_t)v38;
  v23(v38, (uint64_t)v17, v12);
  sub_229357158(v28, v25);
  sub_2293251F8(v21, &qword_255A41F98);
  sub_22932EA14((uint64_t)v25, v21, type metadata accessor for PBUUID);
  v39(v21, 0, 1, v9);
  v26(v17, v12);
  v26(v27, v12);
  result = ((uint64_t (*)(uint64_t, uint64_t))v26)(v40, v12);
  *(_QWORD *)(a8 + 16) = v35;
  *(_BYTE *)(a8 + 24) = v36 & 1;
  *(_DWORD *)(a8 + 28) = v37;
  return result;
}

uint64_t sub_229355B00@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;
  uint64_t v44;

  v41 = a6;
  v42 = a7;
  v40 = a5;
  v43 = a4;
  v44 = a3;
  v38 = a2;
  v37 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v9);
  v39 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PBUUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (unint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_2293B8A20();
  v36 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v34 - v20;
  *(_DWORD *)(a8 + 12) = 0;
  *(_BYTE *)(a8 + 16) = 0;
  v22 = (int *)type metadata accessor for OwnershipChangeBroadcastMessage(0);
  sub_2293B8B70();
  v23 = a8 + v22[8];
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v35 = v13;
  v24(v23, 1, 1, v13);
  v25 = a8 + v22[9];
  v24(v25, 1, 1, v13);
  v24(a8 + v22[10], 1, 1, v13);
  v26 = v36;
  *(_QWORD *)a8 = v37;
  *(_BYTE *)(a8 + 8) = v38 & 1;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v21, v44, v16);
  v27(v19, (uint64_t)v21, v16);
  v34 = v15;
  sub_229357158((uint64_t)v19, v15);
  sub_2293251F8(v23, &qword_255A41F98);
  sub_22932EA14((uint64_t)v15, v23, type metadata accessor for PBUUID);
  v28 = v35;
  v24(v23, 0, 1, v35);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v21, v16);
  v27(v21, (uint64_t)v43, v16);
  v27(v19, (uint64_t)v21, v16);
  v30 = v34;
  sub_229357158((uint64_t)v19, v34);
  sub_2293251F8(v25, &qword_255A41F98);
  sub_22932EA14((uint64_t)v30, v25, type metadata accessor for PBUUID);
  v24(v25, 0, 1, v28);
  v29(v21, v16);
  v32 = v39;
  v31 = v40;
  sub_229324E44(v40, v39, &qword_255A41F70);
  sub_229355DFC(v32);
  sub_2293251F8(v31, &qword_255A41F70);
  v29(v43, v16);
  result = ((uint64_t (*)(uint64_t, uint64_t))v29)(v44, v16);
  *(_DWORD *)(a8 + 12) = v41;
  *(_BYTE *)(a8 + 16) = v42;
  return result;
}

uint64_t sub_229355DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = type metadata accessor for PBUUID(0);
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (unint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8A20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v20 = a1;
  sub_229324E44(a1, (uint64_t)v8, &qword_255A41F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41F70);
    v16 = v1 + *(int *)(type metadata accessor for OwnershipChangeBroadcastMessage(0) + 40);
    sub_2293251F8(v16, &qword_255A41F98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, 1, 1, v19);
    return sub_2293251F8(v20, &qword_255A41F70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_229357158((uint64_t)v13, v5);
    v18 = v1 + *(int *)(type metadata accessor for OwnershipChangeBroadcastMessage(0) + 40);
    sub_2293251F8(v18, &qword_255A41F98);
    sub_22932EA14((uint64_t)v5, v18, type metadata accessor for PBUUID);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v19);
    sub_2293251F8(v20, &qword_255A41F70);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_229356034@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, int a5@<W4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v40 = a6;
  v41 = a4;
  v39 = a5;
  v42 = a3;
  v37 = a2;
  v36 = a1;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v35 = (unint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_2293B8A20();
  v34 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - v15;
  *(_DWORD *)(a7 + 12) = 0;
  v17 = (int *)type metadata accessor for OwnershipHandoffRequestMessage(0);
  sub_2293B8B70();
  v18 = a7 + v17[7];
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v32 = v19;
  v19(v18, 1, 1, v8);
  v20 = a7 + v17[8];
  v19(v20, 1, 1, v8);
  v38 = a7 + v17[9];
  v33 = v8;
  ((void (*)(void))v19)();
  *(_QWORD *)a7 = v36;
  *(_BYTE *)(a7 + 8) = v37 & 1;
  v21 = v34;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v22(v16, v42, v11);
  v22(v14, (uint64_t)v16, v11);
  v23 = v35;
  sub_229357158((uint64_t)v14, v35);
  sub_2293251F8(v18, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v18, type metadata accessor for PBUUID);
  v24 = v8;
  v25 = v32;
  v32(v18, 0, 1, v24);
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v16, v11);
  v22(v16, (uint64_t)v41, v11);
  v22(v14, (uint64_t)v16, v11);
  sub_229357158((uint64_t)v14, v23);
  sub_2293251F8(v20, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v20, type metadata accessor for PBUUID);
  v27 = v33;
  v25(v20, 0, 1, v33);
  v26(v16, v11);
  *(_DWORD *)(a7 + 12) = v39;
  v28 = v40;
  v22(v16, (uint64_t)v40, v11);
  v22(v14, (uint64_t)v16, v11);
  sub_229357158((uint64_t)v14, v23);
  v29 = v38;
  sub_2293251F8(v38, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v29, type metadata accessor for PBUUID);
  v25(v29, 0, 1, v27);
  v26(v16, v11);
  v26(v28, v11);
  v26(v41, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v42, v11);
}

uint64_t sub_22935634C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X3>, int a5@<W4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v40 = a6;
  v41 = a4;
  v39 = a5;
  v42 = a3;
  v37 = a2;
  v36 = a1;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v35 = (unint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_2293B8A20();
  v34 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - v15;
  *(_BYTE *)(a7 + 9) = 0;
  v17 = (int *)type metadata accessor for OwnershipHandoffReplyMessage(0);
  sub_2293B8B70();
  v18 = a7 + v17[7];
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v32 = v19;
  v19(v18, 1, 1, v8);
  v20 = a7 + v17[8];
  v19(v20, 1, 1, v8);
  v38 = a7 + v17[9];
  v33 = v8;
  ((void (*)(void))v19)();
  *(_QWORD *)a7 = v36;
  *(_BYTE *)(a7 + 8) = v37 & 1;
  v21 = v34;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v22(v16, v42, v11);
  v22(v14, (uint64_t)v16, v11);
  v23 = v35;
  sub_229357158((uint64_t)v14, v35);
  sub_2293251F8(v18, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v18, type metadata accessor for PBUUID);
  v24 = v8;
  v25 = v32;
  v32(v18, 0, 1, v24);
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v16, v11);
  v22(v16, (uint64_t)v41, v11);
  v22(v14, (uint64_t)v16, v11);
  sub_229357158((uint64_t)v14, v23);
  sub_2293251F8(v20, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v20, type metadata accessor for PBUUID);
  v27 = v33;
  v25(v20, 0, 1, v33);
  v26(v16, v11);
  *(_BYTE *)(a7 + 9) = v39;
  v28 = v40;
  v22(v16, (uint64_t)v40, v11);
  v22(v14, (uint64_t)v16, v11);
  sub_229357158((uint64_t)v14, v23);
  v29 = v38;
  sub_2293251F8(v38, &qword_255A41F98);
  sub_22932EA14((uint64_t)v23, v29, type metadata accessor for PBUUID);
  v25(v29, 0, 1, v27);
  v26(v16, v11);
  v26(v28, v11);
  v26(v41, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v42, v11);
}

uint64_t sub_229356664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD v28[7];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v32 = a3;
  v33 = a4;
  v31 = a2;
  v16 = MEMORY[0x24BEE4AF8];
  *a9 = MEMORY[0x24BEE4AF8];
  a9[1] = v16;
  a9[2] = v16;
  a9[3] = v16;
  type metadata accessor for DictionaryCatchupData(0);
  sub_2293B8B70();
  v40 = a1;
  v35 = a5;
  v36 = a6;
  v29 = a7;
  v37 = a7;
  v38 = a8;
  v17 = sub_2293B8FD8();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA0);
  v19 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE12E0], v17);
  v30 = v18;
  v20 = sub_229354644((void (*)(char *, char *))sub_229359624, (uint64_t)v34, v17, MEMORY[0x24BDCDDE8], v18, v19, MEMORY[0x24BEE3F20], (uint64_t)&v39);
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_22932E904((uint64_t)a9, type metadata accessor for DictionaryCatchupData);
  }
  else
  {
    swift_bridgeObjectRelease();
    *a9 = v20;
    swift_bridgeObjectRelease();
    a9[1] = v31;
    v21 = swift_bridgeObjectRelease();
    v22 = v33;
    a9[2] = v32;
    v40 = v22;
    MEMORY[0x24BDAC7A8](v21);
    v28[2] = a5;
    v28[3] = a6;
    v28[4] = v29;
    v28[5] = a8;
    type metadata accessor for LamportTimestamp(255);
    v23 = sub_2293B8EC4();
    v24 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
    v25 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE04E8], v23);
    v26 = sub_229354644((void (*)(char *, char *))sub_229359644, (uint64_t)v28, v23, v24, v30, v25, MEMORY[0x24BEE3F20], (uint64_t)&v39);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a9[3] = v26;
  }
  return result;
}

uint64_t sub_2293568AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  if (qword_255A41AA8 != -1)
    swift_once();
  sub_2293586FC(a2, a2);
  v11 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v12 = sub_2293B8F78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, a1, a2);
  v14 = sub_2293B8FD8();
  v20[2] = v12;
  v20[0] = a3;
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12A0], v14, v20);
  v15 = sub_2293B8978();
  if (v5)
  {
    result = swift_bridgeObjectRelease();
    *a4 = v5;
  }
  else
  {
    v18 = v15;
    v19 = v16;
    result = swift_bridgeObjectRelease();
    *a5 = v18;
    a5[1] = v19;
  }
  return result;
}

uint64_t sub_2293569FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];

  v38 = a4;
  v40 = a3;
  v42 = a1;
  v7 = type metadata accessor for LamportTimestamp(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v10 = (char *)&v32 - v9;
  *(_OWORD *)a5 = xmmword_2293B9AF0;
  v11 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
  sub_2293B8B70();
  v12 = *(int *)(v11 + 24);
  v39 = a5;
  v13 = (uint64_t)a5 + v12;
  v14 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 56);
  v35 = v13;
  v36 = v14;
  v37 = v7;
  v14();
  if (qword_255A41AA8 != -1)
    swift_once();
  sub_2293586FC(a2, a2);
  v15 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v16 = sub_2293B8F78();
  v18 = v17;
  v19 = *(int *)(TupleTypeMetadata2 + 48);
  v32 = TupleTypeMetadata2;
  v20 = (uint64_t)&v10[v19];
  v21 = v42 + v19;
  v33 = *(void (**)(char *))(v15 + 16);
  v33(v10);
  v34 = v21;
  sub_229324D74(v21, v20, type metadata accessor for LamportTimestamp);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v18, v10, a2);
  v22 = sub_2293B8FD8();
  sub_22932E904(v20, type metadata accessor for LamportTimestamp);
  v43[2] = v16;
  v43[0] = v40;
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12A0], v22, v43);
  v23 = v41;
  v24 = sub_2293B8978();
  if (v23)
  {
    swift_bridgeObjectRelease();
    result = sub_22932E904((uint64_t)v39, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
    *v38 = v23;
  }
  else
  {
    v27 = v24;
    v28 = v25;
    swift_bridgeObjectRelease();
    v29 = v39;
    sub_229324F6C(*v39, v39[1]);
    *v29 = v27;
    v29[1] = v28;
    v30 = (uint64_t)&v10[*(int *)(v32 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v33)(v10, v42, a2);
    sub_229324D74(v34, v30, type metadata accessor for LamportTimestamp);
    v31 = v35;
    sub_2293251F8(v35, &qword_255A41FA8);
    sub_22932EA14(v30, v31, type metadata accessor for LamportTimestamp);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v36)(v31, 0, 1, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, a2);
  }
  return result;
}

uint64_t sub_229356CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = type metadata accessor for PBUUID(0);
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (unint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8A20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v20 = a1;
  sub_229324E44(a1, (uint64_t)v8, &qword_255A41F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41F70);
    v16 = v1 + *(int *)(type metadata accessor for ValueData(0) + 24);
    sub_2293251F8(v16, &qword_255A41F98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, 1, 1, v19);
    return sub_2293251F8(v20, &qword_255A41F70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_229357158((uint64_t)v13, v5);
    v18 = v1 + *(int *)(type metadata accessor for ValueData(0) + 24);
    sub_2293251F8(v18, &qword_255A41F98);
    sub_22932EA14((uint64_t)v5, v18, type metadata accessor for PBUUID);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v19);
    sub_2293251F8(v20, &qword_255A41F70);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_229356F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = type metadata accessor for PBUUID(0);
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (unint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8A20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v20 = a1;
  sub_229324E44(a1, (uint64_t)v8, &qword_255A41F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41F70);
    v16 = v1 + *(int *)(type metadata accessor for ValueData(0) + 28);
    sub_2293251F8(v16, &qword_255A41F98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, 1, 1, v19);
    return sub_2293251F8(v20, &qword_255A41F70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_229357158((uint64_t)v13, v5);
    v18 = v1 + *(int *)(type metadata accessor for ValueData(0) + 28);
    sub_2293251F8(v18, &qword_255A41F98);
    sub_22932EA14((uint64_t)v5, v18, type metadata accessor for PBUUID);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v19);
    sub_2293251F8(v20, &qword_255A41F70);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_229357158@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  unsigned __int8 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;

  a2[1] = 0;
  type metadata accessor for PBUUID(0);
  sub_2293B8B70();
  v4 = (unint64_t)sub_2293B8A08() >> 56;
  v5 = ((unint64_t)sub_2293B8A08() >> 40) & 0xFF00 | v4;
  v6 = ((unint64_t)sub_2293B8A08() >> 24) & 0xFF0000;
  v7 = v5 | v6 | ((unint64_t)sub_2293B8A08() >> 8) & 0xFF000000;
  v8 = v7 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)(sub_2293B8A08() >> 24) << 32);
  v9 = v8 & 0xFFFF00FFFFFFFFFFLL | ((unint64_t)(sub_2293B8A08() >> 16) << 40);
  v10 = v9 & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)((unsigned __int16)sub_2293B8A08() >> 8) << 48);
  *a2 = v10 | (sub_2293B8A08() << 56);
  sub_2293B8A08();
  HIBYTE(v10) = v11;
  sub_2293B8A08();
  v13 = (v12 >> 40) & 0xFF00 | HIBYTE(v10);
  sub_2293B8A08();
  v15 = (v14 >> 24) & 0xFF0000;
  sub_2293B8A08();
  v17 = v13 | v15 | (v16 >> 8) & 0xFF000000;
  sub_2293B8A08();
  v19 = v17 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v18 << 32);
  sub_2293B8A08();
  v21 = v19 & 0xFFFF00FFFFFFFFFFLL | ((unint64_t)v20 << 40);
  sub_2293B8A08();
  v23 = v21 & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)v22 << 48);
  sub_2293B8A08();
  v25 = v24;
  v26 = sub_2293B8A20();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
  a2[1] = v23 | (v25 << 56);
  return result;
}

uint64_t sub_229357288()
{
  return sub_2293B89FC();
}

uint64_t sub_229357300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for PBUUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v13 = v1 + *(int *)(type metadata accessor for ModelData(0) + 36);
  sub_229324E44(v13, (uint64_t)v12, &qword_255A41F98);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v15 = v14(v12, 1, v3);
  sub_2293251F8((uint64_t)v12, &qword_255A41F98);
  if (v15 == 1)
  {
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    sub_229324E44(v13, (uint64_t)v10, &qword_255A41F98);
    if (v14(v10, 1, v3) == 1)
    {
      *v6 = 0;
      v6[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v10, (uint64_t)v6, type metadata accessor for PBUUID);
    }
    sub_229357288();
    sub_22932E904((uint64_t)v6, type metadata accessor for PBUUID);
    v18 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
}

uint64_t sub_2293574E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for PBUUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v13 = v1 + *(int *)(type metadata accessor for OwnershipChangeBroadcastMessage(0) + 40);
  sub_229324E44(v13, (uint64_t)v12, &qword_255A41F98);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v15 = v14(v12, 1, v3);
  sub_2293251F8((uint64_t)v12, &qword_255A41F98);
  if (v15 == 1)
  {
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    sub_229324E44(v13, (uint64_t)v10, &qword_255A41F98);
    if (v14(v10, 1, v3) == 1)
    {
      *v6 = 0;
      v6[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v10, (uint64_t)v6, type metadata accessor for PBUUID);
    }
    sub_229357288();
    sub_22932E904((uint64_t)v6, type metadata accessor for PBUUID);
    v18 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
}

uint64_t sub_2293576C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _OWORD v20[2];
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;

  v18 = a2;
  v3 = sub_2293B8B94();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_DWORD *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v9 = 0;
  sub_2293B8B70();
  v10 = (char *)v9 + *(int *)(v7 + 24);
  v11 = type metadata accessor for PBUUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a1[3];
  v19 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v13 = v23;
  sub_2293B9428();
  if (v13)
  {
    sub_22932E904((uint64_t)v9, type metadata accessor for LamportTimestamp);
  }
  else
  {
    v17 = v4;
    v23 = v3;
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_229326DE4();
    sub_2293B935C();
    v14 = v20[0];
    v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_2293B8B88();
    sub_229358074(&qword_255A429F0, (uint64_t)&unk_2293BCE34);
    sub_2293B8C90();
    sub_229324F6C(v14, *((unint64_t *)&v14 + 1));
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v23);
    sub_2293251F8((uint64_t)v20, &qword_255A429F8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_22932EA14((uint64_t)v9, v18, type metadata accessor for LamportTimestamp);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_229357944(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[24];
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2293B9440();
  type metadata accessor for LamportTimestamp(0);
  sub_229358074(&qword_255A429F0, (uint64_t)&unk_2293BCE34);
  v2 = sub_2293B8C6C();
  if (!v1)
  {
    v4 = v2;
    v5 = v3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_229326EA8();
    sub_2293B9368();
    sub_229324F6C(v4, v5);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

BOOL sub_229357A40(unsigned int *a1, unsigned int *a2)
{
  return (sub_22935904C(a2, a1) & 1) == 0;
}

uint64_t sub_229357A6C(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  int *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  char *v62;
  void (*v63)(const void *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  v75 = type metadata accessor for PBUUID(0);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 - 8);
  v4 = MEMORY[0x24BDAC7A8](v75);
  v70 = (uint64_t *)((char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v68 = (uint64_t *)((char *)&v65 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)&v65 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v67 = (uint64_t)&v65 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v65 - v14;
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  v78 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v76 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v79 = (char *)&v65 - v20;
  v72 = type metadata accessor for LamportTimestamp(0);
  v21 = MEMORY[0x24BDAC7A8](v72);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v65 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (int *)((char *)&v65 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (int *)((char *)&v65 - v30);
  v32 = *a1;
  v33 = *a2;
  sub_229324D74((uint64_t)a1, (uint64_t)&v65 - v30, type metadata accessor for LamportTimestamp);
  sub_229324D74((uint64_t)a2, (uint64_t)v29, type metadata accessor for LamportTimestamp);
  if (v32 >= v33)
  {
    v35 = *v31;
    v36 = *v29;
    sub_229324D74((uint64_t)v31, (uint64_t)v26, type metadata accessor for LamportTimestamp);
    sub_229324D74((uint64_t)v29, (uint64_t)v23, type metadata accessor for LamportTimestamp);
    v37 = (uint64_t)v26;
    if (v35 == v36)
    {
      v38 = v23;
      v39 = v72;
      v40 = *(int *)(v72 + 24);
      v66 = v37;
      v41 = v37 + v40;
      sub_229324E44(v37 + v40, (uint64_t)v15, &qword_255A41F98);
      v42 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v71 + 6);
      v43 = v75;
      v44 = v42(v15, 1, v75);
      sub_2293251F8((uint64_t)v15, &qword_255A41F98);
      v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
      if (v44 == 1)
      {
        v45 = v78;
        if (qword_255A41AD0 != -1)
          swift_once();
        v46 = v77;
        v47 = __swift_project_value_buffer(v77, (uint64_t)qword_255A44CF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v79, v47, v46);
        v23 = v38;
      }
      else
      {
        v48 = v67;
        sub_229324E44(v41, v67, &qword_255A41F98);
        if (v42((char *)v48, 1, v43) == 1)
        {
          v49 = v68;
          *v68 = 0;
          v49[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v48, &qword_255A41F98);
        }
        else
        {
          v49 = v68;
          sub_22932EA14(v48, (uint64_t)v68, type metadata accessor for PBUUID);
        }
        v46 = v77;
        v23 = v38;
        sub_229357288();
        sub_22932E904((uint64_t)v49, type metadata accessor for PBUUID);
      }
      v50 = (uint64_t)&v23[*(int *)(v39 + 24)];
      v51 = v73;
      sub_229324E44(v50, v73, &qword_255A41F98);
      v52 = v71;
      v53 = v43;
      v54 = v71(v51, 1, v43);
      sub_2293251F8(v51, &qword_255A41F98);
      if (v54 == 1)
      {
        v55 = v76;
        if (qword_255A41AD0 != -1)
          swift_once();
        v56 = __swift_project_value_buffer(v46, (uint64_t)qword_255A44CF0);
        v57 = v78;
        (*(void (**)(const void *, uint64_t, uint64_t))(v78 + 16))(v55, v56, v46);
      }
      else
      {
        v58 = v50;
        v59 = v69;
        sub_229324E44(v58, v69, &qword_255A41F98);
        v60 = v52(v59, 1, v53);
        v55 = v76;
        v61 = v70;
        if (v60 == 1)
        {
          *v70 = 0;
          v61[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v59, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v59, (uint64_t)v70, type metadata accessor for PBUUID);
        }
        sub_229357288();
        sub_22932E904((uint64_t)v61, type metadata accessor for PBUUID);
        v57 = v78;
      }
      v62 = v79;
      v34 = memcmp(v79, v55, v74) >> 31;
      v63 = *(void (**)(const void *, uint64_t))(v57 + 8);
      v63(v55, v46);
      v63(v62, v46);
      v37 = v66;
    }
    else
    {
      v34 = 0;
    }
    sub_22932E904(v37, type metadata accessor for LamportTimestamp);
    sub_22932E904((uint64_t)v23, type metadata accessor for LamportTimestamp);
  }
  else
  {
    v34 = 1;
  }
  sub_22932E904((uint64_t)v31, type metadata accessor for LamportTimestamp);
  sub_22932E904((uint64_t)v29, type metadata accessor for LamportTimestamp);
  return v34 ^ 1;
}

uint64_t sub_22935804C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2293576C0(a1, a2);
}

uint64_t sub_229358060(_QWORD *a1)
{
  return sub_229357944(a1);
}

uint64_t sub_229358074(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LamportTimestamp(255);
    result = MEMORY[0x22E2C85DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2293580B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for ModelData.PropertyDataMap(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v22 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22936F950(0, v6, 0);
    v8 = *(unsigned __int8 *)(v2 + 80);
    v20 = v5;
    v9 = v5 + ((v8 + 32) & ~v8);
    v10 = *(_QWORD *)(v2 + 72);
    v7 = v22;
    v21 = v10;
    do
    {
      sub_229324D74(v9, (uint64_t)v4, type metadata accessor for ModelData.PropertyDataMap);
      v11 = *(_DWORD *)v4;
      v12 = *((_QWORD *)v4 + 1);
      v13 = *((_QWORD *)v4 + 2);
      sub_229324ECC(v12, v13);
      sub_22932E904((uint64_t)v4, type metadata accessor for ModelData.PropertyDataMap);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22936F950(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v10 = v21;
        v7 = v22;
      }
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_22936F950(v14 > 1, v15 + 1, 1);
        v10 = v21;
        v7 = v22;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 24 * v15;
      *(_DWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = v13;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v7 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41D00);
    v17 = sub_2293B9260();
  }
  else
  {
    v17 = MEMORY[0x24BEE4B00];
  }
  v22 = v17;
  v18 = swift_bridgeObjectRetain();
  sub_229358748(v18, 1, &v22);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_2293582BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PBUUID(0);
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
  v7 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v9 = (_QWORD *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42230);
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v32 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22936F96C(0, v14, 0);
    v16 = *(unsigned __int8 *)(v7 + 80);
    v25[1] = v13;
    v17 = v13 + ((v16 + 32) & ~v16);
    v26 = *(_QWORD *)(v7 + 72);
    v27 = v4;
    do
    {
      sub_229324D74(v17, (uint64_t)v9, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
      sub_229324E44((uint64_t)v9 + *(int *)(v30 + 24), (uint64_t)v3, &qword_255A41F98);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v3, 1, v4) == 1)
      {
        *v6 = 0;
        v6[1] = 0;
        sub_2293B8B70();
        sub_2293251F8((uint64_t)v3, &qword_255A41F98);
      }
      else
      {
        sub_22932EA14((uint64_t)v3, (uint64_t)v6, type metadata accessor for PBUUID);
      }
      v18 = &v12[*(int *)(v29 + 48)];
      sub_229357288();
      sub_22932E904((uint64_t)v6, type metadata accessor for PBUUID);
      v19 = v9[1];
      *(_QWORD *)v18 = *v9;
      *((_QWORD *)v18 + 1) = v19;
      swift_bridgeObjectRetain();
      sub_22932E904((uint64_t)v9, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
      v15 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22936F96C(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v32;
      }
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_22936F96C(v20 > 1, v21 + 1, 1);
        v15 = v32;
      }
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_22932E9D0((uint64_t)v12, v15+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v21, &qword_255A42230);
      v4 = v27;
      v17 += v26;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v15 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CF8);
    v22 = sub_2293B9260();
  }
  else
  {
    v22 = MEMORY[0x24BEE4B00];
  }
  v32 = v22;
  v23 = swift_bridgeObjectRetain();
  sub_229358AE4(v23, 1, &v32);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_229358644()
{
  return 1;
}

uint64_t sub_22935864C()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

uint64_t sub_22935868C()
{
  return sub_2293B93E0();
}

uint64_t sub_2293586B0()
{
  sub_2293B93D4();
  sub_2293B93E0();
  return sub_2293B93F8();
}

uint64_t sub_2293586FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_255A42A08);
  else
    return sub_2293B9314();
}

void sub_229358748(uint64_t a1, char a2, _QWORD *a3)
{
  unint64_t *v4;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  LOBYTE(v4) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_3;
  v7 = *(_DWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  sub_229324ECC(v9, v8);
  if (v8 >> 60 == 15)
    goto LABEL_3;
  v10 = (_QWORD *)*a3;
  v11 = sub_22936F3B4(v7);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v12;
  if (v10[3] < v16)
  {
    sub_22931F7CC(v16, v4 & 1);
    v11 = sub_22936F3B4(v7);
    if ((v17 & 1) == (v18 & 1))
      goto LABEL_9;
LABEL_7:
    v11 = sub_2293B9380();
    __break(1u);
  }
  if ((v4 & 1) != 0)
  {
LABEL_9:
    if ((v17 & 1) != 0)
      goto LABEL_10;
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    *(_DWORD *)(v22[6] + 4 * v11) = v7;
    v23 = (uint64_t *)(v22[7] + 16 * v11);
    *v23 = v9;
    v23[1] = v8;
    v24 = v22[2];
    v15 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (!v15)
    {
      v22[2] = v25;
      if (v6 == 1)
      {
LABEL_3:
        swift_bridgeObjectRelease_n();
        return;
      }
      v4 = (unint64_t *)(a1 + 72);
      v26 = 1;
      while (v26 < *(_QWORD *)(a1 + 16))
      {
        v7 = *((_DWORD *)v4 - 4);
        v9 = *(v4 - 1);
        v8 = *v4;
        sub_229324ECC(v9, *v4);
        if (v8 >> 60 == 15)
          goto LABEL_3;
        v27 = (_QWORD *)*a3;
        v28 = sub_22936F3B4(v7);
        v30 = v27[2];
        v31 = (v29 & 1) == 0;
        v15 = __OFADD__(v30, v31);
        v32 = v30 + v31;
        if (v15)
          goto LABEL_25;
        v17 = v29;
        if (v27[3] < v32)
        {
          sub_22931F7CC(v32, 1);
          v28 = sub_22936F3B4(v7);
          if ((v17 & 1) != (v33 & 1))
            goto LABEL_7;
        }
        if ((v17 & 1) != 0)
          goto LABEL_10;
        v34 = (_QWORD *)*a3;
        *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
        *(_DWORD *)(v34[6] + 4 * v28) = v7;
        v35 = (uint64_t *)(v34[7] + 16 * v28);
        *v35 = v9;
        v35[1] = v8;
        v36 = v34[2];
        v15 = __OFADD__(v36, 1);
        v37 = v36 + 1;
        if (v15)
          goto LABEL_26;
        ++v26;
        v34[2] = v37;
        v4 += 3;
        if (v6 == v26)
          goto LABEL_3;
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v21 = v11;
  sub_229323654();
  v11 = v21;
  if ((v17 & 1) == 0)
    goto LABEL_13;
LABEL_10:
  v19 = (void *)swift_allocError();
  swift_willThrow();
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_229324F6C(v9, v8);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_28:
  sub_2293B9188();
  sub_2293B8F24();
  sub_2293B9200();
  sub_2293B8F24();
  sub_2293B9230();
  __break(1u);
}

void sub_229358AE4(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  unint64_t v70;
  id v71;

  v7 = sub_2293B8A20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42230);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v63) = a2;
  v60[1] = v3;
  v17 = &v15[*(int *)(v12 + 48)];
  v60[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v60[0];
  v66 = *(_QWORD *)(v13 + 72);
  v62 = a1;
  swift_bridgeObjectRetain();
  sub_229324E44(v18, (uint64_t)v15, &qword_255A42230);
  v61 = v8;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v65 = v15;
  v67 = v7;
  v68 = v19;
  v19((unint64_t)v10, v15, v7);
  v20 = *(_QWORD *)v17;
  v21 = *((_QWORD *)v17 + 1);
  v64 = v17;
  v22 = (_QWORD *)*a3;
  v24 = sub_22936F3E8((uint64_t)v10);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_24;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v63 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_229323800();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v35 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v36 = v35[6];
    v63 = *(_QWORD *)(v61 + 72);
    v37 = v67;
    v68(v36 + v63 * v24, v10, v67);
    v38 = (_QWORD *)(v35[7] + 16 * v24);
    *v38 = v20;
    v38[1] = v21;
    v39 = v35[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v35[2] = v41;
    v42 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v43 = v62 + v66 + v60[0];
    while (1)
    {
      v44 = (uint64_t)v65;
      sub_229324E44(v43, (uint64_t)v65, &qword_255A42230);
      v68((unint64_t)v10, (char *)v44, v37);
      v45 = *(_QWORD *)v64;
      v46 = *((_QWORD *)v64 + 1);
      v47 = (_QWORD *)*a3;
      v49 = sub_22936F3E8((uint64_t)v10);
      v50 = v47[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        break;
      v53 = v48;
      if (v47[3] < v52)
      {
        sub_22931FA94(v52, 1);
        v54 = sub_22936F3E8((uint64_t)v10);
        if ((v53 & 1) != (v55 & 1))
          goto LABEL_26;
        v49 = v54;
      }
      if ((v53 & 1) != 0)
        goto LABEL_10;
      v56 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v49 >> 6) + 64) |= 1 << v49;
      v37 = v67;
      v68(v56[6] + v63 * v49, v10, v67);
      v57 = (_QWORD *)(v56[7] + 16 * v49);
      *v57 = v45;
      v57[1] = v46;
      v58 = v56[2];
      v40 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v40)
        goto LABEL_25;
      v56[2] = v59;
      v43 += v66;
      if (!--v42)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_22931FA94(v27, v63 & 1);
  v29 = sub_22936F3E8((uint64_t)v10);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = (void *)swift_allocError();
    swift_willThrow();
    v71 = v31;
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA0);
    v33 = swift_dynamicCast();
    v34 = v67;
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v34);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_2293B9380();
  __break(1u);
LABEL_27:
  v69 = 0;
  v70 = 0xE000000000000000;
  sub_2293B9188();
  sub_2293B8F24();
  sub_2293B9200();
  sub_2293B8F24();
  sub_2293B9230();
  __break(1u);
}

uint64_t sub_229358F94(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v7 = result;
    v8 = *(_QWORD *)(a5 + 48);
    v9 = sub_2293B8A20();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v9);
    v10 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 16 * a2);
    swift_bridgeObjectRetain();
    return v10;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22935904C(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  int *v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _QWORD *v59;
  void (*v60)(const void *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  size_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  v76 = type metadata accessor for PBUUID(0);
  v68 = *(_QWORD *)(v76 - 8);
  v4 = MEMORY[0x24BDAC7A8](v76);
  v67 = (char **)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char **)((char *)&v62 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v70 = (uint64_t)&v62 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v64 = (uint64_t)&v62 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v62 - v14;
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v74 = v16;
  v75 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v73 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v62 - v20;
  v69 = type metadata accessor for LamportTimestamp(0);
  v21 = MEMORY[0x24BDAC7A8](v69);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v62 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (int *)((char *)&v62 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (int *)((char *)&v62 - v30);
  v32 = *a1;
  v33 = *a2;
  sub_229324D74((uint64_t)a1, (uint64_t)&v62 - v30, type metadata accessor for LamportTimestamp);
  sub_229324D74((uint64_t)a2, (uint64_t)v29, type metadata accessor for LamportTimestamp);
  if (v32 >= v33)
  {
    v35 = *v31;
    v36 = *v29;
    sub_229324D74((uint64_t)v31, (uint64_t)v26, type metadata accessor for LamportTimestamp);
    sub_229324D74((uint64_t)v29, (uint64_t)v23, type metadata accessor for LamportTimestamp);
    if (v35 == v36)
    {
      v62 = v26;
      v63 = v23;
      v37 = v69;
      v38 = (uint64_t)&v26[*(int *)(v69 + 24)];
      sub_229324E44(v38, (uint64_t)v15, &qword_255A41F98);
      v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
      v40 = v76;
      v41 = v39(v15, 1, v76);
      sub_2293251F8((uint64_t)v15, &qword_255A41F98);
      if (v41 == 1)
      {
        v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39;
        v43 = v74;
        v44 = v72;
        if (qword_255A41AD0 != -1)
          swift_once();
        v45 = __swift_project_value_buffer(v43, (uint64_t)qword_255A44CF0);
        (*(void (**)(const void *, uint64_t, uint64_t))(v75 + 16))(v44, v45, v43);
      }
      else
      {
        v46 = v64;
        sub_229324E44(v38, v64, &qword_255A41F98);
        v47 = v39((char *)v46, 1, v40);
        v43 = v74;
        v44 = v72;
        v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39;
        v48 = v65;
        if (v47 == 1)
        {
          *v65 = 0;
          v48[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v46, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v46, (uint64_t)v65, type metadata accessor for PBUUID);
        }
        sub_229357288();
        sub_22932E904((uint64_t)v48, type metadata accessor for PBUUID);
      }
      v49 = (uint64_t)&v63[*(int *)(v37 + 24)];
      v50 = v70;
      sub_229324E44(v49, v70, &qword_255A41F98);
      v51 = v76;
      v52 = v42(v50, 1, v76);
      sub_2293251F8(v50, &qword_255A41F98);
      if (v52 == 1)
      {
        v53 = v73;
        if (qword_255A41AD0 != -1)
          swift_once();
        v54 = __swift_project_value_buffer(v43, (uint64_t)qword_255A44CF0);
        v55 = v75;
        (*(void (**)(const void *, uint64_t, uint64_t))(v75 + 16))(v53, v54, v43);
      }
      else
      {
        v56 = v49;
        v57 = v66;
        sub_229324E44(v56, v66, &qword_255A41F98);
        v58 = v42(v57, 1, v51);
        v53 = v73;
        v59 = v67;
        if (v58 == 1)
        {
          *v67 = 0;
          v59[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v57, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v57, (uint64_t)v67, type metadata accessor for PBUUID);
        }
        sub_229357288();
        sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
        v55 = v75;
      }
      v34 = memcmp(v44, v53, v71) >> 31;
      v60 = *(void (**)(const void *, uint64_t))(v55 + 8);
      v60(v53, v43);
      v60(v44, v43);
      v26 = v62;
      v23 = v63;
    }
    else
    {
      v34 = 0;
    }
    sub_22932E904((uint64_t)v23, type metadata accessor for LamportTimestamp);
    sub_22932E904((uint64_t)v26, type metadata accessor for LamportTimestamp);
  }
  else
  {
    v34 = 1;
  }
  sub_22932E904((uint64_t)v29, type metadata accessor for LamportTimestamp);
  sub_22932E904((uint64_t)v31, type metadata accessor for LamportTimestamp);
  return v34;
}

uint64_t sub_229359624@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2293568AC(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), a2, a3);
}

uint64_t sub_229359644@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2293569FC(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), a2, a3);
}

unint64_t sub_229359664()
{
  unint64_t result;

  result = qword_255A42A10;
  if (!qword_255A42A10)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BA930, &type metadata for PropertyDecodingError);
    atomic_store(result, (unint64_t *)&qword_255A42A10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PropertyDecodingError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PropertyDecodingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22935973C + 4 * byte_2293BA7F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22935975C + 4 * byte_2293BA7F5[v4]))();
}

_BYTE *sub_22935973C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22935975C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_229359764(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22935976C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_229359774(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22935977C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_229359788()
{
  return 0;
}

ValueMetadata *type metadata accessor for PropertyDecodingError()
{
  return &type metadata for PropertyDecodingError;
}

unint64_t sub_2293597A4()
{
  unint64_t result;

  result = qword_255A42A18;
  if (!qword_255A42A18)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BA908, &type metadata for PropertyDecodingError);
    atomic_store(result, (unint64_t *)&qword_255A42A18);
  }
  return result;
}

uint64_t sub_2293597E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncedModelManagerHub()
{
  return objc_opt_self();
}

void sub_22935983C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

_QWORD *sub_229359884()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = ceilf((float)BYTE6(v0) / (float)v1);
  if ((~LODWORD(v2) & 0x7F800000) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v2 <= -9.2234e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v2 >= 9.2234e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = (uint64_t)v2;
  if ((uint64_t)v2 < 0)
  {
LABEL_27:
    __break(1u);
    JUMPOUT(0x229359A3CLL);
  }
  if (v3)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v6 = v4 * v1;
      if ((unsigned __int128)(v4 * (__int128)v1) >> 64 != (v4 * v1) >> 63)
        break;
      v7 = v1;
      if (v3 - 1 == v4)
      {
        v7 = BYTE6(v0) - v6;
        if (__OFSUB__(BYTE6(v0), v6))
          goto LABEL_23;
      }
      if (__OFADD__(v6, v7))
        goto LABEL_21;
      if (v6 + v7 < v6)
        goto LABEL_22;
      v8 = sub_2293B89B4();
      v10 = v9;
      sub_229324ECC(v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_22936ED78(0, v5[2] + 1, 1, v5);
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
        v5 = sub_22936ED78((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      ++v4;
      v5[2] = v12 + 1;
      v13 = &v5[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      sub_229324F6C(v8, v10);
      if (v3 == v4)
        return v5;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_229359A54(void (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  void (*v19)(_BYTE *);
  _BYTE v20[24];

  v2 = v1;
  v4 = type metadata accessor for SyncedModelOwnerState();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_22935A728(v10, (uint64_t)v9);
  v11 = sub_2293B8B40();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v7, 2, 2, v11);
  v13 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v7);
  sub_22932454C((uint64_t)v7);
  sub_22932454C((uint64_t)v9);
  if ((v13 & 1) != 0)
  {
    v20[0] = 0;
    return ((uint64_t (*)(_BYTE *))a1)(v20);
  }
  v14 = *(uint64_t (**)(uint64_t))(v2
                                          + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
  if (!v14)
  {
    v20[0] = 1;
    return ((uint64_t (*)(_BYTE *))a1)(v20);
  }
  v19 = a1;
  v15 = swift_retain();
  if ((v14(v15) & 1) != 0)
  {
    v12(v9, 2, 2, v11);
    sub_22935A728(v10, (uint64_t)v7);
    swift_beginAccess();
    sub_229324508((uint64_t)v9, v10);
    swift_endAccess();
    sub_22935A04C((uint64_t)v7);
    sub_22932454C((uint64_t)v9);
    sub_22932454C((uint64_t)v7);
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  v20[0] = v16;
  v19(v20);
  return sub_2293245B4((uint64_t)v14);
}

uint64_t sub_229359C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v10;
  uint64_t result;
  _BYTE v12[24];

  v1 = type metadata accessor for SyncedModelOwnerState();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v12[-v5];
  v7 = v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_22935A728(v7, (uint64_t)v6);
  v8 = sub_2293B8B40();
  v9 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v4, 2, 2, v8);
  v10 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v4);
  sub_22932454C((uint64_t)v4);
  result = sub_22932454C((uint64_t)v6);
  if ((v10 & 1) != 0)
  {
    v9(v6, 1, 2, v8);
    sub_22935A728(v7, (uint64_t)v4);
    swift_beginAccess();
    sub_229324508((uint64_t)v6, v7);
    swift_endAccess();
    sub_22935A04C((uint64_t)v4);
    sub_22932454C((uint64_t)v6);
    return sub_22932454C((uint64_t)v4);
  }
  return result;
}

uint64_t sub_229359DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  char v10;
  char v11;
  uint64_t v13;

  v1 = type metadata accessor for SyncedModelOwnerState();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v13 - v5;
  v7 = v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_22935A728(v7, (uint64_t)v6);
  v8 = sub_2293B8B40();
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v4, 2, 2, v8);
  v10 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v4);
  sub_22932454C((uint64_t)v4);
  sub_22932454C((uint64_t)v6);
  if ((v10 & 1) != 0)
  {
    v11 = 1;
  }
  else
  {
    sub_22935A728(v7, (uint64_t)v6);
    v9(v4, 1, 2, v8);
    v11 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v4);
    sub_22932454C((uint64_t)v4);
    sub_22932454C((uint64_t)v6);
  }
  return v11 & 1;
}

uint64_t sub_229359EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _BYTE v15[24];

  v3 = type metadata accessor for SyncedModelOwnerState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v15[-v7];
  v9 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_22935A728(v9, (uint64_t)v8);
  sub_22935A728((uint64_t)v8, (uint64_t)v6);
  v10 = sub_2293B8B40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10);
  if (v12)
  {
    if (v12 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, 1, 1, v10);
    }
    else
    {
      v13 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant;
      swift_beginAccess();
      sub_22935A76C(v13, a1);
    }
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v6, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
  return sub_22932454C((uint64_t)v8);
}

uint64_t sub_22935A04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for SyncedModelOwnerState();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v28 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v28 - v17;
  v19 = *(void (**)(char *, char *))(v1
                                              + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler);
  if (v19)
  {
    v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler + 8);
    sub_22935A728(a1, (uint64_t)v11);
    v20 = sub_2293B8B40();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v22(v11, 2, v20);
    if (v23)
    {
      if (v23 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v18, 1, 1, v20);
      }
      else
      {
        v24 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant;
        swift_beginAccess();
        sub_22935A76C(v24, (uint64_t)v18);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v11, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v25 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
    swift_beginAccess();
    sub_22935A728(v25, (uint64_t)v9);
    sub_22935A728((uint64_t)v9, (uint64_t)v6);
    v26 = v22(v6, 2, v20);
    if (v26)
    {
      if (v26 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v15, 1, 1, v20);
      }
      else
      {
        v27 = v1 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant;
        swift_beginAccess();
        sub_22935A76C(v27, (uint64_t)v15);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v15, v6, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
    }
    swift_retain();
    sub_22932454C((uint64_t)v9);
    v19(v18, v15);
    sub_2293245B4((uint64_t)v19);
    sub_22935A6E8((uint64_t)v15);
    return sub_22935A6E8((uint64_t)v18);
  }
  return result;
}

uint64_t sub_22935A314(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *);
  _BYTE v23[24];

  v4 = v3;
  v21 = a3;
  v22 = a2;
  v6 = type metadata accessor for SyncedModelOwnerState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = v4 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  swift_beginAccess();
  sub_22935A728(v12, (uint64_t)v11);
  v13 = sub_2293B8B40();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v9, 2, 2, v13);
  v16 = _s12SyncedModels0A15ModelOwnerStateO2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v9);
  sub_22932454C((uint64_t)v9);
  sub_22932454C((uint64_t)v11);
  if ((v16 & 1) != 0)
  {
    v17 = *(uint64_t (**)(uint64_t))(v4
                                            + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
    if (v17)
    {
      swift_retain();
      v20 = a1;
      if ((v17(a1) & 1) == 0)
      {
        v23[0] = 1;
        v22(v23);
        return sub_2293245B4((uint64_t)v17);
      }
      sub_2293245B4((uint64_t)v17);
      a1 = v20;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a1, v13);
  v15(v11, 0, 2, v13);
  sub_22935A728(v12, (uint64_t)v9);
  swift_beginAccess();
  sub_229324508((uint64_t)v11, v12);
  swift_endAccess();
  sub_22935A04C((uint64_t)v9);
  sub_22932454C((uint64_t)v11);
  sub_22932454C((uint64_t)v9);
  v23[0] = 0;
  return ((uint64_t (*)(_BYTE *))v22)(v23);
}

uint64_t sub_22935A51C()
{
  uint64_t v0;

  sub_22932454C(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState);
  sub_22935A6E8(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant);
  return sub_2293245B4(*(_QWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership));
}

uint64_t sub_22935A55C()
{
  uint64_t v0;

  v0 = sub_22935B964();
  sub_22932454C(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState);
  sub_22935A6E8(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant);
  sub_2293245B4(*(_QWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership));
  return swift_deallocClassInstance();
}

uint64_t sub_22935A5C0()
{
  return type metadata accessor for TestSyncedModelController();
}

uint64_t type metadata accessor for TestSyncedModelController()
{
  uint64_t result;

  result = qword_255A42B80;
  if (!qword_255A42B80)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22935A604()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SyncedModelOwnerState();
  if (v0 <= 0x3F)
  {
    sub_22935A694();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_22935A694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255A42B90)
  {
    sub_2293B8B40();
    v0 = sub_2293B9104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255A42B90);
  }
}

uint64_t sub_22935A6E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22935A728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncedModelOwnerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22935A76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22935A7B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v6;

  type metadata accessor for TestSyncedModelController();
  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_ownerState;
  v4 = sub_2293B8B40();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 2, v4);
  v5(v2 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_localParticipant, 1, 1, v4);
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC12SyncedModels25TestSyncedModelController_shouldReceiveOwnership);
  *v6 = 0;
  v6[1] = 0;
  return sub_229370634(a1, v2);
}

uint64_t sub_22935A878()
{
  uint64_t result;

  sub_2293B8A68();
  swift_allocObject();
  result = sub_2293B8A5C();
  qword_255A42FA8 = result;
  return result;
}

uint64_t sub_22935A8B4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncedModelControllerFactory()
{
  return objc_opt_self();
}

uint64_t sub_22935A8E4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v16 = a3;
  v15 = a2;
  v18 = sub_2293B941C();
  v17 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41AB8 != -1)
    swift_once();
  swift_retain();
  sub_2293B8A44();
  swift_release();
  *((_QWORD *)&v27 + 1) = swift_getObjectType();
  v25 = a1;
  swift_unknownObjectRetain();
  sub_2293B9404();
  sub_2293B9410();
  sub_2293B91F4();
  swift_release();
  swift_retain();
  sub_2293B9278();
  if (v28)
  {
    while (1)
    {
      v6 = v25;
      v7 = v26;
      v23[0] = v25;
      v23[1] = v26;
      sub_22935AB6C(&v27, v24);
      v20 = v6;
      v21 = v7;
      sub_2293251BC((uint64_t)v24, (uint64_t)&v22);
      swift_bridgeObjectRetain();
      sub_22935AB7C((uint64_t)v23);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A43050);
      if ((swift_dynamicCast() & 1) != 0)
        break;
      sub_2293B9278();
      if (!v28)
        goto LABEL_6;
    }
    v11 = swift_release_n();
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 144))(v11);
    v12 = swift_release();
    v9 = v18;
    v10 = v17;
    if (!v8)
      v8 = v15(v12);
  }
  else
  {
LABEL_6:
    swift_release_n();
    v8 = sub_22935B098(a1, v15);
    v9 = v18;
    v10 = v17;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  swift_retain();
  sub_2293B8A50();
  swift_release();
  return v8;
}

_OWORD *sub_22935AB6C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_22935AB7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22935ABBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v19 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4)
    goto LABEL_6;
LABEL_7:
  v10 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v10 < v25)
    {
      v11 = *(_QWORD *)(v19 + 8 * v10);
      ++v6;
      if (v11)
        goto LABEL_22;
      v6 = v10 + 1;
      if (v10 + 1 >= v25)
        goto LABEL_30;
      v11 = *(_QWORD *)(v19 + 8 * v6);
      if (v11)
        goto LABEL_22;
      v6 = v10 + 2;
      if (v10 + 2 >= v25)
        goto LABEL_30;
      v11 = *(_QWORD *)(v19 + 8 * v6);
      if (v11)
        goto LABEL_22;
      v6 = v10 + 3;
      if (v10 + 3 >= v25)
        goto LABEL_30;
      v11 = *(_QWORD *)(v19 + 8 * v6);
      if (v11)
      {
LABEL_22:
        v4 = (v11 - 1) & v11;
        for (i = __clz(__rbit64(v11)) + (v6 << 6); ; i = v8 | (v6 << 6))
        {
          v13 = 8 * i;
          v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v13);
          sub_229324FEC(*(_QWORD *)(a1 + 56) + v13, (uint64_t)&v24);
          v23 = v14;
          sub_22935B244((uint64_t)&v23, (uint64_t)&v21);
          sub_229324FEC((uint64_t)&v22, (uint64_t)&v20);
          Strong = swift_weakLoadStrong();
          sub_22935B28C((uint64_t)&v20);
          swift_release();
          if (Strong)
          {
            result = sub_2293251F8((uint64_t)&v21, &qword_255A43108);
            if (!v4)
              goto LABEL_7;
          }
          else
          {
            v16 = v21;
            sub_229324FEC((uint64_t)&v22, (uint64_t)&v20);
            sub_22935B28C((uint64_t)&v20);
            sub_2293251F8((uint64_t)&v21, &qword_255A43108);
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_22936EE84(0, v7[2] + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v18 = v7[2];
            v17 = v7[3];
            if (v18 >= v17 >> 1)
            {
              result = (uint64_t)sub_22936EE84((_QWORD *)(v17 > 1), v18 + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v7[2] = v18 + 1;
            v7[v18 + 4] = v16;
            if (!v4)
              goto LABEL_7;
          }
LABEL_6:
          v8 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v12 = v10 + 4;
      if (v12 < v25)
      {
        v11 = *(_QWORD *)(v19 + 8 * v12);
        if (v11)
        {
          v6 = v12;
          goto LABEL_22;
        }
        while (1)
        {
          v6 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_32;
          if (v6 >= v25)
            break;
          v11 = *(_QWORD *)(v19 + 8 * v6);
          ++v12;
          if (v11)
            goto LABEL_22;
        }
      }
    }
LABEL_30:
    swift_release();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_22935AE84()
{
  uint64_t result;

  sub_2293B8A68();
  swift_allocObject();
  result = sub_2293B8A5C();
  qword_255A43058 = result;
  return result;
}

void *sub_22935AEC0()
{
  void *result;

  result = (void *)sub_22932E700(MEMORY[0x24BEE4AF8]);
  off_255A43060 = result;
  return result;
}

uint64_t type metadata accessor for SyncedModelControllerTable()
{
  return objc_opt_self();
}

uint64_t sub_22935AF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;

  if (qword_255A41AC8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_22935ABBC(v0);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v4 = *(_QWORD *)(v1 + 8 * i + 32);
      swift_beginAccess();
      v5 = sub_22936F4B8(v4);
      v7 = v6;
      if ((v6 & 1) != 0)
      {
        v8 = v5;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v10 = off_255A43060;
        v12 = off_255A43060;
        off_255A43060 = (_UNKNOWN *)0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_229322F88();
          v10 = v12;
        }
        sub_229325028(v10[7] + 8 * v8, (uint64_t)&v13);
        sub_229320DE0(v8, (uint64_t)v10);
        off_255A43060 = v10;
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = 0;
      }
      v14 = (v7 & 1) == 0;
      swift_endAccess();
      sub_2293251F8((uint64_t)&v13, &qword_255A43100);
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22935B098(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v10;
  char v11;

  if (qword_255A41AC0 != -1)
    swift_once();
  swift_retain();
  sub_2293B8A44();
  swift_release();
  sub_22935AF04();
  if (qword_255A41AC8 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_255A43060;
  if (!*((_QWORD *)off_255A43060 + 2) || (v5 = sub_22936F4B8(a1), (v6 & 1) == 0))
  {
    v10 = 0;
    v11 = 1;
    sub_2293251F8((uint64_t)&v10, &qword_255A43100);
    v8 = swift_endAccess();
LABEL_10:
    Strong = a2(v8);
    swift_weakInit();
    v11 = 0;
    swift_beginAccess();
    sub_22935B34C((uint64_t)&v10, a1);
    swift_endAccess();
    goto LABEL_11;
  }
  sub_229324FEC(v4[7] + 8 * v5, (uint64_t)&v10);
  v11 = 0;
  Strong = swift_weakLoadStrong();
  sub_2293251F8((uint64_t)&v10, &qword_255A43100);
  v8 = swift_endAccess();
  if (!Strong)
    goto LABEL_10;
LABEL_11:
  swift_retain();
  sub_2293B8A50();
  swift_release();
  return Strong;
}

uint64_t sub_22935B244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22935B28C(uint64_t a1)
{
  swift_weakDestroy();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncedModelControllerTable.Storage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for SyncedModelControllerTable.Storage(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SyncedModelControllerTable.Storage(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelControllerTable.Storage()
{
  return &type metadata for SyncedModelControllerTable.Storage;
}

uint64_t sub_22935B34C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = v2;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_2293251F8(a1, &qword_255A43100);
    v5 = sub_22936F4B8(a2);
    v7 = v6;
    if ((v6 & 1) != 0)
    {
      v8 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v10 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_229322F88();
        v10 = v13;
      }
      sub_229325028(*(_QWORD *)(v10 + 56) + 8 * v8, (uint64_t)&v15);
      sub_229320DE0(v8, v10);
      *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    v16 = (v7 & 1) == 0;
    return sub_2293251F8((uint64_t)&v15, &qword_255A43100);
  }
  else
  {
    sub_229325028(a1, (uint64_t)&v15);
    v11 = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_229321CB4((uint64_t)&v15, a2, v11);
    *v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22935B468(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8B40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_2293251F8(a1, &qword_255A41BC0);
    sub_22931DEB4(a2, (uint64_t)v8);
    v13 = sub_2293B8A20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_2293251F8((uint64_t)v8, &qword_255A41BC0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_229321DC0((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_22935B5F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43670);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2293251F8(a1, &qword_255A43670);
    sub_22931E214(a2, (uint64_t)v8);
    v13 = sub_2293B8A20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_2293251F8((uint64_t)v8, &qword_255A43670);
  }
  else
  {
    sub_22932E9D0(a1, (uint64_t)v11, &qword_255A41CE0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_2293220A4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_22935B778(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43660);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CachedOwnershipRequest(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2293251F8(a1, &qword_255A43660);
    sub_22931E0D4(a2, (uint64_t)v8);
    v13 = sub_2293B8A20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_2293251F8((uint64_t)v8, &qword_255A43660);
  }
  else
  {
    sub_22932EA14(a1, (uint64_t)v11, type metadata accessor for CachedOwnershipRequest);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_229322218((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_2293B8A20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t static UUID.< infix(_:_:)(const void *a1, const void *a2)
{
  uint64_t v4;

  v4 = sub_2293B8A20();
  return memcmp(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)) >> 31;
}

uint64_t sub_22935B938@<X0>(uint64_t (*a1)(void)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result & 1;
  return result;
}

uint64_t sub_22935B964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2293B8E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2293B8E40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v21 = *(id *)(Strong + 40);
    swift_release();
    v11 = swift_allocObject();
    v22 = v6;
    v12 = v11;
    swift_weakInit();
    aBlock[4] = sub_229370F04;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_229325F20;
    aBlock[3] = &block_descriptor_20;
    v13 = _Block_copy(aBlock);
    swift_retain();
    sub_2293B8E34();
    v24 = MEMORY[0x24BEE4AF8];
    sub_229326FD0(&qword_255A41F38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v23 = v0 + 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F40);
    v20 = v7;
    sub_229343CBC((unint64_t *)&qword_255A41F48, &qword_255A41F40, MEMORY[0x24BEE12C8]);
    sub_2293B9128();
    v14 = v21;
    MEMORY[0x22E2C7EC8](0, v9, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v22);
    swift_release();
    swift_release();
  }
  swift_weakDestroy();
  v15 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  v16 = sub_2293B8A20();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  swift_bridgeObjectRelease();
  sub_2293251F8(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__transaction, &qword_255A43668);
  swift_release();
  v17(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v16);
  swift_bridgeObjectRelease();
  sub_2293251F8(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant, &qword_255A41BC0);
  sub_2293251F8(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID, &qword_255A41F70);
  sub_2293245B4(*(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler));
  swift_bridgeObjectRelease();
  sub_2293251F8(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest, &qword_255A43650);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2293245B4(*(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler));
  swift_release();
  return v1;
}

uint64_t (*sub_22935BCE0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22935BD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t (*v33)();
  char *v34;
  char *v35;
  size_t *v36;
  int isUniquelyReferenced_nonNull_native;
  size_t v38;
  uint64_t (*v39)();
  char *v40;
  char *v41;
  size_t *v42;
  int v43;
  size_t v44;
  uint64_t (*v45)();
  char *v46;
  char *v47;
  uint64_t v48;
  size_t *v49;
  int v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char EnumCaseMultiPayload;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  _BYTE v101[32];

  v1 = v0;
  v2 = sub_2293B8A20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v85 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v84 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v7);
  v86 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2293B8D5C();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2293B8B58();
  v89 = *(_QWORD *)(v12 - 8);
  v90 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v88 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v87);
  v95 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43668);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SyncTransactionMessage(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v81 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v81 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v97 = (uint64_t)&v81 - v29;
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v96 = result;
  v81 = v3;
  v82 = v2;
  v83 = v11;
  sub_2293B8A44();
  v31 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__transaction;
  swift_beginAccess();
  sub_229324E44(v31, (uint64_t)v17, &qword_255A43668);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v32(v17, 1, v18) == 1)
  {
    sub_2293251F8((uint64_t)v17, &qword_255A43668);
    sub_2293B8A50();
    return swift_release();
  }
  sub_22932EA14((uint64_t)v17, v97, type metadata accessor for SyncTransactionMessage);
  v33 = sub_22935BCE0();
  v35 = v34;
  if (!v32(v34, 1, v18))
  {
    v36 = (size_t *)(v35 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v36;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_229370A7C(0, *(_QWORD *)(v38 + 16), &qword_255A436B0, type metadata accessor for PropertyChangedMessage);
    }
    else
    {
      *v36 = sub_22936F840(0, *(_QWORD *)(v38 + 24) >> 1, &qword_255A436B0, type metadata accessor for PropertyChangedMessage);
      swift_bridgeObjectRelease();
    }
  }
  ((void (*)(_BYTE *, _QWORD))v33)(v101, 0);
  v39 = sub_22935BCE0();
  v41 = v40;
  if (!v32(v40, 1, v18))
  {
    v42 = (size_t *)(v41 + 32);
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v42;
    if (v43)
    {
      sub_229370A7C(0, *(_QWORD *)(v44 + 16), &qword_255A436B8, type metadata accessor for DictionaryChangedMessage);
    }
    else
    {
      *v42 = sub_22936F840(0, *(_QWORD *)(v44 + 24) >> 1, &qword_255A436B8, type metadata accessor for DictionaryChangedMessage);
      swift_bridgeObjectRelease();
    }
  }
  ((void (*)(_BYTE *, _QWORD))v39)(v101, 0);
  v45 = sub_22935BCE0();
  v47 = v46;
  if (v32(v46, 1, v18))
  {
    ((void (*)(_BYTE *, _QWORD))v45)(v101, 0);
    v48 = v97;
  }
  else
  {
    v49 = (size_t *)(v47 + 24);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v51 = *v49;
    v48 = v97;
    if (v50)
    {
      sub_229370A7C(0, *(_QWORD *)(v51 + 16), &qword_255A436C0, type metadata accessor for SetChangedMessage);
    }
    else
    {
      *v49 = sub_22936F840(0, *(_QWORD *)(v51 + 24) >> 1, &qword_255A436C0, type metadata accessor for SetChangedMessage);
      swift_bridgeObjectRelease();
    }
    ((void (*)(_BYTE *, _QWORD))v45)(v101, 0);
  }
  sub_2293B8A50();
  v52 = *(_QWORD *)(*(_QWORD *)(v48 + 16) + 16);
  sub_229324D74(v48, (uint64_t)v28, type metadata accessor for SyncTransactionMessage);
  if (v52)
  {
    sub_22932E904((uint64_t)v28, type metadata accessor for SyncTransactionMessage);
    sub_229324D74(v48, (uint64_t)v25, type metadata accessor for SyncTransactionMessage);
  }
  else
  {
    v53 = *(_QWORD *)(*((_QWORD *)v28 + 4) + 16);
    sub_22932E904((uint64_t)v28, type metadata accessor for SyncTransactionMessage);
    sub_229324D74(v48, (uint64_t)v25, type metadata accessor for SyncTransactionMessage);
    if (!v53)
    {
      v80 = *(_QWORD *)(*((_QWORD *)v25 + 3) + 16);
      sub_22932E904((uint64_t)v25, type metadata accessor for SyncTransactionMessage);
      if (!v80)
      {
        sub_22932E904(v48, type metadata accessor for SyncTransactionMessage);
        return swift_release();
      }
      goto LABEL_23;
    }
  }
  sub_22932E904((uint64_t)v25, type metadata accessor for SyncTransactionMessage);
LABEL_23:
  v55 = v91;
  v54 = v92;
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
  v57 = v95;
  v56(v95, 1, 1, v92);
  sub_2293B8B70();
  sub_229324D74(v48, (uint64_t)v22, type metadata accessor for SyncTransactionMessage);
  sub_2293251F8(v57, qword_255A42398);
  sub_22932EA14((uint64_t)v22, v57, type metadata accessor for SyncTransactionMessage);
  swift_storeEnumTagMultiPayload();
  v56(v57, 0, 1, v54);
  v59 = v89;
  v58 = v90;
  v60 = (uint64_t)v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, *MEMORY[0x24BDD1F50], v90);
  sub_2293390A8(v57, v60);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v58);
  if (qword_255A41A88 != -1)
    swift_once();
  v61 = v94;
  v62 = __swift_project_value_buffer(v94, (uint64_t)qword_255A44C60);
  v63 = v93;
  v64 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v83, v62, v61);
  swift_retain_n();
  v65 = sub_2293B8D44();
  v66 = sub_2293B908C();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = swift_slowAlloc();
    v90 = swift_slowAlloc();
    v100 = v90;
    *(_DWORD *)v67 = 16777730;
    swift_beginAccess();
    v68 = v86;
    sub_229324E44(v57, v86, qword_255A42398);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v68, 1, v54) == 1)
    {
      swift_release();
      result = sub_22932E904(v95, type metadata accessor for SyncMessage);
      __break(1u);
      return result;
    }
    v69 = v84;
    sub_229324D74(v68, v84, type metadata accessor for SyncMessage.OneOf_Contents);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_22932E904(v69, type metadata accessor for SyncMessage.OneOf_Contents);
    sub_22932E904(v68, type metadata accessor for SyncMessage.OneOf_Contents);
    v99 = EnumCaseMultiPayload;
    sub_2293B9110();
    *(_WORD *)(v67 + 5) = 2080;
    v71 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v72 = v81;
    v73 = v85;
    v74 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v85, v71, v82);
    v75 = sub_2293B89E4();
    v77 = v76;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    v98 = sub_22932DB78(v75, v77, &v100);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22931B000, v65, v66, "SyncedModel: sent transaction of type:%hhu for model:%s", (uint8_t *)v67, 0xFu);
    v78 = v90;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v78, -1, -1);
    MEMORY[0x22E2C869C](v67, -1, -1);

    swift_release();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v83, v94);
    sub_22932E904(v97, type metadata accessor for SyncTransactionMessage);
    v79 = v95;
  }
  else
  {
    swift_release_n();

    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v61);
    sub_22932E904(v48, type metadata accessor for SyncTransactionMessage);
    v79 = v57;
  }
  return sub_22932E904(v79, type metadata accessor for SyncMessage);
}

uint64_t sub_22935C6F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  _QWORD *Strong;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  char *v66;
  int64_t v67;
  _QWORD v68[3];
  char v69[8];
  uint64_t v70;
  uint64_t v71[5];

  v5 = v4;
  v62 = a3;
  v61 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v55 - v12;
  v13 = sub_2293B8B40();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v60 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_2293B8A20();
  v16 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v66 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41A88 != -1)
LABEL_35:
    swift_once();
  v18 = sub_2293B8D5C();
  __swift_project_value_buffer(v18, (uint64_t)qword_255A44C60);
  swift_retain_n();
  v19 = sub_2293B8D44();
  v20 = sub_2293B90B0();
  v21 = os_log_type_enabled(v19, v20);
  v67 = v13;
  v65 = v14;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v57 = a4;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v59 = v11;
    v56 = v24;
    v58 = a1;
    *(_DWORD *)v23 = 136315138;
    v71[0] = v24;
    v55 = v23 + 4;
    v25 = v5 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v27 = v66;
    v28 = v16;
    v29 = v64;
    v26(v66, v25, v64);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v30 = sub_2293B9308();
    v32 = v31;
    v33 = v29;
    v16 = v28;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v33);
    v34 = v30;
    v14 = v65;
    v68[0] = sub_22932DB78(v34, v32, v71);
    a1 = v58;
    sub_2293B9110();
    v13 = v67;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_22931B000, v19, v20, "SyncedModel: Registering model:%s", v23, 0xCu);
    v35 = v56;
    swift_arrayDestroy();
    v11 = v59;
    MEMORY[0x22E2C869C](v35, -1, -1);
    v36 = v23;
    a4 = v57;
    MEMORY[0x22E2C869C](v36, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_weakAssign();
  v37 = v5 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type;
  *(_QWORD *)v37 = v61;
  *(_BYTE *)(v37 + 8) = v62 & 1;
  sub_2293B8A2C();
  v38 = v63;
  sub_229324E44(a4, v63, &qword_255A41BC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int64_t))(v14 + 48))(v38, 1, v13) == 1)
  {
    sub_2293251F8(v38, &qword_255A41BC0);
  }
  else
  {
    v39 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, int64_t))(v14 + 32))(v60, v38, v13);
    sub_22935CD30(v39);
    (*(void (**)(uint64_t, int64_t))(v14 + 8))(v39, v13);
  }
  v40 = (uint64_t *)(v5 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
  swift_beginAccess();
  v41 = *v40;
  v42 = *v40 + 64;
  v43 = 1 << *(_BYTE *)(*v40 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  a4 = v44 & *(_QWORD *)(*v40 + 64);
  v13 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (a4)
    {
      v45 = __clz(__rbit64(a4));
      a4 &= a4 - 1;
      v46 = v45 | (v14 << 6);
      goto LABEL_30;
    }
    v47 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v47 >= v13)
      goto LABEL_32;
    v48 = *(_QWORD *)(v42 + 8 * v47);
    ++v14;
    if (!v48)
    {
      v14 = v47 + 1;
      if (v47 + 1 >= v13)
        goto LABEL_32;
      v48 = *(_QWORD *)(v42 + 8 * v14);
      if (!v48)
      {
        v14 = v47 + 2;
        if (v47 + 2 >= v13)
          goto LABEL_32;
        v48 = *(_QWORD *)(v42 + 8 * v14);
        if (!v48)
        {
          v14 = v47 + 3;
          if (v47 + 3 >= v13)
            goto LABEL_32;
          v48 = *(_QWORD *)(v42 + 8 * v14);
          if (!v48)
            break;
        }
      }
    }
LABEL_29:
    a4 = (v48 - 1) & v48;
    v46 = __clz(__rbit64(v48)) + (v14 << 6);
LABEL_30:
    sub_229325100(*(_QWORD *)(v41 + 56) + 16 * v46, (uint64_t)v68);
    sub_22932513C((uint64_t)v68, (uint64_t)v69);
    Strong = (_QWORD *)swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(_QWORD))(v70 + 40))(*Strong);
      swift_release();
    }
    sub_22935B28C((uint64_t)v69);
  }
  v49 = v47 + 4;
  if (v49 < v13)
  {
    v48 = *(_QWORD *)(v42 + 8 * v49);
    if (!v48)
    {
      while (1)
      {
        v14 = v49 + 1;
        if (__OFADD__(v49, 1))
          goto LABEL_34;
        if (v14 >= v13)
          goto LABEL_32;
        v48 = *(_QWORD *)(v42 + 8 * v14);
        ++v49;
        if (v48)
          goto LABEL_29;
      }
    }
    v14 = v49;
    goto LABEL_29;
  }
LABEL_32:
  swift_release();
  v51 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v66, v5 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v64);
  v52 = v65;
  v53 = v67;
  (*(void (**)(char *, uint64_t, int64_t))(v65 + 16))(v11, a1 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v67);
  (*(void (**)(char *, _QWORD, uint64_t, int64_t))(v52 + 56))(v11, 0, 1, v53);
  swift_beginAccess();
  sub_22935B468((uint64_t)v11, v51);
  return swift_endAccess();
}

uint64_t sub_22935CD30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *Strong;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[8];
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64[4];

  v2 = v1;
  v4 = sub_2293B8A20();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2293B8B40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v50 - v15;
  v17 = *(_QWORD *)(v8 + 16);
  ((void (*)(char *, uint64_t, unint64_t))v17)((char *)&v50 - v15, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v8 + 56))(v16, 0, 1, v7);
  sub_22932E9D0((uint64_t)v16, (uint64_t)v14, &qword_255A41BC0);
  v18 = v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
  swift_beginAccess();
  sub_229324E88((uint64_t)v14, v18, &qword_255A41BC0);
  swift_endAccess();
  if (qword_255A41A88 != -1)
LABEL_32:
    swift_once();
  v19 = sub_2293B8D5C();
  __swift_project_value_buffer(v19, (uint64_t)qword_255A44C60);
  ((void (*)(char *, uint64_t, unint64_t))v17)(v10, a1, v7);
  swift_retain_n();
  v20 = sub_2293B8D44();
  v21 = sub_2293B90B0();
  v22 = v21;
  v23 = v7;
  if (os_log_type_enabled(v20, v21))
  {
    v17 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v64[0] = v57;
    *(_DWORD *)v17 = 136315394;
    v52 = v17 + 4;
    v56 = v20;
    v24 = v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v55 = v22;
    v26 = v59;
    v25 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v6, v24, v60);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v51 = v10;
    v54 = v23;
    v27 = sub_2293B9308();
    v53 = v8;
    v58 = v2;
    v29 = v28;
    v30 = *(void (**)(char *, uint64_t))(v26 + 8);
    v30(v6, v25);
    v63[0] = sub_22932DB78(v27, v29, v64);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2080;
    v31 = v51;
    sub_2293B8B34();
    v32 = sub_2293B9308();
    v34 = v33;
    v30(v6, v25);
    v63[0] = sub_22932DB78(v32, v34, v64);
    v2 = v58;
    sub_2293B9110();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v53 + 8))(v31, v54);
    v35 = v56;
    _os_log_impl(&dword_22931B000, v56, (os_log_type_t)v55, "SyncedModel: Authority of model:%s set to %s", (uint8_t *)v17, 0x16u);
    v36 = v57;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v36, -1, -1);
    MEMORY[0x22E2C869C](v17, -1, -1);

  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, unint64_t))(v8 + 8))(v10, v7);

  }
  v37 = (char **)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
  swift_beginAccess();
  v6 = *v37;
  v40 = *((_QWORD *)*v37 + 8);
  v39 = (uint64_t)(*v37 + 64);
  v38 = v40;
  v41 = 1 << v6[32];
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v7 = v42 & v38;
  v10 = (char *)((unint64_t)(v41 + 63) >> 6);
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v7)
    {
      v43 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v44 = v43 | (v8 << 6);
      goto LABEL_27;
    }
    v45 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v45 >= (uint64_t)v10)
      goto LABEL_29;
    v46 = *(_QWORD *)(v39 + 8 * v45);
    ++v8;
    if (!v46)
    {
      v8 = v45 + 1;
      if (v45 + 1 >= (uint64_t)v10)
        goto LABEL_29;
      v46 = *(_QWORD *)(v39 + 8 * v8);
      if (!v46)
      {
        v8 = v45 + 2;
        if (v45 + 2 >= (uint64_t)v10)
          goto LABEL_29;
        v46 = *(_QWORD *)(v39 + 8 * v8);
        if (!v46)
        {
          v8 = v45 + 3;
          if (v45 + 3 >= (uint64_t)v10)
            goto LABEL_29;
          v46 = *(_QWORD *)(v39 + 8 * v8);
          if (!v46)
            break;
        }
      }
    }
LABEL_26:
    v7 = (v46 - 1) & v46;
    v44 = __clz(__rbit64(v46)) + (v8 << 6);
LABEL_27:
    sub_229325100(*((_QWORD *)v6 + 7) + 16 * v44, (uint64_t)v63);
    sub_22932513C((uint64_t)v63, (uint64_t)v61);
    Strong = (_QWORD *)swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(uint64_t, _QWORD))(v62 + 56))(a1, *Strong);
      swift_release();
    }
    sub_22935B28C((uint64_t)v61);
  }
  v47 = v45 + 4;
  if (v47 < (uint64_t)v10)
  {
    v46 = *(_QWORD *)(v39 + 8 * v47);
    if (!v46)
    {
      while (1)
      {
        v8 = v47 + 1;
        if (__OFADD__(v47, 1))
          goto LABEL_31;
        if (v8 >= (uint64_t)v10)
          goto LABEL_29;
        v46 = *(_QWORD *)(v39 + 8 * v8);
        ++v47;
        if (v46)
          goto LABEL_26;
      }
    }
    v8 = v47;
    goto LABEL_26;
  }
LABEL_29:
  swift_release();
  LOBYTE(v63[0]) = 2;
  swift_retain();
  sub_2293B8DC8();
  return swift_release();
}

uint64_t sub_22935D310()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *Strong;
  _BYTE v16[8];
  uint64_t v17;
  _BYTE v18[16];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = 1 << *(_BYTE *)(*v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_23;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v7)
      goto LABEL_25;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_25;
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_25;
        v13 = *(_QWORD *)(v3 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_25;
          v13 = *(_QWORD *)(v3 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_23:
    sub_229325100(*(_QWORD *)(v2 + 56) + 16 * v11, (uint64_t)v18);
    sub_22932513C((uint64_t)v18, (uint64_t)v16);
    Strong = (_QWORD *)swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(_QWORD))(v17 + 48))(*Strong);
      swift_release();
    }
    result = sub_22935B28C((uint64_t)v16);
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_25:
    swift_release();
    swift_weakAssign();
    return sub_2293B8A2C();
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v7)
      goto LABEL_25;
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22935D508(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  __int128 v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD *Strong;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  unsigned int *v31;
  unsigned int *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  void (*v54)(unsigned int *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  unsigned int *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  _OWORD v89[2];
  _OWORD v90[2];

  v86 = a2;
  v4 = type metadata accessor for SetChangedMessage(0);
  v79 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (unsigned int *)((char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for DictionaryChangedMessage(0);
  v80 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (unsigned int *)((char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for PropertyChangedMessage(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (unsigned int *)((char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = a1[2];
  v15 = *(_QWORD *)(v14 + 16);
  v85 = v6;
  v82 = v2;
  v81 = a1;
  if (v15)
  {
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
    v17 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v78[1] = v14;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v18 = *(_QWORD *)(v11 + 72);
    v19 = type metadata accessor for PropertyChangedMessage;
    *((_QWORD *)&v20 + 1) = 1;
    v84 = xmmword_2293BAA90;
    *(_QWORD *)&v20 = 67109120;
    v83 = v20;
    while (1)
    {
      sub_229324D74(v17, (uint64_t)v13, v19);
      v21 = *v13;
      v22 = *v16;
      v23 = *(_QWORD *)(*v16 + 16);
      LODWORD(v87) = *v13;
      if (v23)
      {
        v24 = sub_22936F3B4(v21);
        if ((v25 & 1) != 0)
        {
          sub_229325100(*(_QWORD *)(v22 + 56) + 16 * v24, (uint64_t)v90);
          v23 = *(_QWORD *)&v90[0];
          if (*((_QWORD *)&v90[0] + 1) != 1)
            goto LABEL_13;
          goto LABEL_11;
        }
        v23 = 0;
      }
      v90[0] = v84;
LABEL_11:
      if (!v23)
      {
        sub_2293251F8((uint64_t)v90, &qword_255A43680);
LABEL_15:
        if (qword_255A41A88 != -1)
          swift_once();
        v28 = sub_2293B8D5C();
        __swift_project_value_buffer(v28, (uint64_t)qword_255A44C60);
        v29 = sub_2293B8D44();
        v30 = sub_2293B9098();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = v13;
          v32 = v9;
          v33 = v18;
          v34 = v19;
          v35 = v16;
          v36 = swift_slowAlloc();
          *(_DWORD *)v36 = v83;
          *(_DWORD *)(v36 + 4) = v87;
          _os_log_impl(&dword_22931B000, v29, v30, "Error: received property update for unknown property #:%u", (uint8_t *)v36, 8u);
          v37 = v36;
          v16 = v35;
          v19 = v34;
          v18 = v33;
          v9 = v32;
          v13 = v31;
          MEMORY[0x22E2C869C](v37, -1, -1);
        }

        goto LABEL_4;
      }
LABEL_13:
      Strong = (_QWORD *)swift_weakLoadStrong();
      v27 = *((_QWORD *)&v90[0] + 1);
      sub_2293251F8((uint64_t)v90, &qword_255A43680);
      if (!Strong)
        goto LABEL_15;
      (*(void (**)(unsigned int *, uint64_t, _QWORD, uint64_t))(v27 + 8))(v13, v86, *Strong, v27);
      swift_release();
LABEL_4:
      sub_22932E904((uint64_t)v13, v19);
      v17 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        v6 = v85;
        v2 = v82;
        a1 = v81;
        break;
      }
    }
  }
  v38 = a1[4];
  v39 = *(_QWORD *)(v38 + 16);
  if (!v39)
    goto LABEL_40;
  v40 = (uint64_t *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
  v41 = v80;
  v42 = v38 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
  *(_QWORD *)&v83 = a1[4];
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v43 = *(_QWORD *)(v41 + 72);
  *((_QWORD *)&v44 + 1) = 1;
  v87 = xmmword_2293BAA90;
  *(_QWORD *)&v44 = 67109120;
  v84 = v44;
  while (1)
  {
    sub_229324D74(v42, (uint64_t)v9, type metadata accessor for DictionaryChangedMessage);
    v45 = *v9;
    v46 = *v40;
    v47 = *(_QWORD *)(*v40 + 16);
    if (v47)
    {
      v48 = sub_22936F3B4(*v9);
      if ((v49 & 1) != 0)
      {
        sub_229325100(*(_QWORD *)(v46 + 56) + 16 * v48, (uint64_t)v89);
        v47 = *(_QWORD *)&v89[0];
        if (*((_QWORD *)&v89[0] + 1) != 1)
          goto LABEL_32;
        goto LABEL_30;
      }
      v47 = 0;
    }
    v89[0] = v87;
LABEL_30:
    if (!v47)
    {
      sub_2293251F8((uint64_t)v89, &qword_255A43680);
LABEL_35:
      if (qword_255A41A88 != -1)
        swift_once();
      v55 = sub_2293B8D5C();
      __swift_project_value_buffer(v55, (uint64_t)qword_255A44C60);
      v56 = sub_2293B8D44();
      v57 = sub_2293B9098();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc();
        *(_DWORD *)v58 = v84;
        *(_DWORD *)(v58 + 4) = v45;
        _os_log_impl(&dword_22931B000, v56, v57, "Error: received dictionary update for unknown dictionary #:%u", (uint8_t *)v58, 8u);
        MEMORY[0x22E2C869C](v58, -1, -1);
      }

      goto LABEL_23;
    }
LABEL_32:
    v50 = (uint64_t *)swift_weakLoadStrong();
    sub_2293251F8((uint64_t)v89, &qword_255A43680);
    if (!v50)
      goto LABEL_35;
    v51 = *v50;
    result = swift_conformsToProtocol2();
    if (!result)
      break;
    v53 = result;
    v54 = *(void (**)(unsigned int *, uint64_t, uint64_t, uint64_t))(result + 16);
    swift_retain();
    v54(v9, v86, v51, v53);
    swift_release_n();
LABEL_23:
    sub_22932E904((uint64_t)v9, type metadata accessor for DictionaryChangedMessage);
    v42 += v43;
    if (!--v39)
    {
      swift_bridgeObjectRelease();
      v6 = v85;
      v2 = v82;
      a1 = v81;
LABEL_40:
      result = a1[3];
      v59 = *(_QWORD *)(result + 16);
      if (!v59)
        return result;
      v60 = (uint64_t *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
      v61 = v79;
      v62 = result + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      v82 = a1[3];
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v63 = *(_QWORD *)(v61 + 72);
      *((_QWORD *)&v64 + 1) = 1;
      v87 = xmmword_2293BAA90;
      *(_QWORD *)&v64 = 67109120;
      v83 = v64;
      while (1)
      {
        sub_229324D74(v62, (uint64_t)v6, type metadata accessor for SetChangedMessage);
        v65 = *v6;
        v66 = *v60;
        v67 = *(_QWORD *)(*v60 + 16);
        if (v67)
        {
          v68 = sub_22936F3B4(*v6);
          if ((v69 & 1) != 0)
          {
            sub_229325100(*(_QWORD *)(v66 + 56) + 16 * v68, (uint64_t)&v88);
            v67 = v88;
            if (*((_QWORD *)&v88 + 1) != 1)
              goto LABEL_52;
            goto LABEL_50;
          }
          v67 = 0;
        }
        v88 = v87;
LABEL_50:
        if (!v67)
        {
          sub_2293251F8((uint64_t)&v88, &qword_255A43680);
          goto LABEL_55;
        }
LABEL_52:
        v70 = (uint64_t *)swift_weakLoadStrong();
        sub_2293251F8((uint64_t)&v88, &qword_255A43680);
        if (v70)
        {
          v71 = *v70;
          result = swift_conformsToProtocol2();
          if (!result)
            goto LABEL_62;
          v72 = result;
          *(_QWORD *)&v84 = *(_QWORD *)(result + 16);
          swift_retain();
          v6 = v85;
          ((void (*)(unsigned int *, uint64_t, uint64_t, uint64_t))v84)(v85, v86, v71, v72);
          swift_release_n();
          goto LABEL_43;
        }
LABEL_55:
        if (qword_255A41A88 != -1)
          swift_once();
        v73 = sub_2293B8D5C();
        __swift_project_value_buffer(v73, (uint64_t)qword_255A44C60);
        v74 = sub_2293B8D44();
        v75 = sub_2293B9098();
        if (os_log_type_enabled(v74, v75))
        {
          v76 = swift_slowAlloc();
          *(_DWORD *)v76 = v83;
          *(_DWORD *)(v76 + 4) = v65;
          _os_log_impl(&dword_22931B000, v74, v75, "Error: received set update for unknown set #:%u", (uint8_t *)v76, 8u);
          v77 = v76;
          v6 = v85;
          MEMORY[0x22E2C869C](v77, -1, -1);
        }

LABEL_43:
        sub_22932E904((uint64_t)v6, type metadata accessor for SetChangedMessage);
        v62 += v63;
        if (!--v59)
          return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_22935DD00(_DWORD *a1, uint64_t a2)
{
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unsigned int v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  _QWORD *Strong;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t *v77;
  _DWORD *v78;
  _QWORD *v79;
  uint64_t *v80;
  char *v81;
  uint8_t *v82;
  uint8_t *v83;
  _QWORD v85[2];
  os_log_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  __int128 v90;
  _DWORD *v91;
  __int128 v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98[4];

  v3 = v2;
  v89 = a2;
  v91 = a1;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A42A00);
  v4 = MEMORY[0x24BDAC7A8](v95);
  v6 = (uint64_t)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v85 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&v92 = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v94 = (_QWORD *)((char *)v85 - v13);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v90 = (char *)v85 - v14;
  v15 = sub_2293B8A20();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (_QWORD *)((char *)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_255A41A88 == -1)
    goto LABEL_2;
  while (2)
  {
    swift_once();
LABEL_2:
    v19 = sub_2293B8D5C();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v93 = v20;
    v21 = sub_2293B8D44();
    v22 = sub_2293B90B0();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v88 = v23;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v87 = v26;
      v86 = v21;
      v27 = v25;
      *(_DWORD *)v25 = 136315138;
      v98[0] = v26;
      v85[1] = v25 + 4;
      v28 = (char *)v3 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      (*(void (**)(_QWORD *, char *, unint64_t))(v16 + 16))(v18, v28, v15);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_2293B9308();
      v31 = v30;
      (*(void (**)(_QWORD *, unint64_t))(v16 + 8))(v18, v15);
      v97 = sub_22932DB78(v29, v31, v98);
      sub_2293B9110();
      swift_bridgeObjectRelease();
      swift_release_n();
      v32 = v86;
      _os_log_impl(&dword_22931B000, v86, (os_log_type_t)v88, "SyncedModel: Applying catchup for model: %s", v27, 0xCu);
      v33 = v87;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v33, -1, -1);
      MEMORY[0x22E2C869C](v27, -1, -1);

    }
    else
    {
      swift_release_n();

    }
    v34 = v3;
    v35 = v90;
    v3 = v91;
    sub_229357300(v90);
    v36 = (uint64_t)v34 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    v18 = v94;
    sub_229324E44(v36, (uint64_t)v94, &qword_255A41F70);
    swift_beginAccess();
    sub_22932E988(v35, v36);
    swift_endAccess();
    v37 = v36;
    v38 = v92;
    sub_229324E44(v37, v92, &qword_255A41F70);
    sub_22935FF10((uint64_t)v18, v38);
    sub_2293251F8(v38, &qword_255A41F70);
    sub_2293251F8(v35, &qword_255A41F70);
    sub_2293251F8((uint64_t)v18, &qword_255A41F70);
    v39 = *v3;
    *(_QWORD *)&v90 = v34;
    *(_DWORD *)((char *)v34 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = v39;
    v40 = sub_2293582BC();
    v41 = 0;
    v42 = *(_QWORD *)(v40 + 64);
    *(_QWORD *)&v92 = v40 + 64;
    v43 = 1 << *(_BYTE *)(v40 + 32);
    v44 = -1;
    if (v43 < 64)
      v44 = ~(-1 << v43);
    v45 = v44 & v42;
    v94 = (_QWORD *)((unint64_t)(v43 + 63) >> 6);
    while (1)
    {
      if (v45)
      {
        v46 = __clz(__rbit64(v45));
        v45 &= v45 - 1;
        v47 = v46 | (v41 << 6);
        goto LABEL_9;
      }
      v52 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      if (v52 >= (uint64_t)v94)
        goto LABEL_25;
      v53 = *(_QWORD *)(v92 + 8 * v52);
      ++v41;
      if (!v53)
      {
        v41 = v52 + 1;
        if (v52 + 1 >= (uint64_t)v94)
          goto LABEL_25;
        v53 = *(_QWORD *)(v92 + 8 * v41);
        if (!v53)
        {
          v41 = v52 + 2;
          if (v52 + 2 >= (uint64_t)v94)
            goto LABEL_25;
          v53 = *(_QWORD *)(v92 + 8 * v41);
          if (!v53)
            break;
        }
      }
LABEL_24:
      v45 = (v53 - 1) & v53;
      v47 = __clz(__rbit64(v53)) + (v41 << 6);
LABEL_9:
      (*(void (**)(char *, unint64_t, unint64_t))(v16 + 16))(v8, *(_QWORD *)(v40 + 48) + *(_QWORD *)(v16 + 72) * v47, v15);
      v48 = (_QWORD *)(*(_QWORD *)(v40 + 56) + 16 * v47);
      v49 = *(int *)(v95 + 48);
      v50 = &v8[v49];
      v3 = (_DWORD *)*v48;
      v51 = v48[1];
      *(_QWORD *)v50 = *v48;
      *((_QWORD *)v50 + 1) = v51;
      v18 = (_QWORD *)(v6 + v49);
      (*(void (**)(uint64_t, char *, unint64_t))(v16 + 32))(v6, v8, v15);
      *v18 = v3;
      v18[1] = v51;
      swift_bridgeObjectRetain();
      sub_2293251F8(v6, &qword_255A42A00);
    }
    v54 = v52 + 3;
    if (v54 < (uint64_t)v94)
    {
      v53 = *(_QWORD *)(v92 + 8 * v54);
      if (!v53)
      {
        while (1)
        {
          v41 = v54 + 1;
          if (__OFADD__(v54, 1))
            goto LABEL_62;
          if (v41 >= (uint64_t)v94)
            goto LABEL_25;
          v53 = *(_QWORD *)(v92 + 8 * v41);
          ++v54;
          if (v53)
            goto LABEL_24;
        }
      }
      v41 = v54;
      goto LABEL_24;
    }
LABEL_25:
    swift_release();
    v55 = sub_2293580B4();
    v18 = (_QWORD *)v55;
    v8 = (char *)(v55 + 64);
    v56 = 1 << *(_BYTE *)(v55 + 32);
    v57 = -1;
    if (v56 < 64)
      v57 = ~(-1 << v56);
    v58 = v57 & *(_QWORD *)(v55 + 64);
    v59 = (uint64_t *)(v90 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
    swift_beginAccess();
    v60 = 0;
    v3 = (_DWORD *)((unint64_t)(v56 + 63) >> 6);
    *((_QWORD *)&v61 + 1) = 1;
    v92 = xmmword_2293BAA90;
    v62 = &qword_255A43680;
    *(_QWORD *)&v61 = 67109120;
    v90 = v61;
    if (v58)
    {
      while (1)
      {
        v95 = (v58 - 1) & v58;
        v66 = __clz(__rbit64(v58)) | (v60 << 6);
LABEL_45:
        v67 = *(_DWORD *)(v18[6] + 4 * v66);
        v68 = (uint64_t *)(v18[7] + 16 * v66);
        v16 = *v68;
        v15 = v68[1];
        v69 = *v59;
        v70 = *(_QWORD *)(*v59 + 16);
        LODWORD(v94) = v67;
        if (v70)
        {
          v71 = sub_22936F3B4(v67);
          if ((v72 & 1) != 0)
          {
            sub_229325100(*(_QWORD *)(v69 + 56) + 16 * v71, (uint64_t)&v96);
            v70 = v96;
            if (*((_QWORD *)&v96 + 1) != 1)
              goto LABEL_53;
            goto LABEL_51;
          }
          v70 = 0;
        }
        v96 = v92;
LABEL_51:
        if (!v70)
        {
          sub_229324ECC(v16, v15);
          sub_2293251F8((uint64_t)&v96, v62);
          goto LABEL_55;
        }
LABEL_53:
        Strong = (_QWORD *)swift_weakLoadStrong();
        v6 = *((_QWORD *)&v96 + 1);
        sub_229324ECC(v16, v15);
        sub_2293251F8((uint64_t)&v96, v62);
        if (Strong)
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t, _QWORD, uint64_t))(v6 + 16))(v16, v15, v89, *Strong, v6);
          swift_release();
LABEL_57:
          sub_229324F6C(v16, v15);
          v58 = v95;
          if (!v95)
            break;
        }
        else
        {
LABEL_55:
          sub_229324ECC(v16, v15);
          v74 = sub_2293B8D44();
          v75 = sub_2293B9098();
          v6 = v75;
          if (os_log_type_enabled(v74, v75))
          {
            v76 = (uint8_t *)swift_slowAlloc();
            v91 = (_DWORD *)v60;
            v77 = v62;
            v78 = v3;
            v79 = v18;
            v80 = v59;
            v81 = v8;
            v82 = v76;
            *(_DWORD *)v76 = v90;
            *((_DWORD *)v76 + 1) = (_DWORD)v94;
            sub_229324F6C(v16, v15);
            _os_log_impl(&dword_22931B000, v74, (os_log_type_t)v6, "SyncedModel: Handling catchup data: found unknown property ID %u", v82, 8u);
            v83 = v82;
            v8 = v81;
            v59 = v80;
            v18 = v79;
            v3 = v78;
            v62 = v77;
            v60 = (uint64_t)v91;
            MEMORY[0x22E2C869C](v83, -1, -1);

            goto LABEL_57;
          }
          sub_229324F6C(v16, v15);
          sub_229324F6C(v16, v15);

          v58 = v95;
          if (!v95)
            break;
        }
      }
    }
    v63 = v60 + 1;
    if (__OFADD__(v60, 1))
      goto LABEL_61;
    if (v63 < (uint64_t)v3)
    {
      v64 = *(_QWORD *)&v8[8 * v63];
      ++v60;
      if (v64)
        goto LABEL_43;
      v60 = v63 + 1;
      if (v63 + 1 >= (uint64_t)v3)
        return swift_release();
      v64 = *(_QWORD *)&v8[8 * v60];
      if (v64)
        goto LABEL_43;
      v60 = v63 + 2;
      if (v63 + 2 >= (uint64_t)v3)
        return swift_release();
      v64 = *(_QWORD *)&v8[8 * v60];
      if (v64)
      {
LABEL_43:
        v95 = (v64 - 1) & v64;
        v66 = __clz(__rbit64(v64)) + (v60 << 6);
        goto LABEL_45;
      }
      v65 = v63 + 3;
      if (v65 < (uint64_t)v3)
      {
        v64 = *(_QWORD *)&v8[8 * v65];
        if (v64)
        {
          v60 = v65;
          goto LABEL_43;
        }
        while (1)
        {
          v60 = v65 + 1;
          if (__OFADD__(v65, 1))
            break;
          if (v60 >= (uint64_t)v3)
            return swift_release();
          v64 = *(_QWORD *)&v8[8 * v60];
          ++v65;
          if (v64)
            goto LABEL_43;
        }
LABEL_63:
        __break(1u);
        continue;
      }
    }
    return swift_release();
  }
}

uint64_t sub_22935E608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  __int128 v34;
  unint64_t v35;
  BOOL v36;
  unint64_t v37;
  int64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *Strong;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  _QWORD *v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  int64_t v88;
  unint64_t v89;
  int v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  int64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  void (*v131)(void);
  char *v132;
  char *v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  _QWORD *v139;
  int isUniquelyReferenced_nonNull_native;
  char v141;
  unint64_t v142;
  uint64_t v143;
  _BOOL8 v144;
  uint64_t v145;
  char v146;
  unint64_t v147;
  char v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t result;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  __int128 v161;
  _QWORD *v162;
  int64_t v163;
  __int128 v164;
  char *v165;
  char *v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int64_t v174;
  uint64_t v175;
  void (*v176)(void);
  uint64_t v177;
  int64_t v178;
  uint64_t v179;
  int64_t v180;
  uint64_t v181;
  char *v182;
  int64_t v183;
  char *v184;
  _QWORD *v185;
  __int128 v186;

  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43678);
  v3 = MEMORY[0x24BDAC7A8](v167);
  v170 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v182 = (char *)&v153 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v169 = (uint64_t)&v153 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v166 = (char *)&v153 - v9;
  v178 = type metadata accessor for ModelData.PropertyDataMap(0);
  v177 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v11 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2293B8A20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v165 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v153 - v19;
  v21 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  swift_beginAccess();
  v171 = v16;
  v22 = *(void (**)(void))(v16 + 16);
  v175 = v15;
  v176 = v22;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v15);
  v23 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v23, (uint64_t)v14, &qword_255A41F70);
  LODWORD(v15) = *(_DWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
  v24 = MEMORY[0x24BEE4AF8];
  v25 = sub_22932E804(MEMORY[0x24BEE4AF8]);
  v26 = sub_229327E90(v24);
  v172 = a1;
  sub_229354BAC(v20, (uint64_t)v14, v15, v25, v26, a1);
  v154 = v1;
  v27 = (uint64_t *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties);
  swift_beginAccess();
  v28 = *v27;
  v29 = *v27 + 64;
  v30 = 1 << *(_BYTE *)(*v27 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(*v27 + 64);
  v163 = (unint64_t)(v30 + 63) >> 6;
  swift_bridgeObjectRetain();
  v33 = 0;
  v168 = 0;
  *((_QWORD *)&v34 + 1) = 1;
  v164 = xmmword_2293BAA90;
  *(_QWORD *)&v34 = 67109120;
  v161 = v34;
  v158 = v28;
  v157 = v27;
  v155 = v29;
  while (1)
  {
    if (v32)
    {
      v173 = (v32 - 1) & v32;
      v35 = __clz(__rbit64(v32)) | (v33 << 6);
    }
    else
    {
      v36 = __OFADD__(v33++, 1);
      if (v36)
        goto LABEL_125;
      if (v33 >= v163)
        goto LABEL_83;
      v37 = *(_QWORD *)(v29 + 8 * v33);
      if (!v37)
      {
        v38 = v33 + 1;
        if (v33 + 1 >= v163)
          goto LABEL_83;
        v37 = *(_QWORD *)(v29 + 8 * v38);
        if (!v37)
        {
          v38 = v33 + 2;
          if (v33 + 2 >= v163)
            goto LABEL_83;
          v37 = *(_QWORD *)(v29 + 8 * v38);
          if (!v37)
          {
            v38 = v33 + 3;
            if (v33 + 3 >= v163)
              goto LABEL_83;
            v37 = *(_QWORD *)(v29 + 8 * v38);
            if (!v37)
            {
              v38 = v33 + 4;
              if (v33 + 4 >= v163)
                goto LABEL_83;
              v37 = *(_QWORD *)(v29 + 8 * v38);
              if (!v37)
              {
                v38 = v33 + 5;
                if (v33 + 5 >= v163)
                  goto LABEL_83;
                v37 = *(_QWORD *)(v29 + 8 * v38);
                if (!v37)
                {
                  while (1)
                  {
                    v33 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_130;
                    if (v33 >= v163)
                      break;
                    v37 = *(_QWORD *)(v29 + 8 * v33);
                    ++v38;
                    if (v37)
                      goto LABEL_22;
                  }
LABEL_83:
                  swift_release();
                  v104 = (uint64_t *)(v154
                                   + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants);
                  swift_beginAccess();
                  v105 = *v104;
                  v106 = *(_QWORD *)(*v104 + 64);
                  v177 = *v104 + 64;
                  v107 = 1 << *(_BYTE *)(v105 + 32);
                  v108 = -1;
                  if (v107 < 64)
                    v108 = ~(-1 << v107);
                  v109 = v108 & v106;
                  v178 = (unint64_t)(v107 + 63) >> 6;
                  v179 = v105;
                  swift_bridgeObjectRetain();
                  v110 = 0;
                  v111 = v175;
                  while (2)
                  {
                    if (v109)
                    {
                      v181 = (v109 - 1) & v109;
                      v183 = v110;
                      v114 = __clz(__rbit64(v109)) | (v110 << 6);
                    }
                    else
                    {
                      v36 = __OFADD__(v110, 1);
                      v115 = v110 + 1;
                      if (v36)
                        goto LABEL_126;
                      if (v115 >= v178)
                        return swift_release();
                      v116 = *(_QWORD *)(v177 + 8 * v115);
                      if (!v116)
                      {
                        v117 = v115 + 1;
                        if (v115 + 1 >= v178)
                          return swift_release();
                        v116 = *(_QWORD *)(v177 + 8 * v117);
                        if (!v116)
                        {
                          v117 = v115 + 2;
                          if (v115 + 2 >= v178)
                            return swift_release();
                          v116 = *(_QWORD *)(v177 + 8 * v117);
                          if (!v116)
                          {
                            v117 = v115 + 3;
                            if (v115 + 3 >= v178)
                              return swift_release();
                            v116 = *(_QWORD *)(v177 + 8 * v117);
                            if (!v116)
                            {
                              while (1)
                              {
                                v115 = v117 + 1;
                                if (__OFADD__(v117, 1))
                                  goto LABEL_128;
                                if (v115 >= v178)
                                  return swift_release();
                                v116 = *(_QWORD *)(v177 + 8 * v115);
                                ++v117;
                                if (v116)
                                  goto LABEL_100;
                              }
                            }
                          }
                        }
                        v115 = v117;
                      }
LABEL_100:
                      v181 = (v116 - 1) & v116;
                      v183 = v115;
                      v114 = __clz(__rbit64(v116)) + (v115 << 6);
                    }
                    v118 = v179;
                    v119 = *(_QWORD *)(v179 + 48);
                    v120 = v171;
                    v180 = *(_QWORD *)(v171 + 72);
                    v121 = v166;
                    ((void (*)(char *, unint64_t, uint64_t))v176)(v166, v119 + v180 * v114, v111);
                    v122 = *(_QWORD *)(v118 + 56);
                    v123 = sub_2293B8B40();
                    v124 = *(_QWORD *)(v123 - 8);
                    v125 = v122 + *(_QWORD *)(v124 + 72) * v114;
                    v126 = v167;
                    v127 = &v121[*(int *)(v167 + 48)];
                    v128 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
                    v128(v127, v125, v123);
                    v129 = v169 + *(int *)(v126 + 48);
                    (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v169, v121, v111);
                    (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v129, v127, v123);
                    v130 = &v182[*(int *)(v126 + 48)];
                    v131 = v176;
                    v176();
                    v184 = v130;
                    v128(v130, v129, v123);
                    v132 = &v170[*(int *)(v126 + 48)];
                    v131();
                    v128(v132, v129, v123);
                    v133 = v165;
                    sub_2293B8B34();
                    v134 = *(void (**)(char *, uint64_t))(v124 + 8);
                    v134(v132, v123);
                    v135 = sub_2293B89E4();
                    v137 = v136;
                    v138 = *(void (**)(char *, uint64_t))(v171 + 8);
                    v138(v133, v111);
                    v139 = (_QWORD *)sub_2293582BC();
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v185 = v139;
                    v142 = sub_22936F3E8((uint64_t)v182);
                    v143 = v139[2];
                    v144 = (v141 & 1) == 0;
                    v145 = v143 + v144;
                    if (__OFADD__(v143, v144))
                      goto LABEL_123;
                    v146 = v141;
                    if (v139[3] >= v145)
                    {
                      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                      {
                        if ((v141 & 1) == 0)
                          goto LABEL_108;
                      }
                      else
                      {
                        sub_229323800();
                        v139 = v185;
                        if ((v146 & 1) == 0)
                          goto LABEL_108;
                      }
                    }
                    else
                    {
                      sub_22931FA94(v145, isUniquelyReferenced_nonNull_native);
                      v139 = v185;
                      v147 = sub_22936F3E8((uint64_t)v182);
                      if ((v146 & 1) != (v148 & 1))
                        goto LABEL_131;
                      v142 = v147;
                      if ((v146 & 1) == 0)
                      {
LABEL_108:
                        v139[(v142 >> 6) + 8] |= 1 << v142;
                        ((void (*)(unint64_t, char *, uint64_t))v176)(v139[6] + v142 * v180, v182, v175);
                        v149 = (uint64_t *)(v139[7] + 16 * v142);
                        *v149 = v135;
                        v149[1] = v137;
                        v150 = v139[2];
                        v36 = __OFADD__(v150, 1);
                        v151 = v150 + 1;
                        if (v36)
                          goto LABEL_124;
                        v139[2] = v151;
                        goto LABEL_87;
                      }
                    }
                    v112 = (uint64_t *)(v139[7] + 16 * v142);
                    swift_bridgeObjectRelease();
                    *v112 = v135;
                    v112[1] = v137;
LABEL_87:
                    swift_bridgeObjectRelease();
                    v113 = v175;
                    v138(v182, v175);
                    sub_229355050((uint64_t)v139);
                    sub_2293251F8(v169, &qword_255A43678);
                    v138(v170, v113);
                    v134(v184, v123);
                    v110 = v183;
                    v109 = v181;
                    continue;
                  }
                }
              }
            }
          }
        }
        v33 = v38;
      }
LABEL_22:
      v173 = (v37 - 1) & v37;
      v35 = __clz(__rbit64(v37)) + (v33 << 6);
    }
    v174 = v33;
    v39 = *(_DWORD *)(*(_QWORD *)(v28 + 48) + 4 * v35);
    v40 = *v27;
    v41 = *(_QWORD *)(*v27 + 16);
    if (v41)
    {
      v42 = sub_22936F3B4(v39);
      if ((v43 & 1) != 0)
      {
        sub_229325100(*(_QWORD *)(v40 + 56) + 16 * v42, (uint64_t)&v186);
        v41 = v186;
        if (*((_QWORD *)&v186 + 1) != 1)
          goto LABEL_31;
        goto LABEL_29;
      }
      v41 = 0;
    }
    v186 = v164;
LABEL_29:
    if (!v41)
    {
      sub_2293251F8((uint64_t)&v186, &qword_255A43680);
LABEL_37:
      if (qword_255A41A88 != -1)
        swift_once();
      v55 = sub_2293B8D5C();
      __swift_project_value_buffer(v55, (uint64_t)qword_255A44C60);
      v56 = sub_2293B8D44();
      v57 = sub_2293B9098();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc();
        *(_DWORD *)v58 = v161;
        *(_DWORD *)(v58 + 4) = v39;
        _os_log_impl(&dword_22931B000, v56, v57, "Found invalid property ID %u when creating catchup data", (uint8_t *)v58, 8u);
        MEMORY[0x22E2C869C](v58, -1, -1);
      }

      goto LABEL_5;
    }
LABEL_31:
    Strong = (_QWORD *)swift_weakLoadStrong();
    v45 = *((_QWORD *)&v186 + 1);
    sub_2293251F8((uint64_t)&v186, &qword_255A43680);
    if (!Strong)
      goto LABEL_37;
    v46 = *Strong;
    v47 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 24);
    v162 = Strong;
    v48 = v168;
    v49 = v47(v46, v45);
    v168 = v48;
    if (v48)
    {
      if (qword_255A41A88 != -1)
        swift_once();
      v51 = sub_2293B8D5C();
      __swift_project_value_buffer(v51, (uint64_t)qword_255A44C60);
      v52 = sub_2293B8D44();
      v53 = sub_2293B9098();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc();
        *(_DWORD *)v54 = v161;
        *(_DWORD *)(v54 + 4) = v39;
        _os_log_impl(&dword_22931B000, v52, v53, "Failed to encode property data for property ID %u while creating catchup data", (uint8_t *)v54, 8u);
        MEMORY[0x22E2C869C](v54, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();

      }
      v168 = 0;
      goto LABEL_5;
    }
    v160 = v49;
    v159 = v50;
    sub_229324ECC(v49, v50);
    v59 = sub_2293580B4();
    v60 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v186 = v59;
    v62 = sub_22936F3B4(v39);
    v63 = *(_QWORD *)(v59 + 16);
    v64 = (v61 & 1) == 0;
    v65 = v63 + v64;
    if (__OFADD__(v63, v64))
      goto LABEL_127;
    v66 = (_QWORD *)v59;
    v67 = v61;
    if (*(_QWORD *)(v59 + 24) >= v65)
    {
      if ((v60 & 1) != 0)
      {
        if ((v61 & 1) != 0)
          goto LABEL_51;
      }
      else
      {
        sub_229323654();
        v66 = (_QWORD *)v186;
        if ((v67 & 1) != 0)
          goto LABEL_51;
      }
    }
    else
    {
      sub_22931F7CC(v65, v60);
      v68 = (_QWORD *)v186;
      v69 = sub_22936F3B4(v39);
      if ((v67 & 1) != (v70 & 1))
        goto LABEL_132;
      v62 = v69;
      v66 = v68;
      if ((v67 & 1) != 0)
      {
LABEL_51:
        v77 = v66[7] + 16 * v62;
        v76 = (uint64_t)v66;
        sub_229324F6C(*(_QWORD *)v77, *(_QWORD *)(v77 + 8));
        v72 = v160;
        v73 = v159;
        *(_QWORD *)v77 = v160;
        *(_QWORD *)(v77 + 8) = v73;
        goto LABEL_52;
      }
    }
    v66[(v62 >> 6) + 8] |= 1 << v62;
    *(_DWORD *)(v66[6] + 4 * v62) = v39;
    v71 = (uint64_t *)(v66[7] + 16 * v62);
    v72 = v160;
    v73 = v159;
    *v71 = v160;
    v71[1] = v73;
    v74 = v66[2];
    v36 = __OFADD__(v74, 1);
    v75 = v74 + 1;
    if (v36)
      goto LABEL_129;
    v66[2] = v75;
    v76 = (uint64_t)v66;
LABEL_52:
    swift_bridgeObjectRelease();
    v78 = *(_QWORD *)(v76 + 16);
    v79 = v76;
    if (v78)
      break;
    swift_bridgeObjectRelease();
    v102 = v24;
LABEL_76:
    v103 = v172;
    swift_bridgeObjectRelease();
    sub_229324F6C(v72, v73);
    swift_release();
    *(_QWORD *)(v103 + 8) = v102;
    v28 = v158;
    v27 = v157;
LABEL_5:
    v33 = v174;
    v32 = v173;
  }
  *(_QWORD *)&v186 = v24;
  v80 = v76;
  sub_22936F8F8(0, v78, 0);
  v81 = v186;
  v83 = sub_2293705AC(v76);
  v84 = 0;
  v85 = v79 + 64;
  v86 = *(_BYTE *)(v79 + 32);
  v179 = v82;
  v156 = v79 + 88;
  v180 = v78;
  v181 = v79 + 64;
  while ((v83 & 0x8000000000000000) == 0 && v83 < 1 << v86)
  {
    v89 = (unint64_t)v83 >> 6;
    if ((*(_QWORD *)(v85 + 8 * ((unint64_t)v83 >> 6)) & (1 << v83)) == 0)
      goto LABEL_118;
    if (*(_DWORD *)(v80 + 36) != (_DWORD)v82)
      goto LABEL_119;
    v183 = v84;
    v184 = v82;
    v90 = *(_DWORD *)(*(_QWORD *)(v80 + 48) + 4 * v83);
    v91 = (uint64_t *)(*(_QWORD *)(v80 + 56) + 16 * v83);
    v92 = v81;
    v93 = *v91;
    v94 = v91[1];
    sub_229324ECC(*v91, v94);
    sub_2293B8B70();
    *(_DWORD *)v11 = v90;
    *((_QWORD *)v11 + 1) = v93;
    *((_QWORD *)v11 + 2) = v94;
    v81 = v92;
    *(_QWORD *)&v186 = v92;
    v96 = *(_QWORD *)(v92 + 16);
    v95 = *(_QWORD *)(v92 + 24);
    if (v96 >= v95 >> 1)
    {
      sub_22936F8F8(v95 > 1, v96 + 1, 1);
      v81 = v186;
    }
    *(_QWORD *)(v81 + 16) = v96 + 1;
    sub_22932EA14((uint64_t)v11, v81+ ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80))+ *(_QWORD *)(v177 + 72) * v96, type metadata accessor for ModelData.PropertyDataMap);
    v86 = *(_BYTE *)(v80 + 32);
    v87 = 1 << v86;
    if (v83 >= 1 << v86)
      goto LABEL_120;
    v85 = v181;
    v97 = *(_QWORD *)(v181 + 8 * v89);
    if ((v97 & (1 << v83)) == 0)
      goto LABEL_121;
    if (*(_DWORD *)(v80 + 36) != (_DWORD)v184)
      goto LABEL_122;
    v98 = v97 & (-2 << (v83 & 0x3F));
    if (v98)
    {
      v87 = __clz(__rbit64(v98)) | v83 & 0xFFFFFFFFFFFFFFC0;
      v88 = v180;
    }
    else
    {
      v99 = v89 + 1;
      v100 = (v87 + 63) >> 6;
      v88 = v180;
      if (v89 + 1 < v100)
      {
        v101 = *(_QWORD *)(v181 + 8 * v99);
        if (!v101)
        {
          v99 = v89 + 2;
          if (v89 + 2 >= v100)
            goto LABEL_55;
          v101 = *(_QWORD *)(v181 + 8 * v99);
          if (!v101)
          {
            while (v100 - 3 != v89)
            {
              v101 = *(_QWORD *)(v156 + 8 * v89++);
              if (v101)
              {
                v99 = v89 + 2;
                goto LABEL_68;
              }
            }
            goto LABEL_55;
          }
        }
LABEL_68:
        v87 = __clz(__rbit64(v101)) + (v99 << 6);
      }
    }
LABEL_55:
    v84 = v183 + 1;
    v82 = (char *)v179;
    v83 = v87;
    if (v183 + 1 == v88)
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x24BEE4AF8];
      v29 = v155;
      v102 = v81;
      v72 = v160;
      v73 = v159;
      goto LABEL_76;
    }
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  sub_2293B9380();
  __break(1u);
LABEL_132:
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_22935F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)@<X0>(_BYTE *@<X8>);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t *v63;
  unint64_t *v64;
  unint64_t v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[4];

  v1 = v0;
  v79 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v2 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2293B8B58();
  v81 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v71 - v9;
  v84 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v84);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v12);
  v88 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v83 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v85 = (uint64_t)&v71 - v17;
  v18 = sub_2293B8A20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v87 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v86 = (uint64_t)&v71 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v71 - v24;
  result = swift_weakLoadStrong();
  if (result)
  {
    v27 = result;
    v78 = (uint64_t *)v4;
    v82 = v11;
    v76 = v5;
    if (qword_255A41A88 != -1)
      swift_once();
    v28 = sub_2293B8D5C();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v77 = v29;
    v30 = sub_2293B8D44();
    v31 = sub_2293B90B0();
    v32 = os_log_type_enabled(v30, v31);
    v75 = v8;
    v74 = v2;
    if (v32)
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v90[0] = v72;
      v73 = v27;
      *(_DWORD *)v33 = 136315138;
      v71 = v33 + 4;
      v34 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, v34, v18);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v35 = sub_2293B9308();
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
      v89 = sub_22932DB78(v35, v37, v90);
      v27 = v73;
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22931B000, v30, v31, "SyncedModel: Received ownership of model:%s", v33, 0xCu);
      v38 = v72;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v38, -1, -1);
      MEMORY[0x22E2C869C](v33, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
    v40 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
    v41 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v42(v86, v41, v18);
    v43 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID;
    v42((uint64_t)v87, v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v18);
    v44 = v88;
    v42(v88, v43, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v44, 0, 1, v18);
    v45 = *(_DWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
    v46 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
    v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler + 8);
    if (v46)
    {
      v48 = swift_allocObject();
      *(_QWORD *)(v48 + 16) = v46;
      *(_QWORD *)(v48 + 24) = v47;
      v49 = sub_229324F40;
    }
    else
    {
      v49 = 0;
    }
    v50 = v85;
    sub_2293245A4(v46);
    sub_2293245B4((uint64_t)v49);
    sub_229355B00(v39, v40, v86, v87, v88, v45, v46 == 0, v50);
    v51 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
    v53 = (uint64_t)v82;
    v52(v82, 1, 1, v51);
    sub_2293B8B70();
    v54 = v83;
    sub_229324D74(v50, v83, type metadata accessor for OwnershipChangeBroadcastMessage);
    sub_2293251F8(v53, qword_255A42398);
    sub_22932EA14(v54, v53, type metadata accessor for OwnershipChangeBroadcastMessage);
    swift_storeEnumTagMultiPayload();
    v52((char *)v53, 0, 1, v51);
    sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
    v55 = sub_2293B8C6C();
    v57 = v56;
    v58 = *MEMORY[0x24BDD1F50];
    v60 = v80;
    v59 = v81;
    v61 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 104);
    v62 = v76;
    v61(v80, v58, v76);
    v63 = v78;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))((uint64_t)v78 + *(int *)(v79 + 20), v60, v62);
    *v63 = v55;
    v63[1] = v57;
    v64 = (unint64_t *)(v27 + 16);
    swift_beginAccess();
    v65 = *(_QWORD *)(v27 + 16);
    sub_229324ECC(v55, v57);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v27 + 16) = v65;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v65 = sub_22936EF90(0, *(_QWORD *)(v65 + 16) + 1, 1, v65, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v64 = v65;
    }
    v68 = *(_QWORD *)(v65 + 16);
    v67 = *(_QWORD *)(v65 + 24);
    if (v68 >= v67 >> 1)
    {
      v65 = sub_22936EF90(v67 > 1, v68 + 1, 1, v65, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v64 = v65;
    }
    *(_QWORD *)(v65 + 16) = v68 + 1;
    sub_22932EA14((uint64_t)v78, v65+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v68, type metadata accessor for SyncedModelManager.MessageWrapper);
    swift_endAccess();
    v69 = *(void (**)(char *, uint64_t))(v81 + 8);
    v69(v80, v62);
    v70 = (uint64_t)v75;
    v61(v75, v58, v62);
    sub_2293311A8(v70);
    sub_229324F6C(v55, v57);
    swift_release();
    v69((char *)v70, v62);
    sub_22932E904((uint64_t)v82, type metadata accessor for SyncMessage);
    return sub_22932E904(v85, type metadata accessor for OwnershipChangeBroadcastMessage);
  }
  return result;
}

void sub_22935FF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  unint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v101 = (uint64_t)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v100 = (uint64_t)&v99 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v108 = (uint64_t)&v99 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v109 = (uint64_t)&v99 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v107 = (char *)&v99 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v106 = (char *)&v99 - v15;
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v105 = (uint64_t)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)&v99 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v102 = (char *)&v99 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v104 = (uint64_t)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v99 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v99 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (uint64_t)&v34[*(int *)(v32 + 48)];
  v36 = a1;
  sub_229324E44(a1, (uint64_t)v34, &qword_255A41F70);
  v103 = a2;
  sub_229324E44(a2, v35, &qword_255A41F70);
  v111 = v17;
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v37((uint64_t)v34, 1, v16) == 1)
  {
    if (v37(v35, 1, v16) == 1)
    {
      sub_2293251F8((uint64_t)v34, &qword_255A41F70);
LABEL_8:
      if (qword_255A41A88 != -1)
        swift_once();
      v43 = sub_2293B8D5C();
      __swift_project_value_buffer(v43, (uint64_t)qword_255A44C60);
      v44 = sub_2293B8D44();
      v45 = sub_2293B9098();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_22931B000, v44, v45, "SyncedModel: onChangedOwnership called but ownership didn't change", v46, 2u);
        MEMORY[0x22E2C869C](v46, -1, -1);
      }

      return;
    }
    goto LABEL_6;
  }
  sub_229324E44((uint64_t)v34, (uint64_t)v30, &qword_255A41F70);
  if (v37(v35, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v30, v16);
LABEL_6:
    sub_2293251F8((uint64_t)v34, &qword_255A43648);
    v38 = v109;
    goto LABEL_13;
  }
  v39 = v111;
  v40 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 32))(v102, v35, v16);
  sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v41 = sub_2293B8F00();
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v38 = v109;
  v42(v40, v16);
  v42(v30, v16);
  sub_2293251F8((uint64_t)v34, &qword_255A41F70);
  if ((v41 & 1) != 0)
    goto LABEL_8;
LABEL_13:
  sub_229324E44(v36, (uint64_t)v28, &qword_255A41F70);
  if (v37((uint64_t)v28, 1, v16) == 1)
  {
    v47 = sub_2293B8B40();
    v48 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v106, 1, 1, v47);
    v49 = v108;
    v50 = v103;
  }
  else
  {
    v51 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v99, v28, v16);
    v52 = (uint64_t *)(v110 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants);
    swift_beginAccess();
    v53 = *v52;
    v49 = v108;
    if (*(_QWORD *)(*v52 + 16))
    {
      swift_bridgeObjectRetain();
      v54 = sub_22936F3E8(v51);
      if ((v55 & 1) != 0)
      {
        v56 = v54;
        v57 = *(_QWORD *)(v53 + 56);
        v58 = sub_2293B8B40();
        v59 = *(_QWORD *)(v58 - 8);
        v60 = v57 + *(_QWORD *)(v59 + 72) * v56;
        v48 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v106, v60, v58);
        v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56);
        v49 = v108;
        v61(v48, 0, 1, v58);
      }
      else
      {
        v63 = sub_2293B8B40();
        v48 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v106, 1, 1, v63);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = sub_2293B8B40();
      v48 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v106, 1, 1, v62);
    }
    v50 = v103;
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v51, v16);
  }
  v64 = v50;
  v65 = v104;
  sub_229324E44(v64, v104, &qword_255A41F70);
  if (v37(v65, 1, v16) == 1)
  {
    v66 = sub_2293B8B40();
    v67 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v107, 1, 1, v66);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v105, v65, v16);
    v68 = (uint64_t *)(v110 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants);
    swift_beginAccess();
    v69 = *v68;
    if (*(_QWORD *)(*v68 + 16))
    {
      swift_bridgeObjectRetain();
      v70 = sub_22936F3E8(v105);
      if ((v71 & 1) != 0)
      {
        v72 = v70;
        v73 = *(_QWORD *)(v69 + 56);
        v74 = sub_2293B8B40();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = v73 + *(_QWORD *)(v75 + 72) * v72;
        v67 = (uint64_t)v107;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v107, v76, v74);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v67, 0, 1, v74);
      }
      else
      {
        v78 = sub_2293B8B40();
        v67 = (uint64_t)v107;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v107, 1, 1, v78);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v77 = sub_2293B8B40();
      v67 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v107, 1, 1, v77);
    }
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v105, v16);
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v79 = sub_2293B8D5C();
  __swift_project_value_buffer(v79, (uint64_t)qword_255A44C60);
  sub_229324E44(v48, v38, &qword_255A41BC0);
  sub_229324E44(v67, v49, &qword_255A41BC0);
  v80 = sub_2293B8D44();
  v81 = sub_2293B90B0();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = swift_slowAlloc();
    v105 = swift_slowAlloc();
    v113[0] = v105;
    *(_DWORD *)v82 = 136315394;
    v83 = v100;
    sub_229324E44(v38, v100, &qword_255A41BC0);
    v84 = sub_2293B8B40();
    v85 = *(_QWORD *)(v84 - 8);
    v86 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
    if (v86(v83, 1, v84) == 1)
    {
      sub_2293251F8(v83, &qword_255A41BC0);
      v87 = 0xE300000000000000;
      v88 = 7104878;
    }
    else
    {
      v89 = v102;
      sub_2293B8B34();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
      v88 = sub_2293B89E4();
      v87 = v90;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v89, v16);
    }
    v112 = sub_22932DB78(v88, v87, v113);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    sub_2293251F8(v109, &qword_255A41BC0);
    *(_WORD *)(v82 + 12) = 2080;
    v91 = v108;
    v92 = v101;
    sub_229324E44(v108, v101, &qword_255A41BC0);
    if (v86(v92, 1, v84) == 1)
    {
      sub_2293251F8(v92, &qword_255A41BC0);
      v93 = 0xE300000000000000;
      v48 = (uint64_t)v106;
      v94 = 7104878;
    }
    else
    {
      v95 = v102;
      sub_2293B8B34();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v92, v84);
      v94 = sub_2293B89E4();
      v93 = v96;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v95, v16);
      v48 = (uint64_t)v106;
    }
    v112 = sub_22932DB78(v94, v93, v113);
    sub_2293B9110();
    swift_bridgeObjectRelease();
    sub_2293251F8(v91, &qword_255A41BC0);
    _os_log_impl(&dword_22931B000, v80, v81, "SyncedModel: changed ownership from:%s to:%s", (uint8_t *)v82, 0x16u);
    v97 = v105;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v97, -1, -1);
    MEMORY[0x22E2C869C](v82, -1, -1);

    v67 = (uint64_t)v107;
  }
  else
  {
    sub_2293251F8(v38, &qword_255A41BC0);
    sub_2293251F8(v49, &qword_255A41BC0);

  }
  v98 = *(void (**)(uint64_t, uint64_t))(v110
                                                + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler);
  if (v98)
  {
    swift_retain();
    v98(v48, v67);
    sub_2293245B4((uint64_t)v98);
  }
  sub_2293251F8(v67, &qword_255A41BC0);
  sub_2293251F8(v48, &qword_255A41BC0);
}

void sub_2293609E8(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t (*v69);
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;

  v5 = sub_2293B8A20();
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v86 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v88);
  v91 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v89 = (char *)&v85 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v90 = (uint64_t)&v85 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v93 = (uint64_t)&v85 - v15;
  v16 = sub_2293B8B40();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v92 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A424C0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v85 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v85 - v29;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v97 = a1;
    v98 = v2;
    v99 = a2;
    v32 = v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
    v33 = Strong;
    swift_beginAccess();
    sub_229324E44(v32, (uint64_t)v30, &qword_255A41BC0);
    v96 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v28, v33 + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
    v34 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_229324E44((uint64_t)v30, (uint64_t)v21, &qword_255A41BC0);
    sub_229324E44((uint64_t)v28, v34, &qword_255A41BC0);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v35((uint64_t)v21, 1, v16) == 1)
    {
      sub_2293251F8((uint64_t)v28, &qword_255A41BC0);
      sub_2293251F8((uint64_t)v30, &qword_255A41BC0);
      v36 = v35(v34, 1, v16);
      v37 = v98;
      if (v36 == 1)
      {
        sub_2293251F8((uint64_t)v21, &qword_255A41BC0);
        goto LABEL_19;
      }
    }
    else
    {
      sub_229324E44((uint64_t)v21, (uint64_t)v25, &qword_255A41BC0);
      if (v35(v34, 1, v16) != 1)
      {
        v48 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v92, v34, v16);
        sub_229326FD0(&qword_255A424D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD1F00], MEMORY[0x24BDD1F18]);
        v49 = sub_2293B8F00();
        v50 = *(void (**)(char *, uint64_t))(v17 + 8);
        v50(v48, v16);
        sub_2293251F8((uint64_t)v28, &qword_255A41BC0);
        sub_2293251F8((uint64_t)v30, &qword_255A41BC0);
        v50(v25, v16);
        sub_2293251F8((uint64_t)v21, &qword_255A41BC0);
        v37 = v98;
        if ((v49 & 1) != 0)
        {
LABEL_19:
          v51 = v37 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
          swift_beginAccess();
          v52 = v93;
          sub_229324E44(v51, v93, &qword_255A41F70);
          v54 = v94;
          v53 = v95;
          v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
          v56 = v55(v52, 1, v95);
          sub_2293251F8(v52, &qword_255A41F70);
          if (v56 == 1)
          {
            if (qword_255A41A88 != -1)
              swift_once();
            v57 = sub_2293B8D5C();
            __swift_project_value_buffer(v57, (uint64_t)qword_255A44C60);
            v58 = sub_2293B8D44();
            v59 = sub_2293B90B0();
            if (os_log_type_enabled(v58, v59))
            {
              v60 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v60 = 0;
              _os_log_impl(&dword_22931B000, v58, v59, "SyncedModel: Handling ownership change request. Model is unowned. Returning success.", v60, 2u);
              MEMORY[0x22E2C869C](v60, -1, -1);
            }

            v45 = v97;
            v46 = v99;
            v47 = 1;
LABEL_25:
            sub_229361588(v45, (uint64_t)v46, v47, 1);
LABEL_26:
            swift_release();
            return;
          }
          v61 = v90;
          sub_229324E44(v51, v90, &qword_255A41F70);
          v62 = (uint64_t)v89;
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v89, v37 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v53);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v62, 0, 1, v53);
          v63 = v91;
          v64 = v91 + *(int *)(v88 + 48);
          sub_229324E44(v61, v91, &qword_255A41F70);
          sub_229324E44(v62, v64, &qword_255A41F70);
          if (v55(v63, 1, v53) == 1)
          {
            sub_2293251F8(v62, &qword_255A41F70);
            sub_2293251F8(v61, &qword_255A41F70);
            if (v55(v64, 1, v53) == 1)
            {
              sub_2293251F8(v63, &qword_255A41F70);
LABEL_35:
              v69 = *(uint64_t (**))(v37
                                                         + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
              if (v69)
              {
                swift_retain();
                if ((v69(v99) & 1) != 0)
                {
                  if (qword_255A41A88 != -1)
                    swift_once();
                  v70 = sub_2293B8D5C();
                  __swift_project_value_buffer(v70, (uint64_t)qword_255A44C60);
                  v71 = sub_2293B8D44();
                  v72 = sub_2293B90B0();
                  if (os_log_type_enabled(v71, v72))
                  {
                    v73 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v73 = 0;
                    _os_log_impl(&dword_22931B000, v71, v72, "SyncedModel: Handling ownership change request. Participant is owner and authority. Ownership request handler accepted change. Returning success.", v73, 2u);
                    MEMORY[0x22E2C869C](v73, -1, -1);
                  }

                  v74 = v97;
                  v75 = v99;
                  v76 = 2;
                }
                else
                {
                  if (qword_255A41A88 != -1)
                    swift_once();
                  v81 = sub_2293B8D5C();
                  __swift_project_value_buffer(v81, (uint64_t)qword_255A44C60);
                  v82 = sub_2293B8D44();
                  v83 = sub_2293B90B0();
                  if (os_log_type_enabled(v82, v83))
                  {
                    v84 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v84 = 0;
                    _os_log_impl(&dword_22931B000, v82, v83, "SyncedModel: Handling ownership change request. Participant is owner and authority but ownership request handler refused change. Returning refusal.", v84, 2u);
                    MEMORY[0x22E2C869C](v84, -1, -1);
                  }

                  v74 = v97;
                  v75 = v99;
                  v76 = 3;
                }
                sub_229361588(v74, (uint64_t)v75, v76, 1);
                sub_2293245B4((uint64_t)v69);
                goto LABEL_26;
              }
              if (qword_255A41A88 != -1)
                swift_once();
              v77 = sub_2293B8D5C();
              __swift_project_value_buffer(v77, (uint64_t)qword_255A44C60);
              v78 = sub_2293B8D44();
              v79 = sub_2293B90B0();
              if (os_log_type_enabled(v78, v79))
              {
                v80 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v80 = 0;
                _os_log_impl(&dword_22931B000, v78, v79, "SyncedModel: Handling ownership change request. Participant is owner and authority but no ownership request handler has been registered. Returning refusal.", v80, 2u);
                MEMORY[0x22E2C869C](v80, -1, -1);
              }

              v45 = v97;
              v46 = v99;
              v47 = 3;
              goto LABEL_25;
            }
          }
          else
          {
            v65 = v87;
            sub_229324E44(v63, v87, &qword_255A41F70);
            if (v55(v64, 1, v53) != 1)
            {
              v66 = v86;
              (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v86, v64, v53);
              sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              LODWORD(v98) = sub_2293B8F00();
              v67 = v62;
              v68 = *(void (**)(char *, uint64_t))(v54 + 8);
              v68(v66, v53);
              sub_2293251F8(v67, &qword_255A41F70);
              sub_2293251F8(v61, &qword_255A41F70);
              v68((char *)v65, v53);
              sub_2293251F8(v63, &qword_255A41F70);
              if ((v98 & 1) != 0)
                goto LABEL_35;
LABEL_33:
              sub_2293626E4(v97, (uint64_t)v99);
              goto LABEL_26;
            }
            sub_2293251F8(v62, &qword_255A41F70);
            sub_2293251F8(v61, &qword_255A41F70);
            (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v65, v53);
          }
          sub_2293251F8(v63, &qword_255A43648);
          goto LABEL_33;
        }
LABEL_13:
        if (qword_255A41A88 != -1)
          swift_once();
        v41 = sub_2293B8D5C();
        __swift_project_value_buffer(v41, (uint64_t)qword_255A44C60);
        v42 = sub_2293B8D44();
        v43 = sub_2293B908C();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_22931B000, v42, v43, "SyncedModel: Received ownership change request but user is not authority", v44, 2u);
          MEMORY[0x22E2C869C](v44, -1, -1);
        }

        v45 = v97;
        v46 = v99;
        v47 = 8;
        goto LABEL_25;
      }
      sub_2293251F8((uint64_t)v28, &qword_255A41BC0);
      sub_2293251F8((uint64_t)v30, &qword_255A41BC0);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v16);
    }
    sub_2293251F8((uint64_t)v21, &qword_255A424C0);
    goto LABEL_13;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v38 = sub_2293B8D5C();
  __swift_project_value_buffer(v38, (uint64_t)qword_255A44C60);
  v99 = sub_2293B8D44();
  v39 = sub_2293B9098();
  if (os_log_type_enabled(v99, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_22931B000, v99, v39, "SyncedModel: Received ownership change request but model is not associated with a manager", v40, 2u);
    MEMORY[0x22E2C869C](v40, -1, -1);
  }

}

void sub_229361588(uint64_t a1, uint64_t a2, NSObject *a3, int a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t Strong;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t *v65;
  void (*v66)(char *, uint64_t);
  unint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  BOOL v71;
  int v72;
  uint64_t v73;
  int v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  int v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  char **v119;
  uint64_t v120;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v122;
  unint64_t v123;
  char *v124;
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char **v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  NSObject *v161;
  char v162[8];

  LODWORD(v157) = a4;
  v160 = a2;
  v161 = a3;
  v158 = a1;
  v128 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v129 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v134 = (char **)((char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v137 = sub_2293B8B58();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x24BDAC7A8](v137);
  v135 = (uint64_t *)((char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v147);
  v140 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v131 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v124 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v133 = (char *)&v124 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v15);
  v153 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v146 = (uint64_t)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v132 = (uint64_t)&v124 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v152 = (uint64_t)&v124 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v143 = (uint64_t)&v124 - v24;
  v159 = type metadata accessor for PBUUID(0);
  v156 = *(_QWORD *)(v159 - 8);
  v25 = MEMORY[0x24BDAC7A8](v159);
  v139 = (char **)((char *)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x24BDAC7A8](v25);
  v130 = (char **)((char *)&v124 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v151 = (char **)((char *)&v124 - v30);
  MEMORY[0x24BDAC7A8](v29);
  v138 = (char **)((char *)&v124 - v31);
  v32 = type metadata accessor for OwnershipChangeReplyMessage(0);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v145 = (uint64_t)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v148 = (char *)&v124 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v142 = (uint64_t)&v124 - v37;
  v38 = (uint64_t *)sub_2293B8A20();
  v39 = *(v38 - 1);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v144 = (char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v155 = (char *)&v124 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v149 = (char *)&v124 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v141 = (char *)&v124 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v150 = (char *)&v124 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v124 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v124 - v53;
  v55 = sub_2293B8B40();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v58 = (char *)&v124 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v4;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v124 = v13;
    v61 = v157 & 1;
    v154 = Strong;
    v125 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    v125(v58, Strong + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v55);
    sub_2293B8B34();
    sub_2293B8B34();
    v62 = sub_2293B89F0();
    v157 = v39;
    v63 = *(char **)(v39 + 8);
    ((void (*)(char *, uint64_t *))v63)(v52, v38);
    v64 = v54;
    v65 = v38;
    ((void (*)(char *, uint64_t *))v63)(v64, v38);
    v126 = v56;
    v66 = *(void (**)(char *, uint64_t))(v56 + 8);
    v127 = v55;
    v66(v58, v55);
    if ((v62 & 1) != 0)
    {
      sub_2293649AC((uint64_t)v161, v61, v162);
      v67 = (unint64_t)v59;
      v68 = v61;
      v69 = (uint64_t)v150;
      if (v162[0])
      {
LABEL_6:
        v73 = *(_QWORD *)(v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
        v74 = *(unsigned __int8 *)(v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
        v75 = v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        (*(void (**)(uint64_t, unint64_t, uint64_t *))(v157 + 16))(v69, v75, v65);
        v76 = type metadata accessor for OwnershipChangeRequestMessage(0);
        v77 = v143;
        sub_229324E44(v158 + *(int *)(v76 + 40), v143, &qword_255A41F98);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v77, 1, v159) == 1)
        {
          v78 = v138;
          *v138 = 0;
          v78[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v77, &qword_255A41F98);
        }
        else
        {
          v78 = v138;
          sub_22932EA14(v77, (uint64_t)v138, type metadata accessor for PBUUID);
        }
        v94 = v141;
        sub_229357288();
        sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
        v95 = v142;
        sub_229355860(v73, v74, v69, v94, (uint64_t)v161, v68, *(_DWORD *)(v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter), v142);
        sub_229363CA4(v95);
        swift_release();
        sub_22932E904(v95, type metadata accessor for OwnershipChangeReplyMessage);
        return;
      }
      v70 = *(_DWORD *)(v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
      v71 = __CFADD__(v70, 1);
      v72 = v70 + 1;
      if (!v71)
      {
        *(_DWORD *)(v67 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = v72;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_32;
    }
    LODWORD(v150) = v61;
    v143 = type metadata accessor for OwnershipChangeRequestMessage(0);
    v82 = v158 + *(int *)(v143 + 36);
    v83 = v152;
    sub_229324E44(v82, v152, &qword_255A41F98);
    v67 = *(_QWORD *)(v156 + 48);
    v58 = v59;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v83, 1, v159) == 1)
    {
      v84 = v151;
      *v151 = 0;
      v84[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v83, &qword_255A41F98);
    }
    else
    {
      v84 = v151;
      sub_22932EA14(v83, (uint64_t)v151, type metadata accessor for PBUUID);
    }
    v85 = v160;
    v86 = v127;
    v87 = (uint64_t)v155;
    v88 = (uint64_t)v149;
    sub_229357288();
    sub_22932E904((uint64_t)v84, type metadata accessor for PBUUID);
    v89 = (uint64_t)v153;
    v125(v153, v85, v86);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v89, 0, 1, v86);
    swift_beginAccess();
    sub_22935B468(v89, v88);
    swift_endAccess();
    sub_2293649AC((uint64_t)v161, (char)v150, v162);
    if (!v162[0])
    {
      v90 = v132;
      sub_229324E44(v82, v132, &qword_255A41F98);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v90, 1, v159) == 1)
      {
        v91 = v130;
        *v130 = 0;
        v91[1] = 0;
        sub_2293B8B70();
        v92 = v90;
        v93 = v91;
        sub_2293251F8(v92, &qword_255A41F98);
      }
      else
      {
        v96 = v90;
        v93 = v130;
        sub_22932EA14(v96, (uint64_t)v130, type metadata accessor for PBUUID);
      }
      v97 = (uint64_t)v131;
      v98 = v157;
      v61 = (uint64_t)v124;
      v99 = (uint64_t)v133;
      sub_229357288();
      sub_22932E904((uint64_t)v93, type metadata accessor for PBUUID);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t *))(v98 + 56))(v99, 0, 1, v65);
      v63 = &v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID];
      swift_beginAccess();
      v38 = &qword_255A41F70;
      sub_229324E44((uint64_t)v63, v61, &qword_255A41F70);
      swift_beginAccess();
      sub_22932E988(v99, (uint64_t)v63);
      swift_endAccess();
      sub_229324E44((uint64_t)v63, v97, &qword_255A41F70);
      v62 = (unint64_t)v58;
      sub_22935FF10(v61, v97);
      sub_2293251F8(v97, &qword_255A41F70);
      sub_2293251F8(v99, &qword_255A41F70);
      sub_2293251F8(v61, &qword_255A41F70);
      v100 = *(_DWORD *)&v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter];
      v71 = __CFADD__(v100, 1);
      v101 = v100 + 1;
      if (v71)
      {
LABEL_32:
        __break(1u);
LABEL_33:
        v67 = sub_22936EF90(0, *(_QWORD *)(v67 + 16) + 1, 1, v67, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
        *v38 = v67;
LABEL_28:
        v123 = *(_QWORD *)(v67 + 16);
        v122 = *(_QWORD *)(v67 + 24);
        if (v123 >= v122 >> 1)
        {
          v67 = sub_22936EF90(v122 > 1, v123 + 1, 1, v67, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
          *v38 = v67;
        }
        *(_QWORD *)(v67 + 16) = v123 + 1;
        sub_22932EA14((uint64_t)v134, v67+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(_QWORD *)(v129 + 72) * v123, type metadata accessor for SyncedModelManager.MessageWrapper);
        swift_endAccess();
        sub_229324F6C((uint64_t)v63, v62);
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v136 + 8))(v135, v137);
        sub_22932E904(v61, type metadata accessor for SyncMessage);
        sub_22932E904((uint64_t)v58, type metadata accessor for OwnershipChangeReplyMessage);
        return;
      }
      *(_DWORD *)&v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter] = v101;
      v87 = (uint64_t)v155;
    }
    v102 = *(_QWORD *)&v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type];
    v103 = v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8];
    v104 = &v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid];
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t *))(v157 + 16))(v87, v104, v65);
    v105 = v146;
    sub_229324E44(v158 + *(int *)(v143 + 40), v146, &qword_255A41F98);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v105, 1, v159) == 1)
    {
      v106 = v139;
      *v139 = 0;
      v106[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v105, &qword_255A41F98);
    }
    else
    {
      v106 = v139;
      sub_22932EA14(v105, (uint64_t)v139, type metadata accessor for PBUUID);
    }
    v61 = (uint64_t)v140;
    v107 = v144;
    sub_229357288();
    sub_22932E904((uint64_t)v106, type metadata accessor for PBUUID);
    v108 = *(_DWORD *)&v58[OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter];
    v58 = v148;
    sub_229355860(v102, v103, v87, v107, (uint64_t)v161, (int)v150, v108, (uint64_t)v148);
    v109 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56);
    v110(v61, 1, 1, v109);
    sub_2293B8B70();
    v111 = v145;
    sub_229324D74((uint64_t)v58, v145, type metadata accessor for OwnershipChangeReplyMessage);
    sub_2293251F8(v61, qword_255A42398);
    sub_22932EA14(v111, v61, type metadata accessor for OwnershipChangeReplyMessage);
    swift_storeEnumTagMultiPayload();
    v110(v61, 0, 1, v109);
    sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
    v63 = (char *)sub_2293B8C6C();
    v62 = v112;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A424E8);
    v113 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_2293BA260;
    v125((char *)(v114 + v113), v160, v127);
    v115 = sub_2293450A4(v114);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v116 = v135;
    *v135 = v115;
    v117 = v136;
    v118 = v137;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v136 + 104))(v116, *MEMORY[0x24BDD1F58], v137);
    v119 = v134;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v117 + 16))((uint64_t)v134 + *(int *)(v128 + 20), v116, v118);
    *v119 = v63;
    v119[1] = (char *)v62;
    v120 = v154;
    v38 = (uint64_t *)(v154 + 16);
    swift_beginAccess();
    v67 = *(_QWORD *)(v120 + 16);
    sub_229324ECC((uint64_t)v63, v62);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v120 + 16) = v67;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_28;
    goto LABEL_33;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v79 = sub_2293B8D5C();
  __swift_project_value_buffer(v79, (uint64_t)qword_255A44C60);
  v161 = sub_2293B8D44();
  v80 = sub_2293B9098();
  if (os_log_type_enabled(v161, v80))
  {
    v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v81 = 0;
    _os_log_impl(&dword_22931B000, v161, v80, "SyncedModel: Replying to ownership change request but model is not associated with a manager", v81, 2u);
    MEMORY[0x22E2C869C](v81, -1, -1);
  }

}

void sub_2293626E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t Strong;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  os_log_type_t v62;
  uint8_t *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t *v122;
  unint64_t v123;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  void *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  int v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t aBlock[6];
  uint64_t v196;

  v175 = a2;
  v193 = a1;
  v169 = sub_2293B8E1C();
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v167 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_2293B8E40();
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_2293B8E58();
  v161 = *(_QWORD *)(v163 - 8);
  v5 = MEMORY[0x24BDAC7A8](v163);
  v160 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v162 = (char *)&v147 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43670);
  MEMORY[0x24BDAC7A8](v8);
  v159 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v157 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v172 = (uint64_t *)((char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v158 = sub_2293B8B58();
  v156 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v171 = (uint64_t *)((char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v173);
  v176 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v13);
  v181 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_2293B8B40();
  v187 = *(_QWORD *)(v185 - 8);
  v15 = MEMORY[0x24BDAC7A8](v185);
  v177 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v178 = (char *)&v147 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v18);
  v192 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v152 = (uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v191 = (uint64_t)&v147 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v147 - v25;
  v27 = type metadata accessor for PBUUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v151 = (uint64_t *)((char *)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (uint64_t *)((char *)&v147 - v32);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (uint64_t *)((char *)&v147 - v34);
  v36 = sub_2293B8A20();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v155 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v170 = (char *)&v147 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v188 = (char *)&v147 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v190 = (char *)&v147 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v194 = (char *)&v147 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v147 - v48;
  v50 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  v153 = *(_QWORD *)(v50 - 8);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v174 = (uint64_t)&v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = v52;
  MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v147 - v53;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v182 = Strong;
    v189 = v54;
    v180 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
    v179 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
    v183 = v2;
    v56 = v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v186 = v37;
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v184 = v36;
    v57(v49, v56, v36);
    v58 = type metadata accessor for OwnershipChangeRequestMessage(0);
    v59 = v193;
    sub_229324E44(v193 + *(int *)(v58 + 36), (uint64_t)v26, &qword_255A41F98);
    v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v60(v26, 1, v27) == 1)
    {
      *v35 = 0;
      v35[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v26, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v26, (uint64_t)v35, type metadata accessor for PBUUID);
    }
    sub_229357288();
    sub_22932E904((uint64_t)v35, type metadata accessor for PBUUID);
    v64 = *(_DWORD *)(v59 + 28);
    v65 = v59 + *(int *)(v58 + 40);
    v66 = v191;
    sub_229324E44(v65, v191, &qword_255A41F98);
    v148 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v60;
    v67 = v60((char *)v66, 1, v27);
    v68 = v184;
    v149 = v27;
    v147 = v65;
    if (v67 == 1)
    {
      *v33 = 0;
      v33[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v66, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14(v66, (uint64_t)v33, type metadata accessor for PBUUID);
    }
    v69 = v183;
    v70 = (uint64_t)v189;
    v71 = v186;
    v72 = v190;
    sub_229357288();
    sub_22932E904((uint64_t)v33, type metadata accessor for PBUUID);
    sub_229356034(v180, v179, (uint64_t)v49, v194, v64, v72, v70);
    v73 = v69 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    v74 = v73;
    v75 = v192;
    sub_229324E44(v74, (uint64_t)v192, &qword_255A41F70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v75, 1, v68) == 1)
    {
      v76 = &qword_255A41F70;
LABEL_22:
      sub_2293251F8((uint64_t)v75, v76);
      if (qword_255A41A88 != -1)
        swift_once();
      v86 = sub_2293B8D5C();
      __swift_project_value_buffer(v86, (uint64_t)qword_255A44C60);
      v87 = sub_2293B8D44();
      v88 = sub_2293B9098();
      if (os_log_type_enabled(v87, v88))
      {
        v89 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v89 = 0;
        _os_log_impl(&dword_22931B000, v87, v88, "SyncedModel: couldn't find participant for owner UUID when handling ownership change request", v89, 2u);
        MEMORY[0x22E2C869C](v89, -1, -1);
      }
      swift_release();

      sub_22932E904(v70, type metadata accessor for OwnershipHandoffRequestMessage);
      return;
    }
    v77 = (uint64_t)v188;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v188, v75, v68);
    v78 = (uint64_t *)(v69 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants);
    swift_beginAccess();
    v79 = *v78;
    if (!*(_QWORD *)(*v78 + 16))
    {
      v75 = v181;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v187 + 56))(v181, 1, 1, v185);
LABEL_21:
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v77, v68);
      v76 = &qword_255A41BC0;
      goto LABEL_22;
    }
    swift_bridgeObjectRetain();
    v80 = sub_22936F3E8(v77);
    v81 = v185;
    v82 = v187;
    v75 = v181;
    if ((v83 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v187 + 16))(v181, *(_QWORD *)(v79 + 56) + *(_QWORD *)(v187 + 72) * v80, v185);
      v84 = 0;
    }
    else
    {
      v84 = 1;
    }
    v85 = v177;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v75, v84, 1, v81);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81) == 1)
      goto LABEL_21;
    v90 = v75;
    v91 = v178;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v178, v90, v81);
    if (qword_255A41A88 != -1)
      swift_once();
    v92 = sub_2293B8D5C();
    v93 = (uint64_t *)__swift_project_value_buffer(v92, (uint64_t)qword_255A44C60);
    v194 = *(char **)(v82 + 16);
    ((void (*)(char *, char *, uint64_t))v194)(v85, v91, v81);
    v94 = sub_2293B8D44();
    v95 = sub_2293B90B0();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      v97 = swift_slowAlloc();
      aBlock[0] = v97;
      *(_DWORD *)v96 = 136315138;
      v192 = (char *)v93;
      v98 = v170;
      sub_2293B8B34();
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v99 = sub_2293B9308();
      v100 = v68;
      v102 = v101;
      (*(void (**)(char *, uint64_t))(v186 + 8))(v98, v100);
      v196 = sub_22932DB78(v99, v102, aBlock);
      v81 = v185;
      sub_2293B9110();
      swift_bridgeObjectRelease();
      v103 = v85;
      v104 = *(void (**)(char *, uint64_t))(v187 + 8);
      v104(v103, v81);
      _os_log_impl(&dword_22931B000, v94, v95, "SyncedModel: Authority requesting ownership of model owned by %s", v96, 0xCu);
      swift_arrayDestroy();
      v105 = v97;
      v70 = (uint64_t)v189;
      MEMORY[0x22E2C869C](v105, -1, -1);
      MEMORY[0x22E2C869C](v96, -1, -1);
    }
    else
    {
      v106 = v85;
      v104 = *(void (**)(char *, uint64_t))(v82 + 8);
      v104(v106, v81);
    }

    v107 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    v108 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56);
    v109 = v176;
    v108(v176, 1, 1, v107);
    sub_2293B8B70();
    v110 = v174;
    sub_229324D74(v70, v174, type metadata accessor for OwnershipHandoffRequestMessage);
    sub_2293251F8(v109, qword_255A42398);
    sub_22932EA14(v110, v109, type metadata accessor for OwnershipHandoffRequestMessage);
    swift_storeEnumTagMultiPayload();
    v108(v109, 0, 1, v107);
    sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
    v111 = sub_2293B8C6C();
    v113 = v112;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A424E8);
    v114 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
    v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = xmmword_2293BA260;
    ((void (*)(unint64_t, char *, uint64_t))v194)(v115 + v114, v178, v81);
    v116 = sub_2293450A4(v115);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v117 = v171;
    *v171 = v116;
    v118 = v156;
    v119 = v158;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v156 + 104))(v117, *MEMORY[0x24BDD1F58], v158);
    v120 = v172;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v118 + 16))((uint64_t)v172 + *(int *)(v150 + 20), v117, v119);
    *v120 = v111;
    v120[1] = v113;
    v121 = v182;
    v122 = (unint64_t *)(v182 + 16);
    swift_beginAccess();
    v123 = *(_QWORD *)(v121 + 16);
    v191 = v111;
    v190 = (char *)v113;
    sub_229324ECC(v111, v113);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v121 + 16) = v123;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v123 = sub_22936EF90(0, *(_QWORD *)(v123 + 16) + 1, 1, v123, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v122 = v123;
    }
    v126 = *(_QWORD *)(v123 + 16);
    v125 = *(_QWORD *)(v123 + 24);
    if (v126 >= v125 >> 1)
    {
      v123 = sub_22936EF90(v125 > 1, v126 + 1, 1, v123, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v122 = v123;
    }
    *(_QWORD *)(v123 + 16) = v126 + 1;
    sub_22932EA14((uint64_t)v172, v123+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(_QWORD *)(v157 + 72) * v126, type metadata accessor for SyncedModelManager.MessageWrapper);
    swift_endAccess();
    (*(void (**)(uint64_t *, uint64_t))(v118 + 8))(v171, v119);
    v127 = v152;
    sub_229324E44(v147, v152, &qword_255A41F98);
    v128 = v148(v127, 1, v149);
    v192 = (char *)v104;
    v129 = v151;
    if (v128 == 1)
    {
      *v151 = 0;
      v129[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v127, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14(v127, (uint64_t)v151, type metadata accessor for PBUUID);
    }
    v130 = (uint64_t)v155;
    sub_229357288();
    sub_22932E904((uint64_t)v129, type metadata accessor for PBUUID);
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    v132 = (uint64_t)v159;
    v133 = (uint64_t)&v159[*(int *)(v131 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v194)(v159, v175, v81);
    sub_229324D74(v193, v133, type metadata accessor for OwnershipChangeRequestMessage);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v132, 0, 1, v131);
    v134 = v183;
    swift_beginAccess();
    sub_22935B5F4(v132, v130);
    swift_endAccess();
    v135 = *(id *)(v182 + 40);
    v136 = v160;
    sub_2293B8E4C();
    v137 = v162;
    MEMORY[0x22E2C7C40](v136, 2.0);
    v194 = *(char **)(v161 + 8);
    v138 = v136;
    v139 = v163;
    ((void (*)(char *, uint64_t))v194)(v138, v163);
    sub_229324D74((uint64_t)v189, v110, type metadata accessor for OwnershipHandoffRequestMessage);
    v140 = (*(unsigned __int8 *)(v153 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
    v141 = swift_allocObject();
    *(_QWORD *)(v141 + 16) = v134;
    sub_22932EA14(v110, v141 + v140, type metadata accessor for OwnershipHandoffRequestMessage);
    aBlock[4] = (uint64_t)sub_22937104C;
    aBlock[5] = v141;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_229325F20;
    aBlock[3] = (uint64_t)&block_descriptor_26;
    v142 = _Block_copy(aBlock);
    swift_retain();
    v143 = v164;
    sub_2293B8E34();
    v196 = MEMORY[0x24BEE4AF8];
    sub_229326FD0(&qword_255A41F38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F40);
    v144 = v81;
    sub_229343CBC((unint64_t *)&qword_255A41F48, &qword_255A41F40, MEMORY[0x24BEE12C8]);
    v145 = v167;
    v146 = v169;
    sub_2293B9128();
    MEMORY[0x22E2C7EA4](v137, v143, v145, v142);
    _Block_release(v142);

    sub_229324F6C(v191, (unint64_t)v190);
    swift_release();
    (*(void (**)(char *, uint64_t))(v168 + 8))(v145, v146);
    (*(void (**)(char *, uint64_t))(v165 + 8))(v143, v166);
    ((void (*)(char *, uint64_t))v194)(v137, v139);
    sub_22932E904(v176, type metadata accessor for SyncMessage);
    ((void (*)(char *, uint64_t))v192)(v178, v144);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v188, v184);
    sub_22932E904((uint64_t)v189, type metadata accessor for OwnershipHandoffRequestMessage);
    swift_release();
  }
  else
  {
    if (qword_255A41A88 != -1)
      swift_once();
    v61 = sub_2293B8D5C();
    __swift_project_value_buffer(v61, (uint64_t)qword_255A44C60);
    v194 = (char *)sub_2293B8D44();
    v62 = sub_2293B9098();
    if (os_log_type_enabled((os_log_t)v194, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_22931B000, (os_log_t)v194, v62, "SyncedModel: Asking owner for handoff but model is not associated with a manager", v63, 2u);
      MEMORY[0x22E2C869C](v63, -1, -1);
    }

  }
}

void sub_229363CA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint8_t *v72;
  NSObject *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  void (*v91)(uint64_t *);
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  NSObject *v100;
  _QWORD v101[2];
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120[3];
  uint64_t v121;
  char v122[32];

  v113 = type metadata accessor for OwnershipChangeReplyMessage(0);
  MEMORY[0x24BDAC7A8](v113);
  v111 = (uint64_t)v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43660);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v110 = (uint64_t)v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v112 = (uint64_t)v101 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v105 = (uint64_t)v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v109 = (uint64_t)v101 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v101 - v12;
  v114 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v114 - 8);
  v15 = MEMORY[0x24BDAC7A8](v114);
  v104 = (_QWORD *)((char *)v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v108 = (_QWORD *)((char *)v101 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t)v101 - v19;
  v21 = sub_2293B8A20();
  v22 = *(_QWORD *)(v21 - 8);
  v115 = v21;
  v116 = v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v107 = (char *)v101 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v101 - v27;
  v29 = type metadata accessor for CachedOwnershipRequest(0);
  v119 = *(NSObject **)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v106 = (uint64_t)v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v101 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v101 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)v101 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)v101 - v41;
  v43 = *(_QWORD *)(a1 + 16);
  v117 = a1;
  sub_2293649AC(v43, *(_BYTE *)(a1 + 24), v122);
  if (!v122[0])
  {
    v52 = v115;
    if (qword_255A41A88 != -1)
      swift_once();
    v28 = (char *)v29;
    v53 = sub_2293B8D5C();
    __swift_project_value_buffer(v53, (uint64_t)qword_255A44C60);
    v54 = sub_2293B8D44();
    v55 = sub_2293B90B0();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_22931B000, v54, v55, "SyncedModel: Handling ownership request reply. Request was success!", v56, 2u);
      MEMORY[0x22E2C869C](v56, -1, -1);
    }

    v57 = v118;
    v58 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v42, v118 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v42, 0, 1, v52);
    v29 = v57 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    sub_229324E44(v29, (uint64_t)v40, &qword_255A41F70);
    swift_beginAccess();
    sub_22932E988((uint64_t)v42, v29);
    swift_endAccess();
    sub_229324E44(v29, (uint64_t)v37, &qword_255A41F70);
    sub_22935FF10((uint64_t)v40, (uint64_t)v37);
    sub_2293251F8((uint64_t)v37, &qword_255A41F70);
    sub_2293251F8((uint64_t)v42, &qword_255A41F70);
    sub_2293251F8((uint64_t)v40, &qword_255A41F70);
    *(_DWORD *)(v57 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = *(_DWORD *)(v117 + 28);
    v59 = v57 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingReply;
    swift_beginAccess();
    v117 = v59;
    v60 = *(_QWORD *)v59;
    v14 = *(_QWORD *)v59 + 64;
    v61 = 1 << *(_BYTE *)(*(_QWORD *)v59 + 32);
    v62 = -1;
    if (v61 < 64)
      v62 = ~(-1 << v61);
    v63 = v62 & *(_QWORD *)(*(_QWORD *)v59 + 64);
    v13 = (char *)((unint64_t)(v61 + 63) >> 6);
    swift_bridgeObjectRetain();
    v20 = 0;
    while (1)
    {
      if (v63)
      {
        v64 = __clz(__rbit64(v63));
        v63 &= v63 - 1;
        v65 = v64 | (v20 << 6);
        v66 = v28;
      }
      else
      {
        v67 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
          goto LABEL_60;
        }
        if (v67 >= (uint64_t)v13)
          goto LABEL_39;
        v66 = v28;
        v68 = *(_QWORD *)(v14 + 8 * v67);
        ++v20;
        if (!v68)
        {
          v20 = v67 + 1;
          if (v67 + 1 >= (uint64_t)v13)
            goto LABEL_39;
          v68 = *(_QWORD *)(v14 + 8 * v20);
          if (!v68)
          {
            v20 = v67 + 2;
            if (v67 + 2 >= (uint64_t)v13)
              goto LABEL_39;
            v68 = *(_QWORD *)(v14 + 8 * v20);
            if (!v68)
            {
              v20 = v67 + 3;
              if (v67 + 3 >= (uint64_t)v13)
                goto LABEL_39;
              v68 = *(_QWORD *)(v14 + 8 * v20);
              if (!v68)
              {
                v69 = v67 + 4;
                if (v69 >= (uint64_t)v13)
                {
LABEL_39:
                  swift_release();
                  *(_QWORD *)v117 = MEMORY[0x24BEE4B00];
                  swift_bridgeObjectRelease();
                  sub_22935F570();
                  return;
                }
                v68 = *(_QWORD *)(v14 + 8 * v69);
                if (!v68)
                {
                  while (1)
                  {
                    v20 = v69 + 1;
                    if (__OFADD__(v69, 1))
                      break;
                    if (v20 >= (uint64_t)v13)
                      goto LABEL_39;
                    v68 = *(_QWORD *)(v14 + 8 * v20);
                    ++v69;
                    if (v68)
                      goto LABEL_33;
                  }
LABEL_60:
                  __break(1u);
LABEL_61:
                  swift_once();
LABEL_4:
                  v44 = sub_2293B8D5C();
                  v101[1] = __swift_project_value_buffer(v44, (uint64_t)qword_255A44C60);
                  v45 = sub_2293B8D44();
                  v46 = sub_2293B90B0();
                  if (os_log_type_enabled(v45, v46))
                  {
                    v47 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v47 = 0;
                    _os_log_impl(&dword_22931B000, v45, v46, "SyncedModel: Handling ownership request reply. Request was refused.", v47, 2u);
                    MEMORY[0x22E2C869C](v47, -1, -1);
                  }

                  v48 = v117;
                  v49 = v117 + *(int *)(v113 + 36);
                  sub_229324E44(v49, (uint64_t)v13, &qword_255A41F98);
                  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
                  v51 = v114;
                  v102 = v50;
                  if (v50((uint64_t)v13, 1, v114) == 1)
                  {
                    *(_QWORD *)v20 = 0;
                    *(_QWORD *)(v20 + 8) = 0;
                    sub_2293B8B70();
                    sub_2293251F8((uint64_t)v13, &qword_255A41F98);
                  }
                  else
                  {
                    sub_22932EA14((uint64_t)v13, v20, type metadata accessor for PBUUID);
                  }
                  v73 = v119;
                  sub_229357288();
                  sub_22932E904(v20, type metadata accessor for PBUUID);
                  v74 = (uint64_t *)(v118
                                  + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingReply);
                  swift_beginAccess();
                  v75 = *v74;
                  if (*(_QWORD *)(*v74 + 16))
                  {
                    swift_bridgeObjectRetain();
                    v76 = sub_22936F3E8((uint64_t)v28);
                    v78 = v112;
                    if ((v77 & 1) != 0)
                    {
                      sub_229324D74(*(_QWORD *)(v75 + 56) + (unint64_t)v73[9].isa * v76, v112, type metadata accessor for CachedOwnershipRequest);
                      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v73[7].isa)(v78, 0, 1, v29);
                    }
                    else
                    {
                      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73[7].isa)(v112, 1, 1, v29);
                    }
                    v79 = v78;
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v79 = v112;
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73[7].isa)(v112, 1, 1, v29);
                  }
                  v80 = *(void (**)(char *, uint64_t))(v116 + 8);
                  v81 = v28;
                  v82 = v115;
                  v80(v81, v115);
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73[6].isa)(v79, 1, v29) == 1)
                  {
                    sub_2293251F8(v79, &qword_255A43660);
                    v83 = v111;
                    sub_229324D74(v48, v111, type metadata accessor for OwnershipChangeReplyMessage);
                    v84 = sub_2293B8D44();
                    v85 = sub_2293B9098();
                    if (os_log_type_enabled(v84, v85))
                    {
                      v86 = (uint8_t *)swift_slowAlloc();
                      v119 = swift_slowAlloc();
                      v120[0] = (uint64_t)v119;
                      *(_DWORD *)v86 = 136315138;
                      v87 = v83 + *(int *)(v113 + 36);
                      v88 = v105;
                      sub_229324E44(v87, v105, &qword_255A41F98);
                      if (v102(v88, 1, v114) == 1)
                      {
                        v89 = v104;
                        *v104 = 0;
                        v89[1] = 0;
                        sub_2293B8B70();
                        sub_2293251F8(v88, &qword_255A41F98);
                      }
                      else
                      {
                        v89 = v104;
                        sub_22932EA14(v88, (uint64_t)v104, type metadata accessor for PBUUID);
                      }
                      v96 = v103;
                      sub_229357288();
                      sub_22932E904((uint64_t)v89, type metadata accessor for PBUUID);
                      v97 = sub_2293B89E4();
                      v99 = v98;
                      v80(v96, v82);
                      v121 = sub_22932DB78(v97, v99, v120);
                      sub_2293B9110();
                      swift_bridgeObjectRelease();
                      sub_22932E904(v111, type metadata accessor for OwnershipChangeReplyMessage);
                      _os_log_impl(&dword_22931B000, v84, v85, "SyncedModel: got OwnershipRequestReply for unknown request %s", v86, 0xCu);
                      v100 = v119;
                      swift_arrayDestroy();
                      MEMORY[0x22E2C869C](v100, -1, -1);
                      MEMORY[0x22E2C869C](v86, -1, -1);
                    }
                    else
                    {
                      sub_22932E904(v83, type metadata accessor for OwnershipChangeReplyMessage);
                    }

                  }
                  else
                  {
                    v90 = v106;
                    sub_22932EA14(v79, v106, type metadata accessor for CachedOwnershipRequest);
                    v91 = *(void (**)(uint64_t *))(v90 + *(int *)(v29 + 20));
                    LOBYTE(v120[0]) = 1;
                    swift_retain();
                    v91(v120);
                    swift_release();
                    v92 = v109;
                    sub_229324E44(v49, v109, &qword_255A41F98);
                    if (v102(v92, 1, v51) == 1)
                    {
                      v93 = v108;
                      *v108 = 0;
                      v93[1] = 0;
                      sub_2293B8B70();
                      sub_2293251F8(v92, &qword_255A41F98);
                    }
                    else
                    {
                      v93 = v108;
                      sub_22932EA14(v92, (uint64_t)v108, type metadata accessor for PBUUID);
                    }
                    v94 = (uint64_t)v107;
                    sub_229357288();
                    sub_22932E904((uint64_t)v93, type metadata accessor for PBUUID);
                    swift_beginAccess();
                    v95 = v110;
                    sub_22931E0D4(v94, v110);
                    v80((char *)v94, v82);
                    sub_2293251F8(v95, &qword_255A43660);
                    swift_endAccess();
                    sub_22932E904(v90, type metadata accessor for CachedOwnershipRequest);
                  }
                  return;
                }
                v20 = v69;
              }
            }
          }
        }
LABEL_33:
        v63 = (v68 - 1) & v68;
        v65 = __clz(__rbit64(v68)) + (v20 << 6);
      }
      sub_229324D74(*(_QWORD *)(v60 + 56) + (unint64_t)v119[9].isa * v65, (uint64_t)v33, type metadata accessor for CachedOwnershipRequest);
      v29 = *(_QWORD *)&v33[*((int *)v66 + 5)];
      swift_retain();
      sub_22932E904((uint64_t)v33, type metadata accessor for CachedOwnershipRequest);
      LOBYTE(v121) = 0;
      ((void (*)(uint64_t *))v29)(&v121);
      swift_release();
    }
  }
  if (v122[0] == 1)
  {
    if (qword_255A41A88 != -1)
      goto LABEL_61;
    goto LABEL_4;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v70 = sub_2293B8D5C();
  __swift_project_value_buffer(v70, (uint64_t)qword_255A44C60);
  v119 = sub_2293B8D44();
  v71 = sub_2293B9098();
  if (os_log_type_enabled(v119, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_22931B000, v119, v71, "SyncedModel: got timedOut result when paring OwnershipRequestReplyMessage", v72, 2u);
    MEMORY[0x22E2C869C](v72, -1, -1);
  }

}

void sub_2293649AC(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if ((a2 & 1) != 0)
    __asm { BR              X10 }
  if (qword_255A41A88 != -1)
    swift_once();
  v4 = sub_2293B8D5C();
  __swift_project_value_buffer(v4, (uint64_t)qword_255A44C60);
  v5 = sub_2293B8D44();
  v6 = sub_2293B9098();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_22931B000, v5, v6, "SyncedModel: unrecognized OwnershipChangeResultType", v7, 2u);
    MEMORY[0x22E2C869C](v7, -1, -1);
  }

  *a3 = 1;
}

void sub_229364CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  const char *v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t, uint64_t);
  int v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[2];
  int v120;
  os_log_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  os_log_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144[2];
  uint64_t v145;

  v140 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v4);
  v134 = (char *)v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v6);
  v133 = (uint64_t)v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for PBUUID(0);
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v9 = (char *)v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v126);
  v129 = (char *)v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v127 = (uint64_t)v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v136 = (uint64_t)v119 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v137 = (os_log_t)((char *)v119 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v119 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v119 - v21;
  v128 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  MEMORY[0x24BDAC7A8](v128);
  v24 = (char *)v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2293B8A20();
  v138 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v130 = (char *)v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v135 = (char *)v119 - v28;
  v142 = sub_2293B8B40();
  v141 = *(_QWORD *)(v142 - 8);
  v29 = MEMORY[0x24BDAC7A8](a1);
  v31 = (char *)v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)v119 - v35;
  v37 = *(_DWORD *)(a1 + 12);
  v139 = v2;
  v38 = *(_DWORD *)(v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
  if (v37 < v38)
  {
    if (qword_255A41A88 != -1)
      swift_once();
    v39 = sub_2293B8D5C();
    __swift_project_value_buffer(v39, (uint64_t)qword_255A44C60);
    v40 = v141;
    v41 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v36, v140, v142);
    v42 = v139;
    swift_retain_n();
    v43 = sub_2293B8D44();
    v44 = sub_2293B90B0();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v137 = v43;
      v47 = v46;
      v140 = swift_slowAlloc();
      v144[0] = v140;
      *(_DWORD *)v47 = 136315394;
      v134 = (char *)(v47 + 4);
      LODWORD(v136) = v45;
      v48 = v42 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v49 = v138;
      v50 = v135;
      (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v135, v48, v25);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v51 = sub_2293B9308();
      v53 = v52;
      v54 = *(void (**)(char *, uint64_t))(v49 + 8);
      v54(v50, v25);
      v143 = sub_22932DB78(v51, v53, v144);
      sub_2293B9110();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      sub_2293B8B34();
      v55 = sub_2293B9308();
      v57 = v56;
      v54(v50, v25);
      v143 = sub_22932DB78(v55, v57, v144);
      sub_2293B9110();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v36, v142);
      v58 = "SyncedModel: Received ownership change broadcast for model:%s from participant:%s but was for previous ownership count";
LABEL_6:
      v59 = v137;
      _os_log_impl(&dword_22931B000, v137, (os_log_type_t)v136, v58, (uint8_t *)v47, 0x16u);
      v60 = v140;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v60, -1, -1);
      MEMORY[0x22E2C869C](v47, -1, -1);

      return;
    }
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v41);
LABEL_15:

    return;
  }
  v124 = v34;
  v125 = v33;
  sub_229324D74(v33, (uint64_t)v24, type metadata accessor for OwnershipChangeBroadcastMessage);
  if (v37 == v38)
  {
    sub_2293574E0((uint64_t)v22);
    sub_22932E904((uint64_t)v24, type metadata accessor for OwnershipChangeBroadcastMessage);
    v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48);
    v62 = v61(v22, 1, v25);
    sub_2293251F8((uint64_t)v22, &qword_255A41F70);
    v63 = v139;
    v64 = v142;
    if (v62 == 1)
    {
      v65 = v139 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
      swift_beginAccess();
      sub_229324E44(v65, (uint64_t)v20, &qword_255A41F70);
      LODWORD(v65) = v61(v20, 1, v25);
      sub_2293251F8((uint64_t)v20, &qword_255A41F70);
      if ((_DWORD)v65 != 1)
      {
        if (qword_255A41A88 != -1)
          swift_once();
        v66 = sub_2293B8D5C();
        __swift_project_value_buffer(v66, (uint64_t)qword_255A44C60);
        v67 = v141;
        v68 = v124;
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v141 + 16))(v124, v140, v64);
        swift_retain_n();
        v43 = sub_2293B8D44();
        v69 = sub_2293B90B0();
        v70 = v69;
        if (os_log_type_enabled(v43, v69))
        {
          v71 = swift_slowAlloc();
          v137 = v43;
          v47 = v71;
          v140 = swift_slowAlloc();
          v144[0] = v140;
          *(_DWORD *)v47 = 136315394;
          v134 = (char *)(v47 + 4);
          LODWORD(v136) = v70;
          v72 = v63 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
          swift_beginAccess();
          v73 = v138;
          v74 = v135;
          (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v135, v72, v25);
          sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v75 = sub_2293B9308();
          v77 = v76;
          v78 = *(void (**)(char *, uint64_t))(v73 + 8);
          v78(v74, v25);
          v143 = sub_22932DB78(v75, v77, v144);
          sub_2293B9110();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2080;
          sub_2293B8B34();
          v79 = sub_2293B9308();
          v81 = v80;
          v78(v74, v25);
          v143 = sub_22932DB78(v79, v81, v144);
          sub_2293B9110();
          swift_bridgeObjectRelease();
          (*(void (**)(_QWORD *, uint64_t))(v141 + 8))(v68, v142);
          v58 = "SyncedModel: Received ownership change broadcast for model:%s from participant:%s but was for local rele"
                "aseOwnership that conflicts with a valid handoff";
          goto LABEL_6;
        }
        swift_release_n();
        (*(void (**)(_QWORD *, uint64_t))(v67 + 8))(v68, v64);
        goto LABEL_15;
      }
    }
  }
  else
  {
    sub_22932E904((uint64_t)v24, type metadata accessor for OwnershipChangeBroadcastMessage);
    v63 = v139;
    v64 = v142;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v124 = v9;
  v82 = sub_2293B8D5C();
  __swift_project_value_buffer(v82, (uint64_t)qword_255A44C60);
  v83 = v141;
  v123 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 16);
  v123(v31, v140, v64);
  swift_retain_n();
  v84 = sub_2293B8D44();
  v85 = sub_2293B90B0();
  v86 = v85;
  if (os_log_type_enabled(v84, v85))
  {
    v87 = swift_slowAlloc();
    v122 = swift_slowAlloc();
    v145 = v122;
    *(_DWORD *)v87 = 136315394;
    v119[1] = v87 + 4;
    v121 = v84;
    v88 = v63 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v89 = v138;
    v90 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
    v120 = v86;
    v91 = v135;
    v90(v135, v88, v25);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v92 = sub_2293B9308();
    v94 = v93;
    v95 = *(void (**)(char *, uint64_t))(v89 + 8);
    v95(v91, v25);
    v144[0] = sub_22932DB78(v92, v94, &v145);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 12) = 2080;
    sub_2293B8B34();
    v96 = sub_2293B9308();
    v98 = v97;
    v95(v91, v25);
    v144[0] = sub_22932DB78(v96, v98, &v145);
    v63 = v139;
    sub_2293B9110();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v31, v142);
    v99 = v121;
    _os_log_impl(&dword_22931B000, v121, (os_log_type_t)v120, "SyncedModel: Received ownership change broadcast for model:%s from participant:%s", (uint8_t *)v87, 0x16u);
    v100 = v122;
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v100, -1, -1);
    MEMORY[0x22E2C869C](v87, -1, -1);

  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v31, v64);

    v89 = v138;
  }
  v101 = (uint64_t)v129;
  v102 = v136;
  v103 = v137;
  v104 = v63 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  v105 = &qword_255A41F70;
  sub_229324E44(v104, (uint64_t)v103, &qword_255A41F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v102, v63 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v102, 0, 1, v25);
  v106 = v101 + *(int *)(v126 + 48);
  sub_229324E44((uint64_t)v103, v101, &qword_255A41F70);
  sub_229324E44(v102, v106, &qword_255A41F70);
  v107 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  v108 = v107(v101, 1, v25);
  v109 = v127;
  if (v108 == 1)
  {
    sub_2293251F8(v102, &qword_255A41F70);
    sub_2293251F8((uint64_t)v103, &qword_255A41F70);
    if (v107(v106, 1, v25) != 1)
      v105 = &qword_255A43648;
  }
  else
  {
    sub_229324E44(v101, v127, &qword_255A41F70);
    if (v107(v106, 1, v25) == 1)
    {
      sub_2293251F8(v136, &qword_255A41F70);
      sub_2293251F8((uint64_t)v137, &qword_255A41F70);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v109, v25);
      v105 = &qword_255A43648;
    }
    else
    {
      v110 = v135;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v135, v106, v25);
      sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      sub_2293B8F00();
      v111 = *(void (**)(char *, uint64_t))(v89 + 8);
      v111(v110, v25);
      v105 = &qword_255A41F70;
      sub_2293251F8(v136, &qword_255A41F70);
      sub_2293251F8((uint64_t)v137, &qword_255A41F70);
      v111((char *)v109, v25);
    }
  }
  v112 = v132;
  v113 = v142;
  sub_2293251F8(v101, v105);
  v114 = v133;
  sub_229324E44(v125 + *(int *)(v128 + 36), v133, &qword_255A41F98);
  v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v114, 1, v112);
  v116 = v124;
  if (v115 == 1)
  {
    *v124 = 0;
    v116[1] = 0;
    sub_2293B8B70();
    sub_2293251F8(v114, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14(v114, (uint64_t)v124, type metadata accessor for PBUUID);
  }
  v117 = (uint64_t)v130;
  sub_229357288();
  sub_22932E904((uint64_t)v116, type metadata accessor for PBUUID);
  v118 = (uint64_t)v134;
  v123(v134, v140, v113);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v118, 0, 1, v113);
  swift_beginAccess();
  sub_22935B468(v118, v117);
  swift_endAccess();
}

void sub_229365BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t (*v27)(uint64_t);
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  const char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v40 = a1;
  v41 = a2;
  v3 = sub_2293B8A20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v39 - v16;
  v18 = v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v18, (uint64_t)v17, &qword_255A41F70);
  v42 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, v2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  v19 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_229324E44((uint64_t)v17, (uint64_t)v8, &qword_255A41F70);
  sub_229324E44((uint64_t)v15, v19, &qword_255A41F70);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v8, 1, v3) == 1)
  {
    sub_2293251F8((uint64_t)v15, &qword_255A41F70);
    sub_2293251F8((uint64_t)v17, &qword_255A41F70);
    if (v20(v19, 1, v3) == 1)
    {
      sub_2293251F8((uint64_t)v8, &qword_255A41F70);
      v22 = v41;
      v21 = v42;
      v23 = v40;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_229324E44((uint64_t)v8, (uint64_t)v12, &qword_255A41F70);
  if (v20(v19, 1, v3) == 1)
  {
    sub_2293251F8((uint64_t)v15, &qword_255A41F70);
    sub_2293251F8((uint64_t)v17, &qword_255A41F70);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
LABEL_6:
    sub_2293251F8((uint64_t)v8, &qword_255A43648);
    v22 = v41;
    v23 = v40;
LABEL_14:
    if (qword_255A41A88 != -1)
      swift_once();
    v33 = sub_2293B8D5C();
    __swift_project_value_buffer(v33, (uint64_t)qword_255A44C60);
    v34 = sub_2293B8D44();
    v35 = sub_2293B90B0();
    if (!os_log_type_enabled(v34, v35))
      goto LABEL_19;
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    v37 = "SyncedModel: Handling ownership handoff request. Participant is not owner. Refusing.";
    goto LABEL_18;
  }
  v24 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v39, v19, v3);
  sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v25 = sub_2293B8F00();
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v24, v3);
  sub_2293251F8((uint64_t)v15, &qword_255A41F70);
  sub_2293251F8((uint64_t)v17, &qword_255A41F70);
  v26(v12, v3);
  sub_2293251F8((uint64_t)v8, &qword_255A41F70);
  v22 = v41;
  v21 = v42;
  v23 = v40;
  if ((v25 & 1) == 0)
    goto LABEL_14;
LABEL_8:
  v27 = *(uint64_t (**)(uint64_t))(v21
                                          + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
  if (!v27)
  {
    if (qword_255A41A88 != -1)
      swift_once();
    v38 = sub_2293B8D5C();
    __swift_project_value_buffer(v38, (uint64_t)qword_255A44C60);
    v34 = sub_2293B8D44();
    v35 = sub_2293B90B0();
    if (!os_log_type_enabled(v34, v35))
      goto LABEL_19;
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    v37 = "SyncedModel: Handling ownership handoff request. No ownership request handler. Refusing.";
LABEL_18:
    _os_log_impl(&dword_22931B000, v34, v35, v37, v36, 2u);
    MEMORY[0x22E2C869C](v36, -1, -1);
LABEL_19:

    sub_229366184(v23, v22, 0);
    return;
  }
  swift_retain();
  v28 = v27(v22);
  if (qword_255A41A88 != -1)
    swift_once();
  v29 = sub_2293B8D5C();
  __swift_project_value_buffer(v29, (uint64_t)qword_255A44C60);
  v30 = sub_2293B8D44();
  v31 = sub_2293B90B0();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v32 = 67109120;
    v43 = v28 & 1;
    sub_2293B9110();
    _os_log_impl(&dword_22931B000, v30, v31, "SyncedModel: Handling ownership handoff request. Ownership request handler result is allowed:%{BOOL}d", v32, 8u);
    MEMORY[0x22E2C869C](v32, -1, -1);
  }

  sub_229366184(v23, v22, v28 & 1);
  sub_2293245B4((uint64_t)v27);
}

void sub_229366184(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(NSObject *, uint64_t, uint64_t, uint64_t);
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t Strong;
  uint64_t v82;
  NSObject *v83;

  v4 = v3;
  v79 = a3;
  v66 = a2;
  v75 = a1;
  v67 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v68 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v74 = (uint64_t *)((char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_2293B8B58();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v80);
  v83 = ((char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v65 - v12;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t *)((char *)&v65 - v19);
  v21 = sub_2293B8A20();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v77 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v76 = (char *)&v65 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v65 - v27;
  v29 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v78 = (uint64_t)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v82 = (uint64_t)&v65 - v32;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v73 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
    v72 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
    v33 = v4 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v33, v21);
    v34 = type metadata accessor for OwnershipHandoffRequestMessage(0);
    v35 = v75;
    sub_229324E44(v75 + *(int *)(v34 + 32), (uint64_t)v13, &qword_255A41F98);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v36(v13, 1, v14) == 1)
    {
      *v20 = 0;
      v20[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v13, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v13, (uint64_t)v20, type metadata accessor for PBUUID);
    }
    v40 = v82;
    v41 = v76;
    sub_229357288();
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
    sub_229324E44(v35 + *(int *)(v34 + 36), (uint64_t)v11, &qword_255A41F98);
    if (v36(v11, 1, v14) == 1)
    {
      *v18 = 0;
      v18[1] = 0;
      sub_2293B8B70();
      sub_2293251F8((uint64_t)v11, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBUUID);
    }
    v42 = v77;
    sub_229357288();
    sub_22932E904((uint64_t)v18, type metadata accessor for PBUUID);
    sub_22935634C(v73, v72, (uint64_t)v28, v41, v79 & 1, v42, v40);
    v43 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    v44 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
    v45 = v83;
    v44(v83, 1, 1, v43);
    sub_2293B8B70();
    v46 = v78;
    sub_229324D74(v40, v78, type metadata accessor for OwnershipHandoffReplyMessage);
    sub_2293251F8((uint64_t)v45, qword_255A42398);
    sub_22932EA14(v46, (uint64_t)v45, type metadata accessor for OwnershipHandoffReplyMessage);
    swift_storeEnumTagMultiPayload();
    v44(v45, 0, 1, v43);
    sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
    v47 = sub_2293B8C6C();
    v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A424E8);
    v50 = sub_2293B8B40();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2293BA260;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v51 + 16))(v53 + v52, v66, v50);
    v54 = sub_2293450A4(v53);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v55 = v69;
    *v69 = v54;
    v56 = v70;
    v57 = v71;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v70 + 104))(v55, *MEMORY[0x24BDD1F58], v71);
    v58 = v74;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v56 + 16))((uint64_t)v74 + *(int *)(v67 + 20), v55, v57);
    *v58 = v47;
    v58[1] = v49;
    v59 = Strong;
    v60 = (unint64_t *)(Strong + 16);
    swift_beginAccess();
    v61 = *(_QWORD *)(v59 + 16);
    sub_229324ECC(v47, v49);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v59 + 16) = v61;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v61 = sub_22936EF90(0, *(_QWORD *)(v61 + 16) + 1, 1, v61, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v60 = v61;
    }
    v64 = *(_QWORD *)(v61 + 16);
    v63 = *(_QWORD *)(v61 + 24);
    if (v64 >= v63 >> 1)
    {
      v61 = sub_22936EF90(v63 > 1, v64 + 1, 1, v61, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
      *v60 = v61;
    }
    *(_QWORD *)(v61 + 16) = v64 + 1;
    sub_22932EA14((uint64_t)v74, v61+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v64, type metadata accessor for SyncedModelManager.MessageWrapper);
    swift_endAccess();
    sub_229324F6C(v47, v49);
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v56 + 8))(v55, v57);
    sub_22932E904((uint64_t)v83, type metadata accessor for SyncMessage);
    sub_22932E904(v82, type metadata accessor for OwnershipHandoffReplyMessage);
  }
  else
  {
    if (qword_255A41A88 != -1)
      swift_once();
    v37 = sub_2293B8D5C();
    __swift_project_value_buffer(v37, (uint64_t)qword_255A44C60);
    v83 = sub_2293B8D44();
    v38 = sub_2293B9098();
    if (os_log_type_enabled(v83, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_22931B000, v83, v38, "SyncedModel: Replying to ownership handoff request but model is not associated with a manager", v39, 2u);
      MEMORY[0x22E2C869C](v39, -1, -1);
    }

  }
}

void sub_229366B70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  unsigned __int8 v103;
  uint64_t v104[3];

  v2 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  v99 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43670);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v94 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v100 = (uint64_t)&v83 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v88 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v93 = (uint64_t)&v83 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v83 - v13;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v87 = (uint64_t *)((char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v17);
  v92 = (uint64_t *)((char *)&v83 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v83 - v21);
  v23 = sub_2293B8A20();
  v97 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v86 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v91 = (char *)&v83 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v83 - v28;
  v30 = type metadata accessor for OwnershipChangeRequestMessage(0);
  MEMORY[0x24BDAC7A8](v30);
  v96 = (uint64_t)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_2293B8B40();
  v32 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v98 = (uint64_t)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = a1 + *(int *)(v2 + 36);
  sub_229324E44(v89, (uint64_t)v14, &qword_255A41F98);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v34(v14, 1, v15) == 1)
  {
    *v22 = 0;
    v22[1] = 0;
    sub_2293B8B70();
    sub_2293251F8((uint64_t)v14, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v14, (uint64_t)v22, type metadata accessor for PBUUID);
  }
  sub_229357288();
  sub_22932E904((uint64_t)v22, type metadata accessor for PBUUID);
  v35 = (_QWORD *)(v101 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingHandoffReply);
  swift_beginAccess();
  v90 = v35;
  v36 = *v35;
  v37 = v100;
  if (*(_QWORD *)(v36 + 16))
  {
    swift_bridgeObjectRetain();
    v38 = sub_22936F3E8((uint64_t)v29);
    if ((v39 & 1) != 0)
    {
      v40 = v38;
      v41 = v23;
      v42 = *(_QWORD *)(v36 + 56);
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
      v84 = v34;
      v44 = v43;
      v85 = v2;
      v45 = v15;
      v46 = v32;
      v47 = a1;
      v48 = *(_QWORD *)(v43 - 8);
      v49 = v42 + *(_QWORD *)(v48 + 72) * v40;
      v23 = v41;
      v37 = v100;
      sub_229324E44(v49, v100, &qword_255A41CE0);
      v50 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56);
      a1 = v47;
      v32 = v46;
      v15 = v45;
      v2 = v85;
      v51 = v44;
      v34 = v84;
      v50(v37, 0, 1, v51);
    }
    else
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v37, 1, 1, v53);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v37, 1, 1, v52);
  }
  v54 = *(void (**)(char *, uint64_t))(v97 + 8);
  v54(v29, v23);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v37, 1, v55) == 1)
  {
    sub_2293251F8(v37, &qword_255A43670);
    if (qword_255A41A88 != -1)
      swift_once();
    v56 = sub_2293B8D5C();
    __swift_project_value_buffer(v56, (uint64_t)qword_255A44C60);
    sub_229324D74(a1, v99, type metadata accessor for OwnershipHandoffReplyMessage);
    v57 = sub_2293B8D44();
    v58 = sub_2293B9098();
    if (os_log_type_enabled(v57, v58))
    {
      v101 = v23;
      v59 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v34;
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      v104[0] = v61;
      *(_DWORD *)v60 = 136315138;
      v62 = v88;
      sub_229324E44(v99 + *(int *)(v2 + 36), v88, &qword_255A41F98);
      if (v59(v62, 1, v15) == 1)
      {
        v63 = v87;
        *v87 = 0;
        v63[1] = 0;
        sub_2293B8B70();
        sub_2293251F8(v62, &qword_255A41F98);
      }
      else
      {
        v63 = v87;
        sub_22932EA14(v62, (uint64_t)v87, type metadata accessor for PBUUID);
      }
      v79 = v86;
      sub_229357288();
      sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
      v80 = sub_2293B89E4();
      v82 = v81;
      v54(v79, v101);
      v102 = sub_22932DB78(v80, v82, v104);
      sub_2293B9110();
      swift_bridgeObjectRelease();
      sub_22932E904(v99, type metadata accessor for OwnershipHandoffReplyMessage);
      _os_log_impl(&dword_22931B000, v57, v58, "SyncedModel: got handoff reply for unknown ownership request: %s", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v61, -1, -1);
      MEMORY[0x22E2C869C](v60, -1, -1);
    }
    else
    {
      sub_22932E904(v99, type metadata accessor for OwnershipHandoffReplyMessage);
    }

  }
  else
  {
    v64 = v37 + *(int *)(v55 + 48);
    v65 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v98, v37, v95);
    v66 = v96;
    sub_22932EA14(v64, v96, type metadata accessor for OwnershipChangeRequestMessage);
    v67 = v93;
    sub_229324E44(v89, v93, &qword_255A41F98);
    if (v34((char *)v67, 1, v15) == 1)
    {
      v68 = v92;
      *v92 = 0;
      v68[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v67, &qword_255A41F98);
    }
    else
    {
      v68 = v92;
      sub_22932EA14(v67, (uint64_t)v92, type metadata accessor for PBUUID);
    }
    v69 = v32;
    v70 = (uint64_t)v91;
    sub_229357288();
    sub_22932E904((uint64_t)v68, type metadata accessor for PBUUID);
    swift_beginAccess();
    v71 = v94;
    sub_22931E214(v70, v94);
    v54((char *)v70, v23);
    sub_2293251F8(v71, &qword_255A43670);
    swift_endAccess();
    v72 = 2;
    if (!*(_BYTE *)(a1 + 9))
      v72 = 3;
    v102 = v72;
    v103 = 1;
    if (qword_255A41A88 != -1)
      swift_once();
    v73 = sub_2293B8D5C();
    __swift_project_value_buffer(v73, (uint64_t)qword_255A44C60);
    v74 = v102;
    v75 = sub_2293B8D44();
    v76 = sub_2293B90B0();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v77 = 67109120;
      LODWORD(v104[0]) = v74 == 2;
      sub_2293B9110();
      _os_log_impl(&dword_22931B000, v75, v76, "SyncedModel: Handling ownership handoff reply with result: %{BOOL}d", v77, 8u);
      MEMORY[0x22E2C869C](v77, -1, -1);
    }

    swift_beginAccess();
    v78 = v98;
    sub_229361588(v66, v98, v102, v103);
    sub_22932E904(v66, type metadata accessor for OwnershipChangeRequestMessage);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v78, v65);
  }
}

uint64_t sub_2293674E0(uint64_t a1)
{
  return sub_229367518(a1, qword_255A44CF0);
}

uint64_t sub_2293674FC(uint64_t a1)
{
  return sub_229367518(a1, qword_255A44D08);
}

uint64_t sub_229367518(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2293B8A20();
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_2293B89D8();
  v8 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  __break(1u);
  return result;
}

SyncedModels::OwnershipRequestResult_optional __swiftcall OwnershipRequestResult.init(rawValue:)(SyncedModels::OwnershipRequestResult_optional rawValue)
{
  SyncedModels::OwnershipRequestResult *v1;
  SyncedModels::OwnershipRequestResult value;

  value = rawValue.value;
  if (rawValue.value >= SyncedModels_OwnershipRequestResult_unknownDefault)
    value = SyncedModels_OwnershipRequestResult_unknownDefault;
  *v1 = value;
  return rawValue;
}

uint64_t OwnershipRequestResult.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_22936760C()
{
  sub_2293B93D4();
  sub_2293B93EC();
  return sub_2293B93F8();
}

uint64_t sub_229367650()
{
  return sub_2293B93EC();
}

uint64_t sub_229367678()
{
  sub_2293B93D4();
  sub_2293B93EC();
  return sub_2293B93F8();
}

SyncedModels::OwnershipRequestResult_optional sub_2293676B8(Swift::UInt8 *a1)
{
  return OwnershipRequestResult.init(rawValue:)(*a1);
}

void sub_2293676C0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

SyncedModels::SyncedModelStatus_optional __swiftcall SyncedModelStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (SyncedModels::SyncedModelStatus_optional)rawValue;
}

uint64_t SyncedModelStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_2293676EC()
{
  unint64_t result;

  result = qword_255A43110;
  if (!qword_255A43110)
  {
    result = MEMORY[0x22E2C85DC](&protocol conformance descriptor for OwnershipRequestResult, &type metadata for OwnershipRequestResult);
    atomic_store(result, (unint64_t *)&qword_255A43110);
  }
  return result;
}

unint64_t sub_229367734()
{
  unint64_t result;

  result = qword_255A43118;
  if (!qword_255A43118)
  {
    result = MEMORY[0x22E2C85DC](&protocol conformance descriptor for SyncedModelStatus, &type metadata for SyncedModelStatus);
    atomic_store(result, (unint64_t *)&qword_255A43118);
  }
  return result;
}

SyncedModels::SyncedModelStatus_optional sub_229367778(Swift::Int *a1)
{
  return SyncedModelStatus.init(rawValue:)(*a1);
}

void sub_229367780(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

ValueMetadata *type metadata accessor for OwnershipRequestResult()
{
  return &type metadata for OwnershipRequestResult;
}

uint64_t _s12SyncedModels22OwnershipRequestResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2293677F0 + 4 * byte_2293BAAAE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_229367824 + 4 * byte_2293BAAA9[v4]))();
}

uint64_t sub_229367824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22936782C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x229367834);
  return result;
}

uint64_t sub_229367840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x229367848);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22936784C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_229367854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelStatus()
{
  return &type metadata for SyncedModelStatus;
}

void sub_229367870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_2293B8A20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255A41A88 != -1)
    swift_once();
  v6 = sub_2293B8D5C();
  __swift_project_value_buffer(v6, (uint64_t)qword_255A44C60);
  swift_retain_n();
  v7 = sub_2293B8D44();
  v8 = sub_2293B90B0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136315394;
    v18 = v9 + 4;
    v11 = v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
    sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v12 = sub_2293B9308();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v19 = sub_22932DB78(v12, v14, &v20);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler);
    *(_WORD *)(v9 + 12) = 2080;
    if (v15)
      v16 = 7562617;
    else
      v16 = 28526;
    if (v15)
      v17 = 0xE300000000000000;
    else
      v17 = 0xE200000000000000;
    v19 = sub_22932DB78(v16, v17, &v20);
    sub_2293B9110();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22931B000, v7, v8, "SyncedModel[%s] ownershipChangedHandler was set:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2C869C](v10, -1, -1);
    MEMORY[0x22E2C869C](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_229367B30(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for PendingOwnershipRequest(0);
  v5 = *(_QWORD *)(v65 - 8);
  v6 = MEMORY[0x24BDAC7A8](v65);
  v64 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v58 - v8);
  v10 = sub_2293B8A20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v63 = v11;
    if (qword_255A41A88 != -1)
      swift_once();
    v16 = sub_2293B8D5C();
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_255A44C60);
    swift_retain_n();
    v18 = sub_2293B8D44();
    v19 = sub_2293B90B0();
    v20 = v19;
    v21 = os_log_type_enabled(v18, v19);
    v62 = v10;
    if (v21)
    {
      v22 = swift_slowAlloc();
      v61 = v17;
      v23 = v22;
      v60 = swift_slowAlloc();
      v70[0] = v60;
      *(_DWORD *)v23 = 136315394;
      v58 = v23 + 4;
      v24 = v15 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v59 = v20;
      v25 = v5;
      v26 = v4;
      v27 = v15;
      v28 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v13, v24, v10);
      sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_2293B9308();
      v30 = v10;
      v31 = v9;
      v33 = v32;
      v34 = *(void (**)(char *, uint64_t))(v28 + 8);
      v15 = v27;
      v4 = v26;
      v5 = v25;
      v34(v13, v30);
      v68 = sub_22932DB78(v29, v33, v70);
      sub_2293B9110();
      swift_release_n();
      v9 = v31;
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      LODWORD(v25) = v66;
      v68 = v66;
      sub_2293B9110();
      _os_log_impl(&dword_22931B000, v18, (os_log_type_t)v59, "SyncedModel[%s]: status changed to %ld", (uint8_t *)v23, 0x16u);
      v35 = v60;
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v35, -1, -1);
      MEMORY[0x22E2C869C](v23, -1, -1);

      if ((_DWORD)v25 != 2)
        return swift_release();
    }
    else
    {

      swift_release_n();
      if ((_DWORD)v66 != 2)
        return swift_release();
    }
    v36 = v15 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest;
    swift_beginAccess();
    sub_229324E44(v36, (uint64_t)v4, &qword_255A43650);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v65) == 1)
    {
      swift_release();
      return sub_2293251F8((uint64_t)v4, &qword_255A43650);
    }
    else
    {
      sub_22932EA14((uint64_t)v4, (uint64_t)v9, type metadata accessor for PendingOwnershipRequest);
      sub_229324D74((uint64_t)v9, v64, type metadata accessor for PendingOwnershipRequest);
      swift_retain_n();
      v37 = sub_2293B8D44();
      v38 = sub_2293B90B0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v66 = (uint64_t)v9;
        v40 = v39;
        v61 = swift_slowAlloc();
        v69 = v61;
        *(_DWORD *)v40 = 136315394;
        v41 = v15 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v42 = v63;
        v43 = v13;
        v44 = v41;
        v45 = v13;
        v46 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v43, v44, v62);
        sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v47 = sub_2293B9308();
        v49 = v48;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v46);
        v67 = sub_22932DB78(v47, v49, &v69);
        sub_2293B9110();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        v50 = v64;
        sub_2293B89CC();
        sub_229326FD0(qword_255A43708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v51 = sub_2293B9308();
        v67 = sub_22932DB78(v51, v52, &v69);
        sub_2293B9110();
        swift_bridgeObjectRelease();
        sub_22932E904(v50, type metadata accessor for PendingOwnershipRequest);
        _os_log_impl(&dword_22931B000, v37, v38, "SyncedModel[%s]: Applying pending request ownership from time:%s", (uint8_t *)v40, 0x16u);
        v53 = v61;
        swift_arrayDestroy();
        MEMORY[0x22E2C869C](v53, -1, -1);
        v54 = v40;
        v9 = (_QWORD *)v66;
        MEMORY[0x22E2C869C](v54, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_22932E904(v64, type metadata accessor for PendingOwnershipRequest);
      }

      v55 = *v9;
      v56 = v9[1];
      v57 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 760);
      swift_retain();
      v57(v55, v56);
      swift_release();
      swift_release();
      return sub_22932E904((uint64_t)v9, type metadata accessor for PendingOwnershipRequest);
    }
  }
  return result;
}

uint64_t sub_2293681E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  void (*v12)(char *);
  char v14[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43650);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-v4 - 8];
  v6 = type metadata accessor for PendingOwnershipRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest;
    swift_beginAccess();
    sub_229324E44(v11, (uint64_t)v5, &qword_255A43650);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release();
      return sub_2293251F8((uint64_t)v5, &qword_255A43650);
    }
    else
    {
      sub_22932EA14((uint64_t)v5, (uint64_t)v9, type metadata accessor for PendingOwnershipRequest);
      v12 = *(void (**)(char *))v9;
      v14[0] = 1;
      swift_retain();
      v12(v14);
      swift_release();
      sub_22932E904((uint64_t)v9, type metadata accessor for PendingOwnershipRequest);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v3, 1, 1, v6);
      swift_beginAccess();
      sub_229324E88((uint64_t)v3, v11, &qword_255A43650);
      swift_endAccess();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2293683E0()
{
  sub_22935B964();
  return swift_deallocClassInstance();
}

uint64_t sub_229368404()
{
  return type metadata accessor for SyncedModelController(0);
}

uint64_t type metadata accessor for SyncedModelController(uint64_t a1)
{
  return sub_22933F79C(a1, (uint64_t *)&unk_255A43168);
}

void sub_229368420()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_2293B8A20();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, &qword_255A43178, (void (*)(uint64_t))type metadata accessor for SyncTransactionMessage);
    if (v1 <= 0x3F)
    {
      sub_22936CB40(319, (unint64_t *)&qword_255A42B90, (void (*)(uint64_t))MEMORY[0x24BDD1F00]);
      if (v2 <= 0x3F)
      {
        sub_22936CB40(319, qword_255A421A8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        if (v3 <= 0x3F)
        {
          sub_22936CB40(319, qword_255A43180, (void (*)(uint64_t))type metadata accessor for PendingOwnershipRequest);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_2293685A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v2 = sub_2293B8A20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43668);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v18[-v10];
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
  v13 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
  v14 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  sub_2293549B8(v12, v13, v5, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], (uint64_t)v11);
  v15 = type metadata accessor for SyncTransactionMessage(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 1, v15);
  sub_22932E9D0((uint64_t)v11, (uint64_t)v9, &qword_255A43668);
  v16 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__transaction;
  swift_beginAccess();
  sub_229324E88((uint64_t)v9, v16, &qword_255A43668);
  return swift_endAccess();
}

uint64_t sub_22936875C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43668);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SyncTransactionMessage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__transaction;
  swift_beginAccess();
  sub_229324E88((uint64_t)v4, v6, &qword_255A43668);
  return swift_endAccess();
}

uint64_t sub_229368828@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _BYTE v19[32];
  uint64_t v20;

  v5 = type metadata accessor for PropertyChangedMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_22935BCE0();
  v11 = v10;
  v12 = type metadata accessor for SyncTransactionMessage(0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  if (v13)
  {
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  else
  {
    sub_229324D74(a1, (uint64_t)v8, type metadata accessor for PropertyChangedMessage);
    v15 = *(_QWORD *)(v11 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v11 + 16) = v15;
    v20 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_22936EF90(0, *(_QWORD *)(v15 + 16) + 1, 1, v15, &qword_255A436B0, type metadata accessor for PropertyChangedMessage);
      *(_QWORD *)(v11 + 16) = v15;
    }
    v18 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      v15 = sub_22936EF90(v17 > 1, v18 + 1, 1, v15, &qword_255A436B0, type metadata accessor for PropertyChangedMessage);
      *(_QWORD *)(v11 + 16) = v15;
    }
    *(_QWORD *)(v15 + 16) = v18 + 1;
    sub_22932EA14((uint64_t)v8, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for PropertyChangedMessage);
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  *a2 = v13 != 0;
  return result;
}

uint64_t sub_2293689E4@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _BYTE v19[32];
  uint64_t v20;

  v5 = type metadata accessor for DictionaryChangedMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_22935BCE0();
  v11 = v10;
  v12 = type metadata accessor for SyncTransactionMessage(0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  if (v13)
  {
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  else
  {
    sub_229324D74(a1, (uint64_t)v8, type metadata accessor for DictionaryChangedMessage);
    v15 = *(_QWORD *)(v11 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v11 + 32) = v15;
    v20 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_22936EF90(0, *(_QWORD *)(v15 + 16) + 1, 1, v15, &qword_255A436B8, type metadata accessor for DictionaryChangedMessage);
      *(_QWORD *)(v11 + 32) = v15;
    }
    v18 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      v15 = sub_22936EF90(v17 > 1, v18 + 1, 1, v15, &qword_255A436B8, type metadata accessor for DictionaryChangedMessage);
      *(_QWORD *)(v11 + 32) = v15;
    }
    *(_QWORD *)(v15 + 16) = v18 + 1;
    sub_22932EA14((uint64_t)v8, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for DictionaryChangedMessage);
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  *a2 = v13 != 0;
  return result;
}

uint64_t sub_229368BA0@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _BYTE v19[32];
  uint64_t v20;

  v5 = type metadata accessor for SetChangedMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_22935BCE0();
  v11 = v10;
  v12 = type metadata accessor for SyncTransactionMessage(0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  if (v13)
  {
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  else
  {
    sub_229324D74(a1, (uint64_t)v8, type metadata accessor for SetChangedMessage);
    v15 = *(_QWORD *)(v11 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v11 + 24) = v15;
    v20 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_22936EF90(0, *(_QWORD *)(v15 + 16) + 1, 1, v15, &qword_255A436C0, type metadata accessor for SetChangedMessage);
      *(_QWORD *)(v11 + 24) = v15;
    }
    v18 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      v15 = sub_22936EF90(v17 > 1, v18 + 1, 1, v15, &qword_255A436C0, type metadata accessor for SetChangedMessage);
      *(_QWORD *)(v11 + 24) = v15;
    }
    *(_QWORD *)(v15 + 16) = v18 + 1;
    sub_22932EA14((uint64_t)v8, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for SetChangedMessage);
    result = ((uint64_t (*)(_BYTE *, _QWORD))v9)(v19, 0);
  }
  *a2 = v13 != 0;
  return result;
}

uint64_t sub_229368D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v1 = sub_2293B8A20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v35);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v32 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v32 - v15;
  v36 = v0;
  v17 = v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v17, (uint64_t)v16, &qword_255A41F70);
  v18 = 1;
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v19 = v34(v16, 1, v1);
  sub_2293251F8((uint64_t)v16, &qword_255A41F70);
  if (v19 != 1)
  {
    sub_229324E44(v17, (uint64_t)v14, &qword_255A41F70);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v36 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
    v20 = (uint64_t)&v5[*(int *)(v35 + 48)];
    sub_229324E44((uint64_t)v14, (uint64_t)v5, &qword_255A41F70);
    sub_229324E44((uint64_t)v11, v20, &qword_255A41F70);
    v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
    v22 = (uint64_t)v5;
    if (v34(v5, 1, v1) == 1)
    {
      sub_2293251F8((uint64_t)v11, &qword_255A41F70);
      sub_2293251F8((uint64_t)v14, &qword_255A41F70);
      v23 = v21(v20, 1, v1);
      if (v23 == 1)
        v24 = &qword_255A41F70;
      else
        v24 = &qword_255A43648;
      if (v23 == 1)
        v18 = -1;
      else
        v18 = 0;
    }
    else
    {
      v25 = v2;
      v26 = (uint64_t)v5;
      v27 = v33;
      sub_229324E44(v26, v33, &qword_255A41F70);
      if (v21(v20, 1, v1) == 1)
      {
        sub_2293251F8((uint64_t)v11, &qword_255A41F70);
        sub_2293251F8((uint64_t)v14, &qword_255A41F70);
        v18 = 0;
        v24 = &qword_255A43648;
        (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v27, v1);
      }
      else
      {
        v28 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
        v29 = v32;
        v28(v32, v20, v1);
        sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v18 = sub_2293B8F00();
        v30 = *(void (**)(char *, uint64_t))(v25 + 8);
        v30(v29, v1);
        v24 = &qword_255A41F70;
        sub_2293251F8((uint64_t)v11, &qword_255A41F70);
        sub_2293251F8((uint64_t)v14, &qword_255A41F70);
        v30((char *)v27, v1);
      }
    }
    sub_2293251F8(v22, v24);
  }
  return v18 & 1;
}

uint64_t sub_2293690F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = sub_2293B8A20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v10, (uint64_t)v9, &qword_255A41F70);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v11 = sub_2293B8B40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v9, v3);
    v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants);
    swift_beginAccess();
    v14 = *v13;
    if (*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      v15 = sub_22936F3E8((uint64_t)v6);
      if ((v16 & 1) != 0)
      {
        v17 = v15;
        v18 = *(_QWORD *)(v14 + 56);
        v19 = sub_2293B8B40();
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(a1, v18 + *(_QWORD *)(v20 + 72) * v17, v19);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
      else
      {
        v22 = sub_2293B8B40();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = sub_2293B8B40();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_229369320(uint64_t (*a1)(uint64_t *), uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (**v8)(uint64_t *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t *);
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint8_t *v108;
  void (**v109)(char *, unint64_t);
  unint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t, unint64_t);
  int v113;
  char *v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  char *v116;
  char *v117;
  char *v118;
  char v119;
  void (*v120)(char *, unint64_t);
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  _BOOL4 v129;
  uint64_t (*v130)(uint64_t *);
  uint8_t *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  BOOL v138;
  int v139;
  void *v140;
  uint64_t v141;
  void *v142;
  id v143;
  char *v144;
  char *v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  _BOOL4 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint8_t *v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  void (*v162)(char *, uint64_t, unint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int (*v169)(uint64_t, uint64_t, uint64_t);
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint8_t *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint8_t *v182;
  char *v183;
  void (*v184)(char *, unint64_t);
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  _BOOL4 v188;
  uint64_t v189;
  uint64_t (*v190)(uint64_t *);
  uint8_t *v191;
  void *v192;
  uint64_t v193;
  void *v194;
  id v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(char *, uint64_t, unint64_t);
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (**v213)(char *, unint64_t);
  unint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  void (***v222)(char *, unint64_t);
  uint64_t v223;
  unint64_t *v224;
  unint64_t v225;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v227;
  uint64_t (*v228)(uint64_t *);
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  _QWORD *v237;
  char *v238;
  uint64_t v239;
  uint64_t (**v240)(uint64_t *);
  uint64_t (*v241)(uint64_t *);
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(uint64_t, uint64_t);
  uint64_t v249;
  uint64_t (**v250)(uint64_t *);
  uint64_t v251;
  unsigned int v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  void *v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint8_t *v269;
  void (*v270)(char *, unint64_t);
  void (*v271)(char *, _QWORD, uint64_t, unint64_t);
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  char *v294;
  _QWORD *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  _QWORD *v301;
  char *v302;
  uint64_t v303;
  uint64_t *v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  void (*v317)(uint64_t, uint64_t, uint64_t);
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  char *v328;
  unint64_t v329;
  void (**v330)(char *, unint64_t);
  uint8_t *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t (*v335)(uint64_t *);
  uint64_t (*v336)(uint64_t *);
  uint64_t Strong;
  uint64_t aBlock;
  uint64_t v339;
  uint64_t (*v340)(uint64_t);
  void *v341;
  uint64_t (*v342)();
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;

  v3 = v2;
  v335 = a1;
  v336 = (uint64_t (*)(uint64_t *))a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43650);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v330 = (void (**)(char *, unint64_t))((char *)&v270 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t (**)(uint64_t *))((char *)&v270 - v7);
  v288 = sub_2293B8E58();
  v286 = *(_QWORD *)(v288 - 8);
  v9 = MEMORY[0x24BDAC7A8](v288);
  v285 = (char *)&v270 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v287 = (char *)&v270 - v11;
  v274 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v279 = *(_QWORD *)(v274 - 8);
  MEMORY[0x24BDAC7A8](v274);
  v305 = (void (**)(char *, unint64_t))((char *)&v270 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v280 = sub_2293B8B58();
  v278 = *(_QWORD *)(v280 - 8);
  MEMORY[0x24BDAC7A8](v280);
  v304 = (uint64_t *)((char *)&v270 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v312);
  v314 = (uint64_t)&v270 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43660);
  MEMORY[0x24BDAC7A8](v15);
  v311 = (uint64_t)&v270 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v284 = (uint64_t)&v270 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v277 = (uint64_t)&v270 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v303 = (uint64_t)&v270 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v299 = (uint64_t)&v270 - v24;
  v309 = type metadata accessor for PBUUID(0);
  v308 = *(_QWORD *)(v309 - 8);
  v25 = MEMORY[0x24BDAC7A8](v309);
  v281 = (void (**)(char *, unint64_t))((char *)&v270 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x24BDAC7A8](v25);
  v276 = (void (**)(char *, unint64_t))((char *)&v270 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v301 = (void (**)(char *, unint64_t))((char *)&v270 - v30);
  MEMORY[0x24BDAC7A8](v29);
  v295 = (void (**)(char *, unint64_t))((char *)&v270 - v31);
  v298 = sub_2293B89CC();
  v297 = *(_QWORD *)(v298 - 8);
  MEMORY[0x24BDAC7A8](v298);
  v296 = (char *)&v270 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = type metadata accessor for CachedOwnershipRequest(0);
  v310 = *(_QWORD *)(v315 - 8);
  v33 = MEMORY[0x24BDAC7A8](v315);
  v306 = (uint64_t)&v270 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v302 = (char *)&v270 - v35;
  v307 = type metadata accessor for OwnershipChangeRequestMessage(0);
  v282 = *(_QWORD *)(v307 - 8);
  v36 = MEMORY[0x24BDAC7A8](v307);
  v313 = (uint64_t)&v270 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v325 = (uint64_t)&v270 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v293 = (uint64_t)&v270 - v41;
  v283 = v42;
  MEMORY[0x24BDAC7A8](v40);
  v300 = (char *)&v270 - v43;
  v322 = sub_2293B8E1C();
  v320 = *(_QWORD *)(v322 - 8);
  MEMORY[0x24BDAC7A8](v322);
  v318 = (char *)&v270 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = sub_2293B8E40();
  v321 = *(_QWORD *)(v323 - 8);
  MEMORY[0x24BDAC7A8](v323);
  v319 = (char *)&v270 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = sub_2293B8A20();
  v331 = *(uint8_t **)(v329 - 8);
  v46 = MEMORY[0x24BDAC7A8](v329);
  v275 = (char *)&v270 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v294 = (char *)&v270 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v292 = (char *)&v270 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v316 = (char *)&v270 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v326 = (char *)&v270 - v55;
  MEMORY[0x24BDAC7A8](v54);
  v328 = (char *)&v270 - v56;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)&v270 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v61 = MEMORY[0x24BDAC7A8](v60);
  v290 = (uint64_t)&v270 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x24BDAC7A8](v61);
  v291 = (uint64_t)&v270 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v289 = (char *)&v270 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v317 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v270 - v68);
  v69 = MEMORY[0x24BDAC7A8](v67);
  v71 = (char *)&v270 - v70;
  v72 = MEMORY[0x24BDAC7A8](v69);
  v74 = (char *)&v270 - v73;
  MEMORY[0x24BDAC7A8](v72);
  v76 = (char *)&v270 - v75;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41BC0);
  MEMORY[0x24BDAC7A8](v77);
  v79 = (char *)&v270 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_2293B8B40();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = MEMORY[0x24BDAC7A8](v80);
  v324 = (char *)&v270 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BDAC7A8](v82);
  v327 = (uint64_t)&v270 - v85;
  MEMORY[0x24BDAC7A8](v84);
  v333 = (char *)&v270 - v86;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v334 = v80;
    v332 = v3;
    v87 = v3 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
    swift_beginAccess();
    v88 = v87;
    v89 = v334;
    sub_229324E44(v88, (uint64_t)v79, &qword_255A41BC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v89) == 1)
    {
      sub_2293251F8((uint64_t)v79, &qword_255A41BC0);
LABEL_12:
      v97 = v332;
      v98 = v336;
      if (qword_255A41A88 != -1)
        swift_once();
      v99 = sub_2293B8D5C();
      __swift_project_value_buffer(v99, (uint64_t)qword_255A44C60);
      v100 = sub_2293B8D44();
      v101 = sub_2293B9098();
      if (os_log_type_enabled(v100, v101))
      {
        v102 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v102 = 0;
        _os_log_impl(&dword_22931B000, v100, v101, "SyncedModel: tried to request ownership while catching up, enqueuing request", v102, 2u);
        MEMORY[0x22E2C869C](v102, -1, -1);
      }

      v103 = type metadata accessor for PendingOwnershipRequest(0);
      swift_retain();
      sub_2293B89C0();
      swift_release();
      *v8 = v335;
      v8[1] = v98;
      (*(void (**)(uint64_t (**)(uint64_t *), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v8, 0, 1, v103);
      v104 = (void (*)(_QWORD, _QWORD, _QWORD))v330;
      sub_22932E9D0((uint64_t)v8, (uint64_t)v330, &qword_255A43650);
      v105 = v97 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest;
      swift_beginAccess();
      sub_229324E88((uint64_t)v104, v105, &qword_255A43650);
      return swift_endAccess();
    }
    v273 = v81;
    v95 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
    v96 = v333;
    v95(v333, v79, v89);
    if (*(_QWORD *)(Strong + 24))
    {
      swift_retain();
      sub_2293B8DBC();
      swift_release();
      if (aBlock == 1)
      {
        (*(void (**)(char *, uint64_t))(v273 + 8))(v96, v89);
        goto LABEL_12;
      }
    }
    v106 = v332;
    v107 = v332 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    sub_229324E44(v107, (uint64_t)v76, &qword_255A41F70);
    v108 = v331;
    v109 = (void (**)(char *, unint64_t))*((_QWORD *)v331 + 2);
    v272 = v106 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID;
    v110 = v329;
    v330 = v109;
    ((void (*)(char *))v109)(v74);
    v271 = (void (*)(char *, _QWORD, uint64_t, unint64_t))*((_QWORD *)v108 + 7);
    v271(v74, 0, 1, v110);
    v111 = (uint64_t)&v59[*(int *)(v57 + 48)];
    sub_229324E44((uint64_t)v76, (uint64_t)v59, &qword_255A41F70);
    sub_229324E44((uint64_t)v74, v111, &qword_255A41F70);
    v112 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))*((_QWORD *)v108 + 6);
    if (v112((uint64_t)v59, 1, v110) == 1)
    {
      sub_2293251F8((uint64_t)v74, &qword_255A41F70);
      sub_2293251F8((uint64_t)v76, &qword_255A41F70);
      v113 = v112(v111, 1, v110);
      v114 = v333;
      if (v113 == 1)
      {
        sub_2293251F8((uint64_t)v59, &qword_255A41F70);
LABEL_42:
        if (qword_255A41A88 != -1)
          swift_once();
        v185 = sub_2293B8D5C();
        __swift_project_value_buffer(v185, (uint64_t)qword_255A44C60);
        v186 = sub_2293B8D44();
        v187 = sub_2293B90B0();
        v188 = os_log_type_enabled(v186, v187);
        v189 = v334;
        v190 = (void (*)(_QWORD, _QWORD))v336;
        if (v188)
        {
          v191 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v191 = 0;
          _os_log_impl(&dword_22931B000, v186, v187, "SyncedModel: Requesting ownership when local participant already owns model. Succeeding.", v191, 2u);
          MEMORY[0x22E2C869C](v191, -1, -1);
        }

        sub_22935F570();
        v192 = *(void **)(Strong + 40);
        v193 = swift_allocObject();
        *(_QWORD *)(v193 + 16) = v335;
        *(_QWORD *)(v193 + 24) = v190;
        v342 = sub_229370E88;
        v343 = v193;
        aBlock = MEMORY[0x24BDAC760];
        v339 = 1107296256;
        v340 = sub_229325F20;
        v341 = &block_descriptor_14;
        v194 = _Block_copy(&aBlock);
        swift_retain();
        v195 = v192;
        v196 = v319;
        sub_2293B8E34();
        v345 = MEMORY[0x24BEE4AF8];
        sub_229326FD0(&qword_255A41F38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F40);
        sub_229343CBC((unint64_t *)&qword_255A41F48, &qword_255A41F40, MEMORY[0x24BEE12C8]);
        v197 = v318;
        v198 = v322;
        sub_2293B9128();
        MEMORY[0x22E2C7EC8](0, v196, v197, v194);
        _Block_release(v194);

        swift_release();
        (*(void (**)(char *, uint64_t))(v320 + 8))(v197, v198);
        (*(void (**)(char *, uint64_t))(v321 + 8))(v196, v323);
        (*(void (**)(char *, uint64_t))(v273 + 8))(v114, v189);
        return swift_release();
      }
    }
    else
    {
      sub_229324E44((uint64_t)v59, (uint64_t)v71, &qword_255A41F70);
      if (v112(v111, 1, v110) != 1)
      {
        v182 = v331;
        v183 = v328;
        (*((void (**)(char *, uint64_t, unint64_t))v331 + 4))(v328, v111, v110);
        sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        LODWORD(v270) = sub_2293B8F00();
        v184 = (void (*)(char *, unint64_t))*((_QWORD *)v182 + 1);
        v184(v183, v110);
        sub_2293251F8((uint64_t)v74, &qword_255A41F70);
        sub_2293251F8((uint64_t)v76, &qword_255A41F70);
        v184(v71, v110);
        sub_2293251F8((uint64_t)v59, &qword_255A41F70);
        v114 = v333;
        if ((v270 & 1) != 0)
          goto LABEL_42;
LABEL_23:
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v273 + 16);
        v115(v327, Strong + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_localParticipant, v334);
        v116 = v328;
        v117 = v114;
        sub_2293B8B34();
        v118 = v326;
        sub_2293B8B34();
        v119 = sub_2293B89F0();
        v120 = (void (*)(char *, unint64_t))*((_QWORD *)v331 + 1);
        v120(v118, v110);
        v270 = v120;
        v120(v116, v110);
        v121 = v317;
        sub_229324E44(v107, (uint64_t)v317, &qword_255A41F70);
        LODWORD(v118) = v112((uint64_t)v121, 1, v110);
        sub_2293251F8((uint64_t)v121, &qword_255A41F70);
        if ((_DWORD)v118 == 1)
        {
          v122 = v332;
          v123 = v324;
          if ((v119 & 1) != 0)
          {
            v124 = v334;
            v125 = v117;
            if (qword_255A41A88 != -1)
              swift_once();
            v126 = sub_2293B8D5C();
            __swift_project_value_buffer(v126, (uint64_t)qword_255A44C60);
            v127 = sub_2293B8D44();
            v128 = sub_2293B90B0();
            v129 = os_log_type_enabled(v127, v128);
            v130 = (void (*)(_QWORD, _QWORD))v336;
            if (v129)
            {
              v131 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v131 = 0;
              _os_log_impl(&dword_22931B000, v127, v128, "SyncedModel: Requesting ownership. Model is unowned and participant is authority. Succeeding. Calling callback on async queue.", v131, 2u);
              MEMORY[0x22E2C869C](v131, -1, -1);
            }

            v132 = (uint64_t)v289;
            v133 = v329;
            ((void (*)(char *, uint64_t, unint64_t))v330)(v289, v272, v329);
            v271((char *)v132, 0, 1, v133);
            v134 = v291;
            sub_229324E44(v107, v291, &qword_255A41F70);
            swift_beginAccess();
            sub_22932E988(v132, v107);
            swift_endAccess();
            v135 = v107;
            v136 = v290;
            sub_229324E44(v135, v290, &qword_255A41F70);
            sub_22935FF10(v134, v136);
            sub_2293251F8(v136, &qword_255A41F70);
            sub_2293251F8(v132, &qword_255A41F70);
            sub_2293251F8(v134, &qword_255A41F70);
            v137 = *(_DWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
            v138 = __CFADD__(v137, 1);
            v139 = v137 + 1;
            if (!v138)
            {
              *(_DWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = v139;
              sub_22935F570();
              v140 = *(void **)(Strong + 40);
              v141 = swift_allocObject();
              *(_QWORD *)(v141 + 16) = v335;
              *(_QWORD *)(v141 + 24) = v130;
              v342 = sub_229370E88;
              v343 = v141;
              aBlock = MEMORY[0x24BDAC760];
              v339 = 1107296256;
              v340 = sub_229325F20;
              v341 = &block_descriptor_8;
              v142 = _Block_copy(&aBlock);
              v143 = v140;
              swift_retain();
              v144 = v319;
              sub_2293B8E34();
              v345 = MEMORY[0x24BEE4AF8];
              sub_229326FD0(&qword_255A41F38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F40);
              sub_229343CBC((unint64_t *)&qword_255A41F48, &qword_255A41F40, MEMORY[0x24BEE12C8]);
              v145 = v318;
              v146 = v322;
              sub_2293B9128();
              MEMORY[0x22E2C7EC8](0, v144, v145, v142);
              _Block_release(v142);

              swift_release();
              (*(void (**)(char *, uint64_t))(v320 + 8))(v145, v146);
              (*(void (**)(char *, uint64_t))(v321 + 8))(v144, v323);
              v147 = *(void (**)(uint64_t, uint64_t))(v273 + 8);
              v147(v327, v124);
              v147((uint64_t)v125, v124);
              return swift_release();
            }
            __break(1u);
            goto LABEL_66;
          }
        }
        else
        {
          v122 = v332;
          v123 = v324;
          if ((v119 & 1) != 0)
          {
            if (qword_255A41A88 == -1)
            {
LABEL_33:
              v148 = sub_2293B8D5C();
              __swift_project_value_buffer(v148, (uint64_t)qword_255A44C60);
              v149 = sub_2293B8D44();
              v150 = sub_2293B90B0();
              v151 = os_log_type_enabled(v149, v150);
              v152 = v309;
              v153 = (uint64_t)v302;
              v154 = (uint64_t)v300;
              if (v151)
              {
                v155 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v155 = 0;
                _os_log_impl(&dword_22931B000, v149, v150, "SyncedModel: Requesting ownership. Model is owned and participant is authority. Sending ownership request to current owner.", v155, 2u);
                MEMORY[0x22E2C869C](v155, -1, -1);
              }

              v156 = *(_QWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
              v157 = *(unsigned __int8 *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
              v158 = v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
              swift_beginAccess();
              v159 = (uint64_t)v328;
              v160 = v158;
              v161 = v329;
              v162 = (void (*)(char *, uint64_t, unint64_t))v330;
              ((void (*)(char *, uint64_t, unint64_t))v330)(v328, v160, v329);
              v163 = v326;
              v162(v326, v272, v161);
              LODWORD(v161) = *(_DWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
              v164 = v316;
              sub_2293B8A14();
              sub_229355524(v156, v157, v159, v163, 0, 1, v161, v164, v154);
              v165 = v293;
              sub_229324D74(v154, v293, type metadata accessor for OwnershipChangeRequestMessage);
              swift_retain();
              v166 = v296;
              sub_2293B89C0();
              v167 = v154 + *(int *)(v307 + 40);
              v168 = v299;
              sub_229324E44(v167, v299, &qword_255A41F98);
              v169 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v308 + 48);
              if (v169(v168, 1, v152) == 1)
              {
                v170 = v295;
                *v295 = 0;
                v170[1] = 0;
                sub_2293B8B70();
                sub_2293251F8(v168, &qword_255A41F98);
              }
              else
              {
                v170 = v295;
                sub_22932EA14(v168, (uint64_t)v295, type metadata accessor for PBUUID);
              }
              v238 = v292;
              sub_229357288();
              sub_22932E904((uint64_t)v170, type metadata accessor for PBUUID);
              sub_22932EA14(v165, v153, type metadata accessor for OwnershipChangeRequestMessage);
              v239 = v315;
              v240 = (uint64_t (**)(uint64_t *))(v153 + *(int *)(v315 + 20));
              v241 = v336;
              *v240 = v335;
              v240[1] = v241;
              (*(void (**)(uint64_t, char *, uint64_t))(v297 + 32))(v153 + *(int *)(v239 + 24), v166, v298);
              (*((void (**)(uint64_t, char *, unint64_t))v331 + 4))(v153 + *(int *)(v239 + 28), v238, v329);
              v242 = v167;
              v243 = v303;
              sub_229324E44(v242, v303, &qword_255A41F98);
              if (v169(v243, 1, v152) == 1)
              {
                v244 = v301;
                *v301 = 0;
                v244[1] = 0;
                sub_2293B8B70();
                sub_2293251F8(v243, &qword_255A41F98);
              }
              else
              {
                v244 = v301;
                sub_22932EA14(v243, (uint64_t)v301, type metadata accessor for PBUUID);
              }
              v245 = (uint64_t)v294;
              sub_229357288();
              sub_22932E904((uint64_t)v244, type metadata accessor for PBUUID);
              v246 = v311;
              sub_229324D74(v153, v311, type metadata accessor for CachedOwnershipRequest);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v310 + 56))(v246, 0, 1, v315);
              swift_beginAccess();
              sub_22935B778(v246, v245);
              swift_endAccess();
              v247 = v327;
              sub_2293626E4(v154, v327);
              swift_release();
              sub_22932E904(v153, type metadata accessor for CachedOwnershipRequest);
              sub_22932E904(v154, type metadata accessor for OwnershipChangeRequestMessage);
              v248 = *(void (**)(uint64_t, uint64_t))(v273 + 8);
              v249 = v334;
              v248(v247, v334);
              return ((uint64_t (*)(char *, uint64_t))v248)(v333, v249);
            }
LABEL_66:
            swift_once();
            goto LABEL_33;
          }
        }
        v171 = v334;
        if (qword_255A41A88 != -1)
          swift_once();
        v172 = sub_2293B8D5C();
        __swift_project_value_buffer(v172, (uint64_t)qword_255A44C60);
        v317 = v115;
        v115((uint64_t)v123, (uint64_t)v117, v171);
        v173 = sub_2293B8D44();
        v174 = sub_2293B90B0();
        if (os_log_type_enabled(v173, v174))
        {
          v175 = (uint8_t *)swift_slowAlloc();
          v176 = swift_slowAlloc();
          aBlock = v176;
          *(_DWORD *)v175 = 136315138;
          v331 = v175 + 4;
          sub_2293B8B34();
          sub_229326FD0(&qword_255A424C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v177 = v329;
          v178 = sub_2293B9308();
          v180 = v179;
          v270(v328, v177);
          v345 = sub_22932DB78(v178, v180, &aBlock);
          v122 = v332;
          sub_2293B9110();
          swift_bridgeObjectRelease();
          v331 = *(uint8_t **)(v273 + 8);
          ((void (*)(char *, uint64_t))v331)(v324, v171);
          _os_log_impl(&dword_22931B000, v173, v174, "SyncedModel: Requesting ownership. Sending ownership change request to authority: %s", v175, 0xCu);
          swift_arrayDestroy();
          v181 = v176;
          v116 = v328;
          MEMORY[0x22E2C869C](v181, -1, -1);
          MEMORY[0x22E2C869C](v175, -1, -1);

        }
        else
        {
          v331 = *(uint8_t **)(v273 + 8);
          ((void (*)(char *, uint64_t))v331)(v123, v171);

          v177 = v329;
        }
        v199 = *(_QWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
        v200 = *(unsigned __int8 *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
        v201 = v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v202 = v201;
        v203 = (void (*)(char *, uint64_t, unint64_t))v330;
        ((void (*)(char *, uint64_t, unint64_t))v330)(v116, v202, v177);
        v204 = (uint64_t)v116;
        v205 = v326;
        v203(v326, v272, v177);
        LODWORD(v203) = *(_DWORD *)(v122 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
        v206 = v316;
        sub_2293B8A14();
        v207 = v325;
        sub_229355524(v199, v200, v204, v205, 0, 1, (int)v203, v206, v325);
        v208 = type metadata accessor for SyncMessage.OneOf_Contents(0);
        v209 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56);
        v210 = v314;
        v209(v314, 1, 1, v208);
        sub_2293B8B70();
        v211 = v207;
        v212 = v313;
        sub_229324D74(v211, v313, type metadata accessor for OwnershipChangeRequestMessage);
        sub_2293251F8(v210, qword_255A42398);
        sub_22932EA14(v212, v210, type metadata accessor for OwnershipChangeRequestMessage);
        swift_storeEnumTagMultiPayload();
        v209(v210, 0, 1, v208);
        sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
        v213 = (void (**)(char *, unint64_t))sub_2293B8C6C();
        v215 = v214;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255A424E8);
        v216 = (*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80);
        v217 = swift_allocObject();
        *(_OWORD *)(v217 + 16) = xmmword_2293BA260;
        v317(v217 + v216, (uint64_t)v333, v334);
        v218 = sub_2293450A4(v217);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v219 = v304;
        *v304 = v218;
        v220 = v278;
        v221 = v280;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v278 + 104))(v219, *MEMORY[0x24BDD1F58], v280);
        v222 = v305;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v220 + 16))((uint64_t)v305 + *(int *)(v274 + 20), v219, v221);
        *v222 = v213;
        v222[1] = v215;
        v223 = Strong;
        v224 = (unint64_t *)(Strong + 16);
        swift_beginAccess();
        v225 = *(_QWORD *)(v223 + 16);
        v330 = v213;
        sub_229324ECC((uint64_t)v213, v215);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v223 + 16) = v225;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v225 = sub_22936EF90(0, *(_QWORD *)(v225 + 16) + 1, 1, v225, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
          *v224 = v225;
        }
        v227 = v315;
        v228 = v336;
        v230 = *(_QWORD *)(v225 + 16);
        v229 = *(_QWORD *)(v225 + 24);
        if (v230 >= v229 >> 1)
        {
          v225 = sub_22936EF90(v229 > 1, v230 + 1, 1, v225, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
          *v224 = v225;
        }
        *(_QWORD *)(v225 + 16) = v230 + 1;
        sub_22932EA14((uint64_t)v305, v225+ ((*(unsigned __int8 *)(v279 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80))+ *(_QWORD *)(v279 + 72) * v230, type metadata accessor for SyncedModelManager.MessageWrapper);
        swift_endAccess();
        (*(void (**)(uint64_t *, uint64_t))(v220 + 8))(v304, v221);
        v231 = v325;
        v232 = v306;
        sub_229324D74(v325, v306, type metadata accessor for OwnershipChangeRequestMessage);
        swift_retain();
        sub_2293B89C0();
        v233 = v231 + *(int *)(v307 + 40);
        v234 = v277;
        sub_229324E44(v233, v277, &qword_255A41F98);
        v235 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v308 + 48);
        v236 = v309;
        if (v235(v234, 1, v309) == 1)
        {
          v237 = v276;
          *v276 = 0;
          v237[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v234, &qword_255A41F98);
        }
        else
        {
          v237 = v276;
          sub_22932EA14(v234, (uint64_t)v276, type metadata accessor for PBUUID);
        }
        sub_229357288();
        sub_22932E904((uint64_t)v237, type metadata accessor for PBUUID);
        v250 = (uint64_t (**)(uint64_t *))(v232 + *(int *)(v227 + 20));
        *v250 = v335;
        v250[1] = v228;
        v251 = v284;
        sub_229324E44(v233, v284, &qword_255A41F98);
        v252 = v235(v251, 1, v236);
        v329 = v215;
        v253 = v281;
        if (v252 == 1)
        {
          *v281 = 0;
          v253[1] = 0;
          sub_2293B8B70();
          sub_2293251F8(v251, &qword_255A41F98);
        }
        else
        {
          sub_22932EA14(v251, (uint64_t)v281, type metadata accessor for PBUUID);
        }
        v254 = (uint64_t)v275;
        sub_229357288();
        sub_22932E904((uint64_t)v253, type metadata accessor for PBUUID);
        v255 = v311;
        sub_229324D74(v232, v311, type metadata accessor for CachedOwnershipRequest);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v310 + 56))(v255, 0, 1, v227);
        swift_beginAccess();
        sub_22935B778(v255, v254);
        swift_endAccess();
        v256 = *(id *)(Strong + 40);
        v257 = v285;
        sub_2293B8E4C();
        v258 = v287;
        MEMORY[0x22E2C7C40](v257, 2.0);
        v336 = *(uint64_t (**)(uint64_t *))(v286 + 8);
        v259 = v288;
        ((void (*)(char *, uint64_t))v336)(v257, v288);
        v260 = v313;
        sub_229324D74(v325, v313, type metadata accessor for OwnershipChangeRequestMessage);
        v261 = v122;
        v262 = (*(unsigned __int8 *)(v282 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v282 + 80);
        v263 = swift_allocObject();
        *(_QWORD *)(v263 + 16) = v261;
        sub_22932EA14(v260, v263 + v262, type metadata accessor for OwnershipChangeRequestMessage);
        v342 = sub_229370E5C;
        v343 = v263;
        aBlock = MEMORY[0x24BDAC760];
        v339 = 1107296256;
        v340 = sub_229325F20;
        v341 = &block_descriptor_1;
        v264 = _Block_copy(&aBlock);
        swift_retain();
        v265 = v319;
        sub_2293B8E34();
        v344 = MEMORY[0x24BEE4AF8];
        sub_229326FD0(&qword_255A41F38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F40);
        sub_229343CBC((unint64_t *)&qword_255A41F48, &qword_255A41F40, MEMORY[0x24BEE12C8]);
        v266 = v318;
        v267 = v322;
        sub_2293B9128();
        MEMORY[0x22E2C7EA4](v258, v265, v266, v264);
        _Block_release(v264);

        sub_229324F6C((uint64_t)v330, v329);
        swift_release();
        (*(void (**)(char *, uint64_t))(v320 + 8))(v266, v267);
        (*(void (**)(char *, uint64_t))(v321 + 8))(v265, v323);
        ((void (*)(char *, uint64_t))v336)(v258, v259);
        sub_22932E904(v306, type metadata accessor for CachedOwnershipRequest);
        sub_22932E904(v314, type metadata accessor for SyncMessage);
        sub_22932E904(v325, type metadata accessor for OwnershipChangeRequestMessage);
        v268 = v334;
        v269 = v331;
        ((void (*)(uint64_t, uint64_t))v331)(v327, v334);
        ((void (*)(char *, uint64_t))v269)(v333, v268);
        return swift_release();
      }
      sub_2293251F8((uint64_t)v74, &qword_255A41F70);
      sub_2293251F8((uint64_t)v76, &qword_255A41F70);
      (*((void (**)(char *, unint64_t))v331 + 1))(v71, v110);
      v114 = v333;
    }
    sub_2293251F8((uint64_t)v59, &qword_255A43648);
    goto LABEL_23;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v90 = sub_2293B8D5C();
  __swift_project_value_buffer(v90, (uint64_t)qword_255A44C60);
  v91 = sub_2293B8D44();
  v92 = sub_2293B9098();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v93 = 0;
    _os_log_impl(&dword_22931B000, v91, v92, "SyncedModel: tried to request ownership before the model is registered. This does nothing.", v93, 2u);
    MEMORY[0x22E2C869C](v93, -1, -1);
  }

  LOBYTE(aBlock) = 1;
  return v335(&aBlock);
}

uint64_t sub_22936B8D4(uint64_t a1, unsigned int (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char v48[24];

  v46 = a2;
  v47 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43660);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v45 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v40 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v12 = type metadata accessor for PBUUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v40 - v16);
  v18 = sub_2293B8A20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v41 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v40 - v22;
  v24 = type metadata accessor for CachedOwnershipRequest(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v44 = (uint64_t)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (uint64_t)v46 + *(int *)(type metadata accessor for OwnershipChangeRequestMessage(0) + 40);
  sub_229324E44(v40, (uint64_t)v11, &qword_255A41F98);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v46(v11, 1, v12) == 1)
  {
    *v17 = 0;
    v17[1] = 0;
    sub_2293B8B70();
    sub_2293251F8((uint64_t)v11, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v11, (uint64_t)v17, type metadata accessor for PBUUID);
  }
  sub_229357288();
  sub_22932E904((uint64_t)v17, type metadata accessor for PBUUID);
  v27 = (uint64_t *)(v47 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingReply);
  swift_beginAccess();
  v28 = *v27;
  v29 = v18;
  if (*(_QWORD *)(*v27 + 16))
  {
    swift_bridgeObjectRetain();
    v30 = sub_22936F3E8((uint64_t)v23);
    if ((v31 & 1) != 0)
    {
      sub_229324D74(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v25 + 72) * v30, (uint64_t)v6, type metadata accessor for CachedOwnershipRequest);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v24);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v6, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v6, 1, 1, v24);
  }
  v32 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32(v23, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
    return sub_2293251F8((uint64_t)v6, &qword_255A43660);
  v34 = v44;
  sub_22932EA14((uint64_t)v6, v44, type metadata accessor for CachedOwnershipRequest);
  v35 = v43;
  sub_229324E44(v40, v43, &qword_255A41F98);
  if (v46((char *)v35, 1, v12) == 1)
  {
    v36 = v42;
    *v42 = 0;
    v36[1] = 0;
    sub_2293B8B70();
    sub_2293251F8(v35, &qword_255A41F98);
  }
  else
  {
    v36 = v42;
    sub_22932EA14(v35, (uint64_t)v42, type metadata accessor for PBUUID);
  }
  v37 = (uint64_t)v41;
  sub_229357288();
  sub_22932E904((uint64_t)v36, type metadata accessor for PBUUID);
  swift_beginAccess();
  v38 = v45;
  sub_22931E0D4(v37, v45);
  v32((char *)v37, v29);
  sub_2293251F8(v38, &qword_255A43660);
  swift_endAccess();
  v39 = *(void (**)(char *))(v34 + *(int *)(v24 + 20));
  v48[0] = 2;
  swift_retain();
  v39(v48);
  swift_release();
  return sub_22932E904(v34, type metadata accessor for CachedOwnershipRequest);
}

void sub_22936BD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *isa;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, _QWORD *);
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  char *v52;
  char v53;
  void (*v54)(char *, void (*)(char *, uint64_t, uint64_t));
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint8_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, _QWORD *);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  NSObject *v87;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, _QWORD *);
  void (*v98)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  NSObject *v115;

  v100 = type metadata accessor for SyncedModelManager.MessageWrapper(0);
  v101 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v103 = (uint64_t *)((char *)&v94 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2 = sub_2293B8B58();
  v104 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v102 = (char *)&v94 - v6;
  v107 = type metadata accessor for SyncMessage(0);
  MEMORY[0x24BDAC7A8](v107);
  v111 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v106 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v113 = (uint64_t)&v94 - v11;
  v12 = (void (*)(char *, uint64_t, uint64_t))sub_2293B8A20();
  v13 = *((_QWORD *)v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v105 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v114 = (char *)&v94 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43648);
  MEMORY[0x24BDAC7A8](v17);
  isa = (unint64_t *)((char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v108 = (uint64_t)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v109 = (uint64_t)&v94 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v110 = (char *)&v94 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v112 = (uint64_t)&v94 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v94 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v94 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43650);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v94 = v5;
    v95 = v2;
    v115 = Strong;
    v38 = type metadata accessor for PendingOwnershipRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 1, 1, v38);
    v39 = v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest;
    swift_beginAccess();
    sub_229324E88((uint64_t)v36, v39, &qword_255A43650);
    swift_endAccess();
    v40 = v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    sub_229324E44(v40, (uint64_t)v33, &qword_255A41F70);
    v99 = v0;
    v41 = *(void (**)(_QWORD))(v13 + 16);
    v96 = v0 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID;
    v97 = (void (*)(char *, uint64_t, _QWORD *))v41;
    v41(v31);
    v98 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t)))(v13 + 56);
    v98((uint64_t)v31, 0, 1, v12);
    v42 = (uint64_t)isa + *(int *)(v17 + 48);
    sub_229324E44((uint64_t)v33, (uint64_t)isa, &qword_255A41F70);
    sub_229324E44((uint64_t)v31, v42, &qword_255A41F70);
    v43 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v13 + 48);
    if (v43((uint64_t)isa, 1, v12) == 1)
    {
      sub_2293251F8((uint64_t)v31, &qword_255A41F70);
      sub_2293251F8((uint64_t)v33, &qword_255A41F70);
      if (v43(v42, 1, v12) == 1)
      {
        sub_2293251F8((uint64_t)isa, &qword_255A41F70);
        goto LABEL_19;
      }
    }
    else
    {
      v47 = v112;
      sub_229324E44((uint64_t)isa, v112, &qword_255A41F70);
      if (v43(v42, 1, v12) != 1)
      {
        v52 = v114;
        (*(void (**)(char *, uint64_t, _QWORD *))(v13 + 32))(v114, v42, v12);
        sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v53 = sub_2293B8F00();
        v54 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v13 + 8);
        v54(v52, v12);
        sub_2293251F8((uint64_t)v31, &qword_255A41F70);
        sub_2293251F8((uint64_t)v33, &qword_255A41F70);
        v54((char *)v47, v12);
        sub_2293251F8((uint64_t)isa, &qword_255A41F70);
        if ((v53 & 1) != 0)
        {
LABEL_19:
          if (qword_255A41A88 != -1)
            swift_once();
          v55 = sub_2293B8D5C();
          v112 = __swift_project_value_buffer(v55, (uint64_t)qword_255A44C60);
          v56 = sub_2293B8D44();
          v57 = sub_2293B90B0();
          v58 = os_log_type_enabled(v56, v57);
          v59 = (uint64_t)v110;
          v60 = (uint64_t)v111;
          v61 = v99;
          v62 = v98;
          if (v58)
          {
            v63 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v63 = 0;
            _os_log_impl(&dword_22931B000, v56, v57, "SyncedModel: Releasing ownership. Broadcasting to all participants.", v63, 2u);
            MEMORY[0x22E2C869C](v63, -1, -1);
          }

          v62(v59, 1, 1, v12);
          v64 = &qword_255A41F70;
          v65 = v109;
          sub_229324E44(v40, v109, &qword_255A41F70);
          swift_beginAccess();
          sub_22932E988(v59, v40);
          swift_endAccess();
          v66 = v40;
          v67 = v108;
          sub_229324E44(v66, v108, &qword_255A41F70);
          sub_22935FF10(v65, v67);
          sub_2293251F8(v67, &qword_255A41F70);
          sub_2293251F8(v59, &qword_255A41F70);
          sub_2293251F8(v65, &qword_255A41F70);
          v68 = *(_DWORD *)(v61 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter);
          v69 = (v68 + 1);
          if (v68 == -1)
          {
            __break(1u);
          }
          else
          {
            v70 = v59;
            *(_DWORD *)(v61 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = v69;
            v71 = *(_QWORD *)(v61 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type);
            v72 = *(unsigned __int8 *)(v61 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type + 8);
            v73 = v61 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
            swift_beginAccess();
            v74 = (uint64_t)v114;
            v75 = v73;
            v76 = v97;
            v97(v114, v75, v12);
            v77 = v105;
            v76(v105, v96, v12);
            v62(v70, 1, 1, v12);
            v78 = v113;
            sub_229355B00(v71, v72, v74, v77, v70, v69, 1, v113);
            v79 = type metadata accessor for SyncMessage.OneOf_Contents(0);
            v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56);
            v80(v60, 1, 1, v79);
            sub_2293B8B70();
            v81 = v106;
            sub_229324D74(v78, v106, type metadata accessor for OwnershipChangeBroadcastMessage);
            sub_2293251F8(v60, qword_255A42398);
            sub_22932EA14(v81, v60, type metadata accessor for OwnershipChangeBroadcastMessage);
            swift_storeEnumTagMultiPayload();
            v80(v60, 0, 1, v79);
            sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
            v69 = sub_2293B8C6C();
            v67 = v82;
            v61 = *MEMORY[0x24BDD1F50];
            v83 = v104;
            v12 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 104);
            v84 = v102;
            v85 = v95;
            v12(v102, v61, v95);
            v86 = v103;
            (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))((uint64_t)v103 + *(int *)(v100 + 20), v84, v85);
            *v86 = v69;
            v86[1] = v67;
            v87 = v115;
            v64 = (uint64_t *)&v115[2];
            swift_beginAccess();
            isa = (unint64_t *)v87[2].isa;
            sub_229324ECC(v69, v67);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v87[2].isa = (Class)isa;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
LABEL_25:
              v90 = isa[2];
              v89 = isa[3];
              if (v90 >= v89 >> 1)
              {
                isa = (unint64_t *)sub_22936EF90(v89 > 1, v90 + 1, 1, (unint64_t)isa, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
                *v64 = (uint64_t)isa;
              }
              isa[2] = v90 + 1;
              sub_22932EA14((uint64_t)v103, (uint64_t)isa+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(_QWORD *)(v101 + 72) * v90, type metadata accessor for SyncedModelManager.MessageWrapper);
              swift_endAccess();
              v91 = *(void (**)(char *, uint64_t))(v104 + 8);
              v92 = v95;
              v91(v102, v95);
              v93 = (uint64_t)v94;
              v12(v94, v61, v92);
              sub_2293311A8(v93);
              sub_229324F6C(v69, v67);
              swift_release();
              v91((char *)v93, v92);
              sub_22932E904(v60, type metadata accessor for SyncMessage);
              sub_22932E904(v113, type metadata accessor for OwnershipChangeBroadcastMessage);
              return;
            }
          }
          isa = (unint64_t *)sub_22936EF90(0, isa[2] + 1, 1, (unint64_t)isa, &qword_255A43658, type metadata accessor for SyncedModelManager.MessageWrapper);
          *v64 = (uint64_t)isa;
          goto LABEL_25;
        }
        goto LABEL_13;
      }
      sub_2293251F8((uint64_t)v31, &qword_255A41F70);
      sub_2293251F8((uint64_t)v33, &qword_255A41F70);
      (*(void (**)(uint64_t, void (*)(char *, uint64_t, uint64_t)))(v13 + 8))(v47, v12);
    }
    sub_2293251F8((uint64_t)isa, &qword_255A43648);
LABEL_13:
    if (qword_255A41A88 != -1)
      swift_once();
    v48 = sub_2293B8D5C();
    __swift_project_value_buffer(v48, (uint64_t)qword_255A44C60);
    v49 = sub_2293B8D44();
    v50 = sub_2293B90B0();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_22931B000, v49, v50, "SyncedModel: Attempting to release ownership of model you don't currently own.", v51, 2u);
      MEMORY[0x22E2C869C](v51, -1, -1);
    }

    swift_release();
    return;
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v44 = sub_2293B8D5C();
  __swift_project_value_buffer(v44, (uint64_t)qword_255A44C60);
  v115 = sub_2293B8D44();
  v45 = sub_2293B90B0();
  if (os_log_type_enabled(v115, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_22931B000, v115, v45, "SyncedModel: Attempting to release ownership before model is attached to group session.", v46, 2u);
    MEMORY[0x22E2C869C](v46, -1, -1);
  }

}

void sub_22936CB40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2293B9104();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for PendingOwnershipRequest(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43610);
}

_QWORD *sub_22936CBA0(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    v6 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
    v7 = v6[7];
    v8 = (char *)v4 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = v6[8];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17((uint64_t *)v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((char *)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = v6[9];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = (void (*)(char *, char *, uint64_t))v11;
    }
    else
    {
      *v21 = *v22;
      v25 = *(int *)(v15 + 24);
      v26 = (char *)v22 + v25;
      v24 = (void (*)(char *, char *, uint64_t))v11;
      v11((char *)v21 + v25, (uint64_t)v26, v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    v27 = v6[10];
    v28 = (_OWORD *)((char *)v4 + v27);
    v29 = (_OWORD *)((char *)a2 + v27);
    if (v17((uint64_t *)((char *)a2 + v27), 1, v15))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v28 = *v29;
      v24((char *)v28 + *(int *)(v15 + 24), (char *)v29 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
    }
    v31 = a3[5];
    v32 = a3[6];
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (char *)v4 + v32;
    v37 = (uint64_t)a2 + v32;
    v38 = sub_2293B89CC();
    v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    swift_retain();
    v39(v36, v37, v38);
    v40 = a3[7];
    v41 = (char *)v4 + v40;
    v42 = (uint64_t)a2 + v40;
    v43 = sub_2293B8A20();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return v4;
}

uint64_t sub_22936CE80(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v5 = a1 + v4[7];
  v6 = sub_2293B8B7C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + v4[8];
  v9 = type metadata accessor for PBUUID(0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
    v7(v8 + *(int *)(v9 + 24), v6);
  v11 = a1 + v4[9];
  if (!v10(v11, 1, v9))
    v7(v11 + *(int *)(v9 + 24), v6);
  v12 = a1 + v4[10];
  if (!v10(v12, 1, v9))
    v7(v12 + *(int *)(v9 + 24), v6);
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  v14 = sub_2293B89CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + *(int *)(a2 + 28);
  v16 = sub_2293B8A20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t sub_22936CFD8(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v5 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v6 = v5[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = v5[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = v5[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = v5[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16((_OWORD *)(a2 + v22), 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  v26 = a3[5];
  v27 = a3[6];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  v33 = sub_2293B89CC();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_retain();
  v34(v31, v32, v33);
  v35 = a3[7];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t sub_22936D280(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;

  v5 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v5;
  v6 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  v7 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_2293B8B7C();
  v47 = *(_QWORD *)(v11 - 8);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24);
  v46(v9, v10, v11);
  v12 = v7[8];
  v13 = (char *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v46((uint64_t)&v13[*(int *)(v15 + 24)], (uint64_t)&v14[*(int *)(v15 + 24)], v11);
LABEL_7:
  v21 = v7[9];
  v22 = (char *)(a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = v17((char *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v22[*(int *)(v15 + 24)], &v23[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_22932E904((uint64_t)v22, type metadata accessor for PBUUID);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  v46((uint64_t)&v22[*(int *)(v15 + 24)], (uint64_t)&v23[*(int *)(v15 + 24)], v11);
LABEL_13:
  v27 = v7[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = v17((char *)(a1 + v27), 1, v15);
  v31 = v17(v29, 1, v15);
  if (!v30)
  {
    if (!v31)
    {
      *v28 = *(_QWORD *)v29;
      v28[1] = *((_QWORD *)v29 + 1);
      v46((uint64_t)v28 + *(int *)(v15 + 24), (uint64_t)&v29[*(int *)(v15 + 24)], v11);
      goto LABEL_19;
    }
    sub_22932E904((uint64_t)v28, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  *v28 = *(_QWORD *)v29;
  v28[1] = *((_QWORD *)v29 + 1);
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))((char *)v28 + *(int *)(v15 + 24), &v29[*(int *)(v15 + 24)], v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
LABEL_19:
  v33 = a3[5];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)((char *)a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  v37 = a3[6];
  v38 = a1 + v37;
  v39 = (uint64_t)a2 + v37;
  v40 = sub_2293B89CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
  v41 = a3[7];
  v42 = a1 + v41;
  v43 = (uint64_t)a2 + v41;
  v44 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  return a1;
}

uint64_t sub_22936D670(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v5 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v6 = v5[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = v5[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = v5[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = v5[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16((_OWORD *)(a2 + v22), 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  v26 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_2293B89CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

uint64_t sub_22936D904(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v5 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v6 = v5[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v41 = *(_QWORD *)(v9 - 8);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40);
  v40(v7, v8, v9);
  v10 = v5[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v40((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = v5[9];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v20[*(int *)(v13 + 24)], &v21[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v40((uint64_t)&v20[*(int *)(v13 + 24)], (uint64_t)&v21[*(int *)(v13 + 24)], v9);
LABEL_13:
  v25 = v5[10];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *(_OWORD *)v27;
      v40((uint64_t)v26 + *(int *)(v13 + 24), (uint64_t)&v27[*(int *)(v13 + 24)], v9);
      goto LABEL_19;
    }
    sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  *v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v26 + *(int *)(v13 + 24), &v27[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  v31 = a3[6];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2293B89CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[7];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_22936DCB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22936DCC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for OwnershipChangeRequestMessage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_2293B89CC();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_2293B8A20();
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[7];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_22936DD90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22936DD9C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for OwnershipChangeRequestMessage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = sub_2293B89CC();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_2293B8A20();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CachedOwnershipRequest(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43578);
}

uint64_t sub_22936DE78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for OwnershipChangeRequestMessage(319);
  if (v1 <= 0x3F)
  {
    result = sub_2293B89CC();
    if (v2 <= 0x3F)
    {
      result = sub_2293B8A20();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for SyncedModelController.PropertyStorage(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_weakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for SyncedModelController.PropertyStorage(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_weakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for SyncedModelController.PropertyStorage(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_weakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for SyncedModelController.PropertyStorage(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_weakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for SyncedModelController.PropertyStorage(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedModelController.PropertyStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelController.PropertyStorage()
{
  return &type metadata for SyncedModelController.PropertyStorage;
}

_QWORD *sub_22936E060(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2293B89CC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_22936E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2293B89CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_22936E144(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2293B89CC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_22936E1B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B89CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_22936E228(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B89CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_22936E284(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B89CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_22936E2F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22936E2FC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B89CC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_22936E378()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_22936E384(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2293B89CC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_22936E3F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B89CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_22936E470(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[4];

  v103 = a1;
  v3 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43670);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v99 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v101 = (uint64_t)&v84 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v94 = (uint64_t)&v84 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v84 - v15;
  v17 = type metadata accessor for PBUUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v87 = (uint64_t *)((char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v93 = (uint64_t *)((char *)&v84 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v84 - v23);
  v25 = sub_2293B8A20();
  v100 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v86 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v92 = (char *)&v84 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v84 - v30;
  v32 = type metadata accessor for OwnershipChangeRequestMessage(0);
  MEMORY[0x24BDAC7A8](v32);
  v98 = (uint64_t)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_2293B8B40();
  v96 = *(_QWORD *)(v34 - 8);
  v97 = v34;
  MEMORY[0x24BDAC7A8](v34);
  v102 = (uint64_t)&v84 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = v3;
  v36 = *(int *)(v3 + 36);
  v95 = a2;
  v90 = a2 + v36;
  sub_229324E44(a2 + v36, (uint64_t)v16, &qword_255A41F98);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v37(v16, 1, v17) == 1)
  {
    *v24 = 0;
    v24[1] = 0;
    sub_2293B8B70();
    sub_2293251F8((uint64_t)v16, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v16, (uint64_t)v24, type metadata accessor for PBUUID);
  }
  sub_229357288();
  sub_22932E904((uint64_t)v24, type metadata accessor for PBUUID);
  v38 = (uint64_t *)(v103 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingHandoffReply);
  swift_beginAccess();
  v91 = v38;
  v39 = *v38;
  if (*(_QWORD *)(*v38 + 16))
  {
    swift_bridgeObjectRetain();
    v40 = sub_22936F3E8((uint64_t)v31);
    if ((v41 & 1) != 0)
    {
      v42 = v40;
      v43 = v5;
      v44 = v37;
      v45 = *(_QWORD *)(v39 + 56);
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
      v47 = v17;
      v48 = v25;
      v49 = *(_QWORD *)(v46 - 8);
      v50 = v45 + *(_QWORD *)(v49 + 72) * v42;
      v37 = v44;
      v5 = v43;
      v51 = v101;
      sub_229324E44(v50, v101, &qword_255A41CE0);
      v52 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56);
      v25 = v48;
      v17 = v47;
      v52(v51, 0, 1, v46);
    }
    else
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
      v51 = v101;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v101, 1, 1, v54);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
    v51 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v101, 1, 1, v53);
  }
  v55 = *(void (**)(char *, uint64_t))(v100 + 8);
  v55(v31, v25);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41CE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v51, 1, v56) == 1)
  {
    v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37;
    sub_2293251F8(v51, &qword_255A43670);
    if (qword_255A41A88 != -1)
      swift_once();
    v58 = sub_2293B8D5C();
    __swift_project_value_buffer(v58, (uint64_t)qword_255A44C60);
    sub_229324D74(v95, (uint64_t)v5, type metadata accessor for OwnershipHandoffRequestMessage);
    v59 = sub_2293B8D44();
    v60 = sub_2293B90B0();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v104[0] = v62;
      *(_DWORD *)v61 = 136315138;
      v63 = v88;
      sub_229324E44((uint64_t)&v5[*(int *)(v89 + 36)], v88, &qword_255A41F98);
      v64 = v57(v63, 1, v17);
      v85 = v5;
      v65 = v25;
      v66 = v87;
      if (v64 == 1)
      {
        *v87 = 0;
        v66[1] = 0;
        sub_2293B8B70();
        sub_2293251F8(v63, &qword_255A41F98);
      }
      else
      {
        sub_22932EA14(v63, (uint64_t)v87, type metadata accessor for PBUUID);
      }
      v80 = v86;
      sub_229357288();
      sub_22932E904((uint64_t)v66, type metadata accessor for PBUUID);
      v81 = sub_2293B89E4();
      v83 = v82;
      v55(v80, v65);
      v104[3] = sub_22932DB78(v81, v83, v104);
      sub_2293B9110();
      swift_bridgeObjectRelease();
      sub_22932E904((uint64_t)v85, type metadata accessor for OwnershipHandoffRequestMessage);
      _os_log_impl(&dword_22931B000, v59, v60, "SyncedModel: Ownership request has been handled or failed to find ownership request for handoff timeout: %s", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2C869C](v62, -1, -1);
      MEMORY[0x22E2C869C](v61, -1, -1);
    }
    else
    {
      sub_22932E904((uint64_t)v5, type metadata accessor for OwnershipHandoffRequestMessage);
    }

  }
  else
  {
    v67 = v51 + *(int *)(v56 + 48);
    v69 = v96;
    v68 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 32))(v102, v51, v97);
    v70 = v98;
    sub_22932EA14(v67, v98, type metadata accessor for OwnershipChangeRequestMessage);
    v71 = v94;
    sub_229324E44(v90, v94, &qword_255A41F98);
    if (v37((char *)v71, 1, v17) == 1)
    {
      v72 = v93;
      *v93 = 0;
      v72[1] = 0;
      sub_2293B8B70();
      sub_2293251F8(v71, &qword_255A41F98);
    }
    else
    {
      v72 = v93;
      sub_22932EA14(v71, (uint64_t)v93, type metadata accessor for PBUUID);
    }
    v73 = (uint64_t)v92;
    sub_229357288();
    sub_22932E904((uint64_t)v72, type metadata accessor for PBUUID);
    swift_beginAccess();
    v74 = v99;
    sub_22931E214(v73, v99);
    v55((char *)v73, v25);
    sub_2293251F8(v74, &qword_255A43670);
    swift_endAccess();
    if (qword_255A41A88 != -1)
      swift_once();
    v75 = sub_2293B8D5C();
    __swift_project_value_buffer(v75, (uint64_t)qword_255A44C60);
    v76 = sub_2293B8D44();
    v77 = sub_2293B90B0();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_22931B000, v76, v77, "SyncedModel: Ownership handoff request timed out", v78, 2u);
      MEMORY[0x22E2C869C](v78, -1, -1);
    }

    v79 = v102;
    sub_229361588(v70, v102, 5, 1);
    sub_22932E904(v70, type metadata accessor for OwnershipChangeRequestMessage);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v79, v68);
  }
}

_QWORD *sub_22936ED78(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A436C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2293708A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22936EE84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A436F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_229370994(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22936EF90(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2293B9224();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2293710D4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_22936F19C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22936EF90(a1, a2, a3, a4, &qword_255A436D0, type metadata accessor for LamportTimestamp);
}

uint64_t sub_22936F1B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22936EF90(a1, a2, a3, a4, &qword_255A436D8, type metadata accessor for ValueData);
}

char *sub_22936F1C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A436E0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_229370C34(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22936F2D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22936EF90(a1, a2, a3, a4, &qword_255A436E8, type metadata accessor for SyncedModelManager.SyncedModelMessageBufferItem);
}

uint64_t sub_22936F2E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22936EF90(a1, a2, a3, a4, &qword_255A424E8, (uint64_t (*)(_QWORD))MEMORY[0x24BDD1F00]);
}

void *sub_22936F2F8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_2293B926C();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_22936F38C@<X0>(uint64_t (*a1)(void)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_22936F3B4(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x22E2C8198](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_22936F4E8(a1, v3);
}

unint64_t sub_22936F3E8(uint64_t a1)
{
  uint64_t v2;

  sub_2293B8A20();
  sub_229326FD0((unint64_t *)&qword_255A41CD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_2293B8EE8();
  return sub_22936F584(a1, v2);
}

unint64_t sub_22936F454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2293B93D4();
  sub_2293B8F18();
  v4 = sub_2293B93F8();
  return sub_22936F6C4(a1, a2, v4);
}

unint64_t sub_22936F4B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2293B93C8();
  return sub_22936F7A4(a1, v2);
}

unint64_t sub_22936F4E8(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_22936F584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_2293B8A20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_2293B8F00();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_22936F6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2293B9350() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2293B9350() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_22936F7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

size_t sub_22936F840(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  size_t result;

  if (a2 <= a1)
    v4 = a1;
  else
    v4 = a2;
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = *(_QWORD *)(a4(0) - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v10);
  if (v8)
  {
    if (result - v9 != 0x8000000000000000 || v8 != -1)
    {
      v10[2] = a1;
      v10[3] = 2 * ((uint64_t)(result - v9) / v8);
      return (size_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22936F8F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936FF04(a1, a2, a3, (_QWORD *)*v3, &qword_255A43698, type metadata accessor for ModelData.PropertyDataMap);
  *v3 = result;
  return result;
}

uint64_t sub_22936F924(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936FF04(a1, a2, a3, (_QWORD *)*v3, &qword_255A43688, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_22936F950(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936F9FC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22936F96C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936FBA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22936F988(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936FF04(a1, a2, a3, (_QWORD *)*v3, &qword_255A436D0, type metadata accessor for LamportTimestamp);
  *v3 = result;
  return result;
}

uint64_t sub_22936F9B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22936FD88(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22936F9D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22936FF04(a1, a2, a3, (_QWORD *)*v3, &qword_255A424E8, (uint64_t (*)(_QWORD))MEMORY[0x24BDD1F00]);
  *v3 = result;
  return result;
}

uint64_t sub_22936F9FC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A436A0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A436A8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_22936FBA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A43690);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A42230) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A42230) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_22936FD88(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A436C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_22936FEF0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22936FF04(a1, a2, a3, a4, &qword_255A424E8, (uint64_t (*)(_QWORD))MEMORY[0x24BDD1F00]);
}

uint64_t sub_22936FF04(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293700E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  BOOL v34;
  uint64_t result;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _QWORD *v41;
  _BYTE *v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE v45[16];
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];
  _QWORD v51[2];
  _BYTE v52[32];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;

  v43 = a2;
  v38 = sub_2293B941C();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[1] = swift_getObjectType();
  v53 = a1;
  swift_unknownObjectRetain();
  sub_2293B9404();
  v36 = v4;
  sub_2293B9410();
  v5 = sub_2293B91F4();
  swift_release();
  v6 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties;
  swift_retain();
  sub_2293B9278();
  if (!v56)
  {
LABEL_18:
    swift_release_n();
    v53 = *(_QWORD *)(v43 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_status);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A436F8);
    sub_229343CBC(&qword_255A43700, &qword_255A436F8, MEMORY[0x24BDB9D10]);
    sub_2293B8E10();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_2293B8D74();
    swift_endAccess();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  }
  v7 = (_QWORD *)(v43 + v6);
  v8 = v52;
  v9 = v55;
  v10 = v50;
  v11 = 1;
  v42 = v52;
  v41 = v55;
  v40 = v50;
  v39 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    v12 = v53;
    v13 = v54;
    v51[0] = v53;
    v51[1] = v54;
    sub_22935AB6C(v9, v8);
    v48 = v12;
    v49 = v13;
    sub_2293251BC((uint64_t)v8, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A43050);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_2293251F8((uint64_t)v51, &qword_255A43048);
      goto LABEL_4;
    }
    v14 = v5;
    v15 = v46;
    v16 = v47;
    v17 = *v46;
    v18 = *(void (**)(uint64_t))(*v46 + 152);
    swift_retain();
    v19 = swift_retain();
    v18(v19);
    swift_release();
    (*(void (**)(uint64_t))(*v15 + 200))(v11);
    v47 = v16;
    swift_weakInit();
    swift_beginAccess();
    sub_22932513C((uint64_t)&v46, (uint64_t)v45);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = (_QWORD *)*v7;
    v21 = v44;
    *v7 = 0x8000000000000000;
    v23 = sub_22936F3B4(v11);
    v24 = v21[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v21[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_229322994();
    }
    else
    {
      sub_22931E44C(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_22936F3B4(v11);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_22;
      v23 = v28;
    }
    v30 = v44;
    if ((v27 & 1) != 0)
    {
      sub_2293711F4((uint64_t)v45, v44[7] + 16 * v23);
    }
    else
    {
      v44[(v23 >> 6) + 8] |= 1 << v23;
      *(_DWORD *)(v30[6] + 4 * v23) = v11;
      sub_22932513C((uint64_t)v45, v30[7] + 16 * v23);
      v31 = v30[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_21;
      v30[2] = v33;
    }
    *v7 = v30;
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
    swift_release();
    sub_2293251F8((uint64_t)v51, &qword_255A43048);
    v34 = __CFADD__((_DWORD)v11, 1);
    v11 = (v11 + 1);
    if (v34)
      goto LABEL_20;
    v5 = v14;
    v8 = v42;
    v9 = v41;
    v10 = v40;
LABEL_4:
    sub_2293B9278();
    if (!v56)
      goto LABEL_18;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_2293B9380();
  __break(1u);
  return result;
}

uint64_t sub_2293705AC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_229370634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  swift_weakInit();
  sub_2293B8A14();
  v4 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__type;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController__properties;
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + v5) = sub_22932E600(MEMORY[0x24BEE4AF8]);
  v7 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__transaction;
  v8 = type metadata accessor for SyncTransactionMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController_transactionLock;
  sub_2293B8A68();
  swift_allocObject();
  *(_QWORD *)(a2 + v9) = sub_2293B8A5C();
  sub_2293B8A14();
  v10 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUIDsToParticipants;
  *(_QWORD *)(a2 + v10) = sub_2293276AC(v6);
  v11 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__authorityParticipant;
  v12 = sub_2293B8B40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  v14 = sub_2293B8A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (_QWORD *)(a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestHandler);
  *v15 = 0;
  v15[1] = 0;
  *(_DWORD *)(a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipCounter) = 0;
  if ((v6 & 0xC000000000000000) != 0 && sub_2293B923C())
    v16 = sub_229344C04(MEMORY[0x24BEE4AF8]);
  else
    v16 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_cancellables) = v16;
  v17 = a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__pendingOwnershipRequest;
  v18 = type metadata accessor for PendingOwnershipRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingReply;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + v19) = sub_229327864(MEMORY[0x24BEE4AF8]);
  v21 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipRequestsAwaitingHandoffReply;
  *(_QWORD *)(a2 + v21) = sub_229327A1C(v20);
  v22 = (_QWORD *)(a2 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController_ownershipChangedHandler);
  *v22 = 0;
  v22[1] = 0;
  v23 = OBJC_IVAR____TtC12SyncedModels21SyncedModelController_status;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A436F8);
  swift_allocObject();
  *(_QWORD *)(a2 + v23) = sub_2293B8DD4();
  sub_2293700E4(a1, a2);
  return a2;
}

uint64_t sub_2293708A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2293B926C();
  __break(1u);
  return result;
}

char *sub_229370994(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_229370A7C(uint64_t a1, int64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t *v4;
  unint64_t v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int isUniquelyReferenced_nonNull_native;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v11 = v7 - v9;
  if (__OFADD__(v7, v10))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *(_QWORD *)(v6 + 24) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_22936EF90(isUniquelyReferenced_nonNull_native, v15, 1, v6, a3, a4);
  }
  v16 = *(_QWORD *)(a4(0) - 8);
  v17 = v6 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = *(_QWORD *)(v16 + 72);
  v19 = v18 * a1;
  v20 = v17 + v18 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v22 = *(_QWORD *)(v6 + 16);
  v23 = v22 - a2;
  if (__OFSUB__(v22, a2))
    goto LABEL_31;
  if ((v23 & 0x8000000000000000) == 0)
  {
    if (v19 < v18 * a2 || v20 >= v17 + v18 * a2 + v23 * v18)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != v18 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v25 = *(_QWORD *)(v6 + 16);
    v26 = __OFADD__(v25, v10);
    v27 = v25 - v9;
    if (!v26)
    {
      *(_QWORD *)(v6 + 16) = v27;
LABEL_25:
      *v4 = v6;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

char *sub_229370C34(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_229370D1C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(unint64_t, uint64_t, uint64_t);
  unint64_t v10;
  unint64_t v11;

  v1 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  v4 = v0 + v2 + v1[7];
  v5 = sub_2293B8B7C();
  v6 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v0 + v2 + v1[8];
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
    v6(v7 + *(int *)(v8 + 24), v5);
  v10 = v3 + v1[9];
  if (!v9(v10, 1, v8))
    v6(v10 + *(int *)(v8 + 24), v5);
  v11 = v3 + v1[10];
  if (!v9(v11, 1, v8))
    v6(v11 + *(int *)(v8 + 24), v5);
  return swift_deallocObject();
}

uint64_t sub_229370E5C()
{
  return sub_229371060(type metadata accessor for OwnershipChangeRequestMessage, (uint64_t (*)(_QWORD, uint64_t))sub_22936B8D4);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_229370E8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_229370EB0()
{
  uint64_t v0;
  uint64_t (*v1)(char *);
  char v3;

  v1 = *(uint64_t (**)(char *))(v0 + 16);
  v3 = 0;
  return v1(&v3);
}

uint64_t sub_229370EE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_229370F04()
{
  return sub_2293681E4();
}

uint64_t sub_229370F0C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(unint64_t, uint64_t, uint64_t);
  unint64_t v10;
  unint64_t v11;

  v1 = (int *)type metadata accessor for OwnershipHandoffRequestMessage(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  v4 = v0 + v2 + v1[6];
  v5 = sub_2293B8B7C();
  v6 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v0 + v2 + v1[7];
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
    v6(v7 + *(int *)(v8 + 24), v5);
  v10 = v3 + v1[8];
  if (!v9(v10, 1, v8))
    v6(v10 + *(int *)(v8 + 24), v5);
  v11 = v3 + v1[9];
  if (!v9(v11, 1, v8))
    v6(v11 + *(int *)(v8 + 24), v5);
  return swift_deallocObject();
}

uint64_t sub_22937104C()
{
  return sub_229371060(type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t (*)(_QWORD, uint64_t))sub_22936E470);
}

uint64_t sub_229371060(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_2293710A4()
{
  uint64_t v0;

  return sub_22936875C(v0);
}

uint64_t sub_2293710BC()
{
  uint64_t v0;

  return sub_2293685A4(v0);
}

uint64_t sub_2293710D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293711EC(unsigned __int8 *a1)
{
  return sub_229367B30(a1);
}

uint64_t sub_2293711F4(uint64_t a1, uint64_t a2)
{
  swift_weakTakeAssign();
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

_QWORD *sub_229371258(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a3[7];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[8];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17((uint64_t *)v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[9];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v11((uint64_t)v21 + *(int *)(v15 + 24), (uint64_t)v22 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    v24 = a3[10];
    v25 = (_OWORD *)((char *)v4 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    if (v17((uint64_t *)v26, 1, v15))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v11((uint64_t)v25 + *(int *)(v15 + 24), (uint64_t)v26 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t type metadata accessor for PBUUID(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43E60);
}

uint64_t sub_2293714B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293716D4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_2293B8B7C();
  v35 = *(_QWORD *)(v11 - 8);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24);
  v34(v9, v10, v11);
  v12 = a3[8];
  v13 = (char *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v34((uint64_t)&v13[*(int *)(v15 + 24)], (uint64_t)&v14[*(int *)(v15 + 24)], v11);
LABEL_7:
  v21 = a3[9];
  v22 = (char *)(a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = v17((char *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v22[*(int *)(v15 + 24)], &v23[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_22932E904((uint64_t)v22, type metadata accessor for PBUUID);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  v34((uint64_t)&v22[*(int *)(v15 + 24)], (uint64_t)&v23[*(int *)(v15 + 24)], v11);
LABEL_13:
  v27 = a3[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = v17((char *)(a1 + v27), 1, v15);
  v31 = v17(v29, 1, v15);
  if (!v30)
  {
    if (!v31)
    {
      *v28 = *(_QWORD *)v29;
      v28[1] = *((_QWORD *)v29 + 1);
      v34((uint64_t)v28 + *(int *)(v15 + 24), (uint64_t)&v29[*(int *)(v15 + 24)], v11);
      return a1;
    }
    sub_22932E904((uint64_t)v28, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  *v28 = *(_QWORD *)v29;
  v28[1] = *((_QWORD *)v29 + 1);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)v28 + *(int *)(v15 + 24), &v29[*(int *)(v15 + 24)], v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  return a1;
}

uint64_t sub_229371A38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_229371C54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v33 = *(_QWORD *)(v9 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v32((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v13 + 24)], &v21[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v32((uint64_t)&v20[*(int *)(v13 + 24)], (uint64_t)&v21[*(int *)(v13 + 24)], v9);
LABEL_13:
  v25 = a3[10];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *(_OWORD *)v27;
      v32((uint64_t)v26 + *(int *)(v13 + 24), (uint64_t)&v27[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v26 + *(int *)(v13 + 24), &v27[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
  return a1;
}

uint64_t sub_229371F88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229371F98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for OwnershipChangeRequestMessage(uint64_t a1)
{
  return sub_22933F79C(a1, (uint64_t *)&unk_255A43768);
}

void sub_229371FBC()
{
  sub_22937B444();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncedModelType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SyncedModelType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_229372038(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_229372054(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedModelType()
{
  return &type metadata for SyncedModelType;
}

_QWORD *sub_229372084(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(int *)(a3 + 32);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + 32) = a2[4];
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 36);
    v14 = (_OWORD *)((char *)v4 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((uint64_t)v14 + *(int *)(v16 + 24), (uint64_t)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_2293721EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2293B8B7C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 36);
  v7 = type metadata accessor for PBUUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_2293722B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 32);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 36);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_2293723F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 36);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = type metadata accessor for PBUUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      *v14 = *v15;
      v14[1] = v15[1];
      v12((uint64_t)v14 + *(int *)(v16 + 24), (uint64_t)v15 + *(int *)(v16 + 24), v10);
      return a1;
    }
    sub_22932E904((uint64_t)v14, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *v14 = *v15;
  v14[1] = v15[1];
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_2293725AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 36);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293726C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_OWORD *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 36);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_22937285C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229372868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22937290C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229372918(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SyncTransactionMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43818);
}

void sub_2293729CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2293A2DDC(a1, a2, a3, (uint64_t)"\t", qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
}

uint64_t *sub_2293729E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SyncMessage.OneOf_Contents(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7))
    {
      v10 = (char *)&loc_229372AB4 + 4 * word_2293BAD20[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2293B8B7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t type metadata accessor for SyncMessage.OneOf_Contents(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43C90);
}

uint64_t type metadata accessor for CatchupResponseMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43BD8);
}

uint64_t type metadata accessor for OwnershipChangeReplyMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43B38);
}

uint64_t type metadata accessor for OwnershipChangeBroadcastMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43A90);
}

uint64_t type metadata accessor for OwnershipHandoffRequestMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A439F0);
}

uint64_t type metadata accessor for OwnershipHandoffReplyMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43950);
}

uint64_t sub_22937371C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for SyncTransactionMessage(0);
        v9 = a1 + *(int *)(v8 + 32);
        v10 = sub_2293B8B7C();
        v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
        v11(v9, v10);
        v12 = a1 + *(int *)(v8 + 36);
        v13 = type metadata accessor for PBUUID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
          v11(v12 + *(int *)(v13 + 24), v10);
        break;
      case 1u:
        v14 = sub_2293B8B7C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
        break;
      case 2u:
        sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        v15 = a1 + *(int *)(type metadata accessor for CatchupResponseMessage(0) + 32);
        v16 = sub_2293B8B7C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        break;
      case 3u:
        v17 = type metadata accessor for OwnershipChangeRequestMessage(0);
        goto LABEL_11;
      case 4u:
        v18 = (int *)type metadata accessor for OwnershipChangeReplyMessage(0);
        v19 = a1 + v18[7];
        v20 = sub_2293B8B7C();
        v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
        v21(v19, v20);
        v22 = a1 + v18[8];
        v23 = type metadata accessor for PBUUID(0);
        v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
        v25 = v24(v22, 1, v23);
        goto LABEL_21;
      case 5u:
        v17 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
LABEL_11:
        v26 = (int *)v17;
        v27 = a1 + *(int *)(v17 + 28);
        v20 = sub_2293B8B7C();
        v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
        v21(v27, v20);
        v28 = a1 + v26[8];
        v23 = type metadata accessor for PBUUID(0);
        v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
        if (!v24(v28, 1, v23))
          v21(v28 + *(int *)(v23 + 24), v20);
        v29 = a1 + v26[9];
        if (!v24(v29, 1, v23))
          v21(v29 + *(int *)(v23 + 24), v20);
        v30 = v26[10];
        goto LABEL_24;
      case 6u:
        v31 = type metadata accessor for OwnershipHandoffRequestMessage(0);
        goto LABEL_18;
      case 7u:
        v31 = type metadata accessor for OwnershipHandoffReplyMessage(0);
LABEL_18:
        v18 = (int *)v31;
        v32 = a1 + *(int *)(v31 + 24);
        v20 = sub_2293B8B7C();
        v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
        v21(v32, v20);
        v33 = a1 + v18[7];
        v23 = type metadata accessor for PBUUID(0);
        v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
        if (!v24(v33, 1, v23))
          v21(v33 + *(int *)(v23 + 24), v20);
        v22 = a1 + v18[8];
        v25 = v24(v22, 1, v23);
LABEL_21:
        if (!v25)
          v21(v22 + *(int *)(v23 + 24), v20);
        v30 = v18[9];
LABEL_24:
        v34 = a1 + v30;
        if (!v24(a1 + v30, 1, v23))
          v21(v34 + *(int *)(v23 + 24), v20);
        break;
      default:
        break;
    }
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_229373A98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_229373B38 + 4 * word_2293BAD38[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_22937471C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2293747B0 + 4 * word_2293BAD48[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
    v12 = (char *)&loc_229374904 + 4 * word_2293BAD58[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

char *sub_229376084(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_229376124 + 4 * word_2293BAD68[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_229376D14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_229376DA8 + 4 * word_2293BAD78[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_22932E904((uint64_t)a1, type metadata accessor for SyncMessage.OneOf_Contents);
    v12 = (char *)&loc_229376ED8 + 4 * word_2293BAD88[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_229378558()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229378564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2293B8B7C();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2293785DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293785E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2293B8B7C();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SyncMessage(uint64_t a1)
{
  return sub_22933F79C(a1, (uint64_t *)&unk_255A438B8);
}

void sub_22937867C()
{
  unint64_t v0;
  unint64_t v1;

  sub_22936CB40(319, qword_255A438C8, (void (*)(uint64_t))type metadata accessor for SyncMessage.OneOf_Contents);
  if (v0 <= 0x3F)
  {
    sub_2293B8B7C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_229378710(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v7 = a3[6];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[7];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17((uint64_t *)v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[8];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v11((uint64_t)v21 + *(int *)(v15 + 24), (uint64_t)v22 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    v24 = a3[9];
    v25 = (_OWORD *)((char *)v4 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    if (v17((uint64_t *)v26, 1, v15))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v11((uint64_t)v25 + *(int *)(v15 + 24), (uint64_t)v26 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_229378944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_229378B48(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2293B8B7C();
  v34 = *(_QWORD *)(v10 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v33(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  v33((uint64_t)&v12[*(int *)(v14 + 24)], (uint64_t)&v13[*(int *)(v14 + 24)], v10);
LABEL_7:
  v20 = a3[8];
  v21 = (char *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = v16((char *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v21[*(int *)(v14 + 24)], &v22[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_22932E904((uint64_t)v21, type metadata accessor for PBUUID);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  v33((uint64_t)&v21[*(int *)(v14 + 24)], (uint64_t)&v22[*(int *)(v14 + 24)], v10);
LABEL_13:
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = v16((char *)(a1 + v26), 1, v14);
  v30 = v16(v28, 1, v14);
  if (!v29)
  {
    if (!v30)
    {
      *v27 = *(_QWORD *)v28;
      v27[1] = *((_QWORD *)v28 + 1);
      v33((uint64_t)v27 + *(int *)(v14 + 24), (uint64_t)&v28[*(int *)(v14 + 24)], v10);
      return a1;
    }
    sub_22932E904((uint64_t)v27, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  *v27 = *(_QWORD *)v28;
  v27[1] = *((_QWORD *)v28 + 1);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v27 + *(int *)(v14 + 24), &v28[*(int *)(v14 + 24)], v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
  return a1;
}

uint64_t sub_229378E9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293790A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v33 = *(_QWORD *)(v9 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v32((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[8];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v13 + 24)], &v21[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v32((uint64_t)&v20[*(int *)(v13 + 24)], (uint64_t)&v21[*(int *)(v13 + 24)], v9);
LABEL_13:
  v25 = a3[9];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *(_OWORD *)v27;
      v32((uint64_t)v26 + *(int *)(v13 + 24), (uint64_t)&v27[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v26 + *(int *)(v13 + 24), &v27[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
  return a1;
}

uint64_t sub_2293793C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293793D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_229379474()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229379480(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = a2 + 1;
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_22937951C()
{
  sub_22937A424();
}

_QWORD *sub_229379528(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    v7 = a3[6];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[7];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17((uint64_t *)v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[8];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v11((uint64_t)v21 + *(int *)(v15 + 24), (uint64_t)v22 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    v24 = a3[9];
    v25 = (_OWORD *)((char *)v4 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    if (v17((uint64_t *)v26, 1, v15))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v11((uint64_t)v25 + *(int *)(v15 + 24), (uint64_t)v26 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_229379760(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = a1 + a2[6];
  v5 = sub_2293B8B7C();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v12(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
    v12(v6 + *(int *)(v7 + 24), v5);
  v9 = a1 + a2[8];
  if (!v8(v9, 1, v7))
    v12(v9 + *(int *)(v7 + 24), v5);
  v10 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_22937987C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_229379A88(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2293B8B7C();
  v34 = *(_QWORD *)(v10 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v33(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  v33((uint64_t)&v12[*(int *)(v14 + 24)], (uint64_t)&v13[*(int *)(v14 + 24)], v10);
LABEL_7:
  v20 = a3[8];
  v21 = (char *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = v16((char *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v21[*(int *)(v14 + 24)], &v22[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_22932E904((uint64_t)v21, type metadata accessor for PBUUID);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  v33((uint64_t)&v21[*(int *)(v14 + 24)], (uint64_t)&v22[*(int *)(v14 + 24)], v10);
LABEL_13:
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = v16((char *)(a1 + v26), 1, v14);
  v30 = v16(v28, 1, v14);
  if (!v29)
  {
    if (!v30)
    {
      *v27 = *(_QWORD *)v28;
      v27[1] = *((_QWORD *)v28 + 1);
      v33((uint64_t)v27 + *(int *)(v14 + 24), (uint64_t)&v28[*(int *)(v14 + 24)], v10);
      return a1;
    }
    sub_22932E904((uint64_t)v27, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  *v27 = *(_QWORD *)v28;
  v27[1] = *((_QWORD *)v28 + 1);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v27 + *(int *)(v14 + 24), &v28[*(int *)(v14 + 24)], v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
  return a1;
}

uint64_t sub_229379DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_229379FE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v33 = *(_QWORD *)(v9 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v32((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[8];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v13 + 24)], &v21[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v32((uint64_t)&v20[*(int *)(v13 + 24)], (uint64_t)&v21[*(int *)(v13 + 24)], v9);
LABEL_13:
  v25 = a3[9];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *(_OWORD *)v27;
      v32((uint64_t)v26 + *(int *)(v13 + 24), (uint64_t)&v27[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v26 + *(int *)(v13 + 24), &v27[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
  return a1;
}

uint64_t sub_22937A30C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937A318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 24);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_22937A38C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937A398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 24);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_22937A414()
{
  sub_22937A424();
}

void sub_22937A424()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_22937A4C8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a3[7];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[8];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17((uint64_t *)v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[9];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v11((uint64_t)v21 + *(int *)(v15 + 24), (uint64_t)v22 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    v24 = a3[10];
    v25 = (_OWORD *)((char *)v4 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    if (v17((uint64_t *)v26, 1, v15))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v11((uint64_t)v25 + *(int *)(v15 + 24), (uint64_t)v26 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_22937A708(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = a1 + a2[7];
  v5 = sub_2293B8B7C();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v12(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
    v12(v6 + *(int *)(v7 + 24), v5);
  v9 = a1 + a2[9];
  if (!v8(v9, 1, v7))
    v12(v9 + *(int *)(v7 + 24), v5);
  v10 = a1 + a2[10];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_22937A824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_22937AA38(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2293B8B7C();
  v34 = *(_QWORD *)(v10 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v33(v8, v9, v10);
  v11 = a3[8];
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  v33((uint64_t)&v12[*(int *)(v14 + 24)], (uint64_t)&v13[*(int *)(v14 + 24)], v10);
LABEL_7:
  v20 = a3[9];
  v21 = (char *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = v16((char *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v21[*(int *)(v14 + 24)], &v22[*(int *)(v14 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_22932E904((uint64_t)v21, type metadata accessor for PBUUID);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  v33((uint64_t)&v21[*(int *)(v14 + 24)], (uint64_t)&v22[*(int *)(v14 + 24)], v10);
LABEL_13:
  v26 = a3[10];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = v16((char *)(a1 + v26), 1, v14);
  v30 = v16(v28, 1, v14);
  if (!v29)
  {
    if (!v30)
    {
      *v27 = *(_QWORD *)v28;
      v27[1] = *((_QWORD *)v28 + 1);
      v33((uint64_t)v27 + *(int *)(v14 + 24), (uint64_t)&v28[*(int *)(v14 + 24)], v10);
      return a1;
    }
    sub_22932E904((uint64_t)v27, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  *v27 = *(_QWORD *)v28;
  v27[1] = *((_QWORD *)v28 + 1);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v27 + *(int *)(v14 + 24), &v28[*(int *)(v14 + 24)], v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
  return a1;
}

uint64_t sub_22937AD94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16(v24, 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 24), (char *)v24 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_22937AFA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v33 = *(_QWORD *)(v9 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v32((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v13 + 24)], &v21[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v32((uint64_t)&v20[*(int *)(v13 + 24)], (uint64_t)&v21[*(int *)(v13 + 24)], v9);
LABEL_13:
  v25 = a3[10];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      *v26 = *(_OWORD *)v27;
      v32((uint64_t)v26 + *(int *)(v13 + 24), (uint64_t)&v27[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v26 + *(int *)(v13 + 24), &v27[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
  return a1;
}

uint64_t sub_22937B2D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937B2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 28);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_22937B384()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937B390(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = a2 + 1;
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_22937B42C()
{
  sub_22937B444();
}

void sub_22937B444()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_22937B4EC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_OWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a3[7];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[8];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[9];
    v21 = (_OWORD *)((char *)v4 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    if (v17(v22, 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      v11((uint64_t)v21 + *(int *)(v15 + 24), (uint64_t)v22 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_22937B6BC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + a2[7];
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
    v11(v6 + *(int *)(v7 + 24), v5);
  v9 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_22937B7A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_22937B94C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_2293B8B7C();
  v29 = *(_QWORD *)(v11 - 8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24);
  v28(v9, v10, v11);
  v12 = a3[8];
  v13 = (char *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v28((uint64_t)&v13[*(int *)(v15 + 24)], (uint64_t)&v14[*(int *)(v15 + 24)], v11);
LABEL_7:
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = v17((char *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      *v22 = *(_QWORD *)v23;
      v22[1] = *((_QWORD *)v23 + 1);
      v28((uint64_t)v22 + *(int *)(v15 + 24), (uint64_t)&v23[*(int *)(v15 + 24)], v11);
      return a1;
    }
    sub_22932E904((uint64_t)v22, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *v22 = *(_QWORD *)v23;
  v22[1] = *((_QWORD *)v23 + 1);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v22 + *(int *)(v15 + 24), &v23[*(int *)(v15 + 24)], v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  return a1;
}

uint64_t sub_22937BBD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_22937BD74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v27 = *(_QWORD *)(v9 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
  v26(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v26((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      *v20 = *(_OWORD *)v21;
      v26((uint64_t)v20 + *(int *)(v13 + 24), (uint64_t)&v21[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *v20 = *(_OWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v20 + *(int *)(v13 + 24), &v21[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

uint64_t sub_22937BFD8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 28);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 32);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_22937C05C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 28);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 32);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_22937C0E8()
{
  sub_2293A39C0();
}

unint64_t sub_22937C104(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    sub_229324ECC(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v9 = *(int *)(a3 + 32);
    v10 = a1 + v9;
    v11 = a2 + v9;
    v12 = sub_2293B8B7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_22937C1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_22937C204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  sub_229324ECC(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_22937C28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  sub_229324ECC(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  sub_229324F6C(v8, v9);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_22937C324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_22937C390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_229324F6C(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_22937C410()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937C41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 24);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_2293B8B7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v10);
  }
}

uint64_t sub_22937C498()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22937C4A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 24) = a2 + 1;
  }
  else
  {
    v7 = sub_2293B8B7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_22937C514()
{
  return sub_2293A11F0();
}

uint64_t sub_22937C534(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22937C594 + 4 * word_2293BAD98[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_22937D0F4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for SyncTransactionMessage(0);
      v4 = a1 + *(int *)(v3 + 32);
      v5 = sub_2293B8B7C();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v27(v4, v5);
      v6 = a1 + *(int *)(v3 + 36);
      v7 = type metadata accessor for PBUUID(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
      if (!(_DWORD)result)
      {
        v8 = *(int *)(v7 + 24);
        goto LABEL_25;
      }
      return result;
    case 1:
      goto LABEL_5;
    case 2:
      sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      a1 += *(int *)(type metadata accessor for CatchupResponseMessage(0) + 32);
LABEL_5:
      v9 = sub_2293B8B7C();
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v11 = a1;
      goto LABEL_26;
    case 3:
      v12 = type metadata accessor for OwnershipChangeRequestMessage(0);
      goto LABEL_9;
    case 4:
      v13 = (int *)type metadata accessor for OwnershipChangeReplyMessage(0);
      v14 = a1 + v13[7];
      v5 = sub_2293B8B7C();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v27(v14, v5);
      v15 = a1 + v13[8];
      v16 = type metadata accessor for PBUUID(0);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      v18 = v17(v15, 1, v16);
      goto LABEL_19;
    case 5:
      v12 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
LABEL_9:
      v19 = (int *)v12;
      v20 = a1 + *(int *)(v12 + 28);
      v5 = sub_2293B8B7C();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v27(v20, v5);
      v21 = a1 + v19[8];
      v16 = type metadata accessor for PBUUID(0);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      if (!v17(v21, 1, v16))
        v27(v21 + *(int *)(v16 + 24), v5);
      v22 = a1 + v19[9];
      if (!v17(v22, 1, v16))
        v27(v22 + *(int *)(v16 + 24), v5);
      v23 = v19[10];
      goto LABEL_22;
    case 6:
      v24 = type metadata accessor for OwnershipHandoffRequestMessage(0);
      goto LABEL_16;
    case 7:
      v24 = type metadata accessor for OwnershipHandoffReplyMessage(0);
LABEL_16:
      v13 = (int *)v24;
      v25 = a1 + *(int *)(v24 + 24);
      v5 = sub_2293B8B7C();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v27(v25, v5);
      v26 = a1 + v13[7];
      v16 = type metadata accessor for PBUUID(0);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      if (!v17(v26, 1, v16))
        v27(v26 + *(int *)(v16 + 24), v5);
      v15 = a1 + v13[8];
      v18 = v17(v15, 1, v16);
LABEL_19:
      if (!v18)
        v27(v15 + *(int *)(v16 + 24), v5);
      v23 = v13[9];
LABEL_22:
      v6 = a1 + v23;
      result = v17(v6, 1, v16);
      if (!(_DWORD)result)
      {
        v8 = *(int *)(v16 + 24);
LABEL_25:
        v11 = v6 + v8;
        v9 = v5;
        v10 = (uint64_t (*)(uint64_t, uint64_t))v27;
LABEL_26:
        result = v10(v11, v9);
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_22937D420()
{
  char *v0;

  v0 = (char *)sub_22937D474 + 4 * word_2293BADB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22937D474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  v3 = type metadata accessor for SyncTransactionMessage(0);
  v4 = *(int *)(v3 + 32);
  v5 = (char *)(v0 + v4);
  v6 = (char *)(v1 + v4);
  v7 = sub_2293B8B7C();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  v9 = *(int *)(v3 + 36);
  v10 = (_OWORD *)(v0 + v9);
  v11 = (_OWORD *)(v1 + v9);
  v12 = type metadata accessor for PBUUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v8((char *)v10 + *(int *)(v12 + 24), (char *)v11 + *(int *)(v12 + 24), v7);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_22937DFA8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22932E904(result, type metadata accessor for SyncMessage.OneOf_Contents);
    v2 = (char *)&loc_22937E014 + 4 * word_2293BADC0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_22937EBD8()
{
  char *v0;

  v0 = (char *)sub_22937EC2C + 4 * word_2293BADD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22937EC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  v2 = type metadata accessor for SyncTransactionMessage(0);
  v3 = *(int *)(v2 + 32);
  v4 = (char *)(v0 + v3);
  v5 = (char *)(v1 + v3);
  v6 = sub_2293B8B7C();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(v4, v5, v6);
  v8 = *(int *)(v2 + 36);
  v9 = (_OWORD *)(v0 + v8);
  v10 = (_OWORD *)(v1 + v8);
  v11 = type metadata accessor for PBUUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    v7((char *)v9 + *(int *)(v11 + 24), (char *)v10 + *(int *)(v11 + 24), v6);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_22937F73C(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22932E904(result, type metadata accessor for SyncMessage.OneOf_Contents);
    v2 = (char *)&loc_22937F7A8 + 4 * word_2293BADE0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_2293802B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_2293802C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2293802D0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2293802E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  result = type metadata accessor for SyncTransactionMessage(319);
  if (v1 <= 0x3F)
  {
    result = sub_2293B8B7C();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for CatchupResponseMessage(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for OwnershipChangeRequestMessage(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for OwnershipChangeReplyMessage(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for OwnershipChangeBroadcastMessage(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for OwnershipHandoffRequestMessage(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for OwnershipHandoffReplyMessage(319);
                if (v8 <= 0x3F)
                {
                  swift_initEnumMetadataMultiPayload();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_229380408(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_OWORD *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_229324ECC(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2293B8B7C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = a3[6];
    v15 = (_OWORD *)((char *)a1 + v14);
    v16 = (_OWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for PBUUID(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v15 = *v16;
      v13((char *)v15 + *(int *)(v17 + 24), (char *)v16 + *(int *)(v17 + 24), v12);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v22 = a3[7];
    v23 = (_OWORD *)((char *)a1 + v22);
    v24 = (_OWORD *)((char *)a2 + v22);
    if (v19(v24, 1, v17))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *v23 = *v24;
      v13((char *)v23 + *(int *)(v17 + 24), (char *)v24 + *(int *)(v17 + 24), v12);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_2293805C4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
    v11(v6 + *(int *)(v7 + 24), v5);
  v9 = a1 + a2[7];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t *sub_2293806BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_OWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B7C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for PBUUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[7];
  v21 = (_OWORD *)((char *)a1 + v20);
  v22 = (_OWORD *)((char *)a2 + v20);
  if (v18(v22, 1, v16))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v12((char *)v21 + *(int *)(v16 + 24), (char *)v22 + *(int *)(v16 + 24), v11);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  return a1;
}

uint64_t *sub_22938084C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_229324F6C(v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2293B8B7C();
  v31 = *(_QWORD *)(v13 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v31 + 24);
  v30(v11, v12, v13);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for PBUUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v30(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v13);
LABEL_7:
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = v19((char *)a1 + v23, 1, v17);
  v27 = v19(v25, 1, v17);
  if (!v26)
  {
    if (!v27)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      v30(&v24[*(int *)(v17 + 24)], &v25[*(int *)(v17 + 24)], v13);
      return a1;
    }
    sub_22932E904((uint64_t)v24, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(&v24[*(int *)(v17 + 24)], &v25[*(int *)(v17 + 24)], v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  return a1;
}

_OWORD *sub_229380AC4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[7];
  v19 = (_OWORD *)((char *)a1 + v18);
  v20 = (_OWORD *)((char *)a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t *sub_229380C48(uint64_t *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_229324F6C(v6, v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B7C();
  v29 = *(_QWORD *)(v11 - 8);
  v28 = *(void (**)(char *, char *, uint64_t))(v29 + 40);
  v28(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v28(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v11);
LABEL_7:
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = v17((char *)a1 + v21, 1, v15);
  v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v28(&v22[*(int *)(v15 + 24)], &v23[*(int *)(v15 + 24)], v11);
      return a1;
    }
    sub_22932E904((uint64_t)v22, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v22[*(int *)(v15 + 24)], &v23[*(int *)(v15 + 24)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  return a1;
}

uint64_t sub_229380E98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229380EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_255A41F98);
}

uint64_t sub_229380EB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_229380EBC(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_255A41F98);
}

uint64_t type metadata accessor for ValueData(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43D20);
}

void sub_229380EDC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_229380F7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  int *v27;
  unsigned int (**v28)(_QWORD *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  unsigned int (*v43)(_OWORD *, uint64_t, uint64_t);
  _OWORD *__dst;
  void *__dsta;
  void (*v46)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (_DWORD *)((char *)v4 + v12);
    v14 = (_DWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for LamportTimestamp(0);
    v16 = *(_QWORD *)(v15 - 8);
    v46 = v11;
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      v19 = *(int *)(v15 + 24);
      __dst = (_OWORD *)((char *)v13 + v19);
      v20 = (_OWORD *)((char *)v14 + v19);
      v21 = type metadata accessor for PBUUID(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        *__dst = *v20;
        v46((char *)__dst + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v10);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v24 = a3[7];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = (int *)type metadata accessor for ValueData(0);
    v28 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v27 - 1);
    if (v28[6](v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      __dsta = v28;
      v30 = *v26;
      v31 = v26[1];
      sub_229324ECC(*v26, v31);
      *v25 = v30;
      v25[1] = v31;
      v46((char *)v25 + v27[5], (char *)v26 + v27[5], v10);
      v32 = v27[6];
      v33 = (_OWORD *)((char *)v25 + v32);
      v34 = (_OWORD *)((char *)v26 + v32);
      v35 = type metadata accessor for PBUUID(0);
      v36 = *(_QWORD *)(v35 - 8);
      v43 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v36 + 48);
      if (v43(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *v33 = *v34;
        v46((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v10);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v27[7];
      v39 = (_OWORD *)((char *)v25 + v38);
      v40 = (_OWORD *)((char *)v26 + v38);
      if (v43(v40, 1, v35))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *v39 = *v40;
        v46((char *)v39 + *(int *)(v35 + 24), (char *)v40 + *(int *)(v35 + 24), v10);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dsta + 7))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t type metadata accessor for LamportTimestamp(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A43EF8);
}

uint64_t sub_229381324(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_2293B8B7C();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v17(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for LamportTimestamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v17(v6 + *(int *)(v7 + 20), v5);
    v8 = v6 + *(int *)(v7 + 24);
    v9 = type metadata accessor for PBUUID(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      v17(v8 + *(int *)(v9 + 24), v5);
  }
  v10 = a1 + a2[7];
  v11 = (int *)type metadata accessor for ValueData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    sub_229324F6C(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
    v17(v10 + v11[5], v5);
    v13 = v10 + v11[6];
    v14 = type metadata accessor for PBUUID(0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    if (!v15(v13, 1, v14))
      v17(v13 + *(int *)(v14 + 24), v5);
    v16 = v10 + v11[7];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v16, 1, v14);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v17)(v16 + *(int *)(v14 + 24), v5);
  }
  return result;
}

_DWORD *sub_2293814E4(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  int *v25;
  unsigned int (**v26)(_QWORD *, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  unsigned int (*v41)(_OWORD *, uint64_t, uint64_t);
  _OWORD *__dst;
  void *__dsta;
  void (*v44)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  v44 = v10;
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    v17 = *(int *)(v14 + 24);
    __dst = (_OWORD *)((char *)v12 + v17);
    v18 = (_OWORD *)((char *)v13 + v17);
    v19 = type metadata accessor for PBUUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *__dst = *v18;
      v44((char *)__dst + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v25 = (int *)type metadata accessor for ValueData(0);
  v26 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v25 - 1);
  if (v26[6](v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    __dsta = v26;
    v28 = *v24;
    v29 = v24[1];
    sub_229324ECC(*v24, v29);
    *v23 = v28;
    v23[1] = v29;
    v44((char *)v23 + v25[5], (char *)v24 + v25[5], v9);
    v30 = v25[6];
    v31 = (_OWORD *)((char *)v23 + v30);
    v32 = (_OWORD *)((char *)v24 + v30);
    v33 = type metadata accessor for PBUUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    v41 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v34 + 48);
    if (v41(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *v31 = *v32;
      v44((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v25[7];
    v37 = (_OWORD *)((char *)v23 + v36);
    v38 = (_OWORD *)((char *)v24 + v36);
    if (v41(v38, 1, v33))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v37 = *v38;
      v44((char *)v37 + *(int *)(v33 + 24), (char *)v38 + *(int *)(v33 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
    }
    (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dsta + 7))(v23, 0, 1, v25);
  }
  return a1;
}

_DWORD *sub_22938184C(_DWORD *a1, _DWORD *a2, int *a3)
{
  _DWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  char *v26;
  char *v27;
  _DWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  int *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t *, uint64_t, int *);
  int v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  size_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  int v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  void (*v87)(char *, char *);
  unsigned int (*v88)(_QWORD *, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;

  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  v87 = *(void (**)(char *, char *))(v10 + 24);
  v87(v7, v8);
  v11 = a3[6];
  v12 = (char *)v5 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  v89 = v10;
  if (v17)
  {
    if (!v18)
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      v85 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v85(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v91);
      v19 = *(int *)(v14 + 24);
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = type metadata accessor for PBUUID(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v20 = *(_QWORD *)v21;
        *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
        v85(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v91);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v18)
  {
    sub_22932E904((uint64_t)v12, type metadata accessor for LamportTimestamp);
LABEL_7:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v26 = v12;
    v27 = v13;
    goto LABEL_8;
  }
  v28 = v5;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  ((void (*)(char *, char *, uint64_t))v87)(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v91);
  v29 = *(int *)(v14 + 24);
  v30 = &v12[v29];
  v31 = &v13[v29];
  v32 = type metadata accessor for PBUUID(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    v5 = v28;
    if (!v36)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      ((void (*)(char *, char *, uint64_t))v87)(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v91);
      goto LABEL_15;
    }
    sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
    v26 = v30;
    v27 = v31;
LABEL_8:
    memcpy(v26, v27, v25);
    goto LABEL_15;
  }
  if (v36)
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v91);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v5 = v28;
LABEL_15:
  v38 = a3[7];
  v39 = (uint64_t *)((char *)v5 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  v41 = (int *)type metadata accessor for ValueData(0);
  v42 = *((_QWORD *)v41 - 1);
  v43 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_22932E904((uint64_t)v39, type metadata accessor for ValueData);
      goto LABEL_21;
    }
    v58 = *v40;
    v59 = v40[1];
    sub_229324ECC(*v40, v59);
    v60 = *v39;
    v61 = v39[1];
    *v39 = v58;
    v39[1] = v59;
    sub_229324F6C(v60, v61);
    ((void (*)(char *, char *, uint64_t))v87)((char *)v39 + v41[5], (char *)v40 + v41[5], v91);
    v62 = v41[6];
    v63 = (char *)v39 + v62;
    v64 = (char *)v40 + v62;
    v65 = type metadata accessor for PBUUID(0);
    v86 = *(_QWORD *)(v65 - 8);
    v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    v67 = v66(v63, 1, v65);
    v68 = v66(v64, 1, v65);
    if (v67)
    {
      if (!v68)
      {
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
        v69 = *(int *)(v65 + 24);
        v70 = &v64[v69];
        v71 = v89;
        (*(void (**)(char *, char *, uint64_t))(v89 + 16))(&v63[v69], v70, v91);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v63, 0, 1, v65);
LABEL_38:
        v80 = v41[7];
        v81 = (char *)v39 + v80;
        v82 = (char *)v40 + v80;
        v83 = v66(v81, 1, v65);
        v84 = v66(v82, 1, v65);
        if (v83)
        {
          if (!v84)
          {
            *(_QWORD *)v81 = *(_QWORD *)v82;
            *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
            (*(void (**)(char *, char *, uint64_t))(v71 + 16))(&v81[*(int *)(v65 + 24)], &v82[*(int *)(v65 + 24)], v91);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v81, 0, 1, v65);
            return v5;
          }
        }
        else
        {
          if (!v84)
          {
            *(_QWORD *)v81 = *(_QWORD *)v82;
            *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
            ((void (*)(char *, char *, uint64_t))v87)(&v81[*(int *)(v65 + 24)], &v82[*(int *)(v65 + 24)], v91);
            return v5;
          }
          sub_22932E904((uint64_t)v81, type metadata accessor for PBUUID);
        }
        v55 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
        v56 = (uint64_t *)v81;
        v57 = (uint64_t *)v82;
        goto LABEL_22;
      }
    }
    else
    {
      if (!v68)
      {
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
        ((void (*)(char *, char *, uint64_t))v87)(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v91);
        goto LABEL_37;
      }
      sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
    }
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
LABEL_37:
    v71 = v89;
    goto LABEL_38;
  }
  if (v45)
  {
LABEL_21:
    v55 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0) - 8) + 64);
    v56 = v39;
    v57 = v40;
LABEL_22:
    memcpy(v56, v57, v55);
    return v5;
  }
  v46 = *v40;
  v47 = v40[1];
  sub_229324ECC(*v40, v47);
  *v39 = v46;
  v39[1] = v47;
  v90 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  v90((char *)v39 + v41[5], (char *)v40 + v41[5], v91);
  v48 = v41[6];
  v49 = (uint64_t *)((char *)v39 + v48);
  v50 = (uint64_t *)((char *)v40 + v48);
  v51 = type metadata accessor for PBUUID(0);
  v52 = *(_QWORD *)(v51 - 8);
  v88 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48);
  if (v88(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    v54 = v90;
  }
  else
  {
    *v49 = *v50;
    v49[1] = v50[1];
    v72 = *(int *)(v51 + 24);
    v73 = (char *)v50 + v72;
    v54 = v90;
    v90((char *)v49 + v72, v73, v91);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v74 = v41[7];
  v75 = (uint64_t *)((char *)v39 + v74);
  v76 = (uint64_t *)((char *)v40 + v74);
  if (v88(v76, 1, v51))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    *v75 = *v76;
    v75[1] = v76[1];
    v54((char *)v75 + *(int *)(v51 + 24), (char *)v76 + *(int *)(v51 + 24), v91);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v75, 0, 1, v51);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
  return v5;
}

_DWORD *sub_229381F8C(_DWORD *a1, _DWORD *a2, int *a3)
{
  _DWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  _DWORD *v38;
  _OWORD *v39;
  _OWORD *__dst;
  unsigned int (*__dsta)(_OWORD *, uint64_t, uint64_t);
  void (*v42)(char *, char *, uint64_t);

  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_DWORD *)((char *)v5 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v38 = v5;
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    v17 = *(int *)(v14 + 24);
    __dst = (_OWORD *)((char *)v12 + v17);
    v18 = (_OWORD *)((char *)v13 + v17);
    v19 = type metadata accessor for PBUUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *__dst = *v18;
      v10((char *)__dst + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v5 = v38;
  }
  v22 = a3[7];
  v23 = (_OWORD *)((char *)v5 + v22);
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = (int *)type metadata accessor for ValueData(0);
  v26 = *((_QWORD *)v25 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + v25[5], (char *)v24 + v25[5], v9);
    v28 = v25[6];
    v39 = (_OWORD *)((char *)v23 + v28);
    v29 = (_OWORD *)((char *)v24 + v28);
    v30 = type metadata accessor for PBUUID(0);
    v31 = *(_QWORD *)(v30 - 8);
    __dsta = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48);
    v42 = v10;
    if (__dsta(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v39, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      *v39 = *v29;
      v10((char *)v39 + *(int *)(v30 + 24), (char *)v29 + *(int *)(v30 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v30);
    }
    v33 = v25[7];
    v34 = (_OWORD *)((char *)v23 + v33);
    v35 = (_OWORD *)((char *)v24 + v33);
    if (__dsta(v35, 1, v30))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      *v34 = *v35;
      v42((char *)v34 + *(int *)(v30 + 24), (char *)v35 + *(int *)(v30 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  }
  return v5;
}

_DWORD *sub_2293822F8(_DWORD *a1, _DWORD *a2, int *a3)
{
  _DWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  char *v26;
  char *v27;
  _DWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t *, uint64_t, int *);
  int v44;
  int v45;
  uint64_t v46;
  _OWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  void (*v79)(char *, char *);
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;

  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  v79 = *(void (**)(char *, char *))(v10 + 40);
  v79(v7, v8);
  v11 = a3[6];
  v12 = (char *)v5 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  v81 = v10;
  if (v17)
  {
    if (!v18)
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      v77 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v77(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v83);
      v19 = *(int *)(v14 + 24);
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = type metadata accessor for PBUUID(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
        v77(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v83);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v18)
  {
    sub_22932E904((uint64_t)v12, type metadata accessor for LamportTimestamp);
LABEL_7:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v26 = v12;
    v27 = v13;
    goto LABEL_8;
  }
  v28 = v5;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  ((void (*)(char *, char *, uint64_t))v79)(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v83);
  v29 = *(int *)(v14 + 24);
  v30 = &v12[v29];
  v31 = &v13[v29];
  v32 = type metadata accessor for PBUUID(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    v5 = v28;
    if (!v36)
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
      ((void (*)(char *, char *, uint64_t))v79)(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v83);
      goto LABEL_15;
    }
    sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
    v26 = v30;
    v27 = v31;
LABEL_8:
    memcpy(v26, v27, v25);
    goto LABEL_15;
  }
  if (v36)
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v5 = v28;
LABEL_15:
  v38 = a3[7];
  v39 = (uint64_t *)((char *)v5 + v38);
  v40 = (char *)a2 + v38;
  v41 = (int *)type metadata accessor for ValueData(0);
  v42 = *((_QWORD *)v41 - 1);
  v43 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43((uint64_t *)v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_22932E904((uint64_t)v39, type metadata accessor for ValueData);
      goto LABEL_21;
    }
    v55 = *v39;
    v56 = v39[1];
    *(_OWORD *)v39 = *(_OWORD *)v40;
    sub_229324F6C(v55, v56);
    ((void (*)(char *, char *, uint64_t))v79)((char *)v39 + v41[5], &v40[v41[5]], v83);
    v57 = v41[6];
    v58 = (char *)v39 + v57;
    v59 = &v40[v57];
    v60 = type metadata accessor for PBUUID(0);
    v78 = *(_QWORD *)(v60 - 8);
    v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
    v62 = v61(v58, 1, v60);
    v63 = v61(v59, 1, v60);
    if (v62)
    {
      if (!v63)
      {
        *(_OWORD *)v58 = *(_OWORD *)v59;
        v64 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v58[*(int *)(v60 + 24)], &v59[*(int *)(v60 + 24)], v83);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v58, 0, 1, v60);
LABEL_38:
        v72 = v41[7];
        v73 = (char *)v39 + v72;
        v74 = &v40[v72];
        v75 = v61(v73, 1, v60);
        v76 = v61(v74, 1, v60);
        if (v75)
        {
          if (!v76)
          {
            *(_OWORD *)v73 = *(_OWORD *)v74;
            (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v73[*(int *)(v60 + 24)], &v74[*(int *)(v60 + 24)], v83);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v73, 0, 1, v60);
            return v5;
          }
        }
        else
        {
          if (!v76)
          {
            *(_OWORD *)v73 = *(_OWORD *)v74;
            ((void (*)(char *, char *, uint64_t))v79)(&v73[*(int *)(v60 + 24)], &v74[*(int *)(v60 + 24)], v83);
            return v5;
          }
          sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
        }
        v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
        v53 = (uint64_t *)v73;
        v54 = v74;
        goto LABEL_22;
      }
    }
    else
    {
      if (!v63)
      {
        *(_OWORD *)v58 = *(_OWORD *)v59;
        ((void (*)(char *, char *, uint64_t))v79)(&v58[*(int *)(v60 + 24)], &v59[*(int *)(v60 + 24)], v83);
        goto LABEL_37;
      }
      sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
    }
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
LABEL_37:
    v64 = v81;
    goto LABEL_38;
  }
  if (v45)
  {
LABEL_21:
    v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0) - 8) + 64);
    v53 = v39;
    v54 = v40;
LABEL_22:
    memcpy(v53, v54, v52);
    return v5;
  }
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v82 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
  v82((char *)v39 + v41[5], &v40[v41[5]], v83);
  v46 = v41[6];
  v47 = (_OWORD *)((char *)v39 + v46);
  v48 = &v40[v46];
  v49 = type metadata accessor for PBUUID(0);
  v50 = *(_QWORD *)(v49 - 8);
  v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v80(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    *v47 = *(_OWORD *)v48;
    v82((char *)v47 + *(int *)(v49 + 24), &v48[*(int *)(v49 + 24)], v83);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v65 = v50;
  v66 = v41[7];
  v67 = (_OWORD *)((char *)v39 + v66);
  v68 = &v40[v66];
  if (v80(v68, 1, v49))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    *v67 = *(_OWORD *)v68;
    v82((char *)v67 + *(int *)(v49 + 24), &v68[*(int *)(v49 + 24)], v83);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v49);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
  return v5;
}

uint64_t sub_2293829DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293829E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    v7 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v10;
      v9 = a3[6];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_229382A84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229382A90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[6];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for PropertyChangedMessage(uint64_t a1)
{
  return sub_22933F79C(a1, (uint64_t *)&unk_255A43DB8);
}

void sub_229382B48()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, &qword_255A43DC8, (void (*)(uint64_t))type metadata accessor for LamportTimestamp);
    if (v1 <= 0x3F)
    {
      sub_22936CB40(319, qword_255A43DD0, (void (*)(uint64_t))type metadata accessor for ValueData);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_229382C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2293B8B7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_229382CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_229382CD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_229382D34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_229382D98(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_229382DF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_229382E50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_229382E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_229382E9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_229382EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_229382EEC()
{
  return sub_2293A3E6C();
}

uint64_t *sub_229382F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 24);
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for PBUUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_229383030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2293B8B7C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for PBUUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  return result;
}

_DWORD *sub_2293830E0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_2293831E4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_DWORD *sub_229383350(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_229383454(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293835B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293835BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_229383630()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22938363C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2293836B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2293A4738(a1, a2, a3, MEMORY[0x24BEE0170] + 64, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
}

BOOL sub_2293836D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

void sub_2293836E4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_2293836F4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_22938370C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *sub_229383714@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_229383734()
{
  sub_22939F0B4();
  return sub_2293B8BB8();
}

BOOL sub_229383770(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_229383784()
{
  qword_255A44D88 = (uint64_t)&unk_24F2070A8;
}

uint64_t sub_229383798@<X0>(_QWORD *a1@<X8>)
{
  return sub_229383A7C(&qword_255A41AE0, &qword_255A44D88, a1);
}

unint64_t sub_2293837B4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_2293837CC()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_2293837E8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 2uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_229383804(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
}

uint64_t sub_229383824()
{
  sub_22939F0F8();
  return sub_2293B8BB8();
}

BOOL sub_22938385C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8))
    v2 = *a1 != 0;
  v3 = *a2 != 0;
  if (!*((_BYTE *)a2 + 8))
    v3 = *a2;
  return v2 == v3;
}

void sub_229383898()
{
  qword_255A44D90 = (uint64_t)&unk_24F2070F8;
}

uint64_t sub_2293838AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_229383A7C(&qword_255A41AE8, &qword_255A44D90, a1);
}

void sub_2293838C8(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_2293A65C4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

void sub_2293838F8(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_2293A65C4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

uint64_t sub_22938392C()
{
  sub_2293B93D4();
  sub_2293B8EF4();
  return sub_2293B93F8();
}

uint64_t sub_229383994()
{
  sub_22939F13C();
  return sub_2293B8BB8();
}

uint64_t sub_2293839CC()
{
  sub_2293B93D4();
  sub_2293B8EF4();
  return sub_2293B93F8();
}

BOOL sub_229383A30(uint64_t a1, uint64_t *a2)
{
  return sub_2293836D8(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_229383A4C()
{
  qword_255A44D98 = (uint64_t)&unk_24F207138;
}

uint64_t sub_229383A60@<X0>(_QWORD *a1@<X8>)
{
  return sub_229383A7C(&qword_255A41AF0, &qword_255A44D98, a1);
}

uint64_t sub_229383A7C@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_229383AC8()
{
  unint64_t result;

  result = qword_255A43F38;
  if (!qword_255A43F38)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BB03C, &type metadata for SyncedModelType);
    atomic_store(result, (unint64_t *)&qword_255A43F38);
  }
  return result;
}

unint64_t sub_229383B10()
{
  unint64_t result;

  result = qword_255A43F40;
  if (!qword_255A43F40)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BB064, &type metadata for SyncedModelType);
    atomic_store(result, (unint64_t *)&qword_255A43F40);
  }
  return result;
}

unint64_t sub_229383B58()
{
  unint64_t result;

  result = qword_255A43F48;
  if (!qword_255A43F48)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BB0A4, &type metadata for SyncedModelType);
    atomic_store(result, (unint64_t *)&qword_255A43F48);
  }
  return result;
}

uint64_t sub_229383B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44DA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44DA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Unregistered";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Static";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Dynamic";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229383D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41AF8, (uint64_t)qword_255A44DA0, a1);
}

uint64_t sub_229383D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44DB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44DB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Request";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Release";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229383E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B00, (uint64_t)qword_255A44DB8, a1);
}

uint64_t sub_229383EB8@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2293B8D38();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_229383F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44DD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44DD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD490;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "Invalid";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "RequestSuccessfulWasUnowned";
  *(_QWORD *)(v11 + 8) = 27;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "RequestSuccessfulOwnerHandedOff";
  *((_QWORD *)v13 + 1) = 31;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "RequestFailedOwnerRefusedHandoff";
  *((_QWORD *)v15 + 1) = 32;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "RequestFailedUnknownOwner";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "RequestFailedHandoffTimedOut";
  *((_QWORD *)v19 + 1) = 28;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "ReleaseSuccessful";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "ReleaseFailedNotOwner";
  *((_QWORD *)v23 + 1) = 21;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 8;
  *(_QWORD *)v24 = "NotAuthority";
  *(_QWORD *)(v24 + 8) = 12;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229384200@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B08, (uint64_t)qword_255A44DD0, a1);
}

uint64_t sub_22938421C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44DE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44DE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "high";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "low";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938436C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2293B8BC4();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_2293B8C3C();
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_2293843FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_2293B8CFC(), !v1))
  {
    if (!v0[1] || (result = sub_2293B8CFC(), !v1))
    {
      type metadata accessor for PBUUID(0);
      return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_2293844B4@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return sub_2293B8B70();
}

uint64_t sub_2293844D4()
{
  return 0x444955554250;
}

uint64_t (*sub_2293844F4())()
{
  return nullsub_1;
}

uint64_t sub_229384508()
{
  return sub_22938436C();
}

uint64_t sub_22938451C()
{
  return sub_2293843FC();
}

uint64_t sub_229384534()
{
  sub_229326FD0(&qword_255A44220, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF64);
  return sub_2293B8BAC();
}

uint64_t sub_229384588@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B10, (uint64_t)qword_255A44DE8, a1);
}

uint64_t sub_2293845A4()
{
  sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
  return sub_2293B8C78();
}

uint64_t sub_2293845E8()
{
  sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
  return sub_2293B8C84();
}

uint64_t sub_229384640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E00);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "sourcePB";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "counter";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229384790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2293B8C24();
      }
      else if (result == 1)
      {
        sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for LamportTimestamp, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229384868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD v14[4];

  v5 = v3;
  v14[3] = a3;
  v14[1] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PBUUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = type metadata accessor for LamportTimestamp(0);
  sub_229324E44((uint64_t)v5 + *(int *)(v14[0] + 24), (uint64_t)v8, &qword_255A41F98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
    if (v4)
      return result;
  }
  if (!*v5)
    return sub_2293B8B64();
  result = sub_2293B8CE4();
  if (!v4)
    return sub_2293B8B64();
  return result;
}

uint64_t sub_229384A50@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  sub_2293B8B70();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for PBUUID(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_229384AA8()
{
  return 0xD000000000000010;
}

uint64_t (*sub_229384ACC())()
{
  return nullsub_1;
}

uint64_t sub_229384AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229384790(a1, a2, a3);
}

uint64_t sub_229384AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229384868(a1, a2, a3);
}

uint64_t sub_229384B08()
{
  sub_229326FD0(&qword_255A44230, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCDFC);
  return sub_2293B8BAC();
}

uint64_t sub_229384B58@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B18, (uint64_t)qword_255A44E00, a1);
}

uint64_t sub_229384B74()
{
  sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
  return sub_2293B8C78();
}

uint64_t sub_229384BB4()
{
  sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
  return sub_2293B8C84();
}

uint64_t sub_229384C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E18);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4A0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "syncTransaction";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "catchupRequest";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "catchupResponse";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "ownershipChangeRequest";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "ownershipChangeReply";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "ownershipChangeBroadcast";
  *((_QWORD *)v19 + 1) = 24;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "ownershipHandoffRequest";
  *((_QWORD *)v21 + 1) = 23;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "ownershipHandoffReply";
  *((_QWORD *)v23 + 1) = 21;
  v23[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229384EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_229385014(v5, a1, a2, a3);
          break;
        case 2:
          sub_229385410(v5, a1, a2, a3);
          break;
        case 3:
          sub_229385800(v5, a1, a2, a3);
          break;
        case 4:
          sub_229385BF0(v5, a1, a2, a3);
          break;
        case 5:
          sub_229385FE0(v5, a1, a2, a3);
          break;
        case 6:
          sub_2293863D0(v5, a1, a2, a3);
          break;
        case 7:
          sub_2293867C0(v5, a1, a2, a3);
          break;
        case 8:
          sub_229386BB0(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229385014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a3;
  v49 = a4;
  v46 = a2;
  v5 = type metadata accessor for SyncTransactionMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v39 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v37 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v37 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A43668);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v37 - v23;
  v42 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v45 = v5;
  v25((char *)&v37 - v23, 1, 1, v5);
  v40 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v38 = v14;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v43 = v13;
  if (v26(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v27 = v45;
    v28 = v48;
  }
  else
  {
    v31 = (uint64_t)v44;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v32 = v48;
    sub_2293B8BD0();
    v28 = v32;
    if (v32)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      goto LABEL_8;
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
      v27 = v45;
    }
    else
    {
      sub_2293251F8((uint64_t)v24, &qword_255A43668);
      sub_22932EA14((uint64_t)v17, v31, type metadata accessor for SyncTransactionMessage);
      sub_22932EA14(v31, (uint64_t)v24, type metadata accessor for SyncTransactionMessage);
      v27 = v45;
      v25(v24, 0, 1, v45);
    }
  }
  sub_229326FD0(&qword_255A44180, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB64);
  sub_2293B8C48();
  if (v28)
  {
LABEL_8:
    v30 = (uint64_t)v24;
    return sub_2293251F8(v30, &qword_255A43668);
  }
  v29 = v41;
  sub_22932E9D0((uint64_t)v24, v41, &qword_255A43668);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v29, 1, v27) != 1)
  {
    v34 = v39;
    sub_22932EA14(v29, v39, type metadata accessor for SyncTransactionMessage);
    v35 = v40;
    sub_2293251F8(v40, qword_255A42398);
    sub_22932EA14(v34, v35, type metadata accessor for SyncTransactionMessage);
    v36 = v43;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v36);
  }
  v30 = v29;
  return sub_2293251F8(v30, &qword_255A43668);
}

uint64_t sub_229385410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for CatchupRequestMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44248);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44248);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44248);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for CatchupRequestMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for CatchupRequestMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A44160, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9FC);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44248);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for CatchupRequestMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for CatchupRequestMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44248);
}

uint64_t sub_229385800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for CatchupResponseMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44250);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44250);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44250);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for CatchupResponseMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for CatchupResponseMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A44140, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC894);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44250);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for CatchupResponseMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for CatchupResponseMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44250);
}

uint64_t sub_229385BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for OwnershipChangeRequestMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44258);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44258);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44258);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for OwnershipChangeRequestMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for OwnershipChangeRequestMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A44120, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC72C);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44258);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for OwnershipChangeRequestMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for OwnershipChangeRequestMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44258);
}

uint64_t sub_229385FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for OwnershipChangeReplyMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44260);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44260);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44260);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for OwnershipChangeReplyMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for OwnershipChangeReplyMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A44100, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC5C4);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44260);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for OwnershipChangeReplyMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for OwnershipChangeReplyMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44260);
}

uint64_t sub_2293863D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44268);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44268);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44268);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for OwnershipChangeBroadcastMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for OwnershipChangeBroadcastMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A440E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC45C);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44268);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for OwnershipChangeBroadcastMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for OwnershipChangeBroadcastMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44268);
}

uint64_t sub_2293867C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44270);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44270);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44270);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for OwnershipHandoffRequestMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for OwnershipHandoffRequestMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A440C0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2F4);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44270);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for OwnershipHandoffRequestMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for OwnershipHandoffRequestMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44270);
}

uint64_t sub_229386BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v50 = a4;
  v47 = a2;
  v5 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44278);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  v44 = v6;
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v26 = v5;
  v27 = v5;
  v28 = v25;
  v25((char *)&v38 - v23, 1, 1, v27);
  v42 = a1;
  sub_229324E44(a1, (uint64_t)v12, qword_255A42398);
  v40 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v45 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    sub_2293251F8((uint64_t)v12, qword_255A42398);
    v30 = v49;
  }
  else
  {
    v39 = v28;
    v36 = (uint64_t)v46;
    sub_22932EA14((uint64_t)v12, (uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
    v37 = v49;
    sub_2293B8BD0();
    v30 = v37;
    if (v37)
    {
      sub_22932E904((uint64_t)v19, type metadata accessor for SyncMessage.OneOf_Contents);
      return sub_2293251F8((uint64_t)v24, &qword_255A44278);
    }
    sub_22932EA14((uint64_t)v19, (uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2293251F8((uint64_t)v24, &qword_255A44278);
      sub_22932EA14((uint64_t)v17, v36, type metadata accessor for OwnershipHandoffReplyMessage);
      sub_22932EA14(v36, (uint64_t)v24, type metadata accessor for OwnershipHandoffReplyMessage);
      v39(v24, 0, 1, v26);
    }
    else
    {
      sub_22932E904((uint64_t)v17, type metadata accessor for SyncMessage.OneOf_Contents);
    }
  }
  sub_229326FD0(&qword_255A440A0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC18C);
  sub_2293B8C48();
  if (!v30)
  {
    v31 = (uint64_t)v24;
    v24 = v43;
    sub_22932E9D0(v31, (uint64_t)v43, &qword_255A44278);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v26) != 1)
    {
      v32 = v41;
      sub_22932EA14((uint64_t)v24, v41, type metadata accessor for OwnershipHandoffReplyMessage);
      v33 = v42;
      sub_2293251F8(v42, qword_255A42398);
      sub_22932EA14(v32, v33, type metadata accessor for OwnershipHandoffReplyMessage);
      v34 = v45;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v34);
    }
  }
  return sub_2293251F8((uint64_t)v24, &qword_255A44278);
}

uint64_t sub_229386FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(v0, (uint64_t)v3, qword_255A42398);
  v4 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_22938706C + 4 * byte_2293BADF8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for SyncMessage(0);
  return sub_2293B8B64();
}

uint64_t sub_2293871A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SyncTransactionMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for SyncTransactionMessage);
    sub_229326FD0(&qword_255A44180, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB64);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for SyncTransactionMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CatchupRequestMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for CatchupRequestMessage);
    sub_229326FD0(&qword_255A44160, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9FC);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for CatchupRequestMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_2293874E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CatchupResponseMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for CatchupResponseMessage);
    sub_229326FD0(&qword_255A44140, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC894);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for CatchupResponseMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387684(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OwnershipChangeRequestMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for OwnershipChangeRequestMessage);
    sub_229326FD0(&qword_255A44120, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC72C);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for OwnershipChangeRequestMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OwnershipChangeReplyMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for OwnershipChangeReplyMessage);
    sub_229326FD0(&qword_255A44100, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC5C4);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for OwnershipChangeReplyMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_2293879C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for OwnershipChangeBroadcastMessage);
    sub_229326FD0(&qword_255A440E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC45C);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for OwnershipChangeBroadcastMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for OwnershipHandoffRequestMessage);
    sub_229326FD0(&qword_255A440C0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2F4);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for OwnershipHandoffRequestMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387D04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324E44(a1, (uint64_t)v4, qword_255A42398);
  v8 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v4, qword_255A42398);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v7, type metadata accessor for OwnershipHandoffReplyMessage);
    sub_229326FD0(&qword_255A440A0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC18C);
    sub_2293B8D08();
    return sub_22932E904((uint64_t)v7, type metadata accessor for OwnershipHandoffReplyMessage);
  }
  result = sub_22932E904((uint64_t)v4, type metadata accessor for SyncMessage.OneOf_Contents);
  __break(1u);
  return result;
}

uint64_t sub_229387EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  return sub_2293B8B70();
}

uint64_t sub_229387EF4()
{
  return 0x7373654D636E7953;
}

uint64_t sub_229387F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229384EB4(a1, a2, a3);
}

uint64_t sub_229387F28()
{
  return sub_229386FA0();
}

uint64_t sub_229387F3C()
{
  sub_229326FD0(&qword_255A44240, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCC94);
  return sub_2293B8BAC();
}

uint64_t sub_229387F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B20, (uint64_t)qword_255A44E18, a1);
}

uint64_t sub_229387FA8()
{
  sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
  return sub_2293B8C78();
}

uint64_t sub_229387FE8()
{
  sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
  return sub_2293B8C84();
}

uint64_t sub_22938803C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E30);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "propertyMessages";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "setMessages";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 6;
  *(_QWORD *)v16 = "dictionaryMessages";
  *(_QWORD *)(v16 + 8) = 18;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229388240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_6;
        case 3:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for SyncTransactionMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 4:
          type metadata accessor for PropertyChangedMessage(0);
          sub_229326FD0(&qword_255A44080, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BC024);
          goto LABEL_5;
        case 5:
          type metadata accessor for SetChangedMessage(0);
          sub_229326FD0(&qword_255A44060, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBEBC);
          goto LABEL_5;
        case 6:
          type metadata accessor for DictionaryChangedMessage(0);
          sub_229326FD0(&qword_255A44040, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD54);
LABEL_5:
          v12 = v11;
          sub_2293B8C30();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938840C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PBUUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v0 || (v9 = *((_BYTE *)v0 + 8), v11 = *v0, v12 = v9, sub_22939F0B4(), result = sub_2293B8CB4(), !v1))
  {
    v13 = type metadata accessor for SyncTransactionMessage(0);
    sub_229324E44((uint64_t)v0 + *(int *)(v13 + 36), (uint64_t)v4, &qword_255A41F98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_2293251F8((uint64_t)v4, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v4, (uint64_t)v8, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904((uint64_t)v8, type metadata accessor for PBUUID);
      if (v1)
        return result;
    }
    if (!*(_QWORD *)(v0[2] + 16)
      || (type metadata accessor for PropertyChangedMessage(0),
          sub_229326FD0(&qword_255A44080, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BC024),
          result = sub_2293B8CF0(),
          !v1))
    {
      if (!*(_QWORD *)(v0[3] + 16)
        || (type metadata accessor for SetChangedMessage(0),
            sub_229326FD0(&qword_255A44060, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBEBC),
            result = sub_2293B8CF0(),
            !v1))
      {
        if (!*(_QWORD *)(v0[4] + 16))
          return sub_2293B8B64();
        type metadata accessor for DictionaryChangedMessage(0);
        sub_229326FD0(&qword_255A44040, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD54);
        result = sub_2293B8CF0();
        if (!v1)
          return sub_2293B8B64();
      }
    }
  }
  return result;
}

uint64_t sub_229388710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a2 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v4;
  sub_2293B8B70();
  v5 = a2 + *(int *)(a1 + 36);
  v6 = type metadata accessor for PBUUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

unint64_t sub_229388780()
{
  return 0xD000000000000016;
}

uint64_t (*sub_2293887A4())()
{
  return nullsub_1;
}

uint64_t sub_2293887B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229388240(a1, a2, a3);
}

uint64_t sub_2293887CC()
{
  return sub_22938840C();
}

uint64_t sub_2293887E0()
{
  sub_229326FD0(&qword_255A442A0, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB2C);
  return sub_2293B8BAC();
}

uint64_t sub_229388830@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B28, (uint64_t)qword_255A44E30, a1);
}

uint64_t sub_22938884C()
{
  sub_229326FD0(&qword_255A44180, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB64);
  return sub_2293B8C78();
}

uint64_t sub_22938888C()
{
  sub_229326FD0(&qword_255A44180, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB64);
  return sub_2293B8C84();
}

uint64_t sub_2293888E0()
{
  uint64_t v0;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E48);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E48);
  return sub_2293B8D2C();
}

uint64_t sub_229388928()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_2293B8BC4();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_229388968()
{
  return sub_2293B8B64();
}

unint64_t sub_229388980()
{
  return 0xD000000000000015;
}

uint64_t (*sub_2293889A4())()
{
  return nullsub_1;
}

uint64_t sub_2293889B4()
{
  return sub_229388928();
}

uint64_t sub_2293889C8()
{
  return sub_229388968();
}

uint64_t sub_2293889DC()
{
  sub_229326FD0(&qword_255A442B0, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9C4);
  return sub_2293B8BAC();
}

uint64_t sub_229388A2C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B30, (uint64_t)qword_255A44E48, a1);
}

uint64_t sub_229388A48()
{
  sub_229326FD0(&qword_255A44160, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9FC);
  return sub_2293B8C78();
}

uint64_t sub_229388A88()
{
  sub_229326FD0(&qword_255A44160, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9FC);
  return sub_2293B8C84();
}

uint64_t sub_229388AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_2293B8B7C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_229326FD0(&qword_255A44228, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_2293B8F00();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t sub_229388BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E60);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "chunkData";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "chunkIndex";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "chunkTotal";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "senderIsAuthority";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229388DA8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2293B8BC4();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2293B8C00();
          break;
        case 2:
        case 3:
          sub_2293B8C24();
          break;
        case 4:
          sub_2293B8BDC();
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

void sub_229388E8C()
{
  __asm { BR              X10 }
}

uint64_t sub_229388ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2293B8CCC(), !v2))
  {
    if (!*(_DWORD *)(v3 + 16) || (result = sub_2293B8CE4(), !v2))
    {
      if (!*(_DWORD *)(v3 + 20) || (result = sub_2293B8CE4(), !v2))
      {
        if (*(_BYTE *)(v3 + 24) != 1 || (result = sub_2293B8CA8(), !v2))
        {
          type metadata accessor for CatchupResponseMessage(0);
          return sub_2293B8B64();
        }
      }
    }
  }
  return result;
}

uint64_t sub_229388FD4@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_2293B9AF0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  return sub_2293B8B70();
}

unint64_t sub_229389004()
{
  return 0xD000000000000016;
}

uint64_t sub_229389020()
{
  return sub_229388DA8();
}

void sub_229389034()
{
  sub_229388E8C();
}

uint64_t sub_229389048()
{
  sub_229326FD0(&qword_255A442B8, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC85C);
  return sub_2293B8BAC();
}

uint64_t sub_229389098@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B38, (uint64_t)qword_255A44E60, a1);
}

uint64_t sub_2293890B4()
{
  sub_229326FD0(&qword_255A44140, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC894);
  return sub_2293B8C78();
}

uint64_t sub_2293890F4()
{
  sub_229326FD0(&qword_255A44140, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC894);
  return sub_2293B8C84();
}

uint64_t sub_229389148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E78);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "prospectiveOwnerUUIDPB";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "changeType";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "ownershipCounter";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "requestUUIDPB";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229389380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeRequestMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 4:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeRequestMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 5:
          sub_22939F0F8();
LABEL_5:
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_6;
        case 6:
          v12 = v11;
          sub_2293B8C24();
          goto LABEL_6;
        case 7:
          v12 = v11;
          sub_22938A834(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeRequestMessage);
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229389520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  int *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v38 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v35 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v37 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v39 = (uint64_t)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v35 - v19;
  v21 = *v3;
  v43 = a3;
  if (v21)
  {
    v22 = *((_BYTE *)v3 + 8);
    v41 = v21;
    v42 = v22;
    sub_22939F0B4();
    result = sub_2293B8CB4();
    v24 = v3;
    v25 = v13;
    if (v4)
      return result;
  }
  else
  {
    v24 = v3;
    v25 = v13;
  }
  v26 = (int *)type metadata accessor for OwnershipChangeRequestMessage(0);
  sub_229324E44((uint64_t)v24 + v26[8], (uint64_t)v12, &qword_255A41F98);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v27(v12, 1, v25) == 1)
  {
    sub_2293251F8((uint64_t)v12, &qword_255A41F98);
  }
  else
  {
    v36 = v26;
    sub_22932EA14((uint64_t)v12, (uint64_t)v20, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    v26 = v36;
    result = sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
    if (v4)
      return result;
  }
  v28 = v40;
  sub_229324E44((uint64_t)v24 + v26[9], v40, &qword_255A41F98);
  if (v27((char *)v28, 1, v25) == 1)
  {
    sub_2293251F8(v28, &qword_255A41F98);
  }
  else
  {
    v29 = v28;
    v30 = v39;
    sub_22932EA14(v29, v39, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    result = sub_22932E904(v30, type metadata accessor for PBUUID);
    if (v4)
      return result;
  }
  if (!v24[2] || (v31 = *((_BYTE *)v24 + 24), v41 = v24[2], v42 = v31, sub_22939F0F8(), result = sub_2293B8CB4(), !v4))
  {
    if (!*((_DWORD *)v24 + 7) || (result = sub_2293B8CE4(), !v4))
    {
      v32 = v38;
      sub_229324E44((uint64_t)v24 + v26[10], v38, &qword_255A41F98);
      if (v27((char *)v32, 1, v25) == 1)
      {
        sub_2293251F8(v32, &qword_255A41F98);
      }
      else
      {
        v33 = v32;
        v34 = v37;
        sub_22932EA14(v33, v37, type metadata accessor for PBUUID);
        sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
        sub_2293B8D08();
        result = sub_22932E904(v34, type metadata accessor for PBUUID);
        if (v4)
          return result;
      }
      return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_229389984@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_DWORD *)(a2 + 28) = 0;
  sub_2293B8B70();
  v4 = a2 + a1[8];
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  v7(a2 + a1[9], 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + a1[10], 1, 1, v5);
}

unint64_t sub_229389A44()
{
  return 0xD00000000000001DLL;
}

uint64_t (*sub_229389A68())()
{
  return nullsub_1;
}

uint64_t sub_229389A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229389380(a1, a2, a3);
}

uint64_t sub_229389A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229389520(a1, a2, a3);
}

uint64_t sub_229389AA4()
{
  sub_229326FD0(&qword_255A442C0, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC6F4);
  return sub_2293B8BAC();
}

uint64_t sub_229389AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B40, (uint64_t)qword_255A44E78, a1);
}

uint64_t sub_229389B10()
{
  sub_229326FD0(&qword_255A44120, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC72C);
  return sub_2293B8C78();
}

uint64_t sub_229389B50()
{
  sub_229326FD0(&qword_255A44120, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC72C);
  return sub_2293B8C84();
}

uint64_t sub_229389BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44E90);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44E90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "requestUUIDPB";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "result";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 6;
  *(_QWORD *)v16 = "ownershipCounter";
  *(_QWORD *)(v16 + 8) = 16;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229389DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeReplyMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 4:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeReplyMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 5:
          sub_22939F13C();
LABEL_5:
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_6;
        case 6:
          v12 = v11;
          sub_2293B8C24();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229389F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v26 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for PBUUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  v16 = *v3;
  v29 = a3;
  v25 = v17;
  if (!v16 || (v18 = *((_BYTE *)v3 + 8), v27 = v16, v28 = v18, sub_22939F0B4(), result = sub_2293B8CB4(), !v4))
  {
    v20 = type metadata accessor for OwnershipChangeReplyMessage(0);
    sub_229324E44((uint64_t)v3 + *(int *)(v20 + 32), (uint64_t)v10, &qword_255A41F98);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v21(v10, 1, v11) == 1)
    {
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v10, (uint64_t)v15, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    v22 = v26;
    sub_229324E44((uint64_t)v3 + *(int *)(v20 + 36), v26, &qword_255A41F98);
    if (v21((char *)v22, 1, v11) == 1)
    {
      sub_2293251F8(v22, &qword_255A41F98);
    }
    else
    {
      v23 = v25;
      sub_22932EA14(v22, v25, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904(v23, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    if (!v3[2] || (v24 = *((_BYTE *)v3 + 24), v27 = v3[2], v28 = v24, sub_22939F13C(), result = sub_2293B8CB4(), !v4))
    {
      if (!*((_DWORD *)v3 + 7))
        return sub_2293B8B64();
      result = sub_2293B8CE4();
      if (!v4)
        return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_22938A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_DWORD *)(a2 + 28) = 0;
  sub_2293B8B70();
  v4 = a2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + *(int *)(a1 + 36), 1, 1, v5);
}

unint64_t sub_22938A318()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_22938A334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229389DA4(a1, a2, a3);
}

uint64_t sub_22938A348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229389F24(a1, a2, a3);
}

uint64_t sub_22938A35C()
{
  sub_229326FD0(&qword_255A442D0, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC58C);
  return sub_2293B8BAC();
}

uint64_t sub_22938A3AC@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B48, (uint64_t)qword_255A44E90, a1);
}

uint64_t sub_22938A3C8()
{
  sub_229326FD0(&qword_255A44100, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC5C4);
  return sub_2293B8C78();
}

uint64_t sub_22938A408()
{
  sub_229326FD0(&qword_255A44100, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC5C4);
  return sub_2293B8C84();
}

uint64_t sub_22938A45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44EA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44EA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "senderOwnerUUIDPB";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "newOwnerUUIDPB";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "ownershipCounter";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "autoAcceptsOwnershipRequests";
  *((_QWORD *)v19 + 1) = 28;
  v19[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938A694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeBroadcastMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeBroadcastMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_22938A834(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipChangeBroadcastMessage);
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_2293B8C24();
          goto LABEL_5;
        case 7:
          v12 = v11;
          sub_2293B8BDC();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938A834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  a5(0);
  type metadata accessor for PBUUID(0);
  sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
  return sub_2293B8C48();
}

uint64_t sub_22938A8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  int *v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v5 = v3;
  v42 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v34 - v19;
  v21 = *v3;
  v39 = a2;
  v36 = v22;
  v37 = v23;
  if (!v21 || (v24 = *((_BYTE *)v3 + 8), v40 = v21, v41 = v24, sub_22939F0B4(), result = sub_2293B8CB4(), !v4))
  {
    v26 = (int *)type metadata accessor for OwnershipChangeBroadcastMessage(0);
    sub_229324E44((uint64_t)v3 + v26[8], (uint64_t)v14, &qword_255A41F98);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v27(v14, 1, v15) == 1)
    {
      sub_2293251F8((uint64_t)v14, &qword_255A41F98);
    }
    else
    {
      v35 = v3;
      sub_22932EA14((uint64_t)v14, (uint64_t)v20, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      v5 = v35;
      result = sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    sub_229324E44((uint64_t)v5 + v26[9], (uint64_t)v12, &qword_255A41F98);
    if (v27(v12, 1, v15) == 1)
    {
      sub_2293251F8((uint64_t)v12, &qword_255A41F98);
    }
    else
    {
      v28 = (uint64_t)v12;
      v29 = v37;
      sub_22932EA14(v28, v37, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904(v29, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v27;
    v31 = v38;
    sub_229324E44((uint64_t)v5 + v26[10], v38, &qword_255A41F98);
    if (v30(v31, 1, v15) == 1)
    {
      sub_2293251F8(v31, &qword_255A41F98);
    }
    else
    {
      v32 = v31;
      v33 = v36;
      sub_22932EA14(v32, v36, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904(v33, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    if (!*((_DWORD *)v5 + 3) || (result = sub_2293B8CE4(), !v4))
    {
      if (*((_BYTE *)v5 + 16) != 1)
        return sub_2293B8B64();
      result = sub_2293B8CA8();
      if (!v4)
        return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_22938ACF4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_DWORD *)(a2 + 12) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  sub_2293B8B70();
  v4 = a2 + a1[8];
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  v7(a2 + a1[9], 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + a1[10], 1, 1, v5);
}

unint64_t sub_22938ADB0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_22938ADCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938A694(a1, a2, a3);
}

uint64_t sub_22938ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938A8C8(a1, a2, a3);
}

uint64_t sub_22938ADF4()
{
  sub_229326FD0(&qword_255A442E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC424);
  return sub_2293B8BAC();
}

uint64_t sub_22938AE44@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B50, (uint64_t)qword_255A44EA8, a1);
}

uint64_t sub_22938AE60()
{
  sub_229326FD0(&qword_255A440E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC45C);
  return sub_2293B8C78();
}

uint64_t sub_22938AEA0()
{
  sub_229326FD0(&qword_255A440E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC45C);
  return sub_2293B8C84();
}

uint64_t sub_22938AEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44EC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44EC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "prospectiveOwnerUUIDPB";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "ownershipCounter";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 6;
  *(_QWORD *)v16 = "requestUUIDPB";
  *(_QWORD *)(v16 + 8) = 13;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938B0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_2293912C8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffRequestMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffRequestMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_2293B8C24();
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffRequestMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938B290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v31 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - v17;
  v19 = *v3;
  v39 = a3;
  v32 = v20;
  v35 = v21;
  if (!v19 || (v22 = *((_BYTE *)v3 + 8), v37 = v19, v38 = v22, sub_22939F0B4(), result = sub_2293B8CB4(), !v4))
  {
    v24 = (int *)type metadata accessor for OwnershipHandoffRequestMessage(0);
    sub_229324E44((uint64_t)v3 + v24[7], (uint64_t)v12, &qword_255A41F98);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v34(v12, 1, v13) == 1)
    {
      sub_2293251F8((uint64_t)v12, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v12, (uint64_t)v18, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904((uint64_t)v18, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    v25 = v36;
    sub_229324E44((uint64_t)v3 + v24[8], v36, &qword_255A41F98);
    if (v34((char *)v25, 1, v13) == 1)
    {
      sub_2293251F8(v25, &qword_255A41F98);
    }
    else
    {
      v26 = v25;
      v27 = v35;
      sub_22932EA14(v26, v35, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904(v27, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    if (!*((_DWORD *)v3 + 3) || (result = sub_2293B8CE4(), !v4))
    {
      v28 = v33;
      sub_229324E44((uint64_t)v3 + v24[9], v33, &qword_255A41F98);
      if (v34((char *)v28, 1, v13) == 1)
      {
        sub_2293251F8(v28, &qword_255A41F98);
      }
      else
      {
        v29 = v28;
        v30 = v32;
        sub_22932EA14(v29, v32, type metadata accessor for PBUUID);
        sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
        sub_2293B8D08();
        result = sub_22932E904(v30, type metadata accessor for PBUUID);
        if (v4)
          return result;
      }
      return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_22938B6A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_DWORD *)(a2 + 12) = 0;
  sub_2293B8B70();
  v4 = a2 + a1[7];
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  v7(a2 + a1[8], 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + a1[9], 1, 1, v5);
}

unint64_t sub_22938B758()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_22938B774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938B0F8(a1, a2, a3);
}

uint64_t sub_22938B788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938B290(a1, a2, a3);
}

uint64_t sub_22938B79C()
{
  sub_229326FD0(&qword_255A442E8, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2BC);
  return sub_2293B8BAC();
}

uint64_t sub_22938B7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B58, (uint64_t)qword_255A44EC0, a1);
}

uint64_t sub_22938B808()
{
  sub_229326FD0(&qword_255A440C0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2F4);
  return sub_2293B8C78();
}

uint64_t sub_22938B848()
{
  sub_229326FD0(&qword_255A440C0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2F4);
  return sub_2293B8C84();
}

uint64_t sub_22938B89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44ED8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44ED8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "modelType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "modelUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "prospectiveOwnerUUIDPB";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "handoffAllowed";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 6;
  *(_QWORD *)v16 = "requestUUIDPB";
  *(_QWORD *)(v16 + 8) = 13;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938BAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_22939F0B4();
          v12 = v11;
          sub_2293B8BE8();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_2293912C8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffReplyMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffReplyMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_2293B8BDC();
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for OwnershipHandoffReplyMessage, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938BC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v31 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v32 = (uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v33 = (uint64_t)&v31 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - v19;
  v21 = *v3;
  v39 = a3;
  if (!v21 || (v22 = *((_BYTE *)v3 + 8), v37 = v21, v38 = v22, sub_22939F0B4(), result = sub_2293B8CB4(), !v4))
  {
    v35 = (int *)type metadata accessor for OwnershipHandoffReplyMessage(0);
    sub_229324E44((uint64_t)v3 + v35[7], (uint64_t)v12, &qword_255A41F98);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v24(v12, 1, v13) == 1)
    {
      sub_2293251F8((uint64_t)v12, &qword_255A41F98);
    }
    else
    {
      sub_22932EA14((uint64_t)v12, (uint64_t)v20, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    v25 = v36;
    sub_229324E44((uint64_t)v3 + v35[8], v36, &qword_255A41F98);
    if (v24((char *)v25, 1, v13) == 1)
    {
      sub_2293251F8(v25, &qword_255A41F98);
    }
    else
    {
      v26 = v25;
      v27 = v33;
      sub_22932EA14(v26, v33, type metadata accessor for PBUUID);
      sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
      sub_2293B8D08();
      result = sub_22932E904(v27, type metadata accessor for PBUUID);
      if (v4)
        return result;
    }
    if (*((_BYTE *)v3 + 9) != 1 || (result = sub_2293B8CA8(), !v4))
    {
      v28 = v34;
      sub_229324E44((uint64_t)v3 + v35[9], v34, &qword_255A41F98);
      if (v24((char *)v28, 1, v13) == 1)
      {
        sub_2293251F8(v28, &qword_255A41F98);
      }
      else
      {
        v29 = v28;
        v30 = v32;
        sub_22932EA14(v29, v32, type metadata accessor for PBUUID);
        sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
        sub_2293B8D08();
        result = sub_22932E904(v30, type metadata accessor for PBUUID);
        if (v4)
          return result;
      }
      return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_22938C03C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a2 = 0;
  *(_WORD *)(a2 + 8) = 1;
  sub_2293B8B70();
  v4 = a2 + a1[7];
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  v7(a2 + a1[8], 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + a1[9], 1, 1, v5);
}

unint64_t sub_22938C0F0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_22938C10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938BAA0(a1, a2, a3);
}

uint64_t sub_22938C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938BC38(a1, a2, a3);
}

uint64_t sub_22938C134()
{
  sub_229326FD0(&qword_255A442F0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC154);
  return sub_2293B8BAC();
}

uint64_t sub_22938C184@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B60, (uint64_t)qword_255A44ED8, a1);
}

uint64_t sub_22938C1A0()
{
  sub_229326FD0(&qword_255A440A0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC18C);
  return sub_2293B8C78();
}

uint64_t sub_22938C1E0()
{
  sub_229326FD0(&qword_255A440A0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC18C);
  return sub_2293B8C84();
}

uint64_t sub_22938C234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44EF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44EF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "timestamp";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyID";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "newValueData";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938C3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_2293912C8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for PropertyChangedMessage, type metadata accessor for ValueData, &qword_255A43F58, (uint64_t)&unk_2293BB214);
          break;
        case 2:
          sub_2293B8C24();
          break;
        case 1:
          sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for PropertyChangedMessage, type metadata accessor for LamportTimestamp, &qword_255A429F0, (uint64_t)&unk_2293BCE34);
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938C4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v3;
  v27 = a3;
  v25 = a2;
  v26 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ValueData(0);
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v21 = (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PropertyChangedMessage(0);
  sub_229324E44((uint64_t)v5 + *(int *)(v24 + 24), (uint64_t)v13, &qword_255A41FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2293251F8((uint64_t)v13, &qword_255A41FA8);
  }
  else
  {
    sub_22932EA14((uint64_t)v13, (uint64_t)v17, type metadata accessor for LamportTimestamp);
    sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
    if (v4)
      return result;
  }
  if (!*v5 || (result = sub_2293B8CE4(), !v4))
  {
    sub_229324E44((uint64_t)v5 + *(int *)(v24 + 28), (uint64_t)v8, &qword_255A41FB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v23) == 1)
    {
      sub_2293251F8((uint64_t)v8, &qword_255A41FB0);
    }
    else
    {
      v19 = (uint64_t)v8;
      v20 = v21;
      sub_22932EA14(v19, v21, type metadata accessor for ValueData);
      sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
      sub_2293B8D08();
      result = sub_22932E904(v20, type metadata accessor for ValueData);
      if (v4)
        return result;
    }
    return sub_2293B8B64();
  }
  return result;
}

uint64_t sub_22938C800@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  *a2 = 0;
  sub_2293B8B70();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for LamportTimestamp(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 28);
  v7 = type metadata accessor for ValueData(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_22938C88C()
{
  return 0xD000000000000016;
}

uint64_t sub_22938C8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938C3C8(a1, a2, a3);
}

uint64_t sub_22938C8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938C4EC(a1, a2, a3);
}

uint64_t sub_22938C8D0()
{
  sub_229326FD0(&qword_255A442F8, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BBFEC);
  return sub_2293B8BAC();
}

uint64_t sub_22938C920@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B68, (uint64_t)qword_255A44EF0, a1);
}

uint64_t sub_22938C93C()
{
  sub_229326FD0(&qword_255A44080, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BC024);
  return sub_2293B8C78();
}

uint64_t sub_22938C97C()
{
  sub_229326FD0(&qword_255A44080, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BC024);
  return sub_2293B8C84();
}

uint64_t sub_22938C9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F08);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "timestamp";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyID";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "addedData";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "removedData";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938CB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for SetChangedMessage, type metadata accessor for LamportTimestamp, &qword_255A429F0, (uint64_t)&unk_2293BCE34);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2293B8C24();
          goto LABEL_5;
        case 3:
        case 4:
          type metadata accessor for ValueData(0);
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
          v12 = v11;
          sub_2293B8C30();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  _QWORD v13[4];

  v13[3] = a3;
  v13[1] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = type metadata accessor for SetChangedMessage(0);
  sub_229324E44(v3 + *(int *)(v13[0] + 32), (uint64_t)v7, &qword_255A41FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v7, &qword_255A41FA8);
  }
  else
  {
    sub_22932EA14((uint64_t)v7, (uint64_t)v11, type metadata accessor for LamportTimestamp);
    sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v11, type metadata accessor for LamportTimestamp);
    if (v4)
      return result;
  }
  if (!*(_DWORD *)v3 || (result = sub_2293B8CE4(), !v4))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 8) + 16)
      || (type metadata accessor for ValueData(0),
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
          result = sub_2293B8CF0(),
          !v4))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
        return sub_2293B8B64();
      type metadata accessor for ValueData(0);
      sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
      result = sub_2293B8CF0();
      if (!v4)
        return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_22938CFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a2 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 8) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 16) = v4;
  sub_2293B8B70();
  v5 = a2 + *(int *)(a1 + 32);
  v6 = type metadata accessor for LamportTimestamp(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

unint64_t sub_22938D008()
{
  return 0xD000000000000011;
}

uint64_t sub_22938D024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938CB90(a1, a2, a3);
}

uint64_t sub_22938D038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938CD10(a1, a2, a3);
}

uint64_t sub_22938D04C()
{
  sub_229326FD0(&qword_255A44300, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBE84);
  return sub_2293B8BAC();
}

uint64_t sub_22938D09C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B70, (uint64_t)qword_255A44F08, a1);
}

uint64_t sub_22938D0B8()
{
  sub_229326FD0(&qword_255A44060, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBEBC);
  return sub_2293B8C78();
}

uint64_t sub_22938D0F8()
{
  sub_229326FD0(&qword_255A44060, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBEBC);
  return sub_2293B8C84();
}

uint64_t sub_22938D14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F20);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "ownershipUUIDPB";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyID";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "removedKeys";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "removedTimestamps";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "changedKeys";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "changedValues";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "changedTimestamps";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "addedKeys";
  *((_QWORD *)v23 + 1) = 9;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 9;
  *(_QWORD *)v24 = "addedValues";
  *(_QWORD *)(v24 + 8) = 11;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "addedTimestamps";
  *((_QWORD *)v26 + 1) = 15;
  v26[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938D45C()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2293B8BC4();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v4 = v3;
          sub_22938D63C();
          goto LABEL_10;
        case 2:
          v4 = v3;
          sub_2293B8C24();
          goto LABEL_10;
        case 3:
        case 5:
        case 8:
          v4 = v3;
          sub_2293B8BF4();
          goto LABEL_10;
        case 4:
        case 7:
        case 10:
          v4 = v3;
          sub_2293B8C0C();
          goto LABEL_10;
        case 6:
        case 9:
          type metadata accessor for ValueData(0);
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
          v4 = v3;
          sub_2293B8C30();
LABEL_10:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938D63C()
{
  type metadata accessor for DictionaryChangedMessage(0);
  type metadata accessor for PBUUID(0);
  sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
  return sub_2293B8C48();
}

uint64_t sub_22938D6D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PBUUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DictionaryChangedMessage(0);
  sub_229324E44(v1 + *(int *)(v12 + 56), (uint64_t)v4, &qword_255A41F98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2293251F8((uint64_t)v4, &qword_255A41F98);
    v9 = v13;
  }
  else
  {
    sub_22932EA14((uint64_t)v4, (uint64_t)v8, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    v10 = v13;
    sub_2293B8D08();
    v9 = v10;
    result = sub_22932E904((uint64_t)v8, type metadata accessor for PBUUID);
    if (v10)
      return result;
  }
  if (!*(_DWORD *)v1 || (result = sub_2293B8CE4(), !v9))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16) || (result = sub_2293B8CC0(), !v9))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16) || (result = sub_2293B8C9C(), !v9))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) || (result = sub_2293B8CC0(), !v9))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16)
            || (type metadata accessor for ValueData(0),
                sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
                result = sub_2293B8CF0(),
                !v9))
          {
            if (!*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) || (result = sub_2293B8C9C(), !v9))
            {
              if (!*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16) || (result = sub_2293B8CC0(), !v9))
              {
                if (!*(_QWORD *)(*(_QWORD *)(v1 + 56) + 16)
                  || (type metadata accessor for ValueData(0),
                      sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
                      result = sub_2293B8CF0(),
                      !v9))
                {
                  if (!*(_QWORD *)(*(_QWORD *)(v1 + 64) + 16))
                    return sub_2293B8B64();
                  result = sub_2293B8C9C();
                  if (!v9)
                    return sub_2293B8B64();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22938DA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a2 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 8) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = v4;
  *(_QWORD *)(a2 + 64) = v4;
  sub_2293B8B70();
  v5 = a2 + *(int *)(a1 + 56);
  v6 = type metadata accessor for PBUUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

unint64_t sub_22938DAC4()
{
  return 0xD000000000000018;
}

uint64_t sub_22938DAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22938DB20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_22938DB60())()
{
  return nullsub_1;
}

uint64_t sub_22938DB74()
{
  return sub_22938D45C();
}

uint64_t sub_22938DB88(uint64_t a1)
{
  return sub_22938D6D0(a1);
}

uint64_t sub_22938DB9C()
{
  sub_229326FD0(&qword_255A44308, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD1C);
  return sub_2293B8BAC();
}

uint64_t sub_22938DBEC@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B78, (uint64_t)qword_255A44F20, a1);
}

uint64_t sub_22938DC08()
{
  sub_229326FD0(&qword_255A44040, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD54);
  return sub_2293B8C78();
}

uint64_t sub_22938DC48()
{
  sub_229326FD0(&qword_255A44040, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD54);
  return sub_2293B8C84();
}

uint64_t sub_22938DC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F38);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "valueData";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "timestamp";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938DDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for PropertyCatchupData, type metadata accessor for LamportTimestamp, &qword_255A429F0, (uint64_t)&unk_2293BCE34);
      }
      else if (result == 1)
      {
        sub_22938DEC8();
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938DEC8()
{
  type metadata accessor for PropertyCatchupData(0);
  type metadata accessor for ValueData(0);
  sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
  return sub_2293B8C48();
}

uint64_t sub_22938DF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v3;
  v27 = a2;
  v28 = a3;
  v26 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LamportTimestamp(0);
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ValueData(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PropertyCatchupData(0);
  v19 = *(int *)(v18 + 20);
  v29 = v5;
  sub_229324E44(v5 + v19, (uint64_t)v13, &qword_255A41FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2293251F8((uint64_t)v13, &qword_255A41FB0);
    v20 = v29;
  }
  else
  {
    sub_22932EA14((uint64_t)v13, (uint64_t)v17, type metadata accessor for ValueData);
    sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v17, type metadata accessor for ValueData);
    v20 = v29;
    if (v4)
      return result;
  }
  sub_229324E44(v20 + *(int *)(v18 + 24), (uint64_t)v8, &qword_255A41FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v25) == 1)
  {
    sub_2293251F8((uint64_t)v8, &qword_255A41FA8);
  }
  else
  {
    v22 = v23;
    sub_22932EA14((uint64_t)v8, v23, type metadata accessor for LamportTimestamp);
    sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
    sub_2293B8D08();
    result = sub_22932E904(v22, type metadata accessor for LamportTimestamp);
    if (v4)
      return result;
  }
  return sub_2293B8B64();
}

uint64_t sub_22938E238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2293B8B70();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for ValueData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 24);
  v7 = type metadata accessor for LamportTimestamp(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_22938E2B8()
{
  return 0xD000000000000013;
}

uint64_t sub_22938E2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_22938E30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t sub_22938E344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938DDEC(a1, a2, a3);
}

uint64_t sub_22938E358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938DF5C(a1, a2, a3);
}

uint64_t sub_22938E36C()
{
  sub_229326FD0(&qword_255A44310, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBB4);
  return sub_2293B8BAC();
}

uint64_t sub_22938E3BC@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B80, (uint64_t)qword_255A44F38, a1);
}

uint64_t sub_22938E3D8()
{
  sub_229326FD0(&qword_255A42238, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBEC);
  return sub_2293B8C78();
}

uint64_t sub_22938E418()
{
  sub_229326FD0(&qword_255A42238, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBEC);
  return sub_2293B8C84();
}

uint64_t sub_22938E46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F50);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "dictionaryKeysData";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "dictionaryValueData";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "dictionaryTimestamps";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tombstoneTimestamps";
  *((_QWORD *)v15 + 1) = 19;
  v15[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938E630()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2293B8BC4();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2293B8BF4();
          break;
        case 2:
          type metadata accessor for ValueData(0);
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
          goto LABEL_5;
        case 3:
          type metadata accessor for LamportTimestamp(0);
          sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
          goto LABEL_5;
        case 4:
          type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
          sub_229326FD0(&qword_255A43FE8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB91C);
LABEL_5:
          sub_2293B8C30();
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938E7BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16) || (result = sub_2293B8CC0(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (type metadata accessor for ValueData(0),
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
          result = sub_2293B8CF0(),
          !v1))
    {
      if (!*(_QWORD *)(v0[2] + 16)
        || (type metadata accessor for LamportTimestamp(0),
            sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34),
            result = sub_2293B8CF0(),
            !v1))
      {
        if (!*(_QWORD *)(v0[3] + 16)
          || (type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0),
              sub_229326FD0(&qword_255A43FE8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB91C), result = sub_2293B8CF0(), !v1))
        {
          type metadata accessor for DictionaryCatchupData(0);
          return sub_2293B8B64();
        }
      }
    }
  }
  return result;
}

uint64_t sub_22938E96C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v1;
  a1[2] = v1;
  a1[3] = v1;
  return sub_2293B8B70();
}

unint64_t sub_22938E998()
{
  return 0xD000000000000015;
}

uint64_t sub_22938E9B4()
{
  return sub_22938E630();
}

uint64_t sub_22938E9C8()
{
  return sub_22938E7BC();
}

uint64_t sub_22938E9DC()
{
  sub_229326FD0(&qword_255A44318, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA4C);
  return sub_2293B8BAC();
}

uint64_t sub_22938EA2C@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B88, (uint64_t)qword_255A44F50, a1);
}

uint64_t sub_22938EA48()
{
  sub_229326FD0(&qword_255A44008, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA84);
  return sub_2293B8C78();
}

uint64_t sub_22938EA88()
{
  sub_229326FD0(&qword_255A44008, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA84);
  return sub_2293B8C84();
}

uint64_t sub_22938EADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F68);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938EC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, type metadata accessor for LamportTimestamp, &qword_255A429F0, (uint64_t)&unk_2293BCE34);
      }
      else if (result == 1)
      {
        sub_2293B8C00();
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

void sub_22938ED04()
{
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_22938EDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2293B8CCC(), !v2))
  {
    v9 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
    sub_229324E44(v4 + *(int *)(v9 + 24), v7, &qword_255A41FA8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v6) == 1)
    {
      sub_2293251F8(v7, &qword_255A41FA8);
    }
    else
    {
      sub_22932EA14(v7, v5, type metadata accessor for LamportTimestamp);
      sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
      sub_2293B8D08();
      result = sub_22932E904(v5, type metadata accessor for LamportTimestamp);
      if (v2)
        return result;
    }
    return sub_2293B8B64();
  }
  return result;
}

uint64_t sub_22938EF14@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = xmmword_2293B9AF0;
  sub_2293B8B70();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for LamportTimestamp(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_22938EF74()
{
  return 0xD000000000000028;
}

uint64_t sub_22938EF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938EC2C(a1, a2, a3);
}

void sub_22938EFA4()
{
  sub_22938ED04();
}

uint64_t sub_22938EFB8()
{
  sub_229326FD0(&qword_255A44320, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB8E4);
  return sub_2293B8BAC();
}

uint64_t sub_22938F008@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B90, (uint64_t)qword_255A44F68, a1);
}

uint64_t sub_22938F024()
{
  sub_229326FD0(&qword_255A43FE8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB91C);
  return sub_2293B8C78();
}

uint64_t sub_22938F064()
{
  sub_229326FD0(&qword_255A43FE8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB91C);
  return sub_2293B8C84();
}

uint64_t sub_22938F0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F80);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "timestamp";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "setElementValueData";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "setTimestamps";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tombstoneElementValueData";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "tombstoneTimestamps";
  *(_QWORD *)(v16 + 8) = 19;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938F2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for SetCatchupData, type metadata accessor for LamportTimestamp, &qword_255A429F0, (uint64_t)&unk_2293BCE34);
          break;
        case 2:
        case 4:
          type metadata accessor for ValueData(0);
          sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
          goto LABEL_5;
        case 3:
        case 5:
          type metadata accessor for LamportTimestamp(0);
          sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
LABEL_5:
          sub_2293B8C30();
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938F4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  _QWORD v13[4];

  v13[1] = a3;
  v13[3] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = type metadata accessor for SetCatchupData(0);
  sub_229324E44((uint64_t)v3 + *(int *)(v13[0] + 36), (uint64_t)v7, &qword_255A41FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v7, &qword_255A41FA8);
  }
  else
  {
    sub_22932EA14((uint64_t)v7, (uint64_t)v11, type metadata accessor for LamportTimestamp);
    sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v11, type metadata accessor for LamportTimestamp);
    if (v4)
      return result;
  }
  if (!*(_QWORD *)(*v3 + 16)
    || (type metadata accessor for ValueData(0),
        sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
        result = sub_2293B8CF0(),
        !v4))
  {
    if (!*(_QWORD *)(v3[1] + 16)
      || (sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34),
          result = sub_2293B8CF0(),
          !v4))
    {
      if (!*(_QWORD *)(v3[2] + 16)
        || (type metadata accessor for ValueData(0),
            sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214),
            result = sub_2293B8CF0(),
            !v4))
      {
        if (!*(_QWORD *)(v3[3] + 16))
          return sub_2293B8B64();
        sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
        result = sub_2293B8CF0();
        if (!v4)
          return sub_2293B8B64();
      }
    }
  }
  return result;
}

uint64_t sub_22938F7B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  a2[2] = v4;
  a2[3] = v4;
  sub_2293B8B70();
  v5 = (char *)a2 + *(int *)(a1 + 36);
  v6 = type metadata accessor for LamportTimestamp(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

uint64_t sub_22938F814()
{
  return 0x6863746143746553;
}

uint64_t sub_22938F838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22938F878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_22938F8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938F2BC(a1, a2, a3);
}

uint64_t sub_22938F8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938F4A0(a1, a2, a3);
}

uint64_t sub_22938F8E0()
{
  sub_229326FD0(&qword_255A44328, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB77C);
  return sub_2293B8BAC();
}

uint64_t sub_22938F930@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41B98, (uint64_t)qword_255A44F80, a1);
}

uint64_t sub_22938F94C()
{
  sub_229326FD0(&qword_255A428C0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB7B4);
  return sub_2293B8C78();
}

uint64_t sub_22938F98C()
{
  sub_229326FD0(&qword_255A428C0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB7B4);
  return sub_2293B8C84();
}

uint64_t sub_22938F9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44F98);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44F98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD4B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "modelUUIDPB";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "ownerUUIDPB";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "ownershipCounter";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "propertyDataPB";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "ownershipUUIDsToAccountIdentifiersPB";
  *(_QWORD *)(v16 + 8) = 36;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_22938FBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2293B8BC4();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_22938FDA4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ModelData, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 2:
          v12 = v11;
          sub_22938FE48(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ModelData, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          goto LABEL_6;
        case 3:
          v12 = v11;
          sub_2293B8C24();
          goto LABEL_6;
        case 4:
          type metadata accessor for ModelData.PropertyDataMap(0);
          sub_229326FD0(&qword_255A43F98, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4E4);
          goto LABEL_5;
        case 5:
          type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
          sub_229326FD0(&qword_255A43F78, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB37C);
LABEL_5:
          v12 = v11;
          sub_2293B8C30();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_22938FDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_229326FD0(a7, a6, a8);
  return sub_2293B8C48();
}

uint64_t sub_22938FE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_229326FD0(a7, a6, a8);
  return sub_2293B8C48();
}

uint64_t sub_22938FEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a2;
  v27 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = type metadata accessor for PBUUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v24 = (uint64_t)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - v16;
  v25 = type metadata accessor for ModelData(0);
  v18 = *(int *)(v25 + 32);
  v29 = v3;
  sub_229324E44(v3 + v18, (uint64_t)v11, &qword_255A41F98);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v20 = v19(v11, 1, v12);
  v28 = a1;
  if (v20 == 1)
  {
    sub_2293251F8((uint64_t)v11, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v11, (uint64_t)v17, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v17, type metadata accessor for PBUUID);
    if (v4)
      return result;
  }
  sub_229324E44(v29 + *(int *)(v25 + 36), (uint64_t)v9, &qword_255A41F98);
  if (v19(v9, 1, v12) == 1)
  {
    sub_2293251F8((uint64_t)v9, &qword_255A41F98);
  }
  else
  {
    v22 = v24;
    sub_22932EA14((uint64_t)v9, v24, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    result = sub_22932E904(v22, type metadata accessor for PBUUID);
    if (v4)
      return result;
  }
  if (!*(_DWORD *)v29 || (result = sub_2293B8CE4(), !v4))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v29 + 8) + 16)
      || (type metadata accessor for ModelData.PropertyDataMap(0),
          sub_229326FD0(&qword_255A43F98, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4E4),
          result = sub_2293B8CF0(),
          !v4))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v29 + 16) + 16))
        return sub_2293B8B64();
      type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
      sub_229326FD0(&qword_255A43F78, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB37C);
      result = sub_2293B8CF0();
      if (!v4)
        return sub_2293B8B64();
    }
  }
  return result;
}

uint64_t sub_229390298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a2 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 8) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 16) = v4;
  sub_2293B8B70();
  v5 = a2 + *(int *)(a1 + 32);
  v6 = type metadata accessor for PBUUID(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v8(v5, 1, 1, v6);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a2 + *(int *)(a1 + 36), 1, 1, v6);
}

uint64_t sub_229390334()
{
  return 0x7461446C65646F4DLL;
}

uint64_t sub_229390350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_229390390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2293903D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938FBE8(a1, a2, a3);
}

uint64_t sub_2293903E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22938FEEC(a1, a2, a3);
}

uint64_t sub_2293903F8()
{
  sub_229326FD0(&qword_255A44330, type metadata accessor for ModelData, (uint64_t)&unk_2293BB614);
  return sub_2293B8BAC();
}

uint64_t sub_229390448@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41BA0, (uint64_t)qword_255A44F98, a1);
}

uint64_t sub_229390464()
{
  sub_229326FD0(&qword_255A424D0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB64C);
  return sub_2293B8C78();
}

uint64_t sub_2293904A4()
{
  sub_229326FD0(&qword_255A424D0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB64C);
  return sub_2293B8C84();
}

uint64_t sub_2293904F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44FB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229390648()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2293B8BC4();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2293B8C00();
      }
      else if (result == 1)
      {
        sub_2293B8C24();
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_2293906E8()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_2293B8CE4(), !v1))
    __asm { BR              X10 }
  return result;
}

uint64_t sub_2293907E4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_2293B9AF0;
  return sub_2293B8B70();
}

unint64_t sub_229390810()
{
  return 0xD000000000000019;
}

uint64_t sub_22939082C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22939086C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2293908AC()
{
  return sub_229390648();
}

uint64_t sub_2293908C0()
{
  return sub_2293906E8();
}

uint64_t sub_2293908D4()
{
  sub_229326FD0(&qword_255A44338, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4AC);
  return sub_2293B8BAC();
}

uint64_t sub_229390924@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41BA8, (uint64_t)qword_255A44FB0, a1);
}

uint64_t sub_229390940()
{
  sub_229326FD0(&qword_255A43F98, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4E4);
  return sub_2293B8C78();
}

uint64_t sub_229390980()
{
  sub_229326FD0(&qword_255A43F98, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4E4);
  return sub_2293B8C84();
}

uint64_t sub_2293909D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44FC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44FC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD480;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229390B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2293B8C18();
      }
      else if (result == 1)
      {
        sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229390BFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  v16 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
  sub_229324E44((uint64_t)v3 + *(int *)(v15 + 24), (uint64_t)v6, &qword_255A41F98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2293251F8((uint64_t)v6, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v6, (uint64_t)v10, type metadata accessor for PBUUID);
    sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
    sub_2293B8D08();
    result = sub_22932E904((uint64_t)v10, type metadata accessor for PBUUID);
    if (v2)
      return result;
  }
  v12 = v3[1];
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v13)
    return sub_2293B8B64();
  result = sub_2293B8CD8();
  if (!v2)
    return sub_2293B8B64();
  return result;
}

uint64_t sub_229390DE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  sub_2293B8B70();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for PBUUID(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_229390E40()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_229390E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229390B24(a1, a2, a3);
}

uint64_t sub_229390E70(uint64_t a1)
{
  return sub_229390BFC(a1);
}

uint64_t sub_229390E84()
{
  sub_229326FD0(&qword_255A44340, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB344);
  return sub_2293B8BAC();
}

uint64_t sub_229390ED4@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41BB0, (uint64_t)qword_255A44FC8, a1);
}

uint64_t sub_229390EF0()
{
  sub_229326FD0(&qword_255A43F78, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB37C);
  return sub_2293B8C78();
}

uint64_t sub_229390F30()
{
  sub_229326FD0(&qword_255A43F78, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB37C);
  return sub_2293B8C84();
}

uint64_t sub_229390F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2293B8D38();
  __swift_allocate_value_buffer(v0, qword_255A44FE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255A44FE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255A44210);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44218);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2293BD470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "modelUUIDPB";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2293B8D14();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "data";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "ownerUUIDPB";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2293B8D20();
}

uint64_t sub_229391118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2293B8BC4();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_2293912C8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ValueData, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          break;
        case 2:
          sub_2293B8C00();
          break;
        case 1:
          sub_229391224(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ValueData, type metadata accessor for PBUUID, &qword_255A441C8, (uint64_t)&unk_2293BCF9C);
          break;
      }
      result = sub_2293B8BC4();
    }
  }
  return result;
}

uint64_t sub_229391224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_229326FD0(a7, a6, a8);
  return sub_2293B8C48();
}

uint64_t sub_2293912C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_229326FD0(a7, a6, a8);
  return sub_2293B8C48();
}

uint64_t sub_22939136C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  _QWORD v17[2];
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v20 = a3;
  v22 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v21 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - v8;
  v10 = type metadata accessor for PBUUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v17[1] = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 - v14;
  v19 = type metadata accessor for ValueData(0);
  sub_229324E44(v3 + *(int *)(v19 + 24), (uint64_t)v9, &qword_255A41F98);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v18(v9, 1, v10) == 1)
  {
    sub_2293251F8((uint64_t)v9, &qword_255A41F98);
    goto LABEL_4;
  }
  sub_22932EA14((uint64_t)v9, (uint64_t)v15, type metadata accessor for PBUUID);
  sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
  sub_2293B8D08();
  result = sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
  if (!v4)
LABEL_4:
    __asm { BR              X10 }
  return result;
}

uint64_t sub_22939168C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);

  *a2 = xmmword_2293B9AF0;
  sub_2293B8B70();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for PBUUID(0);
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v7)((char *)a2 + *(int *)(a1 + 28), 1, 1, v5);
}

uint64_t sub_229391724()
{
  return 0x74614465756C6156;
}

uint64_t sub_229391740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_229391780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2293917C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_229391118(a1, a2, a3);
}

uint64_t sub_2293917D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22939136C(a1, a2, a3);
}

uint64_t sub_2293917E8()
{
  sub_229326FD0(qword_255A44348, type metadata accessor for ValueData, (uint64_t)&unk_2293BB1DC);
  return sub_2293B8BAC();
}

uint64_t sub_229391838@<X0>(uint64_t a1@<X8>)
{
  return sub_229383EB8(&qword_255A41BB8, (uint64_t)qword_255A44FE0, a1);
}

uint64_t sub_229391854()
{
  sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
  return sub_2293B8C78();
}

uint64_t sub_229391894()
{
  sub_2293B93D4();
  sub_2293B8EF4();
  return sub_2293B93F8();
}

uint64_t sub_2293918E8()
{
  sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
  return sub_2293B8C84();
}

uint64_t sub_229391938()
{
  sub_2293B93D4();
  sub_2293B8EF4();
  return sub_2293B93F8();
}

uint64_t sub_22939198C()
{
  return sub_229326FD0(&qword_255A43F50, type metadata accessor for ValueData, (uint64_t)&unk_2293BB124);
}

uint64_t sub_2293919B8()
{
  return sub_229326FD0(&qword_255A43F58, type metadata accessor for ValueData, (uint64_t)&unk_2293BB214);
}

uint64_t sub_2293919E4()
{
  return sub_229326FD0(&qword_255A43F60, type metadata accessor for ValueData, (uint64_t)&unk_2293BB14C);
}

uint64_t sub_229391A10()
{
  return sub_229326FD0(&qword_255A43F68, type metadata accessor for ValueData, (uint64_t)&unk_2293BB18C);
}

uint64_t sub_229391A3C()
{
  return sub_229326FD0(&qword_255A43F70, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB28C);
}

uint64_t type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A44750);
}

uint64_t sub_229391A7C()
{
  return sub_229326FD0(&qword_255A43F78, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB37C);
}

uint64_t sub_229391AA8()
{
  return sub_229326FD0(&qword_255A43F80, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB2B4);
}

uint64_t sub_229391AD4()
{
  return sub_229326FD0(&qword_255A43F88, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier, (uint64_t)&unk_2293BB2F4);
}

uint64_t sub_229391B00()
{
  return sub_229326FD0(&qword_255A43F90, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB3F4);
}

uint64_t type metadata accessor for ModelData.PropertyDataMap(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A446B8);
}

uint64_t sub_229391B40()
{
  return sub_229326FD0(&qword_255A43F98, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB4E4);
}

uint64_t sub_229391B6C()
{
  return sub_229326FD0(&qword_255A43FA0, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB41C);
}

uint64_t sub_229391B98()
{
  return sub_229326FD0(&qword_255A43FA8, type metadata accessor for ModelData.PropertyDataMap, (uint64_t)&unk_2293BB45C);
}

uint64_t sub_229391BC4()
{
  return sub_229326FD0(&qword_255A43FB0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB55C);
}

uint64_t type metadata accessor for ModelData(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A44618);
}

uint64_t sub_229391C04()
{
  return sub_229326FD0(&qword_255A424D0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB64C);
}

uint64_t sub_229391C30()
{
  return sub_229326FD0(&qword_255A43FB8, type metadata accessor for ModelData, (uint64_t)&unk_2293BB584);
}

uint64_t sub_229391C5C()
{
  return sub_229326FD0(&qword_255A43FC0, type metadata accessor for ModelData, (uint64_t)&unk_2293BB5C4);
}

uint64_t sub_229391C88()
{
  return sub_229326FD0(&qword_255A43FC8, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB6C4);
}

uint64_t type metadata accessor for SetCatchupData(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A44578);
}

uint64_t sub_229391CC8()
{
  return sub_229326FD0(&qword_255A428C0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB7B4);
}

uint64_t sub_229391CF4()
{
  return sub_229326FD0(&qword_255A43FD0, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB6EC);
}

uint64_t sub_229391D20()
{
  return sub_229326FD0(&qword_255A43FD8, type metadata accessor for SetCatchupData, (uint64_t)&unk_2293BB72C);
}

uint64_t sub_229391D4C()
{
  return sub_229326FD0(&qword_255A43FE0, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB82C);
}

uint64_t type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A444E0);
}

uint64_t sub_229391D8C()
{
  return sub_229326FD0(&qword_255A43FE8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB91C);
}

uint64_t sub_229391DB8()
{
  return sub_229326FD0(&qword_255A43FF0, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB854);
}

uint64_t sub_229391DE4()
{
  return sub_229326FD0(&qword_255A43FF8, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp, (uint64_t)&unk_2293BB894);
}

uint64_t sub_229391E10()
{
  return sub_229326FD0(&qword_255A44000, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BB994);
}

uint64_t type metadata accessor for DictionaryCatchupData(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A44440);
}

uint64_t sub_229391E50()
{
  return sub_229326FD0(&qword_255A44008, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA84);
}

uint64_t sub_229391E7C()
{
  return sub_229326FD0(&qword_255A44010, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BB9BC);
}

uint64_t sub_229391EA8()
{
  return sub_229326FD0(&qword_255A44018, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BB9FC);
}

uint64_t sub_229391ED4()
{
  return sub_229326FD0(&qword_255A44020, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBAFC);
}

uint64_t type metadata accessor for PropertyCatchupData(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A443A8);
}

uint64_t sub_229391F14()
{
  return sub_229326FD0(&qword_255A42238, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBBEC);
}

uint64_t sub_229391F40()
{
  return sub_229326FD0(&qword_255A44028, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBB24);
}

uint64_t sub_229391F6C()
{
  return sub_229326FD0(&qword_255A44030, type metadata accessor for PropertyCatchupData, (uint64_t)&unk_2293BBB64);
}

uint64_t sub_229391F98()
{
  return sub_229326FD0(&qword_255A44038, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBC64);
}

uint64_t type metadata accessor for DictionaryChangedMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A447E8);
}

uint64_t sub_229391FD8()
{
  return sub_229326FD0(&qword_255A44040, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBD54);
}

uint64_t sub_229392004()
{
  return sub_229326FD0(&qword_255A44048, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBC8C);
}

uint64_t sub_229392030()
{
  return sub_229326FD0(&qword_255A44050, type metadata accessor for DictionaryChangedMessage, (uint64_t)&unk_2293BBCCC);
}

uint64_t sub_22939205C()
{
  return sub_229326FD0(&qword_255A44058, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBDCC);
}

uint64_t type metadata accessor for SetChangedMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A448A0);
}

uint64_t sub_22939209C()
{
  return sub_229326FD0(&qword_255A44060, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBEBC);
}

uint64_t sub_2293920C8()
{
  return sub_229326FD0(&qword_255A44068, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBDF4);
}

uint64_t sub_2293920F4()
{
  return sub_229326FD0(&qword_255A44070, type metadata accessor for SetChangedMessage, (uint64_t)&unk_2293BBE34);
}

uint64_t sub_229392120()
{
  return sub_229326FD0(&qword_255A44078, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BBF34);
}

uint64_t sub_22939214C()
{
  return sub_229326FD0(&qword_255A44080, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BC024);
}

uint64_t sub_229392178()
{
  return sub_229326FD0(&qword_255A44088, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BBF5C);
}

uint64_t sub_2293921A4()
{
  return sub_229326FD0(&qword_255A44090, type metadata accessor for PropertyChangedMessage, (uint64_t)&unk_2293BBF9C);
}

uint64_t sub_2293921D0()
{
  return sub_229326FD0(&qword_255A44098, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC09C);
}

uint64_t sub_2293921FC()
{
  return sub_229326FD0(&qword_255A440A0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC18C);
}

uint64_t sub_229392228()
{
  return sub_229326FD0(&qword_255A440A8, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC0C4);
}

uint64_t sub_229392254()
{
  return sub_229326FD0(&qword_255A440B0, type metadata accessor for OwnershipHandoffReplyMessage, (uint64_t)&unk_2293BC104);
}

uint64_t sub_229392280()
{
  return sub_229326FD0(&qword_255A440B8, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC204);
}

uint64_t sub_2293922AC()
{
  return sub_229326FD0(&qword_255A440C0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC2F4);
}

uint64_t sub_2293922D8()
{
  return sub_229326FD0(&qword_255A440C8, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC22C);
}

uint64_t sub_229392304()
{
  return sub_229326FD0(&qword_255A440D0, type metadata accessor for OwnershipHandoffRequestMessage, (uint64_t)&unk_2293BC26C);
}

uint64_t sub_229392330()
{
  return sub_229326FD0(&qword_255A440D8, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC36C);
}

uint64_t sub_22939235C()
{
  return sub_229326FD0(&qword_255A440E0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC45C);
}

uint64_t sub_229392388()
{
  return sub_229326FD0(&qword_255A440E8, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC394);
}

uint64_t sub_2293923B4()
{
  return sub_229326FD0(&qword_255A440F0, type metadata accessor for OwnershipChangeBroadcastMessage, (uint64_t)&unk_2293BC3D4);
}

uint64_t sub_2293923E0()
{
  return sub_229326FD0(&qword_255A440F8, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC4D4);
}

uint64_t sub_22939240C()
{
  return sub_229326FD0(&qword_255A44100, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC5C4);
}

uint64_t sub_229392438()
{
  return sub_229326FD0(&qword_255A44108, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC4FC);
}

uint64_t sub_229392464()
{
  return sub_229326FD0(&qword_255A44110, type metadata accessor for OwnershipChangeReplyMessage, (uint64_t)&unk_2293BC53C);
}

uint64_t sub_229392490()
{
  return sub_229326FD0(&qword_255A44118, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC63C);
}

uint64_t sub_2293924BC()
{
  return sub_229326FD0(&qword_255A44120, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC72C);
}

uint64_t sub_2293924E8()
{
  return sub_229326FD0(&qword_255A44128, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC664);
}

uint64_t sub_229392514()
{
  return sub_229326FD0(&qword_255A44130, type metadata accessor for OwnershipChangeRequestMessage, (uint64_t)&unk_2293BC6A4);
}

uint64_t sub_229392540()
{
  return sub_229326FD0(&qword_255A44138, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC7A4);
}

uint64_t sub_22939256C()
{
  return sub_229326FD0(&qword_255A44140, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC894);
}

uint64_t sub_229392598()
{
  return sub_229326FD0(&qword_255A44148, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC7CC);
}

uint64_t sub_2293925C4()
{
  return sub_229326FD0(&qword_255A44150, type metadata accessor for CatchupResponseMessage, (uint64_t)&unk_2293BC80C);
}

uint64_t sub_2293925F0()
{
  return sub_229326FD0(&qword_255A44158, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC90C);
}

uint64_t type metadata accessor for CatchupRequestMessage(uint64_t a1)
{
  return sub_22933F79C(a1, qword_255A44940);
}

uint64_t sub_229392630()
{
  return sub_229326FD0(&qword_255A44160, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC9FC);
}

uint64_t sub_22939265C()
{
  return sub_229326FD0(&qword_255A44168, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC934);
}

uint64_t sub_229392688()
{
  return sub_229326FD0(&qword_255A44170, type metadata accessor for CatchupRequestMessage, (uint64_t)&unk_2293BC974);
}

uint64_t sub_2293926B4()
{
  return sub_229326FD0(&qword_255A44178, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCA74);
}

uint64_t sub_2293926E0()
{
  return sub_229326FD0(&qword_255A44180, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCB64);
}

uint64_t sub_22939270C()
{
  return sub_229326FD0(&qword_255A44188, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCA9C);
}

uint64_t sub_229392738()
{
  return sub_229326FD0(&qword_255A44190, type metadata accessor for SyncTransactionMessage, (uint64_t)&unk_2293BCADC);
}

uint64_t sub_229392764()
{
  return sub_229326FD0(&qword_255A44198, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCBDC);
}

uint64_t sub_229392790()
{
  return sub_229326FD0(&qword_255A424E0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCCCC);
}

uint64_t sub_2293927BC()
{
  return sub_229326FD0(&qword_255A441A0, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCC04);
}

uint64_t sub_2293927E8()
{
  return sub_229326FD0(&qword_255A441A8, type metadata accessor for SyncMessage, (uint64_t)&unk_2293BCC44);
}

uint64_t sub_229392814()
{
  return sub_229326FD0(&qword_255A429E8, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCD44);
}

uint64_t sub_229392840()
{
  return sub_229326FD0(&qword_255A429F0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCE34);
}

uint64_t sub_22939286C()
{
  return sub_229326FD0(&qword_255A441B0, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCD6C);
}

uint64_t sub_229392898()
{
  return sub_229326FD0(&qword_255A441B8, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BCDAC);
}

uint64_t sub_2293928C4()
{
  return sub_229326FD0(&qword_255A441C0, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCEAC);
}

uint64_t sub_2293928F0()
{
  return sub_229326FD0(&qword_255A441C8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF9C);
}

uint64_t sub_22939291C()
{
  return sub_229326FD0(&qword_255A441D0, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCED4);
}

uint64_t sub_229392948()
{
  return sub_229326FD0(&qword_255A441D8, type metadata accessor for PBUUID, (uint64_t)&unk_2293BCF14);
}

uint64_t sub_229392974()
{
  return sub_2293929E0(&qword_255A441E0, &qword_255A441E8);
}

uint64_t sub_229392998()
{
  return sub_2293929E0(&qword_255A441F0, &qword_255A441F8);
}

uint64_t sub_2293929BC()
{
  return sub_2293929E0(&qword_255A44200, &qword_255A44208);
}

uint64_t sub_2293929E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2C85DC](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_229392A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[5];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v14 = type metadata accessor for ModelData.PropertyDataMap(0);
  v4 = MEMORY[0x24BDAC7A8](v14);
  v6 = (_DWORD *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v9 = (_DWORD *)((char *)v13 - v8);
  v15 = a1;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v10 && v15 != a2)
  {
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v13[4] = *(_QWORD *)(v7 + 72);
    sub_229324D74(v15 + v11, (uint64_t)v13 - v8, type metadata accessor for ModelData.PropertyDataMap);
    sub_229324D74(a2 + v11, (uint64_t)v6, type metadata accessor for ModelData.PropertyDataMap);
    if (*v9 == *v6)
      __asm { BR              X10 }
    sub_22932E904((uint64_t)v6, type metadata accessor for ModelData.PropertyDataMap);
    sub_22932E904((uint64_t)v9, type metadata accessor for ModelData.PropertyDataMap);
    return 0;
  }
  return 1;
}

uint64_t sub_229393418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  char v32;
  BOOL v34;
  uint64_t *v35;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for PBUUID(0);
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char **)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char **)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
  v11 = MEMORY[0x24BDAC7A8](v44);
  v13 = (char **)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char **)((char *)&v37 - v15);
  v42 = a1;
  v43 = a2;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    goto LABEL_28;
  if (!v17 || v42 == v43)
  {
    v32 = 1;
    return v32 & 1;
  }
  v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = *(_QWORD *)(v14 + 72);
  v37 = v10;
  v38 = v19;
  v20 = v17 - 1;
  while (1)
  {
    sub_229324D74(v42 + v18, (uint64_t)v16, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
    sub_229324D74(v43 + v18, (uint64_t)v13, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
    v21 = *(int *)(v44 + 24);
    v22 = (uint64_t)v13 + v21;
    v23 = (uint64_t)&v10[*(int *)(v40 + 48)];
    sub_229324E44((uint64_t)v16 + v21, (uint64_t)v10, &qword_255A41F98);
    sub_229324E44(v22, v23, &qword_255A41F98);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v24(v10, 1, v4) == 1)
      break;
    sub_229324E44((uint64_t)v10, (uint64_t)v8, &qword_255A41F98);
    if (v24((char *)v23, 1, v4) == 1)
    {
      v35 = &qword_255A44238;
      goto LABEL_24;
    }
    v25 = v23;
    v26 = v39;
    sub_22932EA14(v25, (uint64_t)v39, type metadata accessor for PBUUID);
    if (*v8 != *v26 || v8[1] != v26[1])
    {
      sub_22932E904((uint64_t)v26, type metadata accessor for PBUUID);
      v35 = &qword_255A41F98;
LABEL_24:
      sub_22932E904((uint64_t)v8, type metadata accessor for PBUUID);
      goto LABEL_26;
    }
    sub_2293B8B7C();
    v27 = v8;
    v28 = v4;
    v29 = v26;
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v30 = sub_2293B8F00();
    v31 = (uint64_t)v29;
    v4 = v28;
    v8 = v27;
    v10 = v37;
    sub_22932E904(v31, type metadata accessor for PBUUID);
    sub_22932E904((uint64_t)v8, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    if ((v30 & 1) == 0)
      goto LABEL_27;
LABEL_12:
    if ((*v16 != *v13 || v16[1] != v13[1]) && (sub_2293B9350() & 1) == 0)
      goto LABEL_27;
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = sub_2293B8F00();
    sub_22932E904((uint64_t)v13, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
    sub_22932E904((uint64_t)v16, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
    v34 = v20-- != 0;
    if ((v32 & 1) != 0)
    {
      v18 += v38;
      if (v34)
        continue;
    }
    return v32 & 1;
  }
  if (v24((char *)v23, 1, v4) == 1)
  {
    sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    goto LABEL_12;
  }
  v35 = &qword_255A44238;
LABEL_26:
  sub_2293251F8((uint64_t)v10, v35);
LABEL_27:
  sub_22932E904((uint64_t)v13, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
  sub_22932E904((uint64_t)v16, type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier);
LABEL_28:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_229393888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

BOOL sub_22939419C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_229394208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for ValueData(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v19 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_229324D74(a1 + v12, (uint64_t)v10, type metadata accessor for ValueData);
        sub_229324D74(a2 + v12, (uint64_t)v7, type metadata accessor for ValueData);
        v15 = sub_22939CBEC(v10, (uint64_t)v7);
        sub_22932E904((uint64_t)v7, type metadata accessor for ValueData);
        sub_22932E904((uint64_t)v10, type metadata accessor for ValueData);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_229394344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t v33;
  char v34;
  BOOL v36;
  uint64_t *v37;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for PBUUID(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v7);
  v44 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v46);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for LamportTimestamp(0);
  v11 = MEMORY[0x24BDAC7A8](v45);
  v13 = (_DWORD *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v16 = (_DWORD *)((char *)&v39 - v15);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    goto LABEL_26;
  if (!v17 || a1 == a2)
  {
    v34 = 1;
    return v34 & 1;
  }
  v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = *(_QWORD *)(v14 + 72);
  v40 = v6;
  v41 = v19;
  v20 = v17 - 1;
  v21 = v45;
  v42 = a1;
  v43 = a2;
  while (1)
  {
    sub_229324D74(a1 + v18, (uint64_t)v16, type metadata accessor for LamportTimestamp);
    sub_229324D74(a2 + v18, (uint64_t)v13, type metadata accessor for LamportTimestamp);
    v22 = *(int *)(v21 + 24);
    v23 = (uint64_t)v13 + v22;
    v24 = (uint64_t)&v10[*(int *)(v46 + 48)];
    sub_229324E44((uint64_t)v16 + v22, (uint64_t)v10, &qword_255A41F98);
    sub_229324E44(v23, v24, &qword_255A41F98);
    v25 = v48;
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
    if (v26((uint64_t)v10, 1, v48) == 1)
    {
      if (v26(v24, 1, v25) != 1)
      {
        v37 = &qword_255A44238;
        goto LABEL_24;
      }
      sub_2293251F8((uint64_t)v10, &qword_255A41F98);
      goto LABEL_12;
    }
    v27 = v44;
    sub_229324E44((uint64_t)v10, (uint64_t)v44, &qword_255A41F98);
    if (v26(v24, 1, v25) == 1)
      break;
    v28 = v24;
    v29 = v40;
    sub_22932EA14(v28, (uint64_t)v40, type metadata accessor for PBUUID);
    if (*v27 != *v29 || v27[1] != v29[1])
    {
      sub_22932E904((uint64_t)v29, type metadata accessor for PBUUID);
      v37 = &qword_255A41F98;
      goto LABEL_23;
    }
    sub_2293B8B7C();
    v30 = (uint64_t)v27;
    v31 = v29;
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = sub_2293B8F00();
    v33 = (uint64_t)v31;
    v21 = v45;
    sub_22932E904(v33, type metadata accessor for PBUUID);
    sub_22932E904(v30, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v10, &qword_255A41F98);
    if ((v32 & 1) == 0)
      goto LABEL_25;
LABEL_12:
    if (*v16 != *v13)
      goto LABEL_25;
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v34 = sub_2293B8F00();
    sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
    sub_22932E904((uint64_t)v16, type metadata accessor for LamportTimestamp);
    v36 = v20-- != 0;
    if ((v34 & 1) != 0)
    {
      a1 = v42;
      v18 += v41;
      a2 = v43;
      if (v36)
        continue;
    }
    return v34 & 1;
  }
  v37 = &qword_255A44238;
LABEL_23:
  sub_22932E904((uint64_t)v44, type metadata accessor for PBUUID);
LABEL_24:
  sub_2293251F8((uint64_t)v10, v37);
LABEL_25:
  sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
  sub_22932E904((uint64_t)v16, type metadata accessor for LamportTimestamp);
LABEL_26:
  v34 = 0;
  return v34 & 1;
}

uint64_t sub_229394788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD v22[8];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for LamportTimestamp(0);
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v23);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
  v12 = MEMORY[0x24BDAC7A8](v27);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v22 - v16;
  v25 = a1;
  v26 = a2;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 == *(_QWORD *)(a2 + 16))
  {
    if (v18 && v25 != v26)
    {
      v22[6] = v11;
      v22[7] = v4;
      v22[2] = v6;
      v22[3] = v9;
      v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v22[4] = *(_QWORD *)(v15 + 72);
      v22[5] = 0;
      sub_229324D74(v25 + v19, (uint64_t)v22 - v16, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
      sub_229324D74(v26 + v19, (uint64_t)v14, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
      __asm { BR              X10 }
    }
    v20 = 1;
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_229394E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  _DWORD *v78;
  _DWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t, uint64_t);
  int v113;
  _QWORD *v114;
  _QWORD *v115;
  char v116;
  char v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  _QWORD v125[3];
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  _QWORD *v141;
  _QWORD *v142;
  char *v143;
  char *v144;
  _QWORD *v145;
  _QWORD *v146;
  char *v147;
  char *v148;
  char *v149;
  _QWORD *v150;
  char *v151;
  _QWORD *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  _DWORD *v156;
  _DWORD *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v169 = *MEMORY[0x24BDAC8D0];
  v168 = type metadata accessor for ValueData(0);
  v4 = *(_QWORD *)(v168 - 8);
  v5 = MEMORY[0x24BDAC7A8](v168);
  v154 = (char *)v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v125 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v125 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v125 - v13;
  v167 = type metadata accessor for PBUUID(0);
  v165 = *(_QWORD *)(v167 - 8);
  v15 = MEMORY[0x24BDAC7A8](v167);
  v143 = (char *)v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v145 = (_QWORD *)((char *)v125 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v147 = (char *)v125 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v150 = (_QWORD *)((char *)v125 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v141 = (_QWORD *)((char *)v125 - v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v144 = (char *)v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v146 = (_QWORD *)((char *)v125 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v148 = (char *)v125 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v152 = (_QWORD *)((char *)v125 - v32);
  MEMORY[0x24BDAC7A8](v31);
  v142 = (_QWORD *)((char *)v125 - v33);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v34 = MEMORY[0x24BDAC7A8](v166);
  v155 = (char *)v125 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v160 = (uint64_t)v125 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v159 = (char *)v125 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v162 = (uint64_t)v125 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v153 = (uint64_t)v125 - v42;
  v43 = type metadata accessor for LamportTimestamp(0);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v156 = (_DWORD *)((char *)v125 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v46);
  v157 = (_DWORD *)((char *)v125 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v158);
  v164 = (uint64_t)v125 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for SetChangedMessage(0);
  v49 = MEMORY[0x24BDAC7A8](v161);
  v51 = (char *)v125 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v54 = (char *)v125 - v53;
  v55 = *(_QWORD *)(a1 + 16);
  if (v55 != *(_QWORD *)(a2 + 16))
    goto LABEL_62;
  if (!v55 || a1 == a2)
  {
    v117 = 1;
    return v117 & 1;
  }
  v135 = v44;
  v56 = 0;
  v138 = 0;
  v57 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v58 = a1 + v57;
  v59 = a2 + v57;
  v149 = v9;
  v60 = *(_QWORD *)(v52 + 72);
  v151 = v12;
  v163 = v14;
  v140 = v51;
  v139 = (char *)v125 - v53;
  v130 = v4;
  v61 = v167;
  v129 = v55;
  v128 = v58;
  v127 = v59;
  v126 = v60;
  while (1)
  {
    v131 = v56;
    v62 = v60 * v56;
    sub_229324D74(v58 + v60 * v56, (uint64_t)v54, type metadata accessor for SetChangedMessage);
    sub_229324D74(v59 + v62, (uint64_t)v51, type metadata accessor for SetChangedMessage);
    v63 = *(int *)(v161 + 32);
    v64 = (uint64_t)&v51[v63];
    v65 = v43;
    v66 = v164;
    v67 = v164 + *(int *)(v158 + 48);
    sub_229324E44((uint64_t)&v54[v63], v164, &qword_255A41FA8);
    sub_229324E44(v64, v67, &qword_255A41FA8);
    v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
    if (v68(v66, 1, v65) == 1)
    {
      if (v68(v67, 1, v65) != 1)
        goto LABEL_54;
      v43 = v65;
      sub_2293251F8(v164, &qword_255A41FA8);
      goto LABEL_18;
    }
    v69 = (uint64_t)v157;
    sub_229324E44(v66, (uint64_t)v157, &qword_255A41FA8);
    if (v68(v67, 1, v65) == 1)
    {
      sub_22932E904(v69, type metadata accessor for LamportTimestamp);
LABEL_54:
      v122 = &qword_255A44290;
LABEL_69:
      sub_2293251F8(v164, v122);
      goto LABEL_61;
    }
    v43 = v65;
    v70 = v67;
    v71 = (uint64_t)v156;
    sub_22932EA14(v70, (uint64_t)v156, type metadata accessor for LamportTimestamp);
    v72 = *(int *)(v65 + 24);
    v73 = v69 + v72;
    v74 = v71 + v72;
    v75 = v153;
    v76 = v153 + *(int *)(v166 + 48);
    sub_229324E44(v73, v153, &qword_255A41F98);
    sub_229324E44(v74, v76, &qword_255A41F98);
    v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
    if (v77(v75, 1, v61) == 1)
    {
      if (v77(v76, 1, v61) == 1)
      {
        sub_2293251F8(v75, &qword_255A41F98);
        v78 = v156;
        v79 = v157;
        goto LABEL_16;
      }
      v123 = &qword_255A44238;
      goto LABEL_67;
    }
    v80 = v75;
    v81 = v142;
    sub_229324E44(v80, (uint64_t)v142, &qword_255A41F98);
    if (v77(v76, 1, v61) == 1)
    {
      v123 = &qword_255A44238;
      goto LABEL_66;
    }
    v82 = v76;
    v83 = v141;
    sub_22932EA14(v82, (uint64_t)v141, type metadata accessor for PBUUID);
    if (*v81 != *v83 || v81[1] != v83[1])
    {
      sub_22932E904((uint64_t)v83, type metadata accessor for PBUUID);
      v123 = &qword_255A41F98;
LABEL_66:
      sub_22932E904((uint64_t)v142, type metadata accessor for PBUUID);
      v75 = v153;
LABEL_67:
      sub_2293251F8(v75, v123);
      v78 = v156;
      v79 = v157;
LABEL_68:
      sub_22932E904((uint64_t)v78, type metadata accessor for LamportTimestamp);
      sub_22932E904((uint64_t)v79, type metadata accessor for LamportTimestamp);
      v122 = &qword_255A41FA8;
      goto LABEL_69;
    }
    v84 = (uint64_t)v83;
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v85 = sub_2293B8F00();
    sub_22932E904(v84, type metadata accessor for PBUUID);
    v43 = v65;
    sub_22932E904((uint64_t)v81, type metadata accessor for PBUUID);
    sub_2293251F8(v153, &qword_255A41F98);
    v78 = v156;
    v79 = v157;
    if ((v85 & 1) == 0)
      goto LABEL_68;
LABEL_16:
    if (*v79 != *v78)
      goto LABEL_68;
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v86 = sub_2293B8F00();
    sub_22932E904((uint64_t)v78, type metadata accessor for LamportTimestamp);
    sub_22932E904((uint64_t)v79, type metadata accessor for LamportTimestamp);
    sub_2293251F8(v164, &qword_255A41FA8);
    v12 = v151;
    if ((v86 & 1) == 0)
      goto LABEL_61;
LABEL_18:
    if (*(_DWORD *)v54 != *(_DWORD *)v51)
      goto LABEL_61;
    v87 = *((_QWORD *)v54 + 1);
    v88 = *(_QWORD *)(v87 + 16);
    v137 = *((_QWORD *)v51 + 1);
    if (v88 != *(_QWORD *)(v137 + 16))
      goto LABEL_61;
    if (v88)
    {
      v89 = v137;
      if (v87 != v137)
        break;
    }
    v101 = *((_QWORD *)v54 + 2);
    v102 = *(_QWORD *)(v101 + 16);
    v137 = *((_QWORD *)v51 + 2);
    v103 = (uint64_t)v154;
    if (v102 != *(_QWORD *)(v137 + 16))
      goto LABEL_61;
    if (v102 && v101 != v137)
    {
      v104 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
      v125[1] = *(_QWORD *)(v130 + 72);
      v105 = v167;
      v133 = v101;
      v132 = v102;
      v106 = (uint64_t)v149;
      sub_229324D74(v101 + v104, (uint64_t)v149, type metadata accessor for ValueData);
      if (!*(_QWORD *)(v137 + 16))
      {
LABEL_71:
        __break(1u);
        JUMPOUT(0x2293968B4);
      }
      sub_229324D74(v137 + v104, v103, type metadata accessor for ValueData);
      v107 = *(int *)(v168 + 24);
      v108 = v106 + v107;
      v109 = v103 + v107;
      v110 = v160;
      v111 = v160 + *(int *)(v166 + 48);
      sub_229324E44(v108, v160, &qword_255A41F98);
      sub_229324E44(v109, v111, &qword_255A41F98);
      v112 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
      v113 = v112(v110, 1, v105);
      v136 = v112;
      if (v113 == 1)
      {
        if (v112(v111, 1, v105) == 1)
        {
          sub_2293251F8(v110, &qword_255A41F98);
          goto LABEL_42;
        }
      }
      else
      {
        v114 = v146;
        sub_229324E44(v110, (uint64_t)v146, &qword_255A41F98);
        if (v112(v111, 1, v105) != 1)
        {
          v115 = v145;
          sub_22932EA14(v111, (uint64_t)v145, type metadata accessor for PBUUID);
          if (*v114 == *v115 && v114[1] == v115[1])
          {
            sub_2293B8B7C();
            sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v116 = sub_2293B8F00();
            sub_22932E904((uint64_t)v115, type metadata accessor for PBUUID);
            sub_22932E904((uint64_t)v114, type metadata accessor for PBUUID);
            sub_2293251F8(v160, &qword_255A41F98);
            if ((v116 & 1) != 0)
LABEL_42:
              __asm { BR              X10 }
LABEL_59:
            sub_22932E904(v103, type metadata accessor for ValueData);
            v121 = (uint64_t)v149;
            goto LABEL_60;
          }
          sub_22932E904((uint64_t)v115, type metadata accessor for PBUUID);
          sub_22932E904((uint64_t)v114, type metadata accessor for PBUUID);
          v119 = &qword_255A41F98;
          v120 = v160;
LABEL_58:
          sub_2293251F8(v120, v119);
          goto LABEL_59;
        }
        sub_22932E904((uint64_t)v114, type metadata accessor for PBUUID);
      }
      v119 = &qword_255A44238;
      v120 = v110;
      goto LABEL_58;
    }
    v61 = v167;
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v117 = sub_2293B8F00();
    sub_22932E904((uint64_t)v51, type metadata accessor for SetChangedMessage);
    sub_22932E904((uint64_t)v54, type metadata accessor for SetChangedMessage);
    if ((v117 & 1) != 0)
    {
      v56 = v131 + 1;
      v12 = v151;
      v58 = v128;
      v59 = v127;
      v60 = v126;
      if (v131 + 1 != v129)
        continue;
    }
    return v117 & 1;
  }
  v90 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  v132 = *(_QWORD *)(v130 + 72);
  v134 = v87;
  v133 = v88;
  sub_229324D74(v87 + v90, (uint64_t)v14, type metadata accessor for ValueData);
  if (!*(_QWORD *)(v89 + 16))
  {
    __break(1u);
    goto LABEL_71;
  }
  sub_229324D74(v89 + v90, (uint64_t)v12, type metadata accessor for ValueData);
  v91 = *(int *)(v168 + 24);
  v92 = (uint64_t)&v14[v91];
  v93 = (uint64_t)&v12[v91];
  v94 = v162;
  v95 = v162 + *(int *)(v166 + 48);
  sub_229324E44(v92, v162, &qword_255A41F98);
  sub_229324E44(v93, v95, &qword_255A41F98);
  v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
  v97 = v167;
  if (v96(v94, 1, v167) == 1)
  {
    if (v96(v95, 1, v97) == 1)
    {
      sub_2293251F8(v94, &qword_255A41F98);
      goto LABEL_30;
    }
LABEL_50:
    v118 = &qword_255A44238;
LABEL_51:
    sub_2293251F8(v94, v118);
  }
  else
  {
    v98 = v152;
    sub_229324E44(v94, (uint64_t)v152, &qword_255A41F98);
    if (v96(v95, 1, v97) == 1)
    {
      sub_22932E904((uint64_t)v98, type metadata accessor for PBUUID);
      goto LABEL_50;
    }
    v99 = v150;
    sub_22932EA14(v95, (uint64_t)v150, type metadata accessor for PBUUID);
    if (*v98 != *v99 || v98[1] != v99[1])
    {
      sub_22932E904((uint64_t)v99, type metadata accessor for PBUUID);
      sub_22932E904((uint64_t)v98, type metadata accessor for PBUUID);
      v118 = &qword_255A41F98;
      goto LABEL_51;
    }
    sub_2293B8B7C();
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v12 = v151;
    v100 = sub_2293B8F00();
    sub_22932E904((uint64_t)v99, type metadata accessor for PBUUID);
    sub_22932E904((uint64_t)v98, type metadata accessor for PBUUID);
    sub_2293251F8(v94, &qword_255A41F98);
    if ((v100 & 1) != 0)
LABEL_30:
      __asm { BR              X10 }
  }
  sub_22932E904((uint64_t)v12, type metadata accessor for ValueData);
  v121 = (uint64_t)v163;
LABEL_60:
  sub_22932E904(v121, type metadata accessor for ValueData);
  v51 = v140;
  v54 = v139;
LABEL_61:
  sub_22932E904((uint64_t)v51, type metadata accessor for SetChangedMessage);
  sub_22932E904((uint64_t)v54, type metadata accessor for SetChangedMessage);
LABEL_62:
  v117 = 0;
  return v117 & 1;
}

uint64_t sub_229396958(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_229324D74(a1 + v16, (uint64_t)v14, a3);
        sub_229324D74(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_22932E904((uint64_t)v11, a3);
        sub_22932E904((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

void sub_229396A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_229396AF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x229396CD8);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_229396CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_229396A94((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_229396DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_2293B8924();
  v11 = result;
  if (result)
  {
    result = sub_2293B893C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_2293B8930();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_229396A94(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_229396E84(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_229396ED0()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_229396F04 + dword_2293970DC[v0 >> 62]))();
}

uint64_t sub_229396F14@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_2293970FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  _QWORD *v58;
  _QWORD *v59;
  char v60;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;

  v67 = sub_2293B8B7C();
  v65 = *(_QWORD *)(v67 - 8);
  v4 = MEMORY[0x24BDAC7A8](v67);
  v64 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v63 = (char *)&v62 - v6;
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t *)((char *)&v62 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v62 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v68 = (uint64_t *)((char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v18);
  v74 = (uint64_t)&v62 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v72 = (uint64_t)&v62 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v75 = (uint64_t *)((char *)&v62 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v62 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v62 - v29;
  v31 = type metadata accessor for ModelData(0);
  v32 = *(int *)(v31 + 32);
  v73 = a1;
  sub_229324E44(a1 + v32, (uint64_t)v30, &qword_255A41F98);
  v33 = v31;
  v34 = *(int *)(v31 + 32);
  v35 = v7;
  v71 = a2;
  sub_229324E44(a2 + v34, (uint64_t)v28, &qword_255A41F98);
  v36 = v12;
  v37 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_229324E44((uint64_t)v30, (uint64_t)v16, &qword_255A41F98);
  sub_229324E44((uint64_t)v28, v37, &qword_255A41F98);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v38((uint64_t)v16, 1, v35) == 1)
  {
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    if (v38(v37, 1, v35) == 1)
    {
      sub_2293251F8((uint64_t)v16, &qword_255A41F98);
      goto LABEL_4;
    }
LABEL_13:
    v54 = &qword_255A44238;
    v55 = (uint64_t)v16;
    goto LABEL_27;
  }
  sub_229324E44((uint64_t)v16, (uint64_t)v75, &qword_255A41F98);
  if (v38(v37, 1, v35) == 1)
  {
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    sub_22932E904((uint64_t)v75, type metadata accessor for PBUUID);
    goto LABEL_13;
  }
  v56 = v69;
  sub_22932EA14(v37, (uint64_t)v69, type metadata accessor for PBUUID);
  if (*v75 != *v56 || v75[1] != v56[1])
  {
    sub_22932E904((uint64_t)v56, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    sub_22932E904((uint64_t)v75, type metadata accessor for PBUUID);
    v55 = (uint64_t)v16;
    v54 = &qword_255A41F98;
    goto LABEL_27;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v57 = sub_2293B8F00();
  sub_22932E904((uint64_t)v56, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v28, &qword_255A41F98);
  sub_2293251F8((uint64_t)v30, &qword_255A41F98);
  sub_22932E904((uint64_t)v75, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v16, &qword_255A41F98);
  if ((v57 & 1) == 0)
    goto LABEL_28;
LABEL_4:
  v39 = v72;
  sub_229324E44(v73 + *(int *)(v33 + 36), v72, &qword_255A41F98);
  v40 = v71;
  v41 = v74;
  sub_229324E44(v71 + *(int *)(v33 + 36), v74, &qword_255A41F98);
  v42 = v70;
  v43 = v70 + *(int *)(v36 + 48);
  sub_229324E44(v39, v70, &qword_255A41F98);
  sub_229324E44(v41, v43, &qword_255A41F98);
  if (v38(v42, 1, v35) != 1)
  {
    v58 = v68;
    sub_229324E44(v42, (uint64_t)v68, &qword_255A41F98);
    if (v38(v43, 1, v35) == 1)
    {
      sub_2293251F8(v74, &qword_255A41F98);
      sub_2293251F8(v39, &qword_255A41F98);
      sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
      goto LABEL_21;
    }
    v59 = v66;
    sub_22932EA14(v43, (uint64_t)v66, type metadata accessor for PBUUID);
    if (*v58 == *v59 && v58[1] == v59[1])
    {
      sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v60 = sub_2293B8F00();
      sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
      sub_2293251F8(v74, &qword_255A41F98);
      sub_2293251F8(v72, &qword_255A41F98);
      sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
      sub_2293251F8(v42, &qword_255A41F98);
      if ((v60 & 1) != 0)
        goto LABEL_7;
LABEL_28:
      v52 = 0;
      return v52 & 1;
    }
    sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
    sub_2293251F8(v74, &qword_255A41F98);
    sub_2293251F8(v72, &qword_255A41F98);
    sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
    v55 = v42;
    v54 = &qword_255A41F98;
LABEL_27:
    sub_2293251F8(v55, v54);
    goto LABEL_28;
  }
  sub_2293251F8(v41, &qword_255A41F98);
  sub_2293251F8(v39, &qword_255A41F98);
  if (v38(v43, 1, v35) != 1)
  {
LABEL_21:
    v54 = &qword_255A44238;
    v55 = v42;
    goto LABEL_27;
  }
  sub_2293251F8(v42, &qword_255A41F98);
LABEL_7:
  v44 = v73;
  if (*(_DWORD *)v73 != *(_DWORD *)v40
    || (sub_229392A20(*(_QWORD *)(v73 + 8), *(_QWORD *)(v40 + 8)) & 1) == 0
    || (sub_229393418(*(_QWORD *)(v44 + 16), *(_QWORD *)(v40 + 16)) & 1) == 0)
  {
    goto LABEL_28;
  }
  v45 = v44 + *(int *)(v33 + 28);
  v46 = v65;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  v48 = v63;
  v49 = v67;
  v47(v63, v45, v67);
  v50 = v40 + *(int *)(v33 + 28);
  v51 = v64;
  v47(v64, v50, v49);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v52 = sub_2293B8F00();
  v53 = *(void (**)(char *, uint64_t))(v46 + 8);
  v53(v51, v49);
  v53(v48, v49);
  return v52 & 1;
}

uint64_t sub_2293978A0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  _QWORD *v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  _QWORD *v52;

  v4 = sub_2293B8B7C();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v45 - v7;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v52 = (uint64_t *)((char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v45 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v45 - v21;
  v23 = type metadata accessor for ModelData.OwnershipUUIDToAccountIdentifier(0);
  v24 = *(int *)(v23 + 24);
  v50 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_229324E44(v25, (uint64_t)v22, &qword_255A41F98);
  v27 = *(int *)(v26 + 24);
  v51 = a2;
  sub_229324E44((uint64_t)&a2[v27], (uint64_t)v20, &qword_255A41F98);
  v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_229324E44((uint64_t)v22, (uint64_t)v14, &qword_255A41F98);
  sub_229324E44((uint64_t)v20, v28, &qword_255A41F98);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v14, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2293251F8((uint64_t)v14, &qword_255A41F98);
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  v40 = v52;
  sub_229324E44((uint64_t)v14, (uint64_t)v52, &qword_255A41F98);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v40, type metadata accessor for PBUUID);
LABEL_10:
    v41 = &qword_255A44238;
    v42 = (uint64_t)v14;
LABEL_16:
    sub_2293251F8(v42, v41);
LABEL_17:
    v32 = 0;
    return v32 & 1;
  }
  sub_22932EA14(v28, (uint64_t)v11, type metadata accessor for PBUUID);
  if (*v40 != *v11 || v40[1] != v11[1])
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v40, type metadata accessor for PBUUID);
    v42 = (uint64_t)v14;
    v41 = &qword_255A41F98;
    goto LABEL_16;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v43 = sub_2293B8F00();
  sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v20, &qword_255A41F98);
  sub_2293251F8((uint64_t)v22, &qword_255A41F98);
  sub_22932E904((uint64_t)v40, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v14, &qword_255A41F98);
  if ((v43 & 1) == 0)
    goto LABEL_17;
LABEL_4:
  v31 = v50;
  v30 = v51;
  if (*v50 == *(_QWORD *)v51 && v50[1] == *((_QWORD *)v51 + 1) || (v32 = 0, (sub_2293B9350() & 1) != 0))
  {
    v33 = (char *)v31 + *(int *)(v26 + 20);
    v35 = v48;
    v34 = v49;
    v36 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v37 = v46;
    v36(v46, v33, v49);
    v38 = v47;
    v36(v47, &v30[*(int *)(v26 + 20)], v34);
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = sub_2293B8F00();
    v39 = *(void (**)(char *, uint64_t))(v35 + 8);
    v39(v38, v34);
    v39(v37, v34);
  }
  return v32 & 1;
}

uint64_t sub_229397D50(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && (sub_229396E84(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16)), (v11 & 1) != 0))
  {
    v12 = type metadata accessor for ModelData.PropertyDataMap(0);
    v13 = (char *)(a1 + *(int *)(v12 + 24));
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, &a2[*(int *)(v12 + 24)], v4);
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v15 = sub_2293B8F00();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_229397E94(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1))
  {
    v11 = type metadata accessor for PBUUID(0);
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 24)], v4);
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2293B8F00();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_229397FD8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t *v75;
  uint64_t v76;
  char v77;
  _QWORD *v78;
  _QWORD *v79;
  char v80;
  _QWORD *v81;
  _QWORD *v82;
  char v83;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v96 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v95 = (char *)&v85 - v8;
  v101 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v101 - 8);
  v10 = MEMORY[0x24BDAC7A8](v101);
  v97 = (char **)((char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v98 = (char **)((char *)&v85 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char **)((char *)&v85 - v14);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v16 = MEMORY[0x24BDAC7A8](v102);
  v99 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v100 = (uint64_t)&v85 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v85 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8]((char *)&v85 - v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char **)((char *)&v85 - v30);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v85 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)&v85 - v41;
  v43 = a1;
  v44 = *a1;
  v45 = *a2;
  v46 = a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    v47 = v43;
    if (v44 != v45)
      goto LABEL_49;
    goto LABEL_11;
  }
  v47 = v43;
  if (!v45)
  {
    if (!v44)
      goto LABEL_11;
LABEL_49:
    v73 = 0;
    return v73 & 1;
  }
  if (v45 != 1)
  {
    if (v44 == 2)
      goto LABEL_11;
    goto LABEL_49;
  }
  if (v44 != 1)
    goto LABEL_49;
LABEL_11:
  v93 = v37;
  v94 = v36;
  v90 = v39;
  v91 = (_QWORD *)v35;
  v88 = v4;
  v89 = v40;
  v86 = v5;
  v87 = (_QWORD *)v38;
  v48 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  v49 = *(int *)(v48 + 32);
  v92 = v47;
  sub_229324E44((uint64_t)v47 + v49, (uint64_t)v42, &qword_255A41F98);
  v50 = (int *)v48;
  sub_229324E44((uint64_t)v46 + *(int *)(v48 + 32), (uint64_t)v34, &qword_255A41F98);
  v51 = (uint64_t)&v21[*(int *)(v102 + 48)];
  sub_229324E44((uint64_t)v42, (uint64_t)v21, &qword_255A41F98);
  sub_229324E44((uint64_t)v34, v51, &qword_255A41F98);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v53 = v101;
  if (v52((uint64_t)v21, 1, v101) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    if (v52(v51, 1, v53) == 1)
    {
      sub_2293251F8((uint64_t)v21, &qword_255A41F98);
      goto LABEL_14;
    }
    goto LABEL_25;
  }
  sub_229324E44((uint64_t)v21, (uint64_t)v31, &qword_255A41F98);
  if (v52(v51, 1, v53) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
LABEL_25:
    v75 = &qword_255A44238;
    v76 = (uint64_t)v21;
LABEL_48:
    sub_2293251F8(v76, v75);
    goto LABEL_49;
  }
  sub_22932EA14(v51, (uint64_t)v15, type metadata accessor for PBUUID);
  if (*v31 != *v15 || v31[1] != v15[1])
  {
    sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    v76 = (uint64_t)v21;
    v75 = &qword_255A41F98;
    goto LABEL_48;
  }
  v85 = (char *)v15 + *(int *)(v53 + 24);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v77 = sub_2293B8F00();
  sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v34, &qword_255A41F98);
  sub_2293251F8((uint64_t)v42, &qword_255A41F98);
  sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if ((v77 & 1) == 0)
    goto LABEL_49;
LABEL_14:
  v54 = v50;
  v55 = v50[9];
  v56 = v92;
  v57 = v94;
  sub_229324E44((uint64_t)v92 + v55, v94, &qword_255A41F98);
  v58 = v46;
  v59 = (uint64_t)v46 + v54[9];
  v60 = v93;
  sub_229324E44(v59, v93, &qword_255A41F98);
  v61 = v100;
  v62 = v100 + *(int *)(v102 + 48);
  sub_229324E44(v57, v100, &qword_255A41F98);
  sub_229324E44(v60, v62, &qword_255A41F98);
  if (v52(v61, 1, v53) == 1)
  {
    sub_2293251F8(v60, &qword_255A41F98);
    sub_2293251F8(v57, &qword_255A41F98);
    if (v52(v62, 1, v53) == 1)
    {
      sub_2293251F8(v61, &qword_255A41F98);
      goto LABEL_17;
    }
    goto LABEL_33;
  }
  v78 = v91;
  sub_229324E44(v61, (uint64_t)v91, &qword_255A41F98);
  if (v52(v62, 1, v53) == 1)
  {
    sub_2293251F8(v93, &qword_255A41F98);
    sub_2293251F8(v94, &qword_255A41F98);
    sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
LABEL_33:
    v75 = &qword_255A44238;
    v76 = v61;
    goto LABEL_48;
  }
  v79 = v98;
  sub_22932EA14(v62, (uint64_t)v98, type metadata accessor for PBUUID);
  if (*v78 != *v79 || v78[1] != v79[1])
  {
    sub_22932E904((uint64_t)v79, type metadata accessor for PBUUID);
    sub_2293251F8(v93, &qword_255A41F98);
    sub_2293251F8(v94, &qword_255A41F98);
    sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
    v76 = v61;
LABEL_47:
    v75 = &qword_255A41F98;
    goto LABEL_48;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v80 = sub_2293B8F00();
  sub_22932E904((uint64_t)v79, type metadata accessor for PBUUID);
  sub_2293251F8(v93, &qword_255A41F98);
  sub_2293251F8(v94, &qword_255A41F98);
  sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
  sub_2293251F8(v61, &qword_255A41F98);
  if ((v80 & 1) == 0)
    goto LABEL_49;
LABEL_17:
  v63 = v90;
  sub_229324E44((uint64_t)v56 + v54[10], v90, &qword_255A41F98);
  v64 = v89;
  sub_229324E44((uint64_t)v58 + v54[10], v89, &qword_255A41F98);
  v65 = v99;
  v66 = v99 + *(int *)(v102 + 48);
  sub_229324E44(v63, v99, &qword_255A41F98);
  v67 = v65;
  sub_229324E44(v64, v66, &qword_255A41F98);
  if (v52(v65, 1, v53) == 1)
  {
    sub_2293251F8(v64, &qword_255A41F98);
    v67 = v99;
    sub_2293251F8(v63, &qword_255A41F98);
    if (v52(v66, 1, v53) == 1)
    {
      sub_2293251F8(v67, &qword_255A41F98);
      goto LABEL_20;
    }
    goto LABEL_41;
  }
  v81 = v87;
  sub_229324E44(v65, (uint64_t)v87, &qword_255A41F98);
  if (v52(v66, 1, v53) == 1)
  {
    sub_2293251F8(v89, &qword_255A41F98);
    sub_2293251F8(v90, &qword_255A41F98);
    sub_22932E904((uint64_t)v81, type metadata accessor for PBUUID);
LABEL_41:
    v75 = &qword_255A44238;
    v76 = v67;
    goto LABEL_48;
  }
  v82 = v97;
  sub_22932EA14(v66, (uint64_t)v97, type metadata accessor for PBUUID);
  if (*v81 != *v82 || v81[1] != v82[1])
  {
    sub_22932E904((uint64_t)v82, type metadata accessor for PBUUID);
    sub_2293251F8(v89, &qword_255A41F98);
    sub_2293251F8(v90, &qword_255A41F98);
    sub_22932E904((uint64_t)v81, type metadata accessor for PBUUID);
    v76 = v67;
    goto LABEL_47;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v83 = sub_2293B8F00();
  sub_22932E904((uint64_t)v82, type metadata accessor for PBUUID);
  sub_2293251F8(v89, &qword_255A41F98);
  sub_2293251F8(v90, &qword_255A41F98);
  sub_22932E904((uint64_t)v81, type metadata accessor for PBUUID);
  sub_2293251F8(v67, &qword_255A41F98);
  if ((v83 & 1) == 0)
    goto LABEL_49;
LABEL_20:
  if (*((_DWORD *)v56 + 3) != *((_DWORD *)v58 + 3) || *((unsigned __int8 *)v56 + 16) != *((unsigned __int8 *)v58 + 16))
    goto LABEL_49;
  v68 = v86;
  v69 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v70 = v95;
  v71 = v88;
  v69(v95, (char *)v56 + v54[7], v88);
  v72 = v96;
  v69(v96, (char *)v58 + v54[7], v71);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v73 = sub_2293B8F00();
  v74 = *(void (**)(char *, uint64_t))(v68 + 8);
  v74(v72, v71);
  v74(v70, v71);
  return v73 & 1;
}

uint64_t sub_229398ABC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t *v70;
  uint64_t v71;
  char v72;
  _QWORD *v73;
  _QWORD *v74;
  char v75;
  _QWORD *v76;
  _QWORD *v78;
  _QWORD *v79;
  char v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v94 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v82 - v8;
  v98 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v98 - 8);
  v10 = MEMORY[0x24BDAC7A8](v98);
  v92 = (char **)((char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v96 = (char **)((char *)&v82 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char **)((char *)&v82 - v14);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v16 = MEMORY[0x24BDAC7A8](v99);
  v95 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v97 = (uint64_t)&v82 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v82 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8]((char *)&v82 - v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char **)((char *)&v82 - v30);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v82 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)&v82 - v41;
  v43 = a1;
  v44 = *a1;
  v45 = *a2;
  v46 = a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    v47 = v43;
    if (v44 != v45)
      goto LABEL_43;
    goto LABEL_11;
  }
  v47 = v43;
  if (!v45)
  {
    if (!v44)
      goto LABEL_11;
LABEL_43:
    v68 = 0;
    return v68 & 1;
  }
  if (v45 != 1)
  {
    if (v44 == 2)
      goto LABEL_11;
    goto LABEL_43;
  }
  if (v44 != 1)
    goto LABEL_43;
LABEL_11:
  v90 = v37;
  v91 = v36;
  v87 = v4;
  v88 = (_QWORD *)v35;
  v85 = v40;
  v86 = v39;
  v83 = v5;
  v84 = (_QWORD *)v38;
  v48 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  sub_229324E44((uint64_t)v47 + *(int *)(v48 + 28), (uint64_t)v42, &qword_255A41F98);
  v89 = (int *)v48;
  sub_229324E44((uint64_t)v46 + *(int *)(v48 + 28), (uint64_t)v34, &qword_255A41F98);
  v49 = (uint64_t)&v21[*(int *)(v99 + 48)];
  sub_229324E44((uint64_t)v42, (uint64_t)v21, &qword_255A41F98);
  sub_229324E44((uint64_t)v34, v49, &qword_255A41F98);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v51 = v98;
  if (v50((uint64_t)v21, 1, v98) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    if (v50(v49, 1, v51) == 1)
    {
      sub_2293251F8((uint64_t)v21, &qword_255A41F98);
      goto LABEL_14;
    }
LABEL_24:
    v70 = &qword_255A44238;
    v71 = (uint64_t)v21;
LABEL_42:
    sub_2293251F8(v71, v70);
    goto LABEL_43;
  }
  sub_229324E44((uint64_t)v21, (uint64_t)v31, &qword_255A41F98);
  if (v50(v49, 1, v51) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    goto LABEL_24;
  }
  sub_22932EA14(v49, (uint64_t)v15, type metadata accessor for PBUUID);
  if (*v31 != *v15 || v31[1] != v15[1])
  {
    sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    v71 = (uint64_t)v21;
LABEL_30:
    v70 = &qword_255A41F98;
    goto LABEL_42;
  }
  v82 = (char *)v15 + *(int *)(v51 + 24);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v72 = sub_2293B8F00();
  sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v34, &qword_255A41F98);
  sub_2293251F8((uint64_t)v42, &qword_255A41F98);
  sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if ((v72 & 1) == 0)
    goto LABEL_43;
LABEL_14:
  v52 = v89;
  v53 = v91;
  sub_229324E44((uint64_t)v47 + v89[8], v91, &qword_255A41F98);
  v54 = v46;
  v55 = v90;
  sub_229324E44((uint64_t)v46 + v52[8], v90, &qword_255A41F98);
  v56 = v97;
  v57 = v97 + *(int *)(v99 + 48);
  sub_229324E44(v53, v97, &qword_255A41F98);
  sub_229324E44(v55, v57, &qword_255A41F98);
  if (v50(v56, 1, v51) == 1)
  {
    sub_2293251F8(v55, &qword_255A41F98);
    sub_2293251F8(v53, &qword_255A41F98);
    if (v50(v57, 1, v51) == 1)
    {
      sub_2293251F8(v56, &qword_255A41F98);
      goto LABEL_17;
    }
LABEL_33:
    v70 = &qword_255A44238;
    v71 = v56;
    goto LABEL_42;
  }
  v73 = v88;
  sub_229324E44(v56, (uint64_t)v88, &qword_255A41F98);
  if (v50(v57, 1, v51) == 1)
  {
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
    goto LABEL_33;
  }
  v74 = v96;
  sub_22932EA14(v57, (uint64_t)v96, type metadata accessor for PBUUID);
  if (*v73 != *v74 || v73[1] != v74[1])
  {
    sub_22932E904((uint64_t)v74, type metadata accessor for PBUUID);
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
    v71 = v56;
    v70 = &qword_255A41F98;
    goto LABEL_42;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v75 = sub_2293B8F00();
  sub_22932E904((uint64_t)v74, type metadata accessor for PBUUID);
  sub_2293251F8(v90, &qword_255A41F98);
  sub_2293251F8(v91, &qword_255A41F98);
  sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
  sub_2293251F8(v56, &qword_255A41F98);
  if ((v75 & 1) == 0)
    goto LABEL_43;
LABEL_17:
  if (*((_DWORD *)v47 + 3) != *((_DWORD *)v54 + 3))
    goto LABEL_43;
  v58 = v86;
  sub_229324E44((uint64_t)v47 + v52[9], v86, &qword_255A41F98);
  v59 = v85;
  sub_229324E44((uint64_t)v54 + v52[9], v85, &qword_255A41F98);
  v60 = v95;
  v61 = v95 + *(int *)(v99 + 48);
  sub_229324E44(v58, v95, &qword_255A41F98);
  sub_229324E44(v59, v61, &qword_255A41F98);
  if (v50(v60, 1, v51) == 1)
  {
    sub_2293251F8(v59, &qword_255A41F98);
    sub_2293251F8(v58, &qword_255A41F98);
    if (v50(v61, 1, v51) == 1)
    {
      sub_2293251F8(v60, &qword_255A41F98);
      v62 = v87;
      goto LABEL_21;
    }
    goto LABEL_41;
  }
  v76 = v84;
  sub_229324E44(v60, (uint64_t)v84, &qword_255A41F98);
  if (v50(v61, 1, v51) == 1)
  {
    sub_2293251F8(v85, &qword_255A41F98);
    sub_2293251F8(v86, &qword_255A41F98);
    sub_22932E904((uint64_t)v76, type metadata accessor for PBUUID);
LABEL_41:
    v70 = &qword_255A44238;
    v71 = v60;
    goto LABEL_42;
  }
  v78 = v92;
  sub_22932EA14(v61, (uint64_t)v92, type metadata accessor for PBUUID);
  if (*v76 != *v78 || v76[1] != v78[1])
  {
    sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
    sub_2293251F8(v85, &qword_255A41F98);
    sub_2293251F8(v86, &qword_255A41F98);
    sub_22932E904((uint64_t)v76, type metadata accessor for PBUUID);
    v71 = v60;
    goto LABEL_30;
  }
  v79 = v76;
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v62 = v87;
  v80 = sub_2293B8F00();
  sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
  sub_2293251F8(v85, &qword_255A41F98);
  sub_2293251F8(v86, &qword_255A41F98);
  v81 = (uint64_t)v79;
  v52 = v89;
  sub_22932E904(v81, type metadata accessor for PBUUID);
  sub_2293251F8(v60, &qword_255A41F98);
  if ((v80 & 1) == 0)
    goto LABEL_43;
LABEL_21:
  v63 = v83;
  v64 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v65 = v93;
  v64(v93, (char *)v47 + v52[6], v62);
  v66 = (char *)v54 + v52[6];
  v67 = v94;
  v64(v94, v66, v62);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v68 = sub_2293B8F00();
  v69 = *(void (**)(char *, uint64_t))(v63 + 8);
  v69(v67, v62);
  v69(v65, v62);
  return v68 & 1;
}

uint64_t sub_229399570(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  _QWORD *v68;
  char v69;
  char v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v99 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v98 = (char *)&v87 - v8;
  v103 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v103 - 8);
  v10 = MEMORY[0x24BDAC7A8](v103);
  v97 = (char **)((char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v101 = (char **)((char *)&v87 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char **)((char *)&v87 - v14);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v16 = MEMORY[0x24BDAC7A8](v104);
  v100 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v102 = (uint64_t)&v87 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v87 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8]((char *)&v87 - v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char **)((char *)&v87 - v30);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v87 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)&v87 - v41;
  v43 = a1;
  v44 = *a1;
  v45 = *a2;
  v46 = a2;
  if (*((_BYTE *)a2 + 8) == 1)
  {
    v47 = v43;
    if (v45)
    {
      if (v45 == 1)
      {
        if (v44 != 1)
          goto LABEL_41;
      }
      else if (v44 != 2)
      {
        goto LABEL_41;
      }
    }
    else if (v44)
    {
      goto LABEL_41;
    }
  }
  else
  {
    v47 = v43;
    if (v44 != v45)
      goto LABEL_41;
  }
  v95 = v37;
  v96 = v36;
  v92 = v4;
  v93 = (_QWORD *)v35;
  v90 = v40;
  v91 = v39;
  v88 = v5;
  v89 = (_QWORD *)v38;
  v48 = type metadata accessor for OwnershipChangeRequestMessage(0);
  v49 = *(int *)(v48 + 32);
  v94 = v47;
  sub_229324E44((uint64_t)v47 + v49, (uint64_t)v42, &qword_255A41F98);
  v50 = (int *)v48;
  sub_229324E44((uint64_t)v46 + *(int *)(v48 + 32), (uint64_t)v34, &qword_255A41F98);
  v51 = (uint64_t)&v21[*(int *)(v104 + 48)];
  sub_229324E44((uint64_t)v42, (uint64_t)v21, &qword_255A41F98);
  sub_229324E44((uint64_t)v34, v51, &qword_255A41F98);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v53 = v103;
  if (v52((uint64_t)v21, 1, v103) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    if (v52(v51, 1, v53) == 1)
    {
      sub_2293251F8((uint64_t)v21, &qword_255A41F98);
      goto LABEL_14;
    }
LABEL_25:
    v64 = &qword_255A44238;
    v65 = (uint64_t)v21;
LABEL_40:
    sub_2293251F8(v65, v64);
    goto LABEL_41;
  }
  sub_229324E44((uint64_t)v21, (uint64_t)v31, &qword_255A41F98);
  if (v52(v51, 1, v53) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    goto LABEL_25;
  }
  sub_22932EA14(v51, (uint64_t)v15, type metadata accessor for PBUUID);
  if (*v31 != *v15 || v31[1] != v15[1])
  {
    sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    v65 = (uint64_t)v21;
LABEL_31:
    v64 = &qword_255A41F98;
    goto LABEL_40;
  }
  v87 = (char *)v15 + *(int *)(v53 + 24);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v66 = sub_2293B8F00();
  sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v34, &qword_255A41F98);
  sub_2293251F8((uint64_t)v42, &qword_255A41F98);
  sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if ((v66 & 1) == 0)
    goto LABEL_41;
LABEL_14:
  v54 = v50;
  v55 = v50[9];
  v56 = v94;
  v57 = v96;
  sub_229324E44((uint64_t)v94 + v55, v96, &qword_255A41F98);
  v58 = v46;
  v59 = v95;
  sub_229324E44((uint64_t)v46 + v54[9], v95, &qword_255A41F98);
  v60 = v102;
  v61 = v102 + *(int *)(v104 + 48);
  sub_229324E44(v57, v102, &qword_255A41F98);
  sub_229324E44(v59, v61, &qword_255A41F98);
  if (v52(v60, 1, v53) == 1)
  {
    sub_2293251F8(v59, &qword_255A41F98);
    sub_2293251F8(v57, &qword_255A41F98);
    if (v52(v61, 1, v53) == 1)
    {
      sub_2293251F8(v60, &qword_255A41F98);
      goto LABEL_17;
    }
LABEL_34:
    v64 = &qword_255A44238;
    v65 = v60;
    goto LABEL_40;
  }
  v67 = v93;
  sub_229324E44(v60, (uint64_t)v93, &qword_255A41F98);
  if (v52(v61, 1, v53) == 1)
  {
    sub_2293251F8(v95, &qword_255A41F98);
    sub_2293251F8(v96, &qword_255A41F98);
    sub_22932E904((uint64_t)v67, type metadata accessor for PBUUID);
    goto LABEL_34;
  }
  v68 = v101;
  sub_22932EA14(v61, (uint64_t)v101, type metadata accessor for PBUUID);
  if (*v67 != *v68 || v67[1] != v68[1])
  {
    sub_22932E904((uint64_t)v68, type metadata accessor for PBUUID);
    sub_2293251F8(v95, &qword_255A41F98);
    sub_2293251F8(v96, &qword_255A41F98);
    sub_22932E904((uint64_t)v67, type metadata accessor for PBUUID);
    v65 = v60;
    v64 = &qword_255A41F98;
    goto LABEL_40;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v69 = sub_2293B8F00();
  sub_22932E904((uint64_t)v68, type metadata accessor for PBUUID);
  sub_2293251F8(v95, &qword_255A41F98);
  sub_2293251F8(v96, &qword_255A41F98);
  sub_22932E904((uint64_t)v67, type metadata accessor for PBUUID);
  sub_2293251F8(v60, &qword_255A41F98);
  if ((v69 & 1) == 0)
    goto LABEL_41;
LABEL_17:
  v62 = v56[2];
  v63 = v58[2];
  if (*((_BYTE *)v56 + 24))
    v62 = v62 != 0;
  if (*((_BYTE *)v58 + 24) == 1)
  {
    if (v63)
    {
      if (v62 != 1)
        goto LABEL_41;
    }
    else if (v62)
    {
      goto LABEL_41;
    }
  }
  else if (v62 != v63)
  {
    goto LABEL_41;
  }
  if (*((_DWORD *)v56 + 7) != *((_DWORD *)v58 + 7))
    goto LABEL_41;
  v72 = v91;
  sub_229324E44((uint64_t)v56 + v54[10], v91, &qword_255A41F98);
  v73 = v90;
  sub_229324E44((uint64_t)v58 + v54[10], v90, &qword_255A41F98);
  v74 = v100;
  v75 = v100 + *(int *)(v104 + 48);
  sub_229324E44(v72, v100, &qword_255A41F98);
  sub_229324E44(v73, v75, &qword_255A41F98);
  if (v52(v74, 1, v53) == 1)
  {
    sub_2293251F8(v73, &qword_255A41F98);
    v74 = v100;
    sub_2293251F8(v72, &qword_255A41F98);
    if (v52(v75, 1, v53) == 1)
    {
      sub_2293251F8(v74, &qword_255A41F98);
      v76 = v92;
LABEL_50:
      v77 = v88;
      v78 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
      v79 = v98;
      v78(v98, (char *)v56 + v54[7], v76);
      v80 = (char *)v58 + v54[7];
      v81 = v99;
      v78(v99, v80, v76);
      sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v70 = sub_2293B8F00();
      v82 = *(void (**)(char *, uint64_t))(v77 + 8);
      v82(v81, v76);
      v82(v79, v76);
      return v70 & 1;
    }
    goto LABEL_53;
  }
  v83 = v89;
  sub_229324E44(v74, (uint64_t)v89, &qword_255A41F98);
  if (v52(v75, 1, v53) == 1)
  {
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v83, type metadata accessor for PBUUID);
LABEL_53:
    v64 = &qword_255A44238;
    v65 = v74;
    goto LABEL_40;
  }
  v84 = v97;
  sub_22932EA14(v75, (uint64_t)v97, type metadata accessor for PBUUID);
  if (*v83 != *v84 || v83[1] != v84[1])
  {
    sub_22932E904((uint64_t)v84, type metadata accessor for PBUUID);
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v83, type metadata accessor for PBUUID);
    v65 = v100;
    goto LABEL_31;
  }
  v85 = (uint64_t)v83;
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v76 = v92;
  v86 = sub_2293B8F00();
  sub_22932E904((uint64_t)v84, type metadata accessor for PBUUID);
  sub_2293251F8(v90, &qword_255A41F98);
  sub_2293251F8(v91, &qword_255A41F98);
  sub_22932E904(v85, type metadata accessor for PBUUID);
  sub_2293251F8(v100, &qword_255A41F98);
  if ((v86 & 1) != 0)
    goto LABEL_50;
LABEL_41:
  v70 = 0;
  return v70 & 1;
}

uint64_t sub_22939A070(char *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t *v70;
  uint64_t v71;
  char v72;
  _QWORD *v73;
  _QWORD *v74;
  char v75;
  _QWORD *v76;
  _QWORD *v78;
  _QWORD *v79;
  char v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v94 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v82 - v8;
  v98 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v98 - 8);
  v10 = MEMORY[0x24BDAC7A8](v98);
  v92 = (char **)((char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v96 = (char **)((char *)&v82 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char **)((char *)&v82 - v14);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v16 = MEMORY[0x24BDAC7A8](v99);
  v95 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v97 = (uint64_t)&v82 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v82 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8]((char *)&v82 - v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char **)((char *)&v82 - v30);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v82 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)&v82 - v41;
  v43 = a1;
  v44 = *(_QWORD *)a1;
  v45 = *a2;
  v46 = a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    v47 = v43;
    if (v44 != v45)
      goto LABEL_43;
    goto LABEL_11;
  }
  v47 = v43;
  if (!v45)
  {
    if (!v44)
      goto LABEL_11;
LABEL_43:
    v68 = 0;
    return v68 & 1;
  }
  if (v45 != 1)
  {
    if (v44 == 2)
      goto LABEL_11;
    goto LABEL_43;
  }
  if (v44 != 1)
    goto LABEL_43;
LABEL_11:
  v90 = v37;
  v91 = v36;
  v87 = v4;
  v88 = (_QWORD *)v35;
  v85 = v40;
  v86 = v39;
  v83 = v5;
  v84 = (_QWORD *)v38;
  v48 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  sub_229324E44((uint64_t)&v47[*(int *)(v48 + 28)], (uint64_t)v42, &qword_255A41F98);
  v89 = (int *)v48;
  sub_229324E44((uint64_t)v46 + *(int *)(v48 + 28), (uint64_t)v34, &qword_255A41F98);
  v49 = (uint64_t)&v21[*(int *)(v99 + 48)];
  sub_229324E44((uint64_t)v42, (uint64_t)v21, &qword_255A41F98);
  sub_229324E44((uint64_t)v34, v49, &qword_255A41F98);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v51 = v98;
  if (v50((uint64_t)v21, 1, v98) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    if (v50(v49, 1, v51) == 1)
    {
      sub_2293251F8((uint64_t)v21, &qword_255A41F98);
      goto LABEL_14;
    }
LABEL_24:
    v70 = &qword_255A44238;
    v71 = (uint64_t)v21;
LABEL_42:
    sub_2293251F8(v71, v70);
    goto LABEL_43;
  }
  sub_229324E44((uint64_t)v21, (uint64_t)v31, &qword_255A41F98);
  if (v50(v49, 1, v51) == 1)
  {
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    goto LABEL_24;
  }
  sub_22932EA14(v49, (uint64_t)v15, type metadata accessor for PBUUID);
  if (*v31 != *v15 || v31[1] != v15[1])
  {
    sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v34, &qword_255A41F98);
    sub_2293251F8((uint64_t)v42, &qword_255A41F98);
    sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
    v71 = (uint64_t)v21;
LABEL_30:
    v70 = &qword_255A41F98;
    goto LABEL_42;
  }
  v82 = (char *)v15 + *(int *)(v51 + 24);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v72 = sub_2293B8F00();
  sub_22932E904((uint64_t)v15, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v34, &qword_255A41F98);
  sub_2293251F8((uint64_t)v42, &qword_255A41F98);
  sub_22932E904((uint64_t)v31, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if ((v72 & 1) == 0)
    goto LABEL_43;
LABEL_14:
  v52 = v89;
  v53 = v91;
  sub_229324E44((uint64_t)&v47[v89[8]], v91, &qword_255A41F98);
  v54 = v46;
  v55 = v90;
  sub_229324E44((uint64_t)v46 + v52[8], v90, &qword_255A41F98);
  v56 = v97;
  v57 = v97 + *(int *)(v99 + 48);
  sub_229324E44(v53, v97, &qword_255A41F98);
  sub_229324E44(v55, v57, &qword_255A41F98);
  if (v50(v56, 1, v51) == 1)
  {
    sub_2293251F8(v55, &qword_255A41F98);
    sub_2293251F8(v53, &qword_255A41F98);
    if (v50(v57, 1, v51) == 1)
    {
      sub_2293251F8(v56, &qword_255A41F98);
      goto LABEL_17;
    }
LABEL_33:
    v70 = &qword_255A44238;
    v71 = v56;
    goto LABEL_42;
  }
  v73 = v88;
  sub_229324E44(v56, (uint64_t)v88, &qword_255A41F98);
  if (v50(v57, 1, v51) == 1)
  {
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
    goto LABEL_33;
  }
  v74 = v96;
  sub_22932EA14(v57, (uint64_t)v96, type metadata accessor for PBUUID);
  if (*v73 != *v74 || v73[1] != v74[1])
  {
    sub_22932E904((uint64_t)v74, type metadata accessor for PBUUID);
    sub_2293251F8(v90, &qword_255A41F98);
    sub_2293251F8(v91, &qword_255A41F98);
    sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
    v71 = v56;
    v70 = &qword_255A41F98;
    goto LABEL_42;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v75 = sub_2293B8F00();
  sub_22932E904((uint64_t)v74, type metadata accessor for PBUUID);
  sub_2293251F8(v90, &qword_255A41F98);
  sub_2293251F8(v91, &qword_255A41F98);
  sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
  sub_2293251F8(v56, &qword_255A41F98);
  if ((v75 & 1) == 0)
    goto LABEL_43;
LABEL_17:
  if (v47[9] != *((_BYTE *)v54 + 9))
    goto LABEL_43;
  v58 = v86;
  sub_229324E44((uint64_t)&v47[v52[9]], v86, &qword_255A41F98);
  v59 = v85;
  sub_229324E44((uint64_t)v54 + v52[9], v85, &qword_255A41F98);
  v60 = v95;
  v61 = v95 + *(int *)(v99 + 48);
  sub_229324E44(v58, v95, &qword_255A41F98);
  sub_229324E44(v59, v61, &qword_255A41F98);
  if (v50(v60, 1, v51) == 1)
  {
    sub_2293251F8(v59, &qword_255A41F98);
    sub_2293251F8(v58, &qword_255A41F98);
    if (v50(v61, 1, v51) == 1)
    {
      sub_2293251F8(v60, &qword_255A41F98);
      v62 = v87;
      goto LABEL_21;
    }
    goto LABEL_41;
  }
  v76 = v84;
  sub_229324E44(v60, (uint64_t)v84, &qword_255A41F98);
  if (v50(v61, 1, v51) == 1)
  {
    sub_2293251F8(v85, &qword_255A41F98);
    sub_2293251F8(v86, &qword_255A41F98);
    sub_22932E904((uint64_t)v76, type metadata accessor for PBUUID);
LABEL_41:
    v70 = &qword_255A44238;
    v71 = v60;
    goto LABEL_42;
  }
  v78 = v92;
  sub_22932EA14(v61, (uint64_t)v92, type metadata accessor for PBUUID);
  if (*v76 != *v78 || v76[1] != v78[1])
  {
    sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
    sub_2293251F8(v85, &qword_255A41F98);
    sub_2293251F8(v86, &qword_255A41F98);
    sub_22932E904((uint64_t)v76, type metadata accessor for PBUUID);
    v71 = v60;
    goto LABEL_30;
  }
  v79 = v76;
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v62 = v87;
  v80 = sub_2293B8F00();
  sub_22932E904((uint64_t)v78, type metadata accessor for PBUUID);
  sub_2293251F8(v85, &qword_255A41F98);
  sub_2293251F8(v86, &qword_255A41F98);
  v81 = (uint64_t)v79;
  v52 = v89;
  sub_22932E904(v81, type metadata accessor for PBUUID);
  sub_2293251F8(v60, &qword_255A41F98);
  if ((v80 & 1) == 0)
    goto LABEL_43;
LABEL_21:
  v63 = v83;
  v64 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v65 = v93;
  v64(v93, &v47[v52[6]], v62);
  v66 = (char *)v54 + v52[6];
  v67 = v94;
  v64(v94, v66, v62);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v68 = sub_2293B8F00();
  v69 = *(void (**)(char *, uint64_t))(v63 + 8);
  v69(v67, v62);
  v69(v65, v62);
  return v68 & 1;
}

uint64_t sub_22939AB24(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  char v58;
  _QWORD *v59;
  _QWORD *v60;
  char v61;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)&v63 - v8;
  v74 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v74 - 8);
  v10 = MEMORY[0x24BDAC7A8](v74);
  v70 = (uint64_t *)((char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v63 - v12);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v14 = MEMORY[0x24BDAC7A8](v72);
  v71 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v63 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v63 - v23);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v63 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)&v63 - v31;
  v33 = *a1;
  v34 = *a2;
  v73 = a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    v35 = a1;
    if (v33 != v34)
      goto LABEL_38;
    goto LABEL_11;
  }
  if (!v34)
  {
    v35 = a1;
    if (!v33)
      goto LABEL_11;
LABEL_38:
    v54 = 0;
    return v54 & 1;
  }
  v35 = a1;
  if (v34 != 1)
  {
    if (v33 == 2)
      goto LABEL_11;
    goto LABEL_38;
  }
  if (v33 != 1)
    goto LABEL_38;
LABEL_11:
  v66 = v30;
  v67 = v29;
  v64 = v4;
  v65 = (_QWORD *)v28;
  v63 = v5;
  v36 = type metadata accessor for OwnershipChangeReplyMessage(0);
  sub_229324E44((uint64_t)v35 + *(int *)(v36 + 32), (uint64_t)v32, &qword_255A41F98);
  v37 = v36;
  sub_229324E44((uint64_t)v73 + *(int *)(v36 + 32), (uint64_t)v27, &qword_255A41F98);
  v38 = (uint64_t)&v17[*(int *)(v72 + 48)];
  sub_229324E44((uint64_t)v32, (uint64_t)v17, &qword_255A41F98);
  sub_229324E44((uint64_t)v27, v38, &qword_255A41F98);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v40 = v74;
  if (v39((uint64_t)v17, 1, v74) == 1)
  {
    sub_2293251F8((uint64_t)v27, &qword_255A41F98);
    sub_2293251F8((uint64_t)v32, &qword_255A41F98);
    if (v39(v38, 1, v74) == 1)
    {
      sub_2293251F8((uint64_t)v17, &qword_255A41F98);
      goto LABEL_14;
    }
LABEL_22:
    v56 = &qword_255A44238;
    v57 = (uint64_t)v17;
LABEL_37:
    sub_2293251F8(v57, v56);
    goto LABEL_38;
  }
  sub_229324E44((uint64_t)v17, (uint64_t)v24, &qword_255A41F98);
  if (v39(v38, 1, v40) == 1)
  {
    sub_2293251F8((uint64_t)v27, &qword_255A41F98);
    sub_2293251F8((uint64_t)v32, &qword_255A41F98);
    sub_22932E904((uint64_t)v24, type metadata accessor for PBUUID);
    goto LABEL_22;
  }
  sub_22932EA14(v38, (uint64_t)v13, type metadata accessor for PBUUID);
  if (*v24 != *v13 || v24[1] != v13[1])
  {
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v27, &qword_255A41F98);
    sub_2293251F8((uint64_t)v32, &qword_255A41F98);
    sub_22932E904((uint64_t)v24, type metadata accessor for PBUUID);
    v57 = (uint64_t)v17;
LABEL_36:
    v56 = &qword_255A41F98;
    goto LABEL_37;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v58 = sub_2293B8F00();
  sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v27, &qword_255A41F98);
  sub_2293251F8((uint64_t)v32, &qword_255A41F98);
  sub_22932E904((uint64_t)v24, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v17, &qword_255A41F98);
  if ((v58 & 1) == 0)
    goto LABEL_38;
LABEL_14:
  v41 = v37;
  v42 = v67;
  sub_229324E44((uint64_t)v35 + *(int *)(v37 + 36), v67, &qword_255A41F98);
  v43 = v73;
  v44 = v66;
  sub_229324E44((uint64_t)v73 + *(int *)(v37 + 36), v66, &qword_255A41F98);
  v45 = v71;
  v46 = v71 + *(int *)(v72 + 48);
  sub_229324E44(v42, v71, &qword_255A41F98);
  sub_229324E44(v44, v46, &qword_255A41F98);
  v47 = v74;
  if (v39(v45, 1, v74) == 1)
  {
    sub_2293251F8(v44, &qword_255A41F98);
    sub_2293251F8(v42, &qword_255A41F98);
    if (v39(v46, 1, v47) == 1)
    {
      sub_2293251F8(v45, &qword_255A41F98);
      goto LABEL_17;
    }
    goto LABEL_30;
  }
  v59 = v65;
  sub_229324E44(v45, (uint64_t)v65, &qword_255A41F98);
  if (v39(v46, 1, v47) == 1)
  {
    sub_2293251F8(v66, &qword_255A41F98);
    sub_2293251F8(v67, &qword_255A41F98);
    sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
LABEL_30:
    v56 = &qword_255A44238;
    v57 = v45;
    goto LABEL_37;
  }
  v60 = v70;
  sub_22932EA14(v46, (uint64_t)v70, type metadata accessor for PBUUID);
  if (*v59 != *v60 || v59[1] != v60[1])
  {
    sub_22932E904((uint64_t)v60, type metadata accessor for PBUUID);
    sub_2293251F8(v66, &qword_255A41F98);
    sub_2293251F8(v67, &qword_255A41F98);
    sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
    v57 = v45;
    goto LABEL_36;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v61 = sub_2293B8F00();
  sub_22932E904((uint64_t)v60, type metadata accessor for PBUUID);
  sub_2293251F8(v66, &qword_255A41F98);
  sub_2293251F8(v67, &qword_255A41F98);
  sub_22932E904((uint64_t)v59, type metadata accessor for PBUUID);
  sub_2293251F8(v45, &qword_255A41F98);
  if ((v61 & 1) == 0)
    goto LABEL_38;
LABEL_17:
  if (!sub_2293836D8(v35[2], *((unsigned __int8 *)v35 + 24), v43[2]) || *((_DWORD *)v35 + 7) != *((_DWORD *)v43 + 7))
    goto LABEL_38;
  v49 = v63;
  v48 = v64;
  v50 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v51 = v68;
  v50(v68, (char *)v35 + *(int *)(v41 + 28), v64);
  v52 = (char *)v43 + *(int *)(v41 + 28);
  v53 = v69;
  v50(v69, v52, v48);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v54 = sub_2293B8F00();
  v55 = *(void (**)(char *, uint64_t))(v49 + 8);
  v55(v53, v48);
  v55(v51, v48);
  return v54 & 1;
}

uint64_t sub_22939B320(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t *v49;
  _QWORD *v50;

  v4 = sub_2293B8B7C();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v43 - v7;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char **)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v50 = (char **)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v43 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v43 - v20;
  v22 = type metadata accessor for DictionaryChangedMessage(0);
  v23 = *(int *)(v22 + 56);
  v48 = a1;
  sub_229324E44((uint64_t)a1 + v23, (uint64_t)v21, &qword_255A41F98);
  v24 = *(int *)(v22 + 56);
  v49 = a2;
  sub_229324E44((uint64_t)a2 + v24, (uint64_t)v19, &qword_255A41F98);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_229324E44((uint64_t)v21, (uint64_t)v13, &qword_255A41F98);
  sub_229324E44((uint64_t)v19, v25, &qword_255A41F98);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    v37 = v50;
    sub_229324E44((uint64_t)v13, (uint64_t)v50, &qword_255A41F98);
    if (v26(v25, 1, v8) != 1)
    {
      v40 = v47;
      sub_22932EA14(v25, (uint64_t)v47, type metadata accessor for PBUUID);
      if (*v37 == *v40 && v37[1] == v40[1])
      {
        sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v41 = sub_2293B8F00();
        sub_22932E904((uint64_t)v40, type metadata accessor for PBUUID);
        sub_2293251F8((uint64_t)v19, &qword_255A41F98);
        sub_2293251F8((uint64_t)v21, &qword_255A41F98);
        sub_22932E904((uint64_t)v37, type metadata accessor for PBUUID);
        sub_2293251F8((uint64_t)v13, &qword_255A41F98);
        if ((v41 & 1) != 0)
          goto LABEL_4;
LABEL_23:
        v35 = 0;
        return v35 & 1;
      }
      sub_22932E904((uint64_t)v40, type metadata accessor for PBUUID);
      sub_2293251F8((uint64_t)v19, &qword_255A41F98);
      sub_2293251F8((uint64_t)v21, &qword_255A41F98);
      sub_22932E904((uint64_t)v37, type metadata accessor for PBUUID);
      v39 = (uint64_t)v13;
      v38 = &qword_255A41F98;
LABEL_22:
      sub_2293251F8(v39, v38);
      goto LABEL_23;
    }
    sub_2293251F8((uint64_t)v19, &qword_255A41F98);
    sub_2293251F8((uint64_t)v21, &qword_255A41F98);
    sub_22932E904((uint64_t)v37, type metadata accessor for PBUUID);
LABEL_16:
    v38 = &qword_255A44238;
    v39 = (uint64_t)v13;
    goto LABEL_22;
  }
  sub_2293251F8((uint64_t)v19, &qword_255A41F98);
  sub_2293251F8((uint64_t)v21, &qword_255A41F98);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_16;
  sub_2293251F8((uint64_t)v13, &qword_255A41F98);
LABEL_4:
  v27 = v48;
  v28 = v49;
  if (*(_DWORD *)v48 != *(_DWORD *)v49
    || (sub_229393888(v48[1], v49[1]) & 1) == 0
    || !sub_22939419C(v27[2], v28[2])
    || (sub_229393888(v27[3], v28[3]) & 1) == 0
    || (sub_229394208(v27[4], v28[4]) & 1) == 0
    || !sub_22939419C(v27[5], v28[5])
    || (sub_229393888(v27[6], v28[6]) & 1) == 0
    || (sub_229394208(v27[7], v28[7]) & 1) == 0
    || !sub_22939419C(v27[8], v28[8]))
  {
    goto LABEL_23;
  }
  v29 = (char *)v27 + *(int *)(v22 + 52);
  v31 = v45;
  v30 = v46;
  v32 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v33 = v43;
  v32(v43, v29, v46);
  v34 = v44;
  v32(v44, (char *)v28 + *(int *)(v22 + 52), v30);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v35 = sub_2293B8F00();
  v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v34, v30);
  v36(v33, v30);
  return v35 & 1;
}

uint64_t sub_22939B828(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2293B8B7C();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - v5;
  v70 = type metadata accessor for ValueData(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44298);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for PropertyChangedMessage(0);
  sub_229324E44((uint64_t)v73 + *(int *)(v30 + 24), (uint64_t)v29, &qword_255A41FA8);
  v72 = v30;
  sub_229324E44((uint64_t)v74 + *(int *)(v30 + 24), (uint64_t)v27, &qword_255A41FA8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_229324E44((uint64_t)v29, (uint64_t)v20, &qword_255A41FA8);
  sub_229324E44((uint64_t)v27, v31, &qword_255A41FA8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2293251F8((uint64_t)v27, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v29, &qword_255A41FA8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
      goto LABEL_9;
    }
LABEL_6:
    v33 = &qword_255A44290;
    v34 = (uint64_t)v20;
LABEL_7:
    sub_2293251F8(v34, v33);
    goto LABEL_18;
  }
  sub_229324E44((uint64_t)v20, (uint64_t)v24, &qword_255A41FA8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2293251F8((uint64_t)v27, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v29, &qword_255A41FA8);
    sub_22932E904((uint64_t)v24, type metadata accessor for LamportTimestamp);
    goto LABEL_6;
  }
  sub_22932EA14(v31, (uint64_t)v17, type metadata accessor for LamportTimestamp);
  v35 = sub_22939D77C(v24, v17);
  sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
  sub_2293251F8((uint64_t)v27, &qword_255A41FA8);
  sub_2293251F8((uint64_t)v29, &qword_255A41FA8);
  sub_22932E904((uint64_t)v24, type metadata accessor for LamportTimestamp);
  sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
  if ((v35 & 1) == 0)
    goto LABEL_18;
LABEL_9:
  v37 = v73;
  v36 = v74;
  if (*v73 != *v74)
    goto LABEL_18;
  v38 = v72;
  v39 = v69;
  sub_229324E44((uint64_t)v73 + *(int *)(v72 + 28), v69, &qword_255A41FB0);
  v40 = v68;
  sub_229324E44((uint64_t)v36 + *(int *)(v38 + 28), v68, &qword_255A41FB0);
  v41 = v71;
  v42 = v71 + *(int *)(v66 + 48);
  sub_229324E44(v39, v71, &qword_255A41FB0);
  sub_229324E44(v40, v42, &qword_255A41FB0);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v44 = v70;
  if (v43(v41, 1, v70) != 1)
  {
    v45 = v65;
    sub_229324E44(v41, (uint64_t)v65, &qword_255A41FB0);
    if (v43(v42, 1, v44) != 1)
    {
      v46 = v60;
      sub_22932EA14(v42, v60, type metadata accessor for ValueData);
      v47 = sub_22939CBEC(v45, v46);
      sub_22932E904(v46, type metadata accessor for ValueData);
      sub_2293251F8(v40, &qword_255A41FB0);
      sub_2293251F8(v39, &qword_255A41FB0);
      sub_22932E904((uint64_t)v45, type metadata accessor for ValueData);
      sub_2293251F8(v41, &qword_255A41FB0);
      if ((v47 & 1) != 0)
        goto LABEL_17;
LABEL_18:
      v56 = 0;
      return v56 & 1;
    }
    sub_2293251F8(v40, &qword_255A41FB0);
    sub_2293251F8(v39, &qword_255A41FB0);
    sub_22932E904((uint64_t)v45, type metadata accessor for ValueData);
    goto LABEL_15;
  }
  sub_2293251F8(v40, &qword_255A41FB0);
  sub_2293251F8(v39, &qword_255A41FB0);
  if (v43(v42, 1, v44) != 1)
  {
LABEL_15:
    v33 = &qword_255A44298;
    v34 = v41;
    goto LABEL_7;
  }
  sub_2293251F8(v41, &qword_255A41FB0);
LABEL_17:
  v48 = v72;
  v49 = (char *)v37 + *(int *)(v72 + 20);
  v51 = v63;
  v50 = v64;
  v52 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v53 = v61;
  v52(v61, v49, v64);
  v54 = (char *)v36 + *(int *)(v48 + 20);
  v55 = v62;
  v52(v62, v54, v50);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v56 = sub_2293B8F00();
  v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v55, v50);
  v57(v53, v50);
  return v56 & 1;
}

uint64_t sub_22939BEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_229396E84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  if ((v11 & 1) != 0
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20)
    && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
  {
    v14 = type metadata accessor for CatchupResponseMessage(0);
    v15 = a1 + *(int *)(v14 + 32);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v10, v15, v4);
    v16(v8, a2 + *(int *)(v14 + 32), v4);
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v12 = sub_2293B8F00();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_22939C020(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_229393888(*a1, *a2) & 1) != 0
    && (sub_229394208(a1[1], a2[1]) & 1) != 0
    && (sub_229394344(a1[2], a2[2]) & 1) != 0
    && (sub_229394788(a1[3], a2[3]) & 1) != 0)
  {
    v11 = type metadata accessor for DictionaryCatchupData(0);
    v12 = (char *)a1 + *(int *)(v11 + 32);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, (char *)a2 + *(int *)(v11 + 32), v4);
    sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2293B8F00();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_22939C184(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char *v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2293B8B7C();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v45 - v8;
  v10 = type metadata accessor for LamportTimestamp(0);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  sub_229396E84(*a1, a1[1]);
  if ((v25 & 1) == 0)
    goto LABEL_8;
  v47 = v7;
  v48 = v19;
  v45 = v12;
  v46 = v9;
  v26 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
  sub_229324E44((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v24, &qword_255A41FA8);
  sub_229324E44(a2 + *(int *)(v26 + 24), (uint64_t)v22, &qword_255A41FA8);
  v27 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_229324E44((uint64_t)v24, (uint64_t)v15, &qword_255A41FA8);
  sub_229324E44((uint64_t)v22, v27, &qword_255A41FA8);
  v28 = v52;
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v30 = a2;
  v31 = v26;
  if (v29((uint64_t)v15, 1, v52) == 1)
  {
    sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v24, &qword_255A41FA8);
    if (v29(v27, 1, v28) == 1)
    {
      sub_2293251F8((uint64_t)v15, &qword_255A41FA8);
LABEL_11:
      v37 = (char *)a1 + *(int *)(v31 + 20);
      v39 = v49;
      v38 = v50;
      v40 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      v41 = v46;
      v40(v46, v37, v50);
      v42 = (char *)(v30 + *(int *)(v31 + 20));
      v43 = v47;
      v40(v47, v42, v38);
      sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v33 = sub_2293B8F00();
      v44 = *(void (**)(char *, uint64_t))(v39 + 8);
      v44(v43, v38);
      v44(v41, v38);
      return v33 & 1;
    }
    goto LABEL_7;
  }
  v32 = v48;
  sub_229324E44((uint64_t)v15, (uint64_t)v48, &qword_255A41FA8);
  if (v29(v27, 1, v28) == 1)
  {
    sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v24, &qword_255A41FA8);
    sub_22932E904((uint64_t)v32, type metadata accessor for LamportTimestamp);
LABEL_7:
    sub_2293251F8((uint64_t)v15, &qword_255A44290);
    goto LABEL_8;
  }
  v35 = v45;
  sub_22932EA14(v27, (uint64_t)v45, type metadata accessor for LamportTimestamp);
  v36 = sub_22939D77C(v32, v35);
  sub_22932E904((uint64_t)v35, type metadata accessor for LamportTimestamp);
  sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
  sub_2293251F8((uint64_t)v24, &qword_255A41FA8);
  sub_22932E904((uint64_t)v32, type metadata accessor for LamportTimestamp);
  sub_2293251F8((uint64_t)v15, &qword_255A41FA8);
  if ((v36 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v33 = 0;
  return v33 & 1;
}

uint64_t sub_22939C574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char v45;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a1;
  v68 = a2;
  v2 = sub_2293B8B7C();
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v55 - v5;
  v65 = type metadata accessor for LamportTimestamp(0);
  v62 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v55 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v61);
  v66 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v55 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v64 = (uint64_t)&v55 - v13;
  v14 = type metadata accessor for ValueData(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44298);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v55 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v55 - v28;
  v30 = type metadata accessor for PropertyCatchupData(0);
  sub_229324E44(v67 + *(int *)(v30 + 20), (uint64_t)v29, &qword_255A41FB0);
  sub_229324E44(v68 + *(int *)(v30 + 20), (uint64_t)v27, &qword_255A41FB0);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_229324E44((uint64_t)v29, (uint64_t)v20, &qword_255A41FB0);
  sub_229324E44((uint64_t)v27, v31, &qword_255A41FB0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) != 1)
  {
    sub_229324E44((uint64_t)v20, (uint64_t)v24, &qword_255A41FB0);
    if (v32(v31, 1, v14) != 1)
    {
      sub_22932EA14(v31, (uint64_t)v17, type metadata accessor for ValueData);
      v35 = sub_22939CBEC(v24, (uint64_t)v17);
      sub_22932E904((uint64_t)v17, type metadata accessor for ValueData);
      sub_2293251F8((uint64_t)v27, &qword_255A41FB0);
      sub_2293251F8((uint64_t)v29, &qword_255A41FB0);
      sub_22932E904((uint64_t)v24, type metadata accessor for ValueData);
      sub_2293251F8((uint64_t)v20, &qword_255A41FB0);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2293251F8((uint64_t)v27, &qword_255A41FB0);
    sub_2293251F8((uint64_t)v29, &qword_255A41FB0);
    sub_22932E904((uint64_t)v24, type metadata accessor for ValueData);
LABEL_6:
    v33 = &qword_255A44298;
    v34 = (uint64_t)v20;
LABEL_14:
    sub_2293251F8(v34, v33);
    goto LABEL_15;
  }
  sub_2293251F8((uint64_t)v27, &qword_255A41FB0);
  sub_2293251F8((uint64_t)v29, &qword_255A41FB0);
  if (v32(v31, 1, v14) != 1)
    goto LABEL_6;
  sub_2293251F8((uint64_t)v20, &qword_255A41FB0);
LABEL_8:
  v36 = v67;
  v37 = v64;
  sub_229324E44(v67 + *(int *)(v30 + 24), v64, &qword_255A41FA8);
  v38 = v68;
  v39 = v63;
  sub_229324E44(v68 + *(int *)(v30 + 24), v63, &qword_255A41FA8);
  v40 = v66;
  v41 = v66 + *(int *)(v61 + 48);
  sub_229324E44(v37, v66, &qword_255A41FA8);
  sub_229324E44(v39, v41, &qword_255A41FA8);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v43 = v65;
  if (v42(v40, 1, v65) == 1)
  {
    sub_2293251F8(v39, &qword_255A41FA8);
    sub_2293251F8(v37, &qword_255A41FA8);
    if (v42(v41, 1, v43) == 1)
    {
      sub_2293251F8(v40, &qword_255A41FA8);
LABEL_18:
      v50 = v58;
      v49 = v59;
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
      v52 = v56;
      v51(v56, v36, v59);
      v53 = v57;
      v51(v57, v38, v49);
      sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v45 = sub_2293B8F00();
      v54 = *(void (**)(char *, uint64_t))(v50 + 8);
      v54(v53, v49);
      v54(v52, v49);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  v44 = v60;
  sub_229324E44(v40, (uint64_t)v60, &qword_255A41FA8);
  if (v42(v41, 1, v43) == 1)
  {
    sub_2293251F8(v39, &qword_255A41FA8);
    sub_2293251F8(v37, &qword_255A41FA8);
    sub_22932E904((uint64_t)v44, type metadata accessor for LamportTimestamp);
LABEL_13:
    v33 = &qword_255A44290;
    v34 = v40;
    goto LABEL_14;
  }
  v47 = v55;
  sub_22932EA14(v41, (uint64_t)v55, type metadata accessor for LamportTimestamp);
  v48 = sub_22939D77C(v44, v47);
  sub_22932E904((uint64_t)v47, type metadata accessor for LamportTimestamp);
  sub_2293251F8(v39, &qword_255A41FA8);
  sub_2293251F8(v37, &qword_255A41FA8);
  sub_22932E904((uint64_t)v44, type metadata accessor for LamportTimestamp);
  sub_2293251F8(v40, &qword_255A41FA8);
  if ((v48 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_22939CBEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  _QWORD *v63;
  _QWORD *v65;
  char v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  _QWORD *v80;

  v72 = sub_2293B8B7C();
  v70 = *(_QWORD *)(v72 - 8);
  v4 = MEMORY[0x24BDAC7A8](v72);
  v69 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v68 = (char *)&v67 - v6;
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v67 = (_QWORD **)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v77 = (_QWORD **)((char *)&v67 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v74 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v67 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v71 = (_QWORD **)((char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v18);
  v75 = (uint64_t)&v67 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v73 = (uint64_t)&v67 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v80 = (_QWORD **)((char *)&v67 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v67 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v67 - v29;
  v31 = type metadata accessor for ValueData(0);
  v32 = *(int *)(v31 + 24);
  v78 = a1;
  v33 = (uint64_t)a1 + v32;
  v34 = v12;
  sub_229324E44(v33, (uint64_t)v30, &qword_255A41F98);
  v76 = v31;
  v35 = *(int *)(v31 + 24);
  v36 = v7;
  v79 = a2;
  sub_229324E44(a2 + v35, (uint64_t)v28, &qword_255A41F98);
  v37 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_229324E44((uint64_t)v30, (uint64_t)v16, &qword_255A41F98);
  sub_229324E44((uint64_t)v28, v37, &qword_255A41F98);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v38((uint64_t)v16, 1, v7) == 1)
  {
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    if (v38(v37, 1, v7) == 1)
    {
      sub_2293251F8((uint64_t)v16, &qword_255A41F98);
      goto LABEL_4;
    }
LABEL_11:
    v59 = &qword_255A44238;
    v60 = (uint64_t)v16;
LABEL_21:
    sub_2293251F8(v60, v59);
    goto LABEL_22;
  }
  v58 = v80;
  sub_229324E44((uint64_t)v16, (uint64_t)v80, &qword_255A41F98);
  if (v38(v37, 1, v36) == 1)
  {
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
    goto LABEL_11;
  }
  v61 = v77;
  sub_22932EA14(v37, (uint64_t)v77, type metadata accessor for PBUUID);
  if (*v58 != *v61 || v58[1] != v61[1])
  {
    sub_22932E904((uint64_t)v61, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v28, &qword_255A41F98);
    sub_2293251F8((uint64_t)v30, &qword_255A41F98);
    sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
    v60 = (uint64_t)v16;
LABEL_17:
    v59 = &qword_255A41F98;
    goto LABEL_21;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v62 = sub_2293B8F00();
  sub_22932E904((uint64_t)v61, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v28, &qword_255A41F98);
  sub_2293251F8((uint64_t)v30, &qword_255A41F98);
  sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v16, &qword_255A41F98);
  if ((v62 & 1) == 0)
    goto LABEL_22;
LABEL_4:
  v40 = v78;
  v39 = v79;
  sub_229396E84(*v78, v78[1]);
  if ((v41 & 1) == 0)
    goto LABEL_22;
  v42 = v76;
  v43 = v73;
  sub_229324E44((uint64_t)v40 + *(int *)(v76 + 28), v73, &qword_255A41F98);
  v44 = v75;
  sub_229324E44(v39 + *(int *)(v42 + 28), v75, &qword_255A41F98);
  v45 = *(int *)(v34 + 48);
  v46 = v74;
  v47 = v74 + v45;
  sub_229324E44(v43, v74, &qword_255A41F98);
  sub_229324E44(v44, v47, &qword_255A41F98);
  if (v38(v46, 1, v36) != 1)
  {
    v63 = v71;
    sub_229324E44(v46, (uint64_t)v71, &qword_255A41F98);
    if (v38(v47, 1, v36) == 1)
    {
      sub_2293251F8(v44, &qword_255A41F98);
      sub_2293251F8(v43, &qword_255A41F98);
      sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
      goto LABEL_20;
    }
    v65 = v67;
    sub_22932EA14(v47, (uint64_t)v67, type metadata accessor for PBUUID);
    if (*v63 == *v65 && v63[1] == v65[1])
    {
      sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v66 = sub_2293B8F00();
      sub_22932E904((uint64_t)v65, type metadata accessor for PBUUID);
      sub_2293251F8(v75, &qword_255A41F98);
      sub_2293251F8(v43, &qword_255A41F98);
      sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
      sub_2293251F8(v46, &qword_255A41F98);
      if ((v66 & 1) != 0)
        goto LABEL_8;
LABEL_22:
      v56 = 0;
      return v56 & 1;
    }
    sub_22932E904((uint64_t)v65, type metadata accessor for PBUUID);
    sub_2293251F8(v75, &qword_255A41F98);
    sub_2293251F8(v43, &qword_255A41F98);
    sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
    v60 = v46;
    goto LABEL_17;
  }
  sub_2293251F8(v44, &qword_255A41F98);
  sub_2293251F8(v43, &qword_255A41F98);
  if (v38(v47, 1, v36) != 1)
  {
LABEL_20:
    v59 = &qword_255A44238;
    v60 = v46;
    goto LABEL_21;
  }
  sub_2293251F8(v46, &qword_255A41F98);
LABEL_8:
  v48 = v76;
  v49 = (char *)v40 + *(int *)(v76 + 20);
  v50 = v70;
  v51 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v52 = v68;
  v53 = v72;
  v51(v68, v49, v72);
  v54 = (char *)(v39 + *(int *)(v48 + 20));
  v55 = v69;
  v51(v69, v54, v53);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v56 = sub_2293B8F00();
  v57 = *(void (**)(char *, uint64_t))(v50 + 8);
  v57(v55, v53);
  v57(v52, v53);
  return v56 & 1;
}

uint64_t sub_22939D374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_2293B8B7C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for SetChangedMessage(0);
  v24 = *(int *)(v23 + 32);
  v49 = a1;
  v25 = a1 + v24;
  v26 = v23;
  sub_229324E44(v25, (uint64_t)v22, &qword_255A41FA8);
  v27 = *(int *)(v26 + 32);
  v50 = a2;
  sub_229324E44(a2 + v27, (uint64_t)v20, &qword_255A41FA8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_229324E44((uint64_t)v22, (uint64_t)v13, &qword_255A41FA8);
  sub_229324E44((uint64_t)v20, v28, &qword_255A41FA8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_229324E44((uint64_t)v13, (uint64_t)v17, &qword_255A41FA8);
    if (v29(v28, 1, v8) != 1)
    {
      v30 = v48;
      sub_22932EA14(v28, (uint64_t)v48, type metadata accessor for LamportTimestamp);
      v31 = sub_22939D77C(v17, v30);
      sub_22932E904((uint64_t)v30, type metadata accessor for LamportTimestamp);
      sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
      sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
      sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
      sub_2293251F8((uint64_t)v13, &qword_255A41FA8);
      if ((v31 & 1) != 0)
        goto LABEL_8;
LABEL_12:
      v40 = 0;
      return v40 & 1;
    }
    sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
    sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
LABEL_6:
    sub_2293251F8((uint64_t)v13, &qword_255A44290);
    goto LABEL_12;
  }
  sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
  sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_2293251F8((uint64_t)v13, &qword_255A41FA8);
LABEL_8:
  v32 = v49;
  v33 = v50;
  if (*(_DWORD *)v49 != *(_DWORD *)v50
    || (sub_229394208(*(_QWORD *)(v49 + 8), *(_QWORD *)(v50 + 8)) & 1) == 0
    || (sub_229394208(*(_QWORD *)(v32 + 16), *(_QWORD *)(v33 + 16)) & 1) == 0)
  {
    goto LABEL_12;
  }
  v34 = v32 + *(int *)(v26 + 28);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, v33 + *(int *)(v26 + 28), v35);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2293B8F00();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t sub_22939D77C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  char v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD *v50;

  v4 = sub_2293B8B7C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v50 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for LamportTimestamp(0);
  v24 = *(int *)(v23 + 24);
  v48 = a1;
  v25 = (uint64_t)&a1[v24];
  v26 = v23;
  sub_229324E44(v25, (uint64_t)v22, &qword_255A41F98);
  v27 = *(int *)(v26 + 24);
  v49 = a2;
  sub_229324E44((uint64_t)&a2[v27], (uint64_t)v20, &qword_255A41F98);
  v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_229324E44((uint64_t)v22, (uint64_t)v14, &qword_255A41F98);
  sub_229324E44((uint64_t)v20, v28, &qword_255A41F98);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v14, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2293251F8((uint64_t)v14, &qword_255A41F98);
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  v38 = v50;
  sub_229324E44((uint64_t)v14, (uint64_t)v50, &qword_255A41F98);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v38, type metadata accessor for PBUUID);
LABEL_8:
    v39 = &qword_255A44238;
    v40 = (uint64_t)v14;
LABEL_14:
    sub_2293251F8(v40, v39);
    goto LABEL_15;
  }
  sub_22932EA14(v28, (uint64_t)v11, type metadata accessor for PBUUID);
  if (*v38 != *v11 || v38[1] != v11[1])
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v38, type metadata accessor for PBUUID);
    v40 = (uint64_t)v14;
    v39 = &qword_255A41F98;
    goto LABEL_14;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v41 = sub_2293B8F00();
  sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v20, &qword_255A41F98);
  sub_2293251F8((uint64_t)v22, &qword_255A41F98);
  sub_22932E904((uint64_t)v38, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v14, &qword_255A41F98);
  if ((v41 & 1) == 0)
    goto LABEL_15;
LABEL_4:
  v30 = v49;
  if (*(_DWORD *)v48 != *(_DWORD *)v49)
  {
LABEL_15:
    v36 = 0;
    return v36 & 1;
  }
  v32 = v46;
  v31 = v47;
  v33 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v34 = v44;
  v33(v44, &v48[*(int *)(v26 + 20)], v47);
  v35 = v45;
  v33(v45, &v30[*(int *)(v26 + 20)], v31);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v36 = sub_2293B8F00();
  v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  v37(v35, v31);
  v37(v34, v31);
  return v36 & 1;
}

uint64_t sub_22939DC0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  char *v50;

  v4 = sub_2293B8B7C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44290);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for SetCatchupData(0);
  v24 = *(int *)(v23 + 36);
  v48 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_229324E44(v25, (uint64_t)v22, &qword_255A41FA8);
  v27 = *(int *)(v26 + 36);
  v49 = a2;
  sub_229324E44((uint64_t)a2 + v27, (uint64_t)v20, &qword_255A41FA8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_229324E44((uint64_t)v22, (uint64_t)v13, &qword_255A41FA8);
  sub_229324E44((uint64_t)v20, v28, &qword_255A41FA8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    v30 = v50;
    sub_229324E44((uint64_t)v13, (uint64_t)v17, &qword_255A41FA8);
    if (v29(v28, 1, v8) != 1)
    {
      sub_22932EA14(v28, (uint64_t)v30, type metadata accessor for LamportTimestamp);
      v31 = sub_22939D77C(v17, v30);
      sub_22932E904((uint64_t)v30, type metadata accessor for LamportTimestamp);
      sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
      sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
      sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
      sub_2293251F8((uint64_t)v13, &qword_255A41FA8);
      if ((v31 & 1) != 0)
        goto LABEL_8;
LABEL_13:
      v40 = 0;
      return v40 & 1;
    }
    sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
    sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
    sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
LABEL_6:
    sub_2293251F8((uint64_t)v13, &qword_255A44290);
    goto LABEL_13;
  }
  sub_2293251F8((uint64_t)v20, &qword_255A41FA8);
  sub_2293251F8((uint64_t)v22, &qword_255A41FA8);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_2293251F8((uint64_t)v13, &qword_255A41FA8);
LABEL_8:
  v32 = v48;
  v33 = v49;
  if ((sub_229394208(*v48, *v49) & 1) == 0
    || (sub_229394344(v32[1], v33[1]) & 1) == 0
    || (sub_229394208(v32[2], v33[2]) & 1) == 0
    || (sub_229394344(v32[3], v33[3]) & 1) == 0)
  {
    goto LABEL_13;
  }
  v34 = (char *)v32 + *(int *)(v26 + 32);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, (char *)v33 + *(int *)(v26 + 32), v35);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2293B8F00();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t sub_22939E028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2293B8B7C();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44280);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255A42398);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_229324E44(a1, (uint64_t)&v36 - v20, qword_255A42398);
  v40 = a2;
  sub_229324E44(a2, (uint64_t)v19, qword_255A42398);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_229324E44((uint64_t)v21, (uint64_t)v12, qword_255A42398);
  sub_229324E44((uint64_t)v19, v22, qword_255A42398);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_229324E44((uint64_t)v12, (uint64_t)v16, qword_255A42398);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_22932EA14(v22, v37, type metadata accessor for SyncMessage.OneOf_Contents);
      sub_22939E914((uint64_t)v16, v24);
      v26 = v25;
      sub_22932E904(v24, type metadata accessor for SyncMessage.OneOf_Contents);
      sub_2293251F8((uint64_t)v19, qword_255A42398);
      sub_2293251F8((uint64_t)v21, qword_255A42398);
      sub_22932E904((uint64_t)v16, type metadata accessor for SyncMessage.OneOf_Contents);
      sub_2293251F8((uint64_t)v12, qword_255A42398);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2293251F8((uint64_t)v19, qword_255A42398);
    sub_2293251F8((uint64_t)v21, qword_255A42398);
    sub_22932E904((uint64_t)v16, type metadata accessor for SyncMessage.OneOf_Contents);
LABEL_6:
    sub_2293251F8((uint64_t)v12, &qword_255A44280);
    goto LABEL_9;
  }
  sub_2293251F8((uint64_t)v19, qword_255A42398);
  sub_2293251F8((uint64_t)v21, qword_255A42398);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2293251F8((uint64_t)v12, qword_255A42398);
LABEL_8:
  v27 = type metadata accessor for SyncMessage(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2293B8F00();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_22939E3F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;

  v4 = sub_2293B8B7C();
  v47 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v44 - v7;
  v8 = type metadata accessor for PBUUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44238);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  v49 = a1;
  v23 = *a1;
  v24 = (uint64_t *)a2;
  v25 = *(_QWORD *)a2;
  if (*(_BYTE *)(a2 + 8) != 1)
  {
    if (v23 != v25)
      goto LABEL_27;
    goto LABEL_11;
  }
  if (!v25)
  {
    if (!v23)
      goto LABEL_11;
LABEL_27:
    v37 = 0;
    return v37 & 1;
  }
  if (v25 != 1)
  {
    if (v23 == 2)
      goto LABEL_11;
    goto LABEL_27;
  }
  if (v23 != 1)
    goto LABEL_27;
LABEL_11:
  v44 = v4;
  v26 = type metadata accessor for SyncTransactionMessage(0);
  sub_229324E44((uint64_t)v49 + *(int *)(v26 + 36), (uint64_t)v22, &qword_255A41F98);
  sub_229324E44((uint64_t)v24 + *(int *)(v26 + 36), (uint64_t)v20, &qword_255A41F98);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_229324E44((uint64_t)v22, (uint64_t)v13, &qword_255A41F98);
  sub_229324E44((uint64_t)v20, v27, &qword_255A41F98);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v13, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    if (v28(v27, 1, v8) == 1)
    {
      sub_2293251F8((uint64_t)v13, &qword_255A41F98);
      goto LABEL_14;
    }
    goto LABEL_20;
  }
  sub_229324E44((uint64_t)v13, (uint64_t)v17, &qword_255A41F98);
  if (v28(v27, 1, v8) == 1)
  {
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v17, type metadata accessor for PBUUID);
LABEL_20:
    v39 = &qword_255A44238;
    v40 = (uint64_t)v13;
LABEL_26:
    sub_2293251F8(v40, v39);
    goto LABEL_27;
  }
  v41 = v48;
  sub_22932EA14(v27, (uint64_t)v48, type metadata accessor for PBUUID);
  if (*v17 != *v41 || v17[1] != v41[1])
  {
    sub_22932E904((uint64_t)v41, type metadata accessor for PBUUID);
    sub_2293251F8((uint64_t)v20, &qword_255A41F98);
    sub_2293251F8((uint64_t)v22, &qword_255A41F98);
    sub_22932E904((uint64_t)v17, type metadata accessor for PBUUID);
    v40 = (uint64_t)v13;
    v39 = &qword_255A41F98;
    goto LABEL_26;
  }
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v42 = sub_2293B8F00();
  sub_22932E904((uint64_t)v41, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v20, &qword_255A41F98);
  sub_2293251F8((uint64_t)v22, &qword_255A41F98);
  sub_22932E904((uint64_t)v17, type metadata accessor for PBUUID);
  sub_2293251F8((uint64_t)v13, &qword_255A41F98);
  if ((v42 & 1) == 0)
    goto LABEL_27;
LABEL_14:
  v29 = v49;
  if ((sub_229396958(v49[2], v24[2], type metadata accessor for PropertyChangedMessage, (uint64_t (*)(char *, char *))sub_22939B828) & 1) == 0|| (sub_229394E64(v29[3], v24[3]) & 1) == 0|| (sub_229396958(v29[4], v24[4], type metadata accessor for DictionaryChangedMessage, (uint64_t (*)(char *, char *))sub_22939B320) & 1) == 0)
  {
    goto LABEL_27;
  }
  v30 = (uint64_t)v29 + *(int *)(v26 + 32);
  v31 = v47;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v33 = v44;
  v34 = v45;
  v32(v45, v30, v44);
  v35 = (char *)v24 + *(int *)(v26 + 32);
  v36 = v46;
  v32(v46, (uint64_t)v35, v33);
  sub_229326FD0(&qword_255A44228, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v37 = sub_2293B8F00();
  v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v36, v33);
  v38(v34, v33);
  return v37 & 1;
}

void sub_22939E914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD v32[10];
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = type metadata accessor for OwnershipHandoffReplyMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  v32[8] = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OwnershipHandoffRequestMessage(0);
  MEMORY[0x24BDAC7A8](v4);
  v32[7] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OwnershipChangeBroadcastMessage(0);
  MEMORY[0x24BDAC7A8](v6);
  v32[6] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OwnershipChangeReplyMessage(0);
  MEMORY[0x24BDAC7A8](v8);
  v32[5] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OwnershipChangeRequestMessage(0);
  MEMORY[0x24BDAC7A8](v10);
  v32[4] = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CatchupResponseMessage(0);
  MEMORY[0x24BDAC7A8](v12);
  v32[2] = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CatchupRequestMessage(0);
  MEMORY[0x24BDAC7A8](v14);
  v32[3] = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SyncTransactionMessage(0);
  MEMORY[0x24BDAC7A8](v16);
  v32[1] = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SyncMessage.OneOf_Contents(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v32[9] = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  MEMORY[0x24BDAC7A8](v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A44288);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v32 + *(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_229324D74(v33, (uint64_t)v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SyncMessage.OneOf_Contents);
  sub_229324D74(v34, (uint64_t)v30, type metadata accessor for SyncMessage.OneOf_Contents);
  v31 = (char *)sub_22939EC88 + 4 * byte_2293BAE50[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22939EC88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_229324D74(v0, (uint64_t)v2, type metadata accessor for SyncMessage.OneOf_Contents);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22932E904((uint64_t)v2, type metadata accessor for SyncTransactionMessage);
    sub_2293251F8(v0, &qword_255A44288);
    v4 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v3 - 168);
    sub_22932EA14(v1, v5, type metadata accessor for SyncTransactionMessage);
    v4 = sub_22939E3F0(v2, v5);
    sub_22932E904(v5, type metadata accessor for SyncTransactionMessage);
    sub_22932E904((uint64_t)v2, type metadata accessor for SyncTransactionMessage);
    sub_22932E904(v0, type metadata accessor for SyncMessage.OneOf_Contents);
  }
  return v4 & 1;
}

unint64_t sub_22939F0B4()
{
  unint64_t result;

  result = qword_255A442A8;
  if (!qword_255A442A8)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BB0DC, &type metadata for SyncedModelType);
    atomic_store(result, (unint64_t *)&qword_255A442A8);
  }
  return result;
}

unint64_t sub_22939F0F8()
{
  unint64_t result;

  result = qword_255A442C8;
  if (!qword_255A442C8)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD424, &type metadata for OwnershipChangeType);
    atomic_store(result, (unint64_t *)&qword_255A442C8);
  }
  return result;
}

unint64_t sub_22939F13C()
{
  unint64_t result;

  result = qword_255A442D8;
  if (!qword_255A442D8)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD3DC, &type metadata for OwnershipChangeResultType);
    atomic_store(result, (unint64_t *)&qword_255A442D8);
  }
  return result;
}

uint64_t *sub_22939F180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _OWORD *__dst;
  void (*v44)(uint64_t *, uint64_t *, uint64_t);
  unsigned int (*v45)(_OWORD *, uint64_t, uint64_t);
  uint64_t v46;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2293B8B7C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ValueData(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v46 = v13;
      v16 = *v11;
      v17 = v11[1];
      sub_229324ECC(*v11, v17);
      *v10 = v16;
      v10[1] = v17;
      v8((_QWORD *)((char *)v10 + v12[5]), (uint64_t *)((char *)v11 + v12[5]), v7);
      v18 = v12[6];
      __dst = (_OWORD *)((char *)v10 + v18);
      v44 = v8;
      v19 = (_OWORD *)((char *)v11 + v18);
      v20 = type metadata accessor for PBUUID(0);
      v21 = *(_QWORD *)(v20 - 8);
      v45 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48);
      v42 = v21;
      if (v45(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v8 = v44;
      }
      else
      {
        *__dst = *v19;
        v23 = *(int *)(v20 + 24);
        v24 = (char *)v19 + v23;
        v8 = v44;
        v44((uint64_t *)((char *)__dst + v23), (uint64_t *)v24, v7);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (_OWORD *)((char *)v10 + v25);
      v27 = (_OWORD *)((char *)v11 + v25);
      if (v45(v27, 1, v20))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        *v26 = *v27;
        v8((uint64_t *)((char *)v26 + *(int *)(v20 + 24)), (uint64_t *)((char *)v27 + *(int *)(v20 + 24)), v7);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v20);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v46 + 56))(v10, 0, 1, v12);
    }
    v29 = *(int *)(a3 + 24);
    v30 = (_DWORD *)((char *)a1 + v29);
    v31 = (_DWORD *)((char *)a2 + v29);
    v32 = type metadata accessor for LamportTimestamp(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      *v30 = *v31;
      v8((uint64_t *)((char *)v30 + *(int *)(v32 + 20)), (uint64_t *)((char *)v31 + *(int *)(v32 + 20)), v7);
      v35 = *(int *)(v32 + 24);
      v36 = (_OWORD *)((char *)v30 + v35);
      v37 = (_OWORD *)((char *)v31 + v35);
      v38 = type metadata accessor for PBUUID(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        *v36 = *v37;
        v8((uint64_t *)((char *)v36 + *(int *)(v38 + 24)), (uint64_t *)((char *)v37 + *(int *)(v38 + 24)), v7);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
  }
  return a1;
}

uint64_t sub_22939F504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v4 = sub_2293B8B7C();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v16(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = (int *)type metadata accessor for ValueData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    sub_229324F6C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    v16(v5 + v6[5], v4);
    v7 = v5 + v6[6];
    v8 = type metadata accessor for PBUUID(0);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    if (!v9(v7, 1, v8))
      v16(v7 + *(int *)(v8 + 24), v4);
    v10 = v5 + v6[7];
    if (!v9(v10, 1, v8))
      v16(v10 + *(int *)(v8 + 24), v4);
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = type metadata accessor for LamportTimestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  if (!(_DWORD)result)
  {
    v16(v11 + *(int *)(v12 + 20), v4);
    v14 = v11 + *(int *)(v12 + 24);
    v15 = type metadata accessor for PBUUID(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v16)(v14 + *(int *)(v15 + 24), v4);
  }
  return result;
}

uint64_t sub_22939F6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v42)(_OWORD *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;

  v6 = sub_2293B8B7C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = (int *)type metadata accessor for ValueData(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v43 = v12;
    v44 = a3;
    v14 = *v10;
    v15 = v10[1];
    sub_229324ECC(*v10, v15);
    *v9 = v14;
    v9[1] = v15;
    v7((uint64_t)v9 + v11[5], (uint64_t)v10 + v11[5], v6);
    v16 = v11[6];
    v17 = (_OWORD *)((char *)v9 + v16);
    v41 = v7;
    v18 = (_OWORD *)((char *)v10 + v16);
    v19 = type metadata accessor for PBUUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    v42 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48);
    if (v42(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v7 = v41;
    }
    else
    {
      *v17 = *v18;
      v22 = *(int *)(v19 + 24);
      v23 = (char *)v18 + v22;
      v7 = v41;
      v41((uint64_t)v17 + v22, (uint64_t)v23, v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = v11[7];
    v25 = (_OWORD *)((char *)v9 + v24);
    v26 = (_OWORD *)((char *)v10 + v24);
    if (v42(v26, 1, v19))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v25 = *v26;
      v7((uint64_t)v25 + *(int *)(v19 + 24), (uint64_t)v26 + *(int *)(v19 + 24), v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);
    }
    a3 = v44;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v43 + 56))(v9, 0, 1, v11);
  }
  v28 = *(int *)(a3 + 24);
  v29 = (_DWORD *)(a1 + v28);
  v30 = (_DWORD *)(a2 + v28);
  v31 = type metadata accessor for LamportTimestamp(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    *v29 = *v30;
    v7((uint64_t)v29 + *(int *)(v31 + 20), (uint64_t)v30 + *(int *)(v31 + 20), v6);
    v34 = *(int *)(v31 + 24);
    v35 = (_OWORD *)((char *)v29 + v34);
    v36 = (_OWORD *)((char *)v30 + v34);
    v37 = type metadata accessor for PBUUID(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v35 = *v36;
      v7((uint64_t)v35 + *(int *)(v37 + 24), (uint64_t)v36 + *(int *)(v37 + 24), v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_22939FA18(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  void (*v77)(char *, char *, uint64_t);
  unsigned int (*v78)(_QWORD *, uint64_t, uint64_t);
  uint64_t v79;
  char *__src;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, char *, uint64_t);
  uint64_t v86;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  v85 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 24);
  v85(a1, a2, v6);
  v86 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)&a2[v8];
  v11 = (int *)type metadata accessor for ValueData(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_22932E904((uint64_t)v9, type metadata accessor for ValueData);
      goto LABEL_7;
    }
    v82 = a1;
    v84 = v7;
    v29 = *v10;
    v30 = v10[1];
    sub_229324ECC(*v10, v30);
    v31 = *v9;
    v32 = v9[1];
    *v9 = v29;
    v9[1] = v30;
    sub_229324F6C(v31, v32);
    v85((uint64_t)v9 + v11[5], (char *)v10 + v11[5], v6);
    v33 = v11[6];
    v34 = (char *)v9 + v33;
    v35 = (char *)v10 + v33;
    v36 = type metadata accessor for PBUUID(0);
    v79 = *(_QWORD *)(v36 - 8);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
    v38 = v37(v34, 1, v36);
    v39 = v37(v35, 1, v36);
    if (v38)
    {
      if (!v39)
      {
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v34, 0, 1, v36);
LABEL_34:
        a1 = v82;
        v72 = v11[7];
        v73 = (char *)v9 + v72;
        v74 = (char *)v10 + v72;
        v75 = v37(v73, 1, v36);
        v76 = v37(v74, 1, v36);
        if (v75)
        {
          v7 = v84;
          if (!v76)
          {
            *(_QWORD *)v73 = *(_QWORD *)v74;
            *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
            (*(void (**)(char *, char *, uint64_t))(v84 + 16))(&v73[*(int *)(v36 + 24)], &v74[*(int *)(v36 + 24)], v6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v73, 0, 1, v36);
            goto LABEL_17;
          }
        }
        else
        {
          v7 = v84;
          if (!v76)
          {
            *(_QWORD *)v73 = *(_QWORD *)v74;
            *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
            v85((uint64_t)&v73[*(int *)(v36 + 24)], &v74[*(int *)(v36 + 24)], v6);
            goto LABEL_17;
          }
          sub_22932E904((uint64_t)v73, type metadata accessor for PBUUID);
        }
        v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
        v27 = (uint64_t *)v73;
        v28 = (uint64_t *)v74;
LABEL_8:
        memcpy(v27, v28, v26);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v39)
      {
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
        v85((uint64_t)&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v6);
        goto LABEL_34;
      }
      sub_22932E904((uint64_t)v34, type metadata accessor for PBUUID);
    }
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_34;
  }
  if (v15)
  {
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0) - 8) + 64);
    v27 = v9;
    v28 = v10;
    goto LABEL_8;
  }
  __src = a2;
  v81 = a1;
  v16 = v7;
  v17 = *v10;
  v18 = v10[1];
  sub_229324ECC(*v10, v18);
  *v9 = v17;
  v9[1] = v18;
  v83 = v16;
  v19 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v19((char *)v9 + v11[5], (char *)v10 + v11[5], v6);
  v20 = v11[6];
  v21 = (uint64_t *)((char *)v9 + v20);
  v22 = (uint64_t *)((char *)v10 + v20);
  v23 = type metadata accessor for PBUUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  v78 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v77 = v19;
  if (v78(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v21[1] = v22[1];
    v19((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v40 = v11[7];
  v41 = (uint64_t *)((char *)v9 + v40);
  v42 = (uint64_t *)((char *)v10 + v40);
  a1 = v81;
  a2 = __src;
  if (v78(v42, 1, v23))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    *v41 = *v42;
    v41[1] = v42[1];
    v77((char *)v41 + *(int *)(v23 + 24), (char *)v42 + *(int *)(v23 + 24), v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  v7 = v83;
LABEL_17:
  v44 = *(int *)(v86 + 24);
  v45 = (char *)(a1 + v44);
  v46 = &a2[v44];
  v47 = type metadata accessor for LamportTimestamp(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (!v51)
    {
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v85((uint64_t)&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v6);
      v62 = *(int *)(v47 + 24);
      v63 = &v45[v62];
      v64 = &v46[v62];
      v65 = type metadata accessor for PBUUID(0);
      v66 = *(_QWORD *)(v65 - 8);
      v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
      v68 = v67(v63, 1, v65);
      v69 = v67(v64, 1, v65);
      if (v68)
      {
        if (!v69)
        {
          *(_QWORD *)v63 = *(_QWORD *)v64;
          *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
          return a1;
        }
      }
      else
      {
        if (!v69)
        {
          *(_QWORD *)v63 = *(_QWORD *)v64;
          *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
          v85((uint64_t)&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v6);
          return a1;
        }
        sub_22932E904((uint64_t)v63, type metadata accessor for PBUUID);
      }
      v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v60 = v63;
      v61 = v64;
      goto LABEL_24;
    }
    sub_22932E904((uint64_t)v45, type metadata accessor for LamportTimestamp);
LABEL_23:
    v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v60 = v45;
    v61 = v46;
LABEL_24:
    memcpy(v60, v61, v59);
    return a1;
  }
  if (v51)
    goto LABEL_23;
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v52 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v52(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v6);
  v53 = *(int *)(v47 + 24);
  v54 = &v45[v53];
  v55 = &v46[v53];
  v56 = type metadata accessor for PBUUID(0);
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
    v52(&v54[*(int *)(v56 + 24)], &v55[*(int *)(v56 + 24)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  return a1;
}

uint64_t sub_2293A0130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  _OWORD *__dst;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v41)(_OWORD *, uint64_t, uint64_t);
  uint64_t v42;

  v6 = sub_2293B8B7C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for ValueData(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v42 = a3;
    *v9 = *v10;
    v7((uint64_t)v9 + v11[5], (uint64_t)v10 + v11[5], v6);
    v14 = v11[6];
    __dst = (_OWORD *)((char *)v9 + v14);
    v40 = v7;
    v15 = (_OWORD *)((char *)v10 + v14);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    v41 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48);
    v38 = v17;
    if (v41(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v7 = v40;
    }
    else
    {
      *__dst = *v15;
      v19 = *(int *)(v16 + 24);
      v20 = (char *)v15 + v19;
      v7 = v40;
      v40((uint64_t)__dst + v19, (uint64_t)v20, v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v21 = v11[7];
    v22 = (_OWORD *)((char *)v9 + v21);
    v23 = (_OWORD *)((char *)v10 + v21);
    if (v41(v23, 1, v16))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v7((uint64_t)v22 + *(int *)(v16 + 24), (uint64_t)v23 + *(int *)(v16 + 24), v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v22, 0, 1, v16);
    }
    a3 = v42;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (_DWORD *)(a1 + v25);
  v27 = (_DWORD *)(a2 + v25);
  v28 = type metadata accessor for LamportTimestamp(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v7((uint64_t)v26 + *(int *)(v28 + 20), (uint64_t)v27 + *(int *)(v28 + 20), v6);
    v31 = *(int *)(v28 + 24);
    v32 = (_OWORD *)((char *)v26 + v31);
    v33 = (_OWORD *)((char *)v27 + v31);
    v34 = type metadata accessor for PBUUID(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      *v32 = *v33;
      v7((uint64_t)v32 + *(int *)(v34 + 24), (uint64_t)v33 + *(int *)(v34 + 24), v6);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

uint64_t sub_2293A047C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, int *);
  int v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _OWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  _OWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  size_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  void (*v72)(char *, char *, uint64_t);
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  char *__src;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  v80 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 40);
  v80(a1, a2, v6);
  v81 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for ValueData(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t *)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_22932E904((uint64_t)v9, type metadata accessor for ValueData);
      goto LABEL_7;
    }
    v77 = a1;
    v79 = v7;
    v26 = *v9;
    v27 = v9[1];
    *(_OWORD *)v9 = *(_OWORD *)v10;
    sub_229324F6C(v26, v27);
    v80((uint64_t)v9 + v11[5], &v10[v11[5]], v6);
    v28 = v11[6];
    v29 = (char *)v9 + v28;
    v30 = &v10[v28];
    v31 = type metadata accessor for PBUUID(0);
    v74 = *(_QWORD *)(v31 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
    v33 = v32(v29, 1, v31);
    v34 = v32(v30, 1, v31);
    if (v33)
    {
      if (!v34)
      {
        *(_OWORD *)v29 = *(_OWORD *)v30;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v29[*(int *)(v31 + 24)], &v30[*(int *)(v31 + 24)], v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v29, 0, 1, v31);
LABEL_34:
        a1 = v77;
        v67 = v11[7];
        v68 = (char *)v9 + v67;
        v69 = &v10[v67];
        v70 = v32(v68, 1, v31);
        v71 = v32(v69, 1, v31);
        if (v70)
        {
          v7 = v79;
          if (!v71)
          {
            *(_OWORD *)v68 = *(_OWORD *)v69;
            (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v68[*(int *)(v31 + 24)], &v69[*(int *)(v31 + 24)], v6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v68, 0, 1, v31);
            goto LABEL_17;
          }
        }
        else
        {
          v7 = v79;
          if (!v71)
          {
            *(_OWORD *)v68 = *(_OWORD *)v69;
            v80((uint64_t)&v68[*(int *)(v31 + 24)], &v69[*(int *)(v31 + 24)], v6);
            goto LABEL_17;
          }
          sub_22932E904((uint64_t)v68, type metadata accessor for PBUUID);
        }
        v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
        v24 = (uint64_t *)v68;
        v25 = v69;
LABEL_8:
        memcpy(v24, v25, v23);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v34)
      {
        *(_OWORD *)v29 = *(_OWORD *)v30;
        v80((uint64_t)&v29[*(int *)(v31 + 24)], &v30[*(int *)(v31 + 24)], v6);
        goto LABEL_34;
      }
      sub_22932E904((uint64_t)v29, type metadata accessor for PBUUID);
    }
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_34;
  }
  if (v15)
  {
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0) - 8) + 64);
    v24 = v9;
    v25 = v10;
    goto LABEL_8;
  }
  __src = a2;
  v76 = a1;
  v78 = v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16((char *)v9 + v11[5], &v10[v11[5]], v6);
  v17 = v11[6];
  v18 = (_OWORD *)((char *)v9 + v17);
  v19 = &v10[v17];
  v20 = type metadata accessor for PBUUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v72 = v16;
  if (v73(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *(_OWORD *)v19;
    v16((char *)v18 + *(int *)(v20 + 24), &v19[*(int *)(v20 + 24)], v6);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v35 = v11[7];
  v36 = (_OWORD *)((char *)v9 + v35);
  v37 = &v10[v35];
  a1 = v76;
  a2 = __src;
  if (v73(v37, 1, v20))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v36 = *(_OWORD *)v37;
    v72((char *)v36 + *(int *)(v20 + 24), &v37[*(int *)(v20 + 24)], v6);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v20);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  v7 = v78;
LABEL_17:
  v39 = *(int *)(v81 + 24);
  v40 = (char *)(a1 + v39);
  v41 = &a2[v39];
  v42 = type metadata accessor for LamportTimestamp(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (!v46)
    {
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v80((uint64_t)&v40[*(int *)(v42 + 20)], &v41[*(int *)(v42 + 20)], v6);
      v57 = *(int *)(v42 + 24);
      v58 = &v40[v57];
      v59 = &v41[v57];
      v60 = type metadata accessor for PBUUID(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v58, 1, v60);
      v64 = v62(v59, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          *(_OWORD *)v58 = *(_OWORD *)v59;
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v58[*(int *)(v60 + 24)], &v59[*(int *)(v60 + 24)], v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
          return a1;
        }
      }
      else
      {
        if (!v64)
        {
          *(_OWORD *)v58 = *(_OWORD *)v59;
          v80((uint64_t)&v58[*(int *)(v60 + 24)], &v59[*(int *)(v60 + 24)], v6);
          return a1;
        }
        sub_22932E904((uint64_t)v58, type metadata accessor for PBUUID);
      }
      v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v55 = v58;
      v56 = v59;
      goto LABEL_24;
    }
    sub_22932E904((uint64_t)v40, type metadata accessor for LamportTimestamp);
LABEL_23:
    v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v55 = v40;
    v56 = v41;
LABEL_24:
    memcpy(v55, v56, v54);
    return a1;
  }
  if (v46)
    goto LABEL_23;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v47 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v47(&v40[*(int *)(v42 + 20)], &v41[*(int *)(v42 + 20)], v6);
  v48 = *(int *)(v42 + 24);
  v49 = &v40[v48];
  v50 = &v41[v48];
  v51 = type metadata accessor for PBUUID(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    v47(&v49[*(int *)(v51 + 24)], &v50[*(int *)(v51 + 24)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t sub_2293A0B2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A0B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2293B8B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2293A0BD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A0BE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FB0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2293A0C8C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43DD0, (void (*)(uint64_t))type metadata accessor for ValueData);
    if (v1 <= 0x3F)
    {
      sub_22936CB40(319, &qword_255A43DC8, (void (*)(uint64_t))type metadata accessor for LamportTimestamp);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2293A0D4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2293B8B7C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_2293A0E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2293A0E7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_2293A0F1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_2293A0FD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_2293A1034(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2293A10D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A10DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_2293A1158()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2293A1164(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2293B8B7C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2293A11D8()
{
  return sub_2293A11F0();
}

uint64_t sub_2293A11F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2293A1260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_229324ECC(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2293B8B7C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 24);
    v15 = (_DWORD *)((char *)a1 + v14);
    v16 = (_DWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for LamportTimestamp(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v15 = *v16;
      v13((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v12);
      v21 = *(int *)(v17 + 24);
      v22 = (_OWORD *)((char *)v15 + v21);
      v23 = (_OWORD *)((char *)v16 + v21);
      v24 = type metadata accessor for PBUUID(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        *v22 = *v23;
        v13((char *)v22 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v12);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_2293A1430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  sub_229324F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for LamportTimestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v11(v6 + *(int *)(v7 + 20), v5);
    v9 = v6 + *(int *)(v7 + 24);
    v10 = type metadata accessor for PBUUID(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v10 + 24), v5);
  }
  return result;
}

uint64_t *sub_2293A1530(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B7C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v13 = *(int *)(a3 + 24);
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = (_DWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for LamportTimestamp(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
    v19 = *(int *)(v16 + 24);
    v20 = (_OWORD *)((char *)v14 + v19);
    v21 = (_OWORD *)((char *)v15 + v19);
    v22 = type metadata accessor for PBUUID(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      v12((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t *sub_2293A16D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;

  v6 = *a2;
  v7 = a2[1];
  sub_229324ECC(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_229324F6C(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2293B8B7C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for LamportTimestamp(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v12) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v12)
  {
    if (!v22)
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v15(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v13);
      v33 = *(int *)(v19 + 24);
      v34 = &v17[v33];
      v35 = &v18[v33];
      v36 = type metadata accessor for PBUUID(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
      v39 = v38(v34, 1, v36);
      v40 = v38(v35, 1, v36);
      if (v39)
      {
        if (!v40)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          return a1;
        }
      }
      else
      {
        if (!v40)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
          v15(&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v13);
          return a1;
        }
        sub_22932E904((uint64_t)v34, type metadata accessor for PBUUID);
      }
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v31 = v34;
      v32 = v35;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v17, type metadata accessor for LamportTimestamp);
LABEL_7:
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v31 = v17;
    v32 = v18;
LABEL_8:
    memcpy(v31, v32, v30);
    return a1;
  }
  if (v22)
    goto LABEL_7;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v23(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v13);
  v24 = *(int *)(v19 + 24);
  v25 = &v17[v24];
  v26 = &v18[v24];
  v27 = type metadata accessor for PBUUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v23(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

_OWORD *sub_2293A19BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    v17 = *(int *)(v14 + 24);
    v18 = (_OWORD *)((char *)v12 + v17);
    v19 = (_OWORD *)((char *)v13 + v17);
    v20 = type metadata accessor for PBUUID(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t *sub_2293A1B54(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_229324F6C(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2293B8B7C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for LamportTimestamp(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v10) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v10)
  {
    if (!v20)
    {
      *(_DWORD *)v15 = *(_DWORD *)v16;
      v13(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v11);
      v31 = *(int *)(v17 + 24);
      v32 = &v15[v31];
      v33 = &v16[v31];
      v34 = type metadata accessor for PBUUID(0);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v37 = v36(v32, 1, v34);
      v38 = v36(v33, 1, v34);
      if (v37)
      {
        if (!v38)
        {
          *(_OWORD *)v32 = *(_OWORD *)v33;
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          return a1;
        }
      }
      else
      {
        if (!v38)
        {
          *(_OWORD *)v32 = *(_OWORD *)v33;
          v13(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v11);
          return a1;
        }
        sub_22932E904((uint64_t)v32, type metadata accessor for PBUUID);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v29 = v32;
      v30 = v33;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v15, type metadata accessor for LamportTimestamp);
LABEL_7:
    v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v29 = v15;
    v30 = v16;
LABEL_8:
    memcpy(v29, v30, v28);
    return a1;
  }
  if (v20)
    goto LABEL_7;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v11);
  v22 = *(int *)(v17 + 24);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = type metadata accessor for PBUUID(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v21(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_2293A1E1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A1E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_255A41FA8);
}

uint64_t __swift_get_extra_inhabitant_index_15Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 12)
  {
    v5 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v5) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v5) & 0xC | (v5 >> 2));
    else
      return 0;
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_2293A1EE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2293A1EF0(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_255A41FA8);
}

char *__swift_store_extra_inhabitant_index_16Tm(char *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      v12 = v10;
      v13 = *(int *)(a4 + 20);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(&v6[v13], a2, a2, v12);
  }
  return result;
}

void sub_2293A1FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2293A4738(a1, a2, a3, (uint64_t)&unk_2293BAFA8, &qword_255A43DC8, (void (*)(uint64_t))type metadata accessor for LamportTimestamp);
}

uint64_t *sub_2293A1FCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    v9 = *(int *)(a3 + 32);
    v10 = (char *)a1 + v9;
    v26 = (char *)a2 + v9;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v26, v11);
    v13 = *(int *)(a3 + 36);
    v14 = (_DWORD *)((char *)v7 + v13);
    v15 = (_DWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for LamportTimestamp(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      v19 = *(int *)(v16 + 24);
      v20 = (_OWORD *)((char *)v14 + v19);
      v21 = (_OWORD *)((char *)v15 + v19);
      v22 = type metadata accessor for PBUUID(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *v20 = *v21;
        v12((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v11);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_2293A21C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + *(int *)(a2 + 36);
  v7 = type metadata accessor for LamportTimestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v11(v6 + *(int *)(v7 + 20), v5);
    v9 = v6 + *(int *)(v7 + 24);
    v10 = type metadata accessor for PBUUID(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v10 + 24), v5);
  }
  return result;
}

_QWORD *sub_2293A22DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a1 + v8;
  v25 = (char *)a2 + v8;
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v25, v10);
  v12 = *(int *)(a3 + 36);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = (_DWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    v18 = *(int *)(v15 + 24);
    v19 = (_OWORD *)((char *)v13 + v18);
    v20 = (_OWORD *)((char *)v14 + v18);
    v21 = type metadata accessor for PBUUID(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v11((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_2293A24A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 36);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
      v29 = *(int *)(v15 + 24);
      v30 = &v13[v29];
      v31 = &v14[v29];
      v32 = type metadata accessor for PBUUID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          v11(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v27 = v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v27 = v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v19(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
  v20 = *(int *)(v15 + 24);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = type metadata accessor for PBUUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    v19(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *sub_2293A27D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 36);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = (_DWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    v18 = *(int *)(v15 + 24);
    v19 = (_OWORD *)((char *)v13 + v18);
    v20 = (_OWORD *)((char *)v14 + v18);
    v21 = type metadata accessor for PBUUID(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v11((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_2293A296C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 36);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
      v29 = *(int *)(v15 + 24);
      v30 = &v13[v29];
      v31 = &v14[v29];
      v32 = type metadata accessor for PBUUID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          v11(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v27 = v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v27 = v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
  v20 = *(int *)(v15 + 24);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = type metadata accessor for PBUUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v19(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293A2C60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A2C6C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_2293A2D10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2293A2D1C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2293A2DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2293A2DDC(a1, a2, a3, MEMORY[0x24BEE0158] + 64, &qword_255A43DC8, (void (*)(uint64_t))type metadata accessor for LamportTimestamp);
}

void sub_2293A2DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v8;
  unint64_t v9;

  sub_2293B8B7C();
  if (v8 <= 0x3F)
  {
    sub_22936CB40(319, a5, a6);
    if (v9 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_2293A2E8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_OWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a3[7];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    v14 = (_OWORD *)((char *)v4 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v21 = a3[9];
    v22 = (_OWORD *)((char *)v4 + v21);
    v23 = (_OWORD *)((char *)a2 + v21);
    if (v18(v23, 1, v16))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v12((char *)v22 + *(int *)(v16 + 24), (char *)v23 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_2293A3054(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
    v11(v6 + *(int *)(v7 + 24), v5);
  v9 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_2293A3150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_OWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[7];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = a3[9];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  if (v17(v21, 1, v15))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    v11((char *)v20 + *(int *)(v15 + 24), (char *)v21 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_2293A32EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v27 = *(_QWORD *)(v9 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 24);
  v26(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  v26((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      *v20 = *(_QWORD *)v21;
      v20[1] = *((_QWORD *)v21 + 1);
      v26((uint64_t)v20 + *(int *)(v13 + 24), (uint64_t)&v21[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *v20 = *(_QWORD *)v21;
  v20[1] = *((_QWORD *)v21 + 1);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v20 + *(int *)(v13 + 24), &v21[*(int *)(v13 + 24)], v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

uint64_t sub_2293A3580(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 24), (char *)v20 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293A370C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v27 = *(_QWORD *)(v9 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
  v26(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for PBUUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v11[*(int *)(v13 + 24)], &v12[*(int *)(v13 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22932E904((uint64_t)v11, type metadata accessor for PBUUID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v26((uint64_t)&v11[*(int *)(v13 + 24)], (uint64_t)&v12[*(int *)(v13 + 24)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      *v20 = *(_OWORD *)v21;
      v26((uint64_t)v20 + *(int *)(v13 + 24), (uint64_t)&v21[*(int *)(v13 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v20, type metadata accessor for PBUUID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *v20 = *(_OWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v20 + *(int *)(v13 + 24), &v21[*(int *)(v13 + 24)], v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

uint64_t sub_2293A3970()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A397C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_31Tm(a1, a2, a3, &qword_255A41F98);
}

uint64_t sub_2293A3988()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A3994(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_32Tm(a1, a2, a3, a4, &qword_255A41F98);
}

void sub_2293A39A0()
{
  sub_2293A39C0();
}

void sub_2293A39C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_2293A3A5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[1];
    v8 = a2[2];
    sub_229324ECC(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2293B8B7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return v4;
}

uint64_t sub_2293A3B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_229324F6C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2293A3B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  sub_229324ECC(v6, v7);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_2293A3BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  sub_229324ECC(v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  sub_229324F6C(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_2293A3C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2293A3CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_229324F6C(v6, v7);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_2293A3D38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A3D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 16) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_2293B8B7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2293A3DCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A3DD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_2293B8B7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2293A3E54()
{
  return sub_2293A3E6C();
}

uint64_t sub_2293A3E6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2293A3ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (_OWORD *)((char *)v4 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_2293A4010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2293B8B7C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for PBUUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  return result;
}

_QWORD *sub_2293A40C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_2293A41D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *sub_2293A4358(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_2293A445C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2293B8B7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for PBUUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v12(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v10);
      return a1;
    }
    sub_22932E904((uint64_t)v14, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_2293A45C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A45CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2293A4670()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A467C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2293A471C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2293A4738(a1, a2, a3, (uint64_t)&unk_2293BD248, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
}

void sub_2293A4738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v8;
  unint64_t v9;

  sub_2293B8B7C();
  if (v8 <= 0x3F)
  {
    sub_22936CB40(319, a5, a6);
    if (v9 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for OwnershipChangeType()
{
  return &type metadata for OwnershipChangeType;
}

uint64_t *sub_2293A47E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  char *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    v21 = a2[8];
    v10 = *(int *)(a3 + 52);
    v22 = (char *)a2 + v10;
    v23 = (char *)a1 + v10;
    a1[7] = a2[7];
    a1[8] = v21;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v23, v22, v11);
    v13 = *(int *)(a3 + 56);
    v14 = (_OWORD *)((char *)v4 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for PBUUID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_2293A4990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_2293B8B7C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 56);
  v7 = type metadata accessor for PBUUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 24), v5);
  return result;
}

uint64_t sub_2293A4A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char *v20;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v18 = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 52);
  v19 = (char *)(a2 + v8);
  v20 = (char *)(a1 + v8);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v18;
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v20, v19, v9);
  v11 = *(int *)(a3 + 56);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293A4BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 52);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 56);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *v13 = *v14;
      v13[1] = v14[1];
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  v13[1] = v14[1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293A4E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 52);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 56);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for PBUUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293A4F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_OWORD *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 52);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 56);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for PBUUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *v13 = *v14;
      v11((uint64_t)v13 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v9);
      return a1;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for PBUUID);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v9);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293A5128()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A5134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 52);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2293A51D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A51E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2293B8B7C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 52);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2293A5284()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, qword_255A43778, (void (*)(uint64_t))type metadata accessor for PBUUID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_2293A5344(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2293B8B7C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 32);
    v14 = (_DWORD *)((char *)v4 + v13);
    v15 = (_DWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for LamportTimestamp(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      v20 = *(int *)(v16 + 24);
      v21 = (_OWORD *)((char *)v14 + v20);
      v22 = (_OWORD *)((char *)v15 + v20);
      v23 = type metadata accessor for PBUUID(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *v21 = *v22;
        v12((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v11);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_2293A5520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2293B8B7C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for LamportTimestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v11(v6 + *(int *)(v7 + 20), v5);
    v9 = v6 + *(int *)(v7 + 24);
    v10 = type metadata accessor for PBUUID(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v10 + 24), v5);
  }
  return result;
}

uint64_t sub_2293A5624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_2293B8B7C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 32);
  v13 = (_DWORD *)(a1 + v12);
  v14 = (_DWORD *)(a2 + v12);
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    v18 = *(int *)(v15 + 24);
    v19 = (_OWORD *)((char *)v13 + v18);
    v20 = (_OWORD *)((char *)v14 + v18);
    v21 = type metadata accessor for PBUUID(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v11((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v10);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_2293A57D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 32);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v11((uint64_t)&v13[*(int *)(v15 + 20)], (uint64_t)&v14[*(int *)(v15 + 20)], v9);
      v29 = *(int *)(v15 + 24);
      v30 = &v13[v29];
      v31 = &v14[v29];
      v32 = type metadata accessor for PBUUID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          v11((uint64_t)&v30[*(int *)(v32 + 24)], (uint64_t)&v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v27 = v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v27 = v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v19(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
  v20 = *(int *)(v15 + 24);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = type metadata accessor for PBUUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    v19(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293A5AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_2293B8B7C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 32);
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  v14 = type metadata accessor for LamportTimestamp(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    v17 = *(int *)(v14 + 24);
    v18 = (_OWORD *)((char *)v12 + v17);
    v19 = (_OWORD *)((char *)v13 + v17);
    v20 = type metadata accessor for PBUUID(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2293A5C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2293B8B7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 32);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for LamportTimestamp(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v11((uint64_t)&v13[*(int *)(v15 + 20)], (uint64_t)&v14[*(int *)(v15 + 20)], v9);
      v29 = *(int *)(v15 + 24);
      v30 = &v13[v29];
      v31 = &v14[v29];
      v32 = type metadata accessor for PBUUID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v30[*(int *)(v32 + 24)], &v31[*(int *)(v32 + 24)], v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          v11((uint64_t)&v30[*(int *)(v32 + 24)], (uint64_t)&v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_22932E904((uint64_t)v30, type metadata accessor for PBUUID);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98) - 8) + 64);
      v27 = v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_22932E904((uint64_t)v13, type metadata accessor for LamportTimestamp);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8) - 8) + 64);
    v27 = v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
  v20 = *(int *)(v15 + 24);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = type metadata accessor for PBUUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v19(&v21[*(int *)(v23 + 24)], &v22[*(int *)(v23 + 24)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2293A5F54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A5F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_31Tm(a1, a2, a3, &qword_255A41FA8);
}

uint64_t __swift_get_extra_inhabitant_index_31Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 28);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_2293A6010()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A601C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_32Tm(a1, a2, a3, a4, &qword_255A41FA8);
}

uint64_t __swift_store_extra_inhabitant_index_32Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v10 = sub_2293B8B7C();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      v12 = v10;
      v13 = *(int *)(a4 + 28);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6 + v13, a2, a2, v12);
  }
  return result;
}

void sub_2293A60D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2293B8B7C();
  if (v0 <= 0x3F)
  {
    sub_22936CB40(319, &qword_255A43DC8, (void (*)(uint64_t))type metadata accessor for LamportTimestamp);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for OwnershipChangeResultType()
{
  return &type metadata for OwnershipChangeResultType;
}

uint64_t sub_2293A6198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_2293A61D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2293A6208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2293A624C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2293A6290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2293A62D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2293A6318()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A6324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2293A6360()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2293A636C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2293B8B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2293A63AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2293B8B7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2293A6418()
{
  unint64_t result;

  result = qword_255A44978;
  if (!qword_255A44978)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD29C, &type metadata for OwnershipChangeResultType);
    atomic_store(result, (unint64_t *)&qword_255A44978);
  }
  return result;
}

unint64_t sub_2293A6460()
{
  unint64_t result;

  result = qword_255A44980;
  if (!qword_255A44980)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD33C, &type metadata for OwnershipChangeType);
    atomic_store(result, (unint64_t *)&qword_255A44980);
  }
  return result;
}

unint64_t sub_2293A64A8()
{
  unint64_t result;

  result = qword_255A44988;
  if (!qword_255A44988)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD2C4, &type metadata for OwnershipChangeResultType);
    atomic_store(result, (unint64_t *)&qword_255A44988);
  }
  return result;
}

unint64_t sub_2293A64F0()
{
  unint64_t result;

  result = qword_255A44990;
  if (!qword_255A44990)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD304, &type metadata for OwnershipChangeResultType);
    atomic_store(result, (unint64_t *)&qword_255A44990);
  }
  return result;
}

unint64_t sub_2293A6538()
{
  unint64_t result;

  result = qword_255A44998;
  if (!qword_255A44998)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD364, &type metadata for OwnershipChangeType);
    atomic_store(result, (unint64_t *)&qword_255A44998);
  }
  return result;
}

unint64_t sub_2293A6580()
{
  unint64_t result;

  result = qword_255A449A0;
  if (!qword_255A449A0)
  {
    result = MEMORY[0x22E2C85DC](&unk_2293BD3A4, &type metadata for OwnershipChangeType);
    atomic_store(result, (unint64_t *)&qword_255A449A0);
  }
  return result;
}

void sub_2293A65F4()
{
  type metadata accessor for SyncedDictionary.SyncedDictionaryChangeInfo();
}

uint64_t sub_2293A75A4(void (*a1)(int *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(int *);
  uint64_t v19;
  int v20;
  uint64_t v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v6 = type metadata accessor for LamportTimestamp(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_22936F988(0, v10, 0);
    v11 = v21;
    v12 = (int *)(a3 + 32);
    while (1)
    {
      v13 = *v12++;
      v20 = v13;
      v18(&v20);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_22936F988(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_22932EA14((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, type metadata accessor for LamportTimestamp);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_2293A76F8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v21 = a1;
  v22 = a2;
  v8 = type metadata accessor for LamportTimestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a3;
  v13 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
    return v14;
  v25 = MEMORY[0x24BEE4AF8];
  result = sub_22936F988(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v14 = v25;
    v15 = v23;
    if (a4 <= v23)
      v16 = v23;
    else
      v16 = a4;
    v20 = v16;
    while (a4 != v15)
    {
      v24 = v15;
      v21(&v24);
      if (v5)
      {
        swift_release();
        return v14;
      }
      v5 = 0;
      v25 = v14;
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_22936F988(v17 > 1, v18 + 1, 1);
        v14 = v25;
      }
      *(_QWORD *)(v14 + 16) = v18 + 1;
      result = sub_22932EA14((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, type metadata accessor for LamportTimestamp);
      if (a4 < v23)
        goto LABEL_19;
      if (v20 == v15)
        goto LABEL_20;
      if (a4 == ++v15)
        return v14;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2293A789C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F7473626D6F74 && a2 == 0xEA00000000007365 || (sub_2293B9350() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_2293B9350();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2293A7A10(char a1)
{
  if (!a1)
    return 0x616E6F6974636964;
  if (a1 == 1)
    return 0x6E6F7473626D6F74;
  return 0x6D617473656D6974;
}

uint64_t sub_2293A7A70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2293A7AA0 + 4 * byte_2293BD4F0[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_2293A7AA0()
{
  return 0x6D617473656D6974;
}

uint64_t sub_2293A7ABC()
{
  return 25705;
}

uint64_t sub_2293A7AC8()
{
  return 0x72656E776FLL;
}

void sub_2293A7AD8()
{
  type metadata accessor for SyncedDictionary.Element.CodingKeys();
}

uint64_t sub_2293A7B44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x22E2C85DC](&unk_2293BD978, a1);
  v3 = sub_2293B92F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_2293B944C();
  *(_BYTE *)(v2 - 144) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_2293B92E4();
  if (!v7)
  {
    *(_BYTE *)(v2 - 144) = 1;
    type metadata accessor for LamportTimestamp(0);
    sub_229326FD0(&qword_255A41F88, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA844);
    sub_2293B92E4();
    *(_BYTE *)(v2 - 144) = 2;
    sub_2293B8A20();
    sub_229326FD0(&qword_255A41F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_2293B92CC();
    *(_BYTE *)(v2 - 144) = 3;
    sub_2293B92CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_2293A7D48(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[8];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v27 = a2;
  v36 = a1;
  v24[2] = a9;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v24[3] = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v24[4] = (char *)v24 - v20;
  v25 = type metadata accessor for LamportTimestamp(0);
  v21 = MEMORY[0x24BDAC7A8](v25);
  v24[7] = (char *)v24 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v24 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a2;
  v29 = a3;
  v30 = a4;
  v31 = a5;
  v32 = a6;
  v33 = a7;
  v34 = a8;
  v35 = a10;
  type metadata accessor for SyncedDictionary.Element.CodingKeys();
}

void sub_2293A7E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x22E2C85DC](&unk_2293BD978, a1);
  v8 = sub_2293B92B4();
  *(_QWORD *)(v7 - 184) = v8;
  *(_QWORD *)(v7 - 224) = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v7 - 152) = *(_QWORD *)(v7 - 176);
  *(_QWORD *)(v7 - 144) = v4;
  *(_QWORD *)(v7 - 176) = v4;
  *(_QWORD *)(v7 - 136) = v1;
  *(_QWORD *)(v7 - 128) = v3;
  *(_QWORD *)(v7 - 120) = v2;
  *(_QWORD *)(v7 - 112) = v6;
  *(_QWORD *)(v7 - 192) = v6;
  v9 = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v7 - 104) = v5;
  *(_QWORD *)(v7 - 96) = v9;
  type metadata accessor for SyncedDictionary.Element();
}

uint64_t sub_2293A7F14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 168) = v2;
  v8 = *(_QWORD *)(v3 - 160);
  sub_2293B9434();
  if (v8)
    return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 72));
  v9 = *(_QWORD *)(v3 - 216);
  *(_QWORD *)(v3 - 264) = v5;
  v10 = *(_QWORD *)(v3 - 224);
  *(_QWORD *)(v3 - 160) = v7;
  *(_BYTE *)(v3 - 152) = 0;
  v11 = *(_QWORD *)(v3 - 200);
  v12 = *(_QWORD *)(v3 - 176);
  sub_2293B92A8();
  v13 = *(_QWORD *)(v3 - 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 232) + 32))(v13, v11, v12);
  *(_BYTE *)(v3 - 152) = 1;
  sub_229326FD0(&qword_255A41F78, type metadata accessor for LamportTimestamp, (uint64_t)&unk_2293BA86C);
  sub_2293B92A8();
  *(_QWORD *)(v3 - 192) = a1;
  sub_22932EA14(v9, v13 + *(int *)(a1 + 84), type metadata accessor for LamportTimestamp);
  sub_2293B8A20();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  *(_BYTE *)(v3 - 152) = 2;
  sub_229326FD0(&qword_255A41EF8, v14, MEMORY[0x24BDCEAA8]);
  v15 = *(_QWORD *)(v3 - 240);
  sub_2293B9290();
  v16 = v13;
  v17 = *(_QWORD *)(v3 - 192);
  sub_22932E9D0(v15, v16 + *(int *)(v17 + 88), &qword_255A41F70);
  *(_BYTE *)(v3 - 152) = 3;
  v18 = *(_QWORD *)(v3 - 248);
  sub_2293B9290();
  (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 184));
  sub_22932E9D0(v18, v16 + *(int *)(v17 + 92), &qword_255A41F70);
  v19 = *(_QWORD *)(v3 - 264);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 16))(*(_QWORD *)(v3 - 256), v16, v17);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 72));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v16, v17);
}

void sub_2293A8250(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SyncedDictionary.Element();
}

uint64_t sub_2293A82D4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22932EA14(v3, v4 + a1[21], type metadata accessor for LamportTimestamp);
  sub_22932E9D0(v2, v4 + a1[22], &qword_255A41F70);
  return sub_22932E9D0(v1, v4 + a1[23], &qword_255A41F70);
}

uint64_t sub_2293A8340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2C85DC](&unk_2293BD770, a3);
  return sub_2293B9374();
}

uint64_t sub_2293A8394(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BD770, a1);
  return sub_2293B8F54();
}

uint64_t sub_2293A83E0()
{
  MEMORY[0x22E2C85DC](&unk_2293BD770);
  return sub_2293B8F6C();
}

uint64_t sub_2293A8430()
{
  MEMORY[0x22E2C85DC](&unk_2293BD770);
  return sub_2293B8F60();
}

unint64_t sub_2293A8480@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229345728(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2293A84B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_229328BD8(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_2293A84E0()
{
  char *v0;

  return sub_2293A7A10(*v0);
}

uint64_t sub_2293A8500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2293A789C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2293A852C()
{
  unsigned __int8 *v0;

  return sub_229328BCC(*v0);
}

unint64_t sub_2293A8550@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_229345728(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2293A857C(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BD860, a1);
  return sub_2293B9458();
}

uint64_t sub_2293A85B0(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BD860, a1);
  return sub_2293B9464();
}

BOOL sub_2293A85E4(char *a1, char *a2)
{
  return sub_2293458EC(*a1, *a2);
}

uint64_t sub_2293A8624()
{
  return sub_229345920();
}

uint64_t sub_2293A8658()
{
  return sub_2293458FC();
}

uint64_t sub_2293A868C()
{
  sub_2293B93D4();
  sub_2293458FC();
  return sub_2293B93F8();
}

uint64_t sub_2293A86E0()
{
  unsigned __int8 *v0;

  return sub_2293A7A70(*v0);
}

uint64_t sub_2293A8714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_229328A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2293A8758@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22935038C();
  *a1 = result;
  return result;
}

uint64_t sub_2293A8790(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BD978, a1);
  return sub_2293B9458();
}

uint64_t sub_2293A87C4(uint64_t a1)
{
  MEMORY[0x22E2C85DC](&unk_2293BD978, a1);
  return sub_2293B9464();
}

void sub_2293A87F8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_2293A7D48(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9]);
}

void sub_2293A882C()
{
  sub_2293A7AD8();
}

void SyncedDictionary.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  SyncedDictionary.init(from:)(a1);
}

void SyncedDictionary.init(from:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[22];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v25[20] = a1;
  v2 = (_QWORD *)*v1;
  v34 = type metadata accessor for LamportTimestamp(0);
  v30 = *(_QWORD *)(v34 - 8);
  v3 = MEMORY[0x24BDAC7A8](v34);
  v25[4] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v25[5] = (char *)v25 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v25[15] = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v25[21] = (char *)v25 - v11;
  v26 = sub_2293B8A20();
  v28 = *(_QWORD *)(v26 - 8);
  v12 = MEMORY[0x24BDAC7A8](v26);
  v25[14] = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2[36];
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v32 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2293B9104();
  MEMORY[0x24BDAC7A8](v16);
  v31 = (char *)v25 - v17;
  v18 = v2[35];
  v20 = v2[37];
  v19 = v2[38];
  v21 = v2[39];
  v22 = v2[40];
  v25[10] = v2;
  v23 = v2[41];
  v24 = v2[42];
  v36 = v18;
  v37 = v14;
  v38 = v20;
  v39 = v19;
  v25[18] = v20;
  v35 = v19;
  v40 = v21;
  v41 = v22;
  v42 = v23;
  v43 = v24;
  v27 = v23;
  v25[19] = v24;
  type metadata accessor for SyncedDictionary.Element();
}

void type metadata accessor for SyncedDictionary.Element()
{
  JUMPOUT(0x22E2C857CLL);
}

void type metadata accessor for SyncedDictionary.CodingKeys()
{
  JUMPOUT(0x22E2C857CLL);
}

void SyncedDictionary.encode(to:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[28];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v23 = a1;
  v2 = (_QWORD *)*v1;
  v21 = type metadata accessor for LamportTimestamp(0);
  v20[27] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20[2] = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v20[21] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v20[20] = (char *)v20 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v20[15] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v22 = (char *)v20 - v11;
  v13 = v2[35];
  v12 = v2[36];
  v15 = v2[37];
  v14 = v2[38];
  v16 = v2[39];
  v17 = v2[40];
  v19 = v2[41];
  v18 = v2[42];
  v24 = v13;
  v25 = v12;
  v26 = v15;
  v27 = v14;
  v28 = v16;
  v29 = v17;
  v30 = v19;
  v31 = v18;
  type metadata accessor for SyncedDictionary.Element();
}

void SyncedDictionary.__allocating_init(wrappedValue:)()
{
  swift_allocObject();
  sub_2293B624C();
}

uint64_t sub_2293AAADC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void SyncedDictionary.init(wrappedValue:)()
{
  sub_2293B624C();
}

uint64_t sub_2293AAB0C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2293AAB28()
{
  type metadata accessor for SyncedDictionary.SyncedDictionaryChangeInfo();
}

uint64_t SyncedDictionary.wrappedValue.getter()
{
  sub_2293B6534();
  return swift_bridgeObjectRetain();
}

uint64_t SyncedDictionary.wrappedValue.setter()
{
  sub_2293B6578();
  return swift_bridgeObjectRelease();
}

void (*SyncedDictionary.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + qword_255A449D0);
  swift_beginAccess();
  v3[3] = *v4;
  swift_bridgeObjectRetain();
  return sub_2293ADCB4;
}

void sub_2293ADCB4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2293AAB28();
  }
  sub_2293AAB28();
}

uint64_t SyncedDictionary.projectedValue.getter()
{
  return swift_retain();
}

uint64_t sub_2293ADD1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_2293B8F90();
  v3 = sub_2293B8F90();
  result = sub_2293B8F90();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_2293ADD78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v5 + 280);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_229324D74(a2, (uint64_t)v9, type metadata accessor for LamportTimestamp);
  v13 = type metadata accessor for LamportTimestamp(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_2293B8EC4();
  sub_2293B8EDC();
  return swift_endAccess();
}

uint64_t sub_2293ADEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[4];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v73 = a2;
  v72 = a1;
  v3 = *v2;
  v70 = *(_QWORD *)(*v2 + 288);
  v4 = sub_2293B9104();
  v71 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v62 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v62 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v62 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v62 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v62 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)&v62 - v29;
  if ((*((_BYTE *)v2 + qword_255A449C8) & 1) != 0)
  {
    v66 = v28;
    v67 = v7;
    v63 = v27;
    v64 = v26;
    v65 = v10;
    v69 = v3;
    v32 = v72;
    v31 = v73;
    v33 = v71;
    v68 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
    v68(v13, v72, v4);
    v34 = v4;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v13, 1, v70) == 1)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v4);
      v35 = v31;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
      v35 = v31;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v44 = v75[2];
        ObjectType = swift_getObjectType();
        v46 = sub_2293410E0(ObjectType, v44) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
        swift_beginAccess();
        v47 = v34;
        v48 = sub_2293B8A20();
        v49 = *(_QWORD *)(v48 - 8);
        v50 = v63;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v63, v46, v48);
        swift_release();
        v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
        v51(v50, 0, 1, v48);
        v52 = (uint64_t)v65;
        v68(v65, v32, v47);
        v53 = v64;
        v51(v64, 1, 1, v48);
        v54 = v69;
        v75[0] = *(_QWORD *)(v69 + 320);
        MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AC0], v47, v75);
        v74 = *(_QWORD *)(v54 + 328);
        v55 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AA8], v47, &v74);
        sub_229353580(v50, v52, v53, v47, v55, v35);
        return swift_unknownObjectRelease();
      }
    }
    v57 = sub_2293B8A20();
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
    v58(v20, 1, 1, v57);
    v59 = (uint64_t)v67;
    v68(v67, v32, v34);
    v60 = v66;
    v58((char *)v66, 1, 1, v57);
    v61 = v69;
    v77 = *(_QWORD *)(v69 + 320);
    MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AC0], v34, &v77);
    v76 = *(_QWORD *)(v61 + 328);
    v38 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AA8], v34, &v76);
    v39 = v35;
    v40 = (uint64_t)v20;
    v41 = v59;
    v42 = v60;
    v43 = v34;
  }
  else
  {
    v36 = sub_2293B8A20();
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    v37(v30, 1, 1, v36);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v15, v72, v4);
    v37(v25, 1, 1, v36);
    v79 = *(_QWORD *)(v3 + 320);
    MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AC0], v4, &v79);
    v78 = *(_QWORD *)(v3 + 328);
    v38 = MEMORY[0x22E2C85DC](MEMORY[0x24BEE4AA8], v4, &v78);
    v39 = v73;
    v40 = (uint64_t)v30;
    v41 = (uint64_t)v15;
    v42 = (uint64_t)v25;
    v43 = v4;
  }
  return sub_229353580(v40, v41, v42, v43, v38, v39);
}

uint64_t sub_2293AE3B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v5 + 280);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_229324D74(a2, (uint64_t)v9, type metadata accessor for LamportTimestamp);
  v13 = type metadata accessor for LamportTimestamp(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_2293B8EC4();
  sub_2293B8EDC();
  swift_endAccess();
  swift_beginAccess();
  sub_2293B8E88();
  swift_endAccess();
  return sub_2293251F8((uint64_t)v9, &qword_255A41FA8);
}

uint64_t sub_2293AE558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 280);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = type metadata accessor for LamportTimestamp(255);
  sub_2293B8EC4();
  sub_2293B8E88();
  swift_endAccess();
  sub_2293251F8((uint64_t)v11, &qword_255A41FA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_229324D74(a2, (uint64_t)v11, type metadata accessor for LamportTimestamp);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  swift_beginAccess();
  sub_2293B8EDC();
  return swift_endAccess();
}

uint64_t sub_2293AE6F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];

  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 280);
  v6 = sub_2293B9104();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13[-1] - v7;
  if (qword_255A41AA0 != -1)
    swift_once();
  v9 = sub_2293B8FD8();
  v13[0] = *(_QWORD *)(v4 + 296);
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12D0], v9, v13);
  result = sub_2293B8948();
  if (!v2)
  {
    v12 = v13[2];
    MEMORY[0x22E2C85DC](MEMORY[0x24BEE12E0], v9);
    sub_2293B9074();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v5);
    if ((_DWORD)result == 1)
      __break(1u);
    else
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v5);
  }
  return result;
}

uint64_t sub_2293AE878@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void sub_2293AE888()
{
  type metadata accessor for SyncedDictionary.SyncedDictionaryChangeInfo();
}

uint64_t sub_2293B0E64(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v46 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for PBUUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2293B8A20();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v47 = v2;
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_6;
  }
  v44 = (char *)&v43 - v18;
  v20 = v19 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
  swift_beginAccess();
  sub_229324E44(v20, (uint64_t)v12, &qword_255A41F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_6:
    sub_2293251F8((uint64_t)v12, &qword_255A41F70);
    goto LABEL_7;
  }
  v21 = v44;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v44, v12, v13);
  v22 = type metadata accessor for DictionaryChangedMessage(0);
  sub_229324E44((uint64_t)a1 + *(int *)(v22 + 56), (uint64_t)v6, &qword_255A41F98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v45) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    sub_2293B8B70();
    sub_2293251F8((uint64_t)v6, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v6, (uint64_t)v9, type metadata accessor for PBUUID);
  }
  sub_229357288();
  sub_22932E904((uint64_t)v9, type metadata accessor for PBUUID);
  sub_229326FD0(&qword_255A42240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v35 = sub_2293B8F00();
  v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v17, v13);
  if ((v35 & 1) != 0)
  {
    v36(v21, v13);
LABEL_7:
    v48 = a1[6];
    swift_bridgeObjectRetain();
    v23 = swift_bridgeObjectRetain();
    sub_2293B5E4C(v23);
    v24 = v48;
    v48 = a1[7];
    swift_bridgeObjectRetain();
    v25 = swift_bridgeObjectRetain();
    sub_2293B5CE4(v25);
    v26 = v48;
    v48 = a1[8];
    swift_bridgeObjectRetain();
    v27 = swift_bridgeObjectRetain();
    v28 = sub_2293B5BA0(v27);
    v29 = v48;
    MEMORY[0x24BDAC7A8](v28);
    *(&v43 - 2) = (uint64_t)a1;
    v30 = sub_2293A75A4((void (*)(int *))sub_2293B8910, (uint64_t)(&v43 - 4), v29);
    v31 = swift_bridgeObjectRelease();
    v33 = a1[1];
    v32 = a1[2];
    MEMORY[0x24BDAC7A8](v31);
    *(&v43 - 2) = (uint64_t)a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = sub_2293A75A4((void (*)(int *))sub_2293B87F0, (uint64_t)(&v43 - 4), v32);
    swift_bridgeObjectRelease();
    v48 = v24;
    v49 = v26;
    v50 = v30;
    v51 = v33;
    v52 = v34;
    sub_2293AE888();
  }
  if (qword_255A41A88 != -1)
    swift_once();
  v37 = sub_2293B8D5C();
  __swift_project_value_buffer(v37, (uint64_t)qword_255A44C60);
  v38 = sub_2293B8D44();
  v39 = sub_2293B908C();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_22931B000, v38, v39, "SyncedDictionary: Cannot apply dictionary change message. Not the current owner or unowned", v40, 2u);
    v41 = v40;
    v21 = v44;
    MEMORY[0x22E2C869C](v41, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v36)(v21, v13);
}

uint64_t sub_2293B136C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  unint64_t *v31;
  void (*v32)(char *, uint64_t);
  uint64_t result;
  char *v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  unint64_t *v38;
  _DWORD *v39;

  v36 = a1;
  v39 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBUUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v38 = (unint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char **)((char *)&v34 - v11);
  v35 = sub_2293B8A20();
  v37 = *(_QWORD *)(v35 - 8);
  v13 = MEMORY[0x24BDAC7A8](v35);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v34 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v34 - v19;
  LODWORD(v36) = *v36;
  v21 = type metadata accessor for DictionaryChangedMessage(0);
  sub_229324E44(a2 + *(int *)(v21 + 56), (uint64_t)v6, &qword_255A41F98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    *v12 = 0;
    v12[1] = 0;
    sub_2293B8B70();
    sub_2293251F8((uint64_t)v6, &qword_255A41F98);
  }
  else
  {
    sub_22932EA14((uint64_t)v6, (uint64_t)v12, type metadata accessor for PBUUID);
  }
  sub_229357288();
  sub_22932E904((uint64_t)v12, type metadata accessor for PBUUID);
  v34 = v20;
  v22 = v39;
  *v39 = 0;
  v23 = type metadata accessor for LamportTimestamp(0);
  sub_2293B8B70();
  v24 = (uint64_t)v22 + *(int *)(v23 + 24);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v25(v24, 1, 1, v7);
  v26 = v7;
  v27 = v37;
  v28 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v29 = v20;
  v30 = v35;
  v28(v18, v29, v35);
  v28(v15, v18, v30);
  v31 = v38;
  sub_229357158((uint64_t)v15, v38);
  sub_2293251F8(v24, &qword_255A41F98);
  sub_22932EA14((uint64_t)v31, v24, type metadata accessor for PBUUID);
  v25(v24, 0, 1, v26);
  v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v32(v18, v30);
  result = ((uint64_t (*)(char *, uint64_t))v32)(v34, v30);
  *v22 = (_DWORD)v36;
  return result;
}

void sub_2293B1644(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t Strong;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _DWORD *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v4 = v3;
  v75 = a2;
  v7 = *v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v8);
  v69 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for LamportTimestamp(0);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v74 = (_DWORD *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = type metadata accessor for DictionaryCatchupData.TombstoneTimestamp(0);
  v11 = *(_QWORD **)(v70 - 8);
  v12 = MEMORY[0x24BDAC7A8](v70);
  v73 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v60 - v14);
  v16 = sub_2293B8B94();
  MEMORY[0x24BDAC7A8](v16);
  v17 = type metadata accessor for DictionaryCatchupData(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller))
  {
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v21 = *(_BYTE *)(Strong + OBJC_IVAR____TtC12SyncedModels18SyncedModelManager_options);
      swift_release();
      if ((v21 & 1) == 0)
      {
        v68 = v19;
        v67 = a3;
        if (qword_255A41A88 != -1)
          swift_once();
        v66 = v11;
        v22 = v4;
        v23 = sub_2293B8D5C();
        __swift_project_value_buffer(v23, (uint64_t)qword_255A44C60);
        v24 = sub_2293B8D44();
        v25 = sub_2293B90B0();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_22931B000, v24, v25, "SyncedDictionary: clearing existing data due to catchup response and replaceFromLeader option", v26, 2u);
          MEMORY[0x22E2C869C](v26, -1, -1);
        }

        swift_getTupleTypeMetadata2();
        sub_2293B8F90();
        v65 = *(_QWORD *)(v7 + 312);
        v27 = sub_2293B8E94();
        v28 = (_QWORD *)((char *)v22 + qword_255A449D0);
        swift_beginAccess();
        *v28 = v27;
        swift_bridgeObjectRelease();
        swift_getTupleTypeMetadata2();
        sub_2293B8F90();
        v29 = sub_2293B8E94();
        v30 = (_QWORD *)((char *)v22 + qword_255A449A8);
        swift_beginAccess();
        *v30 = v29;
        swift_bridgeObjectRelease();
        sub_2293B8F90();
        v4 = v22;
        v31 = sub_2293B8E94();
        v32 = (_QWORD *)((char *)v22 + qword_255A449B0);
        swift_beginAccess();
        *v32 = v31;
        swift_bridgeObjectRelease();
        a3 = v67;
        v19 = v68;
        v11 = v66;
      }
    }
  }
  v78 = 0;
  v76 = 0u;
  v77 = 0u;
  sub_229324ECC(a1, v75);
  sub_2293B8B88();
  sub_229326FD0(&qword_255A44008, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA84);
  sub_2293B8C60();
  v67 = a3;
  v33 = *v19;
  v34 = v19[1];
  v35 = v19[2];
  v36 = v19[3];
  v68 = v19;
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    v66 = v4;
    *(_QWORD *)&v76 = MEMORY[0x24BEE4AF8];
    v63 = v33;
    swift_bridgeObjectRetain();
    v64 = v34;
    swift_bridgeObjectRetain();
    v65 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22936F9B4(0, v37, 0);
    v38 = (*((unsigned __int8 *)v11 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v11 + 80);
    v62 = v36;
    v61 = v38;
    v39 = v36 + v38;
    v75 = v11[9];
    v40 = v76;
    do
    {
      sub_229324D74(v39, (uint64_t)v15, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
      v41 = *v15;
      v42 = v15[1];
      sub_229324ECC(*v15, v42);
      sub_22932E904((uint64_t)v15, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22936F9B4(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v76;
      }
      v44 = *(_QWORD *)(v40 + 16);
      v43 = *(_QWORD *)(v40 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_22936F9B4(v43 > 1, v44 + 1, 1);
        v40 = v76;
      }
      *(_QWORD *)(v40 + 16) = v44 + 1;
      v45 = v40 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v41;
      *(_QWORD *)(v45 + 40) = v42;
      v39 += v75;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    v46 = v68[3];
    v47 = *(_QWORD *)(v46 + 16);
    v48 = MEMORY[0x24BEE4AF8];
    if (v47)
    {
      *(_QWORD *)&v76 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_22936F988(0, v47, 0);
      v49 = v46 + v61;
      v50 = (uint64_t)v69;
      v51 = v71;
      do
      {
        v52 = v73;
        sub_229324D74(v49, v73, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
        sub_229324E44(v52 + *(int *)(v70 + 24), v50, &qword_255A41FA8);
        v53 = v72;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v72) == 1)
        {
          v54 = v74;
          *v74 = 0;
          sub_2293B8B70();
          v55 = (char *)v54 + *(int *)(v53 + 24);
          v56 = type metadata accessor for PBUUID(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 1, v56);
          sub_2293251F8(v50, &qword_255A41FA8);
        }
        else
        {
          sub_22932EA14(v50, (uint64_t)v74, type metadata accessor for LamportTimestamp);
        }
        sub_22932E904(v73, type metadata accessor for DictionaryCatchupData.TombstoneTimestamp);
        v48 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22936F988(0, *(_QWORD *)(v48 + 16) + 1, 1);
          v50 = (uint64_t)v69;
          v48 = v76;
        }
        v58 = *(_QWORD *)(v48 + 16);
        v57 = *(_QWORD *)(v48 + 24);
        if (v58 >= v57 >> 1)
        {
          sub_22936F988(v57 > 1, v58 + 1, 1);
          v50 = (uint64_t)v69;
          v48 = v76;
        }
        *(_QWORD *)(v48 + 16) = v58 + 1;
        v51 = v71;
        sub_22932EA14((uint64_t)v74, v48+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v71 + 72) * v58, type metadata accessor for LamportTimestamp);
        v49 += v75;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
    }
    v35 = v65;
    v34 = v64;
    v59 = v63;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = MEMORY[0x24BEE4AF8];
    v59 = v33;
    v48 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v76 = v59;
  *((_QWORD *)&v76 + 1) = v34;
  *(_QWORD *)&v77 = v35;
  *((_QWORD *)&v77 + 1) = v40;
  v78 = v48;
  sub_2293AE888();
}

uint64_t sub_2293B207C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t TupleTypeMetadata2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  int64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  BOOL v75;
  char *v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  unint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  void (*v111)(uint64_t, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  char *v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t ObjectType;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  int64_t v187;
  void (*v188)(uint64_t, char *, uint64_t);
  uint64_t *v189;
  uint64_t v190;
  uint64_t *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  _QWORD *v200;
  char *v201;
  _QWORD *v202;
  unint64_t v203;
  uint64_t v204;
  void (*v205)(char *, char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void (*v214)(char *, uint64_t);
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;

  v1 = (_QWORD *)*v0;
  v169 = type metadata accessor for DictionaryCatchupData(0);
  MEMORY[0x24BDAC7A8](v169);
  v3 = (uint64_t *)((char *)&v169 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v169 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v186 = (char *)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v198 = (uint64_t)&v169 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v177 = (char *)&v169 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v176 = (char *)&v169 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v175 = (uint64_t)&v169 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v174 = (char *)&v169 - v18;
  v19 = type metadata accessor for ValueData(0);
  v190 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v194 = (uint64_t)&v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v183 = (uint64_t)&v169 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v182 = (uint64_t)&v169 - v24;
  v26 = v1[35];
  v25 = v1[36];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v213 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v28 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v210 = (char *)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v192 = (char *)&v169 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v185 = (char *)&v169 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v173 = (char *)&v169 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v172 = (char *)&v169 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v184 = (char *)&v169 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v216 = (char *)&v169 - v40;
  v204 = v41;
  v42 = sub_2293B9104();
  MEMORY[0x24BDAC7A8](v42);
  v201 = (char *)&v169 - v43;
  v202 = v0;
  v44 = (_QWORD *)((char *)v0 + qword_255A449D0);
  swift_beginAccess();
  v200 = v1;
  v45 = v1[39];
  swift_bridgeObjectRetain();
  v217 = v26;
  v221 = v25;
  v195 = v45;
  v46 = sub_2293B8EAC();
  swift_bridgeObjectRelease();
  v47 = MEMORY[0x24BEE4AF8];
  v212 = sub_22936F1B0(0, v46 & ~(v46 >> 63), 0, MEMORY[0x24BEE4AF8]);
  v48 = sub_22936F19C(0, *(_QWORD *)(v212 + 16), 0, v47);
  v170 = v44;
  v49 = *v44;
  if ((*v44 & 0xC000000000000001) != 0)
  {
    v50 = sub_2293B920C();
    v178 = 0;
    v51 = 0;
    v52 = 0;
    v53 = v50 | 0x8000000000000000;
  }
  else
  {
    v54 = -1 << *(_BYTE *)(v49 + 32);
    v51 = ~v54;
    v55 = *(_QWORD *)(v49 + 64);
    v178 = v49 + 64;
    v56 = -v54;
    if (v56 < 64)
      v57 = ~(-1 << v56);
    else
      v57 = -1;
    v52 = v57 & v55;
    v53 = v49;
  }
  v197 = qword_255A449C8;
  v191 = (_QWORD *)((char *)v202 + qword_255A449B0);
  v179 = v53 & 0x7FFFFFFFFFFFFFFFLL;
  v171 = v51;
  v187 = (unint64_t)(v51 + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v59 = 0;
  v189 = v3;
  v60 = v204;
  v61 = v201;
  v62 = v216;
  v199 = v53;
  v193 = v6;
  while (1)
  {
    v203 = v52;
    v196 = v59;
    if ((v53 & 0x8000000000000000) == 0)
      break;
    if (!sub_2293B9218())
    {
      v158 = v48;
      goto LABEL_53;
    }
    v65 = v217;
    sub_2293B9344();
    swift_unknownObjectRelease();
    sub_2293B9344();
    swift_unknownObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v213 + 56))(v61, 0, 1, v60);
    v66 = *(_QWORD *)(v65 - 8);
    v208 = v59;
    v207 = v203;
    v62 = v216;
LABEL_23:
    v70 = *(int *)(v60 + 48);
    v71 = &v61[v70];
    v72 = v61;
    v73 = &v62[v70];
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v62, v72, v217);
    v74 = *(_QWORD *)(v221 - 8);
    (*(void (**)(char *, char *))(v74 + 32))(v73, v71);
    v75 = *((_BYTE *)v202 + v197) == 1;
    v211 = v48;
    v206 = v74;
    v209 = v73;
    if (!v75)
    {
      v101 = sub_2293B8A20();
      v102 = v217;
      v103 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56);
      v104 = v60;
      v105 = v73;
      v106 = v62;
      v107 = v104;
      v103(v198, 1, 1, v101);
      v108 = v185;
      v109 = (uint64_t)&v185[*(int *)(v107 + 48)];
      v214 = (void (*)(char *, uint64_t))v66;
      v110 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
      v110(v185, v106, v102);
      v111 = *(void (**)(uint64_t, char *, uint64_t))(v74 + 16);
      v111(v109, v105, v221);
      v112 = (uint64_t)v186;
      v103((uint64_t)v186, 1, 1, v101);
      v113 = v215;
      sub_229353580(v198, v109, v112, v221, v200[41], v194);
      v215 = v113;
      if (v113)
      {
        (*(void (**)(char *, uint64_t))(v213 + 8))(v216, v204);
        sub_22935007C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v214 + 1))(v108, v102);
        return v101;
      }
      v214 = (void (*)(char *, uint64_t))*((_QWORD *)v214 + 1);
      v214(v108, v102);
      v114 = v212;
      v116 = *(_QWORD *)(v212 + 16);
      v115 = *(_QWORD *)(v212 + 24);
      if (v116 >= v115 >> 1)
        v114 = sub_22936F1B0(v115 > 1, v116 + 1, 1, v212);
      v60 = v204;
      v98 = v110;
      v100 = (void (*)(char *, char *, uint64_t))v111;
      *(_QWORD *)(v114 + 16) = v116 + 1;
      v117 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
      v212 = v114;
      v118 = v114 + v117 + *(_QWORD *)(v190 + 72) * v116;
      v119 = (uint64_t *)&v220;
      goto LABEL_38;
    }
    v76 = v184;
    v77 = &v184[*(int *)(v60 + 48)];
    v205 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v205(v184, v62, v217);
    v78 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    v78(v77, v73, v221);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if (!swift_dynamicCast())
    {
      v120 = v73;
      v121 = *(void (**)(char *, uint64_t))(v66 + 8);
      v122 = v76;
      v123 = v217;
      v121(v122, v217);
      v101 = sub_2293B8A20();
      v124 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56);
      v125 = v60;
      v126 = (uint64_t)v176;
      v124(v176, 1, 1, v101);
      v127 = v173;
      v128 = (uint64_t)&v173[*(int *)(v125 + 48)];
      v205(v173, v216, v123);
      v129 = v120;
      v130 = v221;
      v78((char *)v128, v129, v221);
      v131 = (uint64_t)v177;
      v124(v177, 1, 1, v101);
      v132 = v215;
      sub_229353580(v126, v128, v131, v130, v200[41], v183);
      v215 = v132;
      if (v132)
      {
        (*(void (**)(char *, uint64_t))(v213 + 8))(v216, v204);
        sub_22935007C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v121(v127, v217);
        return v101;
      }
      v121(v127, v217);
      v133 = v212;
      v135 = *(_QWORD *)(v212 + 16);
      v134 = *(_QWORD *)(v212 + 24);
      if (v135 >= v134 >> 1)
        v133 = sub_22936F1B0(v134 > 1, v135 + 1, 1, v212);
      v60 = v204;
      v98 = v205;
      v100 = v78;
      v214 = v121;
      *(_QWORD *)(v133 + 16) = v135 + 1;
      v136 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
      v212 = v133;
      v118 = v133 + v136 + *(_QWORD *)(v190 + 72) * v135;
      v119 = &v215;
LABEL_38:
      sub_22932EA14(*(v119 - 32), v118, type metadata accessor for ValueData);
      goto LABEL_39;
    }
    v79 = v218;
    v80 = v219;
    v181 = v219;
    v214 = *(void (**)(char *, uint64_t))(v66 + 8);
    v214(v76, v217);
    ObjectType = swift_getObjectType();
    v81 = sub_2293410E0(ObjectType, v80);
    v188 = (void (*)(uint64_t, char *, uint64_t))v78;
    v82 = v81 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
    swift_beginAccess();
    v83 = sub_2293B8A20();
    v84 = *(_QWORD *)(v83 - 8);
    v85 = (uint64_t)v174;
    v86 = v82;
    v87 = v221;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v174, v86, v83);
    swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v83);
    v88 = v172;
    v89 = (uint64_t)&v172[*(int *)(v60 + 48)];
    v205(v172, v216, v217);
    v188(v89, v73, v87);
    v90 = v181;
    v181 = v79;
    v101 = sub_2293410E0(ObjectType, v90);
    v91 = v101 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownerUUID;
    swift_beginAccess();
    v92 = v91;
    v93 = v175;
    sub_229324E44(v92, v175, &qword_255A41F70);
    swift_release();
    v94 = v215;
    sub_229353580(v85, v89, v93, v87, v200[41], v182);
    v215 = v94;
    if (v94)
    {
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v213 + 8))(v216, v60);
      sub_22935007C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v214(v88, v217);
      return v101;
    }
    v214(v88, v217);
    v95 = v212;
    v97 = *(_QWORD *)(v212 + 16);
    v96 = *(_QWORD *)(v212 + 24);
    if (v97 >= v96 >> 1)
      v95 = sub_22936F1B0(v96 > 1, v97 + 1, 1, v212);
    v98 = v205;
    *(_QWORD *)(v95 + 16) = v97 + 1;
    v99 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    v212 = v95;
    sub_22932EA14(v182, v95 + v99 + *(_QWORD *)(v190 + 72) * v97, type metadata accessor for ValueData);
    swift_unknownObjectRelease();
    v100 = (void (*)(char *, char *, uint64_t))v188;
LABEL_39:
    v137 = v192;
    v138 = &v192[*(int *)(v60 + 48)];
    v139 = v216;
    v140 = v217;
    v98(v192, v216, v217);
    v141 = v138;
    v142 = v209;
    v143 = v98;
    v144 = v221;
    v100(v141, v209, v221);
    v145 = v140;
    v205 = *(void (**)(char *, char *, uint64_t))(v213 + 8);
    ((void (*)(char *, uint64_t))v205)(v137, v60);
    v146 = *(int *)(v60 + 48);
    v147 = v210;
    v148 = &v210[v146];
    v143(v210, v139, v145);
    v100(v148, v142, v144);
    v149 = v191;
    swift_beginAccess();
    v150 = *v149;
    v151 = type metadata accessor for LamportTimestamp(0);
    v152 = (uint64_t)v193;
    v153 = v145;
    MEMORY[0x22E2C7CAC](v147, v150, v145, v151, v195);
    swift_endAccess();
    v154 = *(_QWORD *)(v151 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v152, 1, v151);
    if ((_DWORD)result == 1)
      goto LABEL_58;
    v48 = v211;
    v156 = *(_QWORD *)(v211 + 16);
    v155 = *(_QWORD *)(v211 + 24);
    v157 = v206;
    if (v156 >= v155 >> 1)
      v48 = sub_22936F19C(v155 > 1, v156 + 1, 1, v211);
    *(_QWORD *)(v48 + 16) = v156 + 1;
    sub_22932EA14(v152, v48+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v156, type metadata accessor for LamportTimestamp);
    v62 = v216;
    v60 = v204;
    ((void (*)(char *, uint64_t))v205)(v216, v204);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v148, v221);
    result = ((uint64_t (*)(char *, uint64_t))v214)(v210, v153);
    v59 = v208;
    v52 = v207;
    v3 = v189;
    v61 = v201;
    v53 = v199;
  }
  if (v52)
  {
    v63 = v217;
    v207 = (v52 - 1) & v52;
    v64 = __clz(__rbit64(v52)) | (v59 << 6);
    v208 = v59;
LABEL_22:
    v66 = *(_QWORD *)(v63 - 8);
    (*(void (**)(char *, unint64_t))(v66 + 16))(v61, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v66 + 72) * v64);
    (*(void (**)(char *, unint64_t))(*(_QWORD *)(v221 - 8) + 16))(&v61[*(int *)(v60 + 48)], *(_QWORD *)(v53 + 56) + *(_QWORD *)(*(_QWORD *)(v221 - 8) + 72) * v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v213 + 56))(v61, 0, 1, v60);
    goto LABEL_23;
  }
  v67 = v59 + 1;
  if (!__OFADD__(v59, 1))
  {
    if (v67 >= v187)
    {
      v158 = v48;
LABEL_53:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v213 + 56))(v201, 1, 1, v60);
      sub_22935007C();
      v218 = *v170;
      v159 = v217;
      v160 = v195;
      v161 = sub_2293B8EA0();
      swift_bridgeObjectRetain();
      MEMORY[0x22E2C85DC](MEMORY[0x24BEE0310], v161);
      v101 = sub_2293B8FE4();
      v162 = (_QWORD *)((char *)v202 + qword_255A449A8);
      swift_beginAccess();
      v163 = *v162;
      v164 = v200[37];
      v165 = v200[38];
      swift_bridgeObjectRetain();
      v166 = v163;
      v167 = v215;
      sub_229356664(v101, v212, v158, v166, v159, v164, v165, v160, v3);
      v215 = v167;
      if (!v167)
      {
        sub_229326FD0(&qword_255A44008, type metadata accessor for DictionaryCatchupData, (uint64_t)&unk_2293BBA84);
        v168 = v215;
        v101 = sub_2293B8C6C();
        sub_22932E904((uint64_t)v3, type metadata accessor for DictionaryCatchupData);
        v215 = v168;
      }
      return v101;
    }
    v68 = *(_QWORD *)(v178 + 8 * v67);
    if (!v68)
    {
      v69 = v59 + 2;
      if (v59 + 2 >= v187)
        goto LABEL_49;
      v68 = *(_QWORD *)(v178 + 8 * v69);
      if (!v68)
      {
        v69 = v59 + 3;
        if (v59 + 3 >= v187)
        {
LABEL_49:
          v158 = v48;
          goto LABEL_53;
        }
        v68 = *(_QWORD *)(v178 + 8 * v69);
        if (!v68)
        {
          while (1)
          {
            v67 = v69 + 1;
            if (__OFADD__(v69, 1))
              goto LABEL_57;
            if (v67 >= v187)
              goto LABEL_49;
            v68 = *(_QWORD *)(v178 + 8 * v67);
            ++v69;
            if (v68)
              goto LABEL_21;
          }
        }
      }
      v67 = v69;
    }
LABEL_21:
    v63 = v217;
    v207 = (v68 - 1) & v68;
    v208 = v67;
    v64 = __clz(__rbit64(v68)) + (v67 << 6);
    goto LABEL_22;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_2293B3254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t TupleTypeMetadata2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t result;
  int64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  unint64_t v84;
  uint64_t v85;
  void (*v86)(void);
  char *v87;
  char *v88;
  uint64_t v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  void (*v103)(void);
  char v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  char *v107;
  int v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  _DWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  int v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  char *v140;
  char *v141;
  char v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  char *v145;
  int v146;
  int *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  char *v152;
  uint64_t v153;
  unint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  int *v171;
  char *v172;
  char *v173;
  unint64_t *v174;
  uint64_t v175;
  char *v176;
  _QWORD *v177;
  uint64_t v178;
  char *v179;
  _QWORD *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  unsigned int (*v186)(char *, uint64_t, uint64_t);
  void (*v187)(void);
  unint64_t v188;
  uint64_t v189;
  _DWORD *v190;
  char *v191;
  _DWORD *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41FA8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v162 = (uint64_t)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v166 = (uint64_t)&v157 - v5;
  v202 = type metadata accessor for PBUUID(0);
  v6 = *(_QWORD *)(v202 - 8);
  v7 = MEMORY[0x24BDAC7A8](v202);
  v164 = (unint64_t *)((char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v7);
  v174 = (unint64_t *)((char *)&v157 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v177 = (unint64_t *)((char *)&v157 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F98);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v163 = (uint64_t)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v170 = (uint64_t)&v157 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v167 = (uint64_t)&v157 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v178 = (uint64_t)&v157 - v19;
  v20 = sub_2293B8A20();
  v201 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v185 = (char *)&v157 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v173 = (char *)&v157 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v172 = (char *)&v157 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v157 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v157 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v187 = (void (*)(void))((char *)&v157 - v33);
  v34 = type metadata accessor for LamportTimestamp(0);
  v194 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v171 = (int *)((char *)&v157 - v39);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v192 = (_DWORD *)((char *)&v157 - v41);
  v175 = v1;
  v42 = *(_QWORD *)(v1 + 280);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = MEMORY[0x24BDAC7A8](v40);
  v169 = (char *)&v157 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v191 = (char *)&v157 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v176 = (char *)&v157 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v193 = (char *)&v157 - v50;
  v199 = v51;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v189 = sub_2293B9104();
  v182 = *(char **)(v189 - 8);
  v53 = MEMORY[0x24BDAC7A8](v189);
  v184 = (char *)&v157 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v179 = (char *)&v157 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v183 = (char *)&v157 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v181 = (char *)&v157 - v59;
  v180 = v0;
  v60 = (char *)v0 + qword_255A449B0;
  swift_beginAccess();
  v165 = v60;
  v61 = *(_QWORD *)v60;
  v62 = *(_QWORD *)(*(_QWORD *)v60 + 64);
  v160 = *(_QWORD *)v60 + 64;
  v63 = 1 << *(_BYTE *)(v61 + 32);
  v64 = -1;
  if (v63 < 64)
    v64 = ~(-1 << v63);
  v188 = v64 & v62;
  v65 = (unint64_t)(v63 + 63) >> 6;
  v157 = v65 - 1;
  result = swift_bridgeObjectRetain();
  v67 = 0;
  v161 = v65;
  v159 = v65 - 4;
  v168 = result;
  v158 = result + 96;
  v200 = v6;
  v197 = v29;
  v203 = v32;
  v190 = v37;
  v204 = v20;
  v195 = TupleTypeMetadata2;
  v196 = v42;
  v198 = v43;
  while (1)
  {
    if (v188)
    {
      v78 = (v188 - 1) & v188;
      v186 = (unsigned int (*)(char *, uint64_t, uint64_t))v67;
      v79 = __clz(__rbit64(v188)) | (v67 << 6);
      v80 = v183;
      goto LABEL_8;
    }
    v83 = v67 + 1;
    v80 = v183;
    if (__OFADD__(v67, 1))
      goto LABEL_78;
    if (v83 >= v161)
    {
      v83 = v67;
    }
    else
    {
      v84 = *(_QWORD *)(v160 + 8 * v83);
      if (v84)
        goto LABEL_12;
      if (v67 + 2 < v161)
      {
        v84 = *(_QWORD *)(v160 + 8 * (v67 + 2));
        if (v84)
        {
          v83 = v67 + 2;
          v80 = v183;
LABEL_12:
          v78 = (v84 - 1) & v84;
          v79 = __clz(__rbit64(v84)) + (v83 << 6);
          v186 = (unsigned int (*)(char *, uint64_t, uint64_t))v83;
          TupleTypeMetadata2 = v195;
LABEL_8:
          v81 = v168;
          (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v80, *(_QWORD *)(v168 + 48) + *(_QWORD *)(v43 + 72) * v79, v42);
          sub_229324D74(*(_QWORD *)(v81 + 56) + *(_QWORD *)(v194 + 72) * v79, (uint64_t)&v80[*(int *)(TupleTypeMetadata2 + 48)], type metadata accessor for LamportTimestamp);
          v82 = *(_QWORD *)(TupleTypeMetadata2 - 8);
          v188 = *(_QWORD *)(v82 + 56);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v188)(v80, 0, 1, TupleTypeMetadata2);
          goto LABEL_15;
        }
        v83 = v67 + 2;
        if (v67 + 3 < v161)
        {
          v84 = *(_QWORD *)(v160 + 8 * (v67 + 3));
          v83 = v67 + 3;
          v80 = v183;
          if (v84)
            goto LABEL_12;
          while (v159 != v67)
          {
            v84 = *(_QWORD *)(v158 + 8 * v67++);
            if (v84)
            {
              v83 = v67 + 3;
              goto LABEL_12;
            }
          }
          v83 = v157;
        }
      }
    }
    v85 = v195;
    v82 = *(_QWORD *)(v195 - 8);
    v188 = *(_QWORD *)(v82 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v188)(v183, 1, 1, v195);
    v78 = 0;
    v186 = (unsigned int (*)(char *, uint64_t, uint64_t))v83;
    TupleTypeMetadata2 = v85;
LABEL_15:
    v86 = (void (*)(void))*((_QWORD *)v182 + 4);
    v87 = v181;
    v86();
    v88 = *(char **)(v82 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v88)(v87, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      v109 = (char *)v180 + qword_255A449A8;
      swift_beginAccess();
      v182 = v109;
      v110 = *(_QWORD *)v109;
      v111 = *(_QWORD *)(*(_QWORD *)v109 + 64);
      v178 = *(_QWORD *)v109 + 64;
      v112 = 1 << *(_BYTE *)(v110 + 32);
      v113 = -1;
      if (v112 < 64)
        v113 = ~(-1 << v112);
      v114 = v113 & v111;
      v115 = (unint64_t)(v112 + 63) >> 6;
      v168 = v115 - 1;
      result = swift_bridgeObjectRetain();
      v116 = 0;
      v181 = (char *)v115;
      v117 = v114;
      v177 = (_QWORD *)(v115 - 4);
      v183 = (char *)result;
      v176 = (char *)(result + 96);
      v187 = v86;
      v186 = (unsigned int (*)(char *, uint64_t, uint64_t))v88;
      while (!v117)
      {
        v122 = v116 + 1;
        if (__OFADD__(v116, 1))
          goto LABEL_79;
        if (v122 >= (uint64_t)v181)
        {
          v122 = v116;
          v119 = v202;
          v124 = v184;
        }
        else
        {
          v123 = *(_QWORD *)(v178 + 8 * v122);
          v119 = v202;
          v124 = v184;
          if (v123)
            goto LABEL_49;
          if (v116 + 2 < (uint64_t)v181)
          {
            v123 = *(_QWORD *)(v178 + 8 * (v116 + 2));
            if (v123)
            {
              v122 = v116 + 2;
LABEL_49:
              v193 = (char *)((v123 - 1) & v123);
              v118 = __clz(__rbit64(v123)) + (v122 << 6);
              v116 = v122;
              TupleTypeMetadata2 = v195;
LABEL_45:
              v120 = v183;
              v121 = v184;
              (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v184, *((_QWORD *)v183 + 6) + *(_QWORD *)(v43 + 72) * v118, v42);
              sub_229324D74(*((_QWORD *)v120 + 7) + *(_QWORD *)(v194 + 72) * v118, (uint64_t)&v121[*(int *)(TupleTypeMetadata2 + 48)], type metadata accessor for LamportTimestamp);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v188)(v121, 0, 1, TupleTypeMetadata2);
              v86 = v187;
              goto LABEL_52;
            }
            v122 = v116 + 2;
            if (v116 + 3 < (uint64_t)v181)
            {
              v123 = *(_QWORD *)(v178 + 8 * (v116 + 3));
              v122 = v116 + 3;
              if (v123)
                goto LABEL_49;
              while (v177 != (_QWORD *)v116)
              {
                v123 = *(_QWORD *)&v176[8 * v116++];
                if (v123)
                {
                  v122 = v116 + 3;
                  goto LABEL_49;
                }
              }
              v122 = v168;
            }
          }
        }
        v125 = v195;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v188)(v124, 1, 1, v195);
        v193 = 0;
        v116 = v122;
        TupleTypeMetadata2 = v125;
LABEL_52:
        v126 = v179;
        v86();
        if (v186(v126, 1, TupleTypeMetadata2) == 1)
          return swift_release();
        v192 = (_DWORD *)v116;
        v127 = v126;
        v128 = (uint64_t)&v126[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v191, v127, v42);
        v129 = v190;
        sub_22932EA14(v128, (uint64_t)v190, type metadata accessor for LamportTimestamp);
        v130 = (uint64_t)v129 + *(int *)(v199 + 24);
        v131 = v170;
        sub_229324E44(v130, v170, &qword_255A41F98);
        v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v200 + 48);
        LODWORD(v129) = v132(v131, 1, v119);
        sub_2293251F8(v131, &qword_255A41F98);
        if ((_DWORD)v129 == 1)
        {
          if (qword_255A41AD0 != -1)
            swift_once();
          v133 = __swift_project_value_buffer(v20, (uint64_t)qword_255A44CF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v201 + 16))(v185, v133, v20);
          v43 = v198;
        }
        else
        {
          v134 = v163;
          sub_229324E44(v130, v163, &qword_255A41F98);
          v135 = v132(v134, 1, v119);
          v136 = v164;
          if (v135 == 1)
          {
            *v164 = 0;
            v136[1] = 0;
            sub_2293B8B70();
            sub_2293251F8(v134, &qword_255A41F98);
          }
          else
          {
            sub_22932EA14(v134, (uint64_t)v164, type metadata accessor for PBUUID);
          }
          v43 = v198;
          sub_229357288();
          sub_22932E904((uint64_t)v136, type metadata accessor for PBUUID);
        }
        if (qword_255A41AD0 != -1)
          swift_once();
        v137 = __swift_project_value_buffer(v20, (uint64_t)qword_255A44CF0);
        v138 = v201;
        v139 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        v140 = v203;
        v139(v203, v137, v20);
        v141 = v185;
        v142 = sub_2293B89F0();
        v143 = *(void (**)(char *, uint64_t))(v138 + 8);
        v143(v140, v20);
        v143(v141, v20);
        if ((v142 & 1) != 0)
        {
          result = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 16))(v169, v191, v196);
          v144 = *(_QWORD *)((char *)v180 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
          if (!v144)
            goto LABEL_81;
          v145 = v203;
          v139(v203, v144 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v20);
          result = ((uint64_t (*)(char *, char *, uint64_t))v139)(v197, v145, v20);
          v146 = *v190 + 1;
          if (*v190 == -1)
            goto LABEL_77;
          v147 = v171;
          *v171 = 0;
          v148 = v199;
          sub_2293B8B70();
          v149 = (uint64_t)v147 + *(int *)(v148 + 24);
          v150 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v200 + 56);
          v151 = v202;
          v150(v149, 1, 1, v202);
          v152 = v172;
          v139(v172, (uint64_t)v197, v204);
          v153 = (uint64_t)v173;
          v139(v173, (uint64_t)v152, v204);
          v154 = v174;
          sub_229357158(v153, v174);
          sub_2293251F8(v149, &qword_255A41F98);
          sub_22932EA14((uint64_t)v154, v149, type metadata accessor for PBUUID);
          v150(v149, 0, 1, v151);
          v143(v152, v204);
          v143(v197, v204);
          *v147 = v146;
          v155 = (uint64_t)v147;
          v20 = v204;
          v156 = v162;
          sub_22932EA14(v155, v162, type metadata accessor for LamportTimestamp);
          v143(v203, v20);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v194 + 56))(v156, 0, 1, v148);
          swift_beginAccess();
          v86 = v187;
          sub_2293B8EC4();
          sub_2293B8EDC();
          swift_endAccess();
          v43 = v198;
        }
        sub_22932E904((uint64_t)v190, type metadata accessor for LamportTimestamp);
        v42 = v196;
        result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v191, v196);
        TupleTypeMetadata2 = v195;
        v116 = (uint64_t)v192;
        v117 = (unint64_t)v193;
      }
      v193 = (char *)((v117 - 1) & v117);
      v118 = __clz(__rbit64(v117)) | (v116 << 6);
      v119 = v202;
      goto LABEL_45;
    }
    v188 = v78;
    v89 = (uint64_t)&v87[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v193, v87, v42);
    v90 = v192;
    sub_22932EA14(v89, (uint64_t)v192, type metadata accessor for LamportTimestamp);
    v91 = (uint64_t)v90 + *(int *)(v199 + 24);
    v92 = v178;
    sub_229324E44(v91, v178, &qword_255A41F98);
    v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v200 + 48);
    v94 = v202;
    LODWORD(v90) = v93(v92, 1, v202);
    sub_2293251F8(v92, &qword_255A41F98);
    if ((_DWORD)v90 == 1)
    {
      if (qword_255A41AD0 != -1)
        swift_once();
      v95 = __swift_project_value_buffer(v20, (uint64_t)qword_255A44CF0);
      (*(void (**)(void (*)(void), uint64_t, uint64_t))(v201 + 16))(v187, v95, v20);
      v43 = v198;
    }
    else
    {
      v96 = v167;
      sub_229324E44(v91, v167, &qword_255A41F98);
      if (v93(v96, 1, v94) == 1)
      {
        v97 = v177;
        *v177 = 0;
        v97[1] = 0;
        sub_2293B8B70();
        sub_2293251F8(v96, &qword_255A41F98);
      }
      else
      {
        sub_22932EA14(v96, (uint64_t)v177, type metadata accessor for PBUUID);
      }
      v43 = v198;
      v98 = v177;
      sub_229357288();
      sub_22932E904((uint64_t)v98, type metadata accessor for PBUUID);
    }
    if (qword_255A41AD0 != -1)
      swift_once();
    v99 = __swift_project_value_buffer(v20, (uint64_t)qword_255A44CF0);
    v100 = v201;
    v101 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
    v102 = v203;
    v101(v203, v99, v20);
    v103 = v187;
    v104 = sub_2293B89F0();
    v105 = *(void (**)(char *, uint64_t))(v100 + 8);
    v105(v102, v20);
    v105((char *)v103, v20);
    if ((v104 & 1) != 0)
      break;
LABEL_5:
    sub_22932E904((uint64_t)v192, type metadata accessor for LamportTimestamp);
    result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v193, v42);
    TupleTypeMetadata2 = v195;
    v67 = (int64_t)v186;
  }
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 16))(v176, v193, v42);
  v106 = *(_QWORD *)((char *)v180 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller);
  if (!v106)
    goto LABEL_80;
  v107 = v203;
  v101(v203, v106 + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__ownershipUUID, v20);
  result = ((uint64_t (*)(char *, char *, uint64_t))v101)(v197, v107, v20);
  v108 = *v192 + 1;
  if (*v192 != -1)
  {
    v68 = v171;
    *v171 = 0;
    v69 = v199;
    sub_2293B8B70();
    v70 = (uint64_t)v68 + *(int *)(v69 + 24);
    v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v200 + 56);
    v72 = v202;
    v71(v70, 1, 1, v202);
    v73 = v172;
    v101(v172, (uint64_t)v197, v204);
    v74 = (uint64_t)v173;
    v101(v173, (uint64_t)v73, v204);
    v75 = v174;
    sub_229357158(v74, v174);
    sub_2293251F8(v70, &qword_255A41F98);
    sub_22932EA14((uint64_t)v75, v70, type metadata accessor for PBUUID);
    v71(v70, 0, 1, v72);
    v43 = v198;
    v105(v73, v204);
    v105(v197, v204);
    *v68 = v108;
    v76 = (uint64_t)v68;
    v20 = v204;
    v77 = v166;
    sub_22932EA14(v76, v166, type metadata accessor for LamportTimestamp);
    v105(v203, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v194 + 56))(v77, 0, 1, v69);
    swift_beginAccess();
    v42 = v196;
    sub_2293B8EC4();
    sub_2293B8EDC();
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_2293B45D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD v53[2];
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69[4];

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F70);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v67 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v53 - v7);
  v8 = *(_QWORD *)(v1 + 280);
  v68 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = v1;
  v10 = *(_QWORD *)(v1 + 288);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_2293B9104();
  v62 = *(_QWORD *)(v12 - 8);
  v63 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v53 - v17;
  if (*((_BYTE *)v0 + qword_255A449C8) != 1)
    return result;
  v58 = v5;
  v19 = (_QWORD *)((char *)v0 + qword_255A449D0);
  swift_beginAccess();
  v20 = *v19;
  if ((*v19 & 0xC000000000000001) != 0)
  {
    v21 = sub_2293B920C();
    v54 = 0;
    v22 = 0;
    v23 = 0;
    v24 = v21 | 0x8000000000000000;
  }
  else
  {
    v25 = -1 << *(_BYTE *)(v20 + 32);
    v22 = ~v25;
    v26 = *(_QWORD *)(v20 + 64);
    v54 = v20 + 64;
    v27 = -v25;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v23 = v28 & v26;
    v24 = v20;
  }
  v59 = v0;
  v60 = (_QWORD *)((char *)v0 + qword_255A449B8);
  v61 = (_QWORD *)((char *)v0 + qword_255A449C0);
  v56 = v24 & 0x7FFFFFFFFFFFFFFFLL;
  v53[1] = v22;
  v55 = (unint64_t)(v22 + 64) >> 6;
  v53[0] = v55 - 1;
  result = swift_bridgeObjectRetain();
  v29 = 0;
  v57 = v24;
  while ((v24 & 0x8000000000000000) != 0)
  {
    if (sub_2293B9218())
    {
      sub_2293B9344();
      swift_unknownObjectRelease();
      sub_2293B9344();
      swift_unknownObjectRelease();
      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    v34 = v29;
    v65 = v23;
LABEL_24:
    v37 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v15, v35, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v18, v15, v63);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v18, 1, TupleTypeMetadata2) == 1)
    {
      sub_22935007C();
      v51 = v60;
      swift_beginAccess();
      *v51 = 0;
      swift_bridgeObjectRelease();
      v52 = v61;
      swift_beginAccess();
      *v52 = 0;
      return swift_bridgeObjectRelease();
    }
    v38 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    v39 = v66;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v18, v8);
    v69[3] = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v69);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(boxed_opaque_existential_0, v38, v10);
    v41 = v60;
    swift_beginAccess();
    v42 = *v41;
    if (v42)
    {
      v43 = sub_2293B8A20();
      MEMORY[0x22E2C7CAC](v39, v42, v8, v43, *(_QWORD *)(v64 + 312));
      swift_endAccess();
    }
    else
    {
      swift_endAccess();
      v44 = sub_2293B8A20();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v67, 1, 1, v44);
    }
    v45 = (uint64_t)v58;
    v46 = v15;
    v47 = v61;
    swift_beginAccess();
    v48 = *v47;
    if (v48)
    {
      v30 = sub_2293B8A20();
      v31 = v66;
      MEMORY[0x22E2C7CAC](v66, v48, v8, v30, *(_QWORD *)(v64 + 312));
      swift_endAccess();
    }
    else
    {
      swift_endAccess();
      v49 = sub_2293B8A20();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v45, 1, 1, v49);
      v31 = v66;
    }
    v32 = v67;
    sub_22932820C((uint64_t)v69, v67, v45);
    sub_2293251F8(v45, &qword_255A41F70);
    sub_2293251F8((uint64_t)v32, &qword_255A41F70);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v31, v8);
    result = sub_2293251F8((uint64_t)v69, &qword_255A41F90);
    v29 = v34;
    v23 = v65;
    v15 = v46;
    v24 = v57;
  }
  if (v23)
  {
    v65 = (v23 - 1) & v23;
    v33 = __clz(__rbit64(v23)) | (v29 << 6);
    v34 = v29;
    goto LABEL_14;
  }
  v34 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v34 >= v55)
  {
    v65 = 0;
    v35 = 1;
    v34 = v29;
    goto LABEL_24;
  }
  v36 = *(_QWORD *)(v54 + 8 * v34);
  if (v36)
    goto LABEL_20;
  if (v29 + 2 >= v55)
  {
    v65 = 0;
    v35 = 1;
    goto LABEL_24;
  }
  v36 = *(_QWORD *)(v54 + 8 * (v29 + 2));
  if (v36)
  {
    v34 = v29 + 2;
    goto LABEL_20;
  }
  v50 = v29 + 3;
  if (v29 + 3 >= v55)
  {
    v65 = 0;
    v35 = 1;
    v34 = v29 + 2;
    goto LABEL_24;
  }
  v36 = *(_QWORD *)(v54 + 8 * v50);
  if (v36)
  {
    v34 = v29 + 3;
LABEL_20:
    v65 = (v36 - 1) & v36;
    v33 = __clz(__rbit64(v36)) + (v34 << 6);
LABEL_14:
    (*(void (**)(char *, unint64_t, uint64_t))(v68 + 16))(v15, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v68 + 72) * v33, v8);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(&v15[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v24 + 56) + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v33, v10);
    v35 = 0;
    goto LABEL_24;
  }
  while (1)
  {
    v34 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v34 >= v55)
    {
      v65 = 0;
      v35 = 1;
      v34 = v53[0];
      goto LABEL_24;
    }
    v36 = *(_QWORD *)(v54 + 8 * v34);
    ++v50;
    if (v36)
      goto LABEL_20;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_2293B4C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v48 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v4 + 280);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = sub_2293B9104();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  if (*(_BYTE *)(v1 + qword_255A449C8) != 1)
    return result;
  v14 = (unint64_t *)(v1 + qword_255A449D0);
  swift_beginAccess();
  v15 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
  {
    v16 = sub_2293B920C();
    v39 = 0;
    v17 = 0;
    v18 = 0;
    v19 = v16 | 0x8000000000000000;
  }
  else
  {
    v20 = -1 << *(_BYTE *)(v15 + 32);
    v17 = ~v20;
    v21 = *(_QWORD *)(v15 + 64);
    v39 = v15 + 64;
    v22 = -v20;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    else
      v23 = -1;
    v18 = v23 & v21;
    v19 = v15;
  }
  v45 = v19;
  v40 = (unint64_t)(v17 + 64) >> 6;
  v41 = v19 & 0x7FFFFFFFFFFFFFFFLL;
  v37 = v40 - 1;
  v38 = v17;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v42 = v2;
  while ((v45 & 0x8000000000000000) != 0)
  {
    if (sub_2293B9218())
    {
      sub_2293B9344();
      swift_unknownObjectRelease();
      sub_2293B9344();
      swift_unknownObjectRelease();
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    v27 = v24;
    v25 = v18;
LABEL_23:
    v32 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v10, v30, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v13, v10, v47);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, TupleTypeMetadata2) == 1)
      return sub_22935007C();
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v44, &v13[*(int *)(TupleTypeMetadata2 + 48)], v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v33 = v49;
      ObjectType = swift_getObjectType();
      sub_2293410E0(ObjectType, v33);
      sub_22935CD30(v43);
      swift_unknownObjectRelease();
      swift_release();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v13, v5);
    v24 = v27;
    v18 = v25;
  }
  if (v18)
  {
    v25 = (v18 - 1) & v18;
    v26 = __clz(__rbit64(v18)) | (v24 << 6);
    v27 = v24;
    goto LABEL_13;
  }
  v27 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v27 >= v40)
  {
    v25 = 0;
    v30 = 1;
    v27 = v24;
    goto LABEL_23;
  }
  v31 = *(_QWORD *)(v39 + 8 * v27);
  if (v31)
    goto LABEL_19;
  if (v24 + 2 >= v40)
  {
    v25 = 0;
    v30 = 1;
    goto LABEL_23;
  }
  v31 = *(_QWORD *)(v39 + 8 * (v24 + 2));
  if (v31)
  {
    v27 = v24 + 2;
    goto LABEL_19;
  }
  v35 = v24 + 3;
  if (v24 + 3 >= v40)
  {
    v25 = 0;
    v30 = 1;
    v27 = v24 + 2;
    goto LABEL_23;
  }
  v31 = *(_QWORD *)(v39 + 8 * v35);
  if (v31)
  {
    v27 = v24 + 3;
LABEL_19:
    v25 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v27 << 6);
LABEL_13:
    v28 = v45;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v10, *(_QWORD *)(v45 + 48) + *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72) * v26, v5);
    v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v48 + 72) * v26;
    v2 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(&v10[*(int *)(TupleTypeMetadata2 + 48)], v29, v42);
    v30 = 0;
    goto LABEL_23;
  }
  while (1)
  {
    v27 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v27 >= v40)
    {
      v25 = 0;
      v30 = 1;
      v27 = v37;
      goto LABEL_23;
    }
    v31 = *(_QWORD *)(v39 + 8 * v27);
    ++v35;
    if (v31)
      goto LABEL_19;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2293B510C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  char v47;
  char v48;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  void (*v51)(unint64_t, uint64_t);
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t ObjectType;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[32];
  uint64_t v82[4];

  v1 = v0;
  v2 = *v0;
  v3 = sub_2293B8A20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v73 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v2 + 280);
  v7 = *(_QWORD *)(v2 + 288);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_2293B9104();
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v56 - v14;
  if (*((_BYTE *)v1 + qword_255A449C8) != 1)
    return result;
  v16 = (_QWORD *)((char *)v1 + qword_255A449D0);
  swift_beginAccess();
  v17 = *v16;
  if ((v17 & 0xC000000000000001) != 0)
  {
    v18 = sub_2293B920C();
    v59 = 0;
    v19 = 0;
    v20 = 0;
    v21 = v18 | 0x8000000000000000;
  }
  else
  {
    v22 = -1 << *(_BYTE *)(v17 + 32);
    v19 = ~v22;
    v23 = *(_QWORD *)(v17 + 64);
    v59 = v17 + 64;
    v24 = -v22;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    else
      v25 = -1;
    v20 = v25 & v23;
    v21 = v17;
  }
  v63 = v3;
  v74 = v21;
  v61 = v21 & 0x7FFFFFFFFFFFFFFFLL;
  v58 = v19;
  v60 = (unint64_t)(v19 + 64) >> 6;
  v57 = v60 - 1;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v72 = MEMORY[0x24BEE4AD8] + 8;
  v66 = v1;
  v70 = v4;
  v71 = v12;
  v69 = v15;
  v62 = TupleTypeMetadata2;
  v65 = v6;
  v64 = v7;
  while ((v74 & 0x8000000000000000) != 0)
  {
    if (sub_2293B9218())
    {
      v35 = v71;
      sub_2293B9344();
      v12 = v35;
      v15 = v69;
      swift_unknownObjectRelease();
      sub_2293B9344();
      swift_unknownObjectRelease();
      v34 = 0;
      v77 = v26;
      v78 = v20;
    }
    else
    {
      v34 = 1;
      v77 = v26;
      v78 = v20;
      v12 = v71;
    }
LABEL_25:
    v38 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v12, v34, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v15, v12, v76);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v15, 1, TupleTypeMetadata2) == 1)
      return sub_22935007C();
    v39 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
    v82[3] = v7;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v82);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(boxed_opaque_existential_0, v39, v7);
    sub_2293251BC((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255A41F80);
    if (swift_dynamicCast())
    {
      v41 = v80;
      ObjectType = swift_getObjectType();
      v68 = v41;
      v42 = sub_2293410E0(ObjectType, v41) + OBJC_IVAR____TtC12SyncedModels21SyncedModelController__uuid;
      swift_beginAccess();
      v43 = (uint64_t)v73;
      v44 = v63;
      (*(void (**)(char *, uint64_t))(v4 + 16))(v73, v42);
      v45 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v46 = sub_22936F3E8(v43);
      v48 = v47;
      swift_bridgeObjectRelease();
      if ((v48 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v50 = *v45;
        v79 = *v45;
        *v45 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_229323424();
          v50 = v79;
        }
        v51 = *(void (**)(unint64_t, uint64_t))(v70 + 8);
        v51(*(_QWORD *)(v50 + 48) + *(_QWORD *)(v70 + 72) * v46, v44);
        v52 = v79;
        sub_229320F9C(v46, v79);
        *v45 = v52;
        swift_bridgeObjectRelease();
      }
      else
      {
        v51 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
      }
      v51((unint64_t)v73, v44);
      swift_endAccess();
      swift_release();
      v1 = v66;
      v6 = v65;
      v15 = v69;
      if (*(_QWORD *)((char *)v66 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller))
      {
        Strong = swift_weakLoadStrong();
        v4 = v70;
        if (Strong)
        {
          v54 = sub_2293410E0(ObjectType, v68);
          sub_22932EEC8(v54);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_release();
        v4 = v70;
      }
      v7 = v64;
      v12 = v71;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v15, v6);
    v26 = v77;
    v20 = v78;
  }
  if (v20)
  {
    v27 = v1;
    v28 = v4;
    v77 = v26;
    v78 = (v20 - 1) & v20;
    v29 = __clz(__rbit64(v20)) | (v26 << 6);
    goto LABEL_15;
  }
  v36 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v36 >= v60)
  {
    v77 = v26;
    v78 = 0;
LABEL_24:
    v34 = 1;
    goto LABEL_25;
  }
  v37 = *(_QWORD *)(v59 + 8 * v36);
  if (v37)
    goto LABEL_21;
  if (v26 + 2 >= v60)
  {
    v77 = v26 + 1;
    v78 = 0;
    goto LABEL_24;
  }
  v37 = *(_QWORD *)(v59 + 8 * (v26 + 2));
  if (v37)
  {
    v36 = v26 + 2;
    goto LABEL_21;
  }
  v55 = v26 + 3;
  if (v26 + 3 >= v60)
  {
    v77 = v26 + 2;
    v78 = 0;
    goto LABEL_24;
  }
  v37 = *(_QWORD *)(v59 + 8 * v55);
  if (v37)
  {
    v36 = v26 + 3;
LABEL_21:
    v27 = v1;
    v28 = v4;
    v77 = v36;
    v78 = (v37 - 1) & v37;
    v29 = __clz(__rbit64(v37)) + (v36 << 6);
LABEL_15:
    v30 = v74;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, *(_QWORD *)(v74 + 48) + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v29, v6);
    v31 = *(_QWORD *)(v7 - 8);
    v32 = *(_QWORD *)(v30 + 56) + *(_QWORD *)(v31 + 72) * v29;
    v33 = v62;
    (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(&v12[*(int *)(v62 + 48)], v32, v7);
    v34 = 0;
    v4 = v28;
    v1 = v27;
    TupleTypeMetadata2 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v36 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v36 >= v60)
    {
      v78 = 0;
      v34 = 1;
      v77 = v57;
      goto LABEL_25;
    }
    v37 = *(_QWORD *)(v59 + 8 * v36);
    ++v55;
    if (v37)
      goto LABEL_21;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysRemoved.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysRemoved.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SyncedDictionary.SyncedDictionaryChangeInfo.keysRemoved.modify())()
{
  return nullsub_1;
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysChanged.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysChanged.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SyncedDictionary.SyncedDictionaryChangeInfo.keysChanged.modify())()
{
  return nullsub_1;
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysAdded.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedDictionary.SyncedDictionaryChangeInfo.keysAdded.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SyncedDictionary.SyncedDictionaryChangeInfo.keysAdded.modify())()
{
  return nullsub_1;
}

uint64_t SyncedDictionary.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_2293B8D98();
}

uint64_t sub_2293B59B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t SyncedDictionary.deinit()
{
  uint64_t v0;

  sub_22932E904(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SyncedDictionary.__deallocating_deinit()
{
  SyncedDictionary.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2293B5B04(uint64_t a1)
{
  return SyncedDictionary.receive<A>(subscriber:)(a1);
}

void sub_2293B5B24(uint64_t a1)
{
  SyncedDictionary.__allocating_init(from:)(a1);
}

void sub_2293B5B4C(uint64_t a1)
{
  SyncedDictionary.encode(to:)(a1);
}

uint64_t sub_2293B5B70()
{
  return sub_2293B207C();
}

void type metadata accessor for SyncedDictionary.SyncedDictionaryChangeInfo()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t sub_2293B5BA0(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_22936F1C4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293B5CE4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_22936F1B0(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for ValueData(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293B5E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_22936ED78(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293B5F9C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_22936F2E4(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_2293B8B40();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2293B926C();
  __break(1u);
  return result;
}

uint64_t sub_2293B6110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];

  if (qword_255A41A98 != -1)
    swift_once();
  sub_2293586FC(a2, a2);
  v8 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v9 = sub_2293B8F78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  v14[2] = sub_22935437C(v9);
  v11 = sub_2293B8FD8();
  v14[0] = a5;
  MEMORY[0x22E2C85DC](MEMORY[0x24BEE12A0], v11, v14);
  v12 = sub_2293B8978();
  swift_bridgeObjectRelease();
  return v12;
}

void sub_2293B624C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = type metadata accessor for LamportTimestamp(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = qword_255A449A8;
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_2293B8F90();
  *(_QWORD *)((char *)v0 + v3) = sub_2293B8E94();
  v4 = qword_255A449B0;
  sub_2293B8F90();
  *(_QWORD *)((char *)v0 + v4) = sub_2293B8E94();
  *(_QWORD *)((char *)v0 + qword_255A449B8) = 0;
  *(_QWORD *)((char *)v0 + qword_255A449C0) = 0;
  v5 = *(_QWORD *)(v1 + 288);
  if (swift_conformsToProtocol2())
    v6 = v5;
  else
    v6 = 0;
  *((_BYTE *)v0 + qword_255A449C8) = v6 != 0;
  type metadata accessor for SyncedDictionary.SyncedDictionaryChangeInfo();
}

void sub_2293B63AC()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255A41BC0);
  swift_getTupleTypeMetadata2();
  sub_2293B8DB0();
  *(_QWORD *)(v0 + v1) = sub_2293B8DA4();
  swift_getTupleTypeMetadata2();
  sub_2293B8F90();
  *(_QWORD *)(v0 + qword_255A449D0) = sub_2293B8E94();
  swift_release();
  *v2 = 0;
  sub_2293B8B70();
  v4 = (char *)v2 + *(int *)(v3 + 24);
  v5 = type metadata accessor for PBUUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__controller) = 0;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__parentPropertyID) = -1;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__propertyID) = -1;
  v6 = OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__pendingModelControllers;
  *(_QWORD *)(v0 + v6) = sub_229327CFC(MEMORY[0x24BEE4AF8]);
  sub_22932EA14((uint64_t)v2, v0 + OBJC_IVAR____TtC12SyncedModels18SyncedPropertyBase__timestamp, type metadata accessor for LamportTimestamp);
  swift_retain();
  sub_2293AAB28();
}

uint64_t sub_2293B6534()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255A449D0;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2293B657C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2293B6534();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2293B65A4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_2293B6578(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2293B65D4()
{
  return 64;
}

__n128 sub_2293B65E0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2293B65F4()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for SyncedDictionary()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t method lookup function for SyncedDictionary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncedDictionary.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of SyncedDictionary.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t sub_2293B6698()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2293B66A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2293B66D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2293B6720(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2293B6794(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2293B67E0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2293B67E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2293B6834 + 4 * byte_2293BD4F9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2293B6868 + 4 * byte_2293BD4F4[v4]))();
}

uint64_t sub_2293B6868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293B6870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2293B6878);
  return result;
}

uint64_t sub_2293B6884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2293B688CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2293B6890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293B6898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_2293B68A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LamportTimestamp(319);
    if (v1 <= 0x3F)
    {
      sub_22932DEB8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2293B6948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  size_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  unint64_t v32;
  _DWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  _QWORD *v43;
  _QWORD *v44;
  void *v45;
  const void *v46;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  size_t v48;
  void *v49;
  const void *v50;
  uint64_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  size_t __n;
  size_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(unint64_t, unint64_t, uint64_t);
  unsigned int v62;
  uint64_t v63;
  _DWORD *v65;

  v60 = *(_QWORD *)(a3 + 24);
  v3 = *(_QWORD *)(v60 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v63 = sub_2293B8B7C();
  v5 = *(_QWORD *)(v63 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 | 7;
  v9 = v8 + v4;
  v10 = v6 + 4;
  v11 = *(_QWORD *)(v5 + 64);
  v12 = v8 + v11;
  v13 = ((v7 + 16) & ~v7) + v11;
  v62 = *(_DWORD *)(v5 + 84);
  v57 = v13;
  if (!v62)
    ++v13;
  __n = v13;
  v14 = ((v12 + ((v6 + 4) & ~(unint64_t)v6)) & ~(v6 | 7))
      + v13;
  v15 = sub_2293B8A20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = *(_DWORD *)(v16 + 84);
  v19 = v17;
  v58 = v16;
  v59 = v15;
  v20 = *(_QWORD *)(v16 + 64);
  if (!v18)
    ++v20;
  v21 = v17 | *(_DWORD *)(v3 + 80);
  v22 = v8 | (v17 | *(_BYTE *)(v3 + 80));
  v23 = (v21 | v6) & 0x100000;
  if (v22 != 7
    || v23 != 0
    || ((v20 + v19 + ((v14 + v19 + (v9 & ~(v6 | 7))) & ~v19)) & ~v19) + v20 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v27 = v26 + ((v22 + 16) & ~v22);
    swift_retain();
    return (uint64_t *)v27;
  }
  v54 = v20;
  v55 = v14 + v19;
  v28 = ~v8;
  v29 = ~(unint64_t)v6;
  v52 = ~v19;
  v53 = v20 + v19;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v60);
  v30 = (_DWORD *)(((unint64_t)a1 + v9) & v28);
  v31 = (_DWORD *)(((unint64_t)a2 + v9) & v28);
  *v30 = *v31;
  v65 = v30;
  v32 = ((unint64_t)v30 + v10) & ~v7;
  v33 = v31;
  v34 = ((unint64_t)v31 + v10) & ~v7;
  v61 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v61(((unint64_t)v30 + v10) & v29, ((unint64_t)v31 + v10) & v29, v63);
  v35 = (_QWORD *)((v12 + v32) & v28);
  v36 = (_QWORD *)((v12 + v34) & v28);
  if (v62)
  {
    v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v5 + 48))((v7 + (((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v29, v62, v63);
    v39 = v58;
    v38 = v59;
    v40 = v52;
    if (!v37)
    {
LABEL_27:
      *v35 = *v36;
      v43 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v44;
      v61(((unint64_t)v43 + v7 + 8) & ~v7, ((unint64_t)v44 + v7 + 8) & ~v7, v63);
      if (!v62)
        *((_BYTE *)v35 + v57) = 0;
      goto LABEL_29;
    }
  }
  else
  {
    v39 = v58;
    v38 = v59;
    v40 = v52;
    if (!*((_BYTE *)v36 + v57))
      goto LABEL_27;
    v41 = (*((unsigned __int8 *)v36 + v57) - 1) << (8 * v57);
    if (v57 > 3)
      v41 = 0;
    if ((_DWORD)v57)
    {
      if (v57 <= 3)
        v42 = v57;
      else
        v42 = 4;
      __asm { BR              X11 }
    }
    if (v41 == -1)
      goto LABEL_27;
  }
  memcpy(v35, v36, __n);
LABEL_29:
  v45 = (void *)(((unint64_t)v65 + v55) & v40);
  v46 = (const void *)(((unint64_t)v33 + v55) & v40);
  v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  if (v47(v46, 1, v38))
  {
    v48 = v54;
    memcpy(v45, v46, v54);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v45, v46, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
    v48 = v54;
  }
  v49 = (void *)(((unint64_t)v45 + v53) & v40);
  v50 = (const void *)(((unint64_t)v46 + v53) & v40);
  if (v47(v50, 1, v38))
  {
    memcpy(v49, v50, v48);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v49, v50, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v49, 0, 1, v38);
  }
  return a1;
}

uint64_t sub_2293B6D30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_2293B8B7C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + a1 + (v7 | 7)) & ~(v7 | 7);
  v9 = ~v7;
  v26 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v26((v7 + 4 + v8) & ~v7, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = ((v7 | 7) + v10 + ((v7 + 4 + v8) & ~v7)) & ~(v7 | 7);
  v12 = *(unsigned int *)(v6 + 84);
  v13 = ((v7 + 16) & ~v7) + v10;
  v27 = (v7 | 7) + v10;
  if ((_DWORD)v12)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v7 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v9, v12, v5))
    {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!*(_BYTE *)(v11 + v13))
    goto LABEL_13;
  v14 = (*(unsigned __int8 *)(v11 + v13) - 1) << (8 * v13);
  if (v13 > 3)
    v14 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X11 }
  }
  if (v14 == -1)
LABEL_13:
    v26((v7 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v9, v5);
LABEL_14:
  v16 = sub_2293B8A20();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v8 + v13;
  if (!(_DWORD)v12)
    ++v19;
  v20 = v19 + ((v27 + ((v7 + 4) & v9)) & ~(v7 | 7)) + v18;
  v21 = ~v18;
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v22(v20 & ~v18, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20 & ~v18, v16);
  v23 = (v20 | v18) + *(_QWORD *)(v17 + 64);
  if (!*(_DWORD *)(v17 + 84))
    ++v23;
  v24 = v23 & v21;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v23 & v21, 1, v16);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return result;
}

uint64_t sub_2293B6F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  size_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const void *v46;
  int v47;
  size_t v48;
  size_t v49;
  size_t v50;
  void *v51;
  const void *v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v56 = a1;
  v12 = (_DWORD *)((v11 + a1) & ~(v9 | 7));
  v13 = (_DWORD *)((v11 + a2) & ~(v9 | 7));
  *v12 = *v13;
  v14 = v12;
  v15 = ~v9;
  v16 = ((unint64_t)v12 + v9 + 4) & ~v9;
  v58 = v13;
  v17 = v9 + 4;
  v18 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v54(v16, v18, v7);
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v19 + (v9 | 7) + v16;
  v21 = (_QWORD *)(v20 & ~(v9 | 7));
  v22 = (_QWORD *)((v19 + v10 + v18) & ~v10);
  v23 = *(unsigned int *)(v8 + 84);
  v24 = v19 + ((v9 + 16) & ~v9);
  v55 = v7;
  v57 = v19;
  if (!(_DWORD)v23)
  {
    v28 = v14;
    v29 = ~(v9 | 7);
    if (!*((_BYTE *)v22 + v24))
      goto LABEL_17;
    v30 = (*((unsigned __int8 *)v22 + v24) - 1) << (8 * v24);
    if (v24 > 3)
      v30 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v31 = v19 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v31 = 4;
      __asm { BR              X11 }
    }
    if (v30 == -1)
      goto LABEL_17;
LABEL_13:
    if ((_DWORD)v23)
      v32 = v24;
    else
      v32 = v24 + 1;
    memcpy(v21, v22, v32);
    goto LABEL_19;
  }
  v25 = v7;
  v26 = (_QWORD *)(v20 & ~v10);
  v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))((v9 + (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v15, v23, v25);
  v21 = v26;
  v28 = v14;
  v29 = ~(v9 | 7);
  if (v27)
    goto LABEL_13;
LABEL_17:
  *v21 = *v22;
  v33 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = ((unint64_t)v33 + v9 + 8) & v15;
  v36 = ((unint64_t)v34 + v9 + 8) & v15;
  v37 = v21;
  v54(v35, v36, v55);
  if (!(_DWORD)v23)
    *((_BYTE *)v37 + v24) = 0;
LABEL_19:
  if ((_DWORD)v23)
    v38 = v24;
  else
    v38 = v24 + 1;
  v39 = v38 + (((v17 & v15) + v10 + v57) & v29);
  v40 = sub_2293B8A20();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (uint64_t)v28 + v39 + v42;
  v44 = ~v42;
  v45 = (unint64_t)v58 + v39 + v42;
  v46 = (const void *)(v45 & ~v42);
  v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  if (v59(v46, 1, v40))
  {
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
    if (v47)
      v49 = *(_QWORD *)(v41 + 64);
    else
      v49 = v48 + 1;
    memcpy((void *)(v43 & ~v42), v46, v49);
  }
  else
  {
    (*(void (**)(uint64_t, const void *, uint64_t))(v41 + 16))(v43 & ~v42, v46, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43 & ~v42, 0, 1, v40);
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
  }
  if (v47)
    v50 = v48;
  else
    v50 = v48 + 1;
  v51 = (void *)(((v43 | v42) + v50) & v44);
  v52 = (const void *)(((v45 | v42) + v50) & v44);
  if (v59(v52, 1, v40))
  {
    memcpy(v51, v52, v50);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v51, v52, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v51, 0, 1, v40);
  }
  return v56;
}

uint64_t sub_2293B72F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  size_t v21;
  uint64_t (*v22)(unint64_t, uint64_t, uint64_t);
  size_t v23;
  _QWORD *v24;
  int v25;
  int v26;
  _DWORD *v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  size_t v56;
  size_t v57;
  void *v58;
  const void *v59;
  int v60;
  int v61;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, unint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = ~(v9 | 7);
  v13 = (_DWORD *)((v11 + a1) & v12);
  v14 = (_DWORD *)((v11 + a2) & v12);
  *v13 = *v14;
  v69 = v13;
  v15 = ~v9;
  v16 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v66 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 24);
  v66(v16, ((unint64_t)v14 + v9 + 4) & ~v9, v7);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = (_QWORD *)((v17 + v10 + v16) & ~v10);
  v70 = v17;
  v19 = (_QWORD *)((v17 + v10 + (((unint64_t)v14 + v9 + 4) & ~v9)) & ~v10);
  v20 = *(unsigned int *)(v8 + 84);
  v21 = v17 + ((v9 + 16) & ~v9);
  v71 = a1;
  v72 = v14;
  v67 = v8;
  if ((_DWORD)v20)
  {
    v68 = ~(v9 | 7);
    v22 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v23 = v17 + ((v9 + 16) & ~v9);
    v24 = v18;
    v25 = v22((v9 + 8 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v26 = v22((v9 + 8 + (((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v18 = v24;
    v21 = v23;
    v27 = v69;
    v28 = ~v9;
    if (v25)
    {
      v12 = ~(v9 | 7);
      if (v26)
        goto LABEL_4;
      goto LABEL_61;
    }
    goto LABEL_28;
  }
  v31 = 8 * v21;
  v32 = v7;
  if (!*((_BYTE *)v18 + v21))
    goto LABEL_19;
  v33 = (*((unsigned __int8 *)v18 + v21) - 1) << v31;
  if (v21 > 3)
    v33 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v34 = v17 + ((v9 + 16) & ~(_DWORD)v9);
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_19:
    v27 = v69;
    v28 = ~v9;
    if (!*((_BYTE *)v19 + v21))
      goto LABEL_34;
    v35 = (*((unsigned __int8 *)v19 + v21) - 1) << v31;
    if (v21 > 3)
      v35 = 0;
    v68 = ~(v9 | 7);
    if ((_DWORD)v21)
    {
      if (v21 <= 3)
        v36 = v17 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v36 = 4;
      __asm { BR              X11 }
    }
    v26 = v35 + 1;
LABEL_28:
    v32 = v7;
    v12 = v68;
    if (v26)
    {
      v37 = v18;
      (*(void (**)(unint64_t, uint64_t))(v67 + 8))((v9 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v28, v7);
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v37;
      goto LABEL_33;
    }
LABEL_34:
    *v18 = *v19;
    v38 = (unint64_t)v18 + 15;
    v39 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF8) = *v39;
    v66((v9 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & v28, ((unint64_t)v39 + v9 + 8) & v28, v32);
    goto LABEL_35;
  }
  v27 = v69;
  v28 = ~v9;
  if (*((_BYTE *)v19 + v21))
  {
    v12 = ~(v9 | 7);
    if ((*((unsigned __int8 *)v19 + v21) - 1) << v31 != -1)
    {
LABEL_4:
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v18;
LABEL_33:
      memcpy(v30, v19, v29);
LABEL_35:
      v41 = v70;
      v40 = v9 + 4;
      v42 = v9 | 7;
      goto LABEL_36;
    }
  }
LABEL_61:
  *v18 = *v19;
  v63 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 16))(((unint64_t)v63 + v9 + 8) & v28, ((unint64_t)v64 + v9 + 8) & v28, v7);
  v41 = v70;
  v40 = v9 + 4;
  v42 = v9 | 7;
  if (!(_DWORD)v20)
    *((_BYTE *)v65 + v21) = 0;
LABEL_36:
  v43 = ((v40 & v28) + v42 + v41) & v12;
  if ((_DWORD)v20)
    v44 = v21;
  else
    v44 = v21 + 1;
  v45 = v44 + v43;
  v46 = sub_2293B8A20();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (uint64_t)v27 + v45 + v48;
  v50 = ~v48;
  v51 = (unint64_t)v72 + v45 + v48;
  v52 = (const void *)(v51 & ~v48);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  v54 = v53(v49 & ~v48, 1, v46);
  v55 = v53((uint64_t)v52, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 16))(v49 & ~v48, v52, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49 & ~v48, 0, 1, v46);
      goto LABEL_48;
    }
  }
  else
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 24))(v49 & ~v48, v52, v46);
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49 & ~v48, v46);
  }
  if (*(_DWORD *)(v47 + 84))
    v56 = *(_QWORD *)(v47 + 64);
  else
    v56 = *(_QWORD *)(v47 + 64) + 1;
  memcpy((void *)(v49 & ~v48), v52, v56);
LABEL_48:
  if (*(_DWORD *)(v47 + 84))
    v57 = *(_QWORD *)(v47 + 64);
  else
    v57 = *(_QWORD *)(v47 + 64) + 1;
  v58 = (void *)(((v49 | v48) + v57) & v50);
  v59 = (const void *)(((v51 | v48) + v57) & v50);
  v60 = v53((uint64_t)v58, 1, v46);
  v61 = v53((uint64_t)v59, 1, v46);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 24))(v58, v59, v46);
      return v71;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v58, v46);
    goto LABEL_56;
  }
  if (v61)
  {
LABEL_56:
    memcpy(v58, v59, v57);
    return v71;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v58, v59, v46);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
  return v71;
}

uint64_t sub_2293B789C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  size_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const void *v46;
  int v47;
  size_t v48;
  size_t v49;
  size_t v50;
  void *v51;
  const void *v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v56 = a1;
  v12 = (_DWORD *)((v11 + a1) & ~(v9 | 7));
  v13 = (_DWORD *)((v11 + a2) & ~(v9 | 7));
  *v12 = *v13;
  v14 = v12;
  v15 = ~v9;
  v16 = ((unint64_t)v12 + v9 + 4) & ~v9;
  v58 = v13;
  v17 = v9 + 4;
  v18 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v54(v16, v18, v7);
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v19 + (v9 | 7) + v16;
  v21 = (_QWORD *)(v20 & ~(v9 | 7));
  v22 = (_QWORD *)((v19 + v10 + v18) & ~v10);
  v23 = *(unsigned int *)(v8 + 84);
  v24 = v19 + ((v9 + 16) & ~v9);
  v55 = v7;
  v57 = v19;
  if (!(_DWORD)v23)
  {
    v28 = v14;
    v29 = ~(v9 | 7);
    if (!*((_BYTE *)v22 + v24))
      goto LABEL_17;
    v30 = (*((unsigned __int8 *)v22 + v24) - 1) << (8 * v24);
    if (v24 > 3)
      v30 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v31 = v19 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v31 = 4;
      __asm { BR              X11 }
    }
    if (v30 == -1)
      goto LABEL_17;
LABEL_13:
    if ((_DWORD)v23)
      v32 = v24;
    else
      v32 = v24 + 1;
    memcpy(v21, v22, v32);
    goto LABEL_19;
  }
  v25 = v7;
  v26 = (_QWORD *)(v20 & ~v10);
  v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))((v9 + (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v15, v23, v25);
  v21 = v26;
  v28 = v14;
  v29 = ~(v9 | 7);
  if (v27)
    goto LABEL_13;
LABEL_17:
  *v21 = *v22;
  v33 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = ((unint64_t)v33 + v9 + 8) & v15;
  v36 = ((unint64_t)v34 + v9 + 8) & v15;
  v37 = v21;
  v54(v35, v36, v55);
  if (!(_DWORD)v23)
    *((_BYTE *)v37 + v24) = 0;
LABEL_19:
  if ((_DWORD)v23)
    v38 = v24;
  else
    v38 = v24 + 1;
  v39 = v38 + (((v17 & v15) + v10 + v57) & v29);
  v40 = sub_2293B8A20();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (uint64_t)v28 + v39 + v42;
  v44 = ~v42;
  v45 = (unint64_t)v58 + v39 + v42;
  v46 = (const void *)(v45 & ~v42);
  v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  if (v59(v46, 1, v40))
  {
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
    if (v47)
      v49 = *(_QWORD *)(v41 + 64);
    else
      v49 = v48 + 1;
    memcpy((void *)(v43 & ~v42), v46, v49);
  }
  else
  {
    (*(void (**)(uint64_t, const void *, uint64_t))(v41 + 32))(v43 & ~v42, v46, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43 & ~v42, 0, 1, v40);
    v47 = *(_DWORD *)(v41 + 84);
    v48 = *(_QWORD *)(v41 + 64);
  }
  if (v47)
    v50 = v48;
  else
    v50 = v48 + 1;
  v51 = (void *)(((v43 | v42) + v50) & v44);
  v52 = (const void *)(((v45 | v42) + v50) & v44);
  if (v59(v52, 1, v40))
  {
    memcpy(v51, v52, v50);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v51, v52, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v51, 0, 1, v40);
  }
  return v56;
}

uint64_t sub_2293B7C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  size_t v21;
  uint64_t (*v22)(unint64_t, uint64_t, uint64_t);
  size_t v23;
  _QWORD *v24;
  int v25;
  int v26;
  _DWORD *v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  size_t v56;
  size_t v57;
  void *v58;
  const void *v59;
  int v60;
  int v61;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, unint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2293B8B7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = ~(v9 | 7);
  v13 = (_DWORD *)((v11 + a1) & v12);
  v14 = (_DWORD *)((v11 + a2) & v12);
  *v13 = *v14;
  v69 = v13;
  v15 = ~v9;
  v16 = ((unint64_t)v13 + v9 + 4) & ~v9;
  v66 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 40);
  v66(v16, ((unint64_t)v14 + v9 + 4) & ~v9, v7);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = (_QWORD *)((v17 + v10 + v16) & ~v10);
  v70 = v17;
  v19 = (_QWORD *)((v17 + v10 + (((unint64_t)v14 + v9 + 4) & ~v9)) & ~v10);
  v20 = *(unsigned int *)(v8 + 84);
  v21 = v17 + ((v9 + 16) & ~v9);
  v71 = a1;
  v72 = v14;
  v67 = v8;
  if ((_DWORD)v20)
  {
    v68 = ~(v9 | 7);
    v22 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v23 = v17 + ((v9 + 16) & ~v9);
    v24 = v18;
    v25 = v22((v9 + 8 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v26 = v22((v9 + 8 + (((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8)) & v15, v20, v7);
    v18 = v24;
    v21 = v23;
    v27 = v69;
    v28 = ~v9;
    if (v25)
    {
      v12 = ~(v9 | 7);
      if (v26)
        goto LABEL_4;
      goto LABEL_61;
    }
    goto LABEL_28;
  }
  v31 = 8 * v21;
  v32 = v7;
  if (!*((_BYTE *)v18 + v21))
    goto LABEL_19;
  v33 = (*((unsigned __int8 *)v18 + v21) - 1) << v31;
  if (v21 > 3)
    v33 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v34 = v17 + ((v9 + 16) & ~(_DWORD)v9);
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_19:
    v27 = v69;
    v28 = ~v9;
    if (!*((_BYTE *)v19 + v21))
      goto LABEL_34;
    v35 = (*((unsigned __int8 *)v19 + v21) - 1) << v31;
    if (v21 > 3)
      v35 = 0;
    v68 = ~(v9 | 7);
    if ((_DWORD)v21)
    {
      if (v21 <= 3)
        v36 = v17 + ((v9 + 16) & ~(_DWORD)v9);
      else
        v36 = 4;
      __asm { BR              X11 }
    }
    v26 = v35 + 1;
LABEL_28:
    v32 = v7;
    v12 = v68;
    if (v26)
    {
      v37 = v18;
      (*(void (**)(unint64_t, uint64_t))(v67 + 8))((v9 + (((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v28, v7);
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v37;
      goto LABEL_33;
    }
LABEL_34:
    *v18 = *v19;
    v38 = (unint64_t)v18 + 15;
    v39 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF8) = *v39;
    v66((v9 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & v28, ((unint64_t)v39 + v9 + 8) & v28, v32);
    goto LABEL_35;
  }
  v27 = v69;
  v28 = ~v9;
  if (*((_BYTE *)v19 + v21))
  {
    v12 = ~(v9 | 7);
    if ((*((unsigned __int8 *)v19 + v21) - 1) << v31 != -1)
    {
LABEL_4:
      if ((_DWORD)v20)
        v29 = v21;
      else
        v29 = v21 + 1;
      v30 = v18;
LABEL_33:
      memcpy(v30, v19, v29);
LABEL_35:
      v41 = v70;
      v40 = v9 + 4;
      v42 = v9 | 7;
      goto LABEL_36;
    }
  }
LABEL_61:
  *v18 = *v19;
  v63 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 32))(((unint64_t)v63 + v9 + 8) & v28, ((unint64_t)v64 + v9 + 8) & v28, v7);
  v41 = v70;
  v40 = v9 + 4;
  v42 = v9 | 7;
  if (!(_DWORD)v20)
    *((_BYTE *)v65 + v21) = 0;
LABEL_36:
  v43 = ((v40 & v28) + v42 + v41) & v12;
  if ((_DWORD)v20)
    v44 = v21;
  else
    v44 = v21 + 1;
  v45 = v44 + v43;
  v46 = sub_2293B8A20();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (uint64_t)v27 + v45 + v48;
  v50 = ~v48;
  v51 = (unint64_t)v72 + v45 + v48;
  v52 = (const void *)(v51 & ~v48);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  v54 = v53(v49 & ~v48, 1, v46);
  v55 = v53((uint64_t)v52, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 32))(v49 & ~v48, v52, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49 & ~v48, 0, 1, v46);
      goto LABEL_48;
    }
  }
  else
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v47 + 40))(v49 & ~v48, v52, v46);
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49 & ~v48, v46);
  }
  if (*(_DWORD *)(v47 + 84))
    v56 = *(_QWORD *)(v47 + 64);
  else
    v56 = *(_QWORD *)(v47 + 64) + 1;
  memcpy((void *)(v49 & ~v48), v52, v56);
LABEL_48:
  if (*(_DWORD *)(v47 + 84))
    v57 = *(_QWORD *)(v47 + 64);
  else
    v57 = *(_QWORD *)(v47 + 64) + 1;
  v58 = (void *)(((v49 | v48) + v57) & v50);
  v59 = (const void *)(((v51 | v48) + v57) & v50);
  v60 = v53((uint64_t)v58, 1, v46);
  v61 = v53((uint64_t)v59, 1, v46);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 40))(v58, v59, v46);
      return v71;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v58, v46);
    goto LABEL_56;
  }
  if (v61)
  {
LABEL_56:
    memcpy(v58, v59, v57);
    return v71;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v58, v59, v46);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
  return v71;
}

uint64_t sub_2293B81A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_2293B8B7C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(sub_2293B8A20() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v14 <= v11)
    v14 = v11;
  v15 = *(_QWORD *)(v9 + 64);
  if ((_DWORD)v10)
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = v15 + 1;
  if (v13)
    v17 = *(_QWORD *)(v12 + 64);
  else
    v17 = *(_QWORD *)(v12 + 64) + 1;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = v18 | 7;
  v20 = (v18 | 7) + *(_QWORD *)(v6 + 64);
  v21 = v16 + ((v18 + 16) & ~v18) + (((v18 | 7) + v15 + ((v18 + 4) & ~v18)) & ~(v18 | 7));
  v22 = *(unsigned __int8 *)(v12 + 80);
  if (a2 <= v14)
    goto LABEL_33;
  v23 = ((v17 + v22 + ((v21 + v22 + (v20 & ~v19)) & ~v22)) & ~v22) + v17;
  v24 = 8 * v23;
  if (v23 > 3)
    goto LABEL_17;
  v26 = ((a2 - v14 + ~(-1 << v24)) >> v24) + 1;
  if (HIWORD(v26))
  {
    v25 = *(_DWORD *)(a1 + v23);
    if (!v25)
      goto LABEL_33;
    goto LABEL_24;
  }
  if (v26 > 0xFF)
  {
    v25 = *(unsigned __int16 *)(a1 + v23);
    if (!*(_WORD *)(a1 + v23))
      goto LABEL_33;
    goto LABEL_24;
  }
  if (v26 >= 2)
  {
LABEL_17:
    v25 = *(unsigned __int8 *)(a1 + v23);
    if (!*(_BYTE *)(a1 + v23))
      goto LABEL_33;
LABEL_24:
    v27 = (v25 - 1) << v24;
    if (v23 > 3)
      v27 = 0;
    if ((_DWORD)v23)
    {
      if (v23 <= 3)
        v28 = v23;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    return v14 + v27 + 1;
  }
LABEL_33:
  if (!v14)
    return 0;
  if ((_DWORD)v7 == v14)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v30 = a1;
    v31 = v7;
    v32 = v5;
    return v29(v30, v31, v32);
  }
  v33 = (v20 + a1) & ~v19;
  if ((_DWORD)v10 == v14)
  {
    v30 = (v18 + 4 + v33) & ~v18;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v31 = v10;
    v32 = v8;
    return v29(v30, v31, v32);
  }
  v34 = (*(uint64_t (**)(uint64_t))(v12 + 48))((v33 + v22 + v21) & ~v22);
  if (v34 >= 2)
    return v34 - 1;
  else
    return 0;
}

void sub_2293B8414(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2293B8B7C() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = 0;
  v13 = *(_QWORD *)(sub_2293B8A20() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = v14 - 1;
  if (!v14)
    v15 = 0;
  if (v15 <= v11)
    v16 = v11;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v9 + 64);
  if (v10)
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = v17 + 1;
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = v18 + ((v19 + 16) & ~v19) + (((v19 | 7) + v17 + ((v19 + 4) & ~v19)) & ~(v19 | 7));
  v21 = *(unsigned __int8 *)(v13 + 80);
  if (v14)
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v23 = ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22;
  if (a3 > v16)
  {
    if (v23 > 3)
    {
      v12 = 1u;
      if (v16 >= a2)
LABEL_31:
        __asm { BR              X5 }
LABEL_24:
      v25 = ~v16 + a2;
      if (v23 < 4)
      {
        if ((_DWORD)v23)
        {
          v26 = v25 & ~(-1 << (8 * v23));
          bzero(a1, ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22);
          if ((_DWORD)v23 == 3)
          {
            *(_WORD *)a1 = v26;
            a1[2] = BYTE2(v26);
          }
          else if ((_DWORD)v23 == 2)
          {
            *(_WORD *)a1 = v26;
          }
          else
          {
            *a1 = v26;
          }
        }
      }
      else
      {
        bzero(a1, ((v22 + v21 + ((v20 + v21 + (((v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v19 | 7))) & ~v21)) & ~v21) + v22);
        *(_DWORD *)a1 = v25;
      }
      __asm { BR              X10 }
    }
    v24 = ((a3 - v16 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      v12 = 4u;
      if (v16 >= a2)
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v24 >= 0x100)
      v12 = 2;
    else
      v12 = v24 > 1;
  }
  if (v16 >= a2)
    goto LABEL_31;
  goto LABEL_24;
}

void sub_2293B8708()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_2293B8710()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_2293B8768()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2293B8778()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2293B8780()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_2293B878C()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_2293B879C()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_2293B87AC()
{
  JUMPOUT(0x22E2C85DCLL);
}

void type metadata accessor for SyncedDictionary.Element.CodingKeys()
{
  JUMPOUT(0x22E2C857CLL);
}

uint64_t sub_2293B87C8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2293B87F0@<X0>(_DWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2293B136C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2293B880C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_2293689E4(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2293B8824(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2293B8870 + 4 * byte_2293BD53D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2293B88A4 + 4 * byte_2293BD538[v4]))();
}

uint64_t sub_2293B88A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293B88AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2293B88B4);
  return result;
}

uint64_t sub_2293B88C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2293B88C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2293B88CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2293B88D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_2293B88E0()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_2293B88F0()
{
  JUMPOUT(0x22E2C85DCLL);
}

void sub_2293B8900()
{
  JUMPOUT(0x22E2C85DCLL);
}

uint64_t sub_2293B8910@<X0>(_DWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2293B87F0(a1, a2);
}

uint64_t sub_2293B8924()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2293B8930()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2293B893C()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_2293B8948()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_2293B8954()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_2293B8960()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_2293B896C()
{
  return MEMORY[0x24BDCCA58]();
}

uint64_t sub_2293B8978()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_2293B8984()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_2293B8990()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_2293B899C()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_2293B89A8()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_2293B89B4()
{
  return MEMORY[0x24BDCDD68]();
}

uint64_t sub_2293B89C0()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_2293B89CC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2293B89D8()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_2293B89E4()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2293B89F0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_2293B89FC()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_2293B8A08()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_2293B8A14()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2293B8A20()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2293B8A2C()
{
  return MEMORY[0x24BE19F90]();
}

uint64_t sub_2293B8A38()
{
  return MEMORY[0x24BE19F98]();
}

uint64_t sub_2293B8A44()
{
  return MEMORY[0x24BE19FA0]();
}

uint64_t sub_2293B8A50()
{
  return MEMORY[0x24BE19FA8]();
}

uint64_t sub_2293B8A5C()
{
  return MEMORY[0x24BE19FB0]();
}

uint64_t sub_2293B8A68()
{
  return MEMORY[0x24BE19FB8]();
}

uint64_t sub_2293B8A74()
{
  return MEMORY[0x24BDD1CF0]();
}

uint64_t sub_2293B8A80()
{
  return MEMORY[0x24BDD1CF8]();
}

uint64_t sub_2293B8A8C()
{
  return MEMORY[0x24BDD1D08]();
}

uint64_t sub_2293B8A98()
{
  return MEMORY[0x24BDD1D20]();
}

uint64_t sub_2293B8AA4()
{
  return MEMORY[0x24BDD1D28]();
}

uint64_t sub_2293B8AB0()
{
  return MEMORY[0x24BDD1D60]();
}

uint64_t sub_2293B8ABC()
{
  return MEMORY[0x24BDD1DD8]();
}

uint64_t sub_2293B8AC8()
{
  return MEMORY[0x24BDD1DF0]();
}

uint64_t sub_2293B8AD4()
{
  return MEMORY[0x24BDD1DF8]();
}

uint64_t sub_2293B8AE0()
{
  return MEMORY[0x24BDD1E00]();
}

uint64_t sub_2293B8AEC()
{
  return MEMORY[0x24BDD1E08]();
}

uint64_t sub_2293B8AF8()
{
  return MEMORY[0x24BDD1E10]();
}

uint64_t sub_2293B8B04()
{
  return MEMORY[0x24BDD1E28]();
}

uint64_t sub_2293B8B10()
{
  return MEMORY[0x24BDD1E40]();
}

uint64_t sub_2293B8B1C()
{
  return MEMORY[0x24BDD1E58]();
}

uint64_t sub_2293B8B28()
{
  return MEMORY[0x24BDD1E60]();
}

uint64_t sub_2293B8B34()
{
  return MEMORY[0x24BDD1EF0]();
}

uint64_t sub_2293B8B40()
{
  return MEMORY[0x24BDD1F00]();
}

uint64_t sub_2293B8B4C()
{
  return MEMORY[0x24BDD1F60]();
}

uint64_t sub_2293B8B58()
{
  return MEMORY[0x24BDD1F68]();
}

uint64_t sub_2293B8B64()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t sub_2293B8B70()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_2293B8B7C()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_2293B8B88()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_2293B8B94()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_2293B8BA0()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_2293B8BAC()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_2293B8BB8()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_2293B8BC4()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_2293B8BD0()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_2293B8BDC()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t sub_2293B8BE8()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t sub_2293B8BF4()
{
  return MEMORY[0x24BE5C080]();
}

uint64_t sub_2293B8C00()
{
  return MEMORY[0x24BE5C0A8]();
}

uint64_t sub_2293B8C0C()
{
  return MEMORY[0x24BE5C0F0]();
}

uint64_t sub_2293B8C18()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_2293B8C24()
{
  return MEMORY[0x24BE5C130]();
}

uint64_t sub_2293B8C30()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_2293B8C3C()
{
  return MEMORY[0x24BE5C158]();
}

uint64_t sub_2293B8C48()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_2293B8C54()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_2293B8C60()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_2293B8C6C()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_2293B8C78()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_2293B8C84()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_2293B8C90()
{
  return MEMORY[0x24BE5C1F8]();
}

uint64_t sub_2293B8C9C()
{
  return MEMORY[0x24BE5C258]();
}

uint64_t sub_2293B8CA8()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_2293B8CB4()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_2293B8CC0()
{
  return MEMORY[0x24BE5C280]();
}

uint64_t sub_2293B8CCC()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t sub_2293B8CD8()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_2293B8CE4()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_2293B8CF0()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_2293B8CFC()
{
  return MEMORY[0x24BE5C308]();
}

uint64_t sub_2293B8D08()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_2293B8D14()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_2293B8D20()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_2293B8D2C()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_2293B8D38()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_2293B8D44()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2293B8D50()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2293B8D5C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2293B8D68()
{
  return MEMORY[0x24BDB99F8]();
}

uint64_t sub_2293B8D74()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_2293B8D80()
{
  return MEMORY[0x24BDB9B60]();
}

uint64_t sub_2293B8D8C()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_2293B8D98()
{
  return MEMORY[0x24BDB9C80]();
}

uint64_t sub_2293B8DA4()
{
  return MEMORY[0x24BDB9C88]();
}

uint64_t sub_2293B8DB0()
{
  return MEMORY[0x24BDB9C98]();
}

uint64_t sub_2293B8DBC()
{
  return MEMORY[0x24BDB9CD0]();
}

uint64_t sub_2293B8DC8()
{
  return MEMORY[0x24BDB9CD8]();
}

uint64_t sub_2293B8DD4()
{
  return MEMORY[0x24BDB9D00]();
}

uint64_t sub_2293B8DE0()
{
  return MEMORY[0x24BDB9ED8]();
}

uint64_t sub_2293B8DEC()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_2293B8DF8()
{
  return MEMORY[0x24BDB9F30]();
}

uint64_t sub_2293B8E04()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_2293B8E10()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_2293B8E1C()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2293B8E28()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_2293B8E34()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2293B8E40()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2293B8E4C()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_2293B8E58()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_2293B8E64()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_2293B8E70()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_2293B8E7C()
{
  return MEMORY[0x24BEE01C0]();
}

uint64_t sub_2293B8E88()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_2293B8E94()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_2293B8EA0()
{
  return MEMORY[0x24BEE0300]();
}

uint64_t sub_2293B8EAC()
{
  return MEMORY[0x24BEE0370]();
}

uint64_t sub_2293B8EB8()
{
  return MEMORY[0x24BEE0398]();
}

uint64_t sub_2293B8EC4()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_2293B8ED0()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_2293B8EDC()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_2293B8EE8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2293B8EF4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2293B8F00()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2293B8F0C()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_2293B8F18()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2293B8F24()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2293B8F30()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2293B8F3C()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_2293B8F48()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_2293B8F54()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_2293B8F60()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_2293B8F6C()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_2293B8F78()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_2293B8F84()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_2293B8F90()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_2293B8F9C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_2293B8FA8()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_2293B8FB4()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_2293B8FC0()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_2293B8FCC()
{
  return MEMORY[0x24BEE1228]();
}

uint64_t sub_2293B8FD8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2293B8FE4()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_2293B8FF0()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_2293B8FFC()
{
  return MEMORY[0x24BEE15A8]();
}

uint64_t sub_2293B9008()
{
  return MEMORY[0x24BEE1628]();
}

uint64_t sub_2293B9014()
{
  return MEMORY[0x24BEE1648]();
}

uint64_t sub_2293B9020()
{
  return MEMORY[0x24BEE1658]();
}

uint64_t sub_2293B902C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_2293B9038()
{
  return MEMORY[0x24BEE1690]();
}

uint64_t sub_2293B9044()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_2293B9050()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_2293B905C()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_2293B9068()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_2293B9074()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_2293B9080()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_2293B908C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2293B9098()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2293B90A4()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2293B90B0()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2293B90BC()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_2293B90C8()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_2293B90D4()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_2293B90E0()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2293B90EC()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2293B90F8()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_2293B9104()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2293B9110()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2293B911C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2293B9128()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2293B9134()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2293B9140()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_2293B914C()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2293B9158()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_2293B9164()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2293B9170()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2293B917C()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_2293B9188()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2293B9194()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2293B91A0()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_2293B91AC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2293B91B8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2293B91C4()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_2293B91D0()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_2293B91DC()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_2293B91E8()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_2293B91F4()
{
  return MEMORY[0x24BEE2B80]();
}

uint64_t sub_2293B9200()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2293B920C()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_2293B9218()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_2293B9224()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2293B9230()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2293B923C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2293B9248()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2293B9254()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2293B9260()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2293B926C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2293B9278()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t sub_2293B9284()
{
  return MEMORY[0x24BEE32B0]();
}

uint64_t sub_2293B9290()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2293B929C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2293B92A8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2293B92B4()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_2293B92C0()
{
  return MEMORY[0x24BEE3400]();
}

uint64_t sub_2293B92CC()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2293B92D8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2293B92E4()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2293B92F0()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_2293B92FC()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_2293B9308()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2293B9314()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_2293B9320()
{
  return MEMORY[0x24BEE3638]();
}

uint64_t sub_2293B932C()
{
  return MEMORY[0x24BEE3668]();
}

uint64_t sub_2293B9338()
{
  return MEMORY[0x24BEE3788]();
}

uint64_t sub_2293B9344()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_2293B9350()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2293B935C()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_2293B9368()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_2293B9374()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_2293B9380()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2293B938C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2293B9398()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2293B93A4()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2293B93B0()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2293B93BC()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_2293B93C8()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2293B93D4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2293B93E0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2293B93EC()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2293B93F8()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2293B9404()
{
  return MEMORY[0x24BEE4358]();
}

uint64_t sub_2293B9410()
{
  return MEMORY[0x24BEE43D0]();
}

uint64_t sub_2293B941C()
{
  return MEMORY[0x24BEE43D8]();
}

uint64_t sub_2293B9428()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_2293B9434()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2293B9440()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_2293B944C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2293B9458()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2293B9464()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2293B9470()
{
  return MEMORY[0x24BEE4A98]();
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC2C0](rl, observer, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC2F8]();
}

CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void *block)
{
  return (CFRunLoopObserverRef)MEMORY[0x24BDBC328](allocator, activities, repeats, order, block);
}

void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC340](rl, observer, mode);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x24BEE5018]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x24BEE5020]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x24BEE5040]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x24BEE5048]();
}

