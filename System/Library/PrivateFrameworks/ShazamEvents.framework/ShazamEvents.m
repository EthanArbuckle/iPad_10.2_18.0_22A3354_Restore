id SHShazamEventsServiceInterface()
{
  if (SHShazamEventsServiceInterface_onceToken != -1)
    dispatch_once(&SHShazamEventsServiceInterface_onceToken, &__block_literal_global);
  return (id)SHShazamEventsServiceInterface_interface;
}

id SHShazamEventsClientInterface()
{
  if (SHShazamEventsClientInterface_onceToken[0] != -1)
    dispatch_once(SHShazamEventsClientInterface_onceToken, &__block_literal_global_7);
  return (id)SHShazamEventsClientInterface_interface;
}

uint64_t sub_227945118()
{
  return 1;
}

uint64_t sub_227945120()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_227945160()
{
  return sub_22799F4C0();
}

uint64_t sub_227945184()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_2279451C0()
{
  return 1701667182;
}

uint64_t sub_2279451D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227945254()
{
  return 0;
}

void sub_227945260(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22794526C()
{
  sub_227945780();
  return sub_22799F52C();
}

uint64_t sub_227945294()
{
  sub_227945780();
  return sub_22799F538();
}

uint64_t sub_2279452BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903D18);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227945780();
  sub_22799F520();
  v11[0] = a2;
  v11[1] = a3;
  sub_227945828();
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

_QWORD *sub_2279453C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_2279455F8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_2279453E8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2279452BC(a1, *v1, v1[1]);
}

_QWORD *initializeBufferWithCopyOfBuffer for RequiredCodingString(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RequiredCodingString()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for RequiredCodingString(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for RequiredCodingString(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequiredCodingString(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequiredCodingString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreAttributes()
{
  return &type metadata for GenreAttributes;
}

unint64_t sub_227945544(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_227945570();
  result = sub_2279455B4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_227945570()
{
  unint64_t result;

  result = qword_255903CF0;
  if (!qword_255903CF0)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FC98, &type metadata for GenreAttributes);
    atomic_store(result, (unint64_t *)&qword_255903CF0);
  }
  return result;
}

unint64_t sub_2279455B4()
{
  unint64_t result;

  result = qword_255903CF8;
  if (!qword_255903CF8)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FC70, &type metadata for GenreAttributes);
    atomic_store(result, (unint64_t *)&qword_255903CF8);
  }
  return result;
}

_QWORD *sub_2279455F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903D00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227945780();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_2279457E4();
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2A115C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_227945780()
{
  unint64_t result;

  result = qword_255903D08;
  if (!qword_255903D08)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FDA0, &type metadata for GenreAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903D08);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_2279457E4()
{
  unint64_t result;

  result = qword_255903D10;
  if (!qword_255903D10)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4704, &type metadata for RequiredCodingString);
    atomic_store(result, (unint64_t *)&qword_255903D10);
  }
  return result;
}

unint64_t sub_227945828()
{
  unint64_t result;

  result = qword_255903D20;
  if (!qword_255903D20)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A46DC, &type metadata for RequiredCodingString);
    atomic_store(result, (unint64_t *)&qword_255903D20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GenreAttributes.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for GenreAttributes.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_227945904 + 4 * byte_22799FC48[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227945924 + 4 * byte_22799FC4D[v4]))();
}

_BYTE *sub_227945904(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227945924(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22794592C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227945934(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22794593C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227945944(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_227945950()
{
  return 0;
}

ValueMetadata *type metadata accessor for GenreAttributes.CodingKeys()
{
  return &type metadata for GenreAttributes.CodingKeys;
}

unint64_t sub_227945970()
{
  unint64_t result;

  result = qword_255903D28;
  if (!qword_255903D28)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FD78, &type metadata for GenreAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903D28);
  }
  return result;
}

unint64_t sub_2279459B8()
{
  unint64_t result;

  result = qword_255903D30;
  if (!qword_255903D30)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FCE8, &type metadata for GenreAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903D30);
  }
  return result;
}

unint64_t sub_227945A00()
{
  unint64_t result;

  result = qword_255903D38;
  if (!qword_255903D38)
  {
    result = MEMORY[0x22E2A1174](&unk_22799FD10, &type metadata for GenreAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903D38);
  }
  return result;
}

uint64_t EventsError.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_227945A80 + 4 * byte_22799FDF0[*v0]))(0xD00000000000001BLL, 0x80000002279A6E30);
}

unint64_t sub_227945A80()
{
  return 0xD000000000000014;
}

uint64_t sub_227945A9C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 15;
}

ShazamEvents::EventsError_optional __swiftcall EventsError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ShazamEvents::EventsError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22799F34C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EventsError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227945B64 + 4 * byte_22799FDF5[*v0]))(0x44676E697373696DLL, 0xEB00000000617461);
}

uint64_t sub_227945B64()
{
  return 0x4464696C61766E69;
}

unint64_t sub_227945B78()
{
  return 0xD000000000000012;
}

uint64_t sub_227945B94()
{
  return 0x456B726F7774656ELL;
}

uint64_t sub_227945BB4()
{
  return 0x5264696C61766E69;
}

void sub_227945BD8(char *a1)
{
  sub_227946180(*a1);
}

unint64_t sub_227945BE8()
{
  unint64_t result;

  result = qword_255903DA0;
  if (!qword_255903DA0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for EventsError, &type metadata for EventsError);
    atomic_store(result, (unint64_t *)&qword_255903DA0);
  }
  return result;
}

uint64_t sub_227945C2C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000065;
  v3 = 0x6D69547472617473;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x656D6954646E65;
    else
      v5 = 0x656E6F7A656D6974;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xE800000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6D69547472617473;
  v6 = 0xE900000000000065;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x656D6954646E65;
    else
      v3 = 0x656E6F7A656D6974;
    if (v7 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xE800000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_227945D44(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5577656976657270;
  else
    v3 = 7107189;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xEA00000000006C72;
  if ((a2 & 1) != 0)
    v5 = 0x5577656976657270;
  else
    v5 = 7107189;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006C72;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_227945DE4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C746974;
    else
      v3 = 0x747369747261;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C746974;
      else
        v6 = 0x747369747261;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x64496D616461;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x64496D616461)
  {
LABEL_21:
    v8 = sub_22799F430();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_227945EE4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_227945F34(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_227945F88 + 4 * byte_22799FDFE[a2]))(0x6874646977);
}

uint64_t sub_227945F88(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6874646977 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_227946020(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_227946060(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2279460CC + 4 * byte_22799FE07[a2]))(0x6C7255736C68);
}

uint64_t sub_2279460CC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C7255736C68 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_227946180(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2279461E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_227946270 + 4 * byte_22799FE11[a2]))(0x4464696C61766E69);
}

uint64_t sub_227946270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x4464696C61766E69 && v2 == v1)
    v3 = 1;
  else
    v3 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_227946348()
{
  char *v0;

  sub_227946350(*v0);
}

void sub_227946350(char a1)
{
  sub_22799F4B4();
  __asm { BR              X10 }
}

uint64_t sub_2279463A8()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

void sub_227946444()
{
  __asm { BR              X10 }
}

uint64_t sub_227946488()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

void sub_227946510(uint64_t a1)
{
  char *v1;

  sub_227946518(a1, *v1);
}

void sub_227946518(uint64_t a1, char a2)
{
  sub_22799F4B4();
  __asm { BR              X10 }
}

uint64_t sub_22794656C()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

ShazamEvents::EventsError_optional sub_227946608(Swift::String *a1)
{
  return EventsError.init(rawValue:)(*a1);
}

uint64_t sub_227946614()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_22794664C + 4 * byte_22799FE25[*v0]))();
}

void sub_22794664C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x4464696C61766E69;
  a1[1] = v1;
}

void sub_227946664(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000002279A6B00;
}

void sub_227946684(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "networkError");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_2279466A8(char *a1@<X8>)
{
  strcpy(a1, "invalidRequest");
  a1[15] = -18;
}

unint64_t sub_2279466D4()
{
  unint64_t result;

  result = qword_255903DA8;
  if (!qword_255903DA8)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for EventsError, &type metadata for EventsError);
    atomic_store(result, (unint64_t *)&qword_255903DA8);
  }
  return result;
}

uint64_t sub_22794672C()
{
  sub_22794695C();
  return sub_22799F190();
}

uint64_t sub_227946788()
{
  sub_22794695C();
  return sub_22799F160();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EventsError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2279468CC + 4 * byte_22799FE2F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_227946900 + 4 * byte_22799FE2A[v4]))();
}

uint64_t sub_227946900(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227946908(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227946910);
  return result;
}

uint64_t sub_22794691C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227946924);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_227946928(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227946930(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22794693C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_227946944(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EventsError()
{
  return &type metadata for EventsError;
}

unint64_t sub_22794695C()
{
  unint64_t result;

  result = qword_255903DB0[0];
  if (!qword_255903DB0[0])
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for EventsError, &type metadata for EventsError);
    atomic_store(result, qword_255903DB0);
  }
  return result;
}

uint64_t Schedule.owners.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schedule.events.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_2279469B0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2279469C0()
{
  return sub_22799F4C0();
}

uint64_t sub_2279469E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7372656E776FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227946AC4()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_227946B08(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E657665;
  else
    return 0x7372656E776FLL;
}

BOOL sub_227946B30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2279469B0(*a1, *a2);
}

uint64_t sub_227946B48()
{
  return sub_227946AC4();
}

uint64_t sub_227946B5C()
{
  return sub_2279469C0();
}

uint64_t sub_227946B70()
{
  sub_22799F4B4();
  sub_2279469C0();
  return sub_22799F4E4();
}

uint64_t sub_227946BB8()
{
  char *v0;

  return sub_227946B08(*v0);
}

uint64_t sub_227946BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2279469E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227946BFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22794777C();
  *a1 = result;
  return result;
}

uint64_t sub_227946C2C(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A01D8, a1);
  return sub_22799F52C();
}

uint64_t sub_227946C60(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A01D8, a1);
  return sub_22799F538();
}

uint64_t Schedule.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  sub_22799F1B4();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for Event(0, v3, *(_QWORD *)(a2 + 24), v4);
  swift_bridgeObjectRetain();
  MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v5);
  sub_22799F1B4();
  return swift_bridgeObjectRelease();
}

uint64_t static Schedule.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if ((sub_22799F1C0() & 1) == 0)
    return 0;
  v7 = type metadata accessor for Event(0, a3, a4, v6);
  MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v7);
  return sub_22799F1C0();
}

uint64_t Schedule.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v4 = a2[3];
  v5 = a2[4];
  v24 = a2[2];
  v25 = v5;
  v23 = v4;
  v6 = type metadata accessor for Schedule.CodingKeys(255, v24, v4, v5);
  MEMORY[0x22E2A1174](&unk_2279A01D8, v6);
  v7 = sub_22799F40C();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v21 - v8;
  v10 = *v2;
  v22 = v2[1];
  v11 = a1[3];
  v12 = a1;
  v13 = v24;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_22799F520();
  v31 = v10;
  v30 = 0;
  swift_getAssociatedTypeWitness();
  v14 = sub_22799F1A8();
  v29 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 16);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v14, &v29);
  v15 = v27;
  sub_22799F400();
  if (v15)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  v18 = v26;
  v31 = v22;
  v30 = 1;
  v19 = type metadata accessor for Event(255, v13, v23, v16);
  v20 = sub_22799F1A8();
  v28 = MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v19);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v20, &v28);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v7);
}

uint64_t Schedule.hashValue.getter(uint64_t a1)
{
  __int128 *v1;
  _BYTE v4[72];
  __int128 v5;

  v5 = *v1;
  sub_22799F4B4();
  Schedule.hash(into:)((uint64_t)v4, a1);
  return sub_22799F4E4();
}

uint64_t Schedule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v25 = a5;
  v26 = a4;
  v27 = a2;
  v8 = type metadata accessor for Schedule.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2A1174](&unk_2279A01D8, v8);
  v29 = sub_22799F3AC();
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v23 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v28 = v11;
  sub_22799F508();
  if (v5)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = a1;
  v12 = a3;
  v13 = v27;
  swift_getAssociatedTypeWitness();
  v14 = sub_22799F1A8();
  v32 = 0;
  v31 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v14, &v31);
  v15 = v28;
  sub_22799F3A0();
  v16 = v33;
  v18 = type metadata accessor for Event(255, v13, v12, v17);
  v19 = sub_22799F1A8();
  v32 = 1;
  swift_bridgeObjectRetain();
  v30 = MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v18);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v19, &v30);
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v29);
  v20 = v33;
  v21 = v25;
  *v25 = v16;
  v21[1] = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279473BC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22799F4B4();
  Schedule.hash(into:)((uint64_t)v4, a2);
  return sub_22799F4E4();
}

uint64_t sub_2279473FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return Schedule.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_22794741C(_QWORD *a1, _QWORD *a2)
{
  return Schedule.encode(to:)(a1, a2);
}

uint64_t sub_227947430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Schedule.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t type metadata accessor for Schedule.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schedule.CodingKeys);
}

void sub_22794744C()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_22794745C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_227947468()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_227947490(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2279474C4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_227947520(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22794755C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2279475A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Schedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schedule);
}

uint64_t sub_2279475EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for ArtistAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_227947684(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2279476D0 + 4 * byte_2279A0005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227947704 + 4 * byte_2279A0000[v4]))();
}

uint64_t sub_227947704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22794770C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227947714);
  return result;
}

uint64_t sub_227947720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227947728);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22794772C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227947734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_227947740(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void sub_22794774C()
{
  JUMPOUT(0x22E2A1174);
}

void sub_22794775C()
{
  JUMPOUT(0x22E2A1174);
}

void sub_22794776C()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_22794777C()
{
  return 2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E2A1120](a1, v6, a5);
}

uint64_t sub_2279477B0()
{
  uint64_t v0;

  v0 = sub_22799F0D0();
  __swift_allocate_value_buffer(v0, qword_255915F10);
  __swift_project_value_buffer(v0, (uint64_t)qword_255915F10);
  return sub_22799F0C4();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t LiveMusic.participants.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t LiveMusic.venues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveMusic.genres.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22794E6F8(v0);
  v2 = sub_22794909C(v1);
  swift_bridgeObjectRelease();
  v3 = sub_22794E808(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t LiveMusic.tickets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveMusic.setlist.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_22794E8C4(v2, v3);
}

uint64_t LiveMusic.playlists.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_22794791C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_227947930()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_227947974()
{
  return sub_22799F4C0();
}

uint64_t sub_22794799C()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_2279479DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227947A14 + 4 * byte_2279A0228[*v0]))(0x7069636974726170, 0xEC00000073746E61);
}

uint64_t sub_227947A14()
{
  return 0x7365756E6576;
}

uint64_t sub_227947A28()
{
  return 0x7374656B636974;
}

uint64_t sub_227947A40()
{
  return 0x7473696C746573;
}

uint64_t sub_227947A58()
{
  return 0x7473696C79616C70;
}

uint64_t sub_227947A74()
{
  return 0x6465766F6D6572;
}

uint64_t sub_227947A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22794F51C(a1, a2);
  *a3 = result;
  return result;
}

void sub_227947AB0(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_227947ABC()
{
  sub_22794E924();
  return sub_22799F52C();
}

uint64_t sub_227947AE4()
{
  sub_22794E924();
  return sub_22799F538();
}

uint64_t LiveMusic.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  swift_bridgeObjectRetain();
  sub_22794D11C(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22794CBA0(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22794CA68(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22799F130();
    sub_22794C864(a1, v8);
    sub_22794E8F4(v5, v7);
    if (v9)
      goto LABEL_3;
LABEL_8:
    sub_22799F4CC();
    return sub_22799F4CC();
  }
  sub_22799F4CC();
  if (!v9)
    goto LABEL_8;
LABEL_3:
  sub_22799F4CC();
  sub_22799F4C0();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  return sub_22799F4CC();
}

uint64_t LiveMusic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903EB8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v22 = v1[2];
  v23 = v8;
  v10 = v1[3];
  v20 = v1[4];
  v21 = v10;
  v11 = v1[5];
  v18 = v1[6];
  v19 = v11;
  v27 = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22794E924();
  v12 = v4;
  sub_22799F520();
  v24 = v9;
  v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255903EC8);
  sub_22794EA9C(&qword_255903ED0, (uint64_t)&protocol conformance descriptor for Participants<A>);
  sub_22799F400();
  if (!v2)
  {
    v14 = v21;
    v13 = v22;
    v15 = v20;
    v24 = v23;
    v28 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255903ED8);
    sub_22794EAE0(&qword_255903EE0, &qword_255903EE8, (uint64_t)&protocol conformance descriptor for Venue, MEMORY[0x24BEE12A0]);
    sub_22799F400();
    v24 = v13;
    v28 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255903EF0);
    sub_22794EB64(&qword_255903EF8, &qword_255903F00, (uint64_t)&protocol conformance descriptor for Ticket, MEMORY[0x24BEE12A0]);
    sub_22799F400();
    v24 = v14;
    v25 = v15;
    v26 = v19;
    v28 = 3;
    sub_22794E9AC();
    sub_22799F3C4();
    v24 = v18;
    v28 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255903F10);
    sub_22794E9F0(&qword_255903F18, (uint64_t (*)(void))sub_22794EA58, MEMORY[0x24BEE12A0]);
    sub_22799F3C4();
    LOBYTE(v24) = 5;
    sub_22799F3DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t LiveMusic.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 56);
  v5 = *v0;
  v6 = v1;
  v7 = *(__int128 *)((char *)v0 + 24);
  v8 = *(__int128 *)((char *)v0 + 40);
  v9 = v2;
  sub_22799F4B4();
  LiveMusic.hash(into:)((uint64_t)v4);
  return sub_22799F4E4();
}

uint64_t LiveMusic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903F28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22794E924();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255903EC8);
  v33 = 0;
  sub_22794EA9C(&qword_255903F30, (uint64_t)&protocol conformance descriptor for Participants<A>);
  sub_22799F3A0();
  v9 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255903ED8);
  v33 = 1;
  sub_22794EAE0(&qword_255903F38, &qword_255903F40, (uint64_t)&protocol conformance descriptor for Venue, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  v10 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255903EF0);
  v33 = 2;
  sub_22794EB64(&qword_255903F48, &qword_255903F50, (uint64_t)&protocol conformance descriptor for Ticket, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  v27 = v10;
  v11 = v30;
  v33 = 3;
  sub_22794EBE8();
  swift_bridgeObjectRetain();
  v24[1] = 0;
  sub_22799F364();
  v24[0] = v11;
  v12 = v31;
  v28 = v30;
  v13 = v32;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903F10);
  v33 = 4;
  v25 = v13;
  v26 = v12;
  sub_22794E8C4(v28, v12);
  sub_22794E9F0(&qword_255903F60, (uint64_t (*)(void))sub_22794EC2C, MEMORY[0x24BEE12D0]);
  sub_22799F364();
  v14 = v30;
  LOBYTE(v30) = 5;
  swift_bridgeObjectRetain();
  LOBYTE(v12) = sub_22799F37C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LODWORD(v29) = v12 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v24[0];
  swift_bridgeObjectRetain();
  v17 = v28;
  v18 = v25;
  v19 = v26;
  sub_22794E8C4(v28, v26);
  v20 = v17;
  v21 = v18;
  sub_22794E8F4(v20, v19);
  swift_bridgeObjectRelease();
  v22 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v22;
  v23 = v28;
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v14;
  *(_BYTE *)(a2 + 56) = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22794E8F4(v23, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227948588@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_227948594()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22794859C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2279485A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveMusic.init(from:)(a1, a2);
}

uint64_t sub_2279485B8(_QWORD *a1)
{
  return LiveMusic.encode(to:)(a1);
}

uint64_t sub_2279485CC()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 56);
  v5 = *v0;
  v6 = v1;
  v7 = *(__int128 *)((char *)v0 + 24);
  v8 = *(__int128 *)((char *)v0 + 40);
  v9 = v2;
  sub_22799F4B4();
  LiveMusic.hash(into:)((uint64_t)v4);
  return sub_22799F4E4();
}

uint64_t sub_227948638()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 56);
  v5 = *v0;
  v6 = v1;
  v7 = *(__int128 *)((char *)v0 + 24);
  v8 = *(__int128 *)((char *)v0 + 40);
  v9 = v2;
  sub_22799F4B4();
  LiveMusic.hash(into:)((uint64_t)v4);
  return sub_22799F4E4();
}

uint64_t Event<>.init(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch();
}

uint64_t sub_2279486BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char *v11;
  _QWORD *v12;

  sub_227948854(v0 + 2);
  v1 = v0[5];
  v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v4, v2, v1);
  v5 = *v4;
  v0[10] = type metadata accessor for ShazamEventsServiceConnection();
  v0[11] = (uint64_t)&off_24F00F740;
  v0[7] = v5;
  v6 = objc_allocWithZone((Class)type metadata accessor for LiveMusicEventConnection());
  v7 = v0[10];
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v7);
  v9 = *(_QWORD *)(v7 - 8);
  v10 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  v11 = sub_22794E390(*v10, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  v12 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = sub_22794880C;
  return sub_227948990(v0[12], v0[13], v0[14], (uint64_t)v11);
}

uint64_t sub_22794880C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_227948854(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v2 = type metadata accessor for ShazamEventsServiceConnection();
  v3 = swift_allocObject();
  v4 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v5 = (void *)sub_22799F10C();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_interfaceWithProtocol_, &unk_2559173B8);
  objc_msgSend(v6, sel_setExportedInterface_, v8);

  v9 = objc_msgSend(v7, sel_interfaceWithProtocol_, &unk_255917590);
  objc_msgSend(v6, sel_setRemoteObjectInterface_, v9);

  *(_QWORD *)(v3 + 16) = v6;
  sub_227962C28();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_24F00F740;
  *a1 = v3;
}

uint64_t sub_227948990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v4[17] = swift_task_alloc();
  v5 = sub_22799EF2C();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227948A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    v6 = *(void **)(v0 + 120);
    sub_22794F8D4();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease_n();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
}

uint64_t sub_227948B50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v0[7] = v0[17];
  v0[2] = v0;
  v0[3] = sub_227948BBC;
  v2 = swift_continuation_init();
  sub_22798882C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_227948BBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 168) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    sub_22794F918(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 96));
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_227948C40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 128) + 64) + 56) & 1) != 0)
  {
    v2 = *(void **)(v0 + 120);
    sub_2279466D4();
    swift_allocError();
    *v3 = 0;
    swift_willThrow();

    sub_22794ECEC(v1);
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227948D10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Event<>.genres.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110) + 64));
  v2 = *v1;
  v3 = v1[3];
  v4 = v1[4];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22794E8C4(v3, v4);
  swift_bridgeObjectRetain();
  v5 = sub_22794E6F8(v2);
  v6 = sub_22794909C(v5);
  swift_bridgeObjectRelease();
  v7 = sub_22794E808(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_22794E8F4(v3, v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t Event<>.setlist.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110) + 64));
  v4 = v3[3];
  v5 = v3[4];
  v6 = v3[5];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  return sub_22794E8C4(v4, v5);
}

uint64_t Event<>.playlists.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  return swift_bridgeObjectRetain();
}

uint64_t Event<>.artistPromotionalAssets.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v26 = a1;
  v3 = type metadata accessor for ArtistPromotionalAssets();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22794FB10(v2, (uint64_t)v10, (uint64_t *)&unk_255904110);
  v11 = *(_QWORD *)(v2 + *(int *)(v7 + 64));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255903F80);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2279A0480;
  sub_22794FB10(v2, v13 + v12, (uint64_t *)&unk_255904110);
  if (*(_QWORD *)(v11 + 16))
  {
    sub_22794FB10((uint64_t)v10, (uint64_t)v6 + *(int *)(v3 + 20), (uint64_t *)&unk_255904110);
    v14 = (uint64_t *)&v10[*(int *)(v7 + 56)];
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    swift_bridgeObjectRetain();
    sub_22794EC98(v15);
    sub_22794ECEC((uint64_t)v10);
    *v6 = v15;
    v6[1] = v16;
    v6[2] = v17;
    v6[3] = v18;
    v19 = (uint64_t *)((char *)v6 + *(int *)(v3 + 24));
    *v19 = v11;
    v19[1] = v13;
    v20 = (uint64_t)v6;
    v21 = v26;
    sub_22794F7B8(v20, v26, (uint64_t (*)(_QWORD))type metadata accessor for ArtistPromotionalAssets);
    v22 = 0;
    v23 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_22794ECEC((uint64_t)v10);
    v22 = 1;
    v23 = v26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v23, v22, 1, v3);
}

uint64_t sub_22794909C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_2279673A8(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_227949218(_OWORD *a1, __int128 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[80];

  v3 = v2;
  v4 = (uint64_t)a2;
  v6 = *v2;
  v7 = a2[5];
  v89 = a2[4];
  v90 = v7;
  v91 = a2[6];
  v8 = a2[1];
  v85 = *a2;
  v86 = v8;
  v9 = a2[3];
  v87 = a2[2];
  v88 = v9;
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  Artist.hash(into:)((uint64_t)v96);
  v10 = sub_22799F4E4();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v73 = v6 + 56;
  v84 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFF8)) >> (v10 & ~(_BYTE)v11)) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v57 = v2;
  v59 = a1;
  v71 = ~v11;
  v76 = *(_QWORD *)(v4 + 8);
  v77 = *(_QWORD *)v4;
  v74 = *(_QWORD *)(v4 + 24);
  v75 = *(_QWORD *)(v4 + 16);
  v66 = *(_QWORD *)(v4 + 48);
  v67 = *(_QWORD *)(v4 + 40);
  v68 = *(_QWORD *)(v4 + 56);
  v69 = *(_QWORD *)(v4 + 32);
  v63 = *(double *)(v4 + 64);
  v64 = *(_QWORD *)(v4 + 88);
  v61 = *(double *)(v4 + 80);
  v62 = *(double *)(v4 + 72);
  v65 = *(_QWORD *)(v4 + 96);
  v58 = (_QWORD *)v4;
  v60 = *(_QWORD *)(v4 + 104);
  v72 = v6;
  do
  {
    v21 = *(_QWORD *)(v6 + 48) + 112 * v84;
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v21 + 48);
    v25 = *(_QWORD *)(v21 + 56);
    v82 = *(double *)(v21 + 64);
    v81 = *(double *)(v21 + 72);
    v80 = *(double *)(v21 + 80);
    v27 = *(_QWORD *)(v21 + 96);
    v78 = *(_QWORD *)(v21 + 40);
    v79 = *(_QWORD *)(v21 + 88);
    v83 = *(_QWORD *)(v21 + 104);
    v28 = *(_QWORD *)v21 == v77 && *(_QWORD *)(v21 + 8) == v76;
    if (v28 || (v22 = *(_QWORD *)(v21 + 24), (sub_22799F430() & 1) != 0))
    {
      v29 = v23 == v75 && v22 == v74;
      if (v29 || (sub_22799F430() & 1) != 0)
      {
        if (v25)
        {
          v30 = v68;
          if (!v68)
          {
            v12 = v25;
            v13 = v78;
            sub_22794FB90(v24, v78, v26, v12);
            sub_22794FB90(v24, v78, v26, v12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v14 = v12;
            v70 = v26;
            v15 = v26;
            v16 = v82;
            v17 = v12;
            v18 = v81;
            v19 = v80;
            sub_22794FB90(v24, v78, v15, v17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v20 = v79;
            swift_bridgeObjectRelease();
LABEL_4:
            *(_QWORD *)&v85 = v24;
            *((_QWORD *)&v85 + 1) = v13;
            *(_QWORD *)&v86 = v70;
            *((_QWORD *)&v86 + 1) = v14;
            *(double *)&v87 = v16;
            *((double *)&v87 + 1) = v18;
            *(double *)&v88 = v19;
            *((_QWORD *)&v88 + 1) = v20;
            *(_QWORD *)&v89 = v27;
            *((_QWORD *)&v89 + 1) = v69;
            *(_QWORD *)&v90 = v67;
            *((_QWORD *)&v90 + 1) = v66;
            *(_QWORD *)&v91 = v30;
            *((double *)&v91 + 1) = v63;
            v92 = v62;
            v93 = v61;
            v94 = v64;
            v95 = v65;
            sub_22794FB90(v69, v67, v66, v30);
            sub_22794FD1C((uint64_t *)&v85);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22794FBC0(v24, v13, v70, v14);
            goto LABEL_5;
          }
          if (v24 != v69)
          {
            v36 = v25;
            v31 = v78;
            sub_22794FB90(v24, v78, v26, v25);
            sub_22794FB90(v24, v78, v26, v25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v37 = v26;
            sub_22794FB90(v24, v78, v26, v25);
            goto LABEL_47;
          }
          v31 = v78;
          if (v78 != v67)
          {
            v36 = v25;
            sub_22794FB90(v69, v78, v26, v25);
            sub_22794FB90(v69, v78, v26, v25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v37 = v26;
            sub_22794FB90(v69, v78, v26, v25);
            goto LABEL_47;
          }
          v14 = v25;
          v32 = v26 == v66 && v25 == v68;
          if (!v32 && (sub_22799F430() & 1) == 0)
          {
            sub_22794FB90(v69, v67, v26, v25);
            sub_22794FB90(v69, v67, v26, v25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22794FB90(v69, v67, v26, v25);
            v37 = v26;
            goto LABEL_46;
          }
          if (v27)
          {
            if (!v65
              || v82 != v63
              || v81 != v62
              || v80 != v61
              || (v79 != v64 || v27 != v65) && (sub_22799F430() & 1) == 0)
            {
LABEL_45:
              sub_22794FB90(v69, v67, v26, v25);
              sub_22794FB90(v69, v67, v26, v25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v37 = v26;
              sub_22794FB90(v69, v67, v26, v25);
LABEL_46:
              v36 = v25;
              v31 = v78;
LABEL_47:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_22794FBC0(v24, v31, v37, v36);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_22794FBC0(v24, v31, v37, v36);
LABEL_5:
              swift_bridgeObjectRelease();
              goto LABEL_6;
            }
          }
          else if (v65)
          {
            goto LABEL_45;
          }
          sub_22794FB90(v69, v67, v26, v25);
          sub_22794FB90(v69, v67, v26, v25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v69, v67, v26, v25);
          v34 = v83;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70 = v26;
          sub_22794FBC0(v69, v67, v26, v25);
          v13 = v78;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14 = 0;
          v13 = v78;
          v20 = v79;
          v70 = v26;
          v33 = v26;
          v16 = v82;
          v18 = v81;
          v19 = v80;
          sub_22794FB90(v24, v78, v33, 0);
          v34 = v83;
          swift_bridgeObjectRetain();
          v30 = v68;
          if (v68)
            goto LABEL_4;
        }
        v35 = sub_227960FA0(v34, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22794FBC0(v24, v13, v70, v14);
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_22794FDBC(v58);
          v42 = (_QWORD *)(*(_QWORD *)(*v57 + 48) + 112 * v84);
          v43 = v42[1];
          v44 = v42[2];
          v45 = v42[3];
          v46 = v42[4];
          v47 = v42[5];
          v48 = v42[6];
          v49 = v42[7];
          v50 = v42[8];
          v51 = v42[9];
          v52 = v42[10];
          v53 = v42[11];
          v55 = v42[12];
          v54 = v42[13];
          *v59 = *v42;
          v59[1] = v43;
          v59[2] = v44;
          v59[3] = v45;
          v59[4] = v46;
          v59[5] = v47;
          v59[6] = v48;
          v59[7] = v49;
          v59[8] = v50;
          v59[9] = v51;
          v59[10] = v52;
          v59[11] = v53;
          v59[12] = v55;
          v59[13] = v54;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v46, v47, v48, v49);
          swift_bridgeObjectRetain();
          return 0;
        }
      }
    }
LABEL_6:
    v6 = v72;
    v84 = (v84 + 1) & v71;
  }
  while (((*(_QWORD *)(v73 + ((v84 >> 3) & 0xFFFFFFFFFFFFF8)) >> v84) & 1) != 0);
  swift_bridgeObjectRelease();
  v4 = (uint64_t)v58;
  a1 = v59;
  v3 = v57;
LABEL_50:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v85 = *v3;
  *v3 = 0x8000000000000000;
  sub_22794FC78((_QWORD *)v4);
  sub_22794AD38(v4, v84, isUniquelyReferenced_nonNull_native);
  *v3 = v85;
  swift_bridgeObjectRelease();
  v39 = *(_OWORD *)(v4 + 80);
  a1[4] = *(_OWORD *)(v4 + 64);
  a1[5] = v39;
  a1[6] = *(_OWORD *)(v4 + 96);
  v40 = *(_OWORD *)(v4 + 16);
  *a1 = *(_OWORD *)v4;
  a1[1] = v40;
  v41 = *(_OWORD *)(v4 + 48);
  result = 1;
  a1[2] = *(_OWORD *)(v4 + 32);
  a1[3] = v41;
  return result;
}

uint64_t sub_227949E8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  sub_22799F130();
  v11 = sub_22799F4E4();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_22799F430() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_22799F430() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(*(_QWORD *)(*v28 + 48) + 32 * v13);
    v23 = v22[1];
    v24 = v22[2];
    v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22794BA44(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_22794A090(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  v8 = sub_22799F4E4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_22799F430() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_22799F430() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_22794BC08(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_22794A23C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[72];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_255904060);
  v2 = sub_22799F2BC();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v51 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v50 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    v8 = v2;
    result = swift_retain();
    v10 = v8;
    v11 = 0;
    v52 = v1;
    v53 = v8;
    while (1)
    {
      if (v6)
      {
        v58 = (v6 - 1) & v6;
        v59 = v11;
        v15 = __clz(__rbit64(v6)) | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v50)
          goto LABEL_36;
        v17 = v51[v16];
        v18 = v11 + 1;
        if (!v17)
        {
          v18 = v11 + 2;
          if (v11 + 2 >= v50)
            goto LABEL_36;
          v17 = v51[v18];
          if (!v17)
          {
            v18 = v11 + 3;
            if (v11 + 3 >= v50)
              goto LABEL_36;
            v17 = v51[v18];
            if (!v17)
            {
              v19 = v11 + 4;
              if (v11 + 4 >= v50)
              {
LABEL_36:
                v46 = v10;
                swift_release();
                v47 = 1 << *(_BYTE *)(v1 + 32);
                if (v47 > 63)
                  bzero(v51, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v51 = -1 << v47;
                v3 = v46;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v17 = v51[v19];
              if (!v17)
              {
                while (1)
                {
                  v18 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v18 >= v50)
                    goto LABEL_36;
                  v17 = v51[v18];
                  ++v19;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v18 = v11 + 4;
            }
          }
        }
LABEL_23:
        v58 = (v17 - 1) & v17;
        v59 = v18;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 112 * v15);
      v21 = *v20;
      v22 = v20[1];
      v23 = v20[2];
      v24 = v20[3];
      v60 = v20[4];
      v61 = v20[5];
      v25 = v20[7];
      v62 = v20[6];
      v26 = v20[9];
      v27 = v20[10];
      v28 = v20[11];
      v29 = v20[12];
      v64 = v20[8];
      v65 = v20[13];
      sub_22799F4B4();
      swift_bridgeObjectRetain();
      v57 = v21;
      sub_22799F130();
      v56 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22799F130();
      v55 = v24;
      swift_bridgeObjectRelease();
      v63 = v29;
      if (v25)
      {
        sub_22799F4CC();
        v67 = v64;
        v68 = v26;
        v30 = v26;
        v31 = v27;
        v69 = v27;
        v70 = v28;
        v54 = v28;
        v71 = v29;
        v32 = v60;
        sub_22799F4C0();
        v33 = v61;
        sub_22799F4C0();
        v34 = v62;
        sub_22794FB90(v60, v61, v62, v25);
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_227960070();
        swift_bridgeObjectRelease();
        v35 = v64;
        v36 = v30;
        v37 = v31;
        v38 = v54;
        sub_22794FBC0(v60, v61, v62, v25);
      }
      else
      {
        v38 = v28;
        v37 = v27;
        v36 = v26;
        sub_22799F4CC();
        v32 = v60;
        v33 = v61;
        v34 = v62;
        v35 = v64;
      }
      swift_bridgeObjectRetain();
      sub_227961BE4((uint64_t)v66, v65);
      swift_bridgeObjectRelease();
      result = sub_22799F4E4();
      v10 = v53;
      v39 = -1 << *(_BYTE *)(v53 + 32);
      v40 = result & ~v39;
      v41 = v40 >> 6;
      if (((-1 << v40) & ~*(_QWORD *)(v7 + 8 * (v40 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v7 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
        v13 = v63;
      }
      else
      {
        v42 = 0;
        v43 = (unint64_t)(63 - v39) >> 6;
        v13 = v63;
        do
        {
          if (++v41 == v43 && (v42 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v44 = v41 == v43;
          if (v41 == v43)
            v41 = 0;
          v42 |= v44;
          v45 = *(_QWORD *)(v7 + 8 * v41);
        }
        while (v45 == -1);
        v12 = __clz(__rbit64(~v45)) + (v41 << 6);
      }
      *(_QWORD *)(v7 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v14 = (_QWORD *)(*(_QWORD *)(v53 + 48) + 112 * v12);
      *v14 = v57;
      v14[1] = v56;
      v14[2] = v23;
      v14[3] = v55;
      v14[4] = v32;
      v14[5] = v33;
      v14[6] = v34;
      v14[7] = v25;
      v14[8] = v35;
      v14[9] = v36;
      v14[10] = v37;
      v14[11] = v38;
      v14[12] = v13;
      v14[13] = v65;
      ++*(_QWORD *)(v53 + 16);
      v1 = v52;
      v6 = v58;
      v11 = v59;
    }
  }
  v48 = v3;
  result = swift_release();
  *v49 = v48;
  return result;
}

uint64_t sub_22794A744()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904050);
  v3 = sub_22799F2BC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_22799F4B4();
      sub_22799F130();
      sub_22799F130();
      result = sub_22799F4E4();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_22794AA5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904008);
  v3 = sub_22799F2BC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_22799F4B4();
      sub_22799F130();
      result = sub_22799F4E4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_22794AD38(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _OWORD *v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[80];

  v4 = result;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  v53 = (_OWORD *)result;
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_22794A23C();
    }
    else
    {
      if (v6 > v5)
      {
        result = (uint64_t)sub_227967EEC();
        goto LABEL_56;
      }
      sub_22794BDA0();
    }
    v7 = *v3;
    v8 = *(_OWORD *)(v4 + 80);
    v82 = *(_OWORD *)(v4 + 64);
    v83 = v8;
    v84 = *(_OWORD *)(v4 + 96);
    v9 = *(_OWORD *)(v4 + 16);
    v78 = *(_OWORD *)v4;
    v79 = v9;
    v10 = *(_OWORD *)(v4 + 48);
    v80 = *(_OWORD *)(v4 + 32);
    v81 = v10;
    sub_22799F4B4();
    Artist.hash(into:)((uint64_t)v89);
    result = sub_22799F4E4();
    v11 = -1 << *(_BYTE *)(v7 + 32);
    v66 = v7 + 56;
    v67 = v7;
    a2 = result & ~v11;
    if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> (result & ~(_BYTE)v11)) & 1) != 0)
    {
      v65 = ~v11;
      v70 = *(_QWORD *)(v4 + 8);
      v71 = *(_QWORD *)v4;
      v68 = *(_QWORD *)(v4 + 24);
      v69 = *(_QWORD *)(v4 + 16);
      v60 = *(_QWORD *)(v4 + 40);
      v59 = *(_QWORD *)(v4 + 48);
      v61 = *(_QWORD *)(v4 + 56);
      v62 = *(_QWORD *)(v4 + 32);
      v56 = *(double *)(v4 + 64);
      v57 = *(_QWORD *)(v4 + 88);
      v54 = *(double *)(v4 + 80);
      v55 = *(double *)(v4 + 72);
      v58 = *(_QWORD *)(v4 + 96);
      v51 = *(_QWORD *)(v4 + 104);
      do
      {
        v19 = *(_QWORD *)(v67 + 48) + 112 * a2;
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        v22 = *(_QWORD *)(v19 + 32);
        v24 = *(_QWORD *)(v19 + 48);
        v23 = *(_QWORD *)(v19 + 56);
        v25 = *(double *)(v19 + 64);
        v74 = *(double *)(v19 + 72);
        v75 = *(_QWORD *)(v19 + 40);
        v26 = *(_QWORD *)(v19 + 96);
        v72 = *(double *)(v19 + 80);
        v73 = *(_QWORD *)(v19 + 88);
        v76 = *(_QWORD *)(v19 + 104);
        if (*(_QWORD *)v19 != v71 || *(_QWORD *)(v19 + 8) != v70)
        {
          v28 = *(_QWORD *)(v19 + 56);
          v29 = *(_QWORD *)(v19 + 32);
          v30 = *(_QWORD *)(v19 + 24);
          result = sub_22799F430();
          v20 = v30;
          v22 = v29;
          v23 = v28;
          if ((result & 1) == 0)
            goto LABEL_13;
        }
        if (v21 != v69 || v20 != v68)
        {
          result = sub_22799F430();
          if ((result & 1) == 0)
            goto LABEL_13;
        }
        if (v23)
        {
          v32 = v61;
          if (!v61)
          {
            v12 = v22;
            v13 = v22;
            v14 = v75;
            v15 = v72;
            v16 = v73;
            sub_22794FB90(v12, v75, v24, v23);
            sub_22794FB90(v13, v75, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v63 = v25;
            v64 = v24;
            v17 = v13;
            v18 = v74;
            sub_22794FB90(v13, v75, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_11:
            *(_QWORD *)&v78 = v17;
            *((_QWORD *)&v78 + 1) = v14;
            *(_QWORD *)&v79 = v64;
            *((_QWORD *)&v79 + 1) = v23;
            *(double *)&v80 = v63;
            *((double *)&v80 + 1) = v18;
            *(double *)&v81 = v15;
            *((_QWORD *)&v81 + 1) = v16;
            *(_QWORD *)&v82 = v26;
            *((_QWORD *)&v82 + 1) = v62;
            *(_QWORD *)&v83 = v60;
            *((_QWORD *)&v83 + 1) = v59;
            *(_QWORD *)&v84 = v32;
            *((double *)&v84 + 1) = v56;
            v85 = v55;
            v86 = v54;
            v87 = v57;
            v88 = v58;
            sub_22794FB90(v62, v60, v59, v32);
            sub_22794FD1C((uint64_t *)&v78);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22794FBC0(v17, v14, v64, v23);
            goto LABEL_12;
          }
          if (v22 != v62)
          {
            v41 = v75;
            v34 = v24;
            sub_22794FB90(v22, v75, v24, v23);
            sub_22794FB90(v22, v75, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22794FB90(v22, v75, v24, v23);
            goto LABEL_55;
          }
          if (v75 != v60)
          {
            sub_22794FB90(v62, v75, v24, v23);
            sub_22794FB90(v62, v75, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v34 = v24;
            sub_22794FB90(v62, v75, v24, v23);
            v41 = v75;
            goto LABEL_55;
          }
          v33 = v24 == v59 && v23 == v61;
          if (!v33 && (sub_22799F430() & 1) == 0)
          {
            sub_22794FB90(v62, v60, v24, v23);
            sub_22794FB90(v62, v60, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22794FB90(v62, v60, v24, v23);
            v34 = v24;
            v41 = v75;
            goto LABEL_55;
          }
          if (v26)
          {
            if (!v58)
              goto LABEL_48;
            if (v25 != v56)
            {
              sub_22794FB90(v62, v60, v24, v23);
              sub_22794FB90(v62, v60, v24, v23);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_22794FB90(v62, v60, v24, v23);
              v34 = v24;
              goto LABEL_54;
            }
            if (v74 != v55 || v72 != v54)
            {
              v34 = v24;
              sub_22794FB90(v62, v60, v24, v23);
              sub_22794FB90(v62, v60, v24, v23);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_22794FB90(v62, v60, v24, v23);
LABEL_54:
              v41 = v75;
LABEL_55:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_22794FBC0(v22, v41, v34, v23);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_22794FBC0(v22, v41, v34, v23);
LABEL_12:
              result = swift_bridgeObjectRelease();
              goto LABEL_13;
            }
            if ((v73 != v57 || v26 != v58) && (sub_22799F430() & 1) == 0)
            {
              v34 = v24;
              sub_22794FB90(v62, v60, v24, v23);
              sub_22794FB90(v62, v60, v24, v23);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v35 = v62;
              v36 = v60;
              v37 = v24;
LABEL_49:
              sub_22794FB90(v35, v36, v37, v23);
              goto LABEL_54;
            }
          }
          else if (v58)
          {
LABEL_48:
            sub_22794FB90(v62, v60, v24, v23);
            sub_22794FB90(v62, v60, v24, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v35 = v62;
            v34 = v24;
            v36 = v60;
            v37 = v24;
            goto LABEL_49;
          }
          sub_22794FB90(v62, v60, v24, v23);
          sub_22794FB90(v62, v60, v24, v23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v62, v60, v24, v23);
          v39 = v76;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v64 = v24;
          sub_22794FBC0(v62, v60, v24, v23);
          v17 = v22;
          v14 = v75;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = v22;
          v17 = v22;
          v14 = v75;
          v63 = v25;
          v64 = v24;
          v18 = v74;
          v15 = v72;
          v16 = v73;
          sub_22794FB90(v38, v75, v24, 0);
          v39 = v76;
          swift_bridgeObjectRetain();
          v32 = v61;
          if (v61)
            goto LABEL_11;
        }
        v40 = sub_227960FA0(v39, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22794FBC0(v17, v14, v64, v23);
        result = swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
          goto LABEL_59;
LABEL_13:
        a2 = (a2 + 1) & v65;
      }
      while (((*(_QWORD *)(v66 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_56:
  v42 = *v52;
  *(_QWORD *)(*v52 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v43 = (_OWORD *)(*(_QWORD *)(v42 + 48) + 112 * a2);
  v44 = v53[1];
  *v43 = *v53;
  v43[1] = v44;
  v45 = v53[6];
  v46 = v53[4];
  v43[5] = v53[5];
  v43[6] = v45;
  v47 = v53[3];
  v43[2] = v53[2];
  v43[3] = v47;
  v43[4] = v46;
  v48 = *(_QWORD *)(v42 + 16);
  v49 = __OFADD__(v48, 1);
  v50 = v48 + 1;
  if (v49)
  {
    __break(1u);
LABEL_59:
    result = sub_22799F46C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v42 + 16) = v50;
  }
  return result;
}

uint64_t sub_22794BA44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_22;
  if ((a6 & 1) != 0)
  {
    sub_22794A744();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_227968174();
      goto LABEL_22;
    }
    sub_22794C2D0();
  }
  v14 = *v6;
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  result = sub_22799F4E4();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 32 * a5);
      v20 = v19[2];
      v21 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = sub_22799F430(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4)
          break;
        result = sub_22799F430();
        if ((result & 1) != 0)
          break;
      }
      a5 = (a5 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
        goto LABEL_22;
    }
    result = sub_22799F46C();
    __break(1u);
  }
LABEL_22:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
  return result;
}

uint64_t sub_22794BC08(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_22794AA5C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_227968334();
      goto LABEL_22;
    }
    sub_22794C5B8();
  }
  v11 = *v4;
  sub_22799F4B4();
  sub_22799F130();
  result = sub_22799F4E4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_22799F430(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_22799F46C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_22799F430();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_22794BDA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[72];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_255904060);
  v3 = sub_22799F2BC();
  if (!*(_QWORD *)(v2 + 16))
  {
    v45 = v3;
    result = swift_release();
    v44 = v45;
LABEL_38:
    *v1 = v44;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v46 = v0;
  v47 = v2 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v48 = (unint64_t)(v4 + 63) >> 6;
  v50 = v3 + 56;
  v7 = v3;
  result = swift_retain();
  v9 = v7;
  v10 = 0;
  v51 = v7;
  v49 = v2;
  while (1)
  {
    if (v6)
    {
      v53 = (v6 - 1) & v6;
      v54 = v10;
      v15 = __clz(__rbit64(v6)) | (v10 << 6);
      goto LABEL_24;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v48)
      goto LABEL_36;
    v17 = *(_QWORD *)(v47 + 8 * v16);
    v18 = v10 + 1;
    if (!v17)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v48)
        goto LABEL_36;
      v17 = *(_QWORD *)(v47 + 8 * v18);
      if (!v17)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v48)
          goto LABEL_36;
        v17 = *(_QWORD *)(v47 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v53 = (v17 - 1) & v17;
    v54 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_24:
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 112 * v15);
    v21 = v20[1];
    v22 = v20[3];
    v60 = v20[2];
    v61 = *v20;
    v24 = v20[4];
    v23 = v20[5];
    v25 = v20[6];
    v26 = v20[8];
    v27 = v20[9];
    v28 = v20[10];
    v55 = v20[11];
    v56 = v20[7];
    v30 = v20[12];
    v29 = v20[13];
    sub_22799F4B4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v59 = v24;
    v58 = v28;
    sub_22794FB90(v24, v23, v25, v56);
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22799F130();
    v52 = v22;
    swift_bridgeObjectRelease();
    v57 = v30;
    if (v56)
    {
      sub_22799F4CC();
      v63 = v26;
      v64 = v27;
      v65 = v28;
      v66 = v55;
      v67 = v30;
      sub_22799F4C0();
      sub_22799F4C0();
      sub_22794FB90(v24, v23, v25, v56);
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_227960070();
      swift_bridgeObjectRelease();
      v31 = v25;
      v32 = v55;
      sub_22794FBC0(v24, v23, v25, v56);
      v33 = v23;
      v34 = v58;
      v35 = v59;
    }
    else
    {
      v32 = v55;
      v31 = v25;
      sub_22799F4CC();
      v35 = v24;
      v33 = v23;
      v34 = v58;
    }
    swift_bridgeObjectRetain();
    sub_227961BE4((uint64_t)v62, v29);
    swift_bridgeObjectRelease();
    result = sub_22799F4E4();
    v9 = v51;
    v36 = -1 << *(_BYTE *)(v51 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v50 + 8 * (v37 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v50 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      v12 = v31;
      v13 = v57;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      v12 = v31;
      v13 = v57;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v50 + 8 * v38);
      }
      while (v42 == -1);
      v11 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v50 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v14 = (_QWORD *)(*(_QWORD *)(v51 + 48) + 112 * v11);
    *v14 = v61;
    v14[1] = v21;
    v14[2] = v60;
    v14[3] = v52;
    v14[4] = v35;
    v14[5] = v33;
    v14[6] = v12;
    v14[7] = v56;
    v14[8] = v26;
    v14[9] = v27;
    v14[10] = v34;
    v14[11] = v32;
    v14[12] = v13;
    v14[13] = v29;
    ++*(_QWORD *)(v51 + 16);
    v2 = v49;
    v6 = v53;
    v10 = v54;
  }
  v19 = v10 + 4;
  if (v10 + 4 >= v48)
  {
LABEL_36:
    v43 = v9;
    result = swift_release_n();
    v44 = v43;
    v1 = v46;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v47 + 8 * v19);
  if (v17)
  {
    v18 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v48)
      goto LABEL_36;
    v17 = *(_QWORD *)(v47 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22794C2D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904050);
  v3 = sub_22799F2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_22799F4B4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22799F130();
    sub_22799F130();
    result = sub_22799F4E4();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22794C5B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904008);
  v3 = sub_22799F2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_22799F4B4();
    swift_bridgeObjectRetain();
    sub_22799F130();
    result = sub_22799F4E4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22794C864(uint64_t a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (int *)type metadata accessor for Setlist.Song();
  v4 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_22794F9E4(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
      sub_22799F058();
      sub_22794F9A4(&qword_255904038, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_22799F0DC();
      if (*(_QWORD *)&v6[v3[5] + 8])
      {
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_22799F4CC();
      }
      if (*(_QWORD *)&v6[v3[6] + 8])
      {
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_22799F4CC();
      }
      if (*(_QWORD *)&v6[v3[7] + 8])
      {
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_22799F4CC();
      }
      result = sub_22794FB54((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_22794CA68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for Ticket() - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  if (v6)
  {
    v8 = a2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = MEMORY[0x24BDCDAF0];
    do
    {
      sub_22794F9E4(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      sub_22799EFE0();
      sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v10);
      sub_22799F0DC();
      sub_22799F130();
      sub_22799F4CC();
      result = sub_22794FB54((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_22794CBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = sub_22799EFE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Venue();
  v8 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  if (v11)
  {
    v13 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    v33 = v4;
    v34 = v3;
    v41 = v7;
    v32 = v14;
    while (1)
    {
      sub_22794F9E4(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      sub_22799F4D8();
      sub_22799F4D8();
      v16 = v10[7];
      if (v16 != 1)
        break;
      sub_22799F4CC();
      v17 = (uint64_t)v41;
LABEL_22:
      sub_22794FB10((uint64_t)v10 + *(int *)(v42 + 36), v17, &qword_255904040);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v17, 1, v3) == 1)
      {
        sub_22799F4CC();
      }
      else
      {
        v15 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v35, v17, v3);
        sub_22799F4CC();
        sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        sub_22799F0DC();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      }
      result = sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
      v13 += v14;
      if (!--v11)
        return result;
    }
    v36 = v13;
    v39 = v11;
    v18 = v10[6];
    v20 = v10[8];
    v19 = v10[9];
    v21 = v10[10];
    v22 = v10[11];
    v23 = v10[13];
    v49 = v10[12];
    v50 = v19;
    v24 = v10[15];
    v44 = v10[14];
    v45 = v18;
    v25 = v10[17];
    v43 = v10[16];
    v48 = v16;
    sub_22799F4CC();
    v26 = v48;
    v46 = v20;
    v47 = v21;
    v40 = v22;
    v37 = v25;
    v38 = v24;
    if (v48)
    {
      sub_22799F4CC();
      v27 = v50;
      v28 = v23;
      sub_22794FA28(v45, v26);
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22799F4CC();
      swift_bridgeObjectRetain();
      v27 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v11 = v39;
    v13 = v36;
    sub_22799F4CC();
    if (v27)
    {
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
    }
    v29 = v38;
    if (v40)
    {
      sub_22799F4CC();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      if (v28)
        goto LABEL_14;
    }
    else
    {
      sub_22799F4CC();
      if (v28)
      {
LABEL_14:
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
        if (v29)
          goto LABEL_15;
        goto LABEL_19;
      }
    }
    sub_22799F4CC();
    if (v29)
    {
LABEL_15:
      sub_22799F4CC();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      if (v37)
      {
LABEL_16:
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
        v30 = v45;
        v31 = v48;
LABEL_21:
        sub_22794FA9C(v30, v31);
        v4 = v33;
        v3 = v34;
        v17 = (uint64_t)v41;
        v14 = v32;
        goto LABEL_22;
      }
LABEL_20:
      sub_22799F4CC();
      v30 = v45;
      v31 = v48;
      goto LABEL_21;
    }
LABEL_19:
    sub_22799F4CC();
    if (v37)
      goto LABEL_16;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_22794D11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  if (v4)
  {
    v6 = (uint64_t *)(a2 + 72);
    v16 = a1;
    do
    {
      v14 = v4;
      v10 = *(v6 - 1);
      v15 = *v6;
      v11 = v6[1];
      v13 = v6[2];
      v12 = v6[8];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_22794FB90(v10, v15, v11, v13);
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      sub_22799F4CC();
      if (v13)
      {
        v7 = v10;
        sub_22799F4C0();
        sub_22799F4C0();
        v8 = v11;
        sub_22794FB90(v10, v15, v11, v13);
        swift_bridgeObjectRetain();
        sub_22799F130();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_227960070();
        v9 = v16;
        swift_bridgeObjectRelease();
        sub_22794FBC0(v10, v15, v11, v13);
      }
      else
      {
        v9 = v16;
        v8 = v11;
        v7 = v10;
      }
      swift_bridgeObjectRetain();
      sub_227961BE4(v9, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794FBC0(v7, v15, v8, v13);
      result = swift_bridgeObjectRelease();
      v6 += 14;
      v4 = v14 - 1;
    }
    while (v14 != 1);
  }
  return result;
}

uint64_t sub_22794D3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;

  v4 = type metadata accessor for PromotionalAssets.Video(0);
  v52[0] = *(_QWORD *)(v4 - 8);
  v52[1] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for PromotionalAssets.WatchFace(0);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v63 = (uint64_t)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903FF8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for PromotionalAssets.PhoneWallpaper(0);
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v62 = (uint64_t)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904000);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  v57 = v18;
  if (v18)
  {
    v20 = 0;
    v56 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v55 = *(_QWORD *)(v15 + 72);
    v69 = v10;
    v53 = v14;
    v60 = v17;
    do
    {
      v61 = v20;
      sub_22794FB10(v56 + v55 * v20, (uint64_t)v17, (uint64_t *)&unk_255904110);
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      sub_22799EF5C();
      sub_22794F9A4(&qword_255904010, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB890]);
      sub_22799F0DC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
      sub_22799F0AC();
      sub_22794F9A4(&qword_255904020, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
      sub_22799F0DC();
      v21 = sub_22799EFE0();
      sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      sub_22799F0DC();
      sub_22799F0DC();
      if (*(_QWORD *)&v17[*(int *)(v14 + 52) + 8])
      {
        sub_22799F4CC();
        swift_bridgeObjectRetain();
        v17 = v60;
        sub_22799F130();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_22799F4CC();
      }
      v22 = &v17[*(int *)(v14 + 56)];
      v23 = *(_QWORD *)v22;
      if (*(_QWORD *)v22 == 1)
        goto LABEL_3;
      v24 = *((_QWORD *)v22 + 1);
      v26 = *((_QWORD *)v22 + 2);
      v25 = *((_QWORD *)v22 + 3);
      v54 = v26;
      v58 = v24;
      v59 = v25;
      v64 = v23;
      sub_22799F4CC();
      v27 = (uint64_t)v71;
      if (v64)
      {
        sub_22799F4CC();
        sub_22799F4C0();
        v28 = *(_QWORD *)(v64 + 16);
        if (v28)
        {
          v29 = v67;
          v30 = v64 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
          swift_bridgeObjectRetain();
          v66 = *(_QWORD *)(v29 + 72);
          while (1)
          {
            sub_22794F9E4(v30, v27, type metadata accessor for PromotionalAssets.PhoneWallpaper);
            v31 = v67;
            v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
            v33 = v65;
            v32(v71, 0, 1, v65);
            v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
            v27 = (uint64_t)v71;
            if (v34(v71, 1, v33) == 1)
              break;
            v35 = v62;
            sub_22794F7B8(v27, v62, type metadata accessor for PromotionalAssets.PhoneWallpaper);
            sub_22799F0DC();
            sub_22794FB54(v35, type metadata accessor for PromotionalAssets.PhoneWallpaper);
            v30 += v66;
            if (!--v28)
            {
              v14 = v53;
              v17 = v60;
              goto LABEL_18;
            }
          }
          swift_bridgeObjectRelease();
          v10 = v69;
          v14 = v53;
          v17 = v60;
          v36 = v58;
          if (!v58)
            goto LABEL_28;
        }
        else
        {
          swift_bridgeObjectRetain();
          v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
          v14 = v53;
LABEL_18:
          v32((char *)v27, 1, 1, v65);
          swift_bridgeObjectRelease();
          v10 = v69;
          v36 = v58;
          if (!v58)
          {
LABEL_28:
            sub_22799F4CC();
            v46 = v54;
            v47 = v59;
            if (v54)
              goto LABEL_29;
            goto LABEL_32;
          }
        }
      }
      else
      {
        sub_22799F4CC();
        v36 = v58;
        if (!v58)
          goto LABEL_28;
      }
      sub_22799F4CC();
      v37 = *(_QWORD *)(v36 + 16);
      sub_22799F4C0();
      if (v37)
      {
        v66 = v21;
        v38 = v68;
        v39 = v36 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
        swift_bridgeObjectRetain();
        v64 = *(_QWORD *)(v38 + 72);
        while (1)
        {
          sub_22794F9E4(v39, (uint64_t)v10, type metadata accessor for PromotionalAssets.WatchFace);
          v40 = v68;
          v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
          v42 = v70;
          v41(v10, 0, 1, v70);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v10, 1, v42) == 1)
            break;
          v43 = (uint64_t)v10;
          v44 = v63;
          sub_22794F7B8(v43, v63, type metadata accessor for PromotionalAssets.WatchFace);
          sub_22799F0DC();
          sub_22799F0DC();
          v45 = v44;
          v10 = v69;
          sub_22794FB54(v45, type metadata accessor for PromotionalAssets.WatchFace);
          v39 += v64;
          if (!--v37)
          {
            v17 = v60;
            v46 = v54;
            goto LABEL_25;
          }
        }
        swift_bridgeObjectRelease();
        v14 = v53;
        v46 = v54;
        v47 = v59;
        v17 = v60;
        if (v54)
          goto LABEL_29;
      }
      else
      {
        swift_bridgeObjectRetain();
        v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
        v46 = v54;
LABEL_25:
        v41(v10, 1, 1, v70);
        swift_bridgeObjectRelease();
        v14 = v53;
        v47 = v59;
        if (v46)
        {
LABEL_29:
          sub_22799F4CC();
          swift_bridgeObjectRetain();
          sub_22794DD78(a1, v46);
          swift_bridgeObjectRelease();
          if (v47)
            goto LABEL_33;
          goto LABEL_3;
        }
      }
LABEL_32:
      sub_22799F4CC();
      if (v47)
      {
LABEL_33:
        sub_22799F4CC();
        v48 = *(_QWORD *)(v47 + 16);
        sub_22799F4C0();
        if (v48)
        {
          v49 = v52[0];
          v50 = v47
              + ((*(unsigned __int8 *)(v52[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52[0] + 80));
          swift_bridgeObjectRetain();
          v51 = *(_QWORD *)(v49 + 72);
          do
          {
            sub_22794F9E4(v50, (uint64_t)v6, type metadata accessor for PromotionalAssets.Video);
            sub_22799F130();
            sub_22799F130();
            sub_22799F0DC();
            sub_22799F0DC();
            sub_22799F0DC();
            sub_22794FB54((uint64_t)v6, type metadata accessor for PromotionalAssets.Video);
            v50 += v51;
            --v48;
          }
          while (v48);
          swift_bridgeObjectRelease();
          v10 = v69;
          v17 = v60;
        }
        goto LABEL_4;
      }
LABEL_3:
      sub_22799F4CC();
LABEL_4:
      v20 = v61 + 1;
      sub_22799F0DC();
      LiveMusic.hash(into:)(a1);
      result = sub_22794ECEC((uint64_t)v17);
    }
    while (v20 != v57);
  }
  return result;
}

uint64_t sub_22794DC18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for PromotionalAssets.Video(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_22799F4C0();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_22794F9E4(v9, (uint64_t)v6, type metadata accessor for PromotionalAssets.Video);
      sub_22799F130();
      sub_22799F130();
      sub_22799EFE0();
      sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      sub_22799F0DC();
      sub_22799F0DC();
      sub_22799F0DC();
      result = sub_22794FB54((uint64_t)v6, type metadata accessor for PromotionalAssets.Video);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_22794DD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = type metadata accessor for PromotionalAssets.PhotoAlbum.Photo(0);
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903FF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  v28 = a1;
  result = sub_22799F4C0();
  v23 = v10;
  if (v10)
  {
    v12 = 0;
    v22 = a2 + 32;
    do
    {
      v14 = v22 + 24 * v12;
      v15 = *(_QWORD *)(v14 + 8);
      v16 = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22799F130();
      sub_22799F4C0();
      v17 = *(_QWORD *)(v16 + 16);
      v25 = v15;
      v26 = v12;
      v24 = v16;
      if (v17)
      {
        v18 = v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        v19 = *(_QWORD *)(v4 + 72);
        while (1)
        {
          sub_22794F9E4(v18, (uint64_t)v9, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
          v20 = v27;
          v13(v9, 0, 1, v27);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v20) == 1)
            break;
          sub_22794F7B8((uint64_t)v9, (uint64_t)v6, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          sub_22799EFE0();
          sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
          sub_22799F0DC();
          sub_22794FB54((uint64_t)v6, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          v18 += v19;
          if (!--v17)
            goto LABEL_4;
        }
      }
      else
      {
        v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_4:
        v13(v9, 1, 1, v27);
      }
      v12 = v26 + 1;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while (v12 != v23);
  }
  return result;
}

uint64_t sub_22794DFBC(uint64_t a1, uint64_t a2)
{
  return sub_22794E1E0(a1, a2, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, &qword_255903FF0);
}

uint64_t sub_22794DFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for PromotionalAssets.WatchFace(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v20 = (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903FF8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  v21 = a1;
  sub_22799F4C0();
  if (!v10)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v9, 1, 1, v4);
  v11 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v19 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    sub_22794F9E4(v11, (uint64_t)v9, type metadata accessor for PromotionalAssets.WatchFace);
    v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v12(v9, 0, 1, v4);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4);
    if ((_DWORD)result == 1)
      break;
    v18 = v12;
    v22 = v10;
    v14 = v20;
    sub_22794F7B8((uint64_t)v9, v20, type metadata accessor for PromotionalAssets.WatchFace);
    sub_22799EFE0();
    sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_22799F0DC();
    sub_22799F0DC();
    v15 = v14;
    v16 = v22;
    sub_22794FB54(v15, type metadata accessor for PromotionalAssets.WatchFace);
    v11 += v19;
    v10 = v16 - 1;
    if (!v10)
      return v18(v9, 1, 1, v4);
  }
  return result;
}

uint64_t sub_22794E1CC(uint64_t a1, uint64_t a2)
{
  return sub_22794E1E0(a1, a2, type metadata accessor for PromotionalAssets.PhoneWallpaper, &qword_255904000);
}

uint64_t sub_22794E1E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v19[2];

  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  v19[1] = a1;
  sub_22799F4C0();
  if (v15)
  {
    v16 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v19[0] = *(_QWORD *)(v9 + 72);
    while (1)
    {
      sub_22794F9E4(v16, (uint64_t)v14, a3);
      v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v17(v14, 0, 1, v8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
      if ((_DWORD)result == 1)
        break;
      sub_22794F7B8((uint64_t)v14, (uint64_t)v11, a3);
      sub_22799EFE0();
      sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      sub_22799F0DC();
      sub_22794FB54((uint64_t)v11, a3);
      v16 += v19[0];
      if (!--v15)
        return v17(v14, 1, 1, v8);
    }
  }
  else
  {
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v17(v14, 1, 1, v8);
  }
  return result;
}

char *sub_22794E390(uint64_t a1, void *a2)
{
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  objc_super v12;
  _QWORD v13[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v13[3] = type metadata accessor for ShazamEventsServiceConnection();
  v13[4] = &off_24F00F740;
  v13[0] = a1;
  sub_22794F960((uint64_t)v13, (uint64_t)a2 + OBJC_IVAR____TtC12ShazamEvents24LiveMusicEventConnection_connection);
  v12.receiver = a2;
  v12.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v12, sel_init);
  v6 = &v5[OBJC_IVAR____TtC12ShazamEvents24LiveMusicEventConnection_connection];
  swift_beginAccess();
  v7 = *((_QWORD *)v6 + 3);
  v8 = *((_QWORD *)v6 + 4);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v10 = v5;
  v9(v5, v7, v8);
  swift_endAccess();
  objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v6, *((_QWORD *)v6 + 3)) + 16), sel_resume);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v10;
}

uint64_t _s12ShazamEvents9LiveMusicV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = *(_QWORD *)a2;
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_227982AE0(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0 || (sub_227982778(v23, v18) & 1) == 0 || (sub_2279828B4(v19, v6) & 1) == 0)
    return 0;
  if (!v20)
  {
    if (!v8)
      goto LABEL_12;
    goto LABEL_17;
  }
  if (!v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_17:
    sub_22794E8C4(v5, v8);
    sub_22794E8F4(v21, v20);
    v14 = v5;
    v15 = v8;
LABEL_18:
    sub_22794E8F4(v14, v15);
    return 0;
  }
  if ((v21 != v5 || v20 != v8) && (sub_22799F430() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v21;
    v15 = v20;
    goto LABEL_18;
  }
  sub_22794E8C4(v21, v20);
  sub_22794E8C4(v21, v20);
  sub_22794E8C4(v5, v8);
  v12 = sub_227983DDC(v22, v7);
  sub_22794E8F4(v5, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22794E8F4(v21, v20);
  if ((v12 & 1) == 0)
    return 0;
LABEL_12:
  if (!v17)
  {
    v13 = v10;
    if (!v9)
      return v3 ^ v13 ^ 1u;
    return 0;
  }
  v13 = v10;
  if (!v9 || (sub_227982A5C(v17, v9) & 1) == 0)
    return 0;
  return v3 ^ v13 ^ 1u;
}

uint64_t sub_22794E6F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[8];

  v2 = *(_QWORD *)(a1 + 16);
  sub_22794FC34();
  result = sub_22799F208();
  v20 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[4];
      v6 = v4[5];
      v7 = v4[2];
      v21[3] = v4[3];
      v21[4] = v5;
      v8 = v4[6];
      v21[5] = v6;
      v21[6] = v8;
      v9 = *v4;
      v10 = v4[1];
      v4 += 7;
      v21[0] = v9;
      v21[1] = v10;
      v21[2] = v7;
      sub_22794FC78(v21);
      sub_227949218(&v15, v21);
      v11 = v18;
      v13 = v17;
      v14 = v16;
      v12 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794FBC0(v14, v13, v11, v12);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v20;
  }
  return result;
}

uint64_t sub_22794E808(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_22794FBF0();
  result = sub_22799F208();
  v10 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_227949E8C(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_22794E8C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22794E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_22794E924()
{
  unint64_t result;

  result = qword_255903EC0;
  if (!qword_255903EC0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0430, &type metadata for LiveMusic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903EC0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2A1168](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_22794E9AC()
{
  unint64_t result;

  result = qword_255903F08;
  if (!qword_255903F08)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Setlist, &type metadata for Setlist);
    atomic_store(result, (unint64_t *)&qword_255903F08);
  }
  return result;
}

uint64_t sub_22794E9F0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255903F10);
    v8 = a2();
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22794EA58()
{
  unint64_t result;

  result = qword_255903F20;
  if (!qword_255903F20)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Playlist, &type metadata for Playlist);
    atomic_store(result, (unint64_t *)&qword_255903F20);
  }
  return result;
}

uint64_t sub_22794EA9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255903EC8);
    result = MEMORY[0x22E2A1174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22794EAE0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255903ED8);
    v10 = sub_22794F9A4(a2, (uint64_t (*)(uint64_t))type metadata accessor for Venue, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22794EB64(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255903EF0);
    v10 = sub_22794F9A4(a2, (uint64_t (*)(uint64_t))type metadata accessor for Ticket, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22794EBE8()
{
  unint64_t result;

  result = qword_255903F58;
  if (!qword_255903F58)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Setlist, &type metadata for Setlist);
    atomic_store(result, (unint64_t *)&qword_255903F58);
  }
  return result;
}

unint64_t sub_22794EC2C()
{
  unint64_t result;

  result = qword_255903F68;
  if (!qword_255903F68)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Playlist, &type metadata for Playlist);
    atomic_store(result, (unint64_t *)&qword_255903F68);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_22794EC98(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22794ECEC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22794ED2C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_22794ED60();
  a1[2] = sub_22794EDA4();
  result = sub_22794EDE8();
  a1[3] = result;
  return result;
}

unint64_t sub_22794ED60()
{
  unint64_t result;

  result = qword_255903F88;
  if (!qword_255903F88)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for LiveMusic, &type metadata for LiveMusic);
    atomic_store(result, (unint64_t *)&qword_255903F88);
  }
  return result;
}

unint64_t sub_22794EDA4()
{
  unint64_t result;

  result = qword_255903F90;
  if (!qword_255903F90)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for LiveMusic, &type metadata for LiveMusic);
    atomic_store(result, (unint64_t *)&qword_255903F90);
  }
  return result;
}

unint64_t sub_22794EDE8()
{
  unint64_t result;

  result = qword_255903F98;
  if (!qword_255903F98)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for LiveMusic, &type metadata for LiveMusic);
    atomic_store(result, (unint64_t *)&qword_255903F98);
  }
  return result;
}

unint64_t sub_22794EE30()
{
  unint64_t result;

  result = qword_255903FA0;
  if (!qword_255903FA0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255903FA0);
  }
  return result;
}

unint64_t sub_22794EE78()
{
  unint64_t result;

  result = qword_255903FC8;
  if (!qword_255903FC8)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for LiveMusic, &type metadata for LiveMusic);
    atomic_store(result, (unint64_t *)&qword_255903FC8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PromotionalAssets(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for LiveMusic(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LiveMusic(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LiveMusic(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22794F12C(a1 + 24);
      v7 = *(_QWORD *)(a2 + 40);
      *v4 = *v5;
      *(_QWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *v4 = v8;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_22794F12C(uint64_t a1)
{
  destroy for PromotionalAssets.PhotoAlbum();
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LiveMusic(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 32);
  if (!v4)
  {
    sub_22794F12C(a1 + 24);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveMusic(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveMusic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveMusic()
{
  return &type metadata for LiveMusic;
}

uint64_t getEnumTagSinglePayload for LiveMusic.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveMusic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_22794F3C4 + 4 * byte_2279A0233[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_22794F3F8 + 4 * byte_2279A022E[v4]))();
}

uint64_t sub_22794F3F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22794F400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22794F408);
  return result;
}

uint64_t sub_22794F414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22794F41CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22794F420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22794F428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveMusic.CodingKeys()
{
  return &type metadata for LiveMusic.CodingKeys;
}

unint64_t sub_22794F448()
{
  unint64_t result;

  result = qword_255903FD0;
  if (!qword_255903FD0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0408, &type metadata for LiveMusic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903FD0);
  }
  return result;
}

unint64_t sub_22794F490()
{
  unint64_t result;

  result = qword_255903FD8;
  if (!qword_255903FD8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0378, &type metadata for LiveMusic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903FD8);
  }
  return result;
}

unint64_t sub_22794F4D8()
{
  unint64_t result;

  result = qword_255903FE0;
  if (!qword_255903FE0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A03A0, &type metadata for LiveMusic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255903FE0);
  }
  return result;
}

uint64_t sub_22794F51C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756E6576 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7374656B636974 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7473696C746573 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7473696C79616C70 && a2 == 0xE900000000000073 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_22794F7B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22794F7FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_22799F208();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_22794A090(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_22794F890()
{
  unint64_t result;

  result = qword_255904028;
  if (!qword_255904028)
  {
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255904028);
  }
  return result;
}

unint64_t sub_22794F8D4()
{
  unint64_t result;

  result = qword_255904030;
  if (!qword_255904030)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3EA8, &type metadata for ResourceID.ResourceIDError);
    atomic_store(result, (unint64_t *)&qword_255904030);
  }
  return result;
}

uint64_t sub_22794F918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22794F960(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22794F9A4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E2A1174](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22794F9E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22794FA28(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22794FA9C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22794FB10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22794FB54(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22794FB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22794FBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_22794FBF0()
{
  unint64_t result;

  result = qword_255904048;
  if (!qword_255904048)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Genre, &type metadata for Genre);
    atomic_store(result, (unint64_t *)&qword_255904048);
  }
  return result;
}

unint64_t sub_22794FC34()
{
  unint64_t result;

  result = qword_255904058;
  if (!qword_255904058)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255904058);
  }
  return result;
}

_QWORD *sub_22794FC78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  v6 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22794FB90(v6, v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_22794FD1C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[12];
  sub_22794FBC0(*a1, a1[1], a1[2], a1[3]);
  sub_22794FBC0(v2, v3, v4, v5);
  return a1;
}

_QWORD *sub_22794FDBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[7];
  v6 = a1[4];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22794FBC0(v6, v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t static LiveMusicEventXPCValueContainer.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t LiveMusicEventXPCValueContainer.__allocating_init(coder:)(uint64_t a1)
{
  return sub_227950460(a1, (uint64_t (*)(uint64_t))sub_227951174);
}

uint64_t LiveMusicEventXPCValueContainer.init(coder:)(uint64_t a1)
{
  return sub_2279504E0(a1, (uint64_t (*)(uint64_t))sub_227951174);
}

Swift::Void __swiftcall LiveMusicEventXPCValueContainer.encode(with:)(NSCoder with)
{
  sub_227950024(with.super.isa, (uint64_t)&OBJC_IVAR____TtC12ShazamEvents31LiveMusicEventXPCValueContainer_value, &qword_255904220, (void (*)(void))sub_227951F0C);
}

void _s12ShazamEvents34LiveMusicScheduleXPCValueContainerC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value + 8);
  v9 = *(_BYTE *)(v1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value + 16);
  sub_227951D70(v7, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904268);
  sub_227951D9C();
  sub_22799F220();
  sub_227951ACC(v7, v8, v9);
  objc_msgSend(v3, sel_finishEncoding);
  v4 = objc_msgSend(v3, sel_encodedData);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_22799F10C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_227950024(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  id v7;
  id v8;
  void *v9;
  id v10;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  a4();
  sub_22799F220();
  objc_msgSend(v7, sel_finishEncoding);
  v8 = objc_msgSend(v7, sel_encodedData);
  if (v8)
  {
    v9 = v8;
    v10 = (id)sub_22799F10C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

id LiveMusicEventXPCValueContainer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LiveMusicEventXPCValueContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t static LiveMusicScheduleXPCValueContainer.supportsSecureCoding.getter()
{
  return 1;
}

id LiveMusicScheduleXPCValueContainer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_227951400(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id LiveMusicScheduleXPCValueContainer.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_227951400(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

void LiveMusicScheduleXPCValueContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t static LiveMusicVenueScheduleXPCValueContainer.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t LiveMusicVenueScheduleXPCValueContainer.__allocating_init(coder:)(uint64_t a1)
{
  return sub_227950460(a1, (uint64_t (*)(uint64_t))sub_22795158C);
}

uint64_t sub_227950460(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  objc_class *v2;
  id v5;
  uint64_t v6;

  v5 = objc_allocWithZone(v2);
  swift_getObjectType();
  v6 = a2(a1);
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t LiveMusicVenueScheduleXPCValueContainer.init(coder:)(uint64_t a1)
{
  return sub_2279504E0(a1, (uint64_t (*)(uint64_t))sub_22795158C);
}

uint64_t sub_2279504E0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;

  swift_getObjectType();
  v4 = a2(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t sub_227950558(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void *))
{
  uint64_t v6;

  swift_getObjectType();
  v6 = a4(a3);
  swift_deallocPartialClassInstance();
  return v6;
}

Swift::Void __swiftcall LiveMusicVenueScheduleXPCValueContainer.encode(with:)(NSCoder with)
{
  sub_227950024(with.super.isa, (uint64_t)&OBJC_IVAR____TtC12ShazamEvents39LiveMusicVenueScheduleXPCValueContainer_value, (uint64_t *)&unk_255905C30, (void (*)(void))sub_227951AF8);
}

void LiveMusicVenueScheduleXPCValueContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _s12ShazamEvents31LiveMusicEventXPCValueContainerCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227950714()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_227950764(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_227950794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2A1174](&unk_2279A06A8, a3);
  return sub_22799F454();
}

uint64_t sub_2279507E8(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A06A8, a1);
  return sub_22799F16C();
}

uint64_t sub_227950834()
{
  MEMORY[0x22E2A1174](&unk_2279A06A8);
  return sub_22799F184();
}

uint64_t sub_227950884()
{
  MEMORY[0x22E2A1174](&unk_2279A06A8);
  return sub_22799F178();
}

uint64_t sub_2279508D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227950714();
  *a1 = result;
  return result;
}

uint64_t sub_227950908@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_227950764(*v1);
  *a1 = result;
  a1[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_227950934()
{
  char *v0;

  return sub_227950764(*v0);
}

uint64_t sub_227950950@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227950714();
  *a1 = result;
  return result;
}

uint64_t sub_22795097C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22794777C();
  *a1 = result;
  return result;
}

uint64_t sub_2279509B4(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0748, a1);
  return sub_22799F52C();
}

uint64_t sub_2279509E8(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0748, a1);
  return sub_22799F538();
}

void Result<>.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[26];

  v21[5] = a9;
  v21[2] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v21[11] = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22799F268();
  v21[9] = *(_QWORD *)(v17 - 8);
  v21[10] = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21[15] = (char *)v21 - v19;
  v21[8] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21[3] = (char *)v21 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[18] = a2;
  v21[19] = a3;
  v21[13] = a4;
  v21[20] = a4;
  v21[21] = a5;
  v21[6] = a6;
  v21[22] = a6;
  v21[23] = a7;
  v21[24] = a8;
  _s10CodingKeysOMa();
}

uint64_t sub_227950B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[96];

  MEMORY[0x22E2A1174](&unk_2279A0748, a1);
  v5 = sub_22799F3AC();
  *(_QWORD *)(v4 - 152) = v5;
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v21[-v6];
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 192) = v2;
  v8 = sub_22799F4F0();
  *(_QWORD *)(v4 - 256) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v21[-v10];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  *(_QWORD *)(v4 - 160) = v7;
  v12 = *(_QWORD *)(v4 - 72);
  sub_22799F508();
  if (!v12)
  {
    v13 = *(_QWORD *)(v4 - 224);
    *(_QWORD *)(v4 - 280) = v11;
    *(_QWORD *)(v4 - 72) = v9;
    *(_BYTE *)(v4 - 144) = 0;
    v14 = *(_QWORD *)(v4 - 176);
    sub_22799F3A0();
    v15 = *(_QWORD *)(v4 - 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(*(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 152));
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    v17 = *(_QWORD *)(v4 - 264);
    v16(v17, v15, v14);
    v18 = *(_QWORD *)(v4 - 280);
    v16(v18, v17, v14);
    v19 = *(_QWORD *)(v4 - 256);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 32))(*(_QWORD *)(v4 - 248), v18, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

void Result<>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[18];

  v15[6] = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v2 = MEMORY[0x24BDAC7A8](a1);
  v15[5] = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(*(_QWORD *)(v4 + 16) - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v15[0] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *(_QWORD *)(v7 + 32);
  v15[3] = v9;
  v15[4] = v10;
  v15[11] = v10;
  v15[12] = v11;
  v15[7] = v11;
  v15[13] = v12;
  v15[14] = v13;
  v15[2] = v13;
  v15[15] = v14;
  v15[16] = v9;
  v15[17] = v8;
  _s10CodingKeysOMa();
}

uint64_t sub_227950EC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x22E2A1174](&unk_2279A0748, a1);
  v6 = sub_22799F40C();
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 144) = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22799F520();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 - 160), v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(_QWORD *)(v5 - 184);
    v9 = *(_QWORD *)(v5 - 176);
    v11 = *(_QWORD *)(v5 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v10, v4, v11);
    *(_BYTE *)(v5 - 136) = 1;
    v12 = *(_QWORD *)(v5 - 144);
    sub_22799F400();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v8, v12);
  }
  else
  {
    v15 = *(_QWORD *)(v5 - 224);
    v14 = *(_QWORD *)(v5 - 216);
    v16 = *(_QWORD *)(v5 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v4, v16);
    *(_BYTE *)(v5 - 136) = 0;
    v17 = *(_QWORD *)(v5 - 144);
    sub_22799F400();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v8, v17);
  }
}

void sub_227951070(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  Result<>.init(from:)(a1, a2[2], a2[3], *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), *(_QWORD *)(a3 - 24), *(_QWORD *)(a3 - 32), a2[4], a4);
}

void sub_227951098(uint64_t a1, uint64_t a2)
{
  Result<>.encode(to:)(a1, a2);
}

id sub_2279510B8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_22799EFEC();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_22799EF98();

    swift_willThrow();
  }
  return v2;
}

id sub_227951174(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  int v18;
  id v19;
  id v20;
  objc_class *v22;
  id v23;
  id v24;
  objc_super v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2559042B0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904220);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  sub_227951C38();
  v11 = sub_22799F238();
  if (v11)
  {
    v12 = (void *)v11;
    v24 = a1;
    v13 = sub_22799EFF8();
    v15 = v14;
    v16 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v17 = sub_2279510B8();
    sub_227951C74(v13, v15);
    if (v17)
    {
      sub_227952004();
      sub_22799F22C();
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
      v19 = v24;
      if (v18 != 1)
      {
        sub_2279520F8((uint64_t)v3, (uint64_t)v10, &qword_255904220);
        sub_22794FB10((uint64_t)v10, (uint64_t)v8, &qword_255904220);
        v22 = (objc_class *)type metadata accessor for LiveMusicEventXPCValueContainer(0);
        v23 = objc_allocWithZone(v22);
        sub_22794FB10((uint64_t)v8, (uint64_t)v23 + OBJC_IVAR____TtC12ShazamEvents31LiveMusicEventXPCValueContainer_value, &qword_255904220);
        v25.receiver = v23;
        v25.super_class = v22;
        v20 = objc_msgSendSuper2(&v25, sel_init);
        sub_2279520BC((uint64_t)v8, &qword_255904220);
        sub_2279520BC((uint64_t)v10, &qword_255904220);
        objc_msgSend(v17, sel_finishDecoding);

        return v20;
      }
      sub_2279520BC((uint64_t)v3, &qword_2559042B0);
      objc_msgSend(v17, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_227951400(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  unsigned __int8 v9;
  id v10;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  objc_super v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  sub_227951C38();
  v2 = sub_22799F238();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_22799EFF8();
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v8 = sub_2279510B8();
    sub_227951C74(v4, v6);
    if (v8)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255904268);
      sub_227951E54();
      sub_22799F22C();
      v9 = v19;
      if (v19 != 255)
      {
        v12 = v18;
        v13 = (objc_class *)type metadata accessor for LiveMusicScheduleXPCValueContainer();
        v14 = (char *)objc_allocWithZone(v13);
        v15 = &v14[OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value];
        *(_QWORD *)v15 = v17;
        *((_QWORD *)v15 + 1) = v12;
        v15[16] = v9 & 1;
        v16.receiver = v14;
        v16.super_class = v13;
        v10 = objc_msgSendSuper2(&v16, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        return v10;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
  }
  else
  {

  }
  return 0;
}

id sub_22795158C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904250);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255905C30);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_227951C38();
  v12 = sub_22799F238();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_22799EFF8();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_2279510B8();
    sub_227951C74(v14, v16);
    if (v18)
    {
      sub_227951CB8();
      sub_22799F22C();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_2279520F8((uint64_t)v4, (uint64_t)v11, (uint64_t *)&unk_255905C30);
        sub_22794FB10((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_255905C30);
        v23 = (objc_class *)type metadata accessor for LiveMusicVenueScheduleXPCValueContainer(0);
        v24 = objc_allocWithZone(v23);
        sub_22794FB10((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR____TtC12ShazamEvents39LiveMusicVenueScheduleXPCValueContainer_value, (uint64_t *)&unk_255905C30);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_2279520BC((uint64_t)v9, (uint64_t *)&unk_255905C30);
        sub_2279520BC((uint64_t)v11, (uint64_t *)&unk_255905C30);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_2279520BC((uint64_t)v4, &qword_255904250);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

void _s10CodingKeysOMa()
{
  JUMPOUT(0x22E2A1120);
}

uint64_t sub_227951824()
{
  return type metadata accessor for LiveMusicEventXPCValueContainer(0);
}

uint64_t type metadata accessor for LiveMusicEventXPCValueContainer(uint64_t a1)
{
  return sub_2279518A8(a1, (uint64_t *)&unk_2559040F8);
}

void sub_227951840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2279518F0(a1, a2, a3, &qword_255904108, (uint64_t *)&unk_255904110);
}

uint64_t method lookup function for LiveMusicEventXPCValueContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for LiveMusicScheduleXPCValueContainer()
{
  return objc_opt_self();
}

uint64_t method lookup function for LiveMusicScheduleXPCValueContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_22795188C()
{
  return type metadata accessor for LiveMusicVenueScheduleXPCValueContainer(0);
}

uint64_t type metadata accessor for LiveMusicVenueScheduleXPCValueContainer(uint64_t a1)
{
  return sub_2279518A8(a1, (uint64_t *)&unk_255904178);
}

uint64_t sub_2279518A8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2279518DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2279518F0(a1, a2, a3, &qword_255904188, qword_255904190);
}

void sub_2279518F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v5;

  sub_227951970(319, a4, a5);
  if (v5 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LiveMusicVenueScheduleXPCValueContainer()
{
  return swift_lookUpClassMethod();
}

void sub_227951970(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    sub_2279466D4();
    v4 = sub_22799F4F0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2279519D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2279519E0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227951A2C + 4 * byte_2279A0495[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227951A60 + 4 * byte_2279A0490[v4]))();
}

uint64_t sub_227951A60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227951A68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227951A70);
  return result;
}

uint64_t sub_227951A7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227951A84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227951A88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227951A90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_227951A9C()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227951AAC()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227951ABC()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_227951ACC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_227951AF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255904228;
  if (!qword_255904228)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255905C30);
    v2[0] = sub_227951FC4(&qword_255904230, qword_255904190, (uint64_t)&protocol conformance descriptor for VenueSchedule<A>);
    v2[1] = sub_227951FC4(&qword_255904238, qword_255904190, (uint64_t)&protocol conformance descriptor for VenueSchedule<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255904228);
  }
  return result;
}

unint64_t sub_227951BB0()
{
  unint64_t result;

  result = qword_255904240;
  if (!qword_255904240)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for EventsError, &type metadata for EventsError);
    atomic_store(result, (unint64_t *)&qword_255904240);
  }
  return result;
}

unint64_t sub_227951BF4()
{
  unint64_t result;

  result = qword_255904248;
  if (!qword_255904248)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for EventsError, &type metadata for EventsError);
    atomic_store(result, (unint64_t *)&qword_255904248);
  }
  return result;
}

unint64_t sub_227951C38()
{
  unint64_t result;

  result = qword_255904258;
  if (!qword_255904258)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255904258);
  }
  return result;
}

uint64_t sub_227951C74(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_227951CB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255904260;
  if (!qword_255904260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255905C30);
    v2[0] = sub_227951FC4(&qword_255904230, qword_255904190, (uint64_t)&protocol conformance descriptor for VenueSchedule<A>);
    v2[1] = sub_227951FC4(&qword_255904238, qword_255904190, (uint64_t)&protocol conformance descriptor for VenueSchedule<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255904260);
  }
  return result;
}

uint64_t sub_227951D70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_227951D9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255904270;
  if (!qword_255904270)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904268);
    v2[0] = sub_227951FC4(&qword_255904278, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
    v2[1] = sub_227951FC4(&qword_255904288, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255904270);
  }
  return result;
}

unint64_t sub_227951E54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255904290;
  if (!qword_255904290)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904268);
    v2[0] = sub_227951FC4(&qword_255904278, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
    v2[1] = sub_227951FC4(&qword_255904288, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255904290);
  }
  return result;
}

unint64_t sub_227951F0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255904298;
  if (!qword_255904298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904220);
    v2[0] = sub_227951FC4(&qword_2559042A0, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
    v2[1] = sub_227951FC4(&qword_2559042A8, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255904298);
  }
  return result;
}

uint64_t sub_227951FC4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2A1174](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227952004()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_2559042B8;
  if (!qword_2559042B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904220);
    v2[0] = sub_227951FC4(&qword_2559042A0, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
    v2[1] = sub_227951FC4(&qword_2559042A8, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
    v2[2] = sub_227951BB0();
    v2[3] = sub_227951BF4();
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_2559042B8);
  }
  return result;
}

uint64_t sub_2279520BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2279520F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t static AnyEvent.with(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;

  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v6 = swift_task_alloc();
  v3[3] = v6;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_2279521E4;
  return Event<>.init(id:)(v6, a2, a3);
}

uint64_t sub_2279521E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227952248()
{
  uint64_t v0;

  sub_22794F918(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227952288()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Event.id.getter()
{
  uint64_t v0;

  v0 = sub_22795444C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Event.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Event.time.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *(int *)(a1 + 40);
  v6 = type metadata accessor for Event.Time(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t Event.infoURL.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Event.webURL.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Event.dataProvider.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Event.promotionalAssets.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return sub_22794EC98(v4);
}

uint64_t Event.Time.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799EF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Event.Time.timeZone.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_22799F0AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2279524A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746E4965746164 && a2 == 0xEC0000006C617672;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2279525B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656E6F5A656D6974;
  else
    return 0x65746E4965746164;
}

BOOL sub_2279525F0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_227952600()
{
  return sub_22799F4C0();
}

uint64_t sub_227952624(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xEA00000000004449 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C52556F666E69 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C5255626577 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x766F725061746164 && a2 == 0xEC00000072656469 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002279A7090 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002279A70B0 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E65697265707865 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2279529BC()
{
  sub_22799F4B4();
  sub_22799F4C0();
  return sub_22799F4E4();
}

uint64_t sub_227952A00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227952A2C + 4 * byte_2279A0798[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_227952A2C()
{
  return 0x656372756F736572;
}

uint64_t sub_227952A48(uint64_t a1)
{
  return a1 + 2054;
}

uint64_t sub_227952A50()
{
  return 0x4C52556F666E69;
}

uint64_t sub_227952A68()
{
  return 0x4C5255626577;
}

uint64_t sub_227952A7C()
{
  return 0x766F725061746164;
}

unint64_t sub_227952A9C()
{
  return 0xD000000000000011;
}

uint64_t sub_227952AC4()
{
  return 0x6E65697265707865;
}

BOOL sub_227952AE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2279469B0(*a1, *a2);
}

uint64_t sub_227952AF4()
{
  return sub_227946AC4();
}

uint64_t sub_227952B04()
{
  return sub_2279469C0();
}

uint64_t sub_227952B14()
{
  sub_22799F4B4();
  sub_2279469C0();
  return sub_22799F4E4();
}

uint64_t sub_227952B58()
{
  char *v0;

  return sub_2279525B0(*v0);
}

uint64_t sub_227952B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2279524A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227952B94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22794777C();
  *a1 = result;
  return result;
}

uint64_t sub_227952BBC(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0BE8, a1);
  return sub_22799F52C();
}

uint64_t sub_227952BF0(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0BE8, a1);
  return sub_22799F538();
}

BOOL sub_227952C24(char *a1, char *a2)
{
  return sub_2279525F0(*a1, *a2);
}

uint64_t sub_227952C38()
{
  return sub_2279529BC();
}

uint64_t sub_227952C44()
{
  return sub_227952600();
}

uint64_t sub_227952C50()
{
  sub_22799F4B4();
  sub_227952600();
  return sub_22799F4E4();
}

uint64_t sub_227952C94()
{
  unsigned __int8 *v0;

  return sub_227952A00(*v0);
}

uint64_t sub_227952CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227952624(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227952CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227957380();
  *a1 = result;
  return result;
}

uint64_t sub_227952CF4(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0C38, a1);
  return sub_22799F52C();
}

uint64_t sub_227952D28(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A0C38, a1);
  return sub_22799F538();
}

uint64_t Event.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  type metadata accessor for Event.Time(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v5);
  Event.Time.hash(into:)();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 52) + 8))
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22799F4CC();
  }
  if (*(_QWORD *)(v2 + *(int *)(a2 + 56)) == 1)
  {
    sub_22799F4CC();
  }
  else
  {
    sub_22799F4CC();
    PromotionalAssets.hash(into:)(a1);
  }
  sub_22799F0DC();
  return sub_22799F0DC();
}

uint64_t static Event.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30[4];
  _QWORD v31[4];

  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_22799F430() & 1) == 0)
    return 0;
  v9 = a2[3];
  v10 = a1[2] == a2[2] && a1[3] == v9;
  if (!v10 && (sub_22799F430() & 1) == 0)
    return 0;
  v11 = (int *)type metadata accessor for Event(0, a3, a4, v9);
  if ((static Event.Time.== infix(_:_:)((uint64_t)a1 + v11[10], (uint64_t)a2 + v11[10], a3, a4) & 1) == 0
    || (MEMORY[0x22E2A0808]((char *)a1 + v11[11], (char *)a2 + v11[11]) & 1) == 0
    || (MEMORY[0x22E2A0808]((char *)a1 + v11[12], (char *)a2 + v11[12]) & 1) == 0)
  {
    return 0;
  }
  v12 = v11[13];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = *(_QWORD *)((char *)a1 + v12 + 8);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  if (v14)
  {
    if (!v16)
      return 0;
    v17 = *v13 == *v15 && v14 == v16;
    if (!v17 && (sub_22799F430() & 1) == 0)
      return 0;
  }
  else if (v16)
  {
    return 0;
  }
  v18 = v11[14];
  v20 = *(_QWORD *)((char *)a1 + v18);
  v19 = *(_QWORD *)((char *)a1 + v18 + 8);
  v21 = *(_QWORD *)((char *)a1 + v18 + 16);
  v22 = *(_QWORD *)((char *)a1 + v18 + 24);
  v23 = (_QWORD *)((char *)a2 + v18);
  v24 = *v23;
  v25 = v23[1];
  v27 = v23[2];
  v26 = v23[3];
  if (v20 != 1)
  {
    v31[0] = v20;
    v31[1] = v19;
    v31[2] = v21;
    v31[3] = v22;
    if (v24 != 1)
    {
      v30[0] = v24;
      v30[1] = v25;
      v30[2] = v27;
      v30[3] = v26;
      sub_22794EC98(v20);
      sub_22794EC98(v20);
      v29 = _s12ShazamEvents17PromotionalAssetsV2eeoiySbAC_ACtFZ_0(v31, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22795446C(v20);
      if ((v29 & 1) == 0)
        return 0;
      goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_28:
    sub_22794EC98(v24);
    sub_22795446C(v20);
    sub_22795446C(v24);
    return 0;
  }
  if (v24 != 1)
    goto LABEL_28;
LABEL_30:
  if ((MEMORY[0x22E2A0808]((char *)a1 + v11[15], (char *)a2 + v11[15]) & 1) != 0)
    return sub_22799F100() & 1;
  return 0;
}

uint64_t static Event.Time.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_22799EF38() & 1) != 0)
  {
    type metadata accessor for Event.Time(0, a3, a4, v6);
    JUMPOUT(0x22E2A08ECLL);
  }
  return 0;
}

uint64_t Event.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v6 = *(_QWORD *)(a2 + 16);
  v22 = *(_QWORD *)(a2 + 24);
  v23 = v6;
  v7 = type metadata accessor for Event.CodingKeys(255, v6, v22, a4);
  MEMORY[0x22E2A1174](&unk_2279A0C38, v7);
  v8 = sub_22799F40C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v25;
  sub_22799F520();
  LOBYTE(v26) = 0;
  v13 = v24;
  sub_22799F3D0();
  if (!v13)
  {
    v14 = a2;
    v15 = v23;
    v16 = *(_QWORD *)(v12 + 24);
    *(_QWORD *)&v26 = *(_QWORD *)(v12 + 16);
    *((_QWORD *)&v26 + 1) = v16;
    v28 = 1;
    sub_2279544C8();
    sub_22799F400();
    LOBYTE(v26) = 2;
    v18 = type metadata accessor for Event.Time(0, v15, v22, v17);
    MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>.Time, v18);
    sub_22799F400();
    LOBYTE(v26) = 3;
    sub_22799EFE0();
    sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_22799F400();
    LOBYTE(v26) = 4;
    sub_22799F400();
    LOBYTE(v26) = 5;
    sub_22799F3B8();
    v19 = (__int128 *)(v25 + *(int *)(v14 + 56));
    v20 = v19[1];
    v26 = *v19;
    v27 = v20;
    v28 = 6;
    sub_22795450C();
    sub_22799F3C4();
    LOBYTE(v26) = 7;
    sub_22799F400();
    LOBYTE(v26) = 8;
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t Event.hashValue.getter(uint64_t a1)
{
  return sub_227954054(a1, (void (*)(_BYTE *, uint64_t))Event.hash(into:));
}

uint64_t Event.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t *v71;
  __int128 v72;
  __int128 v73;
  char v74;

  v55 = a4;
  v54 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_22799EFE0();
  v63 = *(_QWORD *)(v66 - 8);
  v8 = MEMORY[0x24BDAC7A8](v66);
  v61 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v52 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v52 - v12;
  v14 = type metadata accessor for Event.Time(0, a2, a3, v13);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v52 - v15;
  v17 = type metadata accessor for Event.CodingKeys(255, a2, a3, v16);
  MEMORY[0x22E2A1174](&unk_2279A0C38, v17);
  v62 = sub_22799F3AC();
  v18 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v20 = (char *)&v52 - v19;
  v56 = a3;
  v67 = (int *)type metadata accessor for Event(0, a2, a3, v21);
  v22 = *((_QWORD *)v67 - 1);
  MEMORY[0x24BDAC7A8](v67);
  v71 = (uint64_t *)((char *)&v52 - v23);
  v24 = a1[3];
  v69 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v68 = v20;
  v25 = v70;
  sub_22799F508();
  if (v25)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  v26 = v59;
  v27 = v60;
  v53 = v22;
  v28 = v61;
  v70 = a2;
  LOBYTE(v72) = 0;
  v29 = sub_22799F370();
  v30 = (char *)v71;
  *v71 = v29;
  *((_QWORD *)v30 + 1) = v31;
  v74 = 1;
  sub_227954550();
  sub_22799F3A0();
  v32 = *((_QWORD *)&v72 + 1);
  *((_QWORD *)v30 + 2) = v72;
  *((_QWORD *)v30 + 3) = v32;
  LOBYTE(v72) = 2;
  v33 = v65;
  MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>.Time, v65);
  v34 = v26;
  sub_22799F3A0();
  v35 = v67;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v30[v67[10]], v34, v33);
  LOBYTE(v72) = 3;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v36 = v66;
  sub_22799F3A0();
  v37 = v27;
  v38 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v38(&v30[v35[11]], v37, v36);
  LOBYTE(v72) = 4;
  v39 = v58;
  sub_22799F3A0();
  v38((char *)v71 + v35[12], v39, v36);
  LOBYTE(v72) = 5;
  v40 = sub_22799F358();
  v41 = (uint64_t *)((char *)v71 + v35[13]);
  *v41 = v40;
  v41[1] = v42;
  v74 = 6;
  sub_227954594();
  sub_22799F364();
  v43 = (_OWORD *)((char *)v71 + v35[14]);
  v44 = v73;
  *v43 = v72;
  v43[1] = v44;
  LOBYTE(v72) = 7;
  sub_22799F3A0();
  v38((char *)v71 + v67[15], v28, v66);
  LOBYTE(v72) = 8;
  v45 = v57;
  v46 = v70;
  sub_22799F3A0();
  v47 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v68, v62);
  v48 = v67;
  v49 = v71;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))((char *)v71 + v67[16], v45, v46);
  v50 = v53;
  (*(void (**)(uint64_t, uint64_t *, int *))(v53 + 16))(v55, v49, v48);
  __swift_destroy_boxed_opaque_existential_1(v47);
  return (*(uint64_t (**)(uint64_t *, int *))(v50 + 8))(v49, v48);
}

uint64_t sub_227953D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2279543C4(a1, a2, a3, (void (*)(_BYTE *, uint64_t))Event.hash(into:));
}

uint64_t sub_227953D9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Event.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_227953DB8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Event.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_227953DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_22795444C();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_227953DF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return static Event.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t Event.Time.hash(into:)()
{
  sub_22799EF5C();
  sub_22794F9A4(&qword_255904010, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB890]);
  sub_22799F0DC();
  sub_22799F0AC();
  sub_22794F9A4(&qword_255904020, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_22799F0DC();
}

uint64_t Event.Time.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = type metadata accessor for Event.Time.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x22E2A1174](&unk_2279A0BE8, v5);
  v6 = sub_22799F40C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F520();
  v14 = 0;
  sub_22799EF5C();
  sub_22794F9A4(&qword_255904358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB888]);
  v10 = v12[1];
  sub_22799F400();
  if (!v10)
  {
    v13 = 1;
    sub_22799F0AC();
    sub_22794F9A4(&qword_255904360, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF528]);
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Event.Time.hashValue.getter(uint64_t a1)
{
  return sub_227954054(a1, (void (*)(_BYTE *, uint64_t))Event.Time.hash(into:));
}

uint64_t sub_227954054(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_22799F4B4();
  a2(v5, a1);
  return sub_22799F4E4();
}

uint64_t Event.Time.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v27 = a4;
  v32 = sub_22799F0AC();
  v26 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_22799EF5C();
  v30 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Event.Time.CodingKeys(255, a2, a3, v9);
  MEMORY[0x22E2A1174](&unk_2279A0BE8, v10);
  v36 = sub_22799F3AC();
  v29 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v12 = (char *)&v26 - v11;
  v28 = type metadata accessor for Event.Time(0, a2, a3, v13);
  v14 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v16 = (char *)&v26 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35 = v12;
  v17 = v37;
  sub_22799F508();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v28;
  v18 = v29;
  v37 = v14;
  v20 = (uint64_t)a1;
  v21 = v30;
  v22 = v31;
  v23 = v32;
  v39 = 0;
  sub_22794F9A4(&qword_255904368, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8A8]);
  sub_22799F3A0();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v33, v34);
  v38 = 1;
  sub_22794F9A4(&qword_255904370, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF540]);
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v36);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v16[*(int *)(v19 + 36)], v22, v23);
  v24 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v27, v16, v19);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v19);
}

uint64_t sub_2279543B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2279543C4(a1, a2, a3, (void (*)(_BYTE *, uint64_t))Event.Time.hash(into:));
}

uint64_t sub_2279543C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_22799F4B4();
  a4(v7, a2);
  return sub_22799F4E4();
}

uint64_t sub_227954410@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Event.Time.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_22795442C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Event.Time.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_227954440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Event.Time.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_22795444C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t type metadata accessor for Event.Time(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Event.Time);
}

uint64_t type metadata accessor for Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Event);
}

uint64_t sub_22795446C(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for Event.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Event.CodingKeys);
}

unint64_t sub_2279544C8()
{
  unint64_t result;

  result = qword_255904328;
  if (!qword_255904328)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3F10, &type metadata for ResourceID);
    atomic_store(result, (unint64_t *)&qword_255904328);
  }
  return result;
}

unint64_t sub_22795450C()
{
  unint64_t result;

  result = qword_255904338;
  if (!qword_255904338)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets, &type metadata for PromotionalAssets);
    atomic_store(result, (unint64_t *)&qword_255904338);
  }
  return result;
}

unint64_t sub_227954550()
{
  unint64_t result;

  result = qword_255904340;
  if (!qword_255904340)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3EE8, &type metadata for ResourceID);
    atomic_store(result, (unint64_t *)&qword_255904340);
  }
  return result;
}

unint64_t sub_227954594()
{
  unint64_t result;

  result = qword_255904350;
  if (!qword_255904350)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets, &type metadata for PromotionalAssets);
    atomic_store(result, (unint64_t *)&qword_255904350);
  }
  return result;
}

uint64_t type metadata accessor for Event.Time.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Event.Time.CodingKeys);
}

void sub_2279545E4()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_2279545F4()
{
  return MEMORY[0x24BEE0D10];
}

void sub_227954600()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t *initializeBufferWithCopyOfBuffer for AnyEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
    v9 = v8[10];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_22799EF5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = sub_22799F0AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v8[11];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_22799EFE0();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21((char *)a1 + v8[12], (char *)a2 + v8[12], v20);
    v22 = v8[13];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v8[14];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    if (v29 == 1)
    {
      v30 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v30;
    }
    else
    {
      v32 = *((_QWORD *)v28 + 1);
      v33 = *((_QWORD *)v28 + 2);
      *(_QWORD *)v27 = v29;
      *((_QWORD *)v27 + 1) = v32;
      v34 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = v33;
      *((_QWORD *)v27 + 3) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v21((char *)a1 + v8[15], (char *)a2 + v8[15], v20);
    v35 = v8[16];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(uint64_t *)((char *)a2 + v35 + 8);
    *(_QWORD *)v36 = *(uint64_t *)((char *)a2 + v35);
    *((_QWORD *)v36 + 1) = v38;
    *((_QWORD *)v36 + 2) = *(uint64_t *)((char *)a2 + v35 + 16);
    v39 = *(uint64_t *)((char *)a2 + v35 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39)
    {
      *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
      *((_QWORD *)v36 + 4) = v39;
      *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
      *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
    }
    *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
    v36[56] = v37[56];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AnyEvent(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v3 = a1 + v2[10];
  v4 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v6 = sub_22799F0AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[11];
  v8 = sub_22799EFE0();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + v2[12], v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v2[14]) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9(a1 + v2[15], v8);
  v10 = a1 + v2[16];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for AnyEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  v5 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v7 = v6[10];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_22799EF5C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_22799F0AC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v6[11];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_22799EFE0();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v16, v17, v18);
  v19(&a1[v6[12]], &a2[v6[12]], v18);
  v20 = v6[13];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = v6[14];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *(_QWORD *)&a2[v24];
  swift_bridgeObjectRetain();
  if (v27 == 1)
  {
    v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
  }
  else
  {
    v29 = *((_QWORD *)v26 + 1);
    v30 = *((_QWORD *)v26 + 2);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v29;
    v31 = *((_QWORD *)v26 + 3);
    *((_QWORD *)v25 + 2) = v30;
    *((_QWORD *)v25 + 3) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v19(&a1[v6[15]], &a2[v6[15]], v18);
  v32 = v6[16];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)&a2[v32 + 8];
  *(_QWORD *)v33 = *(_QWORD *)&a2[v32];
  *((_QWORD *)v33 + 1) = v35;
  *((_QWORD *)v33 + 2) = *(_QWORD *)&a2[v32 + 16];
  v36 = *(_QWORD *)&a2[v32 + 32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36)
  {
    *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
    *((_QWORD *)v33 + 4) = v36;
    *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
    *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
  }
  *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
  v33[56] = v34[56];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for AnyEvent(char *a1, char *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v5 = v4[10];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_22799EF5C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_22799F0AC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = v4[11];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_22799EFE0();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(&a1[v4[12]], &a2[v4[12]], v16);
  v18 = v4[13];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v4[14];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)&a2[v21];
  if (*(_QWORD *)&a1[v21] == 1)
  {
    if (v24 == 1)
    {
      v25 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v25;
    }
    else
    {
      *(_QWORD *)v22 = v24;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v24 == 1)
  {
    sub_227954F54((uint64_t)&a1[v21]);
    v26 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v26;
  }
  else
  {
    *(_QWORD *)v22 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v17(&a1[v4[15]], &a2[v4[15]], v16);
  v27 = v4[16];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v28 + 24;
  v31 = v29 + 24;
  v32 = *((_QWORD *)v29 + 4);
  if (*((_QWORD *)v28 + 4))
  {
    if (v32)
    {
      *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22794F12C((uint64_t)(v28 + 24));
      v33 = *((_QWORD *)v29 + 5);
      *v30 = *v31;
      *((_QWORD *)v28 + 5) = v33;
    }
  }
  else if (v32)
  {
    *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *v31;
    *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
    *v30 = v34;
  }
  *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28[56] = v29[56];
  return a1;
}

uint64_t sub_227954F54(uint64_t a1)
{
  destroy for PromotionalAssets();
  return a1;
}

char *initializeWithTake for AnyEvent(char *a1, char *a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;

  v4 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v4;
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v6 = v5[10];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22799EF5C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_22799F0AC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v5[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_22799EFE0();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v18(&a1[v5[12]], &a2[v5[12]], v17);
  *(_OWORD *)&a1[v5[13]] = *(_OWORD *)&a2[v5[13]];
  v19 = v5[14];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  v18(&a1[v5[15]], &a2[v5[15]], v17);
  v23 = v5[16];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *(_OWORD *)(v24 + 41) = *(_OWORD *)(v25 + 41);
  return a1;
}

char *assignWithTake for AnyEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v5;
  swift_bridgeObjectRelease();
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v7 = v6[10];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_22799EF5C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_22799F0AC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v6[11];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_22799EFE0();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(&a1[v6[12]], &a2[v6[12]], v18);
  v20 = v6[13];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v25 = v6[14];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  if (*(_QWORD *)&a1[v25] == 1)
    goto LABEL_4;
  if (*(_QWORD *)v27 == 1)
  {
    sub_227954F54(v26);
LABEL_4:
    v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v28;
    goto LABEL_6;
  }
  *(_QWORD *)v26 = *(_QWORD *)v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 8) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 24) = *((_QWORD *)v27 + 3);
  swift_bridgeObjectRelease();
LABEL_6:
  v19(&a1[v6[15]], &a2[v6[15]], v18);
  v29 = v6[16];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];
  swift_bridgeObjectRelease();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRelease();
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)v30 + 4))
  {
LABEL_10:
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
    goto LABEL_11;
  }
  v32 = *((_QWORD *)v31 + 4);
  if (!v32)
  {
    sub_22794F12C((uint64_t)(v30 + 24));
    goto LABEL_10;
  }
  *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
  *((_QWORD *)v30 + 4) = v32;
  swift_bridgeObjectRelease();
  *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
  swift_bridgeObjectRelease();
LABEL_11:
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  swift_bridgeObjectRelease();
  v30[56] = v31[56];
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyEvent()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227955374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      v10 = sub_22799EFE0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnyEvent()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227955468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = sub_22799EFE0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for AnyEvent()
{
  uint64_t result;

  result = qword_2559043E8;
  if (!qword_2559043E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_227955544(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_2279555A0(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8);
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
}

void sub_2279555A0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_2559043F8)
  {
    v2 = sub_2279555F8();
    v4 = type metadata accessor for Event(a1, (uint64_t)&type metadata for LiveMusic, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2559043F8);
  }
}

unint64_t sub_2279555F8()
{
  unint64_t result;

  result = qword_255904400[0];
  if (!qword_255904400[0])
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for LiveMusic, &type metadata for LiveMusic);
    atomic_store(result, qword_255904400);
  }
  return result;
}

uint64_t sub_22795563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = type metadata accessor for Event.Time(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    result = sub_22799EFE0();
    if (v6 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v7 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22795570C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  int v50;
  __int128 v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;

  v60 = sub_22799EF5C();
  v5 = *(_QWORD *)(v60 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v61 = sub_22799F0AC();
  v7 = *(_QWORD *)(v61 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 80) | v6;
  v10 = (*(_BYTE *)(v7 + 80) | v6);
  v59 = *(_QWORD *)(v5 + 64) + v8;
  v11 = (v59 & ~v8) + *(_QWORD *)(v7 + 64);
  v12 = sub_22799EFE0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v11 + v14;
  v16 = *(_QWORD *)(v13 + 64);
  v17 = v16 + v14;
  v18 = v16 + 7;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = v16 + v21;
  v23 = ((v16
        + v21
        + ((v14
          + 32
          + ((((v16 + 7 + ((v16 + v14 + ((v15 + ((v10 + 32) & ~v10)) & ~v14)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v21)
      + *(_QWORD *)(v20 + 64);
  v24 = v14 | v10 | v21;
  if (v24 > 7 || ((*(_DWORD *)(v13 + 80) | v9 | *(_DWORD *)(v20 + 80)) & 0x100000) != 0 || v23 > 0x18)
  {
    v27 = *a2;
    *a1 = *a2;
    v28 = v27 + ((v24 & 0xF8 ^ 0x1F8) & (v24 + 16));
    swift_retain();
  }
  else
  {
    v55 = v14 + 32;
    v56 = v22;
    v57 = *(_QWORD *)(v19 - 8);
    v58 = *(_QWORD *)(a3 + 16);
    v29 = ~v10;
    v30 = ~v8;
    v31 = ~v14;
    v53 = v12;
    v54 = ~v21;
    v32 = a2[1];
    *a1 = *a2;
    a1[1] = v32;
    v33 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v33[1] = v34[1];
    v35 = (char *)v34 + v10;
    v36 = ((unint64_t)v33 + v10 + 16) & ~v10;
    v37 = (unint64_t)(v35 + 16) & v29;
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v63 = v18;
    v39 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v36, v37, v60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))((v59 + v36) & v30, (v59 + v37) & v30, v61);
    v40 = (v36 + v15) & v31;
    v41 = (v37 + v15) & v31;
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v42(v40, v41, v53);
    v43 = (v39 + v40) & v31;
    v44 = (v39 + v41) & v31;
    v42(v43, v44, v53);
    v49 = (_QWORD *)((v63 + v43) & 0xFFFFFFFFFFFFFFF8);
    v45 = (_QWORD *)((v63 + v44) & 0xFFFFFFFFFFFFFFF8);
    *v49 = *v45;
    v49[1] = v45[1];
    v46 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
    v48 = (_QWORD *)*v47;
    LODWORD(v49) = -1;
    if (*v47 < 0xFFFFFFFFuLL)
      v49 = (_QWORD *)*v47;
    v50 = (_DWORD)v49 - 1;
    swift_bridgeObjectRetain();
    if (v50 < 0)
    {
      *v46 = v48;
      v46[1] = v47[1];
      v46[2] = v47[2];
      v46[3] = v47[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v51;
    }
    v42(((unint64_t)v46 + v55) & v31, ((unint64_t)v47 + v55) & v31, v53);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v57 + 16))((v56 + (((unint64_t)v46 + v55) & v31)) & v54, (v56 + (((unint64_t)v47 + v55) & v31)) & v54, v58);
    return a1;
  }
  return (uint64_t *)v28;
}

uint64_t sub_227955A48(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  swift_bridgeObjectRelease();
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = sub_22799EF5C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = sub_22799F0AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v7;
  v11 = *(_DWORD *)(v9 + 80);
  v12 = (v4 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  v13 = *(_QWORD *)(v6 + 64) + v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))((v13 + v12) & ~v11, v8);
  v14 = v13 & ~v11;
  v15 = *(_QWORD *)(v9 + 64);
  v16 = sub_22799EFE0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v12 + v14 + v15 + v18) & ~v18;
  v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v20(v19, v16);
  v21 = *(_QWORD *)(v17 + 64);
  v22 = (v21 + v18 + v19) & ~v18;
  v20(v22, v16);
  swift_bridgeObjectRelease();
  v23 = (uint64_t *)((((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  LODWORD(v24) = -1;
  if ((unint64_t)*v23 < 0xFFFFFFFF)
    v24 = *v23;
  if ((int)v24 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v25 = ((unint64_t)v23 + v18 + 32) & ~v18;
  v20(v25, v16);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v25 + v21 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_227955BE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v39;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v6 = sub_22799EF5C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v39 = sub_22799F0AC();
  v9 = *(_QWORD *)(v39 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_DWORD *)(v9 + 80) | v8;
  v12 = ((unint64_t)v4 + v11 + 16) & ~v11;
  v13 = ((unint64_t)v5 + v11 + 16) & ~v11;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v12, v13, v6);
  v15 = *(_QWORD *)(v7 + 64) + v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((v15 + v12) & ~v10, (v15 + v13) & ~v10, v39);
  v16 = v15 & ~v10;
  v17 = *(_QWORD *)(v9 + 64);
  v18 = sub_22799EFE0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20 + v16;
  v22 = v21 + v12;
  v23 = ~v20;
  v24 = v22 & ~v20;
  v25 = (v21 + v13) & ~v20;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v26(v24, v25, v18);
  v27 = *(_QWORD *)(v19 + 64);
  v28 = (v27 + v20 + v24) & ~v20;
  v29 = (v27 + v20 + v25) & ~v20;
  v26(v28, v29, v18);
  v30 = (_QWORD *)((v27 + 7 + v28) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)((v27 + 7 + v29) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v34;
  v30[1] = v34[1];
  v31 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)*v32;
  LODWORD(v34) = -1;
  if (*v32 < 0xFFFFFFFFuLL)
    v34 = (_QWORD *)*v32;
  v35 = (_DWORD)v34 - 1;
  swift_bridgeObjectRetain();
  if (v35 < 0)
  {
    *v31 = v33;
    v31[1] = v32[1];
    v31[2] = v32[2];
    v31[3] = v32[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = ~v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v36;
  }
  v26(((unint64_t)v31 + v20 + 32) & v23, ((unint64_t)v32 + v20 + 32) & v23, v18);
  v37 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v37 + 16))((v27 + *(unsigned __int8 *)(v37 + 80) + (((unint64_t)v31 + v20 + 32) & v23)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), (v27 + *(unsigned __int8 *)(v37 + 80) + (((unint64_t)v32 + v20 + 32) & v23)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  return a1;
}

_QWORD *sub_227955E48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v41;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_22799EF5C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = sub_22799F0AC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | v9;
  v14 = ((unint64_t)v5 + v13 + 16) & ~v13;
  v15 = ((unint64_t)v6 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v14, v15, v7);
  v16 = *(_QWORD *)(v8 + 64) + v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))((v16 + v14) & ~v12, (v16 + v15) & ~v12, v10);
  v17 = v16 & ~v12;
  v18 = *(_QWORD *)(v11 + 64);
  v19 = sub_22799EFE0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21 + v17;
  v41 = ~v21;
  v23 = (v22 + v14) & ~v21;
  v24 = (v22 + v15) & ~v21;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 24);
  v25(v23, v24, v19);
  v26 = *(_QWORD *)(v20 + 64);
  v27 = (v26 + v21 + v23) & ~v21;
  v28 = (v26 + v21 + v24) & ~v21;
  v25(v27, v28, v19);
  v29 = (_QWORD *)((v26 + 7 + v27) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)((v26 + 7 + v28) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  LODWORD(v33) = -1;
  if (*v31 >= 0xFFFFFFFFuLL)
    LODWORD(v34) = -1;
  else
    v34 = *v31;
  v35 = v34 - 1;
  v36 = *v32;
  if (*v32 < 0xFFFFFFFFuLL)
    v33 = *v32;
  v37 = v33 - 1;
  if (v35 < 0)
  {
    if (v37 < 0)
    {
      *v31 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31[2] = v32[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31[3] = v32[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v37 & 0x80000000) == 0)
  {
LABEL_11:
    v38 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v38;
    goto LABEL_12;
  }
  *v31 = v36;
  v31[1] = v32[1];
  v31[2] = v32[2];
  v31[3] = v32[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_12:
  v25(((unint64_t)v31 + v21 + 32) & v41, ((unint64_t)v32 + v21 + 32) & v41, v19);
  v39 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v39 + 24))((v26 + *(unsigned __int8 *)(v39 + 80) + (((unint64_t)v31 + v21 + 32) & v41)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80), (v26 + *(unsigned __int8 *)(v39 + 80) + (((unint64_t)v32 + v21 + 32) & v41)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
  return a1;
}

_OWORD *sub_227956168(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_22799EF5C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = sub_22799F0AC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | v9;
  v14 = ((unint64_t)v5 + v13 + 16) & ~v13;
  v15 = ((unint64_t)v6 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v14, v15, v7);
  v16 = *(_QWORD *)(v8 + 64) + v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))((v16 + v14) & ~v12, (v16 + v15) & ~v12, v10);
  v17 = v16 & ~v12;
  v18 = *(_QWORD *)(v11 + 64);
  v19 = sub_22799EFE0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21 + v17;
  v23 = (v22 + v14) & ~v21;
  v24 = (v22 + v15) & ~v21;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v25(v23, v24, v19);
  v26 = *(_QWORD *)(v20 + 64);
  v27 = (v26 + v21 + v23) & ~v21;
  v28 = (v26 + v21 + v24) & ~v21;
  v25(v27, v28, v19);
  v29 = (_OWORD *)((v26 + 7 + v27) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_OWORD *)((v26 + 7 + v28) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v31 = (_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = ((unint64_t)v31 + v21 + 32) & ~v21;
  v35 = ((unint64_t)v32 + v21 + 32) & ~v21;
  v25(v34, v35, v19);
  v36 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v36 + 32))((v26 + *(unsigned __int8 *)(v36 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80), (v26 + *(unsigned __int8 *)(v36 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  return a1;
}

_QWORD *sub_227956334(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = sub_22799EF5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = sub_22799F0AC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_DWORD *)(v13 + 80) | v11;
  v16 = ((unint64_t)v7 + v15 + 16) & ~v15;
  v17 = ((unint64_t)v8 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v16, v17, v9);
  v18 = *(_QWORD *)(v10 + 64) + v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))((v18 + v16) & ~v14, (v18 + v17) & ~v14, v12);
  v19 = v18 & ~v14;
  v20 = *(_QWORD *)(v13 + 64);
  v21 = sub_22799EFE0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v20 + v23 + v19;
  v25 = ~v23;
  v26 = (v24 + v16) & ~v23;
  v27 = (v24 + v17) & ~v23;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  v28(v26, v27, v21);
  v29 = *(_QWORD *)(v22 + 64);
  v30 = (v29 + v23 + v26) & ~v23;
  v31 = (v29 + v23 + v27) & ~v23;
  v28(v30, v31, v21);
  v32 = (_QWORD *)((v29 + 7 + v30) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)((v29 + 7 + v31) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRelease();
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  LODWORD(v36) = -1;
  if (*v34 < 0xFFFFFFFFuLL)
    v36 = *v34;
  if ((int)v36 - 1 < 0)
  {
    LODWORD(v37) = -1;
    if (*v35 < 0xFFFFFFFFuLL)
      v37 = *v35;
    if ((int)v37 - 1 < 0)
    {
      *v34 = *v35;
      swift_bridgeObjectRelease();
      v34[1] = v35[1];
      swift_bridgeObjectRelease();
      v34[2] = v35[2];
      swift_bridgeObjectRelease();
      v34[3] = v35[3];
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v38 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v38;
LABEL_9:
  v39 = ((unint64_t)v34 + v23 + 32) & v25;
  v40 = ((unint64_t)v35 + v23 + 32) & v25;
  v28(v39, v40, v21);
  v41 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 40))((v29 + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (v29 + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_2279565C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  char v35;
  int v36;
  unsigned int v38;
  int v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v6 = sub_22799EF5C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_22799F0AC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = sub_22799EFE0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v12 <= v15)
    v16 = *(_DWORD *)(v14 + 84);
  else
    v16 = v12;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  if (v16 <= v19)
    v20 = *(_DWORD *)(v18 + 84);
  else
    v20 = v16;
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  if (!a2)
    return 0;
  v22 = *(_DWORD *)(v10 + 80);
  v23 = *(_DWORD *)(v10 + 80) | *(unsigned __int8 *)(v7 + 80);
  v24 = *(_QWORD *)(v7 + 64) + v22;
  v25 = (v24 & ~v22) + *(_QWORD *)(v10 + 64);
  v26 = *(unsigned __int8 *)(v14 + 80);
  v27 = *(_QWORD *)(v14 + 64);
  v28 = v27 + v26;
  v29 = v27 + 7;
  v30 = v26 + 32;
  v31 = *(unsigned __int8 *)(v18 + 80);
  v32 = v27 + v31;
  v33 = a2 - v21;
  if (a2 <= v21)
    goto LABEL_33;
  v34 = ((v32
        + ((v30
          + ((((v29 + ((v28 + ((v25 + v26 + ((v23 + 32) & ~v23)) & ~v26)) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v26)) & ~v31)
      + *(_QWORD *)(v18 + 64);
  v35 = 8 * v34;
  if (v34 <= 3)
  {
    v38 = ((v33 + ~(-1 << v35)) >> v35) + 1;
    if (HIWORD(v38))
    {
      v36 = *(_DWORD *)(a1 + v34);
    }
    else
    {
      if (v38 <= 0xFF)
      {
        v30 = v26 + 32;
        if (v38 < 2)
        {
LABEL_33:
          if ((v20 & 0x80000000) != 0)
          {
            v42 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & ~v23;
            if (v12 == v21)
            {
              if (v8 >= v11)
                return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v42, v8, v6);
              else
                return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v24 + v42) & ~v22, v11, v9);
            }
            else
            {
              v43 = (v42 + v25 + v26) & ~v26;
              if (v15 == v21)
                return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v14 + 48))(v43, *(unsigned int *)(v14 + 84), v13);
              else
                return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))((v32+ ((v30 + ((((v29 + ((v28 + v43) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v26)) & ~v31, v19, v17);
            }
          }
          else
          {
            v41 = *(_QWORD *)(a1 + 8);
            if (v41 >= 0xFFFFFFFF)
              LODWORD(v41) = -1;
            return (v41 + 1);
          }
        }
        goto LABEL_16;
      }
      v36 = *(unsigned __int16 *)(a1 + v34);
    }
    v30 = v26 + 32;
    if (!v36)
      goto LABEL_33;
    goto LABEL_26;
  }
LABEL_16:
  v36 = *(unsigned __int8 *)(a1 + v34);
  if (!*(_BYTE *)(a1 + v34))
    goto LABEL_33;
LABEL_26:
  v39 = (v36 - 1) << v35;
  if (v34 > 3)
    v39 = 0;
  if ((_DWORD)v34)
  {
    if (v34 <= 3)
      v40 = v34;
    else
      v40 = 4;
    __asm { BR              X12 }
  }
  return v21 + v39 + 1;
}

void sub_2279568DC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  BOOL v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;

  v8 = *(_QWORD *)(sub_22799EF5C() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_22799F0AC() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(sub_22799EFE0() - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v13 <= *(_DWORD *)(v14 + 84))
    v15 = *(_DWORD *)(v14 + 84);
  else
    v15 = v13;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  v17 = *(_DWORD *)(v10 + 80) | *(unsigned __int8 *)(v8 + 80);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = ((*(_QWORD *)(v12 + 64)
        + *(unsigned __int8 *)(v14 + 80)
        + ((v18
          + 32
          + ((((*(_QWORD *)(v12 + 64)
              + 7
              + ((*(_QWORD *)(v12 + 64)
                + v18
                + ((((*(_QWORD *)(v8 + 64) + *(_DWORD *)(v10 + 80)) & ~(unint64_t)*(_DWORD *)(v10 + 80))
                  + *(_QWORD *)(v10 + 64)
                  + v18
                  + ((v17 + 32) & ~v17)) & ~v18)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
      + *(_QWORD *)(v14 + 64);
  v20 = a3 >= v16;
  v21 = a3 - v16;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      v24 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v24))
      {
        v22 = 4u;
      }
      else if (v24 >= 0x100)
      {
        v22 = 2;
      }
      else
      {
        v22 = v24 > 1;
      }
    }
    else
    {
      v22 = 1u;
    }
  }
  else
  {
    v22 = 0;
  }
  if (v16 < a2)
  {
    v23 = ~v16 + a2;
    if (v19 < 4)
    {
      if ((_DWORD)v19)
      {
        v25 = v23 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if ((_DWORD)v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if ((_DWORD)v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

uint64_t sub_227956C90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22799EF5C();
  if (v1 <= 0x3F)
  {
    result = sub_22799F0AC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_227956D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EF5C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22799F0AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_227956DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_22799F0AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_227956E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22799F0AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_227956E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22799F0AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_227956F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22799F0AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_227956F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22799EF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22799F0AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_227957008()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227957014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_22799EF5C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_22799F0AC();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_227957088()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227957094(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_22799EF5C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_22799F0AC();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_227957110()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_227957118(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227957164 + 4 * byte_2279A07B4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227957198 + 4 * byte_2279A07AF[v4]))();
}

uint64_t sub_227957198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279571A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279571A8);
  return result;
}

uint64_t sub_2279571B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279571BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2279571C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279571C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279571D4(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_227957264(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2279572B0 + 4 * byte_2279A07BE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2279572E4 + 4 * byte_2279A07B9[v4]))();
}

uint64_t sub_2279572E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279572EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279572F4);
  return result;
}

uint64_t sub_227957300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227957308);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_22795730C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227957314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_227957320()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227957330()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227957340()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227957350()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227957360()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227957370()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_227957380()
{
  return 9;
}

uint64_t sub_227957388()
{
  return swift_task_switch();
}

uint64_t sub_22795739C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2559046D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A0C90;
  *(_BYTE *)(inited + 32) = 3;
  if (qword_255903C68 != -1)
    swift_once();
  *(_QWORD *)(inited + 40) = qword_255915F48;
  *(_BYTE *)(inited + 48) = 1;
  v2 = qword_255903C70;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(inited + 56) = qword_255915F50;
  *(_BYTE *)(inited + 64) = 0;
  v3 = qword_255903C80;
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  *(_QWORD *)(inited + 72) = qword_255915F60;
  *(_BYTE *)(inited + 80) = 2;
  v4 = qword_255903C88;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  *(_QWORD *)(inited + 88) = qword_255915F68;
  *(_BYTE *)(inited + 96) = 4;
  v5 = qword_255903C78;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(inited + 104) = qword_255915F58;
  v6 = sub_227960248(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559046E0);
  swift_arrayDestroy();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v6);
}

id sub_227957570()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 136);
  if (v1)
  {
    v2 = *(id *)(v0 + 136);
  }
  else
  {
    v3 = sub_2279575C8(v0);
    v4 = *(void **)(v0 + 136);
    *(_QWORD *)(v0 + 136) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_2279575C8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_amsBag);

  v4 = objc_allocWithZone(MEMORY[0x24BE08240]);
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithClientIdentifier_bag_, v6, v5);

  objc_msgSend(v7, sel_setClientType_, 0);
  v8 = *(void **)(a1 + 128);
  objc_msgSend(v7, sel_setSession_, v8);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE08218]), sel_initWithTokenService_, v7);
  objc_msgSend(v8, sel_setProtocolHandler_, v9);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE08220]), sel_initWithTokenService_bag_, v7, v5);
  return v10;
}

uint64_t sub_227957728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904738);
  v4[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v4[33] = swift_task_alloc();
  v5 = sub_22799EFE0();
  v4[34] = v5;
  v4[35] = *(_QWORD *)(v5 - 8);
  v4[36] = swift_task_alloc();
  v6 = sub_22799EF2C();
  v4[37] = v6;
  v4[38] = *(_QWORD *)(v6 - 8);
  v4[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2279577FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v7;

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain_n();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    swift_bridgeObjectRelease();
    sub_2279466D4();
    swift_allocError();
    *v7 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v5;
    *v5 = v0;
    v5[1] = sub_22795796C;
    return sub_22797F634(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
  }
}

uint64_t sub_22795796C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2279579E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2279520BC(v3, &qword_255904040);
    sub_2279466D4();
    swift_allocError();
    *v4 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 288), v3, v1);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v6;
    *v6 = v0;
    v6[1] = sub_227957B04;
    return sub_227957FD8(v0 + 104, *(_QWORD *)(v0 + 288));
  }
}

uint64_t sub_227957B04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227957B68()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _QWORD *v3;

  v1 = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
  v2 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v3;
  *v3 = v0;
  v3[1] = sub_227957BE8;
  return swift_task_switch();
}

uint64_t sub_227957BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 360) = a1;
  *(_QWORD *)(v3 + 368) = v1;
  swift_task_dealloc();
  if (v1)
    sub_227959D14(v3 + 16);
  return swift_task_switch();
}

uint64_t sub_227957C64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;

  v1 = v0[46];
  sub_22796E00C(v0[45], v0 + 26);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[35] + 8))(v0[36], v0[34]);
    swift_bridgeObjectRelease();
    sub_227959D14((uint64_t)(v0 + 2));
  }
  else
  {
    sub_227959D14((uint64_t)(v0 + 2));
    swift_bridgeObjectRelease();
    v2 = v0[26];
    if (v2)
    {
      v3 = v0[27];
      swift_bridgeObjectRetain();
      sub_227959E0C(v2);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
      v6 = *(_QWORD *)(v5 - 8);
      if (v4)
      {
        sub_227959E38(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v0[32]);
        v7 = 0;
      }
      else
      {
        v7 = 1;
      }
      v10 = v0[32];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v10, v7, 1, v5);
      swift_bridgeObjectRelease();
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11) != 1)
      {
        v18 = v0[32];
        v19 = v0[28];
        (*(void (**)(_QWORD, _QWORD))(v0[35] + 8))(v0[36], v0[34]);
        sub_22794F918(v18, v19);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v16 = (uint64_t (*)(void))v0[1];
        return v16();
      }
    }
    else
    {
      v8 = v0[32];
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    }
    v13 = v0[35];
    v12 = v0[36];
    v14 = v0[34];
    sub_2279520BC(v0[32], &qword_255904738);
    sub_2279466D4();
    swift_allocError();
    *v15 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_227957EA4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227957F00()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227957F6C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227957FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = sub_22799EEE4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22795803C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = v0[17];
  sub_227959AC8();
  v3 = swift_task_alloc();
  v0[21] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[22] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559046F0);
  *v4 = v0;
  v4[1] = sub_2279580FC;
  return sub_22799F460();
}

uint64_t sub_2279580FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227958170()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  if (v1 >> 60 == 15)
  {
    sub_2279466D4();
    swift_allocError();
    *v3 = 0;
    swift_willThrow();
  }
  else
  {
    v4 = *(void **)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 144);
    sub_22799EF14();
    swift_allocObject();
    sub_227959B14(v2, v1);
    sub_22799EF08();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDCB1D8], v7);
    sub_22799EEF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904720);
    sub_227959DCC(&qword_255904728, &qword_255904720);
    sub_22799EEFC();
    swift_release();
    if (!v4)
    {
      v10 = *(_QWORD *)(v0 + 120);
      sub_227959B58(v2, v1);
      sub_227959B58(v2, v1);
      v11 = *(_OWORD *)(v0 + 24);
      v12 = *(_OWORD *)(v0 + 40);
      v13 = *(_OWORD *)(v0 + 56);
      v14 = *(_OWORD *)(v0 + 72);
      v15 = *(_OWORD *)(v0 + 88);
      *(_QWORD *)v10 = *(_QWORD *)(v0 + 16);
      *(_OWORD *)(v10 + 8) = v11;
      *(_OWORD *)(v10 + 24) = v12;
      *(_OWORD *)(v10 + 40) = v13;
      *(_OWORD *)(v10 + 56) = v14;
      *(_OWORD *)(v10 + 72) = v15;
      swift_task_dealloc();
      v9 = *(uint64_t (**)(void))(v0 + 8);
      return v9();
    }
    sub_2279466D4();
    swift_allocError();
    *v8 = 0;
    swift_willThrow();

    sub_227959B58(v2, v1);
    sub_227959B58(v2, v1);
  }
  swift_task_dealloc();
  v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_227958364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = sub_22799EEE4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2279583C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = v0[17];
  sub_227959AC8();
  v3 = swift_task_alloc();
  v0[21] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[22] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559046F0);
  *v4 = v0;
  v4[1] = sub_227958488;
  return sub_22799F460();
}

uint64_t sub_227958488()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2279584FC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  if (v1 >> 60 == 15)
  {
    sub_2279466D4();
    swift_allocError();
    *v3 = 0;
    swift_willThrow();
  }
  else
  {
    v4 = *(void **)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 144);
    sub_22799EF14();
    swift_allocObject();
    sub_227959B14(v2, v1);
    sub_22799EF08();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDCB1D8], v7);
    sub_22799EEF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559046F8);
    sub_227959DCC(&qword_255904700, &qword_2559046F8);
    sub_22799EEFC();
    swift_release();
    if (!v4)
    {
      v10 = *(_QWORD *)(v0 + 120);
      sub_227959B58(v2, v1);
      sub_227959B58(v2, v1);
      v11 = *(_QWORD *)(v0 + 40);
      v12 = *(_QWORD *)(v0 + 96);
      v13 = *(_OWORD *)(v0 + 24);
      v14 = *(_OWORD *)(v0 + 48);
      v15 = *(_OWORD *)(v0 + 64);
      v16 = *(_OWORD *)(v0 + 80);
      *(_QWORD *)v10 = *(_QWORD *)(v0 + 16);
      *(_OWORD *)(v10 + 8) = v13;
      *(_QWORD *)(v10 + 24) = v11;
      *(_OWORD *)(v10 + 32) = v14;
      *(_OWORD *)(v10 + 48) = v15;
      *(_OWORD *)(v10 + 64) = v16;
      *(_QWORD *)(v10 + 80) = v12;
      swift_task_dealloc();
      v9 = *(uint64_t (**)(void))(v0 + 8);
      return v9();
    }
    sub_2279466D4();
    swift_allocError();
    *v8 = 0;
    swift_willThrow();

    sub_227959B58(v2, v1);
    sub_227959B58(v2, v1);
  }
  swift_task_dealloc();
  v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_2279586F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22795872C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  *(_BYTE *)(v9 + 385) = v13;
  *(_QWORD *)(v9 + 256) = a8;
  *(_QWORD *)(v9 + 264) = v8;
  *(_BYTE *)(v9 + 384) = a7;
  *(_QWORD *)(v9 + 240) = a5;
  *(_QWORD *)(v9 + 248) = a6;
  *(_QWORD *)(v9 + 224) = a3;
  *(_QWORD *)(v9 + 232) = a4;
  *(_QWORD *)(v9 + 208) = a1;
  *(_QWORD *)(v9 + 216) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  *(_QWORD *)(v9 + 272) = swift_task_alloc();
  v10 = sub_22799EFE0();
  *(_QWORD *)(v9 + 280) = v10;
  *(_QWORD *)(v9 + 288) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 296) = swift_task_alloc();
  v11 = sub_22799EF2C();
  *(_QWORD *)(v9 + 304) = v11;
  *(_QWORD *)(v9 + 312) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 320) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2279587F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  _BYTE *v8;

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain_n();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    swift_bridgeObjectRelease();
    sub_2279466D4();
    swift_allocError();
    *v8 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_BYTE *)(v0 + 384) & 1;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v6;
    *v6 = v0;
    v6[1] = sub_227958978;
    return sub_2279800F0(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v5, *(_QWORD *)(v0 + 256));
  }
}

uint64_t sub_227958978()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2279589F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2279520BC(v3, &qword_255904040);
    sub_2279466D4();
    swift_allocError();
    *v4 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 296), v3, v1);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v6;
    *v6 = v0;
    v6[1] = sub_227958B0C;
    return sub_227957FD8(v0 + 104, *(_QWORD *)(v0 + 296));
  }
}

uint64_t sub_227958B0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227958B70()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _QWORD *v3;

  v1 = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
  v2 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v3;
  *v3 = v0;
  v3[1] = sub_227958BF0;
  return swift_task_switch();
}

uint64_t sub_227958BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 368) = a1;
  *(_QWORD *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (v1)
    sub_227959D14(v3 + 16);
  return swift_task_switch();
}

uint64_t sub_227958C6C()
{
  uint64_t v0;

  sub_22796E00C(*(_QWORD *)(v0 + 368), *(uint64_t **)(v0 + 208));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  swift_bridgeObjectRelease();
  sub_227959D14(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227958D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  *(_BYTE *)(v9 + 385) = v13;
  *(_QWORD *)(v9 + 256) = a8;
  *(_QWORD *)(v9 + 264) = v8;
  *(_BYTE *)(v9 + 384) = a7;
  *(_QWORD *)(v9 + 240) = a5;
  *(_QWORD *)(v9 + 248) = a6;
  *(_QWORD *)(v9 + 224) = a3;
  *(_QWORD *)(v9 + 232) = a4;
  *(_QWORD *)(v9 + 208) = a1;
  *(_QWORD *)(v9 + 216) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  *(_QWORD *)(v9 + 272) = swift_task_alloc();
  v10 = sub_22799EFE0();
  *(_QWORD *)(v9 + 280) = v10;
  *(_QWORD *)(v9 + 288) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 296) = swift_task_alloc();
  v11 = sub_22799EF2C();
  *(_QWORD *)(v9 + 304) = v11;
  *(_QWORD *)(v9 + 312) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 320) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227958E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  _BYTE *v8;

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain_n();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    swift_bridgeObjectRelease();
    sub_2279466D4();
    swift_allocError();
    *v8 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_BYTE *)(v0 + 384) & 1;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v6;
    *v6 = v0;
    v6[1] = sub_227958F98;
    return sub_22798041C(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v5, *(_QWORD *)(v0 + 256));
  }
}

uint64_t sub_227958F98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_227959010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2279520BC(v3, &qword_255904040);
    sub_2279466D4();
    swift_allocError();
    *v4 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 296), v3, v1);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v6;
    *v6 = v0;
    v6[1] = sub_22795912C;
    return sub_227958364(v0 + 104, *(_QWORD *)(v0 + 296));
  }
}

uint64_t sub_22795912C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227959190()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _QWORD *v3;

  v1 = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
  v2 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v3;
  *v3 = v0;
  v3[1] = sub_227959210;
  return swift_task_switch();
}

uint64_t sub_227959210(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 368) = a1;
  *(_QWORD *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (v1)
    sub_227959A10(v3 + 16);
  return swift_task_switch();
}

uint64_t sub_22795928C()
{
  uint64_t v0;

  sub_2279630F4(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 208));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  swift_bridgeObjectRelease();
  sub_227959A10(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22795936C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2279593C0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227959424()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227959488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = sub_227957570();
  v8 = (void *)sub_22799EFB0();
  v9 = objc_msgSend(v7, sel_requestWithURL_, v8);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v11 + ((v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_227959BE4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22795984C;
  aBlock[3] = &block_descriptor;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_addFinishBlock_, v12);
  _Block_release(v12);

}

void sub_227959624(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;
  _QWORD aBlock[6];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  if (a1)
  {
    v10 = *(void **)(a4 + 128);
    v11 = a1;
    v12 = objc_msgSend(v10, sel_dataTaskPromiseWithRequest_, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    aBlock[4] = sub_227959CC4;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22795984C;
    aBlock[3] = &block_descriptor_12;
    v15 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v12, sel_addFinishBlock_, v15);
    _Block_release(v15);

  }
  else
  {
    sub_2279466D4();
    swift_allocError();
    *v16 = 3;
    sub_22799F1D8();
  }
}

uint64_t sub_2279597CC(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = objc_msgSend(a1, sel_data);
    sub_22799EFF8();

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  return sub_22799F1E4();
}

void sub_227959850(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2279598C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for LiveMusicEventFetcher()
{
  return objc_opt_self();
}

void sub_227959918()
{
  _QWORD *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  swift_defaultActor_initialize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (v3)
  {
    v4 = sub_22799F118();
    v6 = v5;

    v0[14] = v4;
    v0[15] = v6;
    v7 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE08410]), sel_initWithConfiguration_, v7);

    v0[16] = v8;
    v0[17] = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_227959A04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_227959A10(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_227959AC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559046E8;
  if (!qword_2559046E8)
  {
    v1 = type metadata accessor for LiveMusicEventFetcher();
    result = MEMORY[0x22E2A1174](&unk_2279A0CE8, v1);
    atomic_store(result, (unint64_t *)&qword_2559046E8);
  }
  return result;
}

void sub_227959B0C(uint64_t a1)
{
  uint64_t v1;

  sub_227959488(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_227959B14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_227959B58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_227951C74(a1, a2);
  return a1;
}

uint64_t sub_227959B6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_227959BE4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904708) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_227959624(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_227959C60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_227959CC4(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904708);
  return sub_2279597CC(a1);
}

uint64_t sub_227959D14(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227959DCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2A1174](&unk_2279A2FA8, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227959E0C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_227959E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227959E9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  char v11[40];
  _BYTE v12[40];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904750);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22795ABD8();
  sub_22799F520();
  sub_2279520F8(v3 + 32, (uint64_t)v12, &qword_255904760);
  sub_2279520F8((uint64_t)v12, (uint64_t)v11, &qword_255904760);
  v10[15] = 0;
  sub_22795AC1C();
  sub_22799F3C4();
  if (!v2)
  {
    v11[0] = 1;
    sub_22799F3F4();
    v11[0] = 2;
    sub_22799F3F4();
    v11[0] = 3;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_22795A038(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD v10[5];
  char v11;
  _BYTE v12[72];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559047C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22795BBA0();
  sub_22799F520();
  v10[0] = *v3;
  v11 = 0;
  sub_227945828();
  sub_22799F400();
  if (!v2)
  {
    sub_2279520F8((uint64_t)(v3 + 1), (uint64_t)v12, &qword_2559047C8);
    sub_2279520F8((uint64_t)v12, (uint64_t)v10, &qword_2559047C8);
    v11 = 1;
    sub_22795BC28();
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_22795A19C(char *a1)
{
  sub_227945EE4(*a1);
}

void sub_22795A1A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22799F4B4();
  __asm { BR              X9 }
}

uint64_t sub_22795A1F4()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

void sub_22795A254()
{
  __asm { BR              X10 }
}

uint64_t sub_22795A290()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

void sub_22795A2DC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22799F4B4();
  __asm { BR              X9 }
}

uint64_t sub_22795A324()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_22795A384@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22795AC60();
  *a1 = result;
  return result;
}

uint64_t sub_22795A3B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_22795A3E0 + 4 * byte_2279A0D2C[*v0]))();
}

void sub_22795A3E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6874646977;
  a1[1] = 0xE500000000000000;
}

void sub_22795A3F8(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696568;
  a1[1] = 0xE600000000000000;
}

void sub_22795A410(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_22795A424()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22795A454 + 4 * byte_2279A0D30[*v0]))(0x726F6C6F436762, 0xE700000000000000);
}

uint64_t sub_22795A454()
{
  return 0x6874646977;
}

uint64_t sub_22795A468()
{
  return 0x746867696568;
}

uint64_t sub_22795A47C()
{
  return 7107189;
}

uint64_t sub_22795A48C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22795AC60();
  *a1 = result;
  return result;
}

void sub_22795A4B0(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22795A4BC()
{
  sub_22795ABD8();
  return sub_22799F52C();
}

uint64_t sub_22795A4E4()
{
  sub_22795ABD8();
  return sub_22799F538();
}

__n128 sub_22795A50C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_22795ACA8(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_22795A55C(_QWORD *a1)
{
  return sub_227959E9C(a1);
}

BOOL sub_22795A59C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22795A5B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B726F77747261;
  else
    return 1701667182;
}

uint64_t sub_22795A5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22795B844(a1, a2);
  *a3 = result;
  return result;
}

void sub_22795A60C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22795A618()
{
  sub_22795BBA0();
  return sub_22799F52C();
}

uint64_t sub_22795A640()
{
  sub_22795BBA0();
  return sub_22799F538();
}

double sub_22795A668@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_22795B924(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_22795A6C0(_QWORD *a1)
{
  return sub_22795A038(a1);
}

uint64_t sub_22795A708@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t result;
  _QWORD *v41;
  _QWORD v42[2];
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v2;
  v45 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904740);
  v6 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v8 = (_QWORD *)((char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v49 = sub_22799EF2C();
  *(_QWORD *)&v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  *(_QWORD *)&v47 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22796397C(a1);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v43 = v2;
    v44 = v3;
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v52 = *(_QWORD *)(v6 + 72);
    v42[1] = v10;
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_22795AB50(v12, (uint64_t)v8);
      v14 = *v8;
      v15 = v8[1];
      v50 = *v8;
      v51 = v15;
      swift_bridgeObjectRetain_n();
      v16 = v47;
      sub_22799EF20();
      sub_22794F890();
      sub_22799F274();
      (*(void (**)(uint64_t, _QWORD))(v48 + 8))(v16, v49);
      v17 = sub_22799F13C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17 < 1)
      {
        swift_bridgeObjectRelease();
        sub_22795AB98((uint64_t)v8);
      }
      else
      {
        v18 = (uint64_t *)((char *)v8 + *(int *)(v46 + 44));
        v19 = v18[1];
        if (!v19)
          goto LABEL_21;
        v20 = *v18;
        swift_bridgeObjectRetain();
        sub_22795AB98((uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_227985DA4(0, v13[2] + 1, 1, v13);
        v22 = v13[2];
        v21 = v13[3];
        v23 = v13;
        if (v22 >= v21 >> 1)
          v23 = sub_227985DA4((_QWORD *)(v21 > 1), v22 + 1, 1, v13);
        v23[2] = v22 + 1;
        v13 = v23;
        v24 = &v23[4 * v22];
        v24[4] = v14;
        v24[5] = v15;
        v24[6] = v20;
        v24[7] = v19;
      }
      v12 += v52;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v4 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v25 = sub_22794E808((uint64_t)v13);
  swift_bridgeObjectRelease();
  v27 = *v4;
  v26 = v4[1];
  v50 = *v4;
  v51 = v26;
  swift_bridgeObjectRetain_n();
  v28 = v47;
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, _QWORD))(v48 + 8))(v28, v49);
  v29 = sub_22799F13C();
  swift_bridgeObjectRelease();
  if (v29 < 1)
  {
    sub_22794F8D4();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904748) + 44);
    v31 = *((_QWORD *)v30 + 1);
    if (v31)
    {
      v32 = *(_QWORD *)v30;
      v33 = *((_QWORD *)v30 + 5);
      if (v33)
      {
        v34 = *((_OWORD *)v30 + 1);
        v35 = *((_QWORD *)v30 + 4);
        v48 = *((_OWORD *)v30 + 3);
        v49 = v34;
        v47 = *((_OWORD *)v30 + 4);
        v36 = *((_QWORD *)v30 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = v47;
        v37 = v48;
        v39 = v49;
      }
      else
      {
        v35 = 0;
        v36 = 0;
        v39 = 0uLL;
        v37 = 0uLL;
        v38 = 0uLL;
      }
      v41 = v45;
      *v45 = v27;
      v41[1] = v26;
      v41[2] = v32;
      v41[3] = v31;
      *((_OWORD *)v41 + 2) = v39;
      v41[6] = v35;
      v41[7] = v33;
      *((_OWORD *)v41 + 4) = v37;
      *((_OWORD *)v41 + 5) = v38;
      v41[12] = v36;
      v41[13] = v25;
      return swift_bridgeObjectRetain();
    }
    else
    {
LABEL_21:
      result = sub_22799F310();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22795AB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22795AB98(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22795ABD8()
{
  unint64_t result;

  result = qword_255904758;
  if (!qword_255904758)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0F20, &type metadata for ArtistAttributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904758);
  }
  return result;
}

unint64_t sub_22795AC1C()
{
  unint64_t result;

  result = qword_255904768;
  if (!qword_255904768)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3D60, &_s5ColorVN);
    atomic_store(result, (unint64_t *)&qword_255904768);
  }
  return result;
}

uint64_t sub_22795AC60()
{
  unint64_t v0;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_22795ACA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22795ABD8();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = 0;
  sub_22795AEEC();
  sub_22799F364();
  v23 = v26;
  v24 = v25;
  v9 = v28;
  v22 = v27;
  v10 = v29;
  LOBYTE(v25) = 1;
  swift_bridgeObjectRetain();
  v20 = sub_22799F394();
  v21 = v9;
  LOBYTE(v25) = 2;
  v11 = sub_22799F394();
  LOBYTE(v25) = 3;
  v12 = sub_22799F370();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  v18 = v23;
  a2[4] = v24;
  a2[5] = v18;
  v19 = v21;
  a2[6] = v22;
  a2[7] = v19;
  a2[8] = v10;
  return result;
}

unint64_t sub_22795AEEC()
{
  unint64_t result;

  result = qword_255904778;
  if (!qword_255904778)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3D88, &_s5ColorVN);
    atomic_store(result, (unint64_t *)&qword_255904778);
  }
  return result;
}

uint64_t destroy for Artwork()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Artwork(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Artwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtistAttributes.Artwork()
{
  return &type metadata for ArtistAttributes.Artwork;
}

uint64_t getEnumTagSinglePayload for ArtistAttributes.Artwork.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistAttributes.Artwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22795B23C + 4 * byte_2279A0D39[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22795B270 + 4 * byte_2279A0D34[v4]))();
}

uint64_t sub_22795B270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795B278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22795B280);
  return result;
}

uint64_t sub_22795B28C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22795B294);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22795B298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795B2A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtistAttributes.Artwork.CodingKeys()
{
  return &type metadata for ArtistAttributes.Artwork.CodingKeys;
}

uint64_t destroy for ArtistAttributes(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArtistAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
  }
  return a1;
}

_QWORD *assignWithCopy for ArtistAttributes(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22795B50C((uint64_t)(a1 + 2));
      *v4 = *v5;
      v8 = *((_OWORD *)a2 + 3);
      v7 = *((_OWORD *)a2 + 4);
      v9 = *((_OWORD *)a2 + 2);
      a1[10] = a2[10];
      *((_OWORD *)a1 + 3) = v8;
      *((_OWORD *)a1 + 4) = v7;
      *((_OWORD *)a1 + 2) = v9;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v4 = *v5;
    v10 = *((_OWORD *)a2 + 2);
    v11 = *((_OWORD *)a2 + 3);
    v12 = *((_OWORD *)a2 + 4);
    a1[10] = a2[10];
    *((_OWORD *)a1 + 3) = v11;
    *((_OWORD *)a1 + 4) = v12;
    *((_OWORD *)a1 + 2) = v10;
  }
  return a1;
}

uint64_t sub_22795B50C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ArtistAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    sub_22795B50C(a1 + 16);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    return a1;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtistAttributes()
{
  return &type metadata for ArtistAttributes;
}

unint64_t sub_22795B6B8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22795B6E4();
  result = sub_22795B728();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22795B6E4()
{
  unint64_t result;

  result = qword_255904780;
  if (!qword_255904780)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0D9C, &type metadata for ArtistAttributes);
    atomic_store(result, (unint64_t *)&qword_255904780);
  }
  return result;
}

unint64_t sub_22795B728()
{
  unint64_t result;

  result = qword_255904788;
  if (!qword_255904788)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0D74, &type metadata for ArtistAttributes);
    atomic_store(result, (unint64_t *)&qword_255904788);
  }
  return result;
}

unint64_t sub_22795B770()
{
  unint64_t result;

  result = qword_255904790;
  if (!qword_255904790)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0EA8, &type metadata for ArtistAttributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904790);
  }
  return result;
}

unint64_t sub_22795B7B8()
{
  unint64_t result;

  result = qword_255904798;
  if (!qword_255904798)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0DE0, &type metadata for ArtistAttributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904798);
  }
  return result;
}

unint64_t sub_22795B800()
{
  unint64_t result;

  result = qword_2559047A0;
  if (!qword_2559047A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0E08, &type metadata for ArtistAttributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559047A0);
  }
  return result;
}

uint64_t sub_22795B844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22795B924@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559047A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22795BBA0();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = 0;
  sub_2279457E4();
  sub_22799F3A0();
  v9 = v32;
  v30 = v31;
  v40 = 1;
  sub_22795BBE4();
  swift_bridgeObjectRetain();
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v31;
  v10 = v32;
  v12 = v34;
  v26 = v31;
  v27 = v35;
  v25 = v37;
  v23 = v33;
  v24 = v38;
  v28 = v36;
  v29 = v39;
  swift_bridgeObjectRetain();
  v13 = v11;
  v22 = v10;
  v14 = v23;
  sub_22794FB90(v13, v10, v23, v12);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v15 = v26;
  v16 = v10;
  v17 = v28;
  v19 = v24;
  v18 = v25;
  result = sub_22794FBC0(v26, v16, v14, v12);
  *a2 = v30;
  a2[1] = v9;
  v21 = v22;
  a2[2] = v15;
  a2[3] = v21;
  a2[4] = v14;
  a2[5] = v12;
  a2[6] = v27;
  a2[7] = v17;
  a2[8] = v18;
  a2[9] = v19;
  a2[10] = v29;
  return result;
}

unint64_t sub_22795BBA0()
{
  unint64_t result;

  result = qword_2559047B0;
  if (!qword_2559047B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1028, &type metadata for ArtistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559047B0);
  }
  return result;
}

unint64_t sub_22795BBE4()
{
  unint64_t result;

  result = qword_2559047B8;
  if (!qword_2559047B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0EF8, &type metadata for ArtistAttributes.Artwork);
    atomic_store(result, (unint64_t *)&qword_2559047B8);
  }
  return result;
}

unint64_t sub_22795BC28()
{
  unint64_t result;

  result = qword_2559047D0;
  if (!qword_2559047D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0ED0, &type metadata for ArtistAttributes.Artwork);
    atomic_store(result, (unint64_t *)&qword_2559047D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtistAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22795BCB8 + 4 * byte_2279A0D43[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22795BCEC + 4 * byte_2279A0D3E[v4]))();
}

uint64_t sub_22795BCEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795BCF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22795BCFCLL);
  return result;
}

uint64_t sub_22795BD08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22795BD10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22795BD14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795BD1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtistAttributes.CodingKeys()
{
  return &type metadata for ArtistAttributes.CodingKeys;
}

unint64_t sub_22795BD3C()
{
  unint64_t result;

  result = qword_2559047D8;
  if (!qword_2559047D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1000, &type metadata for ArtistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559047D8);
  }
  return result;
}

unint64_t sub_22795BD84()
{
  unint64_t result;

  result = qword_2559047E0;
  if (!qword_2559047E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0F70, &type metadata for ArtistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559047E0);
  }
  return result;
}

unint64_t sub_22795BDCC()
{
  unint64_t result;

  result = qword_2559047E8;
  if (!qword_2559047E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A0F98, &type metadata for ArtistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559047E8);
  }
  return result;
}

uint64_t sub_22795BE14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  sub_22799EF5C();
  sub_22794F9A4(&qword_255904010, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB890]);
  sub_22799F0DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
  sub_22799F0AC();
  sub_22794F9A4(&qword_255904020, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_22799F0DC();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  if (*(_QWORD *)(v1 + *(int *)(v3 + 52) + 8))
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22799F4CC();
  }
  if (*(_QWORD *)(v1 + *(int *)(v3 + 56)) == 1)
  {
    sub_22799F4CC();
  }
  else
  {
    sub_22799F4CC();
    PromotionalAssets.hash(into:)(a1);
  }
  sub_22799F0DC();
  return LiveMusic.hash(into:)(a1);
}

uint64_t sub_22795C060(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29[4];
  _QWORD v30[4];

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_22799F430() & 1) == 0)
    return 0;
  v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_22799F430() & 1) == 0)
    return 0;
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v7 = v6[10];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  if ((sub_22799EF38() & 1) == 0)
    return 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
  if ((MEMORY[0x22E2A08EC](&v8[*(int *)(v10 + 36)], &v9[*(int *)(v10 + 36)]) & 1) == 0
    || (MEMORY[0x22E2A0808]((char *)a1 + v6[11], (char *)a2 + v6[11]) & 1) == 0
    || (MEMORY[0x22E2A0808]((char *)a1 + v6[12], (char *)a2 + v6[12]) & 1) == 0)
  {
    return 0;
  }
  v11 = v6[13];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = *(_QWORD *)((char *)a1 + v11 + 8);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  if (v13)
  {
    if (!v15)
      return 0;
    v16 = *v12 == *v14 && v13 == v15;
    if (!v16 && (sub_22799F430() & 1) == 0)
      return 0;
  }
  else if (v15)
  {
    return 0;
  }
  v17 = v6[14];
  v19 = *(_QWORD *)((char *)a1 + v17);
  v18 = *(_QWORD *)((char *)a1 + v17 + 8);
  v21 = *(_QWORD *)((char *)a1 + v17 + 16);
  v20 = *(_QWORD *)((char *)a1 + v17 + 24);
  v22 = (_QWORD *)((char *)a2 + v17);
  v24 = *v22;
  v23 = v22[1];
  v26 = v22[2];
  v25 = v22[3];
  if (v19 != 1)
  {
    v30[0] = v19;
    v30[1] = v18;
    v30[2] = v21;
    v30[3] = v20;
    if (v24 != 1)
    {
      v29[0] = v24;
      v29[1] = v23;
      v29[2] = v26;
      v29[3] = v25;
      sub_22794EC98(v19);
      sub_22794EC98(v19);
      v28 = _s12ShazamEvents17PromotionalAssetsV2eeoiySbAC_ACtFZ_0(v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22795446C(v19);
      if ((v28 & 1) == 0)
        return 0;
      goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_29:
    sub_22794EC98(v24);
    sub_22795446C(v19);
    sub_22795446C(v24);
    return 0;
  }
  if (v24 != 1)
    goto LABEL_29;
LABEL_31:
  if ((MEMORY[0x22E2A0808]((char *)a1 + v6[15], (char *)a2 + v6[15]) & 1) != 0)
    return _s12ShazamEvents9LiveMusicV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v6[16], (uint64_t)a2 + v6[16]);
  return 0;
}

uint64_t ArtistPromotionalAssets.promotionalAssets.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_22794EC98(v2);
}

uint64_t ArtistPromotionalAssets.eventWithPromotionalAssets.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtistPromotionalAssets();
  return sub_22794FB10(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_255904110);
}

uint64_t type metadata accessor for ArtistPromotionalAssets()
{
  uint64_t result;

  result = qword_255904880;
  if (!qword_255904880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ArtistPromotionalAssets.schedule.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArtistPromotionalAssets() + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArtistPromotionalAssets.init(artistID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v4 = sub_22799EF2C();
  v3[17] = v4;
  v3[18] = *(_QWORD *)(v4 - 8);
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559047F8);
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22795C470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  _QWORD *v16;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    sub_22794F8D4();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_227948854((uint64_t *)(v0 + 16));
    v5 = *(_QWORD *)(v0 + 40);
    v6 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v5);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
    v9 = *v8;
    *(_QWORD *)(v0 + 80) = type metadata accessor for ShazamEventsServiceConnection();
    *(_QWORD *)(v0 + 88) = &off_24F00F740;
    *(_QWORD *)(v0 + 56) = v9;
    v10 = objc_allocWithZone((Class)type metadata accessor for LiveMusicEventConnection());
    v11 = *(_QWORD *)(v0 + 80);
    v12 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v11);
    v13 = *(_QWORD *)(v11 - 8);
    v14 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v14, v12, v11);
    v15 = sub_22794E390(*v14, v10);
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v16;
    *v16 = v0;
    v16[1] = sub_22795C6B4;
    return sub_22795C804(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), (uint64_t)v15);
  }
}

uint64_t sub_22795C6B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22795C718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = type metadata accessor for ArtistPromotionalAssets();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_2279520BC(v1, &qword_2559047F8);
    v4 = 1;
  }
  else
  {
    sub_22795DC24(v1, *(_QWORD *)(v0 + 112));
    v4 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 112), v4, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22795C7C8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22795C804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = type metadata accessor for ArtistPromotionalAssets();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904738);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v7 = sub_22799F034();
  v4[31] = v7;
  v4[32] = *(_QWORD *)(v7 - 8);
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22795C964()
{
  uint64_t v0;

  sub_22795D29C(*(_QWORD *)(v0 + 280));
  return swift_task_switch();
}

uint64_t sub_22795C9A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_22795CA1C;
  v2 = swift_continuation_init();
  sub_227988200(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_22795CA1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 288) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 280);
    v4 = *(_QWORD *)(v1 + 248);
    v5 = *(_QWORD *)(v1 + 256);
    *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 80);
    v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v1 + 312) = v6;
    v6(v3, v4);
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_22795CAB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _BYTE *v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;

  v73 = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(v0[38] + 16);
  result = swift_bridgeObjectRetain();
  v71 = v1;
  if (!v1)
  {
    v34 = v0[37];
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = MEMORY[0x24BEE4AF8];
LABEL_23:
      v35 = 1;
      goto LABEL_28;
    }
    goto LABEL_24;
  }
  v3 = 0;
  v64 = v0[22];
  v4 = MEMORY[0x24BEE4AF8];
  v66 = result;
  do
  {
    if (v3 >= *(_QWORD *)(result + 16))
    {
      __break(1u);
      return result;
    }
    v5 = v4;
    v6 = (void (*)(uint64_t, uint64_t))v0[39];
    v8 = v0[33];
    v7 = v0[34];
    v9 = v0[31];
    v10 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v68 = *(_QWORD *)(v64 + 72);
    sub_22794FB10(v0[38] + v10 + v68 * v3, v0[30], (uint64_t *)&unk_255904110);
    sub_22799EF50();
    sub_22799F028();
    v11 = sub_22799F010();
    v6(v8, v9);
    v6(v7, v9);
    v12 = v0[30];
    if ((v11 & 1) != 0)
    {
      sub_22794F918(v12, v0[29]);
      v4 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22798E3D4(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v4 = v73;
      }
      v14 = *(_QWORD *)(v4 + 16);
      v13 = *(_QWORD *)(v4 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_22798E3D4(v13 > 1, v14 + 1, 1);
        v4 = v73;
      }
      v15 = v0[29];
      *(_QWORD *)(v4 + 16) = v14 + 1;
      sub_22794F918(v15, v4 + v10 + v14 * v68);
    }
    else
    {
      sub_2279520BC(v12, (uint64_t *)&unk_255904110);
      v4 = v5;
    }
    ++v3;
    result = v66;
  }
  while (v71 != v3);
  v16 = v0[37];
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v16 + 16))
  {
LABEL_24:
    v36 = (void *)v0[15];
    swift_release();
    sub_2279466D4();
    swift_allocError();
    *v37 = 0;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v38 = (uint64_t (*)(void))v0[1];
    return v38();
  }
  v67 = v4;
  v18 = v0[21];
  v17 = v0[22];
  v19 = v0[38] + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v20 = v0[27] + 56;
  v21 = v0[25] + 32;
  v69 = v0[24] + 48;
  v22 = *(_QWORD *)(v17 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    v24 = v0[26];
    v23 = v0[27];
    sub_22794FB10(v19, v23, (uint64_t *)&unk_255904110);
    v25 = *(_BYTE *)(v20 + *(int *)(v18 + 64));
    sub_22794FB10(v23, v24, (uint64_t *)&unk_255904110);
    v26 = v0[26];
    if ((v25 & 1) != 0)
    {
      sub_2279520BC(v26, (uint64_t *)&unk_255904110);
      goto LABEL_15;
    }
    v27 = *(_QWORD *)(v26 + *(int *)(v18 + 56));
    sub_22794FB10(v26, v0[25], (uint64_t *)&unk_255904110);
    v28 = v0[25];
    v29 = v0[26];
    v30 = v0[24];
    if (v27 != 1)
      break;
    v31 = *(_QWORD *)(v21 + *(int *)(v18 + 64));
    sub_2279520BC(v28, (uint64_t *)&unk_255904110);
    sub_22794FB10(v29, v30, (uint64_t *)&unk_255904110);
    if (v31)
      goto LABEL_26;
    v32 = v0[26];
    v33 = *(_QWORD *)(v69 + *(int *)(v18 + 64));
    sub_2279520BC(v0[24], (uint64_t *)&unk_255904110);
    sub_2279520BC(v32, (uint64_t *)&unk_255904110);
    if (v33)
      goto LABEL_27;
LABEL_15:
    sub_2279520BC(v0[27], (uint64_t *)&unk_255904110);
    v19 += v22;
    if (!--v71)
      goto LABEL_23;
  }
  sub_2279520BC(v28, (uint64_t *)&unk_255904110);
  sub_22794FB10(v29, v30, (uint64_t *)&unk_255904110);
LABEL_26:
  v39 = v0[26];
  sub_2279520BC(v0[24], (uint64_t *)&unk_255904110);
  sub_2279520BC(v39, (uint64_t *)&unk_255904110);
LABEL_27:
  sub_22794F918(v0[27], v0[20]);
  v35 = 0;
LABEL_28:
  v40 = v0[20];
  v41 = v0[21];
  v42 = v0[22];
  v43 = v0 + 19;
  v44 = v0[19];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v40, v35, 1, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_22794FB10(v40, v44, &qword_255904738);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v41);
  v46 = v0[37];
  if (v45 == 1)
  {
    v47 = v0[20];
    v48 = (void *)v0[15];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2279520BC(v47, &qword_255904738);
    v49 = 1;
  }
  else
  {
    v50 = v0[28];
    v65 = v50;
    v51 = v0[23];
    v52 = v0[21];
    v53 = (uint64_t *)v0[18];
    v54 = v0[16];
    v70 = v0[12];
    v72 = (void *)v0[15];
    sub_22794F918(v0[19], v50);
    sub_22794FB10(v50, v51, (uint64_t *)&unk_255904110);
    sub_22794FB10(v51, (uint64_t)v53 + *(int *)(v54 + 20), (uint64_t *)&unk_255904110);
    v55 = (uint64_t *)(v51 + *(int *)(v52 + 56));
    v56 = *v55;
    v57 = v55[1];
    v59 = v55[2];
    v58 = v55[3];
    sub_22794EC98(*v55);
    sub_2279520BC(v51, (uint64_t *)&unk_255904110);
    *v53 = v56;
    v53[1] = v57;
    v53[2] = v59;
    v53[3] = v58;
    v60 = (uint64_t *)((char *)v53 + *(int *)(v54 + 24));
    *v60 = v46;
    v60[1] = v67;
    sub_22795DC24((uint64_t)v53, v70);

    sub_2279520BC(v65, (uint64_t *)&unk_255904110);
    v49 = 0;
    v43 = v0 + 20;
  }
  v61 = v0[17];
  v62 = v0[16];
  v63 = v0[12];
  sub_2279520BC(*v43, &qword_255904738);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v63, v49, 1, v62);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_22795D194()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22795D29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v1 = sub_22799F034();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22799F07C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22799F088();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559048D8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22799F070();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDCF220], v5);
  sub_22799F028();
  sub_22799F064();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v15, 1, v1) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v18, v15, v1);
  sub_22799F028();
  return sub_2279520BC((uint64_t)v15, &qword_2559048D8);
}

uint64_t ArtistPromotionalAssets.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (*v1 == 1)
  {
    sub_22799F4CC();
  }
  else
  {
    sub_22799F4CC();
    PromotionalAssets.hash(into:)(a1);
  }
  v3 = type metadata accessor for ArtistPromotionalAssets();
  sub_22795BE14(a1);
  v4 = (_QWORD *)((char *)v1 + *(int *)(v3 + 24));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_22794D11C(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22794D3CC(a1, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_22795D574()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0x656C756465686373;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_22795D5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22795F3BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_22795D5F8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_22795D604()
{
  sub_22795DE90();
  return sub_22799F52C();
}

uint64_t sub_22795D62C()
{
  sub_22795DE90();
  return sub_22799F538();
}

uint64_t ArtistPromotionalAssets.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22795DE90();
  sub_22799F520();
  v9 = v3[1];
  v12[0] = *v3;
  v12[1] = v9;
  v13 = 0;
  sub_22795450C();
  sub_22799F3C4();
  if (!v2)
  {
    v10 = type metadata accessor for ArtistPromotionalAssets();
    LOBYTE(v12[0]) = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
    sub_227951FC4(&qword_2559042A8, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
    sub_22799F400();
    v12[0] = *(_OWORD *)((char *)v3 + *(int *)(v10 + 24));
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904280);
    sub_227951FC4(&qword_255904288, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ArtistPromotionalAssets.hashValue.getter()
{
  _BYTE v1[72];

  sub_22799F4B4();
  ArtistPromotionalAssets.hash(into:)((uint64_t)v1);
  return sub_22799F4E4();
}

uint64_t ArtistPromotionalAssets.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904818);
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtistPromotionalAssets();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_OWORD *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_22795DE90();
  v20 = v8;
  v13 = v22;
  sub_22799F508();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v25 = 0;
  sub_227954594();
  sub_22799F364();
  v14 = v24;
  *v11 = v23;
  v11[1] = v14;
  LOBYTE(v23) = 1;
  sub_227951FC4(&qword_2559042A0, (uint64_t *)&unk_255904110, (uint64_t)&protocol conformance descriptor for Event<A>);
  sub_22799F3A0();
  sub_22794F918((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904280);
  v25 = 2;
  sub_227951FC4(&qword_255904278, &qword_255904280, (uint64_t)&protocol conformance descriptor for Schedule<A>);
  v15 = v20;
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v19);
  *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v23;
  sub_22795DED4((uint64_t)v11, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_22795DF18((uint64_t)v11);
}

uint64_t sub_22795DB80()
{
  _BYTE v1[72];

  sub_22799F4B4();
  ArtistPromotionalAssets.hash(into:)((uint64_t)v1);
  return sub_22799F4E4();
}

uint64_t sub_22795DBC0()
{
  _BYTE v1[72];

  sub_22799F4B4();
  ArtistPromotionalAssets.hash(into:)((uint64_t)v1);
  return sub_22799F4E4();
}

uint64_t sub_22795DBF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtistPromotionalAssets.init(from:)(a1, a2);
}

uint64_t sub_22795DC0C(_QWORD *a1)
{
  return ArtistPromotionalAssets.encode(to:)(a1);
}

uint64_t sub_22795DC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtistPromotionalAssets();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12ShazamEvents23ArtistPromotionalAssetsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23[4];
  _QWORD v24[4];

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v10 = a2[3];
  if (*a1 != 1)
  {
    v24[0] = *a1;
    v24[1] = v5;
    v24[2] = v7;
    v24[3] = v6;
    if (v8 != 1)
    {
      v23[0] = v8;
      v23[1] = v9;
      v23[2] = v11;
      v23[3] = v10;
      sub_22794EC98(v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = _s12ShazamEvents17PromotionalAssetsV2eeoiySbAC_ACtFZ_0(v24, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22795446C(v4);
      if ((v12 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    sub_22794EC98(v8);
    sub_22795446C(v4);
    sub_22795446C(v8);
    return 0;
  }
  if (v8 != 1)
    goto LABEL_6;
LABEL_8:
  v13 = type metadata accessor for ArtistPromotionalAssets();
  if ((sub_22795C060((uint64_t *)((char *)a1 + *(int *)(v13 + 20)), (uint64_t *)((char *)a2 + *(int *)(v13 + 20))) & 1) != 0)
  {
    v14 = *(int *)(v13 + 24);
    v15 = (char *)a1 + v14;
    v16 = *(uint64_t *)((char *)a1 + v14);
    v17 = *((_QWORD *)v15 + 1);
    v18 = (uint64_t *)((char *)a2 + v14);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_227982AE0(v16, v19) & 1) != 0)
    {
      v21 = sub_227984000(v17, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

unint64_t sub_22795DE90()
{
  unint64_t result;

  result = qword_255904810;
  if (!qword_255904810)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A126C, &type metadata for ArtistPromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904810);
  }
  return result;
}

uint64_t sub_22795DED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtistPromotionalAssets();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22795DF18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtistPromotionalAssets();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22795DF54()
{
  return sub_22794F9A4(&qword_255904820, (uint64_t (*)(uint64_t))type metadata accessor for ArtistPromotionalAssets, (uint64_t)&protocol conformance descriptor for ArtistPromotionalAssets);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArtistPromotionalAssets(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      v9 = a2[1];
      v10 = a2[2];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v9;
      v11 = a2[3];
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v54 = a3;
    v55 = a2;
    v12 = *(int *)(a3 + 20);
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = *(uint64_t *)((char *)a2 + v12 + 8);
    *(_QWORD *)v13 = *(uint64_t *)((char *)a2 + v12);
    *((_QWORD *)v13 + 1) = v15;
    v16 = *(uint64_t *)((char *)a2 + v12 + 24);
    *((_QWORD *)v13 + 2) = *(uint64_t *)((char *)a2 + v12 + 16);
    *((_QWORD *)v13 + 3) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
    v18 = v17[10];
    v19 = &v13[v18];
    v20 = v14 + v18;
    v21 = sub_22799EF5C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
    v23 = &v19[v22];
    v24 = v20 + v22;
    v25 = sub_22799F0AC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = v17[11];
    v27 = &v13[v26];
    v28 = v14 + v26;
    v29 = sub_22799EFE0();
    v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v30(&v13[v17[12]], v14 + v17[12], v29);
    v31 = v17[13];
    v32 = &v13[v31];
    v33 = (_QWORD *)(v14 + v31);
    v34 = v33[1];
    *(_QWORD *)v32 = *v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = v17[14];
    v36 = &v13[v35];
    v37 = v14 + v35;
    v38 = *(_QWORD *)(v14 + v35);
    swift_bridgeObjectRetain();
    if (v38 == 1)
    {
      v39 = *(_OWORD *)(v37 + 16);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v39;
    }
    else
    {
      v53 = v4;
      v40 = *(_QWORD *)(v37 + 8);
      v41 = *(_QWORD *)(v37 + 16);
      *(_QWORD *)v36 = v38;
      *((_QWORD *)v36 + 1) = v40;
      v42 = *(_QWORD *)(v37 + 24);
      *((_QWORD *)v36 + 2) = v41;
      *((_QWORD *)v36 + 3) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v30(&v13[v17[15]], v14 + v17[15], v29);
    v43 = v17[16];
    v44 = &v13[v43];
    v45 = v14 + v43;
    v46 = *(_QWORD *)(v14 + v43 + 8);
    *(_QWORD *)v44 = *(_QWORD *)(v14 + v43);
    *((_QWORD *)v44 + 1) = v46;
    *((_QWORD *)v44 + 2) = *(_QWORD *)(v14 + v43 + 16);
    v47 = *(_QWORD *)(v14 + v43 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47)
    {
      *((_QWORD *)v44 + 3) = *(_QWORD *)(v45 + 24);
      *((_QWORD *)v44 + 4) = v47;
      *((_QWORD *)v44 + 5) = *(_QWORD *)(v45 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      *((_QWORD *)v44 + 5) = *(_QWORD *)(v45 + 40);
    }
    *((_QWORD *)v44 + 6) = *(_QWORD *)(v45 + 48);
    v44[56] = *(_BYTE *)(v45 + 56);
    v48 = *(int *)(v54 + 24);
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)v55 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ArtistPromotionalAssets(_QWORD *a1, uint64_t a2)
{
  char *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  char *v13;

  if (*a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v6 = &v4[v5[10]];
  v7 = sub_22799EF5C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36)];
  v9 = sub_22799F0AC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v4[v5[11]];
  v11 = sub_22799EFE0();
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v4[v5[12]], v11);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&v4[v5[14]] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12(&v4[v5[15]], v11);
  v13 = &v4[v5[16]];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v13 + 4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArtistPromotionalAssets(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = a1;
  if (*(_QWORD *)a2 == 1)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v52 = a3;
  v53 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(v5 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *((_QWORD *)v11 + 1) = v13;
  v14 = *(_QWORD *)(a2 + v10 + 24);
  *((_QWORD *)v11 + 2) = *(_QWORD *)(a2 + v10 + 16);
  *((_QWORD *)v11 + 3) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v16 = v15[10];
  v17 = &v11[v16];
  v18 = v12 + v16;
  v19 = sub_22799EF5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v21 = &v17[v20];
  v22 = v18 + v20;
  v23 = sub_22799F0AC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = v15[11];
  v25 = &v11[v24];
  v26 = v12 + v24;
  v27 = sub_22799EFE0();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v28(&v11[v15[12]], v12 + v15[12], v27);
  v29 = v15[13];
  v30 = &v11[v29];
  v31 = (_QWORD *)(v12 + v29);
  v32 = v31[1];
  *(_QWORD *)v30 = *v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = v15[14];
  v34 = &v11[v33];
  v35 = v12 + v33;
  v36 = *(_QWORD *)(v12 + v33);
  swift_bridgeObjectRetain();
  if (v36 == 1)
  {
    v37 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
  }
  else
  {
    v51 = v5;
    v38 = *(_QWORD *)(v35 + 8);
    v39 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)v34 = v36;
    *((_QWORD *)v34 + 1) = v38;
    v40 = *(_QWORD *)(v35 + 24);
    *((_QWORD *)v34 + 2) = v39;
    *((_QWORD *)v34 + 3) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v28(&v11[v15[15]], v12 + v15[15], v27);
  v41 = v15[16];
  v42 = &v11[v41];
  v43 = v12 + v41;
  v44 = *(_QWORD *)(v12 + v41 + 8);
  *(_QWORD *)v42 = *(_QWORD *)(v12 + v41);
  *((_QWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 2) = *(_QWORD *)(v12 + v41 + 16);
  v45 = *(_QWORD *)(v12 + v41 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *((_QWORD *)v42 + 3) = *(_QWORD *)(v43 + 24);
    *((_QWORD *)v42 + 4) = v45;
    *((_QWORD *)v42 + 5) = *(_QWORD *)(v43 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    *((_QWORD *)v42 + 5) = *(_QWORD *)(v43 + 40);
  }
  *((_QWORD *)v42 + 6) = *(_QWORD *)(v43 + 48);
  v42[56] = *(_BYTE *)(v43 + 56);
  v46 = *(int *)(v52 + 24);
  v47 = (_QWORD *)(v5 + v46);
  v48 = (_QWORD *)(v53 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t assignWithCopy for ArtistPromotionalAssets(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;

  v6 = *(_QWORD *)a1;
  v7 = *a2;
  if (v6 == 1)
  {
    if (v7 == 1)
    {
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_227954F54(a1);
    v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_QWORD *)a1 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v48 = a3;
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (uint64_t)a2 + v10;
  *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
  *((_QWORD *)v11 + 1) = *(uint64_t *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v11 + 2) = *(_QWORD *)(v12 + 16);
  *((_QWORD *)v11 + 3) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v14 = v13[10];
  v15 = &v11[v14];
  v16 = v12 + v14;
  v17 = sub_22799EF5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v19 = &v15[v18];
  v20 = v16 + v18;
  v21 = sub_22799F0AC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = v13[11];
  v23 = &v11[v22];
  v24 = v12 + v22;
  v25 = sub_22799EFE0();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(&v11[v13[12]], v12 + v13[12], v25);
  v27 = v13[13];
  v28 = &v11[v27];
  v29 = (_QWORD *)(v12 + v27);
  *(_QWORD *)v28 = *v29;
  *((_QWORD *)v28 + 1) = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v13[14];
  v31 = &v11[v30];
  v32 = v12 + v30;
  v33 = *(_QWORD *)(v12 + v30);
  if (*(_QWORD *)&v11[v30] == 1)
  {
    if (v33 == 1)
    {
      v34 = *(_OWORD *)(v32 + 16);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v34;
    }
    else
    {
      *(_QWORD *)v31 = v33;
      *((_QWORD *)v31 + 1) = *(_QWORD *)(v32 + 8);
      *((_QWORD *)v31 + 2) = *(_QWORD *)(v32 + 16);
      *((_QWORD *)v31 + 3) = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v33 == 1)
  {
    sub_227954F54((uint64_t)&v11[v30]);
    v35 = *(_OWORD *)(v32 + 16);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
  }
  else
  {
    *(_QWORD *)v31 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v31 + 1) = *(_QWORD *)(v32 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v31 + 2) = *(_QWORD *)(v32 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v31 + 3) = *(_QWORD *)(v32 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v26(&v11[v13[15]], v12 + v13[15], v25);
  v36 = v13[16];
  v37 = &v11[v36];
  v38 = v12 + v36;
  *(_QWORD *)v37 = *(_QWORD *)(v12 + v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v37 + 1) = *(_QWORD *)(v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v37 + 2) = *(_QWORD *)(v38 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = v37 + 24;
  v40 = (_OWORD *)(v38 + 24);
  v41 = *(_QWORD *)(v38 + 32);
  if (*((_QWORD *)v37 + 4))
  {
    if (v41)
    {
      *((_QWORD *)v37 + 3) = *(_QWORD *)(v38 + 24);
      *((_QWORD *)v37 + 4) = *(_QWORD *)(v38 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v37 + 5) = *(_QWORD *)(v38 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22794F12C((uint64_t)(v37 + 24));
      v42 = *(_QWORD *)(v38 + 40);
      *v39 = *v40;
      *((_QWORD *)v37 + 5) = v42;
    }
  }
  else if (v41)
  {
    *((_QWORD *)v37 + 3) = *(_QWORD *)(v38 + 24);
    *((_QWORD *)v37 + 4) = *(_QWORD *)(v38 + 32);
    *((_QWORD *)v37 + 5) = *(_QWORD *)(v38 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = *v40;
    *((_QWORD *)v37 + 5) = *(_QWORD *)(v38 + 40);
    *v39 = v43;
  }
  *((_QWORD *)v37 + 6) = *(_QWORD *)(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37[56] = *(_BYTE *)(v38 + 56);
  v44 = *(int *)(v48 + 24);
  v45 = a1 + v44;
  v46 = (uint64_t)a2 + v44;
  *(_QWORD *)(a1 + v44) = *(uint64_t *)((char *)a2 + v44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ArtistPromotionalAssets(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
  *((_OWORD *)v8 + 1) = v10;
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v12 = v11[10];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_22799EF5C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_22799F0AC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v11[11];
  v21 = &v8[v20];
  v22 = &v9[v20];
  v23 = sub_22799EFE0();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&v8[v11[12]], &v9[v11[12]], v23);
  *(_OWORD *)&v8[v11[13]] = *(_OWORD *)&v9[v11[13]];
  v25 = v11[14];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v24(&v8[v11[15]], &v9[v11[15]], v23);
  v29 = v11[16];
  v30 = &v8[v29];
  v31 = &v9[v29];
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *(_OWORD *)(v30 + 41) = *(_OWORD *)(v31 + 41);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ArtistPromotionalAssets(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  if (*(_QWORD *)a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_227954F54(a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *((_QWORD *)v8 + 2) = *(_QWORD *)(v9 + 16);
  *((_QWORD *)v8 + 3) = v11;
  swift_bridgeObjectRelease();
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v13 = v12[10];
  v14 = &v8[v13];
  v15 = v9 + v13;
  v16 = sub_22799EF5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904018) + 36);
  v18 = &v14[v17];
  v19 = v15 + v17;
  v20 = sub_22799F0AC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = v12[11];
  v22 = &v8[v21];
  v23 = v9 + v21;
  v24 = sub_22799EFE0();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25(&v8[v12[12]], v9 + v12[12], v24);
  v26 = v12[13];
  v27 = &v8[v26];
  v28 = (uint64_t *)(v9 + v26);
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v31 = v12[14];
  v32 = (uint64_t)&v8[v31];
  v33 = v9 + v31;
  if (*(_QWORD *)&v8[v31] == 1)
  {
LABEL_9:
    v34 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v34;
    goto LABEL_11;
  }
  if (*(_QWORD *)v33 == 1)
  {
    sub_227954F54(v32);
    goto LABEL_9;
  }
  *(_QWORD *)v32 = *(_QWORD *)v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
  swift_bridgeObjectRelease();
LABEL_11:
  v25(&v8[v12[15]], v9 + v12[15], v24);
  v35 = v12[16];
  v36 = &v8[v35];
  v37 = v9 + v35;
  *(_QWORD *)&v8[v35] = *(_QWORD *)(v9 + v35);
  swift_bridgeObjectRelease();
  *((_QWORD *)v36 + 1) = *(_QWORD *)(v37 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v36 + 2) = *(_QWORD *)(v37 + 16);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)v36 + 4))
  {
LABEL_15:
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
    *((_QWORD *)v36 + 5) = *(_QWORD *)(v37 + 40);
    goto LABEL_16;
  }
  v38 = *(_QWORD *)(v37 + 32);
  if (!v38)
  {
    sub_22794F12C((uint64_t)(v36 + 24));
    goto LABEL_15;
  }
  *((_QWORD *)v36 + 3) = *(_QWORD *)(v37 + 24);
  *((_QWORD *)v36 + 4) = v38;
  swift_bridgeObjectRelease();
  *((_QWORD *)v36 + 5) = *(_QWORD *)(v37 + 40);
  swift_bridgeObjectRelease();
LABEL_16:
  *((_QWORD *)v36 + 6) = *(_QWORD *)(v37 + 48);
  swift_bridgeObjectRelease();
  v36[56] = *(_BYTE *)(v37 + 56);
  v39 = *(int *)(a3 + 24);
  v40 = a1 + v39;
  v41 = (_QWORD *)(a2 + v39);
  *(_QWORD *)(a1 + v39) = *v41;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v40 + 8) = v41[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistPromotionalAssets()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22795EFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistPromotionalAssets()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22795F08C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_22795F10C()
{
  unint64_t v0;

  sub_2279555A0(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for ArtistPromotionalAssets.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistPromotionalAssets.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22795F264 + 4 * byte_2279A1085[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22795F298 + 4 * byte_2279A1080[v4]))();
}

uint64_t sub_22795F298(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795F2A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22795F2A8);
  return result;
}

uint64_t sub_22795F2B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22795F2BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22795F2C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22795F2C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtistPromotionalAssets.CodingKeys()
{
  return &type metadata for ArtistPromotionalAssets.CodingKeys;
}

unint64_t sub_22795F2E8()
{
  unint64_t result;

  result = qword_2559048C0;
  if (!qword_2559048C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1244, &type metadata for ArtistPromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559048C0);
  }
  return result;
}

unint64_t sub_22795F330()
{
  unint64_t result;

  result = qword_2559048C8;
  if (!qword_2559048C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A11B4, &type metadata for ArtistPromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559048C8);
  }
  return result;
}

unint64_t sub_22795F378()
{
  unint64_t result;

  result = qword_2559048D0;
  if (!qword_2559048D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A11DC, &type metadata for ArtistPromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559048D0);
  }
  return result;
}

uint64_t sub_22795F3BC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002279A7090 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002279A7220 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t Event<>.participants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 24))(*(_QWORD *)(a1 + 16));
}

uint64_t dispatch thunk of ExperienceParticipant.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ExperienceParticipant.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ExperienceParticipant.artwork.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PerformedEvent.participants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unint64_t sub_22795F554(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559049A8);
  v2 = (_QWORD *)sub_22799F334();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2279684E4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22795F674(uint64_t a1)
{
  return sub_22795F6AC(a1, &qword_255904988, &qword_255904990, &qword_255904998);
}

unint64_t sub_22795F690(uint64_t a1)
{
  return sub_22795F6AC(a1, &qword_255904978, &qword_255904980, &qword_255904748);
}

unint64_t sub_22795F6AC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_22799F334();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_22794FB10(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_2279685B0(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = __swift_instantiateConcreteTypeFromMangledName(a4);
    result = sub_2279520F8(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22795F844(uint64_t a1)
{
  return sub_22795F6AC(a1, &qword_255904950, &qword_255904958, &qword_255904960);
}

unint64_t sub_22795F860(uint64_t a1)
{
  return sub_22795F6AC(a1, &qword_255904968, &qword_255904970, &qword_255904740);
}

CGColorRef Artwork.backgroundColor.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 64))
    return sub_227989368(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  else
    return 0;
}

uint64_t Artwork.maximumWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Artwork.maximumHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t Artwork.url(width:height:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A1330;
  *(_QWORD *)(inited + 32) = 119;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = sub_22799F424();
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = 104;
  *(_QWORD *)(inited + 72) = 0xE100000000000000;
  *(_QWORD *)(inited + 80) = sub_22799F424();
  *(_QWORD *)(inited + 88) = v7;
  v8 = sub_22795F554(inited);
  swift_bridgeObjectRetain();
  sub_22798A530(v4, v3, v8);
  sub_22794F890();
  v9 = sub_22799F28C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0 && (sub_22798A530(v4, v3, v8), v10 = sub_22799F28C(), swift_bridgeObjectRelease(), (v10 & 1) != 0))
  {
    v11 = sub_22799EFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_22798A530(v4, v3, v8);
    sub_22799EFD4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 Artwork.init(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  _QWORD v13[5];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_22794F960(a1, (uint64_t)v13);
  sub_22795ACA8(v13, (uint64_t *)&v14);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    v7 = v15;
    v6 = v16;
    v11 = v17;
    v12 = v14;
    v8 = v18;
    v9 = v19;
    v10 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_227960348((uint64_t)&v14);
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
    result = v11;
    *(__n128 *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 56) = v9;
    *(_QWORD *)(a2 + 64) = v10;
  }
  return result;
}

uint64_t Artwork.encode(to:)(_QWORD *a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_227959E9C(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 sub_22795FBCC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  _QWORD v13[5];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_22794F960(a1, (uint64_t)v13);
  sub_22795ACA8(v13, (uint64_t *)&v14);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    v7 = v15;
    v6 = v16;
    v11 = v17;
    v12 = v14;
    v8 = v18;
    v9 = v19;
    v10 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_227960348((uint64_t)&v14);
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
    result = v11;
    *(__n128 *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 56) = v9;
    *(_QWORD *)(a2 + 64) = v10;
  }
  return result;
}

uint64_t sub_22795FC88(_QWORD *a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_227959E9C(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t Artwork.hash(into:)()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_2279520F8(v0 + 32, (uint64_t)v2, &qword_255904760);
  sub_22799F4C0();
  sub_22799F4C0();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22796037C((uint64_t)v2);
  sub_227960070();
  return sub_2279603A4((uint64_t)v2);
}

uint64_t Artwork.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_2279520F8(v0 + 32, (uint64_t)v2, &qword_255904760);
  sub_22799F4B4();
  sub_22799F4C0();
  sub_22799F4C0();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22796037C((uint64_t)v2);
  sub_227960070();
  sub_2279603A4((uint64_t)v2);
  return sub_22799F4E4();
}

uint64_t sub_22795FE60()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_2279520F8(v0 + 32, (uint64_t)v2, &qword_255904760);
  sub_22799F4B4();
  sub_22799F4C0();
  sub_22799F4C0();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22796037C((uint64_t)v2);
  sub_227960070();
  sub_2279603A4((uint64_t)v2);
  return sub_22799F4E4();
}

uint64_t sub_22795FF14()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_2279520F8(v0 + 32, (uint64_t)v2, &qword_255904760);
  sub_22799F4C0();
  sub_22799F4C0();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22796037C((uint64_t)v2);
  sub_227960070();
  return sub_2279603A4((uint64_t)v2);
}

uint64_t sub_22795FFB4()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_2279520F8(v0 + 32, (uint64_t)v2, &qword_255904760);
  sub_22799F4B4();
  sub_22799F4C0();
  sub_22799F4C0();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22796037C((uint64_t)v2);
  sub_227960070();
  sub_2279603A4((uint64_t)v2);
  return sub_22799F4E4();
}

uint64_t sub_227960070()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[32];
  uint64_t v4;

  sub_2279520F8(v0, (uint64_t)&v2, &qword_255904760);
  sub_2279520F8(v0, (uint64_t)v3, &qword_255904760);
  if (!v4)
    return sub_22799F4CC();
  sub_22799F4CC();
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F4D8();
  swift_bridgeObjectRetain();
  sub_22799F130();
  return sub_2279603A4(v0);
}

uint64_t _s12ShazamEvents7ArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    v5 = *(double *)(a1 + 32);
    v4 = *(double *)(a1 + 40);
    v6 = *(double *)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 56);
    v7 = *(_QWORD *)(a1 + 64);
    v10 = *(double *)(a2 + 32);
    v9 = *(double *)(a2 + 40);
    v11 = *(double *)(a2 + 48);
    v13 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
      goto LABEL_6;
    v14 = sub_22799F430();
    result = 0;
    if ((v14 & 1) != 0)
    {
LABEL_6:
      if (v7)
      {
        if (v12 && v5 == v10 && v4 == v9 && v6 == v11 && (v8 == v13 && v7 == v12 || (sub_22799F430() & 1) != 0))
          return 1;
      }
      else if (!v12)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_227960248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559049A0);
  v3 = (_QWORD *)sub_22799F334();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_227968558(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_227968558(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_227960348(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22796037C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2279603A4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2279603D0()
{
  unint64_t result;

  result = qword_255904948;
  if (!qword_255904948)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artwork, &type metadata for Artwork);
    atomic_store(result, (unint64_t *)&qword_255904948);
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork()
{
  return &type metadata for Artwork;
}

uint64_t Participants<>.genres.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22794E6F8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_22794909C(v1);
  swift_bridgeObjectRelease();
  v3 = sub_22794E808(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Artist.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Artist.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Artist.artwork.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v9 = v1[11];
  v10 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_22794FB90(v2, v3, v4, v5);
}

uint64_t Artist.genres.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_227960540()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227960574 + 4 * byte_2279A1410[*v0]))(0x656372756F736572, 0xEA00000000004449);
}

uint64_t sub_227960574()
{
  return 1701667182;
}

uint64_t sub_227960584()
{
  return 0x6B726F77747261;
}

uint64_t sub_22796059C()
{
  return 0x7365726E6567;
}

uint64_t sub_2279605B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227962958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2279605D4()
{
  sub_227962028();
  return sub_22799F52C();
}

uint64_t sub_2279605FC()
{
  sub_227962028();
  return sub_22799F538();
}

uint64_t static Artist.schedule(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v4 = sub_22799EF2C();
  v3[17] = v4;
  v3[18] = *(_QWORD *)(v4 - 8);
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227960688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  _QWORD *v16;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain_n();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    sub_22794F8D4();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_227948854((uint64_t *)(v0 + 16));
    v5 = *(_QWORD *)(v0 + 40);
    v6 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v5);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
    v9 = *v8;
    *(_QWORD *)(v0 + 80) = type metadata accessor for ShazamEventsServiceConnection();
    *(_QWORD *)(v0 + 88) = &off_24F00F740;
    *(_QWORD *)(v0 + 56) = v9;
    v10 = objc_allocWithZone((Class)type metadata accessor for LiveMusicEventConnection());
    v11 = *(_QWORD *)(v0 + 80);
    v12 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v11);
    v13 = *(_QWORD *)(v11 - 8);
    v14 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v14, v12, v11);
    v15 = sub_22794E390(*v14, v10);
    *(_QWORD *)(v0 + 160) = v15;
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v16;
    *v16 = v0;
    v16[1] = sub_2279608CC;
    return sub_2279609A0(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), (uint64_t)v15);
  }
}

uint64_t sub_2279608CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_227960958()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2279609A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v6 = sub_22799F034();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227960A40()
{
  sub_22799F028();
  return swift_task_switch();
}

uint64_t sub_227960A7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_227960AF8;
  v2 = swift_continuation_init();
  sub_227988200(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_227960AF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 184) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 168);
    v3 = *(_QWORD *)(v1 + 176);
    v5 = *(_QWORD *)(v1 + 160);
    *(_OWORD *)(v1 + 192) = *(_OWORD *)(v1 + 80);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_227960B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = 0;
    v7 = v2 + 56;
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v21 = v8;
    v22 = v1;
    while (v6 < *(_QWORD *)(v1 + 16))
    {
      v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v11 = *(_QWORD *)(v9 + 72);
      sub_227959E38(*(_QWORD *)(v0 + 200) + v10 + v11 * v6, *(_QWORD *)(v0 + 152));
      v12 = *(_QWORD *)(v0 + 152);
      if ((*(_BYTE *)(v7 + *(int *)(v8 + 64)) & 1) != 0)
      {
        result = sub_22794ECEC(v12);
      }
      else
      {
        v13 = v4;
        sub_22794F918(v12, *(_QWORD *)(v0 + 144));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22798E3D4(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v23;
        }
        v15 = *(_QWORD *)(v3 + 16);
        v14 = *(_QWORD *)(v3 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_22798E3D4(v14 > 1, v15 + 1, 1);
          v3 = v23;
        }
        v16 = *(_QWORD *)(v0 + 144);
        *(_QWORD *)(v3 + 16) = v15 + 1;
        result = sub_22794F918(v16, v3 + v10 + v15 * v11);
        v4 = v13;
        v8 = v21;
        v1 = v22;
      }
      if (v4 == ++v6)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    v17 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v0 + 192);
    if (*(_QWORD *)(v17 + 16))
    {
      v19 = *(_QWORD **)(v0 + 96);
      swift_bridgeObjectRelease();
      *v19 = v18;
      v19[1] = v3;
    }
    else
    {
      swift_release();
      sub_2279466D4();
      swift_allocError();
      *v20 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_227960D8C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Artist.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v1[5];
  v7 = v1[4];
  v3 = v1[7];
  v5 = v1[6];
  v8 = v1[13];
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22799F4CC();
  if (v3)
  {
    sub_22799F4C0();
    sub_22799F4C0();
    sub_22794FB90(v7, v6, v5, v3);
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_227960070();
    swift_bridgeObjectRelease();
    sub_22794FBC0(v7, v6, v5, v3);
  }
  swift_bridgeObjectRetain();
  sub_227961BE4(a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227960FA0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v28 = result;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v31 = (v6 - 1) & v6;
  v32 = v3;
  for (i = __clz(__rbit64(v6)) | (v3 << 6); ; i = __clz(__rbit64(v10)) + (v11 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(result + 48) + 32 * i);
    v15 = *v13;
    v14 = v13[1];
    v17 = v13[2];
    v16 = v13[3];
    sub_22799F4B4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22799F130();
    sub_22799F130();
    v18 = sub_22799F4E4();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v21 = ~v19;
    v22 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v23 = (_QWORD *)(v22 + 32 * v20);
      v24 = v23[2];
      v25 = v23[3];
      v26 = *v23 == v15 && v23[1] == v14;
      if (v26 || (sub_22799F430() & 1) != 0)
      {
        v27 = v24 == v17 && v25 == v16;
        if (v27 || (sub_22799F430() & 1) != 0)
          break;
      }
      v20 = (v20 + 1) & v21;
      if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v32;
    v2 = a2;
    result = v28;
    v6 = v31;
    if (v31)
      goto LABEL_7;
LABEL_8:
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v9 >= v30)
      return 1;
    v10 = *(_QWORD *)(v29 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v10 = *(_QWORD *)(v29 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v10 = *(_QWORD *)(v29 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_21:
    v31 = (v10 - 1) & v10;
    v32 = v11;
  }
  v12 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v10 = *(_QWORD *)(v29 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v30)
      return 1;
    v10 = *(_QWORD *)(v29 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_21;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t Artist.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559049C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v31 = v1[3];
  v32 = v9;
  v10 = v1[4];
  v29 = v1[5];
  v30 = v10;
  v11 = v1[6];
  v27 = v1[7];
  v28 = v11;
  v12 = v1[8];
  v25 = v1[9];
  v26 = v12;
  v13 = v1[10];
  v23 = v1[11];
  v24 = v13;
  v22 = v1[12];
  v21 = v1[13];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227962028();
  sub_22799F520();
  v34 = v8;
  v35 = v7;
  v43 = 0;
  sub_2279544C8();
  v14 = v33;
  sub_22799F400();
  if (!v14)
  {
    v15 = v27;
    v16 = v28;
    v18 = v29;
    v17 = v30;
    LOBYTE(v34) = 1;
    sub_22799F3D0();
    v34 = v17;
    v35 = v18;
    v36 = v16;
    v37 = v15;
    v38 = v26;
    v39 = v25;
    v40 = v24;
    v41 = v23;
    v42 = v22;
    v43 = 2;
    sub_22796206C();
    sub_22799F3C4();
    v34 = v21;
    v43 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559049D8);
    sub_227962138(&qword_2559049E0, (uint64_t (*)(void))sub_2279620B0, MEMORY[0x24BEE1700]);
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Artist.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[72];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 12);
  v4 = *((_QWORD *)v0 + 13);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v5 = v0[3];
  v12 = v0[2];
  v13 = v5;
  v6 = v0[5];
  v14 = v0[4];
  v15 = v6;
  v16 = v3;
  v17 = v4;
  sub_22799F4B4();
  Artist.hash(into:)((uint64_t)v8);
  return sub_22799F4E4();
}

uint64_t Artist.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559049F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227962028();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v54 = 0;
  sub_227954550();
  sub_22799F3A0();
  v10 = v45;
  v9 = v46;
  LOBYTE(v45) = 1;
  swift_bridgeObjectRetain();
  v11 = sub_22799F370();
  v44 = v12;
  v33 = v11;
  v34 = v10;
  v38 = v9;
  v54 = 2;
  sub_2279620F4();
  swift_bridgeObjectRetain();
  v37 = 0;
  sub_22799F364();
  v42 = v45;
  v43 = v46;
  v13 = v49;
  v35 = v48;
  v36 = v47;
  v14 = v50;
  v40 = v51;
  v15 = v53;
  v31 = v52;
  v30[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2559049D8);
  v54 = 3;
  v39 = v15;
  v32 = v13;
  v41 = v14;
  sub_22794FB90(v42, v43, v36, v35);
  sub_227962138(&qword_255904A00, (uint64_t (*)(void))sub_2279621A0, MEMORY[0x24BEE1720]);
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v37 = v45;
  v16 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v42;
  v18 = v35;
  v19 = v36;
  sub_22794FB90(v42, v16, v36, v35);
  swift_bridgeObjectRetain();
  v20 = v19;
  v21 = v32;
  sub_22794FBC0(v17, v16, v20, v18);
  v22 = v38;
  swift_bridgeObjectRelease();
  v23 = v44;
  swift_bridgeObjectRelease();
  *a2 = v34;
  a2[1] = v22;
  a2[2] = v33;
  a2[3] = v23;
  a2[4] = v17;
  a2[5] = v16;
  v24 = v36;
  a2[6] = v36;
  a2[7] = v18;
  v25 = v40;
  v26 = v41;
  a2[8] = v21;
  a2[9] = v26;
  v27 = v31;
  a2[10] = v25;
  a2[11] = v27;
  v28 = v37;
  a2[12] = v39;
  a2[13] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22794FBC0(v42, v43, v24, v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279619F0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_227961A1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_227961A48@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v9 = v1[11];
  v10 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_22794FB90(v2, v3, v4, v5);
}

uint64_t sub_227961A90()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[72];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 12);
  v4 = *((_QWORD *)v0 + 13);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v5 = v0[3];
  v12 = v0[2];
  v13 = v5;
  v6 = v0[5];
  v14 = v0[4];
  v15 = v6;
  v16 = v3;
  v17 = v4;
  sub_22799F4B4();
  Artist.hash(into:)((uint64_t)v8);
  return sub_22799F4E4();
}

uint64_t sub_227961B00()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[72];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 12);
  v4 = *((_QWORD *)v0 + 13);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v5 = v0[3];
  v12 = v0[2];
  v13 = v5;
  v6 = v0[5];
  v14 = v0[4];
  v15 = v6;
  v16 = v3;
  v17 = v4;
  sub_22799F4B4();
  Artist.hash(into:)((uint64_t)v8);
  return sub_22799F4E4();
}

uint64_t sub_227961B68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Artist.init(from:)(a1, a2);
}

uint64_t sub_227961B7C(_QWORD *a1)
{
  return Artist.encode(to:)(a1);
}

uint64_t sub_227961B90@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Participants<>.headliners.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22794E6F8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Participants<>.support.getter()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_227961BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_22799F4E4();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_22799F4C0();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_22799F4B4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22799F130();
    sub_22799F130();
    v11 = sub_22799F4E4();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s12ShazamEvents6ArtistV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = a1[2];
  v3 = a1[3];
  v21 = a1[4];
  v22 = a1[5];
  v4 = a1[7];
  v23 = a1[6];
  v24 = a1[8];
  v25 = a1[10];
  v5 = a1[12];
  v26 = a1[11];
  v27 = a1[9];
  v6 = a2[2];
  v7 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v10 = a2[7];
  v15 = a1[13];
  v16 = a2[6];
  v17 = a2[8];
  v18 = a2[9];
  v11 = a2[12];
  v19 = a2[10];
  v20 = a2[11];
  v14 = a2[13];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_22799F430() & 1) == 0
    || (v2 != v6 || v3 != v7) && (sub_22799F430() & 1) == 0)
  {
    return 0;
  }
  if (v4)
  {
    v29 = v21;
    v30 = v22;
    v31 = v23;
    v32 = v4;
    v33 = v24;
    v34 = v27;
    v35 = v25;
    v36 = v26;
    v37 = v5;
    if (v10)
    {
      v28[0] = v9;
      v28[1] = v8;
      v28[2] = v16;
      v28[3] = v10;
      v28[4] = v17;
      v28[5] = v18;
      v28[6] = v19;
      v28[7] = v20;
      v28[8] = v11;
      sub_22794FB90(v21, v22, v23, v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = _s12ShazamEvents7ArtworkV2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794FBC0(v21, v22, v23, v4);
      if ((v12 & 1) == 0)
        return 0;
      return sub_227960FA0(v15, v14);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (!v10)
  {
    return sub_227960FA0(v15, v14);
  }
  v29 = v21;
  v30 = v22;
  v31 = v23;
  v32 = v4;
  v33 = v24;
  v34 = v27;
  v35 = v25;
  v36 = v26;
  v37 = v5;
  v38 = v9;
  v39 = v8;
  v40 = v16;
  v41 = v10;
  v42 = v17;
  v43 = v18;
  v44 = v19;
  v45 = v20;
  v46 = v11;
  sub_22794FB90(v9, v8, v16, v10);
  sub_22794FD1C(&v29);
  return 0;
}

unint64_t sub_227962028()
{
  unint64_t result;

  result = qword_2559049C8;
  if (!qword_2559049C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1608, &type metadata for Artist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559049C8);
  }
  return result;
}

unint64_t sub_22796206C()
{
  unint64_t result;

  result = qword_2559049D0;
  if (!qword_2559049D0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artwork, &type metadata for Artwork);
    atomic_store(result, (unint64_t *)&qword_2559049D0);
  }
  return result;
}

unint64_t sub_2279620B0()
{
  unint64_t result;

  result = qword_2559049E8;
  if (!qword_2559049E8)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Genre, &type metadata for Genre);
    atomic_store(result, (unint64_t *)&qword_2559049E8);
  }
  return result;
}

unint64_t sub_2279620F4()
{
  unint64_t result;

  result = qword_2559049F8;
  if (!qword_2559049F8)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artwork, &type metadata for Artwork);
    atomic_store(result, (unint64_t *)&qword_2559049F8);
  }
  return result;
}

uint64_t sub_227962138(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559049D8);
    v8 = a2();
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2279621A0()
{
  unint64_t result;

  result = qword_255904A08;
  if (!qword_255904A08)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Genre, &type metadata for Genre);
    atomic_store(result, (unint64_t *)&qword_255904A08);
  }
  return result;
}

unint64_t sub_2279621E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_227962220();
  a1[2] = sub_227962264();
  a1[3] = sub_22794FC34();
  result = sub_2279622A8();
  a1[4] = result;
  return result;
}

unint64_t sub_227962220()
{
  unint64_t result;

  result = qword_255904A10;
  if (!qword_255904A10)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255904A10);
  }
  return result;
}

unint64_t sub_227962264()
{
  unint64_t result;

  result = qword_255904A18;
  if (!qword_255904A18)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255904A18);
  }
  return result;
}

unint64_t sub_2279622A8()
{
  unint64_t result;

  result = qword_255904A20;
  if (!qword_255904A20)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255904A20);
  }
  return result;
}

unint64_t sub_2279622F0()
{
  unint64_t result;

  result = qword_255904A28;
  if (!qword_255904A28)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Artist, &type metadata for Artist);
    atomic_store(result, (unint64_t *)&qword_255904A28);
  }
  return result;
}

uint64_t destroy for Artist(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Artist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v6;
    v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Artist(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2 + 4;
  v6 = a2[7];
  if (a1[7])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2279625DC((uint64_t)(a1 + 4));
      *v4 = *v5;
      v8 = *((_OWORD *)a2 + 4);
      v7 = *((_OWORD *)a2 + 5);
      v9 = *((_OWORD *)a2 + 3);
      a1[12] = a2[12];
      *((_OWORD *)a1 + 4) = v8;
      *((_OWORD *)a1 + 5) = v7;
      *((_OWORD *)a1 + 3) = v9;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v4 = *v5;
    v10 = *((_OWORD *)a2 + 3);
    v11 = *((_OWORD *)a2 + 4);
    v12 = *((_OWORD *)a2 + 5);
    a1[12] = a2[12];
    *((_OWORD *)a1 + 4) = v11;
    *((_OWORD *)a1 + 5) = v12;
    *((_OWORD *)a1 + 3) = v10;
  }
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2279625DC(uint64_t a1)
{
  destroy for Artwork();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for Artist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 56))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 56);
  if (!v6)
  {
    sub_2279625DC(a1 + 32);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Artist(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Artist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Artist()
{
  return &type metadata for Artist;
}

uint64_t storeEnumTagSinglePayload for Artist.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_227962800 + 4 * byte_2279A1419[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_227962834 + 4 * byte_2279A1414[v4]))();
}

uint64_t sub_227962834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796283C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227962844);
  return result;
}

uint64_t sub_227962850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227962858);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22796285C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227962864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Artist.CodingKeys()
{
  return &type metadata for Artist.CodingKeys;
}

unint64_t sub_227962884()
{
  unint64_t result;

  result = qword_255904A30;
  if (!qword_255904A30)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A15E0, &type metadata for Artist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904A30);
  }
  return result;
}

unint64_t sub_2279628CC()
{
  unint64_t result;

  result = qword_255904A38;
  if (!qword_255904A38)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1550, &type metadata for Artist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904A38);
  }
  return result;
}

unint64_t sub_227962914()
{
  unint64_t result;

  result = qword_255904A40;
  if (!qword_255904A40)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1578, &type metadata for Artist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904A40);
  }
  return result;
}

uint64_t sub_227962958(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365726E6567 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

ValueMetadata *type metadata accessor for LiveMusicTokenReplacements()
{
  return &type metadata for LiveMusicTokenReplacements;
}

uint64_t storeEnumTagSinglePayload for LiveMusicTokenReplacements.ReplacementTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_227962B60 + 4 * byte_2279A1665[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_227962B94 + 4 * byte_2279A1660[v4]))();
}

uint64_t sub_227962B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227962B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227962BA4);
  return result;
}

uint64_t sub_227962BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227962BB8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_227962BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227962BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveMusicTokenReplacements.ReplacementTarget()
{
  return &type metadata for LiveMusicTokenReplacements.ReplacementTarget;
}

unint64_t sub_227962BE4()
{
  unint64_t result;

  result = qword_255904A48;
  if (!qword_255904A48)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A16E4, &type metadata for LiveMusicTokenReplacements.ReplacementTarget);
    atomic_store(result, (unint64_t *)&qword_255904A48);
  }
  return result;
}

void sub_227962C28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  void *v10;
  uint64_t (*v11)();
  uint64_t v12;

  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  swift_weakInit();
  v11 = sub_22796305C;
  v12 = v2;
  v3 = MEMORY[0x24BDAC760];
  v7 = MEMORY[0x24BDAC760];
  v8 = 1107296256;
  v9 = sub_227962D64;
  v10 = &block_descriptor_0;
  v4 = _Block_copy(&v7);
  swift_release();
  objc_msgSend(v1, sel_setInterruptionHandler_, v4);
  _Block_release(v4);
  v5 = swift_allocObject();
  swift_weakInit();
  v11 = sub_2279630A4;
  v12 = v5;
  v7 = v3;
  v8 = 1107296256;
  v9 = sub_227962D64;
  v10 = &block_descriptor_4;
  v6 = _Block_copy(&v7);
  swift_release();
  objc_msgSend(v1, sel_setInvalidationHandler_, v6);
  _Block_release(v6);
}

uint64_t sub_227962D64(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_227962D90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  if (qword_255903C50 != -1)
    swift_once();
  v7 = sub_22799F0D0();
  __swift_project_value_buffer(v7, (uint64_t)qword_255915F10);
  v8 = sub_22799F0B8();
  v9 = sub_22799F214();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_227943000, v8, v9, a2, v10, 2u);
    MEMORY[0x22E2A1210](v10, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = *(void **)(result + 16);
    v13 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = a3;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227962D64;
    aBlock[3] = a4;
    v14 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v12, sel_scheduleSendBarrierBlock_, v14);
    _Block_release(v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_227962F2C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_227962F4C()
{
  uint64_t Strong;
  id v1;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = *(id *)(Strong + 16);
    swift_release();
    objc_msgSend(v1, sel_invalidate);

  }
}

uint64_t sub_227962FBC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShazamEventsServiceConnection()
{
  return objc_opt_self();
}

uint64_t sub_227963000(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_setExportedObject_, a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_227963038()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22796305C()
{
  uint64_t v0;

  return sub_227962D90(v0, "interrupted", (uint64_t)sub_2279630D4, (uint64_t)&block_descriptor_13);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2279630A4()
{
  uint64_t v0;

  return sub_227962D90(v0, "invalidated", (uint64_t)sub_2279630D4, (uint64_t)&block_descriptor_8);
}

void sub_2279630D4()
{
  sub_227962F4C();
}

uint64_t sub_2279630F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t result;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  _QWORD v86[10];

  v4 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904AF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904AF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Venue();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_8;
  v17 = sub_227968558(3u);
  if ((v18 & 1) == 0)
    goto LABEL_8;
  v79 = v13;
  v74 = a2;
  v76 = v16;
  v75 = a1;
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17);
  v85 = *(_QWORD *)(v4 + 80);
  v20 = *(_QWORD *)v4;
  v21 = *(_OWORD *)(v4 + 48);
  v82 = *(_OWORD *)(v4 + 32);
  v83 = v21;
  v84 = *(_OWORD *)(v4 + 64);
  v22 = *(_OWORD *)(v4 + 16);
  v80 = *(_OWORD *)v4;
  v81 = v22;
  v23 = MEMORY[0x24BDAC7A8](v19);
  *(&v64 - 2) = (uint64_t)&v80;
  v78 = v23;
  swift_bridgeObjectRetain();
  sub_2279696F4(v4);
  swift_bridgeObjectRetain();
  v24 = sub_2279656B4((void (*)(uint64_t))sub_2279696B0, (uint64_t)(&v64 - 4), v20, &qword_255904AF0, &qword_255904B00, (uint64_t)sub_227985EC4);
  v77 = v3;
  v73 = v20;
  swift_bridgeObjectRelease();
  sub_227959A10(v4);
  v25 = *(_QWORD *)(v24 + 16);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  v27 = *(_QWORD *)(v26 - 8);
  if (v25)
  {
    sub_22794FB10(v24 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), (uint64_t)v9, &qword_255904B00);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v9, v28, 1, v26);
  swift_bridgeObjectRelease();
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v29);
  v32 = v79;
  if (v31 == 1)
  {
    swift_bridgeObjectRelease();
    sub_2279520BC((uint64_t)v9, &qword_255904AF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v32);
    sub_2279520BC((uint64_t)v12, &qword_255904AF8);
LABEL_8:
    sub_2279466D4();
    swift_allocError();
    *v33 = 0;
    return swift_willThrow();
  }
  v35 = v77;
  sub_22796626C(v78, (uint64_t)v12);
  if (v35)
  {
    swift_bridgeObjectRelease();
    return sub_2279520BC((uint64_t)v9, &qword_255904B00);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2279520BC((uint64_t)v9, &qword_255904B00);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v32);
    v36 = sub_2279697AC((uint64_t)v12, (uint64_t)v76);
    v38 = *(_QWORD *)(v4 + 8);
    v37 = *(_QWORD *)(v4 + 16);
    v39 = *(_QWORD *)(v4 + 32);
    v78 = *(_QWORD *)(v4 + 24);
    v40 = *(_QWORD *)(v4 + 40);
    v79 = *(_QWORD *)(v4 + 48);
    v41 = *(_QWORD *)(v4 + 56);
    v42 = *(_QWORD *)(v4 + 64);
    v44 = *(_QWORD *)(v4 + 72);
    v43 = *(_QWORD *)(v4 + 80);
    v77 = v41;
    if (v38)
    {
      v71 = v38;
    }
    else
    {
      v45 = v43;
      v46 = v37;
      v36 = sub_22795F674(MEMORY[0x24BEE4AF8]);
      v37 = v46;
      v38 = v36;
      v43 = v45;
      v41 = v77;
      v71 = 0;
    }
    v69 = v42;
    v68 = v44;
    v66 = &v64;
    v85 = *(_QWORD *)(v4 + 80);
    v86[0] = v38;
    v86[1] = v37;
    v86[2] = v78;
    v86[3] = v39;
    v86[4] = v40;
    v86[5] = v79;
    v86[6] = v41;
    v86[7] = v42;
    v86[8] = v44;
    v86[9] = v43;
    v47 = *(_OWORD *)(v4 + 48);
    v82 = *(_OWORD *)(v4 + 32);
    v83 = v47;
    v84 = *(_OWORD *)(v4 + 64);
    v48 = *(_OWORD *)(v4 + 16);
    v80 = *(_OWORD *)v4;
    v81 = v48;
    MEMORY[0x24BDAC7A8](v36);
    v65 = &v64 - 4;
    *(&v64 - 2) = (uint64_t)&v80;
    v50 = v49;
    v52 = v51;
    sub_2279696F4(v4);
    v67 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v52;
    swift_bridgeObjectRetain();
    v71 = v39;
    swift_bridgeObjectRetain();
    v70 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = sub_2279656B4((void (*)(uint64_t))sub_22796DFF8, (uint64_t)v65, v53, &qword_255904AF0, &qword_255904B00, (uint64_t)sub_227985EC4);
    swift_bridgeObjectRelease();
    sub_227959A10(v4);
    *(_QWORD *)&v80 = MEMORY[0x24BEE4AF8];
    v55 = *(_QWORD *)(v54 + 16);
    if (v55)
    {
      v56 = v54 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v57 = *(_QWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      do
      {
        v58 = sub_227963C5C(v38);
        sub_2279696F4(v4);
        v59 = sub_227969C08(v58, (_QWORD *)v4);
        sub_227959A10(v4);
        swift_bridgeObjectRelease();
        sub_22796780C(v59);
        v56 += v57;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v60 = v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v75;
    swift_bridgeObjectRetain();
    v62 = sub_227969A90(v60, v86, v61);
    v63 = v74;
    v73 = v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_2279697AC((uint64_t)v76, v63);
    result = __swift_instantiateConcreteTypeFromMangledName(qword_255904190);
    *(_QWORD *)(v63 + *(int *)(result + 44)) = v73;
  }
  return result;
}

uint64_t sub_22796397C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904748) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x7365726E6567, 0xE600000000000000);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B68, &qword_255904740, (uint64_t)sub_2279860E4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227963C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904B00) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x652D6D617A616873, 0xED000073746E6576);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B80, &qword_255904998, (uint64_t)sub_227985EB0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227963F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x73747369747261, 0xE700000000000000);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B70, &qword_255904748, (uint64_t)sub_227986580);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227964230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x737473696C746573, 0xE800000000000000);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B60, &qword_255904960, (uint64_t)sub_22798656C);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227964514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x7365756E6576, 0xE600000000000000);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904AF0, &qword_255904B00, (uint64_t)sub_227985EC4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2279647F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x7473696C79616C70, 0xE900000000000073);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B10, &qword_255904B18, (uint64_t)sub_2279865E4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227964ADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x6C612D6F746F6870, 0xEC000000736D7562);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B20, &qword_255904B28, (uint64_t)sub_2279865D0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227964DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x657061706C6C6177, 0xEA00000000007372);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B30, &qword_255904B38, (uint64_t)sub_2279865BC);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2279650B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x61662D6863746177, 0xEB00000000736563);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B40, &qword_255904B48, (uint64_t)sub_2279865A8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_22796539C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) + 48));
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x24BEE4AF8];
  v4 = sub_2279685B0(0x6C612D6F65646976, 0xEC000000736D7562);
  if ((v5 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v34 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22798E41C(0, v7, 0);
    v8 = v35;
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v13 = *(_QWORD *)(v35 + 16);
      v12 = *(_QWORD *)(v35 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_22798E41C(v12 > 1, v13 + 1, 1);
      v9 += 4;
      *(_QWORD *)(v35 + 16) = v13 + 1;
      v14 = v35 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v17 = swift_bridgeObjectRetain();
  v18 = sub_22794F7FC(v17);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v8 + 40;
    v22 = -(uint64_t)v19;
    v23 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(v8 + 16);
    do
    {
      if (v20 <= v19)
        v24 = v19;
      else
        v24 = v20;
      v25 = -(uint64_t)v24;
      v26 = (uint64_t *)(v21 + 16 * v20++);
      while (1)
      {
        if (v25 + v20 == 1)
        {
          __break(1u);
          return result;
        }
        v28 = *(v26 - 1);
        v27 = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = sub_227967DB8(v28, v27, v18);
        swift_bridgeObjectRelease();
        sub_227969148(v28, v27);
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v20;
        v26 += 2;
        if (v22 + v20 == 1)
          goto LABEL_29;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_22798E41C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v21 = v8 + 40;
      v31 = *(_QWORD *)(v23 + 16);
      v30 = *(_QWORD *)(v23 + 24);
      if (v31 >= v30 >> 1)
        result = sub_22798E41C(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v27;
      v19 = v33;
    }
    while (v22 + v20);
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_2279697F0(v23, v34, &qword_255904B50, &qword_255904B58, (uint64_t)sub_227986594);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_227965688(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_2279656B4(a1, a2, a3, &qword_255904B80, &qword_255904998, (uint64_t)sub_227985EB0);
}

uint64_t sub_2279656B4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);

  v32 = a1;
  v28 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(v31 - 8);
  v14 = MEMORY[0x24BDAC7A8](v31);
  v30 = (uint64_t)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v27 = (uint64_t)v25 - v16;
  v17 = *(_QWORD *)(a3 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v25[0] = a6;
  v18 = *(_QWORD *)(type metadata accessor for ResponseData() - 8);
  v19 = a3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v29 = *(_QWORD *)(v18 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v26 = a5;
  do
  {
    v32(v19);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v31) == 1)
    {
      sub_2279520BC((uint64_t)v12, v28);
    }
    else
    {
      v21 = v27;
      sub_2279520F8((uint64_t)v12, v27, a5);
      sub_2279520F8(v21, v30, a5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v25[0])(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      if (v23 >= v22 >> 1)
        v20 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v25[0])(v22 > 1, v23 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v23 + 1;
      a5 = v26;
      sub_2279520F8(v30, v20+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v23, v26);
    }
    v19 += v29;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_227965928(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[6];
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904E48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796D768();
  sub_22799F520();
  *(_QWORD *)&v13[0] = *(_QWORD *)v3;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904E30);
  sub_22796D7F0(&qword_255904E50, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_22799F400();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 56);
    v13[2] = *(_OWORD *)(v3 + 40);
    v13[3] = v9;
    v10 = *(_OWORD *)(v3 + 88);
    v13[4] = *(_OWORD *)(v3 + 72);
    v13[5] = v10;
    v11 = *(_OWORD *)(v3 + 24);
    v13[0] = *(_OWORD *)(v3 + 8);
    v13[1] = v11;
    v14 = 1;
    sub_22796D850();
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_227965AB4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD000000000000014;
}

uint64_t sub_227965AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22796B384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227965B18()
{
  sub_22796D768();
  return sub_22799F52C();
}

uint64_t sub_227965B40()
{
  sub_22796D768();
  return sub_22799F538();
}

__n128 sub_227965B68@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_22796B470(a1, v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_227965BC4(_QWORD *a1)
{
  return sub_227965928(a1);
}

uint64_t sub_227965BD8()
{
  sub_22799F4D8();
  return sub_22799F4D8();
}

uint64_t sub_227965C20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796DDFC();
  sub_22799F520();
  v10 = 0;
  sub_22799F3E8();
  if (!v1)
  {
    v9 = 1;
    sub_22799F3E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_227965D3C(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD v10[7];
  _BYTE v11[24];
  _BYTE v12[104];
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904DF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796D3B8();
  sub_22799F520();
  v10[0] = *v3;
  v13 = 0;
  sub_227945828();
  sub_22799F400();
  if (!v2)
  {
    sub_2279520F8((uint64_t)(v3 + 1), (uint64_t)v12, &qword_255904E00);
    sub_2279520F8((uint64_t)v12, (uint64_t)v10, &qword_255904E00);
    v13 = 1;
    sub_22796D6E0();
    sub_22799F3C4();
    sub_2279520F8((uint64_t)v3 + 120, (uint64_t)v11, &qword_255904E10);
    sub_2279520F8((uint64_t)v11, (uint64_t)v10, &qword_255904E10);
    v13 = 2;
    sub_22796D724();
    sub_22799F3C4();
    LOBYTE(v10[0]) = 3;
    sub_22799F3B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_227965F38()
{
  _BYTE *v0;

  if (*v0)
    return 6778476;
  else
    return 7627116;
}

uint64_t sub_227965F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22796B6FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227965F80()
{
  sub_22796DDFC();
  return sub_22799F52C();
}

uint64_t sub_227965FA8()
{
  sub_22796DDFC();
  return sub_22799F538();
}

void sub_227965FD0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_22796B7CC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_227965FF8(_QWORD *a1)
{
  return sub_227965C20(a1);
}

uint64_t sub_227966010()
{
  sub_22799F4B4();
  sub_227965BD8();
  return sub_22799F4E4();
}

uint64_t sub_227966060()
{
  return sub_227965BD8();
}

uint64_t sub_227966068()
{
  sub_22799F4B4();
  sub_227965BD8();
  return sub_22799F4E4();
}

BOOL sub_2279660B4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_2279660E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227966108 + 4 * byte_2279A1750[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_227966108()
{
  return 0x73736572646461;
}

uint64_t sub_227966120()
{
  return 7300455;
}

uint64_t sub_227966130()
{
  return 0x6567616D4970616DLL;
}

uint64_t sub_227966150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22796B924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227966174()
{
  sub_22796D3B8();
  return sub_22799F52C();
}

uint64_t sub_22796619C()
{
  sub_22796D3B8();
  return sub_22799F538();
}

double sub_2279661C4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[10];

  sub_22796BAD4(a1, v10);
  if (!v2)
  {
    v5 = v10[7];
    a2[6] = v10[6];
    a2[7] = v5;
    v6 = v10[9];
    a2[8] = v10[8];
    a2[9] = v6;
    v7 = v10[3];
    a2[2] = v10[2];
    a2[3] = v7;
    v8 = v10[5];
    a2[4] = v10[4];
    a2[5] = v8;
    result = *(double *)v10;
    v9 = v10[1];
    *a2 = v10[0];
    a2[1] = v9;
  }
  return result;
}

uint64_t sub_22796621C(_QWORD *a1)
{
  return sub_227965D3C(a1);
}

uint64_t sub_22796626C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[17];
  char v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[160];
  _BYTE v50[168];
  uint64_t v51;

  v6 = sub_22799EF2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  sub_2279520F8((uint64_t)v2 + *(int *)(v12 + 44), (uint64_t)v49, &qword_255904B88);
  sub_2279520F8((uint64_t)v49, (uint64_t)v50, &qword_255904B88);
  if (sub_22796A4AC((uint64_t)v50) == 1)
  {
    result = sub_22799F310();
    __break(1u);
  }
  else
  {
    sub_2279520F8((uint64_t)v49, (uint64_t)v45, &qword_255904B88);
    if (v48)
    {
      v43 = v47;
      v44 = v48;
      swift_bridgeObjectRetain();
      v13 = v42;
      sub_22796666C(&v43, a1, &v51, v42);
      if (v3)
        return swift_bridgeObjectRelease();
      v16 = sub_22799EFE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 0, 1, v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = sub_22799EFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v42, 1, 1, v15);
    }
    v17 = v2[1];
    v41 = *v2;
    v43 = v41;
    v44 = v17;
    swift_bridgeObjectRetain_n();
    sub_22799EF20();
    sub_22794F890();
    sub_22799F274();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = sub_22799F13C();
    swift_bridgeObjectRelease();
    if (v18 < 1)
    {
      sub_22794F8D4();
      swift_allocError();
      swift_willThrow();
      swift_bridgeObjectRelease_n();
      return sub_2279520BC(v42, &qword_255904040);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v46)
        v19 = 0.0;
      else
        v19 = *(double *)&v45[16];
      if (v46)
        v20 = 0.0;
      else
        v20 = *(double *)&v45[15];
      if (v45[2])
      {
        v39 = v45[13];
        v40 = v45[14];
        v21 = v45[12];
        v37 = v45[11];
        v22 = v45[10];
        v23 = v45[8];
        v34 = v45[7];
        v35 = v45[9];
        v24 = v45[6];
        v25 = v45[4];
        v32 = v45[3];
        v33 = v45[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = v22;
        swift_bridgeObjectRetain();
        v38 = v21;
        swift_bridgeObjectRetain();
      }
      else
      {
        v32 = 0;
        v33 = 0;
        v24 = 0;
        v34 = 0;
        v35 = 0;
        v23 = 0;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        v25 = 1;
      }
      v26 = v45[0];
      v27 = v45[1];
      v28 = type metadata accessor for Venue();
      sub_2279520F8(v42, a2 + *(int *)(v28 + 36), &qword_255904040);
      *(_QWORD *)a2 = v41;
      *(_QWORD *)(a2 + 8) = v17;
      *(_QWORD *)(a2 + 16) = v26;
      *(_QWORD *)(a2 + 24) = v27;
      *(double *)(a2 + 32) = v20;
      *(double *)(a2 + 40) = v19;
      *(_QWORD *)(a2 + 48) = v32;
      *(_QWORD *)(a2 + 56) = v25;
      *(_QWORD *)(a2 + 64) = v33;
      *(_QWORD *)(a2 + 72) = v24;
      *(_QWORD *)(a2 + 80) = v34;
      *(_QWORD *)(a2 + 88) = v23;
      v29 = v36;
      *(_QWORD *)(a2 + 96) = v35;
      *(_QWORD *)(a2 + 104) = v29;
      v30 = v38;
      *(_QWORD *)(a2 + 112) = v37;
      *(_QWORD *)(a2 + 120) = v30;
      v31 = v40;
      *(_QWORD *)(a2 + 128) = v39;
      *(_QWORD *)(a2 + 136) = v31;
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_22796666C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;

  v40 = a3;
  v32 = a4;
  v6 = sub_22799F2EC();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = *a1;
  v15 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = sub_22798A530(v14, v15, a2);
  v39 = v16;
  v36 = 123;
  v37 = 0xE100000000000000;
  sub_22794F890();
  LOBYTE(a1) = sub_22799F28C();
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0
    && (v38 = sub_22798A530(v14, v15, a2),
        v39 = v17,
        v36 = 125,
        v37 = 0xE100000000000000,
        v18 = sub_22799F28C(),
        swift_bridgeObjectRelease(),
        (v18 & 1) != 0))
  {
    v19 = sub_22799EFE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  }
  else
  {
    sub_22798A530(v14, v15, a2);
    sub_22799EFD4();
    swift_bridgeObjectRelease();
    sub_2279520F8((uint64_t)v11, (uint64_t)v13, &qword_255904040);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v13, 1, v20) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v32, v13, v20);
  sub_2279520BC((uint64_t)v13, &qword_255904040);
  v22 = v33;
  sub_22799F2E0();
  v23 = sub_22799F2F8();
  v24 = swift_allocError();
  v26 = v25;
  v27 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904B08) + 48);
  *v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  v29 = v34;
  v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v27, v22, v35);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v26, *MEMORY[0x24BEE26E0], v23);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v22, v28);
  *v40 = v24;
  return result;
}

uint64_t sub_2279669AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2279669EC + 4 * byte_2279A1754[a1]))(0x652D6D617A616873, 0xED000073746E6576);
}

uint64_t sub_2279669EC()
{
  return 0x73747369747261;
}

uint64_t sub_227966A04()
{
  return 0x7365756E6576;
}

uint64_t sub_227966A18()
{
  return 0x6C612D6F746F6870;
}

uint64_t sub_227966AB4()
{
  return 0x7365726E6567;
}

uint64_t sub_227966AC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227966B08 + 4 * byte_2279A175E[a1]))(0x652D6D617A616873, 0xED000073746E6576);
}

uint64_t sub_227966B08()
{
  return 0x73747369747261;
}

uint64_t sub_227966B20()
{
  return 0x7365756E6576;
}

uint64_t sub_227966B34()
{
  return 0x6C612D6F746F6870;
}

uint64_t sub_227966BD0()
{
  return 0x7365726E6567;
}

uint64_t sub_227966BE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2279669AC(*a1);
  v5 = v4;
  if (v3 == sub_2279669AC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_227966C6C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22799F4B4();
  sub_2279669AC(v1);
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227966CCC()
{
  unsigned __int8 *v0;

  sub_2279669AC(*v0);
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227966D0C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22799F4B4();
  sub_2279669AC(v1);
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227966D68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22796C034();
  *a1 = result;
  return result;
}

uint64_t sub_227966D94@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2279669AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_227966DBC()
{
  unsigned __int8 *v0;

  return sub_227966AC8(*v0);
}

uint64_t sub_227966DC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22796C034();
  *a1 = result;
  return result;
}

void sub_227966DE8(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_227966DF4()
{
  sub_22796C924();
  return sub_22799F52C();
}

uint64_t sub_227966E1C()
{
  sub_22796C924();
  return sub_22799F538();
}

uint64_t sub_227966E44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE v13[8];
  _BYTE v14[8];
  _BYTE v15[8];
  _BYTE v16[8];
  _BYTE v17[8];
  _BYTE v18[8];
  _BYTE v19[8];
  _BYTE v20[8];
  _BYTE v21[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904CE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796C924();
  sub_22799F520();
  sub_2279520F8(v3, (uint64_t)v21, &qword_255904CF0);
  sub_2279520F8((uint64_t)v21, (uint64_t)&v12, &qword_255904CF0);
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904BF8);
  sub_22796CE90();
  sub_22799F3C4();
  if (!v2)
  {
    sub_2279520F8(v3 + 8, (uint64_t)v20, &qword_255904D08);
    sub_2279520F8((uint64_t)v20, (uint64_t)&v12, &qword_255904D08);
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C10);
    sub_22796CF14();
    sub_22799F3C4();
    v12 = *(_QWORD *)(v3 + 16);
    v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C28);
    sub_22796CF98();
    sub_22799F400();
    sub_2279520F8(v3 + 24, (uint64_t)v19, &qword_255904D30);
    sub_2279520F8((uint64_t)v19, (uint64_t)&v12, &qword_255904D30);
    v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C40);
    sub_22796D01C();
    sub_22799F3C4();
    sub_2279520F8(v3 + 32, (uint64_t)v18, &qword_255904D48);
    sub_2279520F8((uint64_t)v18, (uint64_t)&v12, &qword_255904D48);
    v11 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C58);
    sub_22796D0A0();
    sub_22799F3C4();
    sub_2279520F8(v3 + 40, (uint64_t)v17, &qword_255904D60);
    sub_2279520F8((uint64_t)v17, (uint64_t)&v12, &qword_255904D60);
    v11 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C70);
    sub_22796D124();
    sub_22799F3C4();
    sub_2279520F8(v3 + 48, (uint64_t)v16, &qword_255904D78);
    sub_2279520F8((uint64_t)v16, (uint64_t)&v12, &qword_255904D78);
    v11 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C88);
    sub_22796D1A8();
    sub_22799F3C4();
    sub_2279520F8(v3 + 56, (uint64_t)v15, &qword_255904D90);
    sub_2279520F8((uint64_t)v15, (uint64_t)&v12, &qword_255904D90);
    v11 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CA0);
    sub_22796D22C();
    sub_22799F3C4();
    sub_2279520F8(v3 + 64, (uint64_t)v14, &qword_255904DA8);
    sub_2279520F8((uint64_t)v14, (uint64_t)&v12, &qword_255904DA8);
    v11 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CB8);
    sub_22796D2B0();
    sub_22799F3C4();
    sub_2279520F8(v3 + 72, (uint64_t)v13, &qword_255904DC0);
    sub_2279520F8((uint64_t)v13, (uint64_t)&v12, &qword_255904DC0);
    v11 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CD0);
    sub_22796D334();
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_227967320@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_22796C07C(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_227967368(_QWORD *a1)
{
  return sub_227966E44(a1);
}

uint64_t sub_2279673A8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t *v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  int64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_227985DA4(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_227969498((uint64_t)v46, &v4[4 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v16;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v45 = v46[0];
  v7 = v47;
  v44 = v46[1];
  v13 = v48;
  v42 = v47;
  if (!v49)
  {
LABEL_51:
    v33 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      return result;
    }
    v25 = (unint64_t)(v7 + 64) >> 6;
    if (v33 >= v25)
      goto LABEL_13;
    v39 = *(_QWORD *)(v44 + 8 * v33);
    if (!v39)
    {
      v40 = v13 + 2;
      if (v13 + 2 >= v25)
        goto LABEL_13;
      v39 = *(_QWORD *)(v44 + 8 * v40);
      if (v39)
      {
LABEL_60:
        v33 = v40;
      }
      else
      {
        if (v13 + 3 >= v25)
          goto LABEL_13;
        v39 = *(_QWORD *)(v44 + 8 * (v13 + 3));
        if (!v39)
          goto LABEL_66;
        v33 = v13 + 3;
      }
    }
LABEL_54:
    v17 = (v39 - 1) & v39;
    v19 = __clz(__rbit64(v39)) + (v33 << 6);
    v18 = v33;
    v7 = v42;
    goto LABEL_18;
  }
  v17 = (v49 - 1) & v49;
  v18 = v48;
  v19 = __clz(__rbit64(v49)) | (v48 << 6);
LABEL_18:
  v20 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 32 * v19);
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  v24 = v20[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_13;
  v43 = (unint64_t)(v7 + 64) >> 6;
  v13 = v18;
  while (1)
  {
    v26 = v4[3];
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
    {
      v37 = v13;
      v38 = sub_227985DA4((_QWORD *)(v26 > 1), v2 + 1, 1, v4);
      v13 = v37;
      v4 = v38;
      v27 = v38[3] >> 1;
    }
    if (v2 < v27)
      break;
LABEL_20:
    v4[2] = v2;
    if (!v22)
      goto LABEL_13;
  }
  while (1)
  {
    v33 = (uint64_t)&v4[4 * v2 + 4];
    *(_QWORD *)v33 = v21;
    *(_QWORD *)(v33 + 8) = v22;
    *(_QWORD *)(v33 + 16) = v23;
    *(_QWORD *)(v33 + 24) = v24;
    ++v2;
    if (!v17)
      break;
    v28 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v29 = v13;
    v30 = v28 | (v13 << 6);
LABEL_26:
    v31 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 32 * v30);
    v21 = *v31;
    v22 = v31[1];
    v23 = v31[2];
    v24 = v31[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
      v32 = v2 < v27;
    else
      v32 = 0;
    v13 = v29;
    if (!v32)
      goto LABEL_20;
  }
  v29 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v29 >= v43)
      goto LABEL_56;
    v34 = *(_QWORD *)(v44 + 8 * v29);
    if (v34)
      goto LABEL_41;
    v35 = v13 + 2;
    if (v13 + 2 >= v43)
      goto LABEL_56;
    v34 = *(_QWORD *)(v44 + 8 * v35);
    if (!v34)
    {
      if (v13 + 3 >= v43)
        goto LABEL_56;
      v34 = *(_QWORD *)(v44 + 8 * (v13 + 3));
      if (v34)
      {
        v29 = v13 + 3;
        goto LABEL_41;
      }
      v35 = v13 + 4;
      if (v13 + 4 >= v43)
        goto LABEL_56;
      v34 = *(_QWORD *)(v44 + 8 * v35);
      if (!v34)
      {
        v29 = v13 + 5;
        if (v13 + 5 >= v43)
          goto LABEL_56;
        v34 = *(_QWORD *)(v44 + 8 * v29);
        if (!v34)
        {
          v36 = v13 + 6;
          while (v43 != v36)
          {
            v34 = *(_QWORD *)(v44 + 8 * v36++);
            if (v34)
            {
              v29 = v36 - 1;
              goto LABEL_41;
            }
          }
LABEL_56:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v29 = v35;
LABEL_41:
    v17 = (v34 - 1) & v34;
    v30 = __clz(__rbit64(v34)) + (v29 << 6);
    goto LABEL_26;
  }
  __break(1u);
LABEL_66:
  v40 = v33 + 3;
  if (v33 + 3 < v25)
  {
    v39 = *(_QWORD *)(v44 + 8 * v40);
    if (v39)
      goto LABEL_60;
    v33 += 4;
    if (v33 >= v25)
      goto LABEL_13;
    v39 = *(_QWORD *)(v44 + 8 * v33);
    if (!v39)
    {
      v41 = v13 + 6;
      while (v25 != v41)
      {
        v39 = *(_QWORD *)(v44 + 8 * v41++);
        if (v39)
        {
          v33 = v41 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_22796A4C4();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_22796780C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_227985EB0(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_227967978(uint64_t a1)
{
  return sub_2279679C8(a1, (uint64_t (*)(void))sub_227986310, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
}

uint64_t sub_22796798C(uint64_t a1)
{
  return sub_2279679C8(a1, (uint64_t (*)(void))sub_227986324, type metadata accessor for PromotionalAssets.Video);
}

uint64_t sub_2279679A0(uint64_t a1)
{
  return sub_2279679C8(a1, (uint64_t (*)(void))sub_227986544, type metadata accessor for PromotionalAssets.WatchFace);
}

uint64_t sub_2279679B4(uint64_t a1)
{
  return sub_2279679C8(a1, (uint64_t (*)(void))sub_227986558, type metadata accessor for PromotionalAssets.PhoneWallpaper);
}

uint64_t sub_2279679C8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_227967B40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
  {
    v6 = sub_22795F674(MEMORY[0x24BEE4AF8]);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_3;
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  v6 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_6;
LABEL_3:
  v7 = *a1;
  v8 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_2279685B0(v7, v8);
  if ((v10 & 1) != 0)
  {
    v11 = v9;
    v12 = *(_QWORD *)(v6 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
    v14 = *(_QWORD *)(v13 - 8);
    sub_22794FB10(v12 + *(_QWORD *)(v14 + 72) * v11, a3, &qword_255904998);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227967C90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 24);
  v16 = v4;
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = *a1;
    v5 = a1[1];
    sub_22796A45C((uint64_t)&v16);
    swift_bridgeObjectRetain();
    v7 = sub_2279685B0(v6, v5);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v4 + 56);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
      v12 = *(_QWORD *)(v11 - 8);
      sub_22794FB10(v10 + *(_QWORD *)(v12 + 72) * v9, a3, &qword_255904B00);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a3, 0, 1, v11);
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
    }
    sub_22796A484((uint64_t)&v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_227967DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_22799F4B4();
    sub_22799F130();
    v6 = sub_22799F4E4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_22799F430() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_22799F430() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void *sub_227967EEC()
{
  uint64_t *v0;
  uint64_t v1;
  void *result;
  unint64_t v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void *__src;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  __swift_instantiateConcreteTypeFromMangledName(qword_255904060);
  v30 = v0;
  v1 = *v0;
  v33 = sub_22799F2B0();
  v34 = v1;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v30 = v33;
    return result;
  }
  result = (void *)(v33 + 56);
  v3 = (unint64_t)((1 << *(_BYTE *)(v33 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v33 != v1 || (unint64_t)result >= v1 + 56 + 8 * v3)
    result = memmove(result, __src, 8 * v3);
  v5 = 0;
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v1 + 16);
  v6 = 1 << *(_BYTE *)(v1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v1 + 56);
  v32 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v35 = (v8 - 1) & v8;
      v36 = v5;
      v9 = __clz(__rbit64(v8)) | (v5 << 6);
      goto LABEL_12;
    }
    v26 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v32)
      goto LABEL_28;
    v27 = *((_QWORD *)__src + v26);
    v28 = v5 + 1;
    if (!v27)
    {
      v28 = v5 + 2;
      if (v5 + 2 >= v32)
        goto LABEL_28;
      v27 = *((_QWORD *)__src + v28);
      if (!v27)
      {
        v28 = v5 + 3;
        if (v5 + 3 >= v32)
          goto LABEL_28;
        v27 = *((_QWORD *)__src + v28);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v35 = (v27 - 1) & v27;
    v36 = v28;
    v9 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_12:
    v10 = 112 * v9;
    v11 = (_QWORD *)(*(_QWORD *)(v34 + 48) + v10);
    v12 = v11[1];
    v13 = v11[2];
    v14 = v11[3];
    v15 = v11[4];
    v16 = v11[5];
    v17 = v11[6];
    v18 = v11[7];
    v20 = v11[8];
    v19 = v11[9];
    v22 = v11[10];
    v21 = v11[11];
    v24 = v11[12];
    v23 = v11[13];
    v25 = (_QWORD *)(*(_QWORD *)(v33 + 48) + v10);
    *v25 = *v11;
    v25[1] = v12;
    v25[2] = v13;
    v25[3] = v14;
    v25[4] = v15;
    v25[5] = v16;
    v25[6] = v17;
    v25[7] = v18;
    v25[8] = v20;
    v25[9] = v19;
    v25[10] = v22;
    v25[11] = v21;
    v25[12] = v24;
    v25[13] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22794FB90(v15, v16, v17, v18);
    result = (void *)swift_bridgeObjectRetain();
    v8 = v35;
    v5 = v36;
  }
  v29 = v5 + 4;
  if (v5 + 4 >= v32)
    goto LABEL_28;
  v27 = *((_QWORD *)__src + v29);
  if (v27)
  {
    v28 = v5 + 4;
    goto LABEL_27;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v32)
      goto LABEL_28;
    v27 = *((_QWORD *)__src + v28);
    ++v29;
    if (v27)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_227968174()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904050);
  v2 = *v0;
  v3 = sub_22799F2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_227968334()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904008);
  v2 = *v0;
  v3 = sub_22799F2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_2279684E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  v4 = sub_22799F4E4();
  return sub_227968614(a1, a2, v4);
}

unint64_t sub_227968558(unsigned __int8 a1)
{
  uint64_t v2;

  sub_22799F4B4();
  sub_22799F4C0();
  v2 = sub_22799F4E4();
  return sub_2279686F4(a1, v2);
}

unint64_t sub_2279685B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22799F4B4();
  sub_22799F130();
  v4 = sub_22799F4E4();
  return sub_227968614(a1, a2, v4);
}

unint64_t sub_227968614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22799F430() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22799F430() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2279686F4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_227968794(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559049A8);
  v42 = a2;
  v6 = sub_22799F328();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22799F4B4();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    result = sub_22799F4E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_227968AC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904B78);
  v36 = a2;
  v6 = sub_22799F328();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22799F4B4();
    sub_22799F130();
    result = sub_22799F4E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_227968DDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559049A8);
  v2 = *v0;
  v3 = sub_22799F31C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_227968F94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904B78);
  v2 = *v0;
  v3 = sub_22799F31C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_227969148(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  v6 = sub_22799F4E4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_22799F430() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_22799F430() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_227968334();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_2279692D4(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_2279692D4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22799F2A4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_22799F4B4();
        swift_bridgeObjectRetain();
        sub_22799F130();
        v10 = sub_22799F4E4();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_227969498(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2279696B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_OWORD *)(v3 + 48);
  v7[2] = *(_OWORD *)(v3 + 32);
  v7[3] = v4;
  v7[4] = *(_OWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 16);
  v7[0] = *(_OWORD *)v3;
  v7[1] = v5;
  return sub_227967C90(a1, (uint64_t)v7, a2);
}

uint64_t sub_2279696F4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2279697AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Venue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2279697F0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;

  v35 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v34 = (uint64_t)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v33 = (uint64_t)v31 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x24BEE4AF8];
  v31[0] = a5;
  v31[2] = v5;
  swift_bridgeObjectRetain();
  v31[1] = a1;
  v19 = (uint64_t *)(a1 + 40);
  v20 = MEMORY[0x24BEE4AF8];
  v32 = a4;
  do
  {
    if (!*(_QWORD *)(a2 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_4:
      sub_2279520BC((uint64_t)v12, v35);
      goto LABEL_5;
    }
    v21 = *(v19 - 1);
    v22 = *v19;
    swift_bridgeObjectRetain();
    v23 = sub_2279685B0(v21, v22);
    if ((v24 & 1) != 0)
    {
      sub_22794FB10(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v14 + 72) * v23, (uint64_t)v12, a4);
      v25 = 0;
    }
    else
    {
      v25 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v25, 1, v13);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      goto LABEL_4;
    v26 = v33;
    sub_2279520F8((uint64_t)v12, v33, a4);
    sub_2279520F8(v26, v34, a4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v31[0])(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
    v28 = *(_QWORD *)(v20 + 16);
    v27 = *(_QWORD *)(v20 + 24);
    if (v28 >= v27 >> 1)
      v20 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v31[0])(v27 > 1, v28 + 1, 1, v20);
    *(_QWORD *)(v20 + 16) = v28 + 1;
    v29 = v20
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + *(_QWORD *)(v14 + 72) * v28;
    a4 = v32;
    sub_2279520F8(v34, v29, v32);
LABEL_5:
    v19 += 2;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_227969A90(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_22798E3D4(0, v9, 0);
    v10 = v20;
    v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      sub_22796E204(v18, v19, v8);
      if (v3)
        break;
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_22798E3D4(v13 > 1, v14 + 1, 1);
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_2279520F8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, (uint64_t *)&unk_255904110);
      v12 += v17;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_227969C08(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  uint64_t *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD v107[2];
  uint64_t v108;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904AF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v100 = (uint64_t)&v83 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v95 = (uint64_t)&v83 - v14;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
  v15 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v17 = (uint64_t *)((char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x24BEE4AF8];
  v104 = v8;
  v106 = MEMORY[0x24BEE4AF8];
  v88 = v18;
  sub_22798E438(0, v18, 0);
  v87 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v89 = a1 + v87;
  v108 = *a2;
  v19 = *(_QWORD *)(v108 + 16);
  v20 = *(_QWORD *)(v15 + 72);
  v21 = 0;
  v85 = v108 + 8;
  v98 = v17;
  v99 = v11;
  v97 = v19;
  v92 = a2;
  v84 = v6;
  v96 = v7;
  v86 = v20;
  while (1)
  {
    v94 = v21;
    sub_22794FB10(v89 + v20 * v21, (uint64_t)v17, &qword_255904998);
    if (v19)
    {
      v22 = *(_QWORD *)(type metadata accessor for ResponseData() - 8);
      v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      sub_22796A45C((uint64_t)&v108);
      sub_2279696F4((uint64_t)a2);
      v24 = a2[3];
      v107[0] = v24;
      v25 = *(_QWORD *)(v22 + 72);
      v26 = (uint64_t *)(v85 + v23);
      v27 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (*(_QWORD *)(v24 + 16))
        {
          v29 = *(v26 - 1);
          v28 = *v26;
          sub_22796A45C((uint64_t)v107);
          swift_bridgeObjectRetain();
          v30 = sub_2279685B0(v29, v28);
          if ((v31 & 1) != 0)
          {
            v32 = v104;
            sub_22794FB10(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v104 + 72) * v30, (uint64_t)v6, &qword_255904B00);
            v33 = 0;
          }
          else
          {
            v33 = 1;
            v32 = v104;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v6, v33, 1, v7);
          sub_22796A484((uint64_t)v107);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v6, 1, v7) != 1)
          {
            v34 = v95;
            sub_2279520F8((uint64_t)v6, v95, &qword_255904B00);
            sub_2279520F8(v34, v100, &qword_255904B00);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v35 = v27;
            else
              v35 = sub_227985EC4(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
            v37 = *(_QWORD *)(v35 + 16);
            v36 = *(_QWORD *)(v35 + 24);
            if (v37 >= v36 >> 1)
              v35 = sub_227985EC4(v36 > 1, v37 + 1, 1, v35);
            *(_QWORD *)(v35 + 16) = v37 + 1;
            v27 = v35;
            sub_2279520F8(v100, v35+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(_QWORD *)(v104 + 72) * v37, &qword_255904B00);
            goto LABEL_7;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v6, 1, 1, v7);
        }
        sub_2279520BC((uint64_t)v6, &qword_255904AF0);
LABEL_7:
        v26 = (uint64_t *)((char *)v26 + v25);
        if (!--v19)
        {
          sub_22796A484((uint64_t)&v108);
          sub_227959A10((uint64_t)v92);
          v17 = v98;
          v11 = v99;
          v19 = v97;
          goto LABEL_21;
        }
      }
    }
    v27 = MEMORY[0x24BEE4AF8];
LABEL_21:
    v93 = *(int *)(v101 + 48);
    v38 = *(_QWORD *)((char *)v17 + v93);
    v39 = v38 ? *(_QWORD **)((char *)v17 + v93) : (_QWORD *)MEMORY[0x24BEE4B00];
    v40 = *(_QWORD *)(v27 + 16);
    if (v40)
      break;
LABEL_62:
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v17 + v93) = v39;
    v76 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22798E438(0, *(_QWORD *)(v76 + 16) + 1, 1);
      v76 = v106;
    }
    a2 = v92;
    v78 = *(_QWORD *)(v76 + 16);
    v77 = *(_QWORD *)(v76 + 24);
    if (v78 >= v77 >> 1)
    {
      sub_22798E438(v77 > 1, v78 + 1, 1);
      v76 = v106;
    }
    v79 = v94 + 1;
    *(_QWORD *)(v76 + 16) = v78 + 1;
    v80 = v86;
    v81 = v76 + v87 + v78 * v86;
    v21 = v79;
    sub_2279520F8((uint64_t)v17, v81, &qword_255904998);
    v20 = v80;
    if (v21 == v88)
      return v76;
  }
  v41 = (uint64_t *)(v27 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80)));
  v103 = *(_QWORD *)(v104 + 72);
  v90 = v38;
  swift_bridgeObjectRetain();
  v91 = v27;
  swift_bridgeObjectRetain();
  while (*v41 == *v17 && v41[1] == v17[1])
  {
    sub_22794FB10((uint64_t)v41, (uint64_t)v11, &qword_255904B00);
LABEL_35:
    v44 = &v11[*(int *)(v7 + 40)];
    v45 = *(_QWORD *)v44;
    v46 = *((_QWORD *)v44 + 1);
    v47 = (_QWORD *)((char *)v17 + *(int *)(v101 + 40));
    if (v45 == *v47 && v46 == v47[1])
    {
      sub_2279520BC((uint64_t)v11, &qword_255904B00);
    }
    else
    {
      v49 = sub_22799F430();
      sub_2279520BC((uint64_t)v11, &qword_255904B00);
      if ((v49 & 1) == 0)
        goto LABEL_40;
    }
LABEL_27:
    v41 = (uint64_t *)((char *)v41 + v103);
    if (!--v40)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v84;
      goto LABEL_62;
    }
  }
  v43 = sub_22799F430();
  sub_22794FB10((uint64_t)v41, (uint64_t)v11, &qword_255904B00);
  if ((v43 & 1) != 0)
    goto LABEL_35;
  sub_2279520BC((uint64_t)v11, &qword_255904B00);
LABEL_40:
  v50 = (uint64_t *)((char *)v41 + *(int *)(v7 + 40));
  v51 = *v50;
  v52 = v50[1];
  if (v39[2])
  {
    swift_bridgeObjectRetain();
    v53 = sub_2279685B0(v51, v52);
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v55 & 1) != 0)
    {
      v54 = *(_QWORD **)(v39[7] + 8 * v53);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v56 = *v41;
  v57 = v41[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v102 = v51;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v54 = sub_227986204(0, v54[2] + 1, 1, v54);
  v60 = v54[2];
  v59 = v54[3];
  if (v60 >= v59 >> 1)
    v54 = sub_227986204((_QWORD *)(v59 > 1), v60 + 1, 1, v54);
  v54[2] = v60 + 1;
  v61 = &v54[4 * v60];
  v61[4] = v56;
  v61[5] = v57;
  v62 = v102;
  v61[6] = v102;
  v61[7] = v52;
  swift_bridgeObjectRelease();
  v63 = swift_isUniquelyReferenced_nonNull_native();
  v105 = v39;
  v65 = sub_2279685B0(v62, v52);
  v66 = v39[2];
  v67 = (v64 & 1) == 0;
  v68 = v66 + v67;
  if (!__OFADD__(v66, v67))
  {
    v69 = v64;
    if (v39[3] >= v68)
    {
      if ((v63 & 1) != 0)
      {
        v39 = v105;
        if ((v64 & 1) == 0)
          goto LABEL_58;
      }
      else
      {
        sub_227968F94();
        v39 = v105;
        if ((v69 & 1) == 0)
          goto LABEL_58;
      }
    }
    else
    {
      sub_227968AC8(v68, v63);
      v70 = sub_2279685B0(v62, v52);
      if ((v69 & 1) != (v71 & 1))
        goto LABEL_72;
      v65 = v70;
      v39 = v105;
      if ((v69 & 1) == 0)
      {
LABEL_58:
        v39[(v65 >> 6) + 8] |= 1 << v65;
        v72 = (uint64_t *)(v39[6] + 16 * v65);
        *v72 = v62;
        v72[1] = v52;
        *(_QWORD *)(v39[7] + 8 * v65) = v54;
        v73 = v39[2];
        v74 = __OFADD__(v73, 1);
        v75 = v73 + 1;
        if (v74)
          goto LABEL_71;
        v39[2] = v75;
        swift_bridgeObjectRetain();
        goto LABEL_60;
      }
    }
    *(_QWORD *)(v39[7] + 8 * v65) = v54;
    swift_bridgeObjectRelease();
LABEL_60:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v96;
    v19 = v97;
    v17 = v98;
    v11 = v99;
    goto LABEL_27;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  result = sub_22799F478();
  __break(1u);
  return result;
}

uint64_t sub_22796A420(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Venue();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22796A45C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22796A484(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22796A4AC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_22796A4C4()
{
  return swift_release();
}

uint64_t destroy for VenueResources()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VenueResources(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VenueResources(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for VenueResources(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VenueResources(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VenueResources(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueResources()
{
  return &type metadata for VenueResources;
}

uint64_t destroy for VenueAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VenueAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2 + 16;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    v13 = *(_QWORD *)(a2 + 72);
    v14 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    v15 = *(_QWORD *)(a2 + 88);
    v16 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v15;
    v17 = *(_QWORD *)(a2 + 104);
    v18 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v16;
    *(_QWORD *)(a1 + 104) = v17;
    *(_QWORD *)(a1 + 112) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(v6 + 80);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(v6 + 64);
    *(_OWORD *)(a1 + 96) = v19;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v6 + 96);
    v20 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v20;
    v21 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(a1 + 64) = v21;
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VenueAttributes(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22796AC4C(a1 + 16);
      v8 = *(_OWORD *)(a2 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      *v4 = *v6;
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)(a1 + 48) = v7;
      v10 = *(_OWORD *)(a2 + 80);
      v9 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 64) = v11;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *v6;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    *v4 = v12;
    v14 = *(_OWORD *)(a2 + 64);
    v15 = *(_OWORD *)(a2 + 80);
    v16 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = v16;
    *(_OWORD *)(a1 + 64) = v14;
  }
  v17 = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22796AC4C(uint64_t a1)
{
  destroy for VenueAttributes.Address();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for VenueAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  if (!v5)
  {
    sub_22796AC4C(a1 + 16);
LABEL_5:
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v13 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v13;
    v14 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v14;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v15 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VenueAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VenueAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes()
{
  return &type metadata for VenueAttributes;
}

uint64_t destroy for VenueAttributes.Address()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VenueAttributes.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VenueAttributes.Address(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

_QWORD *assignWithTake for VenueAttributes.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[12];
  a1[11] = a2[11];
  a1[12] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VenueAttributes.Address(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VenueAttributes.Address(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes.Address()
{
  return &type metadata for VenueAttributes.Address;
}

uint64_t sub_22796B1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22796B1E8, (uint64_t (*)(void))sub_22796B22C);
}

unint64_t sub_22796B1E8()
{
  unint64_t result;

  result = qword_255904B90;
  if (!qword_255904B90)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1828, &type metadata for VenueAttributes);
    atomic_store(result, (unint64_t *)&qword_255904B90);
  }
  return result;
}

unint64_t sub_22796B22C()
{
  unint64_t result;

  result = qword_255904B98;
  if (!qword_255904B98)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1800, &type metadata for VenueAttributes);
    atomic_store(result, (unint64_t *)&qword_255904B98);
  }
  return result;
}

unint64_t sub_22796B274()
{
  unint64_t result;

  result = qword_255904BA0;
  if (!qword_255904BA0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1850, &type metadata for VenueAttributes);
    atomic_store(result, (unint64_t *)&qword_255904BA0);
  }
  return result;
}

uint64_t sub_22796B2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22796B2FC, (uint64_t (*)(void))sub_22796B340);
}

uint64_t sub_22796B2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22796B2FC()
{
  unint64_t result;

  result = qword_255904BD8;
  if (!qword_255904BD8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1894, &type metadata for VenueResources);
    atomic_store(result, (unint64_t *)&qword_255904BD8);
  }
  return result;
}

unint64_t sub_22796B340()
{
  unint64_t result;

  result = qword_255904BE0;
  if (!qword_255904BE0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A186C, &type metadata for VenueResources);
    atomic_store(result, (unint64_t *)&qword_255904BE0);
  }
  return result;
}

uint64_t sub_22796B384(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000002279A7330 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002279A7350)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22796B470@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904E20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796D768();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904E30);
  v43 = 0;
  sub_22796D7F0(&qword_255904E38, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_22799F3A0();
  v9 = v31;
  v43 = 1;
  sub_22796D7AC();
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v32;
  v11 = v34;
  v29 = v33;
  v30 = v31;
  v12 = v36;
  v13 = v38;
  v27 = v37;
  v28 = v35;
  v14 = v40;
  v25 = v41;
  v26 = v39;
  v24 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v17 = v30;
  *a2 = v9;
  a2[1] = v17;
  v18 = v29;
  a2[2] = v10;
  a2[3] = v18;
  v19 = v28;
  a2[4] = v11;
  a2[5] = v19;
  v20 = v27;
  a2[6] = v12;
  a2[7] = v20;
  v21 = v26;
  a2[8] = v13;
  a2[9] = v21;
  v22 = v25;
  a2[10] = v14;
  a2[11] = v22;
  a2[12] = v15;
  return result;
}

uint64_t sub_22796B6FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7627116 && a2 == 0xE300000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_22796B7CC(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v8;
  _BYTE v10[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796DDFC();
  sub_22799F508();
  if (!v1)
  {
    v10[15] = 0;
    sub_22799F388();
    v2 = v8;
    v10[14] = 1;
    sub_22799F388();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_22796B924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7300455 && a2 == 0xE300000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6567616D4970616DLL && a2 == 0xEB000000006C7255)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_22796BAD4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _OWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[32];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904DD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_22796D3B8();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  v52 = a2;
  v53 = v6;
  LOBYTE(v55) = 0;
  sub_2279457E4();
  sub_22799F3A0();
  v10 = v64;
  LOBYTE(v55) = 1;
  sub_22796D3FC();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v41 = v10 >> 64;
  v38 = v10;
  v11 = v72;
  v12 = v73;
  v13 = v74;
  LOBYTE(v55) = 2;
  v14 = v71;
  v49 = v70;
  v50 = v64;
  v51 = v65;
  v43 = v68;
  v44 = v66;
  v42 = v67;
  v40 = v69;
  sub_22796D4B8(v64);
  sub_22796D534();
  v39 = 0;
  sub_22799F364();
  v47 = v11;
  v48 = v14;
  v45 = v13;
  v46 = v12;
  v15 = v40;
  v16 = v64;
  LOBYTE(v12) = v65;
  v82 = v65;
  v83 = 3;
  v17 = sub_22799F358();
  v18 = *(void (**)(char *, uint64_t))(v53 + 8);
  v19 = v17;
  v37 = v17;
  v53 = v20;
  v18(v8, v5);
  v35 = *((_QWORD *)&v16 + 1);
  v36 = v16;
  *(_QWORD *)&v55 = v38;
  *((_QWORD *)&v55 + 1) = v41;
  v56 = v50;
  v57 = v51;
  *(_QWORD *)&v58 = v44;
  *((_QWORD *)&v58 + 1) = v42;
  *(_QWORD *)&v59 = v43;
  *((_QWORD *)&v59 + 1) = v15;
  *(_QWORD *)&v60 = v49;
  *((_QWORD *)&v60 + 1) = v48;
  *(_QWORD *)&v61 = v47;
  *((_QWORD *)&v61 + 1) = v46;
  *(_QWORD *)v62 = v45;
  *(_OWORD *)&v62[8] = v16;
  v62[24] = v12;
  *(_QWORD *)&v63 = v19;
  *((_QWORD *)&v63 + 1) = v53;
  sub_22796D578((uint64_t)&v55);
  v21 = v50;
  v22 = *((_QWORD *)&v51 + 1);
  v23 = v43;
  v24 = v42;
  v25 = v40;
  sub_22796D440(v50);
  v26 = v41;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  *(_QWORD *)&v64 = v38;
  *((_QWORD *)&v64 + 1) = v26;
  v65 = v21;
  v66 = v51;
  v67 = v22;
  v68 = v44;
  v69 = v24;
  v70 = v23;
  v71 = v25;
  v72 = v49;
  v73 = v48;
  v74 = v47;
  v75 = v46;
  v76 = v45;
  v77 = v36;
  v78 = v35;
  v79 = v82;
  v80 = v37;
  v81 = v53;
  result = sub_22796D62C((uint64_t)&v64);
  v28 = *(_OWORD *)v62;
  v29 = v52;
  v52[6] = v61;
  v29[7] = v28;
  v30 = v63;
  v29[8] = *(_OWORD *)&v62[16];
  v29[9] = v30;
  v31 = v58;
  v29[2] = v57;
  v29[3] = v31;
  v32 = v60;
  v29[4] = v59;
  v29[5] = v32;
  v33 = v56;
  *v29 = v55;
  v29[1] = v33;
  return result;
}

uint64_t sub_22796C034()
{
  unint64_t v0;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_22796C07C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904BE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22796C924();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904BF8);
  v36 = 0;
  sub_22796C968();
  sub_22799F364();
  v9 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C10);
  v36 = 1;
  sub_22796C9EC();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v35 = v9;
  v10 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C28);
  v36 = 2;
  sub_22796CA70();
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  v34 = v10;
  v11 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C40);
  v36 = 3;
  sub_22796CAF4();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v33 = v11;
  v12 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C58);
  v36 = 4;
  sub_22796CB78();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v13 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C70);
  v36 = 5;
  sub_22796CBFC();
  v32 = v13;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v14 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C88);
  v36 = 6;
  sub_22796CC80();
  v31 = v14;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v15 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CA0);
  v36 = 7;
  sub_22796CD04();
  v29 = v15;
  swift_bridgeObjectRetain();
  v27 = 0;
  sub_22799F364();
  v16 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CB8);
  v36 = 8;
  sub_22796CD88();
  v30 = v16;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v17 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CD0);
  v36 = 9;
  sub_22796CE0C();
  v28 = v17;
  swift_bridgeObjectRetain();
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v27 = v37;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v29;
  swift_bridgeObjectRelease();
  v19 = v31;
  swift_bridgeObjectRelease();
  v20 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v33;
  swift_bridgeObjectRelease();
  v22 = v34;
  swift_bridgeObjectRelease();
  v23 = v35;
  result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v22;
  a2[2] = v21;
  a2[3] = v12;
  a2[4] = v20;
  a2[5] = v19;
  v25 = v30;
  a2[6] = v18;
  a2[7] = v25;
  v26 = v27;
  a2[8] = v28;
  a2[9] = v26;
  return result;
}

unint64_t sub_22796C924()
{
  unint64_t result;

  result = qword_255904BF0;
  if (!qword_255904BF0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1CA0, &type metadata for VenueResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904BF0);
  }
  return result;
}

unint64_t sub_22796C968()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C00;
  if (!qword_255904C00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904BF8);
    v2 = sub_227951FC4(&qword_255904C08, &qword_255904998, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C00);
  }
  return result;
}

unint64_t sub_22796C9EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C18;
  if (!qword_255904C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C10);
    v2 = sub_227951FC4(&qword_255904C20, &qword_255904748, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C18);
  }
  return result;
}

unint64_t sub_22796CA70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C30;
  if (!qword_255904C30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C28);
    v2 = sub_227951FC4(&qword_255904C38, &qword_255904B00, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C30);
  }
  return result;
}

unint64_t sub_22796CAF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C48;
  if (!qword_255904C48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C40);
    v2 = sub_227951FC4(&qword_255904C50, &qword_255904B28, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C48);
  }
  return result;
}

unint64_t sub_22796CB78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C60;
  if (!qword_255904C60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C58);
    v2 = sub_227951FC4(&qword_255904C68, &qword_255904960, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C60);
  }
  return result;
}

unint64_t sub_22796CBFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C78;
  if (!qword_255904C78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C70);
    v2 = sub_227951FC4(&qword_255904C80, &qword_255904B18, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C78);
  }
  return result;
}

unint64_t sub_22796CC80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904C90;
  if (!qword_255904C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C88);
    v2 = sub_227951FC4(&qword_255904C98, &qword_255904B38, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904C90);
  }
  return result;
}

unint64_t sub_22796CD04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904CA8;
  if (!qword_255904CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CA0);
    v2 = sub_227951FC4(&qword_255904CB0, &qword_255904B48, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904CA8);
  }
  return result;
}

unint64_t sub_22796CD88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904CC0;
  if (!qword_255904CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CB8);
    v2 = sub_227951FC4(&qword_255904CC8, &qword_255904B58, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904CC0);
  }
  return result;
}

unint64_t sub_22796CE0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904CD8;
  if (!qword_255904CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CD0);
    v2 = sub_227951FC4(&qword_255904CE0, &qword_255904740, (uint64_t)&unk_2279A2E00);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904CD8);
  }
  return result;
}

unint64_t sub_22796CE90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904CF8;
  if (!qword_255904CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904BF8);
    v2 = sub_227951FC4(&qword_255904D00, &qword_255904998, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904CF8);
  }
  return result;
}

unint64_t sub_22796CF14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D10;
  if (!qword_255904D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C10);
    v2 = sub_227951FC4(&qword_255904D18, &qword_255904748, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D10);
  }
  return result;
}

unint64_t sub_22796CF98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D20;
  if (!qword_255904D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C28);
    v2 = sub_227951FC4(&qword_255904D28, &qword_255904B00, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D20);
  }
  return result;
}

unint64_t sub_22796D01C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D38;
  if (!qword_255904D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C40);
    v2 = sub_227951FC4(&qword_255904D40, &qword_255904B28, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D38);
  }
  return result;
}

unint64_t sub_22796D0A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D50;
  if (!qword_255904D50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C58);
    v2 = sub_227951FC4(&qword_255904D58, &qword_255904960, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D50);
  }
  return result;
}

unint64_t sub_22796D124()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D68;
  if (!qword_255904D68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C70);
    v2 = sub_227951FC4(&qword_255904D70, &qword_255904B18, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D68);
  }
  return result;
}

unint64_t sub_22796D1A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D80;
  if (!qword_255904D80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904C88);
    v2 = sub_227951FC4(&qword_255904D88, &qword_255904B38, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D80);
  }
  return result;
}

unint64_t sub_22796D22C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904D98;
  if (!qword_255904D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CA0);
    v2 = sub_227951FC4(&qword_255904DA0, &qword_255904B48, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904D98);
  }
  return result;
}

unint64_t sub_22796D2B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904DB0;
  if (!qword_255904DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CB8);
    v2 = sub_227951FC4(&qword_255904DB8, &qword_255904B58, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904DB0);
  }
  return result;
}

unint64_t sub_22796D334()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255904DC8;
  if (!qword_255904DC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904CD0);
    v2 = sub_227951FC4(&qword_255904DD0, &qword_255904740, (uint64_t)&unk_2279A2DD8);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255904DC8);
  }
  return result;
}

unint64_t sub_22796D3B8()
{
  unint64_t result;

  result = qword_255904DE0;
  if (!qword_255904DE0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1C50, &type metadata for VenueAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904DE0);
  }
  return result;
}

unint64_t sub_22796D3FC()
{
  unint64_t result;

  result = qword_255904DE8;
  if (!qword_255904DE8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A17D8, &type metadata for VenueAttributes.Address);
    atomic_store(result, (unint64_t *)&qword_255904DE8);
  }
  return result;
}

uint64_t sub_22796D440(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22796D4B8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22796D534()
{
  unint64_t result;

  result = qword_255904DF0;
  if (!qword_255904DF0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1C28, &type metadata for VenueAttributes.Geo);
    atomic_store(result, (unint64_t *)&qword_255904DF0);
  }
  return result;
}

uint64_t sub_22796D578(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_22796D4B8(v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22796D62C(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_22796D440(v3);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22796D6E0()
{
  unint64_t result;

  result = qword_255904E08;
  if (!qword_255904E08)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A17B0, &type metadata for VenueAttributes.Address);
    atomic_store(result, (unint64_t *)&qword_255904E08);
  }
  return result;
}

unint64_t sub_22796D724()
{
  unint64_t result;

  result = qword_255904E18;
  if (!qword_255904E18)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1C00, &type metadata for VenueAttributes.Geo);
    atomic_store(result, (unint64_t *)&qword_255904E18);
  }
  return result;
}

unint64_t sub_22796D768()
{
  unint64_t result;

  result = qword_255904E28;
  if (!qword_255904E28)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1BB0, &type metadata for VenueAttributes.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E28);
  }
  return result;
}

unint64_t sub_22796D7AC()
{
  unint64_t result;

  result = qword_255904E40;
  if (!qword_255904E40)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4520, &type metadata for Venue.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_255904E40);
  }
  return result;
}

uint64_t sub_22796D7F0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904E30);
    v8 = a2;
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22796D850()
{
  unint64_t result;

  result = qword_255904E58;
  if (!qword_255904E58)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4548, &type metadata for Venue.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_255904E58);
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes.Address.CodingKeys()
{
  return &type metadata for VenueAttributes.Address.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VenueAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22796D8F8 + 4 * byte_2279A176D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22796D92C + 4 * byte_2279A1768[v4]))();
}

uint64_t sub_22796D92C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796D934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22796D93CLL);
  return result;
}

uint64_t sub_22796D948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22796D950);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22796D954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796D95C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes.CodingKeys()
{
  return &type metadata for VenueAttributes.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VenueResources.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VenueResources.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_22796DA54 + 4 * byte_2279A1777[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_22796DA88 + 4 * byte_2279A1772[v4]))();
}

uint64_t sub_22796DA88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796DA90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22796DA98);
  return result;
}

uint64_t sub_22796DAA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22796DAACLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_22796DAB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796DAB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueResources.CodingKeys()
{
  return &type metadata for VenueResources.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VenueAttributes.Geo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VenueAttributes.Geo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes.Geo()
{
  return &type metadata for VenueAttributes.Geo;
}

unint64_t sub_22796DB30()
{
  unint64_t result;

  result = qword_255904E60;
  if (!qword_255904E60)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A18E8, &type metadata for VenueAttributes.Geo);
    atomic_store(result, (unint64_t *)&qword_255904E60);
  }
  return result;
}

unint64_t sub_22796DB78()
{
  unint64_t result;

  result = qword_255904E68;
  if (!qword_255904E68)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1A18, &type metadata for VenueResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E68);
  }
  return result;
}

unint64_t sub_22796DBC0()
{
  unint64_t result;

  result = qword_255904E70;
  if (!qword_255904E70)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1AD0, &type metadata for VenueAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E70);
  }
  return result;
}

unint64_t sub_22796DC08()
{
  unint64_t result;

  result = qword_255904E78;
  if (!qword_255904E78)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1B88, &type metadata for VenueAttributes.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E78);
  }
  return result;
}

unint64_t sub_22796DC50()
{
  unint64_t result;

  result = qword_255904E80;
  if (!qword_255904E80)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1AF8, &type metadata for VenueAttributes.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E80);
  }
  return result;
}

unint64_t sub_22796DC98()
{
  unint64_t result;

  result = qword_255904E88;
  if (!qword_255904E88)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1B20, &type metadata for VenueAttributes.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E88);
  }
  return result;
}

unint64_t sub_22796DCE0()
{
  unint64_t result;

  result = qword_255904E90;
  if (!qword_255904E90)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1A40, &type metadata for VenueAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E90);
  }
  return result;
}

unint64_t sub_22796DD28()
{
  unint64_t result;

  result = qword_255904E98;
  if (!qword_255904E98)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1A68, &type metadata for VenueAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904E98);
  }
  return result;
}

unint64_t sub_22796DD70()
{
  unint64_t result;

  result = qword_255904EA0;
  if (!qword_255904EA0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1950, &type metadata for VenueResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904EA0);
  }
  return result;
}

unint64_t sub_22796DDB8()
{
  unint64_t result;

  result = qword_255904EA8;
  if (!qword_255904EA8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1978, &type metadata for VenueResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904EA8);
  }
  return result;
}

unint64_t sub_22796DDFC()
{
  unint64_t result;

  result = qword_255904EB8;
  if (!qword_255904EB8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1DA8, &type metadata for VenueAttributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904EB8);
  }
  return result;
}

uint64_t _s12ShazamEvents15VenueAttributesV7AddressV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22796DE8C + 4 * byte_2279A1781[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22796DEC0 + 4 * byte_2279A177C[v4]))();
}

uint64_t sub_22796DEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796DEC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22796DED0);
  return result;
}

uint64_t sub_22796DEDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22796DEE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22796DEE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22796DEF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueAttributes.Geo.CodingKeys()
{
  return &type metadata for VenueAttributes.Geo.CodingKeys;
}

unint64_t sub_22796DF10()
{
  unint64_t result;

  result = qword_255904EC8;
  if (!qword_255904EC8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1D80, &type metadata for VenueAttributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904EC8);
  }
  return result;
}

unint64_t sub_22796DF58()
{
  unint64_t result;

  result = qword_255904ED0;
  if (!qword_255904ED0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1CF0, &type metadata for VenueAttributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904ED0);
  }
  return result;
}

unint64_t sub_22796DFA0()
{
  unint64_t result;

  result = qword_255904ED8;
  if (!qword_255904ED8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A1D18, &type metadata for VenueAttributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255904ED8);
  }
  return result;
}

uint64_t sub_22796DFF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2279696B0(a1, a2);
}

uint64_t sub_22796E00C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _QWORD v17[4];
  _OWORD v18[5];
  uint64_t v19;
  _OWORD v20[5];
  _BYTE v21[8];
  uint64_t v22;

  v6 = *(_QWORD *)v2;
  v7 = *(_OWORD *)(v2 + 48);
  v18[2] = *(_OWORD *)(v2 + 32);
  v18[3] = v7;
  v18[4] = *(_OWORD *)(v2 + 64);
  v19 = *(_QWORD *)(v2 + 80);
  v8 = *(_OWORD *)(v2 + 16);
  v18[0] = *(_OWORD *)v2;
  v18[1] = v8;
  v17[2] = v18;
  sub_2279696F4(v2);
  swift_bridgeObjectRetain();
  v9 = sub_227965688((void (*)(uint64_t))sub_227976290, (uint64_t)v17, v6);
  swift_bridgeObjectRelease();
  sub_227959D14(v2);
  sub_2279696F4(v2);
  swift_bridgeObjectRetain();
  v10 = sub_2279762D4(v9, v2, a1);
  swift_bridgeObjectRelease();
  sub_227959D14(v2);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v12 = *(_OWORD *)(v2 + 24);
    v13 = *(_OWORD *)(v2 + 56);
    v20[2] = *(_OWORD *)(v2 + 40);
    v20[3] = v13;
    v20[4] = *(_OWORD *)(v2 + 72);
    v20[0] = *(_OWORD *)(v2 + 8);
    v20[1] = v12;
    sub_2279520F8((uint64_t)v20 + 8, (uint64_t)v21, &qword_255904D08);
    sub_2279520F8((uint64_t)v21, (uint64_t)&v22, &qword_255904D08);
    v14 = v22;
    if (v22)
    {
      sub_2279696F4(v2);
      sub_22796A45C((uint64_t)v21);
      v15 = sub_227976474(v14, v2);
      sub_227959D14(v2);
      result = sub_22796A484((uint64_t)v21);
      if (*(_QWORD *)(v15 + 16))
      {
        *a2 = v15;
        a2[1] = v10;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2279466D4();
        swift_allocError();
        *v16 = 0;
        return swift_willThrow();
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0;
    }
  }
  return result;
}

uint64_t sub_22796E204@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t result;
  void (*v65)(char *, char *, uint64_t);
  unint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  _BYTE *v102;
  unint64_t v103;
  int *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  int64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  unint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  char *v185;
  unint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t i;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  int64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t j;
  uint64_t v228;
  unint64_t v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _BYTE *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t k;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int *v254;
  void (*v255)(char *, uint64_t, uint64_t);
  uint64_t v256;
  uint64_t v257;
  int *v258;
  uint64_t v259;
  uint64_t v260;
  char **v261;
  char *v262;
  char *v263;
  char *v264;
  int *v265;
  char *v266;
  uint64_t v267;
  void (*v268)(char *, char *, uint64_t);
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char **v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD v277[2];
  void (*v278)(char *, char *, uint64_t);
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int *v308;
  uint64_t v309;
  char *v310;
  uint64_t *v311;
  char *v312;
  uint64_t *v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  int64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _QWORD v342[17];
  char v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD v346[20];
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;

  v331 = a2;
  v314 = a1;
  v286 = a3;
  v4 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  MEMORY[0x24BDAC7A8](v4);
  v295 = (uint64_t)v277 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
  MEMORY[0x24BDAC7A8](v6);
  v293 = (uint64_t)v277 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v291 = (uint64_t)v277 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v290 = (uint64_t)v277 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v289 = (uint64_t)v277 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v296 = (uint64_t)v277 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v297 = (uint64_t)v277 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v305 = (uint64_t)v277 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v303 = (char *)v277 - v21;
  v308 = (int *)type metadata accessor for LiveMusicEventAttributes(0);
  v301 = *((_QWORD *)v308 - 1);
  v22 = MEMORY[0x24BDAC7A8](v308);
  v285 = (uint64_t)v277 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v284 = (uint64_t)v277 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v283 = (uint64_t)v277 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v292 = (uint64_t)v277 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v294 = (_QWORD *)((char *)v277 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v304 = (uint64_t)v277 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v300 = (uint64_t)v277 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
  MEMORY[0x24BDAC7A8](v35);
  v302 = (uint64_t)v277 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B18);
  v298 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)v277 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for Setlist.Song();
  v335 = *(_QWORD *)(v40 - 8);
  v336 = v40;
  MEMORY[0x24BDAC7A8](v40);
  v310 = (char *)v277 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904960);
  v306 = *(_QWORD *)(v315 - 8);
  MEMORY[0x24BDAC7A8](v315);
  v311 = (_QWORD *)((char *)v277 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_22799EF2C();
  v333 = *(_QWORD *)(v43 - 8);
  v334 = v43;
  MEMORY[0x24BDAC7A8](v43);
  v332 = (char *)v277 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B00);
  v325 = *(_QWORD *)(v329 - 8);
  MEMORY[0x24BDAC7A8](v329);
  v330 = (_QWORD *)((char *)v277 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = type metadata accessor for Venue();
  v327 = *(_QWORD *)(v46 - 8);
  v328 = v46;
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)v277 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v338 = (char *)v277 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)v277 - v52;
  v54 = sub_22799EFE0();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v288 = (char *)v277 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x24BDAC7A8](v56);
  v287 = (char *)v277 - v59;
  MEMORY[0x24BDAC7A8](v58);
  v61 = (char *)v277 - v60;
  v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904998);
  v62 = *(int *)(v299 + 36);
  v313 = v3;
  sub_22794FB10((uint64_t)v3 + v62, (uint64_t)v53, &qword_255904040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    sub_2279520BC((uint64_t)v53, &qword_255904040);
    sub_22797054C();
    swift_allocError();
    *v63 = 1;
    return swift_willThrow();
  }
  v281 = (uint64_t *)v39;
  v65 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v312 = v61;
  v65(v61, v53, v54);
  if (!*(_QWORD *)(v331 + 16) || (v66 = sub_227968558(3u), (v67 & 1) == 0))
  {
    sub_2279466D4();
    swift_allocError();
    *v102 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v312, v54);
  }
  v307 = v54;
  v68 = v314;
  v69 = v314[2];
  v70 = MEMORY[0x24BEE4AF8];
  v71 = v55;
  v309 = v55;
  v278 = v65;
  if (!v69)
  {
LABEL_35:
    v103 = v68[1];
    v105 = v307;
    v104 = v308;
    v323 = v70;
    if (v103)
      v106 = v103;
    else
      v106 = sub_22795F690(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRetain();
    v107 = sub_227963F4C(v106);
    swift_bridgeObjectRelease();
    v108 = v314;
    sub_2279752F0((uint64_t)v314);
    v109 = v337;
    v110 = sub_227975144(v107, (uint64_t)v108);
    if (v109)
    {
      sub_227975390((uint64_t)v108);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v312, v105);
    }
    v321 = 0;
    v322 = v110;
    sub_227975390((uint64_t)v108);
    swift_bridgeObjectRelease();
    if (v108[4])
      v111 = v108[4];
    else
      v111 = sub_22795F844(MEMORY[0x24BEE4AF8]);
    v112 = v312;
    swift_bridgeObjectRetain();
    v113 = sub_227964230(v111);
    swift_bridgeObjectRelease();
    v114 = *(_QWORD *)(v113 + 16);
    if (v114)
    {
      v346[0] = MEMORY[0x24BEE4AF8];
      sub_22798E540(0, v114, 0);
      v115 = 0;
      v116 = *(unsigned __int8 *)(v306 + 80);
      v320 = v113;
      v326 = v113 + ((v116 + 32) & ~v116);
      v117 = *(_QWORD *)(v306 + 72);
      v324 = v114;
      v325 = v117;
      v118 = v311;
      while (1)
      {
        v330 = (uint64_t *)v115;
        sub_22794FB10(v326 + v325 * v115, (uint64_t)v118, &qword_255904960);
        v119 = v118[1];
        v329 = *v118;
        v347 = v329;
        v348 = v119;
        swift_bridgeObjectRetain_n();
        v120 = (uint64_t)v118;
        v121 = v332;
        sub_22799EF20();
        sub_22794F890();
        sub_22799F274();
        (*(void (**)(char *, uint64_t))(v333 + 8))(v121, v334);
        v122 = sub_22799F13C();
        swift_bridgeObjectRelease();
        if (v122 < 1)
          break;
        swift_bridgeObjectRelease();
        v123 = *(_QWORD *)(v120 + *(int *)(v315 + 44));
        if (!v123)
          goto LABEL_168;
        v118 = (uint64_t *)v120;
        v328 = v119;
        v124 = *(_QWORD *)(v123 + 16);
        if (v124)
        {
          v347 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_22798E5B4(0, v124, 0);
          v125 = (char *)v347;
          v327 = v123;
          v126 = (uint64_t *)(v123 + 40);
          v127 = (uint64_t)v310;
          do
          {
            v338 = v125;
            v129 = *(v126 - 1);
            v128 = *v126;
            v130 = v126[1];
            v131 = v126[2];
            v132 = v126[4];
            v337 = v126[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22799F04C();
            v133 = v336;
            v134 = (_QWORD *)(v127 + *(int *)(v336 + 20));
            *v134 = v129;
            v134[1] = v128;
            v135 = (_QWORD *)(v127 + *(int *)(v133 + 24));
            *v135 = v130;
            v135[1] = v131;
            v136 = (_QWORD *)(v127 + *(int *)(v133 + 28));
            v125 = v338;
            *v136 = v337;
            v136[1] = v132;
            v347 = (uint64_t)v125;
            v138 = *((_QWORD *)v125 + 2);
            v137 = *((_QWORD *)v125 + 3);
            if (v138 >= v137 >> 1)
            {
              sub_22798E5B4(v137 > 1, v138 + 1, 1);
              v125 = (char *)v347;
            }
            v126 += 6;
            *((_QWORD *)v125 + 2) = v138 + 1;
            sub_22794F7B8(v127, (uint64_t)&v125[((*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80))+ *(_QWORD *)(v335 + 72) * v138], (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
            --v124;
          }
          while (v124);
          swift_bridgeObjectRelease();
          v118 = v311;
          v112 = v312;
          v71 = v309;
          v114 = v324;
        }
        else
        {
          v125 = (char *)MEMORY[0x24BEE4AF8];
        }
        sub_2279520BC((uint64_t)v118, &qword_255904960);
        v139 = (_QWORD *)v346[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22798E540(0, v139[2] + 1, 1);
          v139 = (_QWORD *)v346[0];
        }
        v140 = (uint64_t)v330;
        v142 = v139[2];
        v141 = v139[3];
        if (v142 >= v141 >> 1)
        {
          sub_22798E540(v141 > 1, v142 + 1, 1);
          v140 = (uint64_t)v330;
          v139 = (_QWORD *)v346[0];
        }
        v115 = v140 + 1;
        v139[2] = v142 + 1;
        v143 = &v139[3 * v142];
        v144 = v328;
        v143[4] = v329;
        v143[5] = v144;
        v143[6] = v125;
        if (v115 == v114)
        {
          swift_bridgeObjectRelease();
          v104 = v308;
          goto LABEL_64;
        }
      }
      sub_22794F8D4();
      swift_allocError();
      swift_willThrow();
      swift_bridgeObjectRelease_n();
      sub_2279520BC(v120, &qword_255904960);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v112, v307);
    }
    swift_bridgeObjectRelease();
    v139 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_64:
    v145 = v307;
    if (v139[2])
    {
      v147 = v139[4];
      v146 = v139[5];
      v148 = v139[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v147 = 0;
      v146 = 0;
      v148 = 0;
    }
    swift_bridgeObjectRelease();
    v149 = v314[5];
    v335 = v148;
    if (v149)
    {
      v150 = swift_bridgeObjectRetain();
      v151 = sub_2279647F4(v150);
      v152 = *(_QWORD *)(v151 + 16);
      if (v152)
      {
        v328 = v149;
        v329 = v147;
        v330 = (uint64_t *)v146;
        v346[0] = MEMORY[0x24BEE4AF8];
        v337 = v151;
        v338 = (char *)v152;
        sub_22798E56C(0, v152, 0);
        v153 = v337 + ((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80));
        v336 = *(_QWORD *)(v298 + 72);
        while (1)
        {
          v154 = v281;
          sub_22794FB10(v153, (uint64_t)v281, &qword_255904B18);
          v155 = *v154;
          v156 = v154[1];
          v347 = *v154;
          v348 = v156;
          swift_bridgeObjectRetain_n();
          v157 = v332;
          sub_22799EF20();
          sub_22794F890();
          sub_22799F274();
          (*(void (**)(char *, uint64_t))(v333 + 8))(v157, v334);
          v158 = sub_22799F13C();
          swift_bridgeObjectRelease();
          if (v158 < 1)
            break;
          swift_bridgeObjectRelease();
          sub_2279520BC((uint64_t)v154, &qword_255904B18);
          v159 = v346[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_22798E56C(0, *(_QWORD *)(v159 + 16) + 1, 1);
            v159 = v346[0];
          }
          v160 = v338;
          v162 = *(_QWORD *)(v159 + 16);
          v161 = *(_QWORD *)(v159 + 24);
          if (v162 >= v161 >> 1)
          {
            sub_22798E56C(v161 > 1, v162 + 1, 1);
            v159 = v346[0];
          }
          *(_QWORD *)(v159 + 16) = v162 + 1;
          v163 = v159 + 16 * v162;
          *(_QWORD *)(v163 + 32) = v155;
          *(_QWORD *)(v163 + 40) = v156;
          v153 += v336;
          v338 = v160 - 1;
          if (v160 == (char *)1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v145 = v307;
            v147 = v329;
            v146 = (uint64_t)v330;
            goto LABEL_80;
          }
        }
        sub_22794F8D4();
        swift_allocError();
        swift_willThrow();
        swift_bridgeObjectRelease_n();
        sub_2279520BC((uint64_t)v154, &qword_255904B18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_22794E8F4(v329, (uint64_t)v330);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v312, v307);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v159 = MEMORY[0x24BEE4AF8];
LABEL_80:
      v104 = v308;
      v164 = (uint64_t)v303;
      if (!*(_QWORD *)(v159 + 16))
      {
        swift_bridgeObjectRelease();
        v159 = 0;
      }
    }
    else
    {
      v159 = 0;
      v164 = (uint64_t)v303;
    }
    v337 = (uint64_t)v313 + *(int *)(v299 + 44);
    sub_22794FB10(v337, v164, &qword_255904EE0);
    v338 = *(char **)(v301 + 48);
    v165 = ((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v164, 1, v104) == 1;
    v166 = v164;
    if (v165)
      goto LABEL_167;
    v167 = v300;
    sub_22794F7B8(v164, v300, type metadata accessor for LiveMusicEventAttributes);
    v168 = v302;
    sub_22794FB10(v167 + v104[8], v302, &qword_255904EE8);
    sub_22794FB54(v167, type metadata accessor for LiveMusicEventAttributes);
    v169 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 48))(v168, 1, v169) == 1)
    {
      sub_2279520BC(v168, &qword_255904EE8);
      v170 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v170 = sub_227971598();
      sub_22794FB54(v168, type metadata accessor for LiveMusicEventAttributes.Tickets);
    }
    v171 = v305;
    sub_22794FB10(v337, v305, &qword_255904EE0);
    v165 = ((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v171, 1, v104) == 1;
    v166 = v171;
    if (v165)
      goto LABEL_167;
    v172 = v304;
    sub_22794F7B8(v171, v304, type metadata accessor for LiveMusicEventAttributes);
    v173 = *(unsigned __int8 *)(v172 + v104[9]);
    sub_22794FB54(v172, type metadata accessor for LiveMusicEventAttributes);
    if (!*(_QWORD *)(v331 + 16) || (v174 = sub_227968558(0), v175 = v331, (v176 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794E8F4(v147, v146);
      swift_bridgeObjectRelease();
      sub_2279466D4();
      swift_allocError();
      *v184 = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v312, v145);
    }
    v329 = v147;
    v330 = (uint64_t *)v146;
    v177 = v314[3];
    if (v177)
    {
      v178 = v173;
      v179 = *(_QWORD *)(*(_QWORD *)(v331 + 56) + 8 * v174);
      v180 = v331;
      swift_bridgeObjectRetain();
      v181 = sub_227964ADC(v177);
      swift_bridgeObjectRetain();
      v182 = v321;
      v183 = sub_227975448(v181, v179);
      v321 = v182;
      if (v182)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22794E8F4(v329, (uint64_t)v330);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v309 + 8))(v312, v145);
        return swift_bridgeObjectRelease();
      }
      v326 = v170;
      v327 = v183;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v185 = v312;
      v175 = v180;
      v173 = v178;
    }
    else
    {
      v326 = v170;
      v327 = MEMORY[0x24BEE4AF8];
      v185 = v312;
    }
    if (*(_QWORD *)(v175 + 16) && (v186 = sub_227968558(1u), v187 = v331, (v188 & 1) != 0))
    {
      v189 = v314[6];
      v325 = MEMORY[0x24BEE4AF8];
      if (v189)
      {
        LODWORD(v324) = v173;
        v190 = *(_QWORD *)(*(_QWORD *)(v331 + 56) + 8 * v186);
        swift_bridgeObjectRetain();
        v191 = sub_227964DC8(v189);
        v192 = *(_QWORD *)(v191 + 16);
        if (v192)
        {
          v319 = v159;
          v347 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_22798E4E8(0, v192, 0);
          v193 = v347;
          v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B38);
          v194 = *(_QWORD *)(v336 - 8);
          v195 = *(unsigned __int8 *)(v194 + 80);
          v320 = v191;
          v196 = v191 + ((v195 + 32) & ~v195);
          v328 = *(_QWORD *)(v194 + 72);
          v197 = v321;
          while (1)
          {
            if (!*(_QWORD *)(v196 + *(int *)(v336 + 44)))
              goto LABEL_168;
            swift_bridgeObjectRetain();
            v198 = swift_bridgeObjectRetain();
            v199 = sub_22797571C(v198, v190, type metadata accessor for PromotionalAssets.PhoneWallpaper, (void (*)(BOOL, unint64_t, uint64_t))sub_22798E60C);
            if (v197)
              break;
            v200 = v199;
            v321 = 0;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v347 = v193;
            v202 = *(_QWORD *)(v193 + 16);
            v201 = *(_QWORD *)(v193 + 24);
            if (v202 >= v201 >> 1)
            {
              sub_22798E4E8(v201 > 1, v202 + 1, 1);
              v193 = v347;
            }
            v196 += v328;
            *(_QWORD *)(v193 + 16) = v202 + 1;
            *(_QWORD *)(v193 + 8 * v202 + 32) = v200;
            --v192;
            v197 = v321;
            if (!v192)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v159 = v319;
              goto LABEL_110;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_22794E8F4(v329, (uint64_t)v330);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v309 + 8))(v312, v307);
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v193 = MEMORY[0x24BEE4AF8];
        v197 = v321;
LABEL_110:
        v321 = v197;
        v347 = MEMORY[0x24BEE4AF8];
        v203 = *(_QWORD *)(v193 + 16);
        v145 = v307;
        if (v203)
        {
          swift_bridgeObjectRetain();
          for (i = 0; i != v203; ++i)
          {
            v205 = swift_bridgeObjectRetain();
            sub_2279679B4(v205);
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v325 = v347;
        v185 = v312;
        v187 = v331;
        v173 = v324;
      }
      if (*(_QWORD *)(v187 + 16) && (v206 = sub_227968558(4u), v207 = v331, (v208 & 1) != 0))
      {
        v209 = v314[7];
        v210 = MEMORY[0x24BEE4AF8];
        if (v209)
        {
          v319 = v159;
          v211 = *(_QWORD *)(*(_QWORD *)(v331 + 56) + 8 * v206);
          swift_bridgeObjectRetain();
          v212 = sub_2279650B0(v209);
          v213 = *(_QWORD *)(v212 + 16);
          if (v213)
          {
            v347 = v210;
            swift_bridgeObjectRetain();
            sub_22798E4BC(0, v213, 0);
            v214 = v347;
            v328 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B48);
            v215 = *(_QWORD *)(v328 - 8);
            v216 = *(unsigned __int8 *)(v215 + 80);
            v318 = v212;
            v217 = v212 + ((v216 + 32) & ~v216);
            v320 = *(_QWORD *)(v215 + 72);
            v324 = v211;
            while (1)
            {
              v336 = v213;
              v218 = v321;
              if (!*(_QWORD *)(v217 + *(int *)(v328 + 44)))
                goto LABEL_168;
              swift_bridgeObjectRetain();
              v219 = swift_bridgeObjectRetain();
              v220 = sub_227975AF0(v219, v211);
              if (v218)
                break;
              v221 = v220;
              v321 = 0;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v347 = v214;
              v223 = *(_QWORD *)(v214 + 16);
              v222 = *(_QWORD *)(v214 + 24);
              if (v223 >= v222 >> 1)
              {
                sub_22798E4BC(v222 > 1, v223 + 1, 1);
                v214 = v347;
              }
              v217 += v320;
              *(_QWORD *)(v214 + 16) = v223 + 1;
              *(_QWORD *)(v214 + 8 * v223 + 32) = v221;
              v213 = v336 - 1;
              v211 = v324;
              if (v336 == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                v210 = MEMORY[0x24BEE4AF8];
                goto LABEL_130;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22794E8F4(v329, (uint64_t)v330);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v309 + 8))(v312, v307);
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v214 = MEMORY[0x24BEE4AF8];
LABEL_130:
          v347 = v210;
          v226 = *(_QWORD *)(v214 + 16);
          if (v226)
          {
            swift_bridgeObjectRetain();
            for (j = 0; j != v226; ++j)
            {
              v228 = swift_bridgeObjectRetain();
              sub_2279679A0(v228);
            }
            swift_bridgeObjectRelease();
          }
          v185 = v312;
          v225 = v329;
          v224 = (uint64_t)v330;
          v159 = v319;
          swift_bridgeObjectRelease();
          v210 = v347;
          v145 = v307;
          v207 = v331;
        }
        else
        {
          v225 = v329;
          v224 = (uint64_t)v330;
        }
        if (*(_QWORD *)(v207 + 16))
        {
          v229 = sub_227968558(2u);
          if ((v230 & 1) != 0)
          {
            v336 = v210;
            LODWORD(v324) = v173;
            v319 = v159;
            v231 = v314[8];
            v328 = MEMORY[0x24BEE4AF8];
            if (v231)
            {
              v232 = *(_QWORD *)(*(_QWORD *)(v331 + 56) + 8 * v229);
              swift_bridgeObjectRetain();
              v233 = sub_22796539C(v231);
              swift_bridgeObjectRetain();
              v234 = v321;
              v235 = sub_227975F24(v233, v232);
              v321 = v234;
              if (v234)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_22794E8F4(v329, (uint64_t)v330);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v309 + 8))(v312, v307);
                return swift_bridgeObjectRelease();
              }
              v237 = v235;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v347 = MEMORY[0x24BEE4AF8];
              v238 = *(_QWORD *)(v237 + 16);
              if (v238)
              {
                swift_bridgeObjectRetain();
                for (k = 0; k != v238; ++k)
                {
                  v240 = swift_bridgeObjectRetain();
                  sub_22796798C(v240);
                }
                swift_bridgeObjectRelease_n();
                v241 = v347;
              }
              else
              {
                swift_bridgeObjectRelease();
                v241 = MEMORY[0x24BEE4AF8];
              }
              v328 = v241;
            }
            if (!*(_QWORD *)(v325 + 16)
              && !*(_QWORD *)(v336 + 16)
              && !*(_QWORD *)(v327 + 16)
              && !*(_QWORD *)(v328 + 16))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v336 = 0;
              v327 = 0;
              v328 = 0;
              v325 = 1;
            }
            v242 = v297;
            sub_22794FB10(v337, v297, &qword_255904EE0);
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v242, 1, v308) == 1)
              goto LABEL_169;
            v243 = v294;
            sub_22794F7B8(v297, (uint64_t)v294, type metadata accessor for LiveMusicEventAttributes);
            v244 = v243[1];
            v331 = *v243;
            swift_bridgeObjectRetain();
            sub_22794FB54((uint64_t)v243, type metadata accessor for LiveMusicEventAttributes);
            v245 = *v313;
            v246 = v313[1];
            v347 = *v313;
            v348 = v246;
            swift_bridgeObjectRetain_n();
            v247 = v332;
            sub_22799EF20();
            sub_22794F890();
            sub_22799F274();
            (*(void (**)(char *, uint64_t))(v333 + 8))(v247, v334);
            v248 = sub_22799F13C();
            swift_bridgeObjectRelease();
            if (v248 < 1)
            {
              sub_22794F8D4();
              swift_allocError();
              swift_willThrow();
              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v309 + 8))(v312, v307);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_22794E8F4(v329, (uint64_t)v330);
              swift_bridgeObjectRelease();
              return sub_22795446C(v325);
            }
            else
            {
              swift_bridgeObjectRelease();
              v249 = v296;
              sub_22794FB10(v337, v296, &qword_255904EE0);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v249, 1, v308) == 1)
              {
                v166 = v296;
                goto LABEL_167;
              }
              v250 = v292;
              sub_22794F7B8(v296, v292, type metadata accessor for LiveMusicEventAttributes);
              sub_22794F9E4(v250 + v308[7], v295, type metadata accessor for LiveMusicEventAttributes.Time);
              sub_22794FB54(v250, type metadata accessor for LiveMusicEventAttributes);
              v251 = v321;
              sub_2279708DC(v293);
              v321 = v251;
              if (v251)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_22794E8F4(v329, (uint64_t)v330);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_22795446C(v325);
                sub_22794FB54(v295, type metadata accessor for LiveMusicEventAttributes.Time);
                return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v312, v307);
              }
              else
              {
                sub_22794FB54(v295, type metadata accessor for LiveMusicEventAttributes.Time);
                v252 = v289;
                sub_22794FB10(v337, v289, &qword_255904EE0);
                if (((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v252, 1, v308) == 1)
                {
                  v166 = v289;
                  goto LABEL_167;
                }
                v253 = v283;
                sub_22794F7B8(v289, v283, type metadata accessor for LiveMusicEventAttributes);
                v254 = v308;
                v255 = *(void (**)(char *, uint64_t, uint64_t))(v309 + 16);
                v255(v287, v253 + v308[5], v307);
                sub_22794FB54(v253, type metadata accessor for LiveMusicEventAttributes);
                v256 = v290;
                sub_22794FB10(v337, v290, &qword_255904EE0);
                if (((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v256, 1, v254) == 1)
                {
                  v166 = v290;
                  goto LABEL_167;
                }
                v257 = v284;
                sub_22794F7B8(v290, v284, type metadata accessor for LiveMusicEventAttributes);
                v258 = v308;
                v255(v288, v257 + v308[10], v307);
                sub_22794FB54(v257, type metadata accessor for LiveMusicEventAttributes);
                v259 = v291;
                sub_22794FB10(v337, v291, &qword_255904EE0);
                if (((unsigned int (*)(uint64_t, uint64_t, int *))v338)(v259, 1, v258) == 1)
                {
                  v166 = v291;
                  goto LABEL_167;
                }
                v260 = v285;
                sub_22794F7B8(v291, v285, type metadata accessor for LiveMusicEventAttributes);
                v261 = (char **)(v260 + v308[11]);
                v263 = *v261;
                v262 = v261[1];
                swift_bridgeObjectRetain();
                sub_22794FB54(v260, type metadata accessor for LiveMusicEventAttributes);
                if (v262)
                  v264 = v263;
                else
                  v264 = 0;
                v338 = v264;
                v265 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
                v266 = (char *)v286;
                v267 = v307;
                v268 = v278;
                v278((char *)v286 + v265[15], v312, v307);
                v269 = &v266[v265[16]];
                v270 = v323;
                *(_QWORD *)v269 = v322;
                *((_QWORD *)v269 + 1) = v270;
                v271 = v329;
                *((_QWORD *)v269 + 2) = v326;
                *((_QWORD *)v269 + 3) = v271;
                v272 = v335;
                *((_QWORD *)v269 + 4) = v330;
                *((_QWORD *)v269 + 5) = v272;
                *((_QWORD *)v269 + 6) = v319;
                v269[56] = v324;
                *(_QWORD *)v266 = v331;
                *((_QWORD *)v266 + 1) = v244;
                *((_QWORD *)v266 + 2) = v245;
                *((_QWORD *)v266 + 3) = v246;
                sub_2279520F8(v293, (uint64_t)&v266[v265[10]], &qword_255904018);
                v268(&v266[v265[11]], v287, v267);
                result = ((uint64_t (*)(char *, char *, uint64_t))v268)(&v266[v265[12]], v288, v267);
                v273 = (char **)&v266[v265[13]];
                *v273 = v338;
                v273[1] = v262;
                v274 = &v266[v265[14]];
                v275 = v336;
                *v274 = v325;
                v274[1] = v275;
                v276 = v328;
                v274[2] = v327;
                v274[3] = v276;
              }
            }
            return result;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22794E8F4(v225, v224);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22794E8F4(v329, (uint64_t)v330);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794E8F4(v329, (uint64_t)v330);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_2279466D4();
    swift_allocError();
    *v236 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v185, v145);
  }
  v72 = *(_QWORD *)(*(_QWORD *)(v331 + 56) + 8 * v66);
  swift_bridgeObjectRetain();
  v73 = swift_bridgeObjectRetain();
  v74 = sub_227964514(v73);
  v75 = *(_QWORD *)(v74 + 16);
  if (!v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v70 = MEMORY[0x24BEE4AF8];
LABEL_34:
    v68 = v314;
    goto LABEL_35;
  }
  v277[1] = v69;
  v280 = v72;
  v349 = MEMORY[0x24BEE4AF8];
  v76 = v74;
  v326 = v75;
  sub_22798E588(0, v75, 0);
  v77 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
  v279 = v76;
  v282 = *(_QWORD *)(v325 + 72);
  v78 = v330;
  sub_22794FB10(v76 + v77, (uint64_t)v330, &qword_255904B00);
  sub_2279520F8((uint64_t)v78 + *(int *)(v329 + 44), (uint64_t)v346, &qword_255904B88);
  sub_2279520F8((uint64_t)v346, (uint64_t)&v347, &qword_255904B88);
  if (sub_22796A4AC((uint64_t)&v347) == 1)
  {
    while (1)
    {
LABEL_168:
      sub_22799F310();
      __break(1u);
LABEL_169:
      v166 = v297;
LABEL_167:
      sub_2279520BC(v166, &qword_255904EE0);
    }
  }
  v79 = v279 + v282 + v77;
  while (1)
  {
    sub_2279520F8((uint64_t)v346, (uint64_t)v342, &qword_255904B88);
    v325 = v79;
    if (v345)
      break;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v338, 1, 1, v307);
LABEL_13:
    v82 = *v78;
    v83 = v78[1];
    v340 = v82;
    v341 = v83;
    swift_bridgeObjectRetain_n();
    v84 = v332;
    sub_22799EF20();
    sub_22794F890();
    sub_22799F274();
    (*(void (**)(char *, uint64_t))(v333 + 8))(v84, v334);
    v85 = sub_22799F13C();
    swift_bridgeObjectRelease();
    if (v85 < 1)
    {
      sub_22794F8D4();
      swift_allocError();
      swift_willThrow();
      swift_bridgeObjectRelease_n();
      sub_2279520BC((uint64_t)v338, &qword_255904040);
      v71 = v309;
      v78 = v330;
      goto LABEL_62;
    }
    swift_bridgeObjectRelease();
    if (v343)
      v86 = 0.0;
    else
      v86 = *(double *)&v342[16];
    if (v343)
      v87 = 0.0;
    else
      v87 = *(double *)&v342[15];
    if (v342[2])
    {
      v88 = v342[12];
      v323 = v342[11];
      v324 = v342[13];
      v89 = v342[10];
      v321 = v342[9];
      v322 = v342[14];
      v90 = v342[8];
      v319 = v342[7];
      v91 = v342[6];
      v92 = v342[4];
      v316 = v342[3];
      v317 = v342[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v318 = v91;
      swift_bridgeObjectRetain();
      v320 = v90;
      swift_bridgeObjectRetain();
      v93 = v89;
      swift_bridgeObjectRetain();
      v94 = v88;
      swift_bridgeObjectRetain();
    }
    else
    {
      v316 = 0;
      v317 = 0;
      v318 = 0;
      v319 = 0;
      v320 = 0;
      v321 = 0;
      v93 = 0;
      v323 = 0;
      v324 = 0;
      v94 = 0;
      v322 = 0;
      v92 = 1;
    }
    v95 = v342[0];
    v96 = v342[1];
    sub_2279520F8((uint64_t)v338, (uint64_t)&v48[*(int *)(v328 + 36)], &qword_255904040);
    *(_QWORD *)v48 = v82;
    *((_QWORD *)v48 + 1) = v83;
    *((_QWORD *)v48 + 2) = v95;
    *((_QWORD *)v48 + 3) = v96;
    *((double *)v48 + 4) = v87;
    *((double *)v48 + 5) = v86;
    *((_QWORD *)v48 + 6) = v316;
    *((_QWORD *)v48 + 7) = v92;
    v97 = v318;
    *((_QWORD *)v48 + 8) = v317;
    *((_QWORD *)v48 + 9) = v97;
    v98 = v320;
    *((_QWORD *)v48 + 10) = v319;
    *((_QWORD *)v48 + 11) = v98;
    *((_QWORD *)v48 + 12) = v321;
    *((_QWORD *)v48 + 13) = v93;
    *((_QWORD *)v48 + 14) = v323;
    *((_QWORD *)v48 + 15) = v94;
    v99 = v322;
    *((_QWORD *)v48 + 16) = v324;
    *((_QWORD *)v48 + 17) = v99;
    swift_bridgeObjectRetain();
    v78 = v330;
    sub_2279520BC((uint64_t)v330, &qword_255904B00);
    v70 = v349;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22798E588(0, *(_QWORD *)(v70 + 16) + 1, 1);
      v70 = v349;
    }
    v71 = v309;
    v101 = *(_QWORD *)(v70 + 16);
    v100 = *(_QWORD *)(v70 + 24);
    if (v101 >= v100 >> 1)
    {
      sub_22798E588(v100 > 1, v101 + 1, 1);
      v70 = v349;
    }
    *(_QWORD *)(v70 + 16) = v101 + 1;
    sub_22794F7B8((uint64_t)v48, v70+ ((*(unsigned __int8 *)(v327 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v327 + 80))+ *(_QWORD *)(v327 + 72) * v101, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
    if (v326 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    --v326;
    v79 = v325 + v282;
    sub_22794FB10(v325, (uint64_t)v78, &qword_255904B00);
    sub_2279520F8((uint64_t)v78 + *(int *)(v329 + 44), (uint64_t)v346, &qword_255904B88);
    sub_2279520F8((uint64_t)v346, (uint64_t)&v347, &qword_255904B88);
    if (sub_22796A4AC((uint64_t)&v347) == 1)
      goto LABEL_168;
  }
  v340 = v344;
  v341 = v345;
  swift_bridgeObjectRetain();
  v80 = v337;
  v81 = v338;
  sub_22796666C(&v340, v280, &v339, (uint64_t)v338);
  if (!v80)
  {
    v337 = 0;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v81, 0, 1, v307);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  sub_2279520BC((uint64_t)v78, &qword_255904B00);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v312, v307);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for LiveMusicEventAttributes.Time(uint64_t a1)
{
  return sub_2279518A8(a1, qword_2559050A8);
}

uint64_t type metadata accessor for LiveMusicEventAttributes(uint64_t a1)
{
  return sub_2279518A8(a1, (uint64_t *)&unk_255905140);
}

unint64_t sub_22797054C()
{
  unint64_t result;

  result = qword_255904EF0;
  if (!qword_255904EF0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2FD0, &type metadata for MapJSONError);
    atomic_store(result, (unint64_t *)&qword_255904EF0);
  }
  return result;
}

uint64_t sub_227970598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_227945C2C(*a1, *a2);
}

uint64_t sub_2279705A4()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227970648()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279706C8()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227970768@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227979910();
  *a1 = result;
  return result;
}

void sub_22797079C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000065;
  v4 = 0xE700000000000000;
  v5 = 0x656D6954646E65;
  if (v2 != 1)
  {
    v5 = 0x656E6F7A656D6974;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6D69547472617473;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_227970800()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656D6954646E65;
  if (*v0 != 1)
    v1 = 0x656E6F7A656D6974;
  if (*v0)
    return v1;
  else
    return 0x6D69547472617473;
}

uint64_t sub_227970860@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227979910();
  *a1 = result;
  return result;
}

uint64_t sub_22797088C()
{
  sub_227979F0C();
  return sub_22799F52C();
}

uint64_t sub_2279708B4()
{
  sub_227979F0C();
  return sub_22799F538();
}

uint64_t sub_2279708DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904F08);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22799F0AC();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22799F034();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v30 = sub_22799EF5C();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v2, v8);
  v18 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v17(v12, v2 + *(int *)(v18 + 20), v8);
  v19 = v28;
  sub_22799EF44();
  sub_22799F094();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v6) == 1)
  {
    sub_2279520BC((uint64_t)v5, &qword_255904F08);
    sub_22797624C();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v30);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v22 = v26;
    v21(v26, v5, v6);
    v23 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v27, v16, v30);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904018);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(v23 + *(int *)(v24 + 36), v22, v6);
  }
}

uint64_t sub_227970B50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559052F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979F0C();
  sub_22799F520();
  LOBYTE(v14[0]) = 0;
  sub_22799F034();
  sub_22794F9A4(&qword_255905300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_22799F400();
  if (!v2)
  {
    v9 = type metadata accessor for LiveMusicEventAttributes.Time(0);
    LOBYTE(v14[0]) = 1;
    sub_22799F400();
    v10 = (uint64_t *)(v3 + *(int *)(v9 + 24));
    v12 = *v10;
    v11 = v10[1];
    v14[0] = v12;
    v14[1] = v11;
    v15 = 2;
    sub_227945828();
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_227970D00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v27 = a2;
  v30 = sub_22799F034();
  v28 = *(_QWORD *)(v30 - 8);
  v3 = MEMORY[0x24BDAC7A8](v30);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v24 - v6;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559052E0);
  v7 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979F0C();
  v32 = v9;
  v13 = v33;
  sub_22799F508();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v5;
  v26 = v7;
  v24 = v10;
  v33 = a1;
  v14 = (uint64_t)v12;
  LOBYTE(v34) = 0;
  sub_22794F9A4(&qword_2559052F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v15 = v29;
  v16 = v30;
  sub_22799F3A0();
  v17 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v17(v12, v15, v16);
  LOBYTE(v34) = 1;
  v18 = v25;
  sub_22799F3A0();
  v19 = v24;
  v17(&v12[*(int *)(v24 + 20)], v18, v16);
  v36 = 2;
  sub_2279457E4();
  sub_22799F3A0();
  v20 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v31);
  v21 = v35;
  v22 = (_QWORD *)(v14 + *(int *)(v19 + 24));
  *v22 = v34;
  v22[1] = v21;
  sub_22794F9E4(v14, v27, type metadata accessor for LiveMusicEventAttributes.Time);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_22794FB54(v14, type metadata accessor for LiveMusicEventAttributes.Time);
}

uint64_t sub_227971044@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227970D00(a1, a2);
}

uint64_t sub_227971058(_QWORD *a1)
{
  return sub_227970B50(a1);
}

uint64_t sub_22797106C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905248);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2279798CC();
  sub_22799F520();
  v8[15] = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v1)
  {
    type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
    v8[14] = 1;
    sub_22799F3D0();
    v8[13] = 2;
    sub_22799F3F4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2279711F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v20 = a2;
  v21 = sub_22799EFE0();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905238);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2279798CC();
  v23 = v7;
  v11 = v25;
  sub_22799F508();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v5;
  v28 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v12 = v21;
  v13 = v22;
  v14 = v23;
  sub_22799F3A0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v12);
  v27 = 1;
  v15 = sub_22799F370();
  v16 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v16 = v15;
  v16[1] = v17;
  v26 = 2;
  v18 = sub_22799F394();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  *(_QWORD *)&v10[*(int *)(v8 + 24)] = v18;
  sub_22794F9E4((uint64_t)v10, v20, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22794FB54((uint64_t)v10, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
}

uint64_t sub_2279714B0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F646E6576;
  if (*v0 != 1)
    v1 = 0x726564726FLL;
  if (*v0)
    return v1;
  else
    return 7107189;
}

uint64_t sub_2279714FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2279788EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227971520()
{
  sub_2279798CC();
  return sub_22799F52C();
}

uint64_t sub_227971548()
{
  sub_2279798CC();
  return sub_22799F538();
}

uint64_t sub_227971570@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2279711F0(a1, a2);
}

uint64_t sub_227971584(_QWORD *a1)
{
  return sub_22797106C(a1);
}

uint64_t sub_227971598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(unint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v35 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Ticket();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904EF8);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v34 = *(_QWORD *)(v5 + 72);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2279A0480;
  v33 = v8;
  v10 = v9 + v8;
  v11 = sub_22799EFE0();
  v31 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v32 = v11;
  v31(v10, v0);
  v12 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  v13 = (uint64_t *)(v0 + *(int *)(v12 + 20));
  v14 = *v13;
  v15 = v13[1];
  v16 = (_QWORD *)(v10 + *(int *)(v4 + 20));
  *v16 = v14;
  v16[1] = v15;
  *(_BYTE *)(v10 + *(int *)(v4 + 24)) = 1;
  v36 = *(_QWORD **)(v0 + *(int *)(v12 + 24));
  v37 = v9;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_227973CA4(&v36);
  swift_bridgeObjectRelease();
  v17 = v36;
  v18 = v36[2];
  if (v18)
  {
    v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_22798E464(0, v18, 0);
    v19 = (uint64_t)v17 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v20 = *(_QWORD *)(v1 + 72);
    v29 = v17;
    v30 = v20;
    do
    {
      sub_22794F9E4(v19, (uint64_t)v3, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      ((void (*)(char *, char *, uint64_t))v31)(v7, v3, v32);
      v21 = &v3[*(int *)(v35 + 20)];
      v23 = *(_QWORD *)v21;
      v22 = *((_QWORD *)v21 + 1);
      v24 = &v7[*(int *)(v4 + 20)];
      *(_QWORD *)v24 = v23;
      *((_QWORD *)v24 + 1) = v22;
      v7[*(int *)(v4 + 24)] = 0;
      swift_bridgeObjectRetain();
      sub_22794FB54((uint64_t)v3, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v25 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22798E464(0, v25[2] + 1, 1);
        v20 = v30;
        v25 = v36;
      }
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
      {
        sub_22798E464(v26 > 1, v27 + 1, 1);
        v20 = v30;
        v25 = v36;
      }
      v25[2] = v27 + 1;
      sub_22794F7B8((uint64_t)v7, (uint64_t)v25 + v33 + v27 * v34, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_release();
  }
  else
  {
    swift_release();
    v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_227967978((uint64_t)v25);
  return v37;
}

uint64_t sub_227971880(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559052C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979E44();
  sub_22799F520();
  v14 = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v2)
  {
    v9 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
    v13 = 1;
    sub_22799F3D0();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559052B0);
    sub_227979E88(&qword_2559052D0, &qword_2559052D8, (uint64_t)&unk_2279A2104, MEMORY[0x24BEE12A0]);
    sub_22799F400();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_227971A48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v19 = a2;
  v20 = sub_22799EFE0();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559052A0);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979E44();
  v23 = v7;
  v11 = v24;
  sub_22799F508();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v5;
  v28 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v13 = v20;
  sub_22799F3A0();
  v24 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v22, v13);
  v27 = 1;
  v14 = sub_22799F370();
  v15 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v15 = v14;
  v15[1] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559052B0);
  v26 = 2;
  sub_227979E88(&qword_2559052B8, &qword_2559052C0, (uint64_t)&unk_2279A212C, MEMORY[0x24BEE12D0]);
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v21);
  *(_QWORD *)&v10[*(int *)(v8 + 24)] = v25;
  sub_22794F9E4((uint64_t)v10, v19, type metadata accessor for LiveMusicEventAttributes.Tickets);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22794FB54((uint64_t)v10, type metadata accessor for LiveMusicEventAttributes.Tickets);
}

uint64_t sub_227971D5C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905418);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797AAD4();
  sub_22799F520();
  v11[0] = a2;
  v11[1] = a3;
  sub_227945828();
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_227971E60(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v12;
  char *v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905330);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979F50();
  sub_22799F520();
  v9 = v3[1];
  *(_QWORD *)&v14 = *v3;
  *((_QWORD *)&v14 + 1) = v9;
  v15 = 0;
  sub_227945828();
  sub_22799F400();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for LiveMusicEventAttributes(0);
    LOBYTE(v14) = 1;
    sub_22799EFE0();
    sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_22799F400();
    LOBYTE(v14) = 2;
    sub_22799F3DC();
    v13 = (char *)v3 + v10[7];
    LOBYTE(v14) = 3;
    type metadata accessor for LiveMusicEventAttributes.Time(0);
    sub_22794F9A4(&qword_255905338, type metadata accessor for LiveMusicEventAttributes.Time, (uint64_t)&unk_2279A1F8C);
    sub_22799F400();
    v13 = (char *)v3 + v10[8];
    LOBYTE(v14) = 4;
    type metadata accessor for LiveMusicEventAttributes.Tickets(0);
    sub_22794F9A4(&qword_255905340, type metadata accessor for LiveMusicEventAttributes.Tickets, (uint64_t)&unk_2279A1FDC);
    sub_22799F3C4();
    LOBYTE(v14) = 5;
    sub_22799F3DC();
    LOBYTE(v14) = 6;
    sub_22799F400();
    v14 = *(_OWORD *)((char *)v3 + v10[11]);
    v15 = 7;
    sub_227979FD8();
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_227972174@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  int *v27;
  void (*v28)(uint64_t, _QWORD, uint64_t);
  char v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v36[2];
  char *v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __int128 v49;
  char v50;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22799EFE0();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v36 - v10;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905308);
  v12 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LiveMusicEventAttributes(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (_QWORD *)((char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_227979F50();
  v45 = v14;
  v19 = v48;
  sub_22799F508();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v37 = v9;
  v38 = (void (*)(_QWORD, _QWORD, _QWORD))v11;
  v20 = v12;
  v48 = v15;
  v21 = (uint64_t)v17;
  v22 = v44;
  v50 = 0;
  sub_2279457E4();
  sub_22799F3A0();
  v23 = *((_QWORD *)&v49 + 1);
  *v17 = v49;
  v17[1] = v23;
  LOBYTE(v49) = 1;
  v24 = sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v25 = v38;
  sub_22799F3A0();
  v36[1] = v24;
  v26 = v22;
  v27 = (int *)v48;
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 32);
  v28(v21 + *(int *)(v48 + 20), v25, v26);
  LOBYTE(v49) = 2;
  v29 = sub_22799F37C();
  v38 = v28;
  *(_BYTE *)(v21 + v27[6]) = v29 & 1;
  LOBYTE(v49) = 3;
  sub_22794F9A4(&qword_255905318, type metadata accessor for LiveMusicEventAttributes.Time, (uint64_t)&unk_2279A1FB4);
  v30 = (uint64_t)v42;
  sub_22799F3A0();
  v31 = v27;
  sub_22794F7B8(v30, v21 + v27[7], type metadata accessor for LiveMusicEventAttributes.Time);
  type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  LOBYTE(v49) = 4;
  sub_22794F9A4(&qword_255905320, type metadata accessor for LiveMusicEventAttributes.Tickets, (uint64_t)&unk_2279A2004);
  v32 = (uint64_t)v40;
  sub_22799F364();
  v33 = v44;
  sub_2279520F8(v32, v21 + v31[8], &qword_255904EE8);
  LOBYTE(v49) = 5;
  v42 = 0;
  *(_BYTE *)(v21 + v31[9]) = sub_22799F37C() & 1;
  LOBYTE(v49) = 6;
  v34 = v37;
  sub_22799F3A0();
  v38(v21 + v31[10], v34, v33);
  v50 = 7;
  sub_227979F94();
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v45, v46);
  *(_OWORD *)(v21 + v31[11]) = v49;
  sub_22794F9E4(v21, v39, type metadata accessor for LiveMusicEventAttributes);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_22794FB54(v21, type metadata accessor for LiveMusicEventAttributes);
}

uint64_t sub_22797276C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x72656469766F7270;
  if (*v0 != 1)
    v1 = 0x736B6E696CLL;
  if (*v0)
    return v1;
  else
    return 7107189;
}

uint64_t sub_2279727BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227978A20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2279727E0()
{
  sub_227979E44();
  return sub_22799F52C();
}

uint64_t sub_227972808()
{
  sub_227979E44();
  return sub_22799F538();
}

uint64_t sub_227972830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227971A48(a1, a2);
}

uint64_t sub_227972844(_QWORD *a1)
{
  return sub_227971880(a1);
}

uint64_t sub_227972858()
{
  sub_22797AAD4();
  return sub_22799F52C();
}

uint64_t sub_227972880()
{
  sub_22797AAD4();
  return sub_22799F538();
}

_QWORD *sub_2279728A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_227978B5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_2279728D0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_227971D5C(a1, *v1, v1[1]);
}

uint64_t sub_2279728E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227972910 + 4 * byte_2279A1E00[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_227972910()
{
  return 7107189;
}

uint64_t sub_227972920()
{
  return 0x6175747269567369;
}

uint64_t sub_22797293C(uint64_t a1)
{
  return a1 + 2054;
}

uint64_t sub_227972944()
{
  return 0x7374656B636974;
}

uint64_t sub_22797295C()
{
  return 0x6465766F6D6572;
}

uint64_t sub_227972974()
{
  return 0x6C7255626577;
}

uint64_t sub_227972988()
{
  return 0x72656469766F7270;
}

uint64_t sub_2279729A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227978C80(a1, a2);
  *a3 = result;
  return result;
}

void sub_2279729C4(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2279729D0()
{
  sub_227979F50();
  return sub_22799F52C();
}

uint64_t sub_2279729F8()
{
  sub_227979F50();
  return sub_22799F538();
}

uint64_t sub_227972A20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227972174(a1, a2);
}

uint64_t sub_227972A34(_QWORD *a1)
{
  return sub_227971E60(a1);
}

uint64_t sub_227972A48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227972A88 + 4 * byte_2279A1E08[a1]))(0x652D6D617A616873, 0xED000073746E6576);
}

uint64_t sub_227972A88()
{
  return 0x73747369747261;
}

uint64_t sub_227972AA0()
{
  return 0x7365756E6576;
}

uint64_t sub_227972AB4()
{
  return 0x6C612D6F746F6870;
}

uint64_t sub_227972B50()
{
  return 0x7365726E6567;
}

uint64_t sub_227972B64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227972BA4 + 4 * byte_2279A1E12[a1]))(0x652D6D617A616873, 0xED000073746E6576);
}

uint64_t sub_227972BA4()
{
  return 0x73747369747261;
}

uint64_t sub_227972BBC()
{
  return 0x7365756E6576;
}

uint64_t sub_227972BD0()
{
  return 0x6C612D6F746F6870;
}

uint64_t sub_227972C6C()
{
  return 0x7365726E6567;
}

uint64_t sub_227972C80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_227972A48(*a1);
  v5 = v4;
  if (v3 == sub_227972A48(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22799F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_227972D08()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22799F4B4();
  sub_227972A48(v1);
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227972D68()
{
  unsigned __int8 *v0;

  sub_227972A48(*v0);
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227972DA8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22799F4B4();
  sub_227972A48(v1);
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227972E04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227978F98();
  *a1 = result;
  return result;
}

uint64_t sub_227972E30@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_227972A48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_227972E58()
{
  unsigned __int8 *v0;

  return sub_227972B64(*v0);
}

uint64_t sub_227972E60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227978F98();
  *a1 = result;
  return result;
}

uint64_t sub_227972E84()
{
  sub_227979888();
  return sub_22799F52C();
}

uint64_t sub_227972EAC()
{
  sub_227979888();
  return sub_22799F538();
}

uint64_t sub_227972ED4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  _BYTE v11[8];
  _BYTE v12[8];
  _BYTE v13[8];
  _BYTE v14[8];
  _BYTE v15[8];
  _BYTE v16[8];
  _BYTE v17[8];
  _BYTE v18[8];
  _BYTE v19[8];
  _BYTE v20[8];
  _BYTE v21[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979888();
  sub_22799F520();
  sub_2279520F8(v3, (uint64_t)v21, &qword_255904CF0);
  sub_2279520F8((uint64_t)v21, (uint64_t)v11, &qword_255904CF0);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904BF8);
  sub_22796CE90();
  sub_22799F3C4();
  if (!v2)
  {
    sub_2279520F8(v3 + 8, (uint64_t)v20, &qword_255904D08);
    sub_2279520F8((uint64_t)v20, (uint64_t)v11, &qword_255904D08);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C10);
    sub_22796CF14();
    sub_22799F3C4();
    sub_2279520F8(v3 + 16, (uint64_t)v19, &qword_255905230);
    sub_2279520F8((uint64_t)v19, (uint64_t)v11, &qword_255905230);
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C28);
    sub_22796CF98();
    sub_22799F3C4();
    sub_2279520F8(v3 + 24, (uint64_t)v18, &qword_255904D30);
    sub_2279520F8((uint64_t)v18, (uint64_t)v11, &qword_255904D30);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C40);
    sub_22796D01C();
    sub_22799F3C4();
    sub_2279520F8(v3 + 32, (uint64_t)v17, &qword_255904D48);
    sub_2279520F8((uint64_t)v17, (uint64_t)v11, &qword_255904D48);
    HIBYTE(v10) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C58);
    sub_22796D0A0();
    sub_22799F3C4();
    sub_2279520F8(v3 + 40, (uint64_t)v16, &qword_255904D60);
    sub_2279520F8((uint64_t)v16, (uint64_t)v11, &qword_255904D60);
    HIBYTE(v10) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C70);
    sub_22796D124();
    sub_22799F3C4();
    sub_2279520F8(v3 + 48, (uint64_t)v15, &qword_255904D78);
    sub_2279520F8((uint64_t)v15, (uint64_t)v11, &qword_255904D78);
    HIBYTE(v10) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904C88);
    sub_22796D1A8();
    sub_22799F3C4();
    sub_2279520F8(v3 + 56, (uint64_t)v14, &qword_255904D90);
    sub_2279520F8((uint64_t)v14, (uint64_t)v11, &qword_255904D90);
    HIBYTE(v10) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CA0);
    sub_22796D22C();
    sub_22799F3C4();
    sub_2279520F8(v3 + 64, (uint64_t)v13, &qword_255904DA8);
    sub_2279520F8((uint64_t)v13, (uint64_t)v11, &qword_255904DA8);
    HIBYTE(v10) = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CB8);
    sub_22796D2B0();
    sub_22799F3C4();
    sub_2279520F8(v3 + 72, (uint64_t)v12, &qword_255904DC0);
    sub_2279520F8((uint64_t)v12, (uint64_t)v11, &qword_255904DC0);
    HIBYTE(v10) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904CD0);
    sub_22796D334();
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_2279733D0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_227978FE0(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_227973418(_QWORD *a1)
{
  return sub_227972ED4(a1);
}

uint64_t sub_227973458(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905400);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797AA90();
  sub_22799F520();
  v8[15] = 0;
  sub_22799F3B8();
  if (!v1)
  {
    v8[14] = 1;
    sub_22799F3B8();
    v8[13] = 2;
    sub_22799F3B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_227973594(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905278);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979CCC();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905260);
  sub_227979D54(&qword_255905280, (uint64_t (*)(void))sub_227979DBC, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2279736B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_227945DE4(*a1, *a2);
}

uint64_t sub_2279736BC()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227973750()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279737C0()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_227973850@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227979910();
  *a1 = result;
  return result;
}

void sub_227973884(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x656C746974;
  if (v2 != 1)
  {
    v5 = 0x747369747261;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64496D616461;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2279738D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C746974;
  if (*v0 != 1)
    v1 = 0x747369747261;
  if (*v0)
    return v1;
  else
    return 0x64496D616461;
}

uint64_t sub_227973928@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227979910();
  *a1 = result;
  return result;
}

uint64_t sub_227973954()
{
  sub_22797AA90();
  return sub_22799F52C();
}

uint64_t sub_22797397C()
{
  sub_22797AA90();
  return sub_22799F538();
}

double sub_2279739A4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_227979954(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2279739E4(_QWORD *a1)
{
  return sub_227973458(a1);
}

uint64_t sub_2279739F8()
{
  return 0x7473696C746573;
}

uint64_t sub_227973A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7473696C746573 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227973AA4()
{
  sub_227979CCC();
  return sub_22799F52C();
}

uint64_t sub_227973ACC()
{
  sub_227979CCC();
  return sub_22799F538();
}

_QWORD *sub_227973AF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_227979B88(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_227973B1C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_227973594(a1, *v1);
}

uint64_t sub_227973B34()
{
  return 0;
}

uint64_t sub_227973B40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_227973B6C()
{
  sub_227979E00();
  return sub_22799F52C();
}

uint64_t sub_227973B94()
{
  sub_227979E00();
  return sub_22799F538();
}

uint64_t sub_227973BBC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_227973BE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905290);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979E00();
  sub_22799F520();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_227973CA4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_227975130(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_227973D24(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_227973D24(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v2 = v1;
  v141 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  v4 = *(_QWORD *)(v141 - 8);
  v5 = MEMORY[0x24BDAC7A8](v141);
  v132 = (uint64_t)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v142 = (uint64_t)&v126 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v138 = (uint64_t)&v126 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v137 = (uint64_t)&v126 - v11;
  v12 = a1[1];
  result = sub_22799F418();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_227974740(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v128 = result;
  if (v12 < 2)
  {
    v19 = (char *)MEMORY[0x24BEE4AF8];
    v134 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v127 = MEMORY[0x24BEE4AF8];
    if (v12 != 1)
    {
      v21 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      v119 = v19;
      if (v21 >= 2)
      {
        v120 = *a1;
        do
        {
          v121 = v21 - 2;
          if (v21 < 2)
            goto LABEL_133;
          if (!v120)
            goto LABEL_145;
          v122 = *(_QWORD *)&v119[16 * v121 + 32];
          v123 = *(_QWORD *)&v119[16 * v21 + 24];
          sub_227974988(v120 + *(_QWORD *)(v4 + 72) * v122, v120 + *(_QWORD *)(v4 + 72) * *(_QWORD *)&v119[16 * v21 + 16], v120 + *(_QWORD *)(v4 + 72) * v123, v134);
          if (v2)
            break;
          if (v123 < v122)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v119 = sub_227975094((uint64_t)v119);
          if (v121 >= *((_QWORD *)v119 + 2))
            goto LABEL_135;
          v124 = &v119[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v123;
          v125 = *((_QWORD *)v119 + 2);
          if (v21 > v125)
            goto LABEL_136;
          memmove(&v119[16 * v21 + 16], &v119[16 * v21 + 32], 16 * (v125 - v21));
          *((_QWORD *)v119 + 2) = v125 - 1;
          v21 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v12;
    v16 = v14 >> 1;
    v17 = sub_22799F19C();
    *(_QWORD *)(v17 + 16) = v16;
    v12 = v15;
    v18 = *(unsigned __int8 *)(v4 + 80);
    v127 = v17;
    v134 = v17 + ((v18 + 32) & ~v18);
  }
  v20 = 0;
  v19 = (char *)MEMORY[0x24BEE4AF8];
  v140 = a1;
  v135 = v4;
  while (1)
  {
    v22 = v4;
    v23 = v20;
    v24 = v20 + 1;
    v133 = v20;
    v144 = v12;
    if (v20 + 1 >= v12)
    {
      v31 = v20 + 1;
      v40 = v20;
    }
    else
    {
      v25 = *(_QWORD *)(v4 + 72);
      v26 = *a1;
      v27 = v137;
      sub_22794F9E4(*a1 + v25 * v24, v137, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v28 = v138;
      sub_22794F9E4(v26 + v25 * v23, v138, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v29 = *(int *)(v141 + 24);
      v139 = *(_QWORD *)(v27 + v29);
      v136 = *(_QWORD *)(v28 + v29);
      sub_22794FB54(v28, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      sub_22794FB54(v27, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v30 = v26;
      v31 = v23 + 2;
      v131 = v30;
      v143 = v25;
      if (v23 + 2 >= v144)
      {
        v22 = v135;
      }
      else
      {
        v129 = v19;
        v130 = v2;
        v32 = v25 * v24;
        v33 = v30;
        v34 = v25 * v31;
        while (1)
        {
          v35 = v31;
          v36 = v137;
          v37 = v139 < v136;
          sub_22794F9E4(v33 + v34, v137, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          v38 = v138;
          sub_22794F9E4(v33 + v32, v138, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          v39 = *(_QWORD *)(v36 + *(int *)(v141 + 24)) >= *(_QWORD *)(v38 + *(int *)(v141 + 24));
          sub_22794FB54(v38, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          sub_22794FB54(v36, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          if (v37 == v39)
            break;
          v31 = v35 + 1;
          v33 += v143;
          if (v144 == v35 + 1)
          {
            v31 = v144;
            v22 = v135;
            a1 = v140;
            v19 = v129;
            goto LABEL_24;
          }
        }
        v22 = v135;
        a1 = v140;
        v19 = v129;
        v31 = v35;
LABEL_24:
        v2 = v130;
      }
      v40 = v133;
      if (v139 < v136)
      {
        if (v31 < v133)
          goto LABEL_139;
        if (v133 < v31)
        {
          v129 = v19;
          v130 = v2;
          v41 = 0;
          v42 = v143;
          v43 = v143 * (v31 - 1);
          v44 = v31 * v143;
          v45 = v133;
          v46 = v133 * v143;
          do
          {
            if (v45 != v31 + v41 - 1)
            {
              v47 = v131;
              if (!v131)
                goto LABEL_144;
              v48 = v131 + v46;
              v49 = v131 + v43;
              sub_22794F7B8(v131 + v46, v132, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
              if (v46 < v43 || v48 >= v47 + v44)
              {
                swift_arrayInitWithTakeFrontToBack();
                v42 = v143;
              }
              else
              {
                v42 = v143;
                if (v46 != v43)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_22794F7B8(v132, v49, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
            }
            ++v45;
            --v41;
            v43 -= v42;
            v44 -= v42;
            v46 += v42;
          }
          while (v45 < v31 + v41);
          v19 = v129;
          v2 = v130;
          a1 = v140;
          v22 = v135;
          v40 = v133;
        }
      }
    }
    if (v31 < v144)
    {
      if (__OFSUB__(v31, v40))
        goto LABEL_137;
      if (v31 - v40 < v128)
        break;
    }
LABEL_56:
    if (v31 < v40)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v19 = sub_227974E90(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v68 = *((_QWORD *)v19 + 2);
    v67 = *((_QWORD *)v19 + 3);
    v21 = v68 + 1;
    if (v68 >= v67 >> 1)
      v19 = sub_227974E90((char *)(v67 > 1), v68 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v21;
    v69 = v19 + 32;
    v70 = &v19[16 * v68 + 32];
    v71 = v139;
    *(_QWORD *)v70 = v40;
    *((_QWORD *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        v72 = v21 - 1;
        if (v21 >= 4)
        {
          v77 = &v69[16 * v21];
          v78 = *((_QWORD *)v77 - 8);
          v79 = *((_QWORD *)v77 - 7);
          v83 = __OFSUB__(v79, v78);
          v80 = v79 - v78;
          if (v83)
            goto LABEL_121;
          v82 = *((_QWORD *)v77 - 6);
          v81 = *((_QWORD *)v77 - 5);
          v83 = __OFSUB__(v81, v82);
          v75 = v81 - v82;
          v76 = v83;
          if (v83)
            goto LABEL_122;
          v84 = v21 - 2;
          v85 = &v69[16 * v21 - 32];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v83 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          if (v83)
            goto LABEL_124;
          v83 = __OFADD__(v75, v88);
          v89 = v75 + v88;
          if (v83)
            goto LABEL_127;
          if (v89 >= v80)
          {
            v107 = &v69[16 * v72];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v83 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v83)
              goto LABEL_131;
            v100 = v75 < v110;
            goto LABEL_93;
          }
        }
        else
        {
          if (v21 != 3)
          {
            v101 = *((_QWORD *)v19 + 4);
            v102 = *((_QWORD *)v19 + 5);
            v83 = __OFSUB__(v102, v101);
            v94 = v102 - v101;
            v95 = v83;
            goto LABEL_87;
          }
          v74 = *((_QWORD *)v19 + 4);
          v73 = *((_QWORD *)v19 + 5);
          v83 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          v76 = v83;
        }
        if ((v76 & 1) != 0)
          goto LABEL_123;
        v84 = v21 - 2;
        v90 = &v69[16 * v21 - 32];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v93 = __OFSUB__(v91, v92);
        v94 = v91 - v92;
        v95 = v93;
        if (v93)
          goto LABEL_126;
        v96 = &v69[16 * v72];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v83 = __OFSUB__(v97, v98);
        v99 = v97 - v98;
        if (v83)
          goto LABEL_129;
        if (__OFADD__(v94, v99))
          goto LABEL_130;
        if (v94 + v99 >= v75)
        {
          v100 = v75 < v99;
LABEL_93:
          if (v100)
            v72 = v84;
          goto LABEL_95;
        }
LABEL_87:
        if ((v95 & 1) != 0)
          goto LABEL_125;
        v103 = &v69[16 * v72];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v83 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v83)
          goto LABEL_128;
        if (v106 < v94)
          goto LABEL_14;
LABEL_95:
        v111 = v72 - 1;
        if (v72 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v112 = *a1;
        if (!*a1)
          goto LABEL_143;
        v113 = v19;
        v114 = &v69[16 * v111];
        v115 = *(_QWORD *)v114;
        v116 = &v69[16 * v72];
        v117 = *((_QWORD *)v116 + 1);
        sub_227974988(v112 + *(_QWORD *)(v135 + 72) * *(_QWORD *)v114, v112 + *(_QWORD *)(v135 + 72) * *(_QWORD *)v116, v112 + *(_QWORD *)(v135 + 72) * v117, v134);
        if (v2)
          goto LABEL_115;
        if (v117 < v115)
          goto LABEL_118;
        if (v72 > *((_QWORD *)v113 + 2))
          goto LABEL_119;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v69[16 * v111 + 8] = v117;
        v118 = *((_QWORD *)v113 + 2);
        if (v72 >= v118)
          goto LABEL_120;
        v19 = v113;
        v21 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((_QWORD *)v113 + 2) = v118 - 1;
        a1 = v140;
        if (v118 <= 2)
          goto LABEL_14;
      }
    }
    v21 = 1;
LABEL_14:
    v12 = a1[1];
    v20 = v139;
    v4 = v135;
    if (v139 >= v12)
      goto LABEL_104;
  }
  if (__OFADD__(v40, v128))
    goto LABEL_140;
  v50 = v144;
  if (v40 + v128 < v144)
    v50 = v40 + v128;
  if (v50 >= v40)
  {
    if (v31 != v50)
    {
      v129 = v19;
      v130 = v2;
      v51 = *(_QWORD *)(v22 + 72);
      v144 = v51 * (v31 - 1);
      v136 = v51;
      v52 = v31 * v51;
      v131 = v50;
      do
      {
        v54 = 0;
        v55 = v40;
        v139 = v31;
        while (1)
        {
          v56 = v140;
          v57 = *v140;
          v58 = v52;
          v59 = v52 + v54 + *v140;
          v60 = v137;
          sub_22794F9E4(v59, v137, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          v61 = v138;
          sub_22794F9E4(v144 + v54 + v57, v138, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          v62 = *(int *)(v141 + 24);
          v143 = *(_QWORD *)(v60 + v62);
          v63 = *(_QWORD *)(v61 + v62);
          sub_22794FB54(v61, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          sub_22794FB54(v60, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          if (v143 >= v63)
            break;
          v64 = *v56;
          if (!*v56)
            goto LABEL_142;
          v52 = v58;
          v65 = v64 + v144 + v54;
          sub_22794F7B8(v64 + v58 + v54, v142, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          swift_arrayInitWithTakeFrontToBack();
          sub_22794F7B8(v142, v65, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
          v54 -= v136;
          ++v55;
          v53 = v139;
          if (v139 == v55)
            goto LABEL_49;
        }
        v53 = v139;
        v52 = v58;
LABEL_49:
        v31 = v53 + 1;
        v144 += v136;
        v52 += v136;
        v40 = v133;
      }
      while (v31 != v131);
      v31 = v131;
      v19 = v129;
      v2 = v130;
      a1 = v140;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_22799F304();
  __break(1u);
  return result;
}

uint64_t sub_227974740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;

  v37 = a1;
  v43 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  v7 = MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v39 = (uint64_t)&v35 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v38 = (uint64_t)&v35 - v13;
  v42 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v12 + 72);
    v15 = v14 * (v42 - 1);
    v40 = v14;
    v16 = v14 * v42;
    v17 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink;
    v46 = a4;
LABEL_5:
    v18 = 0;
    v19 = v37;
    v41 = v16;
    while (1)
    {
      v21 = *v46;
      v22 = v16 + v18 + *v46;
      v23 = v38;
      sub_22794F9E4(v22, v38, v17);
      v24 = v15 + v18 + v21;
      v25 = v15;
      v26 = v39;
      sub_22794F9E4(v24, v39, v17);
      v27 = *(int *)(v43 + 24);
      v45 = *(_QWORD *)(v23 + v27);
      v28 = v17;
      v29 = *(_QWORD *)(v26 + v27);
      v30 = v26;
      v15 = v25;
      sub_22794FB54(v30, v28);
      v31 = v23;
      v16 = v41;
      result = sub_22794FB54(v31, v28);
      v32 = v45 < v29;
      v17 = v28;
      if (!v32)
      {
LABEL_4:
        v15 = v25 + v40;
        v16 += v40;
        if (++v42 == v36)
          return result;
        goto LABEL_5;
      }
      v33 = *v46;
      if (!*v46)
        break;
      v34 = v33 + v25 + v18;
      sub_22794F7B8(v33 + v16 + v18, v44, v28);
      swift_arrayInitWithTakeFrontToBack();
      v20 = v34;
      v17 = v28;
      result = sub_22794F7B8(v44, v20, v28);
      v18 -= v40;
      if (v42 == ++v19)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_227974988(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  unint64_t v30;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v8 = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - v11;
  v51 = *(_QWORD *)(v13 + 72);
  if (!v51)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v51 == -1)
    goto LABEL_70;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v51 == -1)
    goto LABEL_71;
  v15 = (uint64_t)(a2 - a1) / v51;
  v54 = a1;
  v53 = a4;
  v16 = v14 / v51;
  if (v15 >= v14 / v51)
  {
    if (v16 < 0)
      goto LABEL_72;
    v18 = v16 * v51;
    if (a4 < a2 || a2 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v30 = a4 + v18;
    v52 = a4 + v18;
    v54 = a2;
    if (v18 < 1 || a1 >= a2)
      goto LABEL_50;
    v33 = -v51;
    v47 = a4;
    v48 = v8;
    v49 = a1;
    while (1)
    {
      v51 = a3 + v33;
      sub_22794F9E4(v30 + v33, (uint64_t)v12, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v34 = a2 + v33;
      v35 = (uint64_t)v12;
      v36 = v50;
      sub_22794F9E4(a2 + v33, v50, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      v37 = *(int *)(v8 + 24);
      v38 = v33;
      v39 = *(_QWORD *)(v35 + v37);
      v40 = *(_QWORD *)(v36 + v37);
      v41 = v36;
      v12 = (char *)v35;
      sub_22794FB54(v41, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      sub_22794FB54(v35, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
      if (v39 < v40)
        break;
      v42 = v51;
      v44 = v52;
      v52 += v38;
      v33 = v38;
      if (a3 >= v44 && v51 < v44)
      {
        v8 = v48;
        v43 = v49;
        if (a3 != v44)
          swift_arrayInitWithTakeBackToFront();
        v34 = a2;
        goto LABEL_63;
      }
      v8 = v48;
      swift_arrayInitWithTakeFrontToBack();
      v34 = a2;
      v45 = v47;
      v43 = v49;
LABEL_65:
      v30 = v52;
      if (v52 > v45)
      {
        a2 = v34;
        a3 = v42;
        if (v34 > v43)
          continue;
      }
      goto LABEL_50;
    }
    v42 = v51;
    if (a3 < a2 || v51 >= a2)
    {
      v8 = v48;
      swift_arrayInitWithTakeFrontToBack();
      v43 = v49;
      v33 = v38;
    }
    else
    {
      v8 = v48;
      v43 = v49;
      v33 = v38;
      if (a3 != a2)
        swift_arrayInitWithTakeBackToFront();
    }
    v54 += v33;
LABEL_63:
    v45 = v47;
    goto LABEL_65;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v51;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v49 = a4 + v17;
    v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        v20 = a3;
        sub_22794F9E4(a2, (uint64_t)v12, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
        v21 = v50;
        sub_22794F9E4(a4, v50, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
        v22 = *(int *)(v8 + 24);
        v23 = *(_QWORD *)&v12[v22];
        v24 = *(_QWORD *)(v21 + v22);
        sub_22794FB54(v21, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
        sub_22794FB54((uint64_t)v12, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
        v25 = v54;
        if (v23 >= v24)
        {
          v28 = v53 + v51;
          if (v54 < v53 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v54 != v53)
              swift_arrayInitWithTakeBackToFront();
          }
          v53 = v28;
          v26 = a2;
        }
        else
        {
          v26 = a2 + v51;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v54 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        v54 = v25 + v51;
        a4 = v53;
        if (v53 >= v49)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_50:
    sub_227974F88(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_72:
  result = sub_22799F340();
  __break(1u);
  return result;
}

char *sub_227974E90(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255904F00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_227974F88(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_22799F340();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_227975094(uint64_t a1)
{
  return sub_227974E90(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2279750A8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_227975130(_QWORD *a1)
{
  return sub_22798EB60(0, a1[2], 0, a1);
}

uint64_t sub_227975144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v44 = MEMORY[0x24BEE4AF8];
    sub_22798E400(0, v4, 0);
    v5 = v44;
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904748) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(a2 + 72);
    v33 = *(_QWORD *)(v8 + 72);
    v34 = v10;
    while (1)
    {
      v11 = v10;
      if (!v10)
        v11 = sub_22795F860(MEMORY[0x24BEE4AF8]);
      swift_bridgeObjectRetain();
      sub_22795A708(v11, v35);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      v12 = v35[0];
      v13 = v35[1];
      v14 = v36;
      v15 = v37;
      v16 = v38;
      v17 = v39;
      v18 = v40;
      v19 = v41;
      v21 = *(_QWORD *)(v5 + 16);
      v20 = *(_QWORD *)(v5 + 24);
      v23 = v42;
      v22 = v43;
      v44 = v5;
      if (v21 >= v20 >> 1)
      {
        v31 = v39;
        v32 = v38;
        v29 = v41;
        v30 = v40;
        v25 = v35[0];
        v27 = v37;
        v28 = v36;
        sub_22798E400(v20 > 1, v21 + 1, 1);
        v15 = v27;
        v14 = v28;
        v12 = v25;
        v19 = v29;
        v18 = v30;
        v17 = v31;
        v16 = v32;
        v5 = v44;
      }
      *(_QWORD *)(v5 + 16) = v21 + 1;
      v24 = v5 + 112 * v21;
      *(_QWORD *)(v24 + 32) = v12;
      *(_QWORD *)(v24 + 40) = v13;
      *(_QWORD *)(v24 + 48) = v14;
      *(_QWORD *)(v24 + 56) = v15;
      *(_OWORD *)(v24 + 64) = v16;
      *(_OWORD *)(v24 + 80) = v17;
      *(_OWORD *)(v24 + 96) = v18;
      *(_OWORD *)(v24 + 112) = v19;
      *(_QWORD *)(v24 + 128) = v23;
      *(_QWORD *)(v24 + 136) = v22;
      v10 = v34;
      v9 += v33;
      --v4;
      v3 = 0;
      if (!v4)
        return v5;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_2279752F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227975390(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for LiveMusicEventAttributes.Tickets(uint64_t a1)
{
  return sub_2279518A8(a1, qword_255905010);
}

uint64_t sub_227975448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_22799EF2C();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v29 = MEMORY[0x24BEE4AF8];
  sub_22798E514(0, v7, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B28);
  v22 = a2;
  v23 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
  v21 = *(_QWORD *)(v10 + 72);
  while (1)
  {
    v12 = *v11;
    v13 = v11[1];
    v27 = *v11;
    v28 = v13;
    swift_bridgeObjectRetain_n();
    v14 = v24;
    sub_22799EF20();
    sub_22794F890();
    sub_22799F274();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v26);
    v8 = sub_22799F13C();
    swift_bridgeObjectRelease();
    if (v8 < 1)
    {
      sub_22794F8D4();
      swift_allocError();
      swift_willThrow();
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v8;
    }
    swift_bridgeObjectRelease();
    v8 = *(uint64_t *)((char *)v11 + *(int *)(v23 + 44));
    if (!v8)
      break;
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_22797571C(v15, a2, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, (void (*)(BOOL, unint64_t, uint64_t))sub_22798E5E0);
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_13;
    swift_bridgeObjectRelease();
    v8 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22798E514(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v29;
    }
    v18 = *(_QWORD *)(v8 + 16);
    v17 = *(_QWORD *)(v8 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_22798E514(v17 > 1, v18 + 1, 1);
      v8 = v29;
    }
    *(_QWORD *)(v8 + 16) = v18 + 1;
    v19 = (_QWORD *)(v8 + 24 * v18);
    v19[4] = v12;
    v19[5] = v13;
    v19[6] = v16;
    a2 = v22;
    v11 = (uint64_t *)((char *)v11 + v21);
    if (!--v7)
      return v8;
  }
  result = sub_22799F310();
  __break(1u);
  return result;
}

uint64_t sub_22797571C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(BOOL, unint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v38;
  void (*v39)(BOOL, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v41 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - v11;
  v13 = sub_22799EFE0();
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v45 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a3;
  v15 = a3(0);
  v44 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  if (v18)
  {
    v39 = a4;
    v40 = v4;
    v54 = MEMORY[0x24BEE4AF8];
    a4(0, v18, 0);
    v19 = v54;
    v20 = (uint64_t *)(a1 + 40);
    v21 = v41;
    v43 = v12;
    while (1)
    {
      v49 = v19;
      v22 = *(v20 - 1);
      v23 = *v20;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v52 = sub_22798A530(v22, v23, v21);
      v53 = v24;
      v50 = 123;
      v51 = 0xE100000000000000;
      sub_22794F890();
      v19 = v21;
      v25 = sub_22799F28C();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        goto LABEL_6;
      v52 = sub_22798A530(v22, v23, v19);
      v53 = v26;
      v50 = 125;
      v51 = 0xE100000000000000;
      v27 = sub_22799F28C();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        v28 = v47;
        v29 = v48;
        v30 = (uint64_t)v43;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v43, 1, 1, v48);
      }
      else
      {
LABEL_6:
        sub_22798A530(v22, v23, v19);
        v31 = (uint64_t)v42;
        sub_22799EFD4();
        swift_bridgeObjectRelease();
        v30 = (uint64_t)v43;
        sub_2279520F8(v31, (uint64_t)v43, &qword_255904040);
        v28 = v47;
        v29 = v48;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v29) == 1)
        break;
      v21 = v19;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
      v33 = v45;
      v32(v45, v30, v29);
      v32(v17, (uint64_t)v33, v29);
      swift_bridgeObjectRelease();
      v19 = v49;
      v54 = v49;
      v35 = *(_QWORD *)(v49 + 16);
      v34 = *(_QWORD *)(v49 + 24);
      if (v35 >= v34 >> 1)
      {
        v39(v34 > 1, v35 + 1, 1);
        v21 = v41;
        v19 = v54;
      }
      v20 += 2;
      *(_QWORD *)(v19 + 16) = v35 + 1;
      sub_22794F7B8((uint64_t)v17, v19+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v35, v46);
      if (!--v18)
        return v19;
    }
    sub_2279520BC(v30, &qword_255904040);
    sub_2279466D4();
    swift_allocError();
    *v36 = 1;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_227975AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v40 - v8;
  v10 = sub_22799EFE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PromotionalAssets.WatchFace(0);
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v50 = (uint64_t)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v44 = v10;
    v45 = v9;
    v40[1] = v2;
    v55 = MEMORY[0x24BEE4AF8];
    sub_22798E638(0, v15, 0);
    v16 = v55;
    v17 = type metadata accessor for WatchFaceAttributes.WatchFace(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v42 = *(_QWORD *)(v18 + 72);
    v43 = v17;
    v49 = v11;
    while (1)
    {
      v20 = (uint64_t *)(v19 + *(int *)(v43 + 20));
      v21 = *v20;
      v22 = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = sub_22798A530(v21, v22, a2);
      v54 = v23;
      v51 = 123;
      v52 = 0xE100000000000000;
      sub_22794F890();
      v24 = sub_22799F28C();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_6;
      v53 = sub_22798A530(v21, v22, a2);
      v54 = v25;
      v51 = 125;
      v52 = 0xE100000000000000;
      v26 = sub_22799F28C();
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        v28 = v44;
        v27 = (uint64_t)v45;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v45, 1, 1, v44);
      }
      else
      {
LABEL_6:
        sub_22798A530(v21, v22, a2);
        v29 = v41;
        sub_22799EFD4();
        swift_bridgeObjectRelease();
        v30 = (uint64_t)v29;
        v27 = (uint64_t)v45;
        sub_2279520F8(v30, (uint64_t)v45, &qword_255904040);
        v28 = v44;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31 = v49;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v27, 1, v28) == 1)
        break;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
      v33 = v48;
      v32(v48, v27, v28);
      v34 = v50;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v50, v19, v28);
      v32((char *)(v34 + *(int *)(v47 + 20)), (uint64_t)v33, v28);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v55 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22798E638(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v55;
      }
      v37 = *(_QWORD *)(v16 + 16);
      v36 = *(_QWORD *)(v16 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_22798E638(v36 > 1, v37 + 1, 1);
        v16 = v55;
      }
      *(_QWORD *)(v16 + 16) = v37 + 1;
      sub_22794F7B8(v50, v16+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v37, type metadata accessor for PromotionalAssets.WatchFace);
      v19 += v42;
      if (!--v15)
        return v16;
    }
    sub_2279520BC(v27, &qword_255904040);
    sub_2279466D4();
    swift_allocError();
    *v38 = 1;
    swift_willThrow();
    swift_release();
  }
  return v16;
}

uint64_t sub_227975F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for PromotionalAssets.Video(0);
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (!v9)
    return MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v38 = a2;
  sub_22798E490(0, v9, 0);
  v11 = v42;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904B58);
  result = v11;
  v14 = 0;
  v15 = *(_QWORD *)(v12 - 8);
  v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v31 = v16;
  v32 = v9;
  v33 = v17;
  v34 = v12;
  while (1)
  {
    v18 = *(_QWORD *)(v16 + v17 * v14 + *(int *)(v12 + 44));
    if (!v18)
    {
      result = sub_22799F310();
      __break(1u);
      return result;
    }
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
      break;
    v21 = v10;
LABEL_12:
    v42 = result;
    v29 = *(_QWORD *)(result + 16);
    v28 = *(_QWORD *)(result + 24);
    if (v29 >= v28 >> 1)
    {
      v35 = v14;
      sub_22798E490(v28 > 1, v29 + 1, 1);
      v17 = v33;
      v12 = v34;
      v14 = v35;
      result = v42;
    }
    ++v14;
    *(_QWORD *)(result + 16) = v29 + 1;
    *(_QWORD *)(result + 8 * v29 + 32) = v21;
    if (v14 == v9)
      return result;
  }
  v35 = v14;
  v37 = result;
  v41 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22798E664(0, v19, 0);
  v20 = v38;
  v21 = v41;
  v22 = *(_QWORD *)(type metadata accessor for VideoAttributes.Video(0) - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v36 = v18;
  v24 = (uint64_t *)(v18 + ((v23 + 32) & ~v23));
  v25 = *(_QWORD *)(v22 + 72);
  while (1)
  {
    sub_22799A5BC(v24, v20, &v40, v8);
    if (v3)
      break;
    v3 = 0;
    v41 = v21;
    v27 = *(_QWORD *)(v21 + 16);
    v26 = *(_QWORD *)(v21 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_22798E664(v26 > 1, v27 + 1, 1);
      v20 = v38;
      v21 = v41;
    }
    *(_QWORD *)(v21 + 16) = v27 + 1;
    sub_22794F7B8((uint64_t)v8, v21+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v27, type metadata accessor for PromotionalAssets.Video);
    v24 = (uint64_t *)((char *)v24 + v25);
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x24BEE4AF8];
      v16 = v31;
      v9 = v32;
      result = v37;
      v12 = v34;
      v14 = v35;
      v17 = v33;
      goto LABEL_12;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink(uint64_t a1)
{
  return sub_2279518A8(a1, qword_255904F78);
}

unint64_t sub_22797624C()
{
  unint64_t result;

  result = qword_255904F10;
  if (!qword_255904F10)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2228, &type metadata for LiveMusicEventAttributes.Time.TimeError);
    atomic_store(result, (unint64_t *)&qword_255904F10);
  }
  return result;
}

uint64_t sub_227976290@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_OWORD *)(v3 + 48);
  v7[2] = *(_OWORD *)(v3 + 32);
  v7[3] = v4;
  v7[4] = *(_OWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 16);
  v7[0] = *(_OWORD *)v3;
  v7[1] = v5;
  return sub_227967B40(a1, (uint64_t)v7, a2);
}

uint64_t sub_2279762D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[5];
  uint64_t v22;

  v20 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_22798E3D4(0, v10, 0);
    v11 = v22;
    v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904998) - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_OWORD *)(a2 + 24);
    v15 = *(_OWORD *)(a2 + 56);
    v21[2] = *(_OWORD *)(a2 + 40);
    v21[3] = v15;
    v21[4] = *(_OWORD *)(a2 + 72);
    v21[0] = *(_OWORD *)(a2 + 8);
    v21[1] = v14;
    v19 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_22796E204(v21, v20, v9);
      if (v3)
        break;
      v22 = v11;
      v17 = *(_QWORD *)(v11 + 16);
      v16 = *(_QWORD *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_22798E3D4(v16 > 1, v17 + 1, 1);
        v11 = v22;
      }
      *(_QWORD *)(v11 + 16) = v17 + 1;
      sub_2279520F8((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, (uint64_t *)&unk_255904110);
      v13 += v19;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_227976474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[14];
  uint64_t v78;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255904F18);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v61 = (uint64_t *)((char *)&v52 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v60 = (char *)&v52 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (!v11)
    return v12;
  v78 = MEMORY[0x24BEE4AF8];
  sub_22798E400(0, v11, 0);
  result = sub_2279750A8(a1);
  v14 = result;
  v16 = v15;
  v17 = 0;
  v18 = a1 + 64;
  v58 = *(_QWORD *)(a2 + 80);
  v19 = *(_BYTE *)(a1 + 32);
  v53 = a1 + 80;
  v56 = a1;
  v75 = v4;
  v59 = v7;
  v54 = v11;
  v55 = v15;
  v57 = a1 + 64;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << v19)
  {
    v22 = (unint64_t)v14 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(a1 + 36) != v16)
      goto LABEL_31;
    v73 = v17;
    v74 = 1 << v14;
    v23 = v60;
    v24 = (uint64_t)&v60[*(int *)(v4 + 48)];
    v25 = *(_QWORD *)(a1 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
    v27 = *v26;
    v28 = v26[1];
    v29 = v25
        + *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255904748) - 8) + 72) * v14;
    v30 = v75;
    sub_22794FB10(v29, v24, &qword_255904748);
    *v23 = v27;
    v23[1] = v28;
    v31 = (uint64_t)v61;
    *v61 = v27;
    *(_QWORD *)(v31 + 8) = v28;
    v32 = (uint64_t)v59;
    sub_22794FB10(v24, v31 + *(int *)(v30 + 48), &qword_255904748);
    sub_2279520F8(v31, v32, qword_255904F18);
    swift_bridgeObjectRetain_n();
    sub_2279520BC((uint64_t)v23, qword_255904F18);
    v33 = v58;
    if (!v58)
      v33 = sub_22795F860(MEMORY[0x24BEE4AF8]);
    v12 = v32 + *(int *)(v30 + 48);
    swift_bridgeObjectRetain();
    v34 = v76;
    sub_22795A708(v33, v77);
    swift_bridgeObjectRelease();
    sub_2279520BC(v32, qword_255904F18);
    if (v34)
    {
      swift_release();
      return v12;
    }
    v76 = 0;
    v35 = v77[0];
    v36 = v77[2];
    v37 = v77[3];
    v71 = v77[4];
    v72 = v77[1];
    v70 = v77[5];
    v69 = v77[6];
    v68 = v77[7];
    v67 = v77[8];
    v66 = v77[9];
    v65 = v77[10];
    v64 = v77[11];
    v63 = v77[12];
    v62 = v77[13];
    v12 = v78;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_22798E400(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v78;
    }
    v16 = v55;
    v18 = v57;
    v39 = *(_QWORD *)(v12 + 16);
    v38 = *(_QWORD *)(v12 + 24);
    if (v39 >= v38 >> 1)
    {
      result = sub_22798E400(v38 > 1, v39 + 1, 1);
      v18 = v57;
      v12 = v78;
    }
    *(_QWORD *)(v12 + 16) = v39 + 1;
    v40 = (_QWORD *)(v12 + 112 * v39);
    v41 = v72;
    v40[4] = v35;
    v40[5] = v41;
    v40[6] = v36;
    v40[7] = v37;
    v42 = v70;
    v40[8] = v71;
    v40[9] = v42;
    v43 = v68;
    v40[10] = v69;
    v40[11] = v43;
    v44 = v66;
    v40[12] = v67;
    v40[13] = v44;
    v45 = v64;
    v40[14] = v65;
    v40[15] = v45;
    v46 = v62;
    v40[16] = v63;
    v40[17] = v46;
    a1 = v56;
    v19 = *(_BYTE *)(v56 + 32);
    v20 = 1 << v19;
    if (v14 >= 1 << v19)
      goto LABEL_32;
    v47 = *(_QWORD *)(v18 + 8 * v22);
    if ((v47 & v74) == 0)
      goto LABEL_33;
    if (*(_DWORD *)(v56 + 36) != v16)
      goto LABEL_34;
    v48 = v47 & (-2 << (v14 & 0x3F));
    if (v48)
    {
      v20 = __clz(__rbit64(v48)) | v14 & 0xFFFFFFFFFFFFFFC0;
      v4 = v75;
      v21 = v54;
    }
    else
    {
      v49 = v22 + 1;
      v50 = (v20 + 63) >> 6;
      v4 = v75;
      v21 = v54;
      if (v22 + 1 < v50)
      {
        v51 = *(_QWORD *)(v18 + 8 * v49);
        if (v51)
        {
LABEL_25:
          v20 = __clz(__rbit64(v51)) + (v49 << 6);
        }
        else
        {
          while (v50 - 2 != v22)
          {
            v51 = *(_QWORD *)(v53 + 8 * v22++);
            if (v51)
            {
              v49 = v22 + 1;
              goto LABEL_25;
            }
          }
        }
      }
    }
    v17 = v73 + 1;
    v14 = v20;
    if (v73 + 1 == v21)
      return v12;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

_QWORD *assignWithCopy for EventResources(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventResources(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventResources(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventResources()
{
  return &type metadata for EventResources;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Time.TimeError()
{
  return &type metadata for LiveMusicEventAttributes.Time.TimeError;
}

uint64_t *sub_227976B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EFE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Ticket(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227976C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227976CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_227976D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_227976DD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227976DE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227976DF4()
{
  return sub_22797723C();
}

ValueMetadata *type metadata accessor for SetlistAttributes()
{
  return &type metadata for SetlistAttributes;
}

ValueMetadata *type metadata accessor for PlaylistAttributes()
{
  return &type metadata for PlaylistAttributes;
}

uint64_t *sub_227976E24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EFE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_227976EC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227976F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227976F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22797702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_227977090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227977110()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2279771A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22799EFE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_22797722C()
{
  return sub_22797723C();
}

uint64_t sub_22797723C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2279772B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799F034();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_227977368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_22799F034();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279773CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_22799F034();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227977454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_22799F034();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2279774F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22799F034();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22797756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22799F034();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2279775F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227977604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22799F034();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_227977684()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227977690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22799F034();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_22797770C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799F034();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_227977780(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v42)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22799EFE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v42 = v12;
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_22799F034();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v18 = type metadata accessor for LiveMusicEventAttributes.Time(0);
    v17(&v14[*(int *)(v18 + 20)], &v15[*(int *)(v18 + 20)], v16);
    v19 = *(int *)(v18 + 24);
    v20 = &v14[v19];
    v21 = &v15[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = a3[8];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v42(v24, v25, v11);
      v31 = *(int *)(v26 + 20);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      *(_QWORD *)&v24[*(int *)(v26 + 24)] = *(_QWORD *)&v25[*(int *)(v26 + 24)];
      v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v24, 0, 1, v26);
    }
    v36 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v42((char *)v4 + v36, (char *)a2 + v36, v11);
    v37 = a3[11];
    v38 = (_QWORD *)((char *)v4 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2279779A0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_22799EFE0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + a2[7];
  v8 = sub_22799F034();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v9(v7 + *(int *)(v10 + 20), v8);
  swift_bridgeObjectRelease();
  v11 = a1 + a2[8];
  v12 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v6(v11, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v6(a1 + a2[10], v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_227977AD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v40)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22799EFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v40 = v11;
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_22799F034();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v17 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v16(&v13[*(int *)(v17 + 20)], &v14[*(int *)(v17 + 20)], v15);
  v18 = *(int *)(v17 + 24);
  v19 = &v13[v18];
  v20 = &v14[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v40(v23, v24, v10);
    v29 = *(int *)(v25 + 20);
    v30 = &v23[v29];
    v31 = &v24[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v23, 0, 1, v25);
  }
  v34 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v40((char *)a1 + v34, (char *)a2 + v34, v10);
  v35 = a3[11];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_227977CC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *);
  uint64_t v43;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22799EFE0();
  v10 = *(_QWORD *)(v9 - 8);
  v42 = *(void (**)(char *, char *))(v10 + 24);
  v43 = v9;
  v42(v7, v8);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22799F034();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v16 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  v17 = *(int *)(v16 + 24);
  v18 = &v12[v17];
  v19 = &v13[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v16) = v25(v21, 1, v23);
  v26 = v25(v22, 1, v23);
  if (!(_DWORD)v16)
  {
    if (!v26)
    {
      v34 = (void (*)(char *, char *, uint64_t))v42;
      v28 = v43;
      ((void (*)(char *, char *, uint64_t))v42)(v21, v22, v43);
      v39 = *(int *)(v23 + 20);
      v40 = &v21[v39];
      v41 = &v22[v39];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v21[*(int *)(v23 + 24)] = *(_QWORD *)&v22[*(int *)(v23 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_22794FB54((uint64_t)v21, type metadata accessor for LiveMusicEventAttributes.Tickets);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v28 = v43;
    goto LABEL_7;
  }
  v27 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v28 = v43;
  v27(v21, v22, v43);
  v29 = *(int *)(v23 + 20);
  v30 = &v21[v29];
  v31 = &v22[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  *(_QWORD *)&v21[*(int *)(v23 + 24)] = *(_QWORD *)&v22[*(int *)(v23 + 24)];
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(v21, 0, 1, v23);
LABEL_7:
  v34 = (void (*)(char *, char *, uint64_t))v42;
LABEL_8:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v34((char *)a1 + a3[10], (char *)a2 + a3[10], v28);
  v35 = a3[11];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_227977F88(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22799EFE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22799F034();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  *(_OWORD *)&v12[*(int *)(v16 + 24)] = *(_OWORD *)&v13[*(int *)(v16 + 24)];
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v10(v18, v19, v9);
    *(_OWORD *)&v18[*(int *)(v20 + 20)] = *(_OWORD *)&v19[*(int *)(v20 + 20)];
    *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v10((char *)a1 + v23, (char *)a2 + v23, v9);
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  return a1;
}

_QWORD *sub_22797812C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22799EFE0();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = *(void (**)(char *, char *, uint64_t))(v43 + 40);
  v44(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22799F034();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v16 = type metadata accessor for LiveMusicEventAttributes.Time(0);
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  v17 = *(int *)(v16 + 24);
  v18 = &v12[v17];
  v19 = &v13[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for LiveMusicEventAttributes.Tickets(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v16) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if (!(_DWORD)v16)
  {
    if (!v28)
    {
      v30 = v44;
      v44(v23, v24, v10);
      v38 = *(int *)(v25 + 20);
      v39 = &v23[v38];
      v40 = &v24[v38];
      v42 = *(_QWORD *)v40;
      v41 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = v42;
      *((_QWORD *)v39 + 1) = v41;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_22794FB54((uint64_t)v23, type metadata accessor for LiveMusicEventAttributes.Tickets);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v23, v24, v10);
  *(_OWORD *)&v23[*(int *)(v25 + 20)] = *(_OWORD *)&v24[*(int *)(v25 + 20)];
  *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  v30 = v44;
LABEL_8:
  v31 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v30((char *)a1 + v31, (char *)a2 + v31, v10);
  v32 = a3[11];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227978388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227978394(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22799EFE0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = type metadata accessor for LiveMusicEventAttributes.Time(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22797845C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227978468(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_22799EFE0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = type metadata accessor for LiveMusicEventAttributes.Time(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904EE8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_22797852C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22799EFE0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LiveMusicEventAttributes.Time(319);
    if (v1 <= 0x3F)
    {
      sub_2279785F4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2279785F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255905150)
  {
    type metadata accessor for LiveMusicEventAttributes.Tickets(255);
    v0 = sub_22799F268();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255905150);
  }
}

uint64_t sub_227978648(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22794F9A4(&qword_255905198, type metadata accessor for LiveMusicEventAttributes, (uint64_t)&unk_2279A1F48);
  result = sub_22794F9A4(&qword_2559051A0, type metadata accessor for LiveMusicEventAttributes, (uint64_t)&unk_2279A1F20);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2279786A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_2279786B8, (uint64_t (*)(void))sub_2279786FC);
}

unint64_t sub_2279786B8()
{
  unint64_t result;

  result = qword_2559051A8;
  if (!qword_2559051A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2054, &type metadata for PlaylistAttributes);
    atomic_store(result, (unint64_t *)&qword_2559051A8);
  }
  return result;
}

unint64_t sub_2279786FC()
{
  unint64_t result;

  result = qword_2559051B0;
  if (!qword_2559051B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A202C, &type metadata for PlaylistAttributes);
    atomic_store(result, (unint64_t *)&qword_2559051B0);
  }
  return result;
}

uint64_t sub_227978740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_227978754, (uint64_t (*)(void))sub_227978798);
}

unint64_t sub_227978754()
{
  unint64_t result;

  result = qword_2559051B8;
  if (!qword_2559051B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A20C0, &type metadata for SetlistAttributes);
    atomic_store(result, (unint64_t *)&qword_2559051B8);
  }
  return result;
}

unint64_t sub_227978798()
{
  unint64_t result;

  result = qword_2559051C0;
  if (!qword_2559051C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2098, &type metadata for SetlistAttributes);
    atomic_store(result, (unint64_t *)&qword_2559051C0);
  }
  return result;
}

unint64_t sub_2279787E0()
{
  unint64_t result;

  result = qword_2559051C8;
  if (!qword_2559051C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2194, &type metadata for LiveMusicEventAttributes.Time.TimeError);
    atomic_store(result, (unint64_t *)&qword_2559051C8);
  }
  return result;
}

uint64_t sub_227978824()
{
  return sub_22794F9A4(qword_2559051D0, type metadata accessor for LiveMusicEventAttributes, (uint64_t)&unk_2279A1F70);
}

uint64_t sub_227978850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_227978864, (uint64_t (*)(void))sub_2279788A8);
}

unint64_t sub_227978864()
{
  unint64_t result;

  result = qword_255905208;
  if (!qword_255905208)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A21E4, &type metadata for EventResources);
    atomic_store(result, (unint64_t *)&qword_255905208);
  }
  return result;
}

unint64_t sub_2279788A8()
{
  unint64_t result;

  result = qword_255905210;
  if (!qword_255905210)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A21BC, &type metadata for EventResources);
    atomic_store(result, (unint64_t *)&qword_255905210);
  }
  return result;
}

uint64_t sub_2279788EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F646E6576 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726564726FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_227978A20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736B6E696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_227978B5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905408);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797AAD4();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_2279457E4();
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_227978C80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6175747269567369 && a2 == 0xE90000000000006CLL || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7374656B636974 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C7255626577 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_227978F98()
{
  unint64_t v0;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_227978FE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979888();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904BF8);
  v36 = 0;
  sub_22796C968();
  sub_22799F364();
  v9 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C10);
  v36 = 1;
  sub_22796C9EC();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v35 = v9;
  v10 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C28);
  v36 = 2;
  sub_22796CA70();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v34 = v10;
  v11 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C40);
  v36 = 3;
  sub_22796CAF4();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v33 = v11;
  v12 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C58);
  v36 = 4;
  sub_22796CB78();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v13 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C70);
  v36 = 5;
  sub_22796CBFC();
  v32 = v13;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v14 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904C88);
  v36 = 6;
  sub_22796CC80();
  v31 = v14;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v15 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CA0);
  v36 = 7;
  sub_22796CD04();
  v29 = v15;
  swift_bridgeObjectRetain();
  v27 = 0;
  sub_22799F364();
  v16 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CB8);
  v36 = 8;
  sub_22796CD88();
  v30 = v16;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v17 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904CD0);
  v36 = 9;
  sub_22796CE0C();
  v28 = v17;
  swift_bridgeObjectRetain();
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v27 = v37;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v29;
  swift_bridgeObjectRelease();
  v19 = v31;
  swift_bridgeObjectRelease();
  v20 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v33;
  swift_bridgeObjectRelease();
  v22 = v34;
  swift_bridgeObjectRelease();
  v23 = v35;
  result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v22;
  a2[2] = v21;
  a2[3] = v12;
  a2[4] = v20;
  a2[5] = v19;
  v25 = v30;
  a2[6] = v18;
  a2[7] = v25;
  v26 = v27;
  a2[8] = v28;
  a2[9] = v26;
  return result;
}

unint64_t sub_227979888()
{
  unint64_t result;

  result = qword_255905220;
  if (!qword_255905220)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2A14, &type metadata for EventResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905220);
  }
  return result;
}

unint64_t sub_2279798CC()
{
  unint64_t result;

  result = qword_255905240;
  if (!qword_255905240)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A29C4, &type metadata for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905240);
  }
  return result;
}

uint64_t sub_227979910()
{
  unint64_t v0;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_227979954@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559053F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797AA90();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_22799F358();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_22799F358();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_22799F358();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

_QWORD *sub_227979B88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905250);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227979CCC();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905260);
    sub_227979D54(&qword_255905268, (uint64_t (*)(void))sub_227979D10, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_227979CCC()
{
  unint64_t result;

  result = qword_255905258;
  if (!qword_255905258)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2974, &type metadata for SetlistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905258);
  }
  return result;
}

unint64_t sub_227979D10()
{
  unint64_t result;

  result = qword_255905270;
  if (!qword_255905270)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A294C, &type metadata for SetlistAttributes.Song);
    atomic_store(result, (unint64_t *)&qword_255905270);
  }
  return result;
}

uint64_t sub_227979D54(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905260);
    v8 = a2();
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227979DBC()
{
  unint64_t result;

  result = qword_255905288;
  if (!qword_255905288)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2924, &type metadata for SetlistAttributes.Song);
    atomic_store(result, (unint64_t *)&qword_255905288);
  }
  return result;
}

unint64_t sub_227979E00()
{
  unint64_t result;

  result = qword_255905298;
  if (!qword_255905298)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A28D4, &type metadata for PlaylistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905298);
  }
  return result;
}

unint64_t sub_227979E44()
{
  unint64_t result;

  result = qword_2559052A8;
  if (!qword_2559052A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2884, &type metadata for LiveMusicEventAttributes.Tickets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559052A8);
  }
  return result;
}

uint64_t sub_227979E88(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559052B0);
    v10 = sub_22794F9A4(a2, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227979F0C()
{
  unint64_t result;

  result = qword_2559052E8;
  if (!qword_2559052E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2834, &type metadata for LiveMusicEventAttributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559052E8);
  }
  return result;
}

unint64_t sub_227979F50()
{
  unint64_t result;

  result = qword_255905310;
  if (!qword_255905310)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A27E4, &type metadata for LiveMusicEventAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905310);
  }
  return result;
}

unint64_t sub_227979F94()
{
  unint64_t result;

  result = qword_255905328;
  if (!qword_255905328)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A27BC, &type metadata for LiveMusicEventAttributes.Provider);
    atomic_store(result, (unint64_t *)&qword_255905328);
  }
  return result;
}

unint64_t sub_227979FD8()
{
  unint64_t result;

  result = qword_255905348;
  if (!qword_255905348)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2794, &type metadata for LiveMusicEventAttributes.Provider);
    atomic_store(result, (unint64_t *)&qword_255905348);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LiveMusicEventAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveMusicEventAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22797A0F8 + 4 * byte_2279A1E21[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22797A12C + 4 * byte_2279A1E1C[v4]))();
}

uint64_t sub_22797A12C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797A134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797A13CLL);
  return result;
}

uint64_t sub_22797A148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797A150);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22797A154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797A15C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.CodingKeys()
{
  return &type metadata for LiveMusicEventAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Time.CodingKeys()
{
  return &type metadata for LiveMusicEventAttributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Tickets.CodingKeys()
{
  return &type metadata for LiveMusicEventAttributes.Tickets.CodingKeys;
}

ValueMetadata *type metadata accessor for PlaylistAttributes.CodingKeys()
{
  return &type metadata for PlaylistAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for SetlistAttributes.CodingKeys()
{
  return &type metadata for SetlistAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys()
{
  return &type metadata for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EventResources.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_22797A21C + 4 * byte_2279A1E2B[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_22797A250 + 4 * byte_2279A1E26[v4]))();
}

uint64_t sub_22797A250(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797A258(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797A260);
  return result;
}

uint64_t sub_22797A26C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797A274);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_22797A278(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797A280(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventResources.CodingKeys()
{
  return &type metadata for EventResources.CodingKeys;
}

uint64_t destroy for SetlistAttributes.Song()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SetlistAttributes.Song(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SetlistAttributes.Song(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SetlistAttributes.Song(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetlistAttributes.Song(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SetlistAttributes.Song(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetlistAttributes.Song()
{
  return &type metadata for SetlistAttributes.Song;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Provider()
{
  return &type metadata for LiveMusicEventAttributes.Provider;
}

unint64_t sub_22797A4F4()
{
  unint64_t result;

  result = qword_255905350;
  if (!qword_255905350)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A234C, &type metadata for EventResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905350);
  }
  return result;
}

unint64_t sub_22797A53C()
{
  unint64_t result;

  result = qword_255905358;
  if (!qword_255905358)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2404, &type metadata for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905358);
  }
  return result;
}

unint64_t sub_22797A584()
{
  unint64_t result;

  result = qword_255905360;
  if (!qword_255905360)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A24BC, &type metadata for SetlistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905360);
  }
  return result;
}

unint64_t sub_22797A5CC()
{
  unint64_t result;

  result = qword_255905368;
  if (!qword_255905368)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A25C4, &type metadata for LiveMusicEventAttributes.Tickets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905368);
  }
  return result;
}

unint64_t sub_22797A614()
{
  unint64_t result;

  result = qword_255905370;
  if (!qword_255905370)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A26B4, &type metadata for LiveMusicEventAttributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905370);
  }
  return result;
}

unint64_t sub_22797A65C()
{
  unint64_t result;

  result = qword_255905378;
  if (!qword_255905378)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A276C, &type metadata for LiveMusicEventAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905378);
  }
  return result;
}

unint64_t sub_22797A6A4()
{
  unint64_t result;

  result = qword_255905380;
  if (!qword_255905380)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A26DC, &type metadata for LiveMusicEventAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905380);
  }
  return result;
}

unint64_t sub_22797A6EC()
{
  unint64_t result;

  result = qword_255905388;
  if (!qword_255905388)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2704, &type metadata for LiveMusicEventAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905388);
  }
  return result;
}

unint64_t sub_22797A734()
{
  unint64_t result;

  result = qword_255905390;
  if (!qword_255905390)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A25EC, &type metadata for LiveMusicEventAttributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905390);
  }
  return result;
}

unint64_t sub_22797A77C()
{
  unint64_t result;

  result = qword_255905398;
  if (!qword_255905398)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2614, &type metadata for LiveMusicEventAttributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905398);
  }
  return result;
}

unint64_t sub_22797A7C4()
{
  unint64_t result;

  result = qword_2559053A0;
  if (!qword_2559053A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2534, &type metadata for LiveMusicEventAttributes.Tickets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053A0);
  }
  return result;
}

unint64_t sub_22797A80C()
{
  unint64_t result;

  result = qword_2559053A8;
  if (!qword_2559053A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A255C, &type metadata for LiveMusicEventAttributes.Tickets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053A8);
  }
  return result;
}

unint64_t sub_22797A854()
{
  unint64_t result;

  result = qword_2559053B0;
  if (!qword_2559053B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A24E4, &type metadata for PlaylistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053B0);
  }
  return result;
}

unint64_t sub_22797A89C()
{
  unint64_t result;

  result = qword_2559053B8;
  if (!qword_2559053B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A250C, &type metadata for PlaylistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053B8);
  }
  return result;
}

unint64_t sub_22797A8E4()
{
  unint64_t result;

  result = qword_2559053C0;
  if (!qword_2559053C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A242C, &type metadata for SetlistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053C0);
  }
  return result;
}

unint64_t sub_22797A92C()
{
  unint64_t result;

  result = qword_2559053C8;
  if (!qword_2559053C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2454, &type metadata for SetlistAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053C8);
  }
  return result;
}

unint64_t sub_22797A974()
{
  unint64_t result;

  result = qword_2559053D0;
  if (!qword_2559053D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2374, &type metadata for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053D0);
  }
  return result;
}

unint64_t sub_22797A9BC()
{
  unint64_t result;

  result = qword_2559053D8;
  if (!qword_2559053D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A239C, &type metadata for LiveMusicEventAttributes.Tickets.TicketLink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053D8);
  }
  return result;
}

unint64_t sub_22797AA04()
{
  unint64_t result;

  result = qword_2559053E0;
  if (!qword_2559053E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2284, &type metadata for EventResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053E0);
  }
  return result;
}

unint64_t sub_22797AA4C()
{
  unint64_t result;

  result = qword_2559053E8;
  if (!qword_2559053E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A22AC, &type metadata for EventResources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053E8);
  }
  return result;
}

unint64_t sub_22797AA90()
{
  unint64_t result;

  result = qword_2559053F8;
  if (!qword_2559053F8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2C5C, &type metadata for SetlistAttributes.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559053F8);
  }
  return result;
}

unint64_t sub_22797AAD4()
{
  unint64_t result;

  result = qword_255905410;
  if (!qword_255905410)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2C0C, &type metadata for LiveMusicEventAttributes.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905410);
  }
  return result;
}

uint64_t _s12ShazamEvents24LiveMusicEventAttributesV4TimeV9TimeErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22797AB58 + 4 * byte_2279A1E30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22797AB78 + 4 * byte_2279A1E35[v4]))();
}

_BYTE *sub_22797AB58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22797AB78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22797AB80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22797AB88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22797AB90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22797AB98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveMusicEventAttributes.Provider.CodingKeys()
{
  return &type metadata for LiveMusicEventAttributes.Provider.CodingKeys;
}

uint64_t _s12ShazamEvents24LiveMusicEventAttributesV4TimeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22797AC00 + 4 * byte_2279A1E3F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22797AC34 + 4 * byte_2279A1E3A[v4]))();
}

uint64_t sub_22797AC34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797AC3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797AC44);
  return result;
}

uint64_t sub_22797AC50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797AC58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22797AC5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797AC64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetlistAttributes.Song.CodingKeys()
{
  return &type metadata for SetlistAttributes.Song.CodingKeys;
}

unint64_t sub_22797AC84()
{
  unint64_t result;

  result = qword_255905420;
  if (!qword_255905420)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2B2C, &type metadata for SetlistAttributes.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905420);
  }
  return result;
}

unint64_t sub_22797ACCC()
{
  unint64_t result;

  result = qword_255905428;
  if (!qword_255905428)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2BE4, &type metadata for LiveMusicEventAttributes.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905428);
  }
  return result;
}

unint64_t sub_22797AD14()
{
  unint64_t result;

  result = qword_255905430;
  if (!qword_255905430)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2B54, &type metadata for LiveMusicEventAttributes.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905430);
  }
  return result;
}

unint64_t sub_22797AD5C()
{
  unint64_t result;

  result = qword_255905438;
  if (!qword_255905438)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2B7C, &type metadata for LiveMusicEventAttributes.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905438);
  }
  return result;
}

unint64_t sub_22797ADA4()
{
  unint64_t result;

  result = qword_255905440;
  if (!qword_255905440)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2A64, &type metadata for SetlistAttributes.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905440);
  }
  return result;
}

unint64_t sub_22797ADEC()
{
  unint64_t result;

  result = qword_255905448[0];
  if (!qword_255905448[0])
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2A8C, &type metadata for SetlistAttributes.Song.CodingKeys);
    atomic_store(result, qword_255905448);
  }
  return result;
}

uint64_t sub_22797AE38()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22797AEB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_22797AF70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_22797AFB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  return a1;
}

_QWORD *sub_22797B024(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_22797B094(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_22797B0E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_22797B14C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22797B220 + 4 * byte_2279A2CB0[(v9 - 1)]))();
}

void sub_22797B290(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for MapJSON(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapJSON);
}

uint64_t destroy for Genre()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Genre(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Genre(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for Genre(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Genre(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Genre(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Relationships.Relationship()
{
  return &type metadata for Relationships.Relationship;
}

ValueMetadata *type metadata accessor for Relationships()
{
  return &type metadata for Relationships;
}

uint64_t *sub_22797B658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22799EFE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22797B71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22797B77C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22799EFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22797B814(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22799EFE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_22797B8C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22799EFE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_22797B93C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22799EFE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22797B9CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22797B9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22797BA54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22797BA60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ResponseData()
{
  uint64_t result;

  result = qword_255905528;
  if (!qword_255905528)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22797BB10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapJSONError()
{
  return &type metadata for MapJSONError;
}

uint64_t sub_22797BB98()
{
  return swift_allocateGenericValueMetadata();
}

void sub_22797BBA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_22797CC08();
  if (v0 <= 0x3F)
  {
    sub_22799F268();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_22797BC3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  const void *v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  const void *v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  size_t __n;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v10 = v9 + 7;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(_DWORD *)(v11 + 80);
  if (*(_DWORD *)(v11 + 84))
    v13 = *(_QWORD *)(v11 + 64);
  else
    v13 = *(_QWORD *)(v11 + 64) + 1;
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v13 + 7 + ((v12 + ((v9 + 7 + ((v8 + 16) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    v17 = v6;
    v33 = *(_QWORD *)(a3 + 16);
    v34 = v13 + 7;
    v18 = ~v8;
    __n = v13;
    v32 = ~v12;
    v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    v20 = (char *)a1 + v8;
    v21 = (char *)a2 + v8;
    v22 = (void *)((unint64_t)(v20 + 16) & v18);
    v23 = (const void *)((unint64_t)(v21 + 16) & v18);
    v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v17))
    {
      memcpy(v22, v23, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v22, v23, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v17);
    }
    v25 = (_QWORD *)(((unint64_t)v22 + v10) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v23 + v10) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v25[1] = v26[1];
    v27 = (void *)(((unint64_t)v25 + v12 + 16) & v32);
    v28 = (const void *)(((unint64_t)v26 + v12 + 16) & v32);
    v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v33))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v33);
    }
    *(_QWORD *)(((unint64_t)v27 + v34) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v28 + v34) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22797BE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  swift_bridgeObjectRelease();
  v4 = sub_22799EFE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84))
    ++v7;
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22797BF80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  int v25;
  size_t v26;
  size_t v27;
  size_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = sub_22799EFE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  v11 = (const void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v12(v11, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = v14 + 1;
    memcpy(v10, v11, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (_QWORD *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v17 + v21 + 16) & ~v21);
  v23 = (const void *)(((unint64_t)v18 + v21 + 16) & ~v21);
  v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v24(v23, 1, v19))
  {
    v25 = *(_DWORD *)(v20 + 84);
    v26 = *(_QWORD *)(v20 + 64);
    if (v25)
      v27 = v26;
    else
      v27 = v26 + 1;
    memcpy(v22, v23, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v25 = *(_DWORD *)(v20 + 84);
    v26 = *(_QWORD *)(v20 + 64);
  }
  if (v25)
    v28 = v26;
  else
    v28 = v26 + 1;
  *(_QWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22797C150(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  size_t v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  v10 = (void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v12 = v11(v9, 1, v6);
  v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v14);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v15 = *(_QWORD *)(v7 + 64);
  else
    v15 = *(_QWORD *)(v7 + 64) + 1;
  v16 = (_QWORD *)(((unint64_t)v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (void *)(((unint64_t)v16 + v20 + 16) & ~v20);
  v22 = (void *)(((unint64_t)v17 + v20 + 16) & ~v20);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v16) = v23(v21, 1, v18);
  v24 = v23(v22, 1, v18);
  if ((_DWORD)v16)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v21, v22, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v18);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v21, v22, v18);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  }
  if (*(_DWORD *)(v19 + 84))
    v25 = *(_QWORD *)(v19 + 64);
  else
    v25 = *(_QWORD *)(v19 + 64) + 1;
  memcpy(v21, v22, v25);
LABEL_22:
  if (*(_DWORD *)(v19 + 84))
    v26 = *(_QWORD *)(v19 + 64);
  else
    v26 = *(_QWORD *)(v19 + 64) + 1;
  *(_QWORD *)(((unint64_t)v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v26 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_22797C3D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  size_t v12;
  size_t v13;
  size_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  int v22;
  size_t v23;
  size_t v24;
  size_t v25;

  *a1 = *a2;
  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
    if (v11)
      v13 = v12;
    else
      v13 = v12 + 1;
    memcpy(v9, v10, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
  }
  if (v11)
    v14 = v12;
  else
    v14 = v12 + 1;
  v15 = (_OWORD *)(((unint64_t)v9 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (void *)(((unint64_t)v15 + v19 + 16) & ~v19);
  v21 = (const void *)(((unint64_t)v16 + v19 + 16) & ~v19);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v21, 1, v17))
  {
    v22 = *(_DWORD *)(v18 + 84);
    v23 = *(_QWORD *)(v18 + 64);
    if (v22)
      v24 = v23;
    else
      v24 = v23 + 1;
    memcpy(v20, v21, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v20, v21, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v17);
    v22 = *(_DWORD *)(v18 + 84);
    v23 = *(_QWORD *)(v18 + 64);
  }
  if (v22)
    v25 = v23;
  else
    v25 = v23 + 1;
  *(_QWORD *)(((unint64_t)v20 + v25 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v25 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_22797C580(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  size_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = sub_22799EFE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  v11 = (void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (_QWORD *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v17 + v21 + 16) & ~v21);
  v23 = (void *)(((unint64_t)v18 + v21 + 16) & ~v21);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v18) = v24(v22, 1, v19);
  v25 = v24(v23, 1, v19);
  if ((_DWORD)v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v22, v23, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v22, v23, v19);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  }
  if (*(_DWORD *)(v20 + 84))
    v26 = *(_QWORD *)(v20 + 64);
  else
    v26 = *(_QWORD *)(v20 + 64) + 1;
  memcpy(v22, v23, v26);
LABEL_22:
  if (*(_DWORD *)(v20 + 84))
    v27 = *(_QWORD *)(v20 + 64);
  else
    v27 = *(_QWORD *)(v20 + 64) + 1;
  *(_QWORD *)(((unint64_t)v22 + v27 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + v27 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22797C7E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unsigned int v26;

  v6 = *(_QWORD *)(sub_22799EFE0() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v8 <= v11)
    v12 = v11;
  else
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v14;
  if (v10)
    v15 = 7;
  else
    v15 = 8;
  if (!a2)
    return 0;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = v14 + 7;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = v18 + 16;
  if (v13 < a2)
  {
    if (((((v15 + *(_QWORD *)(v9 + 64) + ((v19 + ((v17 + ((v16 + 16) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v13 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X7 }
  }
  if ((v12 & 0x80000000) != 0)
  {
    v25 = (a1 + v16 + 16) & ~v16;
    if (v8 == v13)
    {
      if (v7 >= 2)
      {
        v26 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v25);
        goto LABEL_41;
      }
    }
    else if (v10 >= 2)
    {
      v26 = (*(uint64_t (**)(unint64_t, _QWORD))(v9 + 48))((v19 + ((v17 + v25) & 0xFFFFFFFFFFFFFFF8)) & ~v18, *(unsigned int *)(v9 + 84));
LABEL_41:
      if (v26 >= 2)
        return v26 - 1;
      else
        return 0;
    }
    return 0;
  }
  v23 = *(_QWORD *)(a1 + 8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void sub_22797C9C8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v8 = 0;
  v9 = *(_QWORD *)(sub_22799EFE0() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v11 <= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v17;
  v18 = 7;
  if (!v13)
    v18 = 8;
  v19 = ((v18
        + *(_QWORD *)(v12 + 64)
        + ((*(unsigned __int8 *)(v12 + 80)
          + 16
          + ((v17 + 7 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v16 < a3)
  {
    if ((((_DWORD)v18
         + *(_DWORD *)(v12 + 64)
         + ((*(unsigned __int8 *)(v12 + 80)
           + 16
           + (((_DWORD)v17 + 7 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v12 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v20 = a3 - v16 + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v8 = v21;
    else
      v8 = 0;
  }
  if (a2 > v16)
  {
    if ((_DWORD)v19)
    {
      v22 = ~v16 + a2;
      bzero(a1, v19);
      *a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

void sub_22797CB30(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t, uint64_t, uint64_t);

  *((_BYTE *)v14 + v16) = 0;
  if (v15)
  {
    if (v11 < 0)
    {
      v17 = ((unint64_t)v14 + v12 + 16) & a4;
      if (v8 == v9)
      {
        if (a2 < 2)
          return;
        v18 = (v15 + 1);
        v19 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        a3 = a5;
      }
      else
      {
        if (v5 < 2)
          return;
        v17 = (v13 + ((v10 + v17) & 0xFFFFFFFFFFFFFFF8)) & a1;
        v18 = (v15 + 1);
        v19 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
        a2 = v5;
      }
      v19(v17, v18, a2, a3);
      return;
    }
    if (v15 < 0)
    {
      *v14 = v15 ^ 0x80000000;
      v14[1] = 0;
    }
    else
    {
      v14[1] = (v15 - 1);
    }
  }
}

uint64_t type metadata accessor for Resource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Resource);
}

void sub_22797CC08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2559055E8)
  {
    sub_22799EFE0();
    v0 = sub_22799F268();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2559055E8);
  }
}

uint64_t sub_22797CC5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_22797CE70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22797CE98 + 4 * byte_2279A2CCD[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_22797CE98()
{
  return 1717924456;
}

uint64_t sub_22797CEA8()
{
  return 1701869940;
}

uint64_t sub_22797CEB8()
{
  return 0x7475626972747461;
}

uint64_t sub_22797CED4()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_22797CEF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v20 = a2;
  v5 = v4;
  v7 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 16);
  v19 = v7;
  v8 = type metadata accessor for Resource.CodingKeys(255, v18, v7, a4);
  MEMORY[0x22E2A1174](&unk_2279A33D8, v8);
  v9 = sub_22799F40C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F520();
  v27 = 0;
  v13 = v21;
  sub_22799F3D0();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15 = v10;
  v16 = v20;
  v26 = 1;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F3C4();
  v25 = 2;
  sub_22799F3D0();
  v24 = 3;
  sub_22799F3C4();
  v22 = *(_QWORD *)(v5 + *(int *)(v16 + 48));
  v23 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905690);
  sub_22797EFA0(&qword_2559056A8, (uint64_t (*)(void))sub_22797F014, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_22799F3C4();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v12, v9);
}

uint64_t sub_22797D158@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v37 = a4;
  v7 = sub_22799F268();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v36 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Resource.CodingKeys(255, a2, a3, v11);
  MEMORY[0x22E2A1174](&unk_2279A33D8, v12);
  v45 = sub_22799F3AC();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v14 = (char *)&v36 - v13;
  v38 = a3;
  v39 = a2;
  v16 = (int *)type metadata accessor for Resource(0, a2, a3, v15);
  v36 = *((_QWORD *)v16 - 1);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v36 - v18);
  v20 = (char *)&v36 + *(int *)(v17 + 36) - v18;
  v21 = sub_22799EFE0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v50 = v20;
  v22(v20, 1, 1, v21);
  v23 = v19;
  v47 = v16[12];
  v48 = a1;
  *(uint64_t *)((char *)v19 + v47) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v46 = v14;
  v24 = v49;
  sub_22799F508();
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    sub_22797EED4((uint64_t)v50);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v43;
    v26 = (uint64_t)v44;
    v56 = 0;
    *v23 = sub_22799F370();
    v23[1] = v27;
    v55 = 1;
    sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_22799F364();
    sub_22797EF14(v26, (uint64_t)v50);
    v54 = 2;
    v28 = sub_22799F370();
    v29 = (uint64_t *)((char *)v23 + v16[10]);
    *v29 = v28;
    v29[1] = v30;
    v53 = 3;
    v31 = v40;
    sub_22799F364();
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v23 + v16[11], v31, v42);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905690);
    v52 = 4;
    sub_22797EFA0(&qword_255905698, (uint64_t (*)(void))sub_22797EF5C, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_22799F364();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v46, v45);
    v32 = v51;
    v33 = v47;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v23 + v33) = v32;
    v34 = v36;
    (*(void (**)(uint64_t, uint64_t *, int *))(v36 + 16))(v37, v23, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    return (*(uint64_t (**)(uint64_t *, int *))(v34 + 8))(v23, v16);
  }
}

uint64_t sub_22797D604()
{
  unsigned __int8 *v0;

  return sub_22797CE70(*v0);
}

uint64_t sub_22797D610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22797CC5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22797D63C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22797E7B0();
  *a1 = result;
  return result;
}

uint64_t sub_22797D664(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A33D8, a1);
  return sub_22799F52C();
}

uint64_t sub_22797D698(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A33D8, a1);
  return sub_22799F538();
}

uint64_t sub_22797D6CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22797D158(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_22797D6E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22797CEF8(a1, a2, a3, a4);
}

unint64_t sub_22797D700()
{
  unint64_t result;

  result = qword_2559055F0;
  if (!qword_2559055F0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2E68, &type metadata for MapJSONError);
    atomic_store(result, (unint64_t *)&qword_2559055F0);
  }
  return result;
}

uint64_t sub_22797D744(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22797D830(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656372756F736572;
  else
    return 1635017060;
}

uint64_t sub_22797D864(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = v6;
  v7 = type metadata accessor for MapJSON.CodingKeys(255, v6, v16, a4);
  MEMORY[0x22E2A1174](&unk_2279A3518, v7);
  v8 = sub_22799F40C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v18;
  sub_22799F520();
  v22 = *v12;
  v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559055F8);
  sub_22797E72C(&qword_255905610, &qword_255905618, (uint64_t)&unk_2279A2E90, MEMORY[0x24BEE12A0]);
  v13 = v19;
  sub_22799F400();
  if (!v13)
  {
    v20 = 1;
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_22797D9F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;

  v31 = a4;
  v30 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MapJSON.CodingKeys(255, v8, v9, v10);
  MEMORY[0x22E2A1174](&unk_2279A3518, v11);
  v37 = sub_22799F3AC();
  v32 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v13 = (char *)&v28 - v12;
  v34 = a2;
  v35 = a3;
  v15 = type metadata accessor for MapJSON(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v36 = v13;
  v19 = v38;
  sub_22799F508();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v32;
  v20 = v33;
  v38 = v16;
  v29 = v15;
  v22 = v34;
  v23 = (uint64_t)a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559055F8);
  v40 = 0;
  sub_22797E72C(&qword_255905600, &qword_255905608, (uint64_t)&unk_2279A2EB8, MEMORY[0x24BEE12D0]);
  sub_22799F3A0();
  *(_QWORD *)v18 = v41;
  v39 = 1;
  v24 = v22;
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v37);
  v25 = v29;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v18[*(int *)(v29 + 36)], v20, v24);
  v26 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v31, v18, v25);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v18, v25);
}

uint64_t sub_22797DCB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905688);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797EE04();
  sub_22799F520();
  v8[15] = 0;
  sub_22799F3D0();
  if (!v1)
  {
    type metadata accessor for ResponseData();
    v8[14] = 1;
    sub_22799EFE0();
    sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_22799F400();
    v8[13] = 2;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22797DE38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;

  v31 = a2;
  v3 = sub_22799EFE0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905678);
  v6 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ResponseData();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797EE04();
  v35 = v8;
  v12 = (uint64_t)v36;
  sub_22799F508();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v5;
  v14 = v6;
  v36 = a1;
  v30 = v11;
  v15 = v32;
  v16 = v33;
  v39 = 0;
  v17 = v34;
  v18 = sub_22799F370();
  v19 = v30;
  *v30 = v18;
  v19[1] = v20;
  v38 = 1;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_22799F3A0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v30 + *(int *)(v9 + 20), v13, v16);
  v37 = 2;
  v21 = sub_22799F370();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v17);
  v24 = *(int *)(v9 + 24);
  v26 = (uint64_t)v30;
  v25 = v31;
  v27 = (uint64_t *)((char *)v30 + v24);
  *v27 = v21;
  v27[1] = v23;
  sub_22797EE48(v26, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_22797EE8C(v26);
}

uint64_t sub_22797E124()
{
  char *v0;

  return sub_22797D830(*v0);
}

uint64_t sub_22797E134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22797D744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22797E160(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A3518, a1);
  return sub_22799F52C();
}

uint64_t sub_22797E194(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A3518, a1);
  return sub_22799F538();
}

uint64_t sub_22797E1C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22797D9F8(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_22797E1E4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22797D864(a1, a2, a3, a4);
}

uint64_t sub_22797E1F8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1717924456;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_22797E238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22797E7B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22797E25C()
{
  sub_22797EE04();
  return sub_22799F52C();
}

uint64_t sub_22797E284()
{
  sub_22797EE04();
  return sub_22799F538();
}

uint64_t sub_22797E2AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22797DE38(a1, a2);
}

uint64_t sub_22797E2C0(_QWORD *a1)
{
  return sub_22797DCB0(a1);
}

uint64_t sub_22797E2D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905630);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797EB48();
  sub_22799F520();
  v14 = 0;
  sub_22799F3D0();
  if (!v5)
  {
    v13 = 1;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_22797E3FC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905660);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797ECD0();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905648);
  sub_22797ED14(&qword_255905668, (uint64_t (*)(void))sub_22797EDC0, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_22797E518()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 25705;
}

uint64_t sub_22797E540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22797E8D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22797E564()
{
  sub_22797EB48();
  return sub_22799F52C();
}

uint64_t sub_22797E58C()
{
  sub_22797EB48();
  return sub_22799F538();
}

uint64_t sub_22797E5B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_22797E99C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_22797E5E0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_22797E2D4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_22797E5FC()
{
  return 1635017060;
}

uint64_t sub_22797E60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22797E690()
{
  sub_22797ECD0();
  return sub_22799F52C();
}

uint64_t sub_22797E6B8()
{
  sub_22797ECD0();
  return sub_22799F538();
}

_QWORD *sub_22797E6E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_22797EB8C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_22797E708(_QWORD *a1)
{
  uint64_t *v1;

  return sub_22797E3FC(a1, *v1);
}

uint64_t type metadata accessor for MapJSON.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapJSON.CodingKeys);
}

uint64_t sub_22797E72C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559055F8);
    v10 = sub_22794F9A4(a2, (uint64_t (*)(uint64_t))type metadata accessor for ResponseData, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22797E7B0()
{
  return 5;
}

uint64_t sub_22797E7B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_22797E8D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22797E99C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905620);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797EB48();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_22799F370();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_22799F370();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_22797EB48()
{
  unint64_t result;

  result = qword_255905628;
  if (!qword_255905628)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A34C8, &type metadata for Relationships.Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905628);
  }
  return result;
}

_QWORD *sub_22797EB8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905638);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22797ECD0();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905648);
    sub_22797ED14(&qword_255905650, (uint64_t (*)(void))sub_22797ED7C, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_22797ECD0()
{
  unint64_t result;

  result = qword_255905640;
  if (!qword_255905640)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3478, &type metadata for Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905640);
  }
  return result;
}

uint64_t sub_22797ED14(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905648);
    v8 = a2();
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22797ED7C()
{
  unint64_t result;

  result = qword_255905658;
  if (!qword_255905658)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2F58, &type metadata for Relationships.Relationship);
    atomic_store(result, (unint64_t *)&qword_255905658);
  }
  return result;
}

unint64_t sub_22797EDC0()
{
  unint64_t result;

  result = qword_255905670;
  if (!qword_255905670)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2F30, &type metadata for Relationships.Relationship);
    atomic_store(result, (unint64_t *)&qword_255905670);
  }
  return result;
}

unint64_t sub_22797EE04()
{
  unint64_t result;

  result = qword_255905680;
  if (!qword_255905680)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3428, &type metadata for ResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905680);
  }
  return result;
}

uint64_t sub_22797EE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22797EE8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResponseData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Resource.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Resource.CodingKeys);
}

uint64_t sub_22797EED4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22797EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22797EF5C()
{
  unint64_t result;

  result = qword_2559056A0;
  if (!qword_2559056A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2F08, &type metadata for Relationships);
    atomic_store(result, (unint64_t *)&qword_2559056A0);
  }
  return result;
}

uint64_t sub_22797EFA0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905690);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x22E2A1174](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22797F014()
{
  unint64_t result;

  result = qword_2559056B0[0];
  if (!qword_2559056B0[0])
  {
    result = MEMORY[0x22E2A1174](&unk_2279A2EE0, &type metadata for Relationships);
    atomic_store(result, qword_2559056B0);
  }
  return result;
}

uint64_t sub_22797F058(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22797F0A4 + 4 * byte_2279A2CD7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22797F0D8 + 4 * byte_2279A2CD2[v4]))();
}

uint64_t sub_22797F0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797F0E8);
  return result;
}

uint64_t sub_22797F0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797F0FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22797F100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s12ShazamEvents12MapJSONErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22797F160 + 4 * byte_2279A2CE1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22797F194 + 4 * byte_2279A2CDC[v4]))();
}

uint64_t sub_22797F194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F19C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797F1A4);
  return result;
}

uint64_t sub_22797F1B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797F1B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22797F1BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F1C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseData.CodingKeys()
{
  return &type metadata for ResponseData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Relationships.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22797F220 + 4 * byte_2279A2CE6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22797F240 + 4 * byte_2279A2CEB[v4]))();
}

_BYTE *sub_22797F220(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22797F240(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22797F248(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22797F250(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22797F258(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22797F260(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Relationships.CodingKeys()
{
  return &type metadata for Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for Relationships.Relationship.CodingKeys()
{
  return &type metadata for Relationships.Relationship.CodingKeys;
}

uint64_t _s12ShazamEvents13RelationshipsV12RelationshipV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22797F2DC + 4 * byte_2279A2CF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22797F310 + 4 * byte_2279A2CF0[v4]))();
}

uint64_t sub_22797F310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22797F320);
  return result;
}

uint64_t sub_22797F32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22797F334);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22797F338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22797F340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22797F34C()
{
  JUMPOUT(0x22E2A1174);
}

unint64_t sub_22797F360()
{
  unint64_t result;

  result = qword_2559057B8;
  if (!qword_2559057B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3188, &type metadata for Relationships.Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057B8);
  }
  return result;
}

unint64_t sub_22797F3A8()
{
  unint64_t result;

  result = qword_2559057C0;
  if (!qword_2559057C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3240, &type metadata for Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057C0);
  }
  return result;
}

unint64_t sub_22797F3F0()
{
  unint64_t result;

  result = qword_2559057C8;
  if (!qword_2559057C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A32F8, &type metadata for ResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057C8);
  }
  return result;
}

void sub_22797F434()
{
  JUMPOUT(0x22E2A1174);
}

void sub_22797F444()
{
  JUMPOUT(0x22E2A1174);
}

void sub_22797F454()
{
  JUMPOUT(0x22E2A1174);
}

unint64_t sub_22797F468()
{
  unint64_t result;

  result = qword_2559057D0;
  if (!qword_2559057D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3268, &type metadata for ResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057D0);
  }
  return result;
}

unint64_t sub_22797F4B0()
{
  unint64_t result;

  result = qword_2559057D8;
  if (!qword_2559057D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3290, &type metadata for ResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057D8);
  }
  return result;
}

unint64_t sub_22797F4F8()
{
  unint64_t result;

  result = qword_2559057E0;
  if (!qword_2559057E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A31B0, &type metadata for Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057E0);
  }
  return result;
}

unint64_t sub_22797F540()
{
  unint64_t result;

  result = qword_2559057E8;
  if (!qword_2559057E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A31D8, &type metadata for Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057E8);
  }
  return result;
}

unint64_t sub_22797F588()
{
  unint64_t result;

  result = qword_2559057F0;
  if (!qword_2559057F0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A30F8, &type metadata for Relationships.Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559057F0);
  }
  return result;
}

unint64_t sub_22797F5D0()
{
  unint64_t result;

  result = qword_2559057F8;
  if (!qword_2559057F8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3120, &type metadata for Relationships.Relationship.CodingKeys);
    atomic_store(result, &qword_2559057F8);
  }
  return result;
}

void sub_22797F614()
{
  JUMPOUT(0x22E2A1174);
}

void sub_22797F624()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_22797F634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[271] = a3;
  v3[265] = a2;
  v3[259] = a1;
  return swift_task_switch();
}

uint64_t sub_22797F654()
{
  _QWORD *v0;
  void *v1;

  swift_asyncLet_begin();
  sub_2279826C0(255, &qword_255905820);
  swift_asyncLet_begin();
  if (qword_255903C60 != -1)
    swift_once();
  v1 = (void *)qword_255915F40;
  v0[178] = v0;
  v0[179] = sub_22797F784;
  v0[211] = swift_continuation_init();
  v0[207] = MEMORY[0x24BDAC760];
  v0[208] = 0x40000000;
  v0[209] = sub_22798108C;
  v0[210] = &block_descriptor_24;
  objc_msgSend(v1, sel_loadBaseDictionary_, v0 + 207);
  return swift_continuation_await();
}

uint64_t sub_22797F784()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 2216) = *(_QWORD *)(*(_QWORD *)v0 + 1456);
  return swift_task_switch();
}

uint64_t sub_22797F7E4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)qword_255915F40;
  v2 = (void *)sub_22799F10C();
  sub_22799F118();
  v3 = sub_22799F10C();
  v0[283] = v3;
  swift_bridgeObjectRelease();

  v0[170] = v0;
  v0[175] = v0 + 251;
  v0[171] = sub_22797F8E0;
  v0[221] = swift_continuation_init();
  v0[217] = MEMORY[0x24BDAC760];
  v0[218] = 0x40000000;
  v0[219] = sub_227981100;
  v0[220] = &block_descriptor_27;
  objc_msgSend(v1, sel_stringForKey_withCompletionHandler_, v3, v0 + 217);
  return swift_continuation_await();
}

uint64_t sub_22797F8E0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 2312) = *(_QWORD *)(*(_QWORD *)v0 + 1392);
  return swift_task_switch();
}

uint64_t sub_22797F940()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = (void *)v0[283];
  v0[295] = v0[251];
  v0[296] = v0[252];

  v2 = (void *)qword_255915F40;
  v3 = (void *)sub_22799F10C();
  sub_22799F118();
  v4 = sub_22799F10C();
  v0[297] = v4;
  swift_bridgeObjectRelease();

  v0[162] = v0;
  v0[167] = v0 + 249;
  v0[163] = sub_22797FA5C;
  v0[231] = swift_continuation_init();
  v0[227] = MEMORY[0x24BDAC760];
  v0[228] = 0x40000000;
  v0[229] = sub_227981100;
  v0[230] = &block_descriptor_30;
  objc_msgSend(v2, sel_stringForKey_withCompletionHandler_, v4, v0 + 227);
  return swift_continuation_await();
}

uint64_t sub_22797FA5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1328);
  *(_QWORD *)(*(_QWORD *)v0 + 2384) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22797FAC4()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;

  v1 = (void *)v0[297];
  v0[299] = v0[249];
  v0[300] = v0[250];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255904940);
  inited = swift_initStackObject();
  v0[301] = inited;
  *(_OWORD *)(inited + 16) = xmmword_2279A3570;
  *(_QWORD *)(inited + 32) = 0x6F726665726F7473;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  return swift_asyncLet_get();
}

uint64_t sub_22797FB6C()
{
  return swift_task_switch();
}

uint64_t sub_22797FB80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 2408);
  v1[6] = sub_22799F124();
  v1[7] = v2;
  v1[8] = 1735287148;
  v1[9] = 0xE400000000000000;
  return swift_asyncLet_get_throwing();
}

uint64_t sub_22797FBF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2416) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_22797FC4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD **)(v0 + 2408);
  v2 = *(_QWORD *)(v0 + 2400);
  v3 = *(_QWORD *)(v0 + 2392);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2120);
  v6 = objc_msgSend(*(id *)(v0 + 2024), sel_suggestedLanguage);
  v7 = sub_22799F118();
  v9 = v8;

  v1[10] = v7;
  v1[11] = v9;
  v1[12] = 0x64695F746E657665;
  v1[13] = 0xE800000000000000;
  v1[14] = v5;
  v1[15] = v4;
  swift_bridgeObjectRetain();
  v10 = sub_22795F554((uint64_t)v1);
  if (!v3 && v2 == 0xE000000000000000 || (v11 = sub_22799F430(), v12 = *(_QWORD *)(v0 + 2400), (v11 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v13 = 0;
    v12 = 0;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 2392);
  }
  v14 = *(_QWORD *)(v0 + 2368);
  v15 = *(_QWORD *)(v0 + 2072);
  *(_QWORD *)(v0 + 1896) = *(_QWORD *)(v0 + 2360);
  *(_QWORD *)(v0 + 1904) = v14;
  *(_QWORD *)(v0 + 1912) = v13;
  *(_QWORD *)(v0 + 1920) = v12;
  *(_QWORD *)(v0 + 1928) = v10;
  sub_227989E90(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_asyncLet_finish();
}

uint64_t sub_22797FDB4()
{
  return swift_task_switch();
}

uint64_t sub_22797FDC8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_22797FDE0()
{
  return swift_task_switch();
}

uint64_t sub_22797FDF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22797FE00()
{
  swift_willThrow();
  return swift_asyncLet_finish();
}

uint64_t sub_22797FE5C()
{
  return swift_task_switch();
}

uint64_t sub_22797FE70()
{
  return swift_asyncLet_finish();
}

uint64_t sub_22797FE88()
{
  return swift_task_switch();
}

uint64_t sub_22797FE9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22797FEA8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 2264);
  swift_willThrow();

  return swift_asyncLet_finish();
}

uint64_t sub_22797FF0C()
{
  return swift_task_switch();
}

uint64_t sub_22797FF20()
{
  return swift_asyncLet_finish();
}

uint64_t sub_22797FF38()
{
  return swift_task_switch();
}

uint64_t sub_22797FF4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22797FF58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 2376);
  swift_willThrow();

  return swift_asyncLet_finish();
}

uint64_t sub_22797FFBC()
{
  return swift_task_switch();
}

uint64_t sub_22797FFD0()
{
  return swift_asyncLet_finish();
}

uint64_t sub_22797FFE8()
{
  return swift_task_switch();
}

uint64_t sub_22797FFFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227980008()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905828);
  swift_arrayDestroy();
  return swift_asyncLet_finish();
}

uint64_t sub_2279800A4()
{
  return swift_task_switch();
}

uint64_t sub_2279800B8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_2279800D0()
{
  return swift_task_switch();
}

uint64_t sub_2279800E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2279800F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v10;

  *(_BYTE *)(v8 + 305) = v10;
  *(_QWORD *)(v8 + 240) = a6;
  *(_QWORD *)(v8 + 248) = a8;
  *(_BYTE *)(v8 + 304) = a7;
  *(_QWORD *)(v8 + 224) = a4;
  *(_QWORD *)(v8 + 232) = a5;
  *(_QWORD *)(v8 + 208) = a2;
  *(_QWORD *)(v8 + 216) = a3;
  *(_QWORD *)(v8 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_227980124()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_255903C60 != -1)
    swift_once();
  v1 = (void *)qword_255915F40;
  v2 = (void *)sub_22799F10C();
  sub_22799F118();
  v3 = sub_22799F10C();
  v0[32] = v3;
  swift_bridgeObjectRelease();

  v0[7] = v0 + 23;
  v0[2] = v0;
  v0[3] = sub_22798023C;
  v4 = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_227981100;
  v5[3] = &block_descriptor_21;
  v5[4] = v4;
  objc_msgSend(v1, sel_stringForKey_withCompletionHandler_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_22798023C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_22798029C()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(void **)(v0 + 256);
  v2 = *(_BYTE *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 272) = v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255904940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A0480;
  *(_QWORD *)(inited + 32) = 0x6469747369747261;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22795F554(inited);
  *(_QWORD *)(v0 + 280) = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v9;
  *v9 = v0;
  v9[1] = sub_22798039C;
  return sub_227981188(*(_QWORD *)(v0 + 200), v6, v5, v8, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), v2 & 1);
}

uint64_t sub_22798039C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 296) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22798041C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v10;

  *(_BYTE *)(v8 + 305) = v10;
  *(_QWORD *)(v8 + 240) = a6;
  *(_QWORD *)(v8 + 248) = a8;
  *(_BYTE *)(v8 + 304) = a7;
  *(_QWORD *)(v8 + 224) = a4;
  *(_QWORD *)(v8 + 232) = a5;
  *(_QWORD *)(v8 + 208) = a2;
  *(_QWORD *)(v8 + 216) = a3;
  *(_QWORD *)(v8 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_227980450()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_255903C60 != -1)
    swift_once();
  v1 = (void *)qword_255915F40;
  v2 = (void *)sub_22799F10C();
  sub_22799F118();
  v3 = sub_22799F10C();
  v0[32] = v3;
  swift_bridgeObjectRelease();

  v0[7] = v0 + 23;
  v0[2] = v0;
  v0[3] = sub_227980564;
  v4 = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_227981100;
  v5[3] = &block_descriptor_1;
  v5[4] = v4;
  objc_msgSend(v1, sel_stringForKey_withCompletionHandler_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_227980564()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2279805C4()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(void **)(v0 + 256);
  v2 = *(_BYTE *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 272) = v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255904940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A0480;
  *(_QWORD *)(inited + 32) = 0x64695F65756E6576;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22795F554(inited);
  *(_QWORD *)(v0 + 280) = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v9;
  *v9 = v0;
  v9[1] = sub_2279806C4;
  return sub_227981188(*(_QWORD *)(v0 + 200), v6, v5, v8, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), v2 & 1);
}

uint64_t sub_2279806C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 296) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_227980744()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 256);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227980784()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2279807C0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  result = objc_msgSend(v0, sel_setFormatOptions_, 275);
  qword_255915F38 = (uint64_t)v0;
  return result;
}

id sub_22798080C()
{
  id result;

  result = sub_227980828();
  qword_255915F40 = (uint64_t)result;
  return result;
}

id sub_227980828()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v0 = objc_allocWithZone(MEMORY[0x24BE90520]);
  v1 = (void *)sub_22799F10C();
  v2 = (void *)sub_22799F10C();
  v3 = (void *)sub_22799F10C();
  v4 = objc_msgSend(v0, sel_initWithBaseDictionaryKey_profile_profileVersion_, v1, v2, v3);

  v5 = (void *)sub_22799F10C();
  sub_2279826C0(0, &qword_255905840);
  v6 = (void *)sub_22799F244();
  objc_msgSend(v4, sel_addBagKey_defaultValue_, v5, v6);

  v7 = (void *)sub_22799F10C();
  v8 = (void *)sub_22799F244();
  objc_msgSend(v4, sel_addBagKey_defaultValue_, v7, v8);

  v9 = (void *)sub_22799F10C();
  v10 = (void *)sub_22799F244();
  objc_msgSend(v4, sel_addBagKey_defaultValue_, v9, v10);

  v11 = (void *)sub_22799F10C();
  v12 = (void *)sub_22799F244();
  objc_msgSend(v4, sel_addBagKey_defaultValue_, v11, v12);

  return v4;
}

unint64_t sub_227980A54()
{
  unint64_t result;

  result = sub_22795F554((uint64_t)&unk_24F00DB68);
  qword_255915F48 = result;
  return result;
}

unint64_t sub_227980A78()
{
  unint64_t result;

  result = sub_22795F554((uint64_t)&unk_24F00DBC8);
  qword_255915F50 = result;
  return result;
}

unint64_t sub_227980A9C()
{
  unint64_t result;

  result = sub_22795F554((uint64_t)&unk_24F00DCE8);
  qword_255915F58 = result;
  return result;
}

unint64_t sub_227980AC0()
{
  unint64_t result;

  result = sub_22795F554((uint64_t)&unk_24F00DC28);
  qword_255915F60 = result;
  return result;
}

unint64_t sub_227980AE4()
{
  unint64_t result;

  result = sub_22795F554((uint64_t)&unk_24F00DC88);
  qword_255915F68 = result;
  return result;
}

uint64_t sub_227980B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = sub_22799F118();
  v3 = *(uint64_t **)(*(_QWORD *)(v1 + 64) + 40);
  *v3 = v2;
  v3[1] = v4;
  return swift_continuation_resume();
}

uint64_t sub_227980B3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_227980B54()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE90560]), sel_init);
  v0[18] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_227980C0C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_227980B08;
  v3[3] = &block_descriptor_44;
  v3[4] = v2;
  objc_msgSend(v1, sel_storefrontCountryCode_, v3);
  return swift_continuation_await();
}

uint64_t sub_227980C0C()
{
  return swift_task_switch();
}

uint64_t sub_227980C58(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_227980C70()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE90560]), sel_init);
  v0[18] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_227980D28;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_227980B08;
  v3[3] = &block_descriptor_20;
  v3[4] = v2;
  objc_msgSend(v1, sel_storefrontCountryCode_, v3);
  return swift_continuation_await();
}

uint64_t sub_227980D28()
{
  return swift_task_switch();
}

uint64_t sub_227980D74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);

  *v1 = v2;
  v1[1] = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227980DB8()
{
  return swift_task_switch();
}

uint64_t sub_227980DCC()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v0[16] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_227980E8C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_227980EEC;
  v3[3] = &block_descriptor_42;
  v3[4] = v2;
  objc_msgSend(v1, sel_endpointsWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_227980E8C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_227980EEC(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_227980F78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_22798270C;
  return swift_task_switch();
}

uint64_t sub_227980FD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_227981030;
  return swift_task_switch();
}

uint64_t sub_227981030(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22798108C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_227981100(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_22799F118();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_227981188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  *(_BYTE *)(v8 + 2449) = v12;
  *(_QWORD *)(v8 + 2280) = v11;
  *(_BYTE *)(v8 + 2448) = a8;
  *(_QWORD *)(v8 + 2272) = a7;
  *(_QWORD *)(v8 + 2264) = a6;
  *(_QWORD *)(v8 + 2256) = a5;
  *(_QWORD *)(v8 + 2248) = a4;
  *(_QWORD *)(v8 + 2200) = a3;
  *(_QWORD *)(v8 + 2152) = a2;
  *(_QWORD *)(v8 + 2104) = a1;
  v9 = sub_22799F034();
  *(_QWORD *)(v8 + 2288) = v9;
  *(_QWORD *)(v8 + 2296) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 2304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559048D8);
  *(_QWORD *)(v8 + 2312) = swift_task_alloc();
  *(_QWORD *)(v8 + 2320) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227981248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;

  v1 = *(_QWORD *)(v0 + 2320);
  v2 = *(_QWORD *)(v0 + 2296);
  v3 = *(_QWORD *)(v0 + 2288);
  sub_2279821A0(*(_QWORD *)(v0 + 2256), v1);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v1, 1, v3) == 1)
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 2296) + 32))(*(_QWORD *)(v0 + 2304), *(_QWORD *)(v0 + 2320), *(_QWORD *)(v0 + 2288));
    if (qword_255903C58 != -1)
      swift_once();
    v7 = *(_QWORD *)(v0 + 2304);
    v8 = *(_QWORD *)(v0 + 2296);
    v9 = *(_QWORD *)(v0 + 2288);
    v10 = (void *)qword_255915F38;
    v11 = (void *)sub_22799F004();
    v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    v5 = sub_22799F118();
    v6 = v13;

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  *(_QWORD *)(v0 + 2336) = v6;
  *(_QWORD *)(v0 + 2328) = v5;
  v14 = *(_QWORD *)(v0 + 2312);
  v15 = *(_QWORD *)(v0 + 2288);
  sub_2279821A0(*(_QWORD *)(v0 + 2264), v14);
  if (v4(v14, 1, v15) == 1)
  {
    v16 = 0;
    v17 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 2296) + 32))(*(_QWORD *)(v0 + 2304), *(_QWORD *)(v0 + 2312), *(_QWORD *)(v0 + 2288));
    if (qword_255903C58 != -1)
      swift_once();
    v18 = *(_QWORD *)(v0 + 2304);
    v19 = *(_QWORD *)(v0 + 2296);
    v20 = *(_QWORD *)(v0 + 2288);
    v21 = (void *)qword_255915F38;
    v22 = (void *)sub_22799F004();
    v23 = objc_msgSend(v21, (SEL)&off_24F013148, v22);

    v16 = sub_22799F118();
    v17 = v24;

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  *(_QWORD *)(v0 + 2352) = v17;
  *(_QWORD *)(v0 + 2344) = v16;
  if ((*(_BYTE *)(v0 + 2448) & 1) != 0)
  {
    v25 = 0;
    v26 = 0xE000000000000000;
  }
  else
  {
    *(_QWORD *)(v0 + 2056) = *(_QWORD *)(v0 + 2272);
    v25 = sub_22799F424();
  }
  *(_QWORD *)(v0 + 2368) = v26;
  *(_QWORD *)(v0 + 2360) = v25;
  if ((*(_BYTE *)(v0 + 2449) & 1) != 0)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
  }
  else
  {
    *(_QWORD *)(v0 + 2008) = *(_QWORD *)(v0 + 2280);
    v27 = sub_22799F424();
  }
  *(_QWORD *)(v0 + 2384) = v28;
  *(_QWORD *)(v0 + 2376) = v27;
  swift_asyncLet_begin();
  sub_2279826C0(255, &qword_255905820);
  swift_asyncLet_begin();
  if (qword_255903C60 != -1)
    swift_once();
  v29 = (void *)qword_255915F40;
  *(_QWORD *)(v0 + 1360) = v0;
  *(_QWORD *)(v0 + 1368) = sub_2279815F0;
  *(_QWORD *)(v0 + 1800) = swift_continuation_init();
  *(_QWORD *)(v0 + 1768) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 1776) = 0x40000000;
  *(_QWORD *)(v0 + 1784) = sub_22798108C;
  *(_QWORD *)(v0 + 1792) = &block_descriptor_3;
  objc_msgSend(v29, sel_loadBaseDictionary_, v0 + 1768);
  return swift_continuation_await();
}

uint64_t sub_2279815F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1392);
  *(_QWORD *)(*(_QWORD *)v0 + 2392) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_227981684()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)qword_255915F40;
  v2 = (void *)sub_22799F10C();
  sub_22799F118();
  v3 = sub_22799F10C();
  v0[300] = v3;
  swift_bridgeObjectRelease();

  v0[162] = v0;
  v0[167] = v0 + 243;
  v0[163] = sub_227981780;
  v0[215] = swift_continuation_init();
  v0[211] = MEMORY[0x24BDAC760];
  v0[212] = 0x40000000;
  v0[213] = sub_227981100;
  v0[214] = &block_descriptor_6;
  objc_msgSend(v1, sel_stringForKey_withCompletionHandler_, v3, v0 + 211);
  return swift_continuation_await();
}

uint64_t sub_227981780()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1328);
  *(_QWORD *)(*(_QWORD *)v0 + 2408) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_227981814()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;

  v1 = (void *)v0[300];
  v0[302] = v0[243];
  v0[303] = v0[244];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255904940);
  inited = swift_initStackObject();
  v0[304] = inited;
  *(_OWORD *)(inited + 16) = xmmword_2279A3580;
  *(_QWORD *)(inited + 32) = 0x6F726665726F7473;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  return swift_asyncLet_get();
}

uint64_t sub_2279818BC()
{
  return swift_task_switch();
}

uint64_t sub_2279818D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 2432);
  v1[6] = sub_22799F124();
  v1[7] = v2;
  v1[8] = 1735287148;
  v1[9] = 0xE400000000000000;
  return swift_asyncLet_get_throwing();
}

uint64_t sub_227981940()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2440) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2279819C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD **)(v0 + 2432);
  v22 = *(_QWORD *)(v0 + 2376);
  v23 = *(_QWORD *)(v0 + 2384);
  v20 = *(_QWORD *)(v0 + 2360);
  v21 = *(_QWORD *)(v0 + 2368);
  v2 = *(_QWORD *)(v0 + 2352);
  v3 = *(_QWORD *)(v0 + 2344);
  v4 = *(_QWORD *)(v0 + 2336);
  v5 = *(_QWORD *)(v0 + 2328);
  v6 = *(_QWORD *)(v0 + 2248);
  v19 = *(_QWORD *)(v0 + 2200);
  v24 = *(_QWORD *)(v0 + 2152);
  v7 = objc_msgSend(*(id *)(v0 + 1960), sel_suggestedLanguage);
  v8 = sub_22799F118();
  v10 = v9;

  v1[10] = v8;
  v1[11] = v10;
  v1[12] = 0x657461646D6F7266;
  v1[13] = 0xE800000000000000;
  v1[14] = v5;
  v1[15] = v4;
  v1[16] = 0x657461646F74;
  v1[17] = 0xE600000000000000;
  v1[18] = v3;
  v1[19] = v2;
  v1[20] = 0x74696D696CLL;
  v1[21] = 0xE500000000000000;
  v1[22] = v20;
  v1[23] = v21;
  v1[24] = 0x74657366666FLL;
  v1[25] = 0xE600000000000000;
  v1[26] = v22;
  v1[27] = v23;
  v11 = sub_22795F554((uint64_t)v1);
  swift_bridgeObjectRetain();
  v12 = sub_227982124(v11, v6);
  if (v24 || v19 != 0xE000000000000000)
  {
    v15 = sub_22799F430();
    v13 = 0;
    v14 = 0;
    if ((v15 & 1) == 0)
    {
      v14 = *(_QWORD *)(v0 + 2200);
      swift_bridgeObjectRetain();
      v13 = *(_QWORD *)(v0 + 2152);
    }
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  v16 = *(_QWORD *)(v0 + 2424);
  v17 = *(_QWORD *)(v0 + 2104);
  *(_QWORD *)(v0 + 1848) = *(_QWORD *)(v0 + 2416);
  *(_QWORD *)(v0 + 1856) = v16;
  *(_QWORD *)(v0 + 1864) = v13;
  *(_QWORD *)(v0 + 1872) = v14;
  *(_QWORD *)(v0 + 1880) = v12;
  sub_227989E90(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_asyncLet_finish();
}

uint64_t sub_227981BD4()
{
  return swift_task_switch();
}

uint64_t sub_227981BE8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_227981C00()
{
  return swift_task_switch();
}

uint64_t sub_227981C14()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227981C60()
{
  swift_willThrow();
  return swift_asyncLet_finish();
}

uint64_t sub_227981CBC()
{
  return swift_task_switch();
}

uint64_t sub_227981CD0()
{
  return swift_asyncLet_finish();
}

uint64_t sub_227981CE8()
{
  return swift_task_switch();
}

uint64_t sub_227981CFC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227981D50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 2400);
  swift_willThrow();

  return swift_asyncLet_finish();
}

uint64_t sub_227981DB4()
{
  return swift_task_switch();
}

uint64_t sub_227981DC8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_227981DE0()
{
  return swift_task_switch();
}

uint64_t sub_227981DF4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227981E48()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905828);
  swift_arrayDestroy();
  return swift_asyncLet_finish();
}

uint64_t sub_227981EE4()
{
  return swift_task_switch();
}

uint64_t sub_227981EF8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_227981F10()
{
  return swift_task_switch();
}

uint64_t sub_227981F24()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227981F78()
{
  return swift_task_switch();
}

uint64_t sub_227981F8C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v0[16] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_22798204C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_227980EEC;
  v3[3] = &block_descriptor_18;
  v3[4] = v2;
  objc_msgSend(v1, sel_endpointsWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_22798204C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2279820AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2279820E4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227982124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_2279821E8(a1, (uint64_t)sub_2279824F0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2279821A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559048D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2279821E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_227982524();
  if (!v8)
    goto LABEL_24;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_2279684E4(v7, v8);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_227968DDC();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v26 = (uint64_t *)(v24[6] + 16 * v17);
    *v26 = v11;
    v26[1] = v12;
    v27 = (_QWORD *)(v24[7] + 16 * v17);
    *v27 = v13;
    v27[1] = v14;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    v31 = sub_227982524();
    if (v32)
    {
      v35 = v31;
      v36 = v32;
      v37 = v33;
      v38 = v34;
      do
      {
        v43 = (_QWORD *)*a5;
        v45 = sub_2279684E4(v35, v36);
        v46 = v43[2];
        v47 = (v44 & 1) == 0;
        v48 = v46 + v47;
        if (__OFADD__(v46, v47))
          goto LABEL_25;
        v49 = v44;
        if (v43[3] < v48)
        {
          sub_227968794(v48, 1);
          v50 = sub_2279684E4(v35, v36);
          if ((v49 & 1) != (v51 & 1))
            goto LABEL_27;
          v45 = v50;
        }
        v52 = (_QWORD *)*a5;
        if ((v49 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v39 = (_QWORD *)(v52[7] + 16 * v45);
          swift_bridgeObjectRelease();
          *v39 = v37;
          v39[1] = v38;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          v53 = (uint64_t *)(v52[6] + 16 * v45);
          *v53 = v35;
          v53[1] = v36;
          v54 = (_QWORD *)(v52[7] + 16 * v45);
          *v54 = v37;
          v54[1] = v38;
          v55 = v52[2];
          v29 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v29)
            goto LABEL_26;
          v52[2] = v56;
        }
        v35 = sub_227982524();
        v36 = v40;
        v37 = v41;
        v38 = v42;
      }
      while (v40);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_22796A4C4();
    return swift_release();
  }
  sub_227968794(v20, a4 & 1);
  v22 = sub_2279684E4(v11, v12);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v25 = (_QWORD *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *v25 = v13;
    v25[1] = v14;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_22799F478();
  __break(1u);
  return result;
}

uint64_t sub_2279824F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_227982524()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_2279826C0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t Event<>.onlineAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 8))(*(_QWORD *)(a1 + 16));
}

uint64_t dispatch thunk of OnlineEvent.onlineAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t Event<>.tickets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 8))(*(_QWORD *)(a1 + 16));
}

uint64_t dispatch thunk of TicketedEvent.tickets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_227982778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for Venue();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_22794F9E4(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
        sub_22794F9E4(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
        v15 = static Venue.== infix(_:_:)(v10, v7);
        sub_22794FB54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
        sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_2279828B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  char v21;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for Ticket();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_16:
    v22 = 0;
    return v22 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      v15 = v14;
      sub_22794F9E4(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      sub_22794F9E4(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      if ((MEMORY[0x22E2A0808](v10, v7) & 1) == 0)
        break;
      v16 = *(int *)(v4 + 20);
      v17 = *(_QWORD *)&v10[v16];
      v18 = *(_QWORD *)&v10[v16 + 8];
      v19 = &v7[v16];
      v20 = v17 == *(_QWORD *)v19 && v18 == *((_QWORD *)v19 + 1);
      if (!v20 && (sub_22799F430() & 1) == 0)
        break;
      v21 = v10[*(int *)(v4 + 24)] ^ v7[*(int *)(v4 + 24)];
      sub_22794FB54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
      if ((v21 & 1) == 0)
      {
        v14 = v15 - 1;
        v12 += v13;
        if (v15)
          continue;
      }
      v22 = v21 ^ 1;
      return v22 & 1;
    }
    sub_22794FB54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
    sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
    goto LABEL_16;
  }
  v22 = 1;
  return v22 & 1;
}

uint64_t sub_227982A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 2)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_22799F430() & 1) == 0)
        break;
      v3 += 2;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_227982AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  char v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[19];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a2 + 72;
    v4 = a1 + 72;
    while (1)
    {
      v5 = *(_QWORD *)(v4 - 24);
      v54 = *(_QWORD *)(v4 - 8);
      v61 = *(_QWORD *)v4;
      v62 = *(_QWORD *)(v4 - 16);
      v6 = *(_QWORD *)(v4 + 16);
      v57 = *(double *)(v4 + 32);
      v58 = *(double *)(v4 + 24);
      v59 = *(_QWORD *)(v4 + 48);
      v60 = *(_QWORD *)(v4 + 8);
      v7 = *(_QWORD *)(v4 + 64);
      v51 = *(double *)(v4 + 40);
      v52 = *(_QWORD *)(v4 + 56);
      v8 = *(_QWORD *)(v3 - 24);
      v53 = *(_QWORD *)(v3 - 16);
      v9 = *(_QWORD *)(v3 + 8);
      v44 = *(_QWORD *)(v3 - 8);
      v45 = *(_QWORD *)v3;
      v63 = *(_QWORD *)(v3 + 16);
      v46 = *(double *)(v3 + 24);
      v48 = *(double *)(v3 + 40);
      v49 = *(double *)(v3 + 32);
      v10 = *(_QWORD *)(v3 + 56);
      v42 = *(_QWORD *)(v3 + 48);
      v43 = *(_QWORD *)(v3 + 64);
      if ((*(_QWORD *)(v4 - 40) != *(_QWORD *)(v3 - 40) || *(_QWORD *)(v4 - 32) != *(_QWORD *)(v3 - 32))
        && (sub_22799F430() & 1) == 0
        || (v5 != v8 || v62 != v53) && (sub_22799F430() & 1) == 0)
      {
        return 0;
      }
      v55 = v6;
      v56 = v10;
      v41 = v2;
      v50 = v9;
      if (v6)
      {
        if (!v63)
        {
          sub_22794FB90(v54, v61, v60, v6);
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v61;
          v22 = v6;
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = v44;
          v24 = v45;
          v25 = v9;
          v26 = *(_QWORD *)&v46;
          v27 = *(_QWORD *)&v48;
          v28 = v42;
          sub_22794FB90(v44, v45, v50, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v29 = v52;
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_39:
          v64[0] = v54;
          v64[1] = v21;
          v64[2] = v60;
          v64[3] = v22;
          *(double *)&v64[4] = v58;
          *(double *)&v64[5] = v57;
          *(double *)&v64[6] = v51;
          v64[7] = v59;
          v64[8] = v29;
          v64[9] = v23;
          v64[10] = v24;
          v64[11] = v25;
          v64[12] = v30;
          v64[13] = v26;
          *(double *)&v64[14] = v49;
          v64[15] = v27;
          v64[16] = v28;
          v64[17] = v56;
          sub_22794FB90(v23, v24, v25, v30);
          sub_22794FD1C(v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22794FBC0(v23, v24, v25, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = v54;
          v34 = v55;
          v36 = v60;
          v35 = v61;
          goto LABEL_47;
        }
        v11 = v10;
        if (v54 != v44)
        {
          sub_22794FB90(v54, v61, v60, v6);
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v39 = v45;
          sub_22794FB90(v44, v45, v9, v63);
          swift_bridgeObjectRetain();
          v38 = v44;
          sub_22794FB90(v44, v45, v9, v63);
          v37 = v6;
          goto LABEL_46;
        }
        v12 = v59;
        if (v61 != v45)
        {
          v31 = v54;
          sub_22794FB90(v54, v61, v60, v6);
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v45, v50, v63);
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v45, v50, v63);
          v37 = v6;
          v39 = v45;
          goto LABEL_45;
        }
        if (v60 != v9 || v6 != v63)
        {
          v13 = sub_22799F430();
          v11 = v10;
          v12 = v59;
          if ((v13 & 1) == 0)
            goto LABEL_26;
        }
        if (v52)
        {
          if (!v11)
            goto LABEL_44;
          if (v58 != v46 || v57 != v49 || v51 != v48 || (v12 != v42 || v52 != v10) && (sub_22799F430() & 1) == 0)
          {
LABEL_26:
            sub_22794FB90(v54, v61, v60, v6);
            sub_22794FB90(v54, v61, v60, v6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22794FB90(v54, v61, v60, v6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22794FB90(v54, v61, v9, v63);
            swift_bridgeObjectRetain();
            sub_22794FB90(v54, v61, v9, v63);
            v37 = v6;
            v38 = v54;
            v39 = v61;
            goto LABEL_46;
          }
        }
        else if (v11)
        {
LABEL_44:
          v31 = v54;
          v39 = v61;
          sub_22794FB90(v54, v61, v60, v6);
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v61, v60, v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v61, v50, v63);
          swift_bridgeObjectRetain();
          sub_22794FB90(v54, v61, v50, v63);
          v37 = v6;
LABEL_45:
          v38 = v31;
LABEL_46:
          v40 = v37;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22794FBC0(v38, v39, v50, v63);
          sub_22794FBC0(v54, v61, v60, v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22794FBC0(v38, v39, v50, v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = v54;
          v34 = v6;
          v35 = v61;
          v36 = v60;
LABEL_47:
          sub_22794FBC0(v33, v35, v36, v34);
          swift_bridgeObjectRelease();
          return 0;
        }
        sub_22794FB90(v54, v61, v60, v6);
        sub_22794FB90(v54, v61, v60, v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22794FB90(v54, v61, v60, v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22794FB90(v54, v61, v9, v63);
        swift_bridgeObjectRetain();
        v14 = v7;
        sub_22794FB90(v54, v61, v9, v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = v61;
        v18 = v43;
        v19 = v54;
        sub_22794FBC0(v54, v61, v9, v63);
        sub_22794FBC0(v54, v61, v60, v6);
        v15 = v44;
        v16 = v45;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22794FB90(v54, v61, v60, 0);
        v14 = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v63)
        {
          v23 = v44;
          v24 = v45;
          v32 = v9;
          v25 = v9;
          v26 = *(_QWORD *)&v46;
          v27 = *(_QWORD *)&v48;
          v28 = v42;
          sub_22794FB90(v44, v45, v32, v63);
          swift_bridgeObjectRetain();
          v21 = v61;
          v29 = v52;
          v30 = v63;
          v22 = 0;
          goto LABEL_39;
        }
        v15 = v44;
        v16 = v45;
        sub_22794FB90(v44, v45, v9, 0);
        v17 = v61;
        v18 = swift_bridgeObjectRetain();
        v19 = v54;
      }
      v47 = sub_227960FA0(v14, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794FBC0(v15, v16, v9, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22794FBC0(v19, v17, v60, v55);
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0)
        return 0;
      v4 += 112;
      v3 += 112;
      result = 1;
      v2 = v41 - 1;
      if (v41 == 1)
        return result;
    }
  }
  return 1;
}

uint64_t sub_227983DDC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v4 = (int *)type metadata accessor for Setlist.Song();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v32 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 72);
  while (1)
  {
    sub_22794F9E4(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
    sub_22794F9E4(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
    if ((sub_22799F040() & 1) == 0)
      break;
    v15 = v4[5];
    v16 = &v10[v15];
    v17 = *(_QWORD *)&v10[v15 + 8];
    v18 = &v7[v15];
    v19 = *((_QWORD *)v18 + 1);
    if (v17)
    {
      if (!v19)
        break;
      v20 = *(_QWORD *)v16 == *(_QWORD *)v18 && v17 == v19;
      if (!v20 && (sub_22799F430() & 1) == 0)
        break;
    }
    else if (v19)
    {
      break;
    }
    v21 = v4[6];
    v22 = &v10[v21];
    v23 = *(_QWORD *)&v10[v21 + 8];
    v24 = &v7[v21];
    v25 = *((_QWORD *)v24 + 1);
    if (v23)
    {
      if (!v25)
        break;
      v26 = *(_QWORD *)v22 == *(_QWORD *)v24 && v23 == v25;
      if (!v26 && (sub_22799F430() & 1) == 0)
        break;
    }
    else if (v25)
    {
      break;
    }
    v27 = v4[7];
    v28 = &v10[v27];
    v29 = *(_QWORD *)&v10[v27 + 8];
    v30 = &v7[v27];
    v31 = *((_QWORD *)v30 + 1);
    if (v29)
    {
      if (!v31 || (*(_QWORD *)v28 != *(_QWORD *)v30 || v29 != v31) && (sub_22799F430() & 1) == 0)
        break;
    }
    else if (v31)
    {
      break;
    }
    sub_22794FB54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
    sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
    v12 += v13;
    if (!--v11)
      return 1;
  }
  sub_22794FB54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
  sub_22794FB54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
  return 0;
}

uint64_t sub_227984000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v19 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_227959E38(a1 + v12, (uint64_t)v10);
        sub_227959E38(a2 + v12, (uint64_t)v7);
        v15 = sub_22795C060(v10, v7);
        sub_22794ECEC((uint64_t)v7);
        sub_22794ECEC((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_227984120(uint64_t a1, uint64_t a2)
{
  return sub_2279846D0(a1, a2, type metadata accessor for PromotionalAssets.PhoneWallpaper);
}

uint64_t sub_22798412C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for PromotionalAssets.WatchFace(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_22794F9E4(a1 + v12, (uint64_t)v10, type metadata accessor for PromotionalAssets.WatchFace);
      sub_22794F9E4(a2 + v12, (uint64_t)v7, type metadata accessor for PromotionalAssets.WatchFace);
      if ((MEMORY[0x22E2A0808](v10, v7) & 1) == 0)
        break;
      v15 = MEMORY[0x22E2A0808](&v10[*(int *)(v4 + 20)], &v7[*(int *)(v4 + 20)]);
      sub_22794FB54((uint64_t)v7, type metadata accessor for PromotionalAssets.WatchFace);
      sub_22794FB54((uint64_t)v10, type metadata accessor for PromotionalAssets.WatchFace);
      v17 = v14-- != 0;
      if ((v15 & 1) != 0)
      {
        v12 += v13;
        if (v17)
          continue;
      }
      return v15 & 1;
    }
    sub_22794FB54((uint64_t)v7, type metadata accessor for PromotionalAssets.WatchFace);
    sub_22794FB54((uint64_t)v10, type metadata accessor for PromotionalAssets.WatchFace);
    goto LABEL_14;
  }
  v15 = 1;
  return v15 & 1;
}

uint64_t sub_2279842A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for PromotionalAssets.PhotoAlbum.Photo(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v30 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v34 = v8;
    v12 = 0;
    v13 = a1 + 32;
    v36 = a2 + 32;
    v31 = a1 + 32;
    v32 = v11;
    while (1)
    {
      v15 = (_QWORD *)(v13 + 24 * v12);
      v16 = v15[1];
      v17 = v15[2];
      v18 = (_QWORD *)(v36 + 24 * v12);
      v19 = v18[1];
      v20 = v18[2];
      if (*v15 != *v18 || v16 != v19)
      {
        v22 = v15[1];
        v23 = sub_22799F430();
        v16 = v22;
        if ((v23 & 1) == 0)
          break;
      }
      v37 = v19;
      v24 = *(_QWORD *)(v17 + 16);
      if (v24 != *(_QWORD *)(v20 + 16))
        break;
      if (v24 && v17 != v20)
      {
        v33 = v12;
        v25 = v34;
        v26 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        v35 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = 0;
        v28 = *(_QWORD *)(v25 + 72);
        while (1)
        {
          result = sub_22794F9E4(v17 + v26, (uint64_t)v10, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          if (v27 >= *(_QWORD *)(v20 + 16))
            break;
          sub_22794F9E4(v20 + v26, (uint64_t)v7, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          v29 = MEMORY[0x22E2A0808](v10, v7);
          sub_22794FB54((uint64_t)v7, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          sub_22794FB54((uint64_t)v10, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
          if ((v29 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          ++v27;
          v26 += v28;
          if (v24 == v27)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = v32;
            v12 = v33;
            v13 = v31;
            goto LABEL_5;
          }
        }
        __break(1u);
        return result;
      }
LABEL_5:
      ++v12;
      result = 1;
      if (v12 == v11)
        return result;
    }
  }
  return 0;
}

uint64_t sub_2279844F8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v4 = (int *)type metadata accessor for PromotionalAssets.Video(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_25:
    v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_22794F9E4(a1 + v12, (uint64_t)v10, type metadata accessor for PromotionalAssets.Video);
      sub_22794F9E4(a2 + v12, (uint64_t)v7, type metadata accessor for PromotionalAssets.Video);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_22799F430() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_22799F430() & 1) == 0
        || (MEMORY[0x22E2A0808]((char *)v10 + v4[6], (char *)v7 + v4[6]) & 1) == 0
        || (MEMORY[0x22E2A0808]((char *)v10 + v4[7], (char *)v7 + v4[7]) & 1) == 0)
      {
        break;
      }
      v17 = MEMORY[0x22E2A0808]((char *)v10 + v4[8], (char *)v7 + v4[8]);
      sub_22794FB54((uint64_t)v7, type metadata accessor for PromotionalAssets.Video);
      sub_22794FB54((uint64_t)v10, type metadata accessor for PromotionalAssets.Video);
      v19 = v14-- != 0;
      if ((v17 & 1) != 0)
      {
        v12 += v13;
        if (v19)
          continue;
      }
      return v17 & 1;
    }
    sub_22794FB54((uint64_t)v7, type metadata accessor for PromotionalAssets.Video);
    sub_22794FB54((uint64_t)v10, type metadata accessor for PromotionalAssets.Video);
    goto LABEL_25;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_2279846C4(uint64_t a1, uint64_t a2)
{
  return sub_2279846D0(a1, a2, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
}

uint64_t sub_2279846D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v6 = a3(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v15 = *(_QWORD *)(v10 + 72);
      v16 = v13 - 1;
      do
      {
        sub_22794F9E4(a1 + v14, (uint64_t)v12, a3);
        sub_22794F9E4(a2 + v14, (uint64_t)v9, a3);
        v17 = MEMORY[0x22E2A0808](v12, v9);
        sub_22794FB54((uint64_t)v9, a3);
        sub_22794FB54((uint64_t)v12, a3);
        v19 = v16-- != 0;
        if ((v17 & 1) == 0)
          break;
        v14 += v15;
      }
      while (v19);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t Setlist.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Setlist.songs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Setlist.Song.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799F058();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Setlist.Song.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799F058();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Setlist.Song.id.modify())()
{
  return nullsub_1;
}

uint64_t Setlist.Song.adamID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Setlist.Song() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for Setlist.Song()
{
  uint64_t result;

  result = qword_255905950;
  if (!qword_255905950)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Setlist.Song.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Setlist.Song() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Setlist.Song.artistName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Setlist.Song() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Setlist.Song.hash(into:)()
{
  uint64_t v0;
  int *v1;

  sub_22799F058();
  sub_22794F9A4(&qword_255904038, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22799F0DC();
  v1 = (int *)type metadata accessor for Setlist.Song();
  if (*(_QWORD *)(v0 + v1[5] + 8))
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22799F4CC();
  }
  if (*(_QWORD *)(v0 + v1[6] + 8))
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22799F4CC();
  }
  if (!*(_QWORD *)(v0 + v1[7] + 8))
    return sub_22799F4CC();
  sub_22799F4CC();
  swift_bridgeObjectRetain();
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227984B20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227984B44 + 4 * byte_2279A35B8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_227984B44()
{
  return 0x44496D616461;
}

uint64_t sub_227984B58()
{
  return 0x656C746974;
}

uint64_t sub_227984B6C()
{
  return 0x614E747369747261;
}

uint64_t sub_227984B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22798776C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227984BAC()
{
  sub_227986718();
  return sub_22799F52C();
}

uint64_t sub_227984BD4()
{
  sub_227986718();
  return sub_22799F538();
}

uint64_t Setlist.Song.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905870);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227986718();
  sub_22799F520();
  v8[15] = 0;
  sub_22799F058();
  sub_22794F9A4(&qword_255905880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_22799F400();
  if (!v1)
  {
    type metadata accessor for Setlist.Song();
    v8[14] = 1;
    sub_22799F3B8();
    v8[13] = 2;
    sub_22799F3B8();
    v8[12] = 3;
    sub_22799F3B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Setlist.Song.hashValue.getter()
{
  sub_22799F4B4();
  Setlist.Song.hash(into:)();
  return sub_22799F4E4();
}

uint64_t Setlist.Song.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v27 = a2;
  v4 = sub_22799F058();
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905888);
  v7 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Setlist.Song();
  MEMORY[0x24BDAC7A8](v30);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22799F04C();
  v12 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_227986718();
  sub_22799F508();
  if (v2)
  {
    v13 = v31;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v11, v4);
  }
  else
  {
    v35 = 0;
    sub_22794F9A4(&qword_255905890, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_22799F3A0();
    (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v11, v6, v4);
    v34 = 1;
    v14 = sub_22799F358();
    v15 = v30;
    v16 = (uint64_t *)&v11[*(int *)(v30 + 20)];
    *v16 = v14;
    v16[1] = v17;
    v33 = 2;
    v18 = sub_22799F358();
    v19 = (uint64_t *)&v11[*(int *)(v15 + 24)];
    *v19 = v18;
    v19[1] = v20;
    v32 = 3;
    v22 = sub_22799F358();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
    v25 = (uint64_t *)&v11[*(int *)(v15 + 28)];
    *v25 = v22;
    v25[1] = v24;
    sub_22794F9E4((uint64_t)v11, v27, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return sub_22794FB54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
  }
}

uint64_t sub_227985150()
{
  sub_22799F4B4();
  Setlist.Song.hash(into:)();
  return sub_22799F4E4();
}

uint64_t sub_227985190()
{
  sub_22799F4B4();
  Setlist.Song.hash(into:)();
  return sub_22799F4E4();
}

uint64_t sub_2279851C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Setlist.Song.init(from:)(a1, a2);
}

uint64_t sub_2279851DC(_QWORD *a1)
{
  return Setlist.Song.encode(to:)(a1);
}

uint64_t sub_2279851F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799F058();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Setlist.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22794C864(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static Setlist.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22799F430() & 1) != 0)
    return sub_227983DDC(v2, v3);
  else
    return 0;
}

uint64_t sub_2279852F0()
{
  _BYTE *v0;

  if (*v0)
    return 0x73676E6F73;
  else
    return 0x656372756F736572;
}

uint64_t sub_22798532C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227987908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227985350()
{
  sub_22798675C();
  return sub_22799F52C();
}

uint64_t sub_227985378()
{
  sub_22798675C();
  return sub_22799F538();
}

uint64_t Setlist.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905898);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v11[0] = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22798675C();
  sub_22799F520();
  v12 = v8;
  v13 = v7;
  v14 = 0;
  sub_2279544C8();
  v9 = v11[1];
  sub_22799F400();
  if (!v9)
  {
    v12 = v11[0];
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559058A8);
    sub_2279867A0(&qword_2559058B0, &qword_2559058B8, (uint64_t)&protocol conformance descriptor for Setlist.Song, MEMORY[0x24BEE12A0]);
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Setlist.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794C864((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t Setlist.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559058C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22798675C();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = 0;
  sub_227954550();
  sub_22799F3A0();
  v10 = v13[0];
  v9 = v13[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559058A8);
  v14 = 1;
  sub_2279867A0(&qword_2559058C8, &qword_2559058D0, (uint64_t)&protocol conformance descriptor for Setlist.Song, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v13[0];
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v11;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227985768()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794C864((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t sub_2279857C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_22799F130();
  return sub_22794C864(a1, v3);
}

uint64_t sub_2279857F8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794C864((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t sub_227985854@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Setlist.init(from:)(a1, a2);
}

uint64_t sub_227985868(_QWORD *a1)
{
  return Setlist.encode(to:)(a1);
}

uint64_t sub_22798587C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22799F430() & 1) != 0)
    return sub_227983DDC(v2, v3);
  else
    return 0;
}

uint64_t Setlist.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  _QWORD v11[2];

  v1 = type metadata accessor for Setlist.Song();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_22799F2C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "[Setlist] id: ");
  HIBYTE(v11[1]) = -18;
  swift_bridgeObjectRetain();
  sub_22799F148();
  swift_bridgeObjectRelease();
  sub_22799F148();
  result = v11[0];
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_22794F9E4(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
      v10[0] = 8201;
      v10[1] = 0xE200000000000000;
      Setlist.Song.description.getter();
      sub_22799F148();
      swift_bridgeObjectRelease();
      sub_22799F148();
      sub_22799F148();
      swift_bridgeObjectRelease();
      sub_22794FB54((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
    return v11[0];
  }
  return result;
}

char *Setlist.Song.description.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD v23[2];

  v1 = (int *)type metadata accessor for Setlist.Song();
  v2 = (uint64_t *)(v0 + v1[5]);
  v3 = *v2;
  if (v2[1])
  {
    strcpy((char *)v23, "adamID: ");
    BYTE1(v23[1]) = 0;
    WORD1(v23[1]) = 0;
    HIDWORD(v23[1]) = -402653184;
    sub_22799F148();
    v3 = v23[0];
    v4 = v23[1];
  }
  else
  {
    v4 = 0;
  }
  v5 = (uint64_t *)(v0 + v1[6]);
  v6 = *v5;
  if (v5[1])
  {
    strcpy((char *)v23, "title: ");
    v23[1] = 0xE700000000000000;
    sub_22799F148();
    v6 = v23[0];
    v7 = 0xE700000000000000;
  }
  else
  {
    v7 = 0;
  }
  v8 = (uint64_t *)(v0 + v1[7]);
  v9 = *v8;
  if (v8[1])
  {
    strcpy((char *)v23, "artistName: ");
    BYTE5(v23[1]) = 0;
    HIWORD(v23[1]) = -5120;
    sub_22799F148();
    v9 = v23[0];
    v10 = v23[1];
  }
  else
  {
    v10 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559058D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A3570;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  if (!v4)
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v7)
      goto LABEL_21;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v12 = sub_2279860F8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
    v12 = sub_2279860F8((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
  v12[2] = v14 + 1;
  v15 = &v12[2 * v14];
  v15[4] = v3;
  v15[5] = v4;
  if (v7)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2279860F8(0, v12[2] + 1, 1, v12);
    v17 = v12[2];
    v16 = v12[3];
    if (v17 >= v16 >> 1)
      v12 = sub_2279860F8((_QWORD *)(v16 > 1), v17 + 1, 1, v12);
    v12[2] = v17 + 1;
    v18 = &v12[2 * v17];
    v18[4] = v6;
    v18[5] = v7;
  }
LABEL_21:
  if (v10)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2279860F8(0, v12[2] + 1, 1, v12);
    v20 = v12[2];
    v19 = v12[3];
    if (v20 >= v19 >> 1)
      v12 = sub_2279860F8((_QWORD *)(v19 > 1), v20 + 1, 1, v12);
    v12[2] = v20 + 1;
    v21 = &v12[2 * v20];
    v21[4] = v9;
    v21[5] = v10;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255904E30);
  sub_227986824();
  sub_22799F0F4();
  swift_bridgeObjectRelease();
  sub_22799F148();
  swift_bridgeObjectRelease();
  return strcpy((char *)v23, "[Song] ");
}

_QWORD *sub_227985DA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255905A10);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22798735C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_227985EB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_255905A30, &qword_255904998);
}

uint64_t sub_227985EC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_2559059C0, &qword_255904B00);
}

uint64_t sub_227985ED8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_22799F304();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22798744C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2279860E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_255905A18, &qword_255904740);
}

_QWORD *sub_2279860F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255905A38);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2279879FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_227986204(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255905A28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22798767C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_227986310(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227986338(a1, a2, a3, a4, &qword_255904EF8, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
}

uint64_t sub_227986324(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227986338(a1, a2, a3, a4, &qword_2559059F8, type metadata accessor for PromotionalAssets.Video);
}

uint64_t sub_227986338(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_22799F304();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_227987564(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_227986544(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227986338(a1, a2, a3, a4, &qword_2559059E8, type metadata accessor for PromotionalAssets.WatchFace);
}

uint64_t sub_227986558(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227986338(a1, a2, a3, a4, &qword_2559059D8, type metadata accessor for PromotionalAssets.PhoneWallpaper);
}

uint64_t sub_22798656C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_255905A08, &qword_255904960);
}

uint64_t sub_227986580(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_255905A20, &qword_255904748);
}

uint64_t sub_227986594(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_255905A00, &qword_255904B58);
}

uint64_t sub_2279865A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_2559059F0, &qword_255904B48);
}

uint64_t sub_2279865BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_2559059E0, &qword_255904B38);
}

uint64_t sub_2279865D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_2559059D0, &qword_255904B28);
}

uint64_t sub_2279865E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227985ED8(a1, a2, a3, a4, &qword_2559059C8, &qword_255904B18);
}

uint64_t _s12ShazamEvents7SetlistV4SongV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;

  if ((sub_22799F040() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Setlist.Song();
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = sub_22799F430(), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    v13 = v4[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v16[1];
    if (v15)
    {
      if (!v17)
        return 0;
      if (*v14 != *v16 || v15 != v17)
      {
        v19 = sub_22799F430();
        result = 0;
        if ((v19 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    v20 = v4[7];
    v21 = (_QWORD *)(a1 + v20);
    v22 = *(_QWORD *)(a1 + v20 + 8);
    v23 = (_QWORD *)(a2 + v20);
    v24 = v23[1];
    if (v22)
    {
      if (v24)
      {
        v25 = *v21 == *v23 && v22 == v24;
        if (v25 || (sub_22799F430() & 1) != 0)
          return 1;
      }
    }
    else if (!v24)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_227986718()
{
  unint64_t result;

  result = qword_255905878;
  if (!qword_255905878)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3A24, &type metadata for Setlist.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905878);
  }
  return result;
}

unint64_t sub_22798675C()
{
  unint64_t result;

  result = qword_2559058A0;
  if (!qword_2559058A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A39D4, &type metadata for Setlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559058A0);
  }
  return result;
}

uint64_t sub_2279867A0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559058A8);
    v10 = sub_22794F9A4(a2, (uint64_t (*)(uint64_t))type metadata accessor for Setlist.Song, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227986824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559058E0;
  if (!qword_2559058E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255904E30);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2559058E0);
  }
  return result;
}

uint64_t sub_227986870()
{
  return sub_22794F9A4(&qword_2559058E8, (uint64_t (*)(uint64_t))type metadata accessor for Setlist.Song, (uint64_t)&protocol conformance descriptor for Setlist.Song);
}

uint64_t sub_22798689C()
{
  return sub_22794F9A4(&qword_255904038, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t sub_2279868CC()
{
  unint64_t result;

  result = qword_2559058F0;
  if (!qword_2559058F0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Setlist, &type metadata for Setlist);
    atomic_store(result, (unint64_t *)&qword_2559058F0);
  }
  return result;
}

uint64_t destroy for PromotionalAssets.PhotoAlbum()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12ShazamEvents17PromotionalAssetsV10PhotoAlbumVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PromotionalAssets.PhotoAlbum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PromotionalAssets.PhotoAlbum(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets.PhotoAlbum(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.PhotoAlbum(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Setlist()
{
  return &type metadata for Setlist;
}

uint64_t *initializeBufferWithCopyOfBuffer for Setlist.Song(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799F058();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Setlist.Song(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22799F058();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Setlist.Song(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_22799F058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Setlist.Song(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_22799F058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Setlist.Song(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22799F058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for Setlist.Song(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_22799F058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Setlist.Song()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227986E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_22799F058();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Setlist.Song()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227986F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22799F058();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_227986FA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799F058();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Setlist.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227987060 + 4 * byte_2279A35C1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227987094 + 4 * byte_2279A35BC[v4]))();
}

uint64_t sub_227987094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22798709C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279870A4);
  return result;
}

uint64_t sub_2279870B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279870B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2279870BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279870C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Setlist.CodingKeys()
{
  return &type metadata for Setlist.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Setlist.Song.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22798712C + 4 * byte_2279A35CB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_227987160 + 4 * byte_2279A35C6[v4]))();
}

uint64_t sub_227987160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227987168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227987170);
  return result;
}

uint64_t sub_22798717C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227987184);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_227987188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227987190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Setlist.Song.CodingKeys()
{
  return &type metadata for Setlist.Song.CodingKeys;
}

unint64_t sub_2279871B0()
{
  unint64_t result;

  result = qword_255905990;
  if (!qword_255905990)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A38F4, &type metadata for Setlist.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905990);
  }
  return result;
}

unint64_t sub_2279871F8()
{
  unint64_t result;

  result = qword_255905998;
  if (!qword_255905998)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A39AC, &type metadata for Setlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905998);
  }
  return result;
}

unint64_t sub_227987240()
{
  unint64_t result;

  result = qword_2559059A0;
  if (!qword_2559059A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A391C, &type metadata for Setlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559059A0);
  }
  return result;
}

unint64_t sub_227987288()
{
  unint64_t result;

  result = qword_2559059A8;
  if (!qword_2559059A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3944, &type metadata for Setlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559059A8);
  }
  return result;
}

unint64_t sub_2279872D0()
{
  unint64_t result;

  result = qword_2559059B0;
  if (!qword_2559059B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3864, &type metadata for Setlist.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559059B0);
  }
  return result;
}

unint64_t sub_227987318()
{
  unint64_t result;

  result = qword_2559059B8;
  if (!qword_2559059B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A388C, &type metadata for Setlist.Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559059B8);
  }
  return result;
}

uint64_t sub_22798735C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798744C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_227987564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798767C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798776C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496D616461 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_227987908(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73676E6F73 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2279879FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t Playlist.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_227987B18()
{
  return 0x656372756F736572;
}

uint64_t sub_227987B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656372756F736572 && a2 == 0xEA00000000004449)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227987BD4()
{
  sub_227987FEC();
  return sub_22799F52C();
}

uint64_t sub_227987BFC()
{
  sub_227987FEC();
  return sub_22799F538();
}

uint64_t Playlist.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t static Playlist.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22799F430();
}

uint64_t Playlist.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905A40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227987FEC();
  sub_22799F520();
  v10[0] = v8;
  v10[1] = v7;
  sub_2279544C8();
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Playlist.hashValue.getter()
{
  sub_22799F4B4();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t Playlist.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905A50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227987FEC();
  sub_22799F508();
  if (!v2)
  {
    sub_227954550();
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_227987F00()
{
  sub_22799F4B4();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_227987F48()
{
  return sub_22799F130();
}

uint64_t sub_227987F50()
{
  sub_22799F4B4();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_227987F94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Playlist.init(from:)(a1, a2);
}

uint64_t sub_227987FA8(_QWORD *a1)
{
  return Playlist.encode(to:)(a1);
}

uint64_t sub_227987FBC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22799F430();
}

unint64_t sub_227987FEC()
{
  unint64_t result;

  result = qword_255905A48;
  if (!qword_255905A48)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3C44, &type metadata for Playlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905A48);
  }
  return result;
}

unint64_t sub_227988034()
{
  unint64_t result;

  result = qword_255905A58;
  if (!qword_255905A58)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Playlist, &type metadata for Playlist);
    atomic_store(result, (unint64_t *)&qword_255905A58);
  }
  return result;
}

ValueMetadata *type metadata accessor for Playlist()
{
  return &type metadata for Playlist;
}

uint64_t storeEnumTagSinglePayload for Playlist.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2279880C8 + 4 * byte_2279A3A74[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2279880E8 + 4 * byte_2279A3A79[v4]))();
}

_BYTE *sub_2279880C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2279880E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2279880F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2279880F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227988100(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227988108(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Playlist.CodingKeys()
{
  return &type metadata for Playlist.CodingKeys;
}

unint64_t sub_227988128()
{
  unint64_t result;

  result = qword_255905A60;
  if (!qword_255905A60)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3C1C, &type metadata for Playlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905A60);
  }
  return result;
}

unint64_t sub_227988170()
{
  unint64_t result;

  result = qword_255905A68;
  if (!qword_255905A68)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3B8C, &type metadata for Playlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905A68);
  }
  return result;
}

unint64_t sub_2279881B8()
{
  unint64_t result;

  result = qword_255905A70;
  if (!qword_255905A70)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3BB4, &type metadata for Playlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905A70);
  }
  return result;
}

void sub_227988200(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t *v17;
  void *v18;
  uint64_t aBlock;
  uint64_t v20;
  uint64_t (*v21)();
  void *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  _QWORD v25[5];

  v3 = a2 + OBJC_IVAR____TtC12ShazamEvents24LiveMusicEventConnection_connection;
  swift_beginAccess();
  sub_22794F960(v3, (uint64_t)v25);
  v4 = __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = *(void **)(*v4 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_227988EA8;
  *(_QWORD *)(v7 + 24) = v5;
  v23 = (uint64_t (*)(uint64_t))sub_227988EDC;
  v24 = v7;
  v8 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v20 = 1107296256;
  v21 = sub_2279881FC;
  v22 = &block_descriptor_20_0;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_22799F298();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905AA8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v11 = (void *)sub_22799F10C();
    v12 = (void *)sub_22799F004();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a1;
    v23 = sub_227988E38;
    v24 = v13;
    aBlock = v8;
    v20 = 1107296256;
    v21 = sub_2279881FC;
    v22 = &block_descriptor_26;
    v14 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v18, sel_liveMusicScheduleWithArtistID_startDate_completionHandler_, v11, v12, v14);
    _Block_release(v14);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_2279466D4();
    v15 = swift_allocError();
    *v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v17 = v15;
    swift_continuation_throwingResumeWithError();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
}

uint64_t sub_2279884C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t *v5;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value + 16) & 1) != 0)
  {
    sub_2279466D4();
    v3 = swift_allocError();
    *v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v5 = v3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value + 8);
    v8 = *(_QWORD **)(*(_QWORD *)(a2 + 64) + 40);
    *v8 = v2;
    v8[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
}

void sub_227988588(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t *v16;
  void *v17;
  uint64_t aBlock;
  uint64_t v19;
  uint64_t (*v20)();
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  _QWORD v24[5];

  v3 = a2 + OBJC_IVAR____TtC12ShazamEvents24LiveMusicEventConnection_connection;
  swift_beginAccess();
  sub_22794F960(v3, (uint64_t)v24);
  v4 = __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = *(void **)(*v4 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_227988EA8;
  *(_QWORD *)(v7 + 24) = v5;
  v22 = sub_227988D94;
  v23 = v7;
  v8 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_2279881FC;
  v21 = &block_descriptor_2;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_22799F298();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905AA8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    v11 = (void *)sub_22799F10C();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    v22 = sub_227988DC4;
    v23 = v12;
    aBlock = v8;
    v19 = 1107296256;
    v20 = sub_2279881FC;
    v21 = &block_descriptor_10;
    v13 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v17, sel_liveMusicScheduleWithVenueID_completionHandler_, v11, v13);
    _Block_release(v13);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_2279466D4();
    v14 = swift_allocError();
    *v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v16 = v14;
    swift_continuation_throwingResumeWithError();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
}

void sub_22798882C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t *v16;
  void *v17;
  uint64_t aBlock;
  uint64_t v19;
  uint64_t (*v20)();
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  _QWORD v24[5];

  v3 = a2 + OBJC_IVAR____TtC12ShazamEvents24LiveMusicEventConnection_connection;
  swift_beginAccess();
  sub_22794F960(v3, (uint64_t)v24);
  v4 = __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = *(void **)(*v4 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_227988E50;
  *(_QWORD *)(v7 + 24) = v5;
  v22 = (uint64_t (*)(uint64_t))sub_227988EDC;
  v23 = v7;
  v8 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_2279881FC;
  v21 = &block_descriptor_36;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_22799F298();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905AA8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    v11 = (void *)sub_22799F10C();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    v22 = sub_227988E78;
    v23 = v12;
    aBlock = v8;
    v19 = 1107296256;
    v20 = sub_2279881FC;
    v21 = &block_descriptor_42_0;
    v13 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v17, sel_liveMusicEventWithEventID_completionHandler_, v11, v13);
    _Block_release(v13);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_2279466D4();
    v14 = swift_allocError();
    *v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v16 = v14;
    swift_continuation_throwingResumeWithError();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
}

uint64_t sub_227988AD0(void *a1)
{
  _QWORD *v2;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
  swift_allocError();
  *v2 = a1;
  v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_227988B30(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t *v22;
  uint64_t v24;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22794FB10(a1 + *a5, (uint64_t)v18, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *v18;
    sub_2279466D4();
    v20 = swift_allocError();
    *v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
    swift_allocError();
    *v22 = v20;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_2279520F8((uint64_t)v18, (uint64_t)v15, a3);
    sub_22794FB10((uint64_t)v15, (uint64_t)v13, a3);
    sub_2279520F8((uint64_t)v13, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), a3);
    swift_continuation_throwingResume();
    return sub_2279520BC((uint64_t)v15, a3);
  }
}

void sub_227988CD8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t type metadata accessor for LiveMusicEventConnection()
{
  return objc_opt_self();
}

uint64_t sub_227988D84()
{
  return swift_deallocObject();
}

uint64_t sub_227988D94(uint64_t a1)
{
  uint64_t v1;

  return sub_227962F2C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_227988DB4()
{
  return swift_deallocObject();
}

uint64_t sub_227988DC4(uint64_t a1)
{
  uint64_t v1;

  return sub_227988B30(a1, *(_QWORD *)(v1 + 16), qword_255904190, (uint64_t *)&unk_255905C30, &OBJC_IVAR____TtC12ShazamEvents39LiveMusicVenueScheduleXPCValueContainer_value);
}

uint64_t sub_227988DF4()
{
  return swift_deallocObject();
}

uint64_t sub_227988E04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227988E28()
{
  return swift_deallocObject();
}

uint64_t sub_227988E38(uint64_t a1)
{
  uint64_t v1;

  return sub_2279884C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_227988E40()
{
  return swift_deallocObject();
}

uint64_t sub_227988E50(void *a1)
{
  return sub_227988AD0(a1);
}

uint64_t sub_227988E68()
{
  return swift_deallocObject();
}

uint64_t sub_227988E78(uint64_t a1)
{
  uint64_t v1;

  return sub_227988B30(a1, *(_QWORD *)(v1 + 16), (uint64_t *)&unk_255904110, &qword_255904220, &OBJC_IVAR____TtC12ShazamEvents31LiveMusicEventXPCValueContainer_value);
}

uint64_t _s5ColorVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5ColorVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5ColorVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5ColorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5ColorVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5ColorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5ColorVMa()
{
  return &_s5ColorVN;
}

uint64_t sub_227989068()
{
  sub_22799F4B4();
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F130();
  return sub_22799F4E4();
}

float64_t sub_2279890F8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  float64_t result;
  float64x2_t v5;
  float64x2_t v6[2];
  uint64_t v7;

  sub_227989428(a1, v6);
  if (!v2)
  {
    result = v6[0].f64[0];
    v5 = v6[1];
    *(float64x2_t *)a2 = v6[0];
    *(float64x2_t *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_22798913C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F514();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_22799F448();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_2279891D4()
{
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F4D8();
  return sub_22799F130();
}

uint64_t sub_227989240()
{
  sub_22799F4B4();
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F4D8();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_2279892CC(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_22799F430();
}

unint64_t sub_227989324()
{
  unint64_t result;

  result = qword_255905AB0;
  if (!qword_255905AB0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3CF8, &_s5ColorVN);
    atomic_store(result, (unint64_t *)&qword_255905AB0);
  }
  return result;
}

CGColorRef sub_227989368(double a1, double a2, double a3)
{
  uint64_t inited;
  const CGFloat *v7;
  CGColorSpace *v8;
  CGColorSpace *v9;
  CGColorRef v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255905AB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2279A3CD0;
  *(double *)(inited + 32) = a1;
  v7 = (const CGFloat *)(inited + 32);
  *(double *)(inited + 40) = a2;
  *(double *)(inited + 48) = a3;
  *(_QWORD *)(inited + 56) = 0x3FF0000000000000;
  v8 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF278]);
  if (v8)
  {
    v9 = v8;
    v10 = CGColorCreate(v8, v7);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void sub_227989428(_QWORD *a1@<X0>, float64x2_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  float64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  char v16;
  int8x16_t v17;
  float64x2_t *v18;
  uint64_t v19;
  float64x2_t *v20;
  id v21[3];
  unint64_t v22;
  unint64_t v23;
  _QWORD v24[4];

  v5 = sub_22799F25C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F4FC();
  if (v2)
    goto LABEL_6;
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  v9 = sub_22799F43C();
  v11 = v10;
  v20 = a2;
  v12 = objc_allocWithZone(MEMORY[0x24BDD17A8]);
  swift_bridgeObjectRetain();
  v13 = sub_22799F10C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithString_, v13);

  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDD0450], v5);
  v21[0] = v14;
  v15 = sub_22799F250();
  LOBYTE(v13) = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v13 & 1) != 0)
  {
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_22799F2C8();
    swift_bridgeObjectRelease();
    v22 = 0xD00000000000002CLL;
    v23 = 0x80000002279A7830;
    sub_22799F148();
    swift_bridgeObjectRelease();
    sub_22799F148();
    sub_22799F2F8();
    swift_allocError();
    sub_22799F2D4();
    swift_bridgeObjectRelease();
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }

  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(uint64x2_t *)v21 = vshlq_u64((uint64x2_t)vdupq_n_s64(v15), (uint64x2_t)xmmword_2279A3CE0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v17.i64[0] = 255;
    v17.i64[1] = 255;
    v18 = v20;
    *v20 = vdivq_f64(vcvtq_f64_s64((int64x2_t)vandq_s8(*(int8x16_t *)v21, v17)), (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL));
    v18[1].f64[0] = (double)v15 / 255.0;
    *(_QWORD *)&v18[1].f64[1] = v9;
    v18[2].f64[0] = v11;
  }
}

ValueMetadata *type metadata accessor for ResourceID.ResourceIDError()
{
  return &type metadata for ResourceID.ResourceIDError;
}

ValueMetadata *type metadata accessor for ResourceID()
{
  return &type metadata for ResourceID;
}

unint64_t sub_227989708()
{
  unint64_t result;

  result = qword_255905AC0;
  if (!qword_255905AC0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3E18, &type metadata for ResourceID.ResourceIDError);
    atomic_store(result, (unint64_t *)&qword_255905AC0);
  }
  return result;
}

uint64_t sub_22798974C()
{
  return 0x69796C7265646E75;
}

uint64_t sub_22798976C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69796C7265646E75 && a2 == 0xEC0000004449676ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227989818()
{
  sub_227989AC0();
  return sub_22799F52C();
}

uint64_t sub_227989840()
{
  sub_227989AC0();
  return sub_22799F538();
}

uint64_t sub_227989868@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905AE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227989AC0();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_22799F370();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_22798998C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905AD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227989AC0();
  sub_22799F520();
  sub_22799F3D0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_227989A7C()
{
  unint64_t result;

  result = qword_255905AC8;
  if (!qword_255905AC8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3E40, &type metadata for ResourceID);
    atomic_store(result, (unint64_t *)&qword_255905AC8);
  }
  return result;
}

unint64_t sub_227989AC0()
{
  unint64_t result;

  result = qword_255905AD8;
  if (!qword_255905AD8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3FFC, &type metadata for ResourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905AD8);
  }
  return result;
}

uint64_t _s12ShazamEvents10ResourceIDV15ResourceIDErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_227989B44 + 4 * byte_2279A3DB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227989B64 + 4 * byte_2279A3DB5[v4]))();
}

_BYTE *sub_227989B44(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227989B64(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227989B6C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227989B74(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227989B7C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227989B84(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResourceID.CodingKeys()
{
  return &type metadata for ResourceID.CodingKeys;
}

unint64_t sub_227989BA4()
{
  unint64_t result;

  result = qword_255905AE8;
  if (!qword_255905AE8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3FD4, &type metadata for ResourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905AE8);
  }
  return result;
}

unint64_t sub_227989BEC()
{
  unint64_t result;

  result = qword_255905AF0;
  if (!qword_255905AF0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3F44, &type metadata for ResourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905AF0);
  }
  return result;
}

unint64_t sub_227989C34()
{
  unint64_t result;

  result = qword_255905AF8;
  if (!qword_255905AF8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A3F6C, &type metadata for ResourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905AF8);
  }
  return result;
}

uint64_t destroy for TokenizedURL()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TokenizedURL(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TokenizedURL(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TokenizedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TokenizedURL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TokenizedURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TokenizedURL()
{
  return &type metadata for TokenizedURL;
}

ValueMetadata *type metadata accessor for TokenizedURL.Token()
{
  return &type metadata for TokenizedURL.Token;
}

uint64_t sub_227989E84()
{
  return MEMORY[0x24BEE0D88];
}

uint64_t sub_227989E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905B28);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  if ((sub_22798A2B0() & 1) != 0)
  {
    v13 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    v15 = v1[4];
    sub_22798A530(*v1, v1[1], v15);
    sub_22799EFD4();
    swift_bridgeObjectRelease();
    v16 = v1[3];
    if (v16)
    {
      v17 = v1[2];
      swift_bridgeObjectRetain();
      sub_22798A530(v17, v16, v15);
      swift_bridgeObjectRelease();
      sub_22799EFC8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_22798A7D0((uint64_t)v12, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_22798A818((uint64_t)v10, a1);
      sub_2279520BC((uint64_t)v5, &qword_255905B28);
    }
    else
    {
      sub_2279520BC((uint64_t)v10, &qword_255904040);
      sub_22798A818((uint64_t)v5, a1);
    }
    return sub_2279520BC((uint64_t)v12, &qword_255904040);
  }
}

uint64_t sub_22798A0C4()
{
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_22798A11C()
{
  swift_bridgeObjectRetain();
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22798A160()
{
  sub_22799F4B4();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

_QWORD *sub_22798A1B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

unint64_t sub_22798A1C4()
{
  unint64_t result;

  result = qword_255905B00;
  if (!qword_255905B00)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4060, &type metadata for TokenizedURL.Token);
    atomic_store(result, (unint64_t *)&qword_255905B00);
  }
  return result;
}

uint64_t sub_22798A208()
{
  return MEMORY[0x24BEE0D90];
}

unint64_t sub_22798A218()
{
  unint64_t result;

  result = qword_255905B08;
  if (!qword_255905B08)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4098, &type metadata for TokenizedURL.Token);
    atomic_store(result, (unint64_t *)&qword_255905B08);
  }
  return result;
}

uint64_t sub_22798A25C()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t sub_22798A26C()
{
  unint64_t result;

  result = qword_255905B10;
  if (!qword_255905B10)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A40D8, &type metadata for TokenizedURL.Token);
    atomic_store(result, (unint64_t *)&qword_255905B10);
  }
  return result;
}

uint64_t sub_22798A2B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = *v0;
  v3 = v0[1];
  v4 = v0[4];
  sub_22798A530(*v0, v3, v4);
  sub_22794F890();
  v5 = sub_22799F28C();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0 || (sub_22798A530(v2, v3, v4), v6 = sub_22799F28C(), swift_bridgeObjectRelease(), (v6 & 1) == 0))
  {
    v8 = v1[3];
    if (v8)
    {
      v9 = v1[2];
      swift_bridgeObjectRetain();
      sub_22798A530(v9, v8, v4);
      swift_bridgeObjectRelease();
      if ((sub_22799F28C() & 1) != 0)
      {
        v7 = sub_22799F28C();
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      swift_bridgeObjectRelease();
    }
    v7 = 0;
    return v7 & 1;
  }
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_22798A460@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v3 = *a1;
  v4 = a1[1];
  result = sub_22795F554(MEMORY[0x24BEE4AF8]);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = result;
  return result;
}

unint64_t sub_22798A4A4()
{
  unint64_t result;

  result = qword_255905B18;
  if (!qword_255905B18)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4180, &type metadata for TokenizedURL);
    atomic_store(result, (unint64_t *)&qword_255905B18);
  }
  return result;
}

unint64_t sub_22798A4EC()
{
  unint64_t result;

  result = qword_255905B20;
  if (!qword_255905B20)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A41B8, &type metadata for TokenizedURL);
    atomic_store(result, (unint64_t *)&qword_255905B20);
  }
  return result;
}

uint64_t sub_22798A530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v12 = a3 + 64;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v13 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v13)
      goto LABEL_25;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v13)
        goto LABEL_25;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v13)
          goto LABEL_25;
        v10 = *(_QWORD *)(v12 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v13)
            goto LABEL_25;
          v10 = *(_QWORD *)(v12 + 8 * v8);
          if (!v10)
          {
            v8 = v9 + 4;
            if (v9 + 4 >= v13)
              goto LABEL_25;
            v10 = *(_QWORD *)(v12 + 8 * v8);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_24:
    v6 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22799F148();
    sub_22799F148();
    sub_22794F890();
    a1 = sub_22799F280();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v11 = v9 + 5;
  if (v11 >= v13)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return a1;
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v13)
      goto LABEL_25;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22798A7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22798A818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Event<>.venues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 8))(*(_QWORD *)(a1 + 16));
}

uint64_t dispatch thunk of RealWorldEvent.venues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t static ShazamEventsService.machServiceName()()
{
  return 0xD000000000000018;
}

uint64_t ShazamEventsService.serviceDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ShazamEventsService.serviceDelegate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*ShazamEventsService.serviceDelegate.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate;
  a1[2] = OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate;
  *a1 = *(_QWORD *)(v1 + v2);
  a1[1] = v1;
  swift_unknownObjectRetain();
  return sub_22798A974;
}

uint64_t sub_22798A974(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + a1[2]) = *a1;
  return swift_unknownObjectRelease();
}

uint64_t ShazamEventsService.liveMusicEvent(eventID:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22798B90C(a1, a2, a3, a4, (uint64_t)&unk_24F011848, (uint64_t)&unk_255905B50);
}

uint64_t sub_22798A9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  _QWORD *v12;

  v8[7] = a7;
  v8[8] = a8;
  v8[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_255904220);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v11 = swift_task_alloc();
  v8[12] = v11;
  v12 = (_QWORD *)swift_task_alloc();
  v8[13] = v12;
  *v12 = v8;
  v12[1] = sub_22798AAA0;
  return sub_227957728(v11, a5, a6);
}

uint64_t sub_22798AAA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22798AB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(id);
  objc_class *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(void (**)(id))(v0 + 56);
  sub_22794FB10(v1, v2, (uint64_t *)&unk_255904110);
  swift_storeEnumTagMultiPayload();
  v4 = (objc_class *)type metadata accessor for LiveMusicEventXPCValueContainer(0);
  v5 = objc_allocWithZone(v4);
  sub_22794FB10(v2, (uint64_t)v5 + OBJC_IVAR____TtC12ShazamEvents31LiveMusicEventXPCValueContainer_value, &qword_255904220);
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v4;
  v6 = objc_msgSendSuper2((objc_super *)(v0 + 32), sel_init);
  sub_2279520BC(v2, &qword_255904220);
  v3(v6);

  sub_2279520BC(v1, (uint64_t *)&unk_255904110);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798AC0C()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void (*v3)(id);
  id v4;
  int v5;
  char v6;
  objc_class *v7;
  id v8;
  id v9;

  v1 = *(void **)(v0 + 112);
  v2 = *(char **)(v0 + 80);
  v3 = *(void (**)(id))(v0 + 56);
  *(_QWORD *)(v0 + 48) = v1;
  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
  v5 = swift_dynamicCast();
  v6 = *(_BYTE *)(v0 + 120);
  if (!v5)
    v6 = 2;
  *v2 = v6;
  swift_storeEnumTagMultiPayload();
  v7 = (objc_class *)type metadata accessor for LiveMusicEventXPCValueContainer(0);
  v8 = objc_allocWithZone(v7);
  sub_22794FB10((uint64_t)v2, (uint64_t)v8 + OBJC_IVAR____TtC12ShazamEvents31LiveMusicEventXPCValueContainer_value, &qword_255904220);
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v7;
  v9 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  sub_2279520BC((uint64_t)v2, &qword_255904220);
  v3(v9);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798AD4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_22798C864;
  return sub_22798A9D0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_22798ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22799F1FC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22799F1F0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2279520BC(a1, &qword_255905B38);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22799F1CC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t ShazamEventsService.liveMusicSchedule(artistID:startDate:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v23 = a4;
  v9 = sub_22799F034();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905B38);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22799F1FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_liveMusicEventFetcher);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  v19 = v22;
  *((_QWORD *)v18 + 4) = v16;
  *((_QWORD *)v18 + 5) = v19;
  *((_QWORD *)v18 + 6) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v20 = &v18[(v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22798ADE0((uint64_t)v14, (uint64_t)&unk_255905B60, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_22798B224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[15] = a8;
  v8[16] = v10;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559048D8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22798B29C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[14];
  v4 = sub_22799F034();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v6(v1, 0, 1, v4);
  v6(v2, 1, 1, v4);
  v7 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_22798B374;
  return sub_22795872C((uint64_t)(v0 + 2), v0[12], v0[13], v0[18], v0[17], 0, 1, 0);
}

uint64_t sub_22798B374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_2279520BC(v3, &qword_2559048D8);
  sub_2279520BC(v2, &qword_2559048D8);
  return swift_task_switch();
}

uint64_t sub_22798B404()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  objc_super *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  objc_super *v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void (**)(void))(v0 + 120);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = (objc_class *)type metadata accessor for LiveMusicScheduleXPCValueContainer();
    v5 = (char *)objc_allocWithZone(v4);
    v6 = &v5[OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value];
    *(_QWORD *)v6 = v1;
    *((_QWORD *)v6 + 1) = v3;
    v6[16] = 0;
    *(_QWORD *)(v0 + 64) = v5;
    v7 = (objc_super *)(v0 + 64);
    v8 = 72;
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for LiveMusicScheduleXPCValueContainer();
    v9 = (char *)objc_allocWithZone(v4);
    v10 = &v9[OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value];
    *(_QWORD *)v10 = 0;
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 1;
    *(_QWORD *)(v0 + 48) = v9;
    v7 = (objc_super *)(v0 + 48);
    v8 = 56;
  }
  *(_QWORD *)(v0 + v8) = v4;
  v11 = -[objc_super init](v7, sel_init);
  v2();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798B4F4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void);
  id v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;

  v1 = *(void **)(v0 + 160);
  v2 = *(void (**)(void))(v0 + 120);
  *(_QWORD *)(v0 + 80) = v1;
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
  if (swift_dynamicCast())
    v4 = *(unsigned __int8 *)(v0 + 168);
  else
    v4 = 2;
  v5 = (objc_class *)type metadata accessor for LiveMusicScheduleXPCValueContainer();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC12ShazamEvents34LiveMusicScheduleXPCValueContainer_value];
  *(_QWORD *)v7 = v4;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v5;
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 32), sel_init);
  v2();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798B5F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_22799F034() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = v1[6];
  v11 = (uint64_t)v1 + v5;
  v12 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_22798C864;
  return sub_22798B224(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t ShazamEventsService.liveMusicSchedule(venueID:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22798B90C(a1, a2, a3, a4, (uint64_t)&unk_24F011898, (uint64_t)&unk_255905B70);
}

uint64_t sub_22798B90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905B38);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22799F1FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v6 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_liveMusicEventFetcher);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v16;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22798ADE0((uint64_t)v14, a6, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_22798BA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[7] = a4;
  v8[12] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255905C30);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559048D8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_255904190);
  v8[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22798BAE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  sub_22799F028();
  v3 = sub_22799F034();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 0, 1, v3);
  v4(v1, 1, 1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_22798BBA4;
  return sub_227958D4C(v0[17], v0[8], v0[9], v0[16], v0[15], 0, 1, 0);
}

uint64_t sub_22798BBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  sub_2279520BC(v3, &qword_2559048D8);
  sub_2279520BC(v2, &qword_2559048D8);
  return swift_task_switch();
}

uint64_t sub_22798BC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(id);
  objc_class *v4;
  id v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(void (**)(id))(v0 + 80);
  sub_22794FB10(v1, v2, qword_255904190);
  swift_storeEnumTagMultiPayload();
  v4 = (objc_class *)type metadata accessor for LiveMusicVenueScheduleXPCValueContainer(0);
  v5 = objc_allocWithZone(v4);
  sub_22794FB10(v2, (uint64_t)v5 + OBJC_IVAR____TtC12ShazamEvents39LiveMusicVenueScheduleXPCValueContainer_value, (uint64_t *)&unk_255905C30);
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v4;
  v6 = objc_msgSendSuper2((objc_super *)(v0 + 32), sel_init);
  sub_2279520BC(v2, (uint64_t *)&unk_255905C30);
  v3(v6);

  sub_2279520BC(v1, qword_255904190);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798BD54()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void (*v3)(id);
  id v4;
  int v5;
  char v6;
  objc_class *v7;
  id v8;
  id v9;

  v1 = *(void **)(v0 + 152);
  v2 = *(char **)(v0 + 104);
  v3 = *(void (**)(id))(v0 + 80);
  *(_QWORD *)(v0 + 48) = v1;
  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905830);
  v5 = swift_dynamicCast();
  v6 = *(_BYTE *)(v0 + 160);
  if (!v5)
    v6 = 2;
  *v2 = v6;
  swift_storeEnumTagMultiPayload();
  v7 = (objc_class *)type metadata accessor for LiveMusicVenueScheduleXPCValueContainer(0);
  v8 = objc_allocWithZone(v7);
  sub_22794FB10((uint64_t)v2, (uint64_t)v8 + OBJC_IVAR____TtC12ShazamEvents39LiveMusicVenueScheduleXPCValueContainer_value, (uint64_t *)&unk_255905C30);
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v7;
  v9 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  sub_2279520BC((uint64_t)v2, (uint64_t *)&unk_255905C30);
  v3(v9);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798BEA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_22798C864;
  return sub_22798BA10(a1, v4, v5, v6, v7, v8, v9, v10);
}

Swift::Void __swiftcall ShazamEventsService.shutdownService()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905B38);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22799F1FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_liveMusicEventFetcher);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  swift_retain();
  sub_22798ADE0((uint64_t)v3, (uint64_t)&unk_255905B80, (uint64_t)v6);
  swift_release();
}

uint64_t sub_22798C16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_22798C184()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 128), sel_invalidateAndCancel);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798C1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22798C864;
  v3[2] = v2;
  return swift_task_switch();
}

id ShazamEventsService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ShazamEventsService.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_liveMusicEventFetcher;
  type metadata accessor for LiveMusicEventFetcher();
  swift_allocObject();
  v3 = v0;
  sub_227959918();
  *(_QWORD *)&v0[v2] = v4;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate] = 0;

  v6.receiver = v3;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id ShazamEventsService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22798C480@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate);
  return swift_unknownObjectRetain();
}

uint64_t sub_22798C498(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC12ShazamEvents19ShazamEventsService_underlyingServiceDelegate) = *a1;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ShazamEventsService()
{
  return objc_opt_self();
}

uint64_t objectdestroy_11Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22798C558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22798C5B8;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_22798C5B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22798C600()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22799F034();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22798C6D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22798C720(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22798C784;
  return v6(a1);
}

uint64_t sub_22798C784()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22798C7D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22798C7F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22798C5B8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255905C40 + dword_255905C40))(a1, v4);
}

id Venue.placemark.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1 == 1)
    return 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, *(double *)(v0 + 32), *(double *)(v0 + 40), *(_QWORD *)(v0 + 48), v1, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRetain();
  v4 = sub_22798CA2C();
  v5 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_placemarkWithLocation_name_postalAddress_, v3, v5, v4);

  return v2;
}

uint64_t Venue.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Venue.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id Venue.address.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56) == 1)
    return 0;
  else
    return sub_22798CA2C();
}

id sub_22798CA2C()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD78]), sel_init);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setStreet_, v1);

  swift_bridgeObjectRetain();
  v2 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCity_, v2);

  swift_bridgeObjectRetain();
  v3 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setState_, v3);

  swift_bridgeObjectRetain();
  v4 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCountry_, v4);

  swift_bridgeObjectRetain();
  v5 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPostalCode_, v5);

  swift_bridgeObjectRetain();
  v6 = (void *)sub_22799F10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setISOCountryCode_, v6);

  return v0;
}

double Venue.location.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_22798CC54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22798CC88 + 4 * byte_2279A4280[*v0]))(0x656372756F736572, 0xEA00000000004449);
}

uint64_t sub_22798CC88()
{
  return 1701667182;
}

uint64_t sub_22798CC98()
{
  return 0x656475746974616CLL;
}

uint64_t sub_22798CCB0()
{
  return 0x64757469676E6F6CLL;
}

unint64_t sub_22798CCCC()
{
  return 0xD000000000000011;
}

uint64_t sub_22798CCE8()
{
  return 0x6567616D4970616DLL;
}

uint64_t sub_22798CD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22799090C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22798CD2C()
{
  sub_22798F87C();
  return sub_22799F52C();
}

uint64_t sub_22798CD54()
{
  sub_22798F87C();
  return sub_22799F538();
}

uint64_t sub_22798CD7C()
{
  _QWORD *v0;

  if (v0[1])
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    if (v0[3])
      goto LABEL_3;
  }
  else
  {
    sub_22799F4CC();
    if (v0[3])
    {
LABEL_3:
      sub_22799F4CC();
      swift_bridgeObjectRetain();
      sub_22799F130();
      swift_bridgeObjectRelease();
      if (v0[5])
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  sub_22799F4CC();
  if (v0[5])
  {
LABEL_4:
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    if (v0[7])
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  sub_22799F4CC();
  if (v0[7])
  {
LABEL_5:
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    swift_bridgeObjectRelease();
    if (v0[9])
      goto LABEL_6;
LABEL_12:
    sub_22799F4CC();
    if (v0[11])
      goto LABEL_7;
    return sub_22799F4CC();
  }
LABEL_11:
  sub_22799F4CC();
  if (!v0[9])
    goto LABEL_12;
LABEL_6:
  sub_22799F4CC();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  if (v0[11])
  {
LABEL_7:
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22799F130();
    return swift_bridgeObjectRelease();
  }
  return sub_22799F4CC();
}

uint64_t sub_22798CF40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905D40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227990BA4();
  sub_22799F520();
  v8[15] = 0;
  sub_22799F3B8();
  if (!v1)
  {
    v8[14] = 1;
    sub_22799F3B8();
    v8[13] = 2;
    sub_22799F3B8();
    v8[12] = 3;
    sub_22799F3B8();
    v8[11] = 4;
    sub_22799F3B8();
    v8[10] = 5;
    sub_22799F3B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22798D0F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22798D124 + 4 * byte_2279A4286[*v0]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_22798D124()
{
  return 0x65646F4374736F70;
}

uint64_t sub_22798D13C()
{
  return 2037672291;
}

uint64_t sub_22798D14C()
{
  return 0x6E6F69676572;
}

uint64_t sub_22798D160()
{
  return 0x7972746E756F63;
}

uint64_t sub_22798D174()
{
  return 0x497972746E756F63;
}

uint64_t sub_22798D198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227990BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22798D1BC()
{
  sub_227990BA4();
  return sub_22799F52C();
}

uint64_t sub_22798D1E4()
{
  sub_227990BA4();
  return sub_22799F538();
}

double sub_22798D20C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_227990E74(a1, (uint64_t *)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_22798D254(_QWORD *a1)
{
  return sub_22798CF40(a1);
}

uint64_t sub_22798D268()
{
  sub_22799F4B4();
  sub_22798CD7C();
  return sub_22799F4E4();
}

uint64_t sub_22798D2A8()
{
  sub_22799F4B4();
  sub_22798CD7C();
  return sub_22799F4E4();
}

uint64_t sub_22798D2E0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_22798F1D0(v9, v10) & 1;
}

uint64_t Venue.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = sub_22799EFE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  sub_22799F4D8();
  sub_22799F4D8();
  v8 = v0[7];
  if (v8 == 1)
  {
    sub_22799F4CC();
  }
  else
  {
    v25 = v4;
    v26 = v2;
    v9 = v0[16];
    v10 = v0[17];
    v27 = v1;
    v11 = v0[14];
    v12 = v0[15];
    v20[0] = v9;
    v20[1] = v11;
    v13 = v0[12];
    v14 = v0[13];
    v15 = v0[11];
    v23 = v0[10];
    v24 = v13;
    v16 = v0[8];
    v17 = v0[9];
    v21 = v0[6];
    v22 = v16;
    v28 = v21;
    v29 = v8;
    v30 = v16;
    v31 = v17;
    v32 = v23;
    v33 = v15;
    v34 = v13;
    v35 = v14;
    v36 = v11;
    v37 = v12;
    v38 = v9;
    v39 = v10;
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22798CD7C();
    v4 = v25;
    v1 = v27;
    v2 = v26;
    sub_22794FA9C(v21, v8);
  }
  v18 = type metadata accessor for Venue();
  sub_22794FB10((uint64_t)v0 + *(int *)(v18 + 36), (uint64_t)v7, &qword_255904040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_22799F4CC();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_22799F4CC();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t type metadata accessor for Venue()
{
  uint64_t result;

  result = qword_255905CD8;
  if (!qword_255905CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Venue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[6];
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905C50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22798F87C();
  sub_22799F520();
  v9 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)&v14[0] = *(_QWORD *)v3;
  *((_QWORD *)&v14[0] + 1) = v9;
  v15 = 0;
  sub_2279544C8();
  sub_22799F400();
  if (!v2)
  {
    LOBYTE(v14[0]) = 1;
    sub_22799F3D0();
    LOBYTE(v14[0]) = 2;
    sub_22799F3E8();
    LOBYTE(v14[0]) = 3;
    sub_22799F3E8();
    v10 = *(_OWORD *)(v3 + 64);
    v14[0] = *(_OWORD *)(v3 + 48);
    v14[1] = v10;
    v11 = *(_OWORD *)(v3 + 96);
    v14[2] = *(_OWORD *)(v3 + 80);
    v14[3] = v11;
    v12 = *(_OWORD *)(v3 + 128);
    v14[4] = *(_OWORD *)(v3 + 112);
    v14[5] = v12;
    v15 = 4;
    sub_22796D850();
    sub_22799F3C4();
    type metadata accessor for Venue();
    LOBYTE(v14[0]) = 5;
    sub_22799EFE0();
    sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Venue.hashValue.getter()
{
  sub_22799F4B4();
  Venue.hash(into:)();
  return sub_22799F4E4();
}

uint64_t Venue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;

  v26 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905C60);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Venue();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_22798F87C();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v25 = v6;
  v14 = (uint64_t)v12;
  v35 = 0;
  sub_227954550();
  v15 = v27;
  sub_22799F3A0();
  v16 = *((_QWORD *)&v29 + 1);
  *(_QWORD *)v14 = v29;
  *(_QWORD *)(v14 + 8) = v16;
  LOBYTE(v29) = 1;
  *(_QWORD *)(v14 + 16) = sub_22799F370();
  *(_QWORD *)(v14 + 24) = v17;
  LOBYTE(v29) = 2;
  sub_22799F388();
  *(_QWORD *)(v14 + 32) = v18;
  LOBYTE(v29) = 3;
  sub_22799F388();
  *(_QWORD *)(v14 + 40) = v19;
  v35 = 4;
  sub_22796D7AC();
  sub_22799F364();
  v20 = v30;
  *(_OWORD *)(v14 + 48) = v29;
  *(_OWORD *)(v14 + 64) = v20;
  v21 = v32;
  *(_OWORD *)(v14 + 80) = v31;
  *(_OWORD *)(v14 + 96) = v21;
  v22 = v34;
  *(_OWORD *)(v14 + 112) = v33;
  *(_OWORD *)(v14 + 128) = v22;
  sub_22799EFE0();
  LOBYTE(v29) = 5;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v23 = (uint64_t)v25;
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  sub_2279520F8(v23, v14 + *(int *)(v10 + 36), &qword_255904040);
  sub_22798F8C0(v14, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_22796A420(v14);
}

uint64_t sub_22798DC6C()
{
  sub_22799F4B4();
  Venue.hash(into:)();
  return sub_22799F4E4();
}

uint64_t sub_22798DCAC()
{
  sub_22799F4B4();
  Venue.hash(into:)();
  return sub_22799F4E4();
}

uint64_t sub_22798DCE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Venue.init(from:)(a1, a2);
}

uint64_t sub_22798DCF8(_QWORD *a1)
{
  return Venue.encode(to:)(a1);
}

uint64_t static Venue.schedule(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v4 = sub_22799EF2C();
  v3[17] = v4;
  v3[18] = *(_QWORD *)(v4 - 8);
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22798DD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  _QWORD *v16;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain_n();
  sub_22799EF20();
  sub_22794F890();
  sub_22799F274();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_22799F13C();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    sub_22794F8D4();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_227948854((uint64_t *)(v0 + 16));
    v5 = *(_QWORD *)(v0 + 40);
    v6 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v5);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
    v9 = *v8;
    *(_QWORD *)(v0 + 80) = type metadata accessor for ShazamEventsServiceConnection();
    *(_QWORD *)(v0 + 88) = &off_24F00F740;
    *(_QWORD *)(v0 + 56) = v9;
    v10 = objc_allocWithZone((Class)type metadata accessor for LiveMusicEventConnection());
    v11 = *(_QWORD *)(v0 + 80);
    v12 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v11);
    v13 = *(_QWORD *)(v11 - 8);
    v14 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v14, v12, v11);
    v15 = sub_22794E390(*v14, v10);
    *(_QWORD *)(v0 + 160) = v15;
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v16;
    *v16 = v0;
    v16[1] = sub_2279608CC;
    return sub_22798DFB8(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), (uint64_t)v15);
  }
}

uint64_t sub_22798DFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  type metadata accessor for Venue();
  v4[14] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255904110);
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = __swift_instantiateConcreteTypeFromMangledName(qword_255904190);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22798E088()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[13];
  v0[7] = v0[20];
  v0[2] = v0;
  v0[3] = sub_22798E0F4;
  v2 = swift_continuation_init();
  sub_227988588(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_22798E0F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 176) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_2279520F8(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), qword_255904190);
  return swift_task_switch();
}

uint64_t sub_22798E170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 44));
  v5 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(v4 + 16);
  result = swift_bridgeObjectRetain();
  v26 = v6;
  v23 = v3;
  if (v6)
  {
    v8 = 0;
    v9 = v2 + 56;
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 128);
    v12 = (uint64_t *)&unk_255904110;
    v24 = v4;
    v25 = v10;
    while (v8 < *(_QWORD *)(v4 + 16))
    {
      v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v14 = *(_QWORD *)(v11 + 72);
      sub_22794FB10(v4 + v13 + v14 * v8, *(_QWORD *)(v0 + 144), v12);
      v15 = *(_QWORD *)(v0 + 144);
      if ((*(_BYTE *)(v9 + *(int *)(v10 + 64)) & 1) != 0)
      {
        result = sub_2279520BC(v15, v12);
      }
      else
      {
        v16 = v12;
        sub_2279520F8(v15, *(_QWORD *)(v0 + 136), v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22798E3D4(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v27;
        }
        v18 = *(_QWORD *)(v5 + 16);
        v17 = *(_QWORD *)(v5 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_22798E3D4(v17 > 1, v18 + 1, 1);
          v5 = v27;
        }
        v19 = *(_QWORD *)(v0 + 136);
        *(_QWORD *)(v5 + 16) = v18 + 1;
        v20 = v5 + v13 + v18 * v14;
        v12 = v16;
        result = sub_2279520F8(v19, v20, v16);
        v4 = v24;
        v10 = v25;
      }
      if (v26 == ++v8)
      {
        v1 = *(_QWORD *)(v0 + 168);
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease();
    sub_22798F8C0(v1, v21);
    sub_2279520BC(v1, qword_255904190);
    sub_2279697AC(v21, v22);
    *(_QWORD *)(v22 + *(int *)(v23 + 44)) = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_22798E370()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22798E3D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798E980(a1, a2, a3, (_QWORD *)*v3, &qword_255903F80, (uint64_t *)&unk_255904110);
  *v3 = result;
  return result;
}

uint64_t sub_22798E400(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22798E690(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22798E41C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22798E818(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22798E438(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798E980(a1, a2, a3, (_QWORD *)*v3, &qword_255905A30, &qword_255904998);
  *v3 = result;
  return result;
}

uint64_t sub_22798E464(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_255904EF8, (uint64_t (*)(_QWORD))type metadata accessor for Ticket);
  *v3 = result;
  return result;
}

uint64_t sub_22798E490(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EB74(a1, a2, a3, (_QWORD *)*v3, &qword_255905DB0, &qword_255905DB8);
  *v3 = result;
  return result;
}

uint64_t sub_22798E4BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EB74(a1, a2, a3, (_QWORD *)*v3, &qword_255905DA0, &qword_255905DA8);
  *v3 = result;
  return result;
}

uint64_t sub_22798E4E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EB74(a1, a2, a3, (_QWORD *)*v3, &qword_255905D90, &qword_255905D98);
  *v3 = result;
  return result;
}

uint64_t sub_22798E514(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22798ED00(a1, a2, a3, *v3, &qword_255905D88);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22798E540(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22798ED00(a1, a2, a3, *v3, &qword_255905DC8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22798E56C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22798EE88(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22798E588(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_255905D68, (uint64_t (*)(_QWORD))type metadata accessor for Venue);
  *v3 = result;
  return result;
}

uint64_t sub_22798E5B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_255905DC0, (uint64_t (*)(_QWORD))type metadata accessor for Setlist.Song);
  *v3 = result;
  return result;
}

uint64_t sub_22798E5E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_255905D80, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
  *v3 = result;
  return result;
}

uint64_t sub_22798E60C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_2559059D8, type metadata accessor for PromotionalAssets.PhoneWallpaper);
  *v3 = result;
  return result;
}

uint64_t sub_22798E638(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_2559059E8, type metadata accessor for PromotionalAssets.WatchFace);
  *v3 = result;
  return result;
}

uint64_t sub_22798E664(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22798EFF0(a1, a2, a3, (_QWORD *)*v3, &qword_2559059F8, type metadata accessor for PromotionalAssets.Video);
  *v3 = result;
  return result;
}

uint64_t sub_22798E690(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905DD0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[112 * v8])
      memmove(v12, v13, 112 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[112 * v8] || v12 >= &v13[112 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798E818(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905A38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798E980(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798EB60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22798EFF0(a1, a2, a3, a4, &qword_255905D78, type metadata accessor for LiveMusicEventAttributes.Tickets.TicketLink);
}

uint64_t sub_22798EB74(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798ED00(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9])
      memmove(v13, v14, 24 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v9] || v13 >= &v14[24 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798EE88(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905D70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798EFF0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22799F340();
  __break(1u);
  return result;
}

uint64_t sub_22798F1D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_22799F430(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v11 = sub_22799F430();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = a1[5];
    v13 = a2[5];
    if (v12)
    {
      if (!v13)
        return 0;
      if (a1[4] != a2[4] || v12 != v13)
      {
        v14 = sub_22799F430();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v15 = a1[7];
    v16 = a2[7];
    if (v15)
    {
      if (!v16)
        return 0;
      if (a1[6] != a2[6] || v15 != v16)
      {
        v17 = sub_22799F430();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    v18 = a1[9];
    v19 = a2[9];
    if (v18)
    {
      if (!v19)
        return 0;
      if (a1[8] != a2[8] || v18 != v19)
      {
        v20 = sub_22799F430();
        result = 0;
        if ((v20 & 1) == 0)
          return result;
      }
    }
    else if (v19)
    {
      return 0;
    }
    v21 = a1[11];
    v22 = a2[11];
    if (v21)
    {
      if (v22 && (a1[10] == a2[10] && v21 == v22 || (sub_22799F430() & 1) != 0))
        return 1;
    }
    else if (!v22)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s12ShazamEvents5VenueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char v19;
  _BOOL8 result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[13];

  v4 = sub_22799EFE0();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905D58);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v50 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v50 - v17;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v19 = sub_22799F430(), result = 0, (v19 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v21 = sub_22799F430(), result = 0, (v21 & 1) != 0))
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32) || *(double *)(a1 + 40) != *(double *)(a2 + 40))
        return 0;
      v51 = v4;
      v22 = *(_QWORD *)(a1 + 48);
      v23 = *(_QWORD *)(a1 + 56);
      v24 = *(_QWORD *)(a1 + 64);
      v25 = *(_QWORD *)(a1 + 72);
      v26 = *(_QWORD *)(a1 + 80);
      v27 = *(_QWORD *)(a1 + 88);
      v28 = *(_QWORD *)(a1 + 96);
      v29 = *(_QWORD *)(a1 + 104);
      v30 = *(_QWORD *)(a1 + 112);
      v31 = *(_QWORD *)(a1 + 120);
      v32 = *(_QWORD *)(a1 + 128);
      v33 = *(_QWORD *)(a1 + 136);
      v34 = *(_QWORD *)(a2 + 48);
      v35 = *(_QWORD *)(a2 + 56);
      v37 = *(_QWORD *)(a2 + 64);
      v36 = *(_QWORD *)(a2 + 72);
      v38 = *(_QWORD *)(a2 + 80);
      v55 = *(_QWORD *)(a2 + 88);
      v40 = *(_QWORD *)(a2 + 96);
      v39 = *(_QWORD *)(a2 + 104);
      v54 = *(_QWORD *)(a2 + 112);
      v52 = *(_QWORD *)(a2 + 120);
      v53 = *(_QWORD *)(a2 + 128);
      v41 = *(_QWORD *)(a2 + 136);
      if (v23 == 1)
      {
        if (v35 == 1)
        {
LABEL_15:
          v43 = type metadata accessor for Venue();
          sub_22794FB10(a1 + *(int *)(v43 + 36), (uint64_t)v18, &qword_255904040);
          sub_22794FB10(a2 + *(int *)(v43 + 36), (uint64_t)v16, &qword_255904040);
          v44 = (uint64_t)&v9[*(int *)(v7 + 48)];
          sub_22794FB10((uint64_t)v18, (uint64_t)v9, &qword_255904040);
          sub_22794FB10((uint64_t)v16, v44, &qword_255904040);
          v45 = v56;
          v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
          v47 = v51;
          if (v46((uint64_t)v9, 1, v51) == 1)
          {
            sub_2279520BC((uint64_t)v16, &qword_255904040);
            sub_2279520BC((uint64_t)v18, &qword_255904040);
            if (v46(v44, 1, v47) == 1)
            {
              sub_2279520BC((uint64_t)v9, &qword_255904040);
              return 1;
            }
          }
          else
          {
            sub_22794FB10((uint64_t)v9, (uint64_t)v13, &qword_255904040);
            if (v46(v44, 1, v47) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v6, v44, v47);
              sub_22794F9A4(&qword_255905D60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
              v48 = sub_22799F100();
              v49 = *(void (**)(char *, uint64_t))(v45 + 8);
              v49(v6, v47);
              sub_2279520BC((uint64_t)v16, &qword_255904040);
              sub_2279520BC((uint64_t)v18, &qword_255904040);
              v49(v13, v47);
              sub_2279520BC((uint64_t)v9, &qword_255904040);
              return (v48 & 1) != 0;
            }
            sub_2279520BC((uint64_t)v16, &qword_255904040);
            sub_2279520BC((uint64_t)v18, &qword_255904040);
            (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v47);
          }
          sub_2279520BC((uint64_t)v9, &qword_255905D58);
          return 0;
        }
      }
      else if (v35 != 1)
      {
        v81[0] = v22;
        v81[1] = v23;
        v81[2] = v24;
        v81[3] = v25;
        v81[4] = v26;
        v81[5] = v27;
        v81[6] = v28;
        v81[7] = v29;
        v81[8] = v30;
        v81[9] = v31;
        v81[10] = v32;
        v81[11] = v33;
        v57 = v34;
        v58 = v35;
        v59 = v37;
        v60 = v36;
        v61 = v38;
        v62 = v55;
        v63 = v40;
        v64 = v39;
        v65 = v54;
        v66 = v52;
        v67 = v53;
        v68 = v41;
        if ((sub_22798F1D0(v81, &v57) & 1) == 0)
          return 0;
        goto LABEL_15;
      }
      v57 = v22;
      v58 = v23;
      v59 = v24;
      v60 = v25;
      v61 = v26;
      v62 = v27;
      v63 = v28;
      v64 = v29;
      v65 = v30;
      v66 = v31;
      v67 = v32;
      v68 = v33;
      v69 = v34;
      v70 = v35;
      v71 = v37;
      v72 = v36;
      v73 = v38;
      v74 = v55;
      v75 = v40;
      v76 = v39;
      v77 = v54;
      v78 = v52;
      v79 = v53;
      v80 = v41;
      v56 = v39;
      v51 = v40;
      v42 = v34;
      sub_22794FA28(v22, v23);
      sub_22794FA28(v42, v35);
      sub_227991284(&v57);
      return 0;
    }
  }
  return result;
}

unint64_t sub_22798F87C()
{
  unint64_t result;

  result = qword_255905C58;
  if (!qword_255905C58)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4570, &type metadata for Venue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905C58);
  }
  return result;
}

uint64_t sub_22798F8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Venue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22798F904()
{
  return sub_22794F9A4(&qword_255905C78, (uint64_t (*)(uint64_t))type metadata accessor for Venue, (uint64_t)&protocol conformance descriptor for Venue);
}

uint64_t initializeBufferWithCopyOfBuffer for Venue(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 1)
    {
      v10 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v10;
      v11 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v11;
      v12 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v9;
      v14 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v14;
      v15 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v15;
      v16 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v16;
      v17 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v17;
      v18 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v19 = *(int *)(a3 + 36);
    v20 = (void *)(a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = sub_22799EFE0();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t destroy for Venue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_22799EFE0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for Venue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v12;
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v13;
    v14 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v14;
    v15 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v15;
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v17 = *(int *)(a3 + 36);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithCopy for Venue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_OWORD *)(a1 + 48);
  v7 = (_OWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v8 == 1)
    {
      v9 = *(_OWORD *)(a2 + 64);
      *v6 = *v7;
      *(_OWORD *)(a1 + 64) = v9;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 96);
      v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 96) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_227990024(a1 + 48);
    v13 = *(_OWORD *)(a2 + 64);
    *v6 = *v7;
    *(_OWORD *)(a1 + 64) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 80) = v16;
    *(_OWORD *)(a1 + 96) = v15;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v17 = *(int *)(a3 + 36);
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_13;
  }
  if (v24)
  {
LABEL_13:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_227990024(uint64_t a1)
{
  destroy for Venue.StructuredAddress();
  return a1;
}

_OWORD *initializeWithTake for Venue(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  a1[8] = a2[8];
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = sub_22799EFE0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for Venue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 56) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 56);
  if (v8 == 1)
  {
    sub_227990024(a1 + 48);
LABEL_4:
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
LABEL_6:
  v17 = *(int *)(a3 + 36);
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_11;
  }
  if (v24)
  {
LABEL_11:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for Venue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227990308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Venue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227990394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_22799040C()
{
  unint64_t v0;

  sub_22797CC08();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for Venue.StructuredAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Venue.StructuredAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Venue.StructuredAddress(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

_QWORD *assignWithTake for Venue.StructuredAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Venue.StructuredAddress(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Venue.StructuredAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Venue.StructuredAddress()
{
  return &type metadata for Venue.StructuredAddress;
}

ValueMetadata *type metadata accessor for Venue.CodingKeys()
{
  return &type metadata for Venue.CodingKeys;
}

unint64_t sub_2279907F0()
{
  unint64_t result;

  result = qword_255905D20;
  if (!qword_255905D20)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4490, &type metadata for Venue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905D20);
  }
  return result;
}

unint64_t sub_227990838()
{
  unint64_t result;

  result = qword_255905D28;
  if (!qword_255905D28)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A44B8, &type metadata for Venue.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_255905D28);
  }
  return result;
}

unint64_t sub_227990880()
{
  unint64_t result;

  result = qword_255905D30;
  if (!qword_255905D30)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4400, &type metadata for Venue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905D30);
  }
  return result;
}

unint64_t sub_2279908C8()
{
  unint64_t result;

  result = qword_255905D38;
  if (!qword_255905D38)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4428, &type metadata for Venue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905D38);
  }
  return result;
}

uint64_t sub_22799090C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002279A7350 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6567616D4970616DLL && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_227990BA4()
{
  unint64_t result;

  result = qword_255905D48;
  if (!qword_255905D48)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4678, &type metadata for Venue.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905D48);
  }
  return result;
}

uint64_t sub_227990BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4374736F70 && a2 == 0xE800000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x497972746E756F63 && a2 == 0xEE0065646F436F73)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_227990E74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905D50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227990BA4();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = 0;
  v9 = sub_22799F358();
  v11 = v10;
  v40 = 1;
  swift_bridgeObjectRetain();
  v33 = sub_22799F358();
  v39 = 2;
  v35 = v12;
  swift_bridgeObjectRetain();
  v13 = sub_22799F358();
  v34 = v14;
  v30 = v13;
  v38 = 3;
  swift_bridgeObjectRetain();
  v31 = 0;
  v29 = sub_22799F358();
  v37 = 4;
  v32 = v15;
  swift_bridgeObjectRetain();
  v27 = sub_22799F358();
  v28 = v16;
  v36 = 5;
  swift_bridgeObjectRetain();
  v17 = sub_22799F358();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31 = v17;
  v20(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v21 = v28;
  swift_bridgeObjectRelease();
  v22 = v32;
  swift_bridgeObjectRelease();
  v23 = v34;
  swift_bridgeObjectRelease();
  v24 = v35;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v33;
  a2[3] = v24;
  a2[4] = v30;
  a2[5] = v23;
  a2[6] = v29;
  a2[7] = v22;
  a2[8] = v27;
  a2[9] = v21;
  a2[10] = v31;
  a2[11] = v19;
  return result;
}

uint64_t *sub_227991284(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[13];
  v4 = a1[12];
  sub_22794FA9C(*a1, a1[1]);
  sub_22794FA9C(v4, v2);
  return a1;
}

uint64_t _s12ShazamEvents5VenueV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_227991390 + 4 * byte_2279A4291[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2279913C4 + 4 * byte_2279A428C[v4]))();
}

uint64_t sub_2279913C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279913CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279913D4);
  return result;
}

uint64_t sub_2279913E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279913E8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2279913EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279913F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Venue.StructuredAddress.CodingKeys()
{
  return &type metadata for Venue.StructuredAddress.CodingKeys;
}

unint64_t sub_227991414()
{
  unint64_t result;

  result = qword_255905DD8;
  if (!qword_255905DD8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A4650, &type metadata for Venue.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905DD8);
  }
  return result;
}

unint64_t sub_22799145C()
{
  unint64_t result;

  result = qword_255905DE0;
  if (!qword_255905DE0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A45C0, &type metadata for Venue.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905DE0);
  }
  return result;
}

unint64_t sub_2279914A4()
{
  unint64_t result;

  result = qword_255905DE8;
  if (!qword_255905DE8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A45E8, &type metadata for Venue.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255905DE8);
  }
  return result;
}

uint64_t sub_2279914E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_227991678(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_227991510(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v5[24];
  uint64_t v6;

  result = sub_2279915C4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_22799F514();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    sub_22799F448();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t sub_2279915C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_22799F154();
      if (!v3)
        break;
      v4 = sub_22799F0E8();
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_227991764();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_227991678(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F4FC();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v2 = sub_22799F43C();
  v4 = v3;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_2279915C4(v2, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

unint64_t sub_227991764()
{
  unint64_t result;

  result = qword_255905DF0;
  if (!qword_255905DF0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A47D0, &type metadata for RequiredCodingString.RequiredCodingStringError);
    atomic_store(result, (unint64_t *)&qword_255905DF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RequiredCodingString.RequiredCodingStringError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2279917E8 + 4 * byte_2279A46D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227991808 + 4 * byte_2279A46D5[v4]))();
}

_BYTE *sub_2279917E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227991808(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227991810(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227991818(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227991820(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227991828(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RequiredCodingString.RequiredCodingStringError()
{
  return &type metadata for RequiredCodingString.RequiredCodingStringError;
}

ValueMetadata *type metadata accessor for RequiredCodingString()
{
  return &type metadata for RequiredCodingString;
}

unint64_t sub_227991858()
{
  unint64_t result;

  result = qword_255905DF8;
  if (!qword_255905DF8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A47A8, &type metadata for RequiredCodingString.RequiredCodingStringError);
    atomic_store(result, (unint64_t *)&qword_255905DF8);
  }
  return result;
}

uint64_t static Participants.== infix(_:_:)()
{
  return sub_22799F1C0();
}

uint64_t sub_2279918B0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22799F430();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22799194C()
{
  return 0x7069636974726170;
}

uint64_t sub_22799196C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2279918B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22799199C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_227945118();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2279919C8(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A49E8, a1);
  return sub_22799F52C();
}

uint64_t sub_2279919FC(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A49E8, a1);
  return sub_22799F538();
}

uint64_t Participants.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_22799F1B4();
  return swift_bridgeObjectRelease();
}

uint64_t Participants.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];

  v6 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = v6;
  v7 = type metadata accessor for Participants.CodingKeys(255, v15, v6, a4);
  MEMORY[0x22E2A1174](&unk_2279A49E8, v7);
  v8 = sub_22799F40C();
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  v11 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F520();
  v18[2] = v11;
  v12 = sub_22799F1A8();
  v18[0] = *(_QWORD *)(v16 + 16);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v12, v18);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

uint64_t Participants.hashValue.getter()
{
  sub_22799F4B4();
  Participants.hash(into:)();
  return sub_22799F4E4();
}

uint64_t Participants.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD v17[3];

  v15[0] = a5;
  v15[1] = a2;
  v16 = a3;
  v7 = type metadata accessor for Participants.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2A1174](&unk_2279A49E8, v7);
  v8 = sub_22799F3AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F508();
  if (!v5)
  {
    v12 = (_QWORD *)v15[0];
    v13 = sub_22799F1A8();
    v17[0] = *(_QWORD *)(v16 + 8);
    MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v13, v17);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *v12 = v17[2];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_227991DA8()
{
  sub_22799F4B4();
  Participants.hash(into:)();
  return sub_22799F4E4();
}

uint64_t sub_227991DE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return Participants.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_227991E04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Participants.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_227991E18()
{
  return static Participants.== infix(_:_:)();
}

uint64_t type metadata accessor for Participants.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Participants.CodingKeys);
}

void sub_227991E30()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t type metadata accessor for Participants(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Participants);
}

uint64_t sub_227991E4C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_227991E8C + 4 * byte_2279A4810[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227991EAC + 4 * byte_2279A4815[v4]))();
}

_BYTE *sub_227991E8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227991EAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227991EB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227991EBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227991EC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227991ECC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_227991ED8()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227991EE8()
{
  JUMPOUT(0x22E2A1174);
}

void sub_227991EF8()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t VenueSchedule.venue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22798F8C0(v1, a1);
}

uint64_t VenueSchedule.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_227991F20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756E6576 && a2 == 0xE500000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227992000(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E657665;
  else
    return 0x65756E6576;
}

uint64_t sub_227992030()
{
  char *v0;

  return sub_227992000(*v0);
}

uint64_t sub_227992044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227991F20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227992074(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A4C10, a1);
  return sub_22799F52C();
}

uint64_t sub_2279920A8(uint64_t a1)
{
  MEMORY[0x22E2A1174](&unk_2279A4C10, a1);
  return sub_22799F538();
}

uint64_t VenueSchedule.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  Venue.hash(into:)();
  v4 = type metadata accessor for Event(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v3);
  swift_bridgeObjectRetain();
  MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v4);
  sub_22799F1B4();
  return swift_bridgeObjectRelease();
}

uint64_t static VenueSchedule.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  if (!_s12ShazamEvents5VenueV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  type metadata accessor for VenueSchedule(0, a3, a4, a5);
  v9 = type metadata accessor for Event(0, a3, a4, v8);
  MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v9);
  return sub_22799F1C0();
}

uint64_t VenueSchedule.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 24);
  v19 = v6;
  v8 = type metadata accessor for VenueSchedule.CodingKeys(255, v6, v18, v7);
  MEMORY[0x22E2A1174](&unk_2279A4C10, v8);
  v9 = sub_22799F40C();
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799F520();
  LOBYTE(v24) = 0;
  type metadata accessor for Venue();
  sub_2279927B4(&qword_255903EE8, (uint64_t)&protocol conformance descriptor for Venue);
  v12 = v21;
  sub_22799F400();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v9);
  v15 = v20;
  v24 = *(_QWORD *)(v3 + *(int *)(a2 + 44));
  v23 = 1;
  v16 = type metadata accessor for Event(255, v19, v18, v13);
  v17 = sub_22799F1A8();
  v22 = MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v16);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v17, &v22);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v9);
}

uint64_t VenueSchedule.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_22799F4B4();
  VenueSchedule.hash(into:)((uint64_t)v3, a1);
  return sub_22799F4E4();
}

uint64_t VenueSchedule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v32 = a5;
  v36 = type metadata accessor for Venue();
  MEMORY[0x24BDAC7A8](v36);
  v37 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VenueSchedule.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2A1174](&unk_2279A4C10, v10);
  v39 = sub_22799F3AC();
  v33 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v12 = (char *)&v31 - v11;
  v34 = a2;
  v35 = a3;
  v31 = type metadata accessor for VenueSchedule(0, a2, a3, a4);
  v13 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v38 = v12;
  v16 = v40;
  sub_22799F508();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = v34;
  v18 = v35;
  v40 = v13;
  v19 = v33;
  v20 = (uint64_t)v15;
  LOBYTE(v43) = 0;
  sub_2279927B4(&qword_255903F40, (uint64_t)&protocol conformance descriptor for Venue);
  v21 = (uint64_t)v37;
  v22 = v38;
  v23 = v39;
  sub_22799F3A0();
  sub_2279697AC(v21, v20);
  v25 = type metadata accessor for Event(255, v17, v18, v24);
  v26 = sub_22799F1A8();
  v42 = 1;
  v41 = MEMORY[0x22E2A1174](&protocol conformance descriptor for Event<A>, v25);
  MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v26, &v41);
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v23);
  v28 = v31;
  v27 = v32;
  *(_QWORD *)(v20 + *(int *)(v31 + 44)) = v43;
  v29 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v27, v20, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v20, v28);
}

uint64_t sub_227992718(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22799F4B4();
  VenueSchedule.hash(into:)((uint64_t)v4, a2);
  return sub_22799F4E4();
}

uint64_t sub_227992758@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return VenueSchedule.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_227992778(_QWORD *a1, uint64_t a2)
{
  return VenueSchedule.encode(to:)(a1, a2);
}

uint64_t sub_22799278C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static VenueSchedule.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t type metadata accessor for VenueSchedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VenueSchedule);
}

uint64_t type metadata accessor for VenueSchedule.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VenueSchedule.CodingKeys);
}

uint64_t sub_2279927B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Venue();
    result = MEMORY[0x22E2A1174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2279927F4()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t sub_227992804()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Venue();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_227992878(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 1)
    {
      v10 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v10;
      v11 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v11;
      v12 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v9;
      v14 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v14;
      v15 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v15;
      v16 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v16;
      v17 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v17;
      v18 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v19 = *(int *)(type metadata accessor for Venue() + 36);
    v20 = (void *)(a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = sub_22799EFE0();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_227992A3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = a1 + *(int *)(type metadata accessor for Venue() + 36);
  v3 = sub_22799EFE0();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227992B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v12;
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v13;
    v14 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v14;
    v15 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v15;
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v17 = *(int *)(type metadata accessor for Venue() + 36);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227992C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_OWORD *)(a1 + 48);
  v7 = (_OWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v8 == 1)
    {
      v9 = *(_OWORD *)(a2 + 64);
      *v6 = *v7;
      *(_OWORD *)(a1 + 64) = v9;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 96);
      v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 96) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_227990024(a1 + 48);
    v13 = *(_OWORD *)(a2 + 64);
    *v6 = *v7;
    *(_OWORD *)(a1 + 64) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 80) = v16;
    *(_OWORD *)(a1 + 96) = v15;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v17 = *(int *)(type metadata accessor for Venue() + 36);
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_13;
  }
  if (v24)
  {
LABEL_13:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_14:
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_227992FD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  a1[8] = a2[8];
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = *(int *)(type metadata accessor for Venue() + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22799EFE0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_2279930D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 56) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 56);
  if (v8 == 1)
  {
    sub_227990024(a1 + 48);
LABEL_4:
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
LABEL_6:
  v17 = *(int *)(type metadata accessor for Venue() + 36);
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_22799EFE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_11;
  }
  if (v24)
  {
LABEL_11:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_12:
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2279932C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2279932D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Venue();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_227993350()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799335C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Venue();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t sub_2279933D4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227993420 + 4 * byte_2279A4A3D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227993454 + 4 * byte_2279A4A38[v4]))();
}

uint64_t sub_227993454(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799345C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227993464);
  return result;
}

uint64_t sub_227993470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227993478);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22799347C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227993484(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_227993490()
{
  JUMPOUT(0x22E2A1174);
}

void sub_2279934A0()
{
  JUMPOUT(0x22E2A1174);
}

void sub_2279934B0()
{
  JUMPOUT(0x22E2A1174);
}

uint64_t PromotionalAssets.phoneWallpapers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromotionalAssets.watchFaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromotionalAssets.photoAlbums.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromotionalAssets.videos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2279934EC()
{
  return 7107189;
}

uint64_t sub_227993500()
{
  sub_22799357C();
  return sub_22799F52C();
}

uint64_t sub_227993528()
{
  sub_22799357C();
  return sub_22799F538();
}

uint64_t PromotionalAssets.PhoneWallpaper.encode(to:)(_QWORD *a1)
{
  return sub_2279940EC(a1, &qword_255906000, (void (*)(void))sub_22799357C);
}

unint64_t sub_22799357C()
{
  unint64_t result;

  result = qword_255906008;
  if (!qword_255906008)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A591C, &type metadata for PromotionalAssets.PhoneWallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906008);
  }
  return result;
}

uint64_t PromotionalAssets.PhoneWallpaper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2279942EC(a1, &qword_255906010, type metadata accessor for PromotionalAssets.PhoneWallpaper, (void (*)(void))sub_22799357C, a2);
}

uint64_t type metadata accessor for PromotionalAssets.PhoneWallpaper(uint64_t a1)
{
  return sub_2279518A8(a1, qword_2559061D0);
}

uint64_t sub_227993618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalAssets.PhoneWallpaper.init(from:)(a1, a2);
}

uint64_t sub_22799362C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_227994574(a1, a2, a3, &qword_255906000, (void (*)(void))sub_22799357C);
}

uint64_t PromotionalAssets.WatchFace.previewURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PromotionalAssets.WatchFace(0) + 20);
  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PromotionalAssets.WatchFace(uint64_t a1)
{
  return sub_2279518A8(a1, qword_255906260);
}

uint64_t PromotionalAssets.WatchFace.hash(into:)()
{
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  type metadata accessor for PromotionalAssets.WatchFace(0);
  return sub_22799F0DC();
}

uint64_t static PromotionalAssets.WatchFace.== infix(_:_:)()
{
  if ((MEMORY[0x22E2A0808]() & 1) != 0)
  {
    type metadata accessor for PromotionalAssets.WatchFace(0);
    JUMPOUT(0x22E2A0808);
  }
  return 0;
}

uint64_t sub_22799378C()
{
  _BYTE *v0;

  if (*v0)
    return 0x5577656976657270;
  else
    return 7107189;
}

uint64_t sub_2279937C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227998984(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2279937E8()
{
  sub_227993994();
  return sub_22799F52C();
}

uint64_t sub_227993810()
{
  sub_227993994();
  return sub_22799F538();
}

uint64_t PromotionalAssets.WatchFace.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906018);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227993994();
  sub_22799F520();
  v8[15] = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v1)
  {
    type metadata accessor for PromotionalAssets.WatchFace(0);
    v8[14] = 1;
    sub_22799F400();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_227993994()
{
  unint64_t result;

  result = qword_255906020;
  if (!qword_255906020)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A58CC, &type metadata for PromotionalAssets.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906020);
  }
  return result;
}

uint64_t PromotionalAssets.WatchFace.hashValue.getter()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  type metadata accessor for PromotionalAssets.WatchFace(0);
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t PromotionalAssets.WatchFace.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v22 = a2;
  v26 = sub_22799EFE0();
  v24 = *(_QWORD *)(v26 - 8);
  v4 = MEMORY[0x24BDAC7A8](v26);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v20 - v6;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906028);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PromotionalAssets.WatchFace(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227993994();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v10;
  v21 = a1;
  v13 = (uint64_t)v12;
  v15 = v23;
  v14 = v24;
  v29 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v16 = v25;
  sub_22799F3A0();
  v17 = v16;
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v18(v13, v17, v26);
  v28 = 1;
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  v18(v13 + *(int *)(v20 + 20), v15, v26);
  sub_22794F9E4(v13, v22, type metadata accessor for PromotionalAssets.WatchFace);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_22794FB54(v13, type metadata accessor for PromotionalAssets.WatchFace);
}

uint64_t sub_227993D28()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t sub_227993DBC()
{
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  return sub_22799F0DC();
}

uint64_t sub_227993E40()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t sub_227993ED0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalAssets.WatchFace.init(from:)(a1, a2);
}

uint64_t sub_227993EE4(_QWORD *a1)
{
  return PromotionalAssets.WatchFace.encode(to:)(a1);
}

uint64_t sub_227993EF8()
{
  if ((MEMORY[0x22E2A0808]() & 1) != 0)
    JUMPOUT(0x22E2A0808);
  return 0;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperV2id10Foundation3URLVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperV4hash4intoys6HasherVz_tF_0()
{
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_22799F0DC();
}

uint64_t sub_227993FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227994070()
{
  sub_227994204();
  return sub_22799F52C();
}

uint64_t sub_227994098()
{
  sub_227994204();
  return sub_22799F538();
}

uint64_t PromotionalAssets.PhotoAlbum.Photo.encode(to:)(_QWORD *a1)
{
  return sub_2279940EC(a1, &qword_255906030, (void (*)(void))sub_227994204);
}

uint64_t sub_2279940EC(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_22799F520();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_227994204()
{
  unint64_t result;

  result = qword_255906038;
  if (!qword_255906038)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A587C, &type metadata for PromotionalAssets.PhotoAlbum.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906038);
  }
  return result;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperV9hashValueSivg_0()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t PromotionalAssets.PhotoAlbum.Photo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2279942EC(a1, &qword_255906040, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, (void (*)(void))sub_227994204, a2);
}

uint64_t sub_2279942EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v19 = a5;
  v23 = sub_22799EFE0();
  v18 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a3;
  v13 = a3(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4();
  v16 = v24;
  sub_22799F508();
  if (!v16)
  {
    sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v22, v23);
    sub_22794F7B8((uint64_t)v15, v19, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2279944B8()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t type metadata accessor for PromotionalAssets.PhotoAlbum.Photo(uint64_t a1)
{
  return sub_2279518A8(a1, qword_2559062F0);
}

uint64_t sub_227994534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalAssets.PhotoAlbum.Photo.init(from:)(a1, a2);
}

uint64_t sub_227994548(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_227994574(a1, a2, a3, &qword_255906030, (void (*)(void))sub_227994204);
}

uint64_t sub_227994574(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_22799F520();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PromotionalAssets.PhotoAlbum.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalAssets.PhotoAlbum.photos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromotionalAssets.PhotoAlbum.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22794DFBC(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static PromotionalAssets.PhotoAlbum.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22799F430() & 1) != 0)
    return sub_2279846C4(v2, v3);
  else
    return 0;
}

uint64_t sub_227994788()
{
  _BYTE *v0;

  if (*v0)
    return 0x736F746F6870;
  else
    return 0x656372756F736572;
}

uint64_t sub_2279947C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227998A70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2279947E8()
{
  sub_227996974();
  return sub_22799F52C();
}

uint64_t sub_227994810()
{
  sub_227996974();
  return sub_22799F538();
}

uint64_t PromotionalAssets.PhotoAlbum.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906048);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v11[0] = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996974();
  sub_22799F520();
  v12 = v8;
  v13 = v7;
  v14 = 0;
  sub_2279544C8();
  v9 = v11[1];
  sub_22799F400();
  if (!v9)
  {
    v12 = v11[0];
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255906058);
    sub_2279969B8();
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PromotionalAssets.PhotoAlbum.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794DFBC((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t PromotionalAssets.PhotoAlbum.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996974();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = 0;
  sub_227954550();
  sub_22799F3A0();
  v10 = v13[0];
  v9 = v13[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255906058);
  v14 = 1;
  sub_227996A34();
  swift_bridgeObjectRetain();
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v13[0];
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v11;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227994BC0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794DFBC((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t sub_227994C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v15[2];

  v3 = type metadata accessor for PromotionalAssets.PhotoAlbum.Photo(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903FF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 16);
  sub_22799F130();
  v11 = *(_QWORD *)(v10 + 16);
  v15[1] = a1;
  sub_22799F4C0();
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v15[0] = *(_QWORD *)(v4 + 72);
    while (1)
    {
      sub_22794F9E4(v12, (uint64_t)v9, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v13(v9, 0, 1, v3);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
      if ((_DWORD)result == 1)
        break;
      sub_22794F7B8((uint64_t)v9, (uint64_t)v6, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      sub_22799EFE0();
      sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      sub_22799F0DC();
      sub_22794FB54((uint64_t)v6, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      v12 += v15[0];
      if (!--v11)
        return v13(v9, 1, 1, v3);
    }
  }
  else
  {
    v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    return v13(v9, 1, 1, v3);
  }
  return result;
}

uint64_t sub_227994DE4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_22799F4B4();
  sub_22799F130();
  sub_22794DFBC((uint64_t)v3, v1);
  return sub_22799F4E4();
}

uint64_t sub_227994E40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PromotionalAssets.PhotoAlbum.init(from:)(a1, a2);
}

uint64_t sub_227994E54(_QWORD *a1)
{
  return PromotionalAssets.PhotoAlbum.encode(to:)(a1);
}

uint64_t sub_227994E68(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22799F430() & 1) != 0)
    return sub_2279846C4(v2, v3);
  else
    return 0;
}

uint64_t PromotionalAssets.Video.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalAssets.Video.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalAssets.Video.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PromotionalAssets.Video(0) + 24);
  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PromotionalAssets.Video.hlsVideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PromotionalAssets.Video(0) + 28);
  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PromotionalAssets.Video.previewImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PromotionalAssets.Video(0) + 32);
  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PromotionalAssets.Video.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  type metadata accessor for PromotionalAssets.Video(0);
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F0DC();
}

uint64_t sub_2279950F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22799512C + 4 * byte_2279A4C60[*v0]))(0x656372756F736572, 0xEA00000000004449);
}

uint64_t sub_22799512C()
{
  return 0x656C746974;
}

uint64_t sub_227995140()
{
  return 0x4C52556F65646976;
}

uint64_t sub_227995158()
{
  return 0x6F65646956736C68;
}

uint64_t sub_227995178()
{
  return 0x4977656976657270;
}

uint64_t sub_22799519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227998B64(a1, a2);
  *a3 = result;
  return result;
}

void sub_2279951C0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2279951CC()
{
  sub_227996B84();
  return sub_22799F52C();
}

uint64_t sub_2279951F4()
{
  sub_227996B84();
  return sub_22799F538();
}

uint64_t PromotionalAssets.Video.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906088);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996B84();
  sub_22799F520();
  v9 = v3[1];
  v11[0] = *v3;
  v11[1] = v9;
  v12 = 0;
  sub_2279544C8();
  sub_22799F400();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_22799F3D0();
    type metadata accessor for PromotionalAssets.Video(0);
    LOBYTE(v11[0]) = 2;
    sub_22799EFE0();
    sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_22799F400();
    LOBYTE(v11[0]) = 3;
    sub_22799F400();
    LOBYTE(v11[0]) = 4;
    sub_22799F400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PromotionalAssets.Video.hashValue.getter()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  type metadata accessor for PromotionalAssets.Video(0);
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t PromotionalAssets.Video.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(uint64_t, char *, uint64_t);
  char *v29;
  char *v30;
  _QWORD v32[3];
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v34 = a2;
  v3 = sub_22799EFE0();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v32 - v8;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906098);
  v10 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for PromotionalAssets.Video(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996B84();
  v39 = v12;
  v16 = (uint64_t)v41;
  sub_22799F508();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = v9;
  v17 = v10;
  v41 = a1;
  v18 = v38;
  v44 = 0;
  sub_227954550();
  v19 = v39;
  v20 = v40;
  sub_22799F3A0();
  v21 = v43;
  v22 = (uint64_t)v15;
  *v15 = v42;
  v15[1] = v21;
  LOBYTE(v42) = 1;
  v23 = v17;
  *(_QWORD *)(v22 + 16) = sub_22799F370();
  *(_QWORD *)(v22 + 24) = v24;
  LOBYTE(v42) = 2;
  v25 = sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v26 = v33;
  v32[2] = v25;
  sub_22799F3A0();
  v32[1] = 0;
  v27 = v26;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
  v28(v22 + v13[6], v27, v18);
  LOBYTE(v42) = 3;
  v29 = v36;
  sub_22799F3A0();
  v28(v22 + v13[7], v29, v18);
  LOBYTE(v42) = 4;
  v30 = v35;
  sub_22799F3A0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v20);
  v28(v22 + v13[8], v30, v18);
  sub_22794F9E4(v22, v34, type metadata accessor for PromotionalAssets.Video);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_22794FB54(v22, type metadata accessor for PromotionalAssets.Video);
}

uint64_t sub_227995948()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t sub_227995A20()
{
  sub_22799F130();
  sub_22799F130();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F0DC();
}

uint64_t sub_227995ADC()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F0DC();
  sub_22799F0DC();
  return sub_22799F4E4();
}

uint64_t sub_227995BB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalAssets.Video.init(from:)(a1, a2);
}

uint64_t sub_227995BC4(_QWORD *a1)
{
  return PromotionalAssets.Video.encode(to:)(a1);
}

uint64_t PromotionalAssets.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v5 = *v2;
  v4 = v2[1];
  v7 = v2[2];
  v6 = v2[3];
  if (*v2)
  {
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22794E1CC(a1, v5);
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    sub_22799F4CC();
    if (v4)
    {
LABEL_3:
      sub_22799F4CC();
      swift_bridgeObjectRetain();
      sub_22794DFD0(a1, v4);
      swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_4;
LABEL_8:
      sub_22799F4CC();
      if (v6)
        goto LABEL_5;
      return sub_22799F4CC();
    }
  }
  sub_22799F4CC();
  if (!v7)
    goto LABEL_8;
LABEL_4:
  sub_22799F4CC();
  swift_bridgeObjectRetain();
  sub_22794DD78(a1, v7);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_5:
    sub_22799F4CC();
    swift_bridgeObjectRetain();
    sub_22794DC18(a1, v6);
    return swift_bridgeObjectRelease();
  }
  return sub_22799F4CC();
}

uint64_t sub_227995CF4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227995D30 + 4 * byte_2279A4C65[*v0]))(0x6C6157656E6F6870, 0xEF7372657061706CLL);
}

uint64_t sub_227995D30()
{
  return 0x6361466863746177;
}

uint64_t sub_227995D4C()
{
  return 0x626C416F746F6870;
}

uint64_t sub_227995D6C()
{
  return 0x736F65646976;
}

uint64_t sub_227995D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227998DC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227995DA4()
{
  sub_227996D18();
  return sub_22799F52C();
}

uint64_t sub_227995DCC()
{
  sub_227996D18();
  return sub_22799F538();
}

uint64_t PromotionalAssets.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559060A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v14 = v1[2];
  v15 = v8;
  v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996D18();
  sub_22799F520();
  v17 = v9;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905D98);
  sub_227996D5C();
  sub_22799F3C4();
  if (!v2)
  {
    v10 = v13;
    v11 = v14;
    v17 = v15;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905DA8);
    sub_227996DD8();
    sub_22799F3C4();
    v17 = v11;
    v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559060D0);
    sub_22799700C(&qword_2559060D8, (uint64_t (*)(void))sub_227996E54, MEMORY[0x24BEE12A0]);
    sub_22799F3C4();
    v17 = v10;
    v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255905DB8);
    sub_227996E98();
    sub_22799F3C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PromotionalAssets.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  sub_22799F4B4();
  PromotionalAssets.hash(into:)((uint64_t)v3);
  return sub_22799F4E4();
}

uint64_t PromotionalAssets.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559060F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227996D18();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905D98);
  v19 = 0;
  sub_227996F14();
  sub_22799F364();
  v9 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255905DA8);
  v19 = 1;
  sub_227996F90();
  swift_bridgeObjectRetain();
  sub_22799F364();
  v10 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559060D0);
  v19 = 2;
  sub_22799700C(&qword_255906120, (uint64_t (*)(void))sub_227997074, MEMORY[0x24BEE12D0]);
  v18 = v10;
  swift_bridgeObjectRetain();
  sub_22799F364();
  v11 = v20;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255905DB8);
  v19 = 3;
  sub_2279970B8();
  v17 = v11;
  swift_bridgeObjectRetain();
  sub_22799F364();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v20;
  swift_bridgeObjectRetain();
  v15 = v17;
  v14 = v18;
  *a2 = v9;
  a2[1] = v14;
  a2[2] = v15;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2279963AC()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  sub_22799F4B4();
  PromotionalAssets.hash(into:)((uint64_t)v3);
  return sub_22799F4E4();
}

uint64_t sub_2279963F8()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  sub_22799F4B4();
  PromotionalAssets.hash(into:)((uint64_t)v3);
  return sub_22799F4E4();
}

uint64_t sub_22799643C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PromotionalAssets.init(from:)(a1, a2);
}

uint64_t sub_227996450(_QWORD *a1)
{
  return PromotionalAssets.encode(to:)(a1);
}

uint64_t PromotionalAssets.Video.description.getter()
{
  sub_22799F2C8();
  sub_22799F148();
  swift_bridgeObjectRetain();
  sub_22799F148();
  swift_bridgeObjectRelease();
  sub_22799F148();
  type metadata accessor for PromotionalAssets.Video(0);
  sub_22799EFE0();
  sub_22794F9A4(&qword_255906140, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_22799F424();
  sub_22799F148();
  swift_bridgeObjectRelease();
  sub_22799F148();
  sub_22799F424();
  sub_22799F148();
  swift_bridgeObjectRelease();
  sub_22799F148();
  sub_22799F424();
  sub_22799F148();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t PromotionalAssets.PhotoAlbum.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _WORD v15[8];
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v1 = type metadata accessor for PromotionalAssets.PhotoAlbum.Photo(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255903FF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 16);
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_22799F2C8();
  swift_bridgeObjectRelease();
  v18 = 0xD000000000000011;
  v19 = 0x80000002279A7920;
  swift_bridgeObjectRetain();
  sub_22799F148();
  swift_bridgeObjectRelease();
  sub_22799F148();
  v9 = *(_QWORD *)(v8 + 16);
  v13 = v8;
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v14 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_22794F9E4(v10, (uint64_t)v7, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v11(v7, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
        break;
      sub_22794F7B8((uint64_t)v7, (uint64_t)v4, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      v16 = 8201;
      v17 = 0xE200000000000000;
      strcpy((char *)v15, "[Photo] URL: ");
      v15[7] = -4864;
      _s12ShazamEvents6TicketV2idSSvg_0();
      sub_22799F148();
      swift_bridgeObjectRelease();
      sub_22799F148();
      swift_bridgeObjectRelease();
      sub_22799F148();
      sub_22799F148();
      swift_bridgeObjectRelease();
      sub_22794FB54((uint64_t)v4, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo);
      v10 += v14;
      if (!--v9)
        goto LABEL_7;
    }
  }
  else
  {
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain_n();
LABEL_7:
    v11(v7, 1, 1, v1);
  }
  swift_bridgeObjectRelease_n();
  return v18;
}

uint64_t PromotionalAssets.PhotoAlbum.Photo.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "[Photo] URL: ");
  _s12ShazamEvents6TicketV2idSSvg_0();
  sub_22799F148();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_227996914()
{
  _QWORD v1[2];

  strcpy((char *)v1, "[Photo] URL: ");
  _s12ShazamEvents6TicketV2idSSvg_0();
  sub_22799F148();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t sub_227996974()
{
  unint64_t result;

  result = qword_255906050;
  if (!qword_255906050)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A582C, &type metadata for PromotionalAssets.PhotoAlbum.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906050);
  }
  return result;
}

unint64_t sub_2279969B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255906060;
  if (!qword_255906060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255906058);
    v2 = sub_22794F9A4(&qword_255906068, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhotoAlbum.Photo);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255906060);
  }
  return result;
}

unint64_t sub_227996A34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255906078;
  if (!qword_255906078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255906058);
    v2 = sub_22794F9A4(&qword_255906080, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhotoAlbum.Photo);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255906078);
  }
  return result;
}

uint64_t type metadata accessor for PromotionalAssets.Video(uint64_t a1)
{
  return sub_2279518A8(a1, qword_255906380);
}

uint64_t _s12ShazamEvents17PromotionalAssetsV5VideoV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22799F430() & 1) != 0)
  {
    v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v5 || (sub_22799F430() & 1) != 0)
    {
      v6 = type metadata accessor for PromotionalAssets.Video(0);
      if ((MEMORY[0x22E2A0808]((char *)a1 + *(int *)(v6 + 24), (char *)a2 + *(int *)(v6 + 24)) & 1) != 0
        && (MEMORY[0x22E2A0808]((char *)a1 + *(int *)(v6 + 28), (char *)a2 + *(int *)(v6 + 28)) & 1) != 0)
      {
        JUMPOUT(0x22E2A0808);
      }
    }
  }
  return 0;
}

unint64_t sub_227996B84()
{
  unint64_t result;

  result = qword_255906090;
  if (!qword_255906090)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A57DC, &type metadata for PromotionalAssets.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906090);
  }
  return result;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v6 = *a2;
  v5 = a2[1];
  v8 = a2[2];
  v7 = a2[3];
  if (*a1)
  {
    if (!v6)
      return 0;
    swift_bridgeObjectRetain();
    v9 = swift_bridgeObjectRetain();
    v10 = sub_227984120(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  if (v2)
  {
    if (!v5)
      return 0;
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_22798412C(v11, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  if (v4)
  {
    if (!v8)
      return 0;
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_2279842A0(v13, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v3)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      v15 = swift_bridgeObjectRetain();
      v16 = sub_2279844F8(v15, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        return 1;
    }
  }
  else if (!v7)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_227996D18()
{
  unint64_t result;

  result = qword_2559060A8;
  if (!qword_2559060A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A578C, &type metadata for PromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559060A8);
  }
  return result;
}

unint64_t sub_227996D5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2559060B0;
  if (!qword_2559060B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905D98);
    v2 = sub_22794F9A4(&qword_2559060B8, type metadata accessor for PromotionalAssets.PhoneWallpaper, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhoneWallpaper);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2559060B0);
  }
  return result;
}

unint64_t sub_227996DD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2559060C0;
  if (!qword_2559060C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905DA8);
    v2 = sub_22794F9A4(&qword_2559060C8, type metadata accessor for PromotionalAssets.WatchFace, (uint64_t)&protocol conformance descriptor for PromotionalAssets.WatchFace);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2559060C0);
  }
  return result;
}

unint64_t sub_227996E54()
{
  unint64_t result;

  result = qword_2559060E0;
  if (!qword_2559060E0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets.PhotoAlbum, &type metadata for PromotionalAssets.PhotoAlbum);
    atomic_store(result, (unint64_t *)&qword_2559060E0);
  }
  return result;
}

unint64_t sub_227996E98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2559060E8;
  if (!qword_2559060E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905DB8);
    v2 = sub_22794F9A4(&qword_2559060F0, type metadata accessor for PromotionalAssets.Video, (uint64_t)&protocol conformance descriptor for PromotionalAssets.Video);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2559060E8);
  }
  return result;
}

unint64_t sub_227996F14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255906100;
  if (!qword_255906100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905D98);
    v2 = sub_22794F9A4(&qword_255906108, type metadata accessor for PromotionalAssets.PhoneWallpaper, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhoneWallpaper);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255906100);
  }
  return result;
}

unint64_t sub_227996F90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255906110;
  if (!qword_255906110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905DA8);
    v2 = sub_22794F9A4(&qword_255906118, type metadata accessor for PromotionalAssets.WatchFace, (uint64_t)&protocol conformance descriptor for PromotionalAssets.WatchFace);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255906110);
  }
  return result;
}

uint64_t sub_22799700C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559060D0);
    v8 = a2();
    result = MEMORY[0x22E2A1174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227997074()
{
  unint64_t result;

  result = qword_255906128;
  if (!qword_255906128)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets.PhotoAlbum, &type metadata for PromotionalAssets.PhotoAlbum);
    atomic_store(result, (unint64_t *)&qword_255906128);
  }
  return result;
}

unint64_t sub_2279970B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255906130;
  if (!qword_255906130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255905DB8);
    v2 = sub_22794F9A4(&qword_255906138, type metadata accessor for PromotionalAssets.Video, (uint64_t)&protocol conformance descriptor for PromotionalAssets.Video);
    result = MEMORY[0x22E2A1174](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255906130);
  }
  return result;
}

uint64_t sub_227997134()
{
  return sub_22794F9A4(&qword_255906148, type metadata accessor for PromotionalAssets.PhoneWallpaper, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhoneWallpaper);
}

uint64_t sub_227997160()
{
  return sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
}

uint64_t sub_22799718C()
{
  return sub_22794F9A4(&qword_255906150, type metadata accessor for PromotionalAssets.WatchFace, (uint64_t)&protocol conformance descriptor for PromotionalAssets.WatchFace);
}

uint64_t sub_2279971B8()
{
  return sub_22794F9A4(&qword_255906158, type metadata accessor for PromotionalAssets.PhotoAlbum.Photo, (uint64_t)&protocol conformance descriptor for PromotionalAssets.PhotoAlbum.Photo);
}

unint64_t sub_2279971E8()
{
  unint64_t result;

  result = qword_255906160;
  if (!qword_255906160)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets.PhotoAlbum, &type metadata for PromotionalAssets.PhotoAlbum);
    atomic_store(result, (unint64_t *)&qword_255906160);
  }
  return result;
}

uint64_t sub_22799722C()
{
  return sub_22794F9A4(&qword_255906168, type metadata accessor for PromotionalAssets.Video, (uint64_t)&protocol conformance descriptor for PromotionalAssets.Video);
}

unint64_t sub_22799725C()
{
  unint64_t result;

  result = qword_255906170;
  if (!qword_255906170)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for PromotionalAssets, &type metadata for PromotionalAssets);
    atomic_store(result, (unint64_t *)&qword_255906170);
  }
  return result;
}

uint64_t destroy for PromotionalAssets()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PromotionalAssets(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PromotionalAssets(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PromotionalAssets(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets()
{
  return &type metadata for PromotionalAssets;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets.PhoneWallpaper()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.PhoneWallpaper()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PromotionalAssets.WatchFace(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EFE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for PromotionalAssets.WatchFace(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_22799EFE0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for PromotionalAssets.WatchFace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22799EFE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for PromotionalAssets.WatchFace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22799EFE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for PromotionalAssets.WatchFace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22799EFE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for PromotionalAssets.WatchFace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22799EFE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets.WatchFace()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2279977D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.WatchFace()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227997820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_227997860()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets.PhotoAlbum()
{
  return &type metadata for PromotionalAssets.PhotoAlbum;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV14PhoneWallpaperVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets.PhotoAlbum.Photo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.PhotoAlbum.Photo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_227997AF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PromotionalAssets.Video(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_22799EFE0();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(&v4[a3[7]], &a2[a3[7]], v12);
    v13(&v4[a3[8]], &a2[a3[8]], v12);
  }
  return v4;
}

uint64_t destroy for PromotionalAssets.Video(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_22799EFE0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(a1 + a2[7], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[8], v5);
}

char *initializeWithCopy for PromotionalAssets.Video(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  v8 = a3[6];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_22799EFE0();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  return a1;
}

char *assignWithCopy for PromotionalAssets.Video(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22799EFE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  return a1;
}

char *initializeWithTake for PromotionalAssets.Video(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_22799EFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  return a1;
}

char *assignWithTake for PromotionalAssets.Video(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_22799EFE0();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalAssets.Video()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227997FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.Video()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227998060(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2279980D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_227998198 + 4 * byte_2279A4C6E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2279981CC + 4 * byte_2279A4C69[v4]))();
}

uint64_t sub_2279981CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279981D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279981DCLL);
  return result;
}

uint64_t sub_2279981E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279981F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2279981F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279981FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets.CodingKeys()
{
  return &type metadata for PromotionalAssets.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PromotionalAssets.Video.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_227998264 + 4 * byte_2279A4C78[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_227998298 + 4 * byte_2279A4C73[v4]))();
}

uint64_t sub_227998298(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279982A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2279982A8);
  return result;
}

uint64_t sub_2279982B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279982BCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2279982C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279982C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets.Video.CodingKeys()
{
  return &type metadata for PromotionalAssets.Video.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalAssets.PhotoAlbum.CodingKeys()
{
  return &type metadata for PromotionalAssets.PhotoAlbum.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalAssets.PhotoAlbum.Photo.CodingKeys()
{
  return &type metadata for PromotionalAssets.PhotoAlbum.Photo.CodingKeys;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV10PhotoAlbumV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227998358 + 4 * byte_2279A4C82[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22799838C + 4 * byte_2279A4C7D[v4]))();
}

uint64_t sub_22799838C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227998394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22799839CLL);
  return result;
}

uint64_t sub_2279983A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2279983B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2279983B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2279983BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets.WatchFace.CodingKeys()
{
  return &type metadata for PromotionalAssets.WatchFace.CodingKeys;
}

uint64_t _s12ShazamEvents17PromotionalAssetsV10PhotoAlbumV5PhotoV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_227998418 + 4 * byte_2279A4C87[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227998438 + 4 * byte_2279A4C8C[v4]))();
}

_BYTE *sub_227998418(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227998438(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227998440(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227998448(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227998450(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227998458(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalAssets.PhoneWallpaper.CodingKeys()
{
  return &type metadata for PromotionalAssets.PhoneWallpaper.CodingKeys;
}

unint64_t sub_227998478()
{
  unint64_t result;

  result = qword_2559063C8;
  if (!qword_2559063C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A53CC, &type metadata for PromotionalAssets.PhoneWallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063C8);
  }
  return result;
}

unint64_t sub_2279984C0()
{
  unint64_t result;

  result = qword_2559063D0;
  if (!qword_2559063D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5484, &type metadata for PromotionalAssets.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063D0);
  }
  return result;
}

unint64_t sub_227998508()
{
  unint64_t result;

  result = qword_2559063D8;
  if (!qword_2559063D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A553C, &type metadata for PromotionalAssets.PhotoAlbum.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063D8);
  }
  return result;
}

unint64_t sub_227998550()
{
  unint64_t result;

  result = qword_2559063E0;
  if (!qword_2559063E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A55F4, &type metadata for PromotionalAssets.PhotoAlbum.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063E0);
  }
  return result;
}

unint64_t sub_227998598()
{
  unint64_t result;

  result = qword_2559063E8;
  if (!qword_2559063E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A56AC, &type metadata for PromotionalAssets.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063E8);
  }
  return result;
}

unint64_t sub_2279985E0()
{
  unint64_t result;

  result = qword_2559063F0;
  if (!qword_2559063F0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5764, &type metadata for PromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063F0);
  }
  return result;
}

unint64_t sub_227998628()
{
  unint64_t result;

  result = qword_2559063F8;
  if (!qword_2559063F8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A56D4, &type metadata for PromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559063F8);
  }
  return result;
}

unint64_t sub_227998670()
{
  unint64_t result;

  result = qword_255906400;
  if (!qword_255906400)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A56FC, &type metadata for PromotionalAssets.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906400);
  }
  return result;
}

unint64_t sub_2279986B8()
{
  unint64_t result;

  result = qword_255906408;
  if (!qword_255906408)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A561C, &type metadata for PromotionalAssets.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906408);
  }
  return result;
}

unint64_t sub_227998700()
{
  unint64_t result;

  result = qword_255906410;
  if (!qword_255906410)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5644, &type metadata for PromotionalAssets.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906410);
  }
  return result;
}

unint64_t sub_227998748()
{
  unint64_t result;

  result = qword_255906418;
  if (!qword_255906418)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5564, &type metadata for PromotionalAssets.PhotoAlbum.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906418);
  }
  return result;
}

unint64_t sub_227998790()
{
  unint64_t result;

  result = qword_255906420;
  if (!qword_255906420)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A558C, &type metadata for PromotionalAssets.PhotoAlbum.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906420);
  }
  return result;
}

unint64_t sub_2279987D8()
{
  unint64_t result;

  result = qword_255906428;
  if (!qword_255906428)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A54AC, &type metadata for PromotionalAssets.PhotoAlbum.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906428);
  }
  return result;
}

unint64_t sub_227998820()
{
  unint64_t result;

  result = qword_255906430;
  if (!qword_255906430)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A54D4, &type metadata for PromotionalAssets.PhotoAlbum.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906430);
  }
  return result;
}

unint64_t sub_227998868()
{
  unint64_t result;

  result = qword_255906438;
  if (!qword_255906438)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A53F4, &type metadata for PromotionalAssets.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906438);
  }
  return result;
}

unint64_t sub_2279988B0()
{
  unint64_t result;

  result = qword_255906440;
  if (!qword_255906440)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A541C, &type metadata for PromotionalAssets.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906440);
  }
  return result;
}

unint64_t sub_2279988F8()
{
  unint64_t result;

  result = qword_255906448;
  if (!qword_255906448)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A533C, &type metadata for PromotionalAssets.PhoneWallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906448);
  }
  return result;
}

unint64_t sub_227998940()
{
  unint64_t result;

  result = qword_255906450;
  if (!qword_255906450)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5364, &type metadata for PromotionalAssets.PhoneWallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906450);
  }
  return result;
}

uint64_t sub_227998984(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5577656976657270 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227998A70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736F746F6870 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227998B64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C52556F65646976 && a2 == 0xE800000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F65646956736C68 && a2 == 0xEB000000004C5255 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4977656976657270 && a2 == 0xEF4C52556567616DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_227998DC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6157656E6F6870 && a2 == 0xEF7372657061706CLL;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6361466863746177 && a2 == 0xEA00000000007365 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x626C416F746F6870 && a2 == 0xEB00000000736D75 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F65646976 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_227998FC0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906660);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C594();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255906648);
  sub_22799C6E8(&qword_255906668, &qword_255906648, (uint64_t (*)(void))sub_22799C61C, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2279990E8()
{
  return sub_22799F130();
}

uint64_t sub_2279990FC@<X0>(BOOL *a1@<X8>)
{
  return sub_2279994A8(a1);
}

uint64_t sub_227999108@<X0>(BOOL *a1@<X8>)
{
  return sub_227999514(a1);
}

uint64_t sub_227999114()
{
  sub_22799D0BC();
  return sub_22799F52C();
}

uint64_t sub_22799913C()
{
  sub_22799D0BC();
  return sub_22799F538();
}

uint64_t sub_227999164@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2279995E0(a1, &qword_255906788, (void (*)(void))sub_22799D0BC, a2);
}

uint64_t sub_227999190(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22799973C(a1, a2, a3, &qword_255906798, (void (*)(void))sub_22799D0BC);
}

uint64_t sub_2279991BC()
{
  return 0x736F746F6870;
}

uint64_t sub_2279991D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736F746F6870 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22799925C()
{
  sub_22799C594();
  return sub_22799F52C();
}

uint64_t sub_227999284()
{
  sub_22799C594();
  return sub_22799F538();
}

_QWORD *sub_2279992AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_22799C05C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2279992D4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_227998FC0(a1, *v1);
}

uint64_t sub_2279992EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559066A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C660();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255906688);
  sub_22799C6E8(&qword_2559066A8, &qword_255906688, (uint64_t (*)(void))sub_22799C74C, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_227999410()
{
  sub_22799F4B4();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_227999458()
{
  sub_22799F4B4();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_22799949C@<X0>(BOOL *a1@<X8>)
{
  return sub_2279994A8(a1);
}

uint64_t sub_2279994A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22799F34C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2279994F4(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_227999508@<X0>(BOOL *a1@<X8>)
{
  return sub_227999514(a1);
}

uint64_t sub_227999514@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22799F34C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_227999564()
{
  sub_22799D100();
  return sub_22799F52C();
}

uint64_t sub_22799958C()
{
  sub_22799D100();
  return sub_22799F538();
}

uint64_t sub_2279995B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2279995E0(a1, &qword_2559067A0, (void (*)(void))sub_22799D100, a2);
}

uint64_t sub_2279995E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_22799F508();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v17;
  v11 = v18;
  v12 = sub_22799F370();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v12;
  v10[1] = v14;
  return result;
}

uint64_t sub_227999710(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22799973C(a1, a2, a3, &qword_2559067B0, (void (*)(void))sub_22799D100);
}

uint64_t sub_22799973C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  void (*v13)(void);

  v13 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_22799F520();
  sub_22799F3D0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_227999834()
{
  return 0x657061706C6C6177;
}

uint64_t sub_227999850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x657061706C6C6177 && a2 == 0xEA00000000007372)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2279998F0()
{
  sub_22799C660();
  return sub_22799F52C();
}

uint64_t sub_227999918()
{
  sub_22799C660();
  return sub_22799F538();
}

_QWORD *sub_227999940@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_22799C1A8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_227999968(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2279992EC(a1, *v1);
}

uint64_t sub_227999980(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559065D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C018();
  sub_22799F520();
  type metadata accessor for VideoAttributes.Video(0);
  v13 = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v1)
  {
    v12 = 1;
    sub_22799F400();
    v11 = 2;
    sub_22799F3D0();
    v10 = 3;
    sub_22799F3D0();
    v9 = 4;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_227999B74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v34 = a2;
  v38 = sub_22799EFE0();
  v35 = *(_QWORD *)(v38 - 8);
  v3 = MEMORY[0x24BDAC7A8](v38);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v31 - v6;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559065C8);
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VideoAttributes.Video(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C018();
  v39 = v9;
  v13 = v40;
  sub_22799F508();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = v7;
  v40 = a1;
  v45 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_22799F3A0();
  v31 = (uint64_t *)v12;
  v32 = v10;
  v14 = &v12[*(int *)(v10 + 20)];
  v15 = v37;
  v16 = v38;
  v37 = *(char **)(v35 + 32);
  ((void (*)(char *, char *, uint64_t))v37)(v14, v15, v38);
  v44 = 1;
  sub_22799F3A0();
  v17 = v16;
  v18 = v31;
  v19 = v32;
  ((void (*)(char *, char *, uint64_t))v37)((char *)v31 + *(int *)(v32 + 24), v5, v17);
  v43 = 2;
  v20 = sub_22799F370();
  v21 = (uint64_t *)((char *)v18 + *(int *)(v19 + 28));
  *v21 = v20;
  v21[1] = v22;
  v42 = 3;
  *v18 = sub_22799F370();
  v18[1] = v23;
  v41 = 4;
  v24 = sub_22799F370();
  v25 = (uint64_t)v40;
  v26 = v24;
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v36);
  v29 = (uint64_t *)((char *)v18 + *(int *)(v19 + 32));
  *v29 = v26;
  v29[1] = v28;
  sub_22794F9E4((uint64_t)v18, v34, type metadata accessor for VideoAttributes.Video);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_22794FB54((uint64_t)v18, type metadata accessor for VideoAttributes.Video);
}

uint64_t sub_227999F88(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906608);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C488();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559065F0);
  sub_22799C4CC(&qword_255906610, &qword_255906618, (uint64_t)&unk_2279A5C44, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_22799A0AC(char *a1)
{
  sub_227946020(*a1);
}

void sub_22799A0B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22799F4B4();
  __asm { BR              X9 }
}

uint64_t sub_22799A0FC()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

void sub_22799A174()
{
  __asm { BR              X10 }
}

uint64_t sub_22799A1A8()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

void sub_22799A20C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22799F4B4();
  __asm { BR              X9 }
}

uint64_t sub_22799A24C()
{
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_22799A2C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22799C2F4();
  *a1 = result;
  return result;
}

uint64_t sub_22799A2F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_22799A318 + 4 * byte_2279A597F[*v0]))();
}

void sub_22799A318(_QWORD *a1@<X8>)
{
  *a1 = 0x6C7255736C68;
  a1[1] = 0xE600000000000000;
}

void sub_22799A330(_QWORD *a1@<X8>)
{
  *a1 = 0x5577656976657270;
  a1[1] = 0xEA00000000006C72;
}

void sub_22799A350(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

void sub_22799A360(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_22799A378()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22799A3A0 + 4 * byte_2279A5984[*v0]))(7107189, 0xE300000000000000);
}

uint64_t sub_22799A3A0()
{
  return 0x6C7255736C68;
}

uint64_t sub_22799A3B4()
{
  return 0x5577656976657270;
}

uint64_t sub_22799A3D0()
{
  return 25705;
}

uint64_t sub_22799A3DC()
{
  return 0x656C746974;
}

uint64_t sub_22799A3F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22799C2F4();
  *a1 = result;
  return result;
}

uint64_t sub_22799A414()
{
  sub_22799C018();
  return sub_22799F52C();
}

uint64_t sub_22799A43C()
{
  sub_22799C018();
  return sub_22799F538();
}

uint64_t sub_22799A464@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227999B74(a1, a2);
}

uint64_t sub_22799A478(_QWORD *a1)
{
  return sub_227999980(a1);
}

uint64_t sub_22799A48C()
{
  return 0x736F65646976;
}

uint64_t sub_22799A4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736F65646976 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22799A52C()
{
  sub_22799C488();
  return sub_22799F52C();
}

uint64_t sub_22799A554()
{
  sub_22799C488();
  return sub_22799F538();
}

_QWORD *sub_22799A57C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_22799C33C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_22799A5A4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_227999F88(a1, *v1);
}

uint64_t sub_22799A5BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  char *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t result;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int *v34;
  uint64_t **v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  void (*v45)(char *, char *, _QWORD *);
  uint64_t v46;
  int *v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;

  v53 = a3;
  v48 = a4;
  v6 = sub_22799EF2C();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255904040);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v47 - v12;
  v60 = (_QWORD *)sub_22799EFE0();
  v54 = *(v60 - 1);
  MEMORY[0x24BDAC7A8](v60);
  v55 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (int *)type metadata accessor for VideoAttributes.Video(0);
  v15 = v47[7];
  v52 = a1;
  v16 = (uint64_t *)((char *)a1 + v15);
  v18 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_22798A530(v18, v17, a2);
  v59 = v19;
  v56 = 123;
  v57 = 0xE100000000000000;
  sub_22794F890();
  v20 = sub_22799F28C();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0
    && (v58 = sub_22798A530(v18, v17, a2),
        v59 = v21,
        v56 = 125,
        v57 = 0xE100000000000000,
        v22 = sub_22799F28C(),
        swift_bridgeObjectRelease(),
        (v22 & 1) != 0))
  {
    v23 = v54;
    v24 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v54 + 56))(v13, 1, 1, v60);
  }
  else
  {
    sub_22798A530(v18, v17, a2);
    sub_22799EFD4();
    swift_bridgeObjectRelease();
    sub_22798A818((uint64_t)v11, (uint64_t)v13);
    v24 = v60;
    v23 = v54;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v23 + 48))(v13, 1, v24);
  v26 = v55;
  if (v25 == 1)
  {
    sub_22797EED4((uint64_t)v13);
    sub_22797054C();
    v27 = swift_allocError();
    *v28 = 2;
    result = swift_willThrow();
  }
  else
  {
    v60 = *(_QWORD **)(v23 + 32);
    ((void (*)(char *, char *, _QWORD *))v60)(v55, v13, v24);
    v30 = v52;
    v31 = v52[1];
    v54 = *v52;
    v58 = v54;
    v59 = v31;
    swift_bridgeObjectRetain_n();
    v32 = v49;
    sub_22799EF20();
    sub_22799F274();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v51);
    v33 = sub_22799F13C();
    swift_bridgeObjectRelease();
    if (v33 > 0)
    {
      swift_bridgeObjectRelease();
      v34 = v47;
      v35 = (uint64_t **)((char *)v30 + v47[8]);
      v37 = *v35;
      v36 = (uint64_t)v35[1];
      v53 = v37;
      v51 = v36;
      v38 = (char *)v30 + v47[5];
      v39 = type metadata accessor for PromotionalAssets.Video(0);
      v40 = v23;
      v41 = v26;
      v42 = v30;
      v43 = v39;
      v44 = v48;
      v45 = *(void (**)(char *, char *, _QWORD *))(v40 + 16);
      v45((char *)v48 + *(int *)(v39 + 24), v38, v24);
      v45((char *)v44 + *(int *)(v43 + 28), (char *)v42 + v34[6], v24);
      ((void (*)(char *, char *, _QWORD *))v60)((char *)v44 + *(int *)(v43 + 32), v41, v24);
      *v44 = v54;
      v44[1] = v31;
      v46 = v51;
      v44[2] = (uint64_t)v53;
      v44[3] = v46;
      return swift_bridgeObjectRetain();
    }
    sub_22794F8D4();
    v27 = swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, _QWORD *))(v23 + 8))(v26, v24);
  }
  *v53 = v27;
  return result;
}

uint64_t type metadata accessor for VideoAttributes.Video(uint64_t a1)
{
  return sub_2279518A8(a1, qword_2559064B0);
}

uint64_t sub_22799AA1C(char *a1, char *a2)
{
  return sub_227945D44(*a1, *a2);
}

uint64_t sub_22799AA28()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_22799AAA4()
{
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22799AAFC()
{
  sub_22799F4B4();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4E4();
}

uint64_t sub_22799AB74@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22799F34C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_22799ABD0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7107189;
  if (*v1)
    v2 = 0x5577656976657270;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xEA00000000006C72;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_22799AC0C()
{
  _BYTE *v0;

  if (*v0)
    return 0x5577656976657270;
  else
    return 7107189;
}

uint64_t sub_22799AC44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22799F34C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_22799ACA4()
{
  sub_22799C550();
  return sub_22799F52C();
}

uint64_t sub_22799ACCC()
{
  sub_22799C550();
  return sub_22799F538();
}

uint64_t sub_22799ACF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C550();
  sub_22799F520();
  v8[15] = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v1)
  {
    type metadata accessor for WatchFaceAttributes.WatchFace(0);
    v8[14] = 1;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22799AE48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v23 = a2;
  v26 = sub_22799EFE0();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906620);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WatchFaceAttributes.WatchFace(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C550();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v22 = v5;
  v11 = (uint64_t)v10;
  v12 = v24;
  v29 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v13 = v26;
  v14 = v25;
  sub_22799F3A0();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v27, v13);
  v28 = 1;
  v15 = sub_22799F370();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v14);
  v18 = (uint64_t *)(v11 + *(int *)(v8 + 20));
  *v18 = v15;
  v18[1] = v17;
  sub_22794F9E4(v11, v23, type metadata accessor for WatchFaceAttributes.WatchFace);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_22794FB54(v11, type metadata accessor for WatchFaceAttributes.WatchFace);
}

uint64_t sub_22799B0D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559066E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C8DC();
  sub_22799F520();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2559066C8);
  sub_22799C920(&qword_2559066E8, &qword_2559066F0, (uint64_t)&unk_2279A5B88, MEMORY[0x24BEE12A0]);
  sub_22799F400();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_22799B1F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22799AE48(a1, a2);
}

uint64_t sub_22799B208(_QWORD *a1)
{
  return sub_22799ACF4(a1);
}

uint64_t sub_22799B21C()
{
  return 0x6361466863746177;
}

uint64_t sub_22799B238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6361466863746177 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22799F430();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22799B2D8()
{
  sub_22799C8DC();
  return sub_22799F52C();
}

uint64_t sub_22799B300()
{
  sub_22799C8DC();
  return sub_22799F538();
}

_QWORD *sub_22799B328@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_22799C790(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_22799B350(_QWORD *a1)
{
  uint64_t *v1;

  return sub_22799B0D0(a1, *v1);
}

char *sub_22799B368(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_22799EFE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = &v4[v13];
    v16 = &a2[v13];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = &v4[v14];
    v19 = &a2[v14];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22799B458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22799EFE0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_22799B4E4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_22799EFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_22799B5A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22799EFE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22799B6A4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22799EFE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_22799B744(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_22799EFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v16 = *v14;
  v15 = v14[1];
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = (uint64_t *)&a2[v17];
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22799B810()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799B81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22799B898()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799B8A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_22799EFE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_22799B918()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAttributes()
{
  return &type metadata for VideoAttributes;
}

uint64_t *sub_22799B9A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EFE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22799BA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22799BA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22799BB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22799BB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22799BBE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799BBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22799BC6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799BC78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22799EFE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WatchFaceAttributes.WatchFace(uint64_t a1)
{
  return sub_2279518A8(a1, qword_255906550);
}

uint64_t sub_22799BD08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotoAlbumAttributes()
{
  return &type metadata for PhotoAlbumAttributes;
}

ValueMetadata *type metadata accessor for WallpaperAttributes()
{
  return &type metadata for WallpaperAttributes;
}

ValueMetadata *type metadata accessor for WatchFaceAttributes()
{
  return &type metadata for WatchFaceAttributes;
}

uint64_t sub_22799BDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22799BDBC, (uint64_t (*)(void))sub_22799BE00);
}

unint64_t sub_22799BDBC()
{
  unint64_t result;

  result = qword_255906588;
  if (!qword_255906588)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5A6C, &type metadata for WatchFaceAttributes);
    atomic_store(result, (unint64_t *)&qword_255906588);
  }
  return result;
}

unint64_t sub_22799BE00()
{
  unint64_t result;

  result = qword_255906590;
  if (!qword_255906590)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5A44, &type metadata for WatchFaceAttributes);
    atomic_store(result, (unint64_t *)&qword_255906590);
  }
  return result;
}

uint64_t sub_22799BE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22799BE58, (uint64_t (*)(void))sub_22799BE9C);
}

unint64_t sub_22799BE58()
{
  unint64_t result;

  result = qword_255906598;
  if (!qword_255906598)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5AD8, &type metadata for WallpaperAttributes);
    atomic_store(result, (unint64_t *)&qword_255906598);
  }
  return result;
}

unint64_t sub_22799BE9C()
{
  unint64_t result;

  result = qword_2559065A0;
  if (!qword_2559065A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5AB0, &type metadata for WallpaperAttributes);
    atomic_store(result, (unint64_t *)&qword_2559065A0);
  }
  return result;
}

uint64_t sub_22799BEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22799BEF4, (uint64_t (*)(void))sub_22799BF38);
}

unint64_t sub_22799BEF4()
{
  unint64_t result;

  result = qword_2559065A8;
  if (!qword_2559065A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5B44, &type metadata for PhotoAlbumAttributes);
    atomic_store(result, (unint64_t *)&qword_2559065A8);
  }
  return result;
}

unint64_t sub_22799BF38()
{
  unint64_t result;

  result = qword_2559065B0;
  if (!qword_2559065B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5B1C, &type metadata for PhotoAlbumAttributes);
    atomic_store(result, (unint64_t *)&qword_2559065B0);
  }
  return result;
}

uint64_t sub_22799BF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22796B2CC(a1, a2, a3, (uint64_t (*)(void))sub_22799BF90, (uint64_t (*)(void))sub_22799BFD4);
}

unint64_t sub_22799BF90()
{
  unint64_t result;

  result = qword_2559065B8;
  if (!qword_2559065B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5C00, &type metadata for VideoAttributes);
    atomic_store(result, (unint64_t *)&qword_2559065B8);
  }
  return result;
}

unint64_t sub_22799BFD4()
{
  unint64_t result;

  result = qword_2559065C0;
  if (!qword_2559065C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5BD8, &type metadata for VideoAttributes);
    atomic_store(result, (unint64_t *)&qword_2559065C0);
  }
  return result;
}

unint64_t sub_22799C018()
{
  unint64_t result;

  result = qword_2559065D0;
  if (!qword_2559065D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A63A0, &type metadata for VideoAttributes.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559065D0);
  }
  return result;
}

_QWORD *sub_22799C05C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906638);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C594();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255906648);
    sub_22799C6E8(&qword_255906650, &qword_255906648, (uint64_t (*)(void))sub_22799C5D8, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

_QWORD *sub_22799C1A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255906678);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C660();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255906688);
    sub_22799C6E8(&qword_255906690, &qword_255906688, (uint64_t (*)(void))sub_22799C6A4, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_22799C2F4()
{
  unint64_t v0;

  v0 = sub_22799F34C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

_QWORD *sub_22799C33C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559065E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C488();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559065F0);
    sub_22799C4CC(&qword_2559065F8, &qword_255906600, (uint64_t)&unk_2279A5C6C, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_22799C488()
{
  unint64_t result;

  result = qword_2559065E8;
  if (!qword_2559065E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6350, &type metadata for VideoAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559065E8);
  }
  return result;
}

uint64_t sub_22799C4CC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559065F0);
    v10 = sub_22794F9A4(a2, type metadata accessor for VideoAttributes.Video, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22799C550()
{
  unint64_t result;

  result = qword_255906628;
  if (!qword_255906628)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6300, &type metadata for WatchFaceAttributes.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906628);
  }
  return result;
}

unint64_t sub_22799C594()
{
  unint64_t result;

  result = qword_255906640;
  if (!qword_255906640)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A62B0, &type metadata for PhotoAlbumAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906640);
  }
  return result;
}

unint64_t sub_22799C5D8()
{
  unint64_t result;

  result = qword_255906658;
  if (!qword_255906658)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6288, &type metadata for PhotoAlbumAttributes.Photo);
    atomic_store(result, (unint64_t *)&qword_255906658);
  }
  return result;
}

unint64_t sub_22799C61C()
{
  unint64_t result;

  result = qword_255906670;
  if (!qword_255906670)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6260, &type metadata for PhotoAlbumAttributes.Photo);
    atomic_store(result, (unint64_t *)&qword_255906670);
  }
  return result;
}

unint64_t sub_22799C660()
{
  unint64_t result;

  result = qword_255906680;
  if (!qword_255906680)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6210, &type metadata for WallpaperAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906680);
  }
  return result;
}

unint64_t sub_22799C6A4()
{
  unint64_t result;

  result = qword_255906698;
  if (!qword_255906698)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A61E8, &type metadata for WallpaperAttributes.Wallpaper);
    atomic_store(result, (unint64_t *)&qword_255906698);
  }
  return result;
}

uint64_t sub_22799C6E8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x22E2A1174](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22799C74C()
{
  unint64_t result;

  result = qword_2559066B0;
  if (!qword_2559066B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A61C0, &type metadata for WallpaperAttributes.Wallpaper);
    atomic_store(result, (unint64_t *)&qword_2559066B0);
  }
  return result;
}

_QWORD *sub_22799C790(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559066B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799C8DC();
  sub_22799F508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2559066C8);
    sub_22799C920(&qword_2559066D0, &qword_2559066D8, (uint64_t)&unk_2279A5BB0, MEMORY[0x24BEE12D0]);
    sub_22799F3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_22799C8DC()
{
  unint64_t result;

  result = qword_2559066C0;
  if (!qword_2559066C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6170, &type metadata for WatchFaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559066C0);
  }
  return result;
}

uint64_t sub_22799C920(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2559066C8);
    v10 = sub_22794F9A4(a2, type metadata accessor for WatchFaceAttributes.WatchFace, a3);
    result = MEMORY[0x22E2A1174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchFaceAttributes.CodingKeys()
{
  return &type metadata for WatchFaceAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for WallpaperAttributes.CodingKeys()
{
  return &type metadata for WallpaperAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PhotoAlbumAttributes.CodingKeys()
{
  return &type metadata for PhotoAlbumAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WatchFaceAttributes.WatchFace.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22799CA24 + 4 * byte_2279A598E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22799CA58 + 4 * byte_2279A5989[v4]))();
}

uint64_t sub_22799CA58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799CA60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22799CA68);
  return result;
}

uint64_t sub_22799CA74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22799CA7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22799CA80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799CA88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchFaceAttributes.WatchFace.CodingKeys()
{
  return &type metadata for WatchFaceAttributes.WatchFace.CodingKeys;
}

ValueMetadata *type metadata accessor for VideoAttributes.CodingKeys()
{
  return &type metadata for VideoAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VideoAttributes.Video.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22799CB00 + 4 * byte_2279A5998[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22799CB34 + 4 * byte_2279A5993[v4]))();
}

uint64_t sub_22799CB34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799CB3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22799CB44);
  return result;
}

uint64_t sub_22799CB50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22799CB58);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22799CB5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799CB64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAttributes.Video.CodingKeys()
{
  return &type metadata for VideoAttributes.Video.CodingKeys;
}

ValueMetadata *type metadata accessor for PhotoAlbumAttributes.Photo()
{
  return &type metadata for PhotoAlbumAttributes.Photo;
}

ValueMetadata *type metadata accessor for WallpaperAttributes.Wallpaper()
{
  return &type metadata for WallpaperAttributes.Wallpaper;
}

unint64_t sub_22799CBB0()
{
  unint64_t result;

  result = qword_2559066F8;
  if (!qword_2559066F8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5D78, &type metadata for VideoAttributes.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559066F8);
  }
  return result;
}

unint64_t sub_22799CBF8()
{
  unint64_t result;

  result = qword_255906700;
  if (!qword_255906700)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5E30, &type metadata for VideoAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906700);
  }
  return result;
}

unint64_t sub_22799CC40()
{
  unint64_t result;

  result = qword_255906708;
  if (!qword_255906708)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5F20, &type metadata for WatchFaceAttributes.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906708);
  }
  return result;
}

unint64_t sub_22799CC88()
{
  unint64_t result;

  result = qword_255906710;
  if (!qword_255906710)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5FD8, &type metadata for PhotoAlbumAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906710);
  }
  return result;
}

unint64_t sub_22799CCD0()
{
  unint64_t result;

  result = qword_255906718;
  if (!qword_255906718)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6090, &type metadata for WallpaperAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906718);
  }
  return result;
}

unint64_t sub_22799CD18()
{
  unint64_t result;

  result = qword_255906720;
  if (!qword_255906720)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6148, &type metadata for WatchFaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906720);
  }
  return result;
}

unint64_t sub_22799CD60()
{
  unint64_t result;

  result = qword_255906728;
  if (!qword_255906728)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A60B8, &type metadata for WatchFaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906728);
  }
  return result;
}

unint64_t sub_22799CDA8()
{
  unint64_t result;

  result = qword_255906730;
  if (!qword_255906730)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A60E0, &type metadata for WatchFaceAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906730);
  }
  return result;
}

unint64_t sub_22799CDF0()
{
  unint64_t result;

  result = qword_255906738;
  if (!qword_255906738)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6000, &type metadata for WallpaperAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906738);
  }
  return result;
}

unint64_t sub_22799CE38()
{
  unint64_t result;

  result = qword_255906740;
  if (!qword_255906740)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6028, &type metadata for WallpaperAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906740);
  }
  return result;
}

unint64_t sub_22799CE80()
{
  unint64_t result;

  result = qword_255906748;
  if (!qword_255906748)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5F48, &type metadata for PhotoAlbumAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906748);
  }
  return result;
}

unint64_t sub_22799CEC8()
{
  unint64_t result;

  result = qword_255906750;
  if (!qword_255906750)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5F70, &type metadata for PhotoAlbumAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906750);
  }
  return result;
}

unint64_t sub_22799CF10()
{
  unint64_t result;

  result = qword_255906758;
  if (!qword_255906758)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5E58, &type metadata for WatchFaceAttributes.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906758);
  }
  return result;
}

unint64_t sub_22799CF58()
{
  unint64_t result;

  result = qword_255906760;
  if (!qword_255906760)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5E80, &type metadata for WatchFaceAttributes.WatchFace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906760);
  }
  return result;
}

unint64_t sub_22799CFA0()
{
  unint64_t result;

  result = qword_255906768;
  if (!qword_255906768)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5DA0, &type metadata for VideoAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906768);
  }
  return result;
}

unint64_t sub_22799CFE8()
{
  unint64_t result;

  result = qword_255906770;
  if (!qword_255906770)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5DC8, &type metadata for VideoAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906770);
  }
  return result;
}

unint64_t sub_22799D030()
{
  unint64_t result;

  result = qword_255906778;
  if (!qword_255906778)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5CB0, &type metadata for VideoAttributes.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906778);
  }
  return result;
}

unint64_t sub_22799D078()
{
  unint64_t result;

  result = qword_255906780;
  if (!qword_255906780)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A5CD8, &type metadata for VideoAttributes.Video.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906780);
  }
  return result;
}

unint64_t sub_22799D0BC()
{
  unint64_t result;

  result = qword_255906790;
  if (!qword_255906790)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6620, &type metadata for PhotoAlbumAttributes.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255906790);
  }
  return result;
}

unint64_t sub_22799D100()
{
  unint64_t result;

  result = qword_2559067A8;
  if (!qword_2559067A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A65D0, &type metadata for WallpaperAttributes.Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WallpaperAttributes.Wallpaper.CodingKeys()
{
  return &type metadata for WallpaperAttributes.Wallpaper.CodingKeys;
}

uint64_t _s12ShazamEvents19WatchFaceAttributesV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22799D194 + 4 * byte_2279A599D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22799D1B4 + 4 * byte_2279A59A2[v4]))();
}

_BYTE *sub_22799D194(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22799D1B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22799D1BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22799D1C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22799D1CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22799D1D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PhotoAlbumAttributes.Photo.CodingKeys()
{
  return &type metadata for PhotoAlbumAttributes.Photo.CodingKeys;
}

unint64_t sub_22799D1F4()
{
  unint64_t result;

  result = qword_2559067B8;
  if (!qword_2559067B8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A64B8, &type metadata for PhotoAlbumAttributes.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067B8);
  }
  return result;
}

unint64_t sub_22799D23C()
{
  unint64_t result;

  result = qword_2559067C0;
  if (!qword_2559067C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A65A8, &type metadata for WallpaperAttributes.Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067C0);
  }
  return result;
}

unint64_t sub_22799D284()
{
  unint64_t result;

  result = qword_2559067C8;
  if (!qword_2559067C8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A64E0, &type metadata for WallpaperAttributes.Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067C8);
  }
  return result;
}

unint64_t sub_22799D2CC()
{
  unint64_t result;

  result = qword_2559067D0;
  if (!qword_2559067D0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6508, &type metadata for WallpaperAttributes.Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067D0);
  }
  return result;
}

unint64_t sub_22799D314()
{
  unint64_t result;

  result = qword_2559067D8;
  if (!qword_2559067D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A63F0, &type metadata for PhotoAlbumAttributes.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067D8);
  }
  return result;
}

unint64_t sub_22799D35C()
{
  unint64_t result;

  result = qword_2559067E0;
  if (!qword_2559067E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6418, &type metadata for PhotoAlbumAttributes.Photo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067E0);
  }
  return result;
}

uint64_t Ticket.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22799EFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Ticket.vendor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Ticket() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for Ticket()
{
  uint64_t result;

  result = qword_255906860;
  if (!qword_255906860)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22799D460()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F646E6576;
  if (*v0 != 1)
    v1 = 0x6469766F72507369;
  if (*v0)
    return v1;
  else
    return 7107189;
}

uint64_t sub_22799D4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22799E3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22799D4D8()
{
  sub_22799DD48();
  return sub_22799F52C();
}

uint64_t sub_22799D500()
{
  sub_22799DD48();
  return sub_22799F538();
}

uint64_t Ticket.hash(into:)()
{
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  type metadata accessor for Ticket();
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  return sub_22799F4CC();
}

uint64_t Ticket.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559067E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799DD48();
  sub_22799F520();
  v8[15] = 0;
  sub_22799EFE0();
  sub_22794F9A4(&qword_255904330, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_22799F400();
  if (!v1)
  {
    type metadata accessor for Ticket();
    v8[14] = 1;
    sub_22799F3D0();
    v8[13] = 2;
    sub_22799F3DC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Ticket.hashValue.getter()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  type metadata accessor for Ticket();
  sub_22799F130();
  sub_22799F4CC();
  return sub_22799F4E4();
}

uint64_t Ticket.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v20 = sub_22799EFE0();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559067F8);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Ticket();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799DD48();
  v22 = v7;
  v11 = v24;
  sub_22799F508();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v5;
  v27 = 0;
  sub_22794F9A4(&qword_255904348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_22799F3A0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v12);
  v26 = 1;
  v15 = sub_22799F370();
  v16 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v16 = v15;
  v16[1] = v17;
  v25 = 2;
  LOBYTE(v13) = sub_22799F37C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v23);
  v10[*(int *)(v8 + 24)] = v13 & 1;
  sub_22799DD8C((uint64_t)v10, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22799DDD0((uint64_t)v10);
}

uint64_t sub_22799DAAC()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F130();
  sub_22799F4CC();
  return sub_22799F4E4();
}

uint64_t sub_22799DB48()
{
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F130();
  return sub_22799F4CC();
}

uint64_t sub_22799DBCC()
{
  sub_22799F4B4();
  sub_22799EFE0();
  sub_22794F9A4(&qword_255903FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22799F0DC();
  sub_22799F130();
  sub_22799F4CC();
  return sub_22799F4E4();
}

uint64_t sub_22799DC64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Ticket.init(from:)(a1, a2);
}

uint64_t sub_22799DC78(_QWORD *a1)
{
  return Ticket.encode(to:)(a1);
}

uint64_t sub_22799DC8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s12ShazamEvents6TicketV2idSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s12ShazamEvents6TicketV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  char v11;

  if ((MEMORY[0x22E2A0808]() & 1) != 0)
  {
    v4 = type metadata accessor for Ticket();
    v5 = *(int *)(v4 + 20);
    v6 = *(_QWORD *)(a1 + v5);
    v7 = *(_QWORD *)(a1 + v5 + 8);
    v8 = (_QWORD *)(a2 + v5);
    v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (v10 = sub_22799F430(), v11 = 0, (v10 & 1) != 0))
      v11 = *(_BYTE *)(a1 + *(int *)(v4 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_22799DD48()
{
  unint64_t result;

  result = qword_2559067F0;
  if (!qword_2559067F0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6884, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559067F0);
  }
  return result;
}

uint64_t sub_22799DD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Ticket();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22799DDD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Ticket();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22799DE0C()
{
  return sub_22794F9A4(&qword_255906800, (uint64_t (*)(uint64_t))type metadata accessor for Ticket, (uint64_t)&protocol conformance descriptor for Ticket);
}

_QWORD *initializeBufferWithCopyOfBuffer for Ticket(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22799EFE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for Ticket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Ticket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Ticket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for Ticket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22799EFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for Ticket()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22799EFE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Ticket()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22799E140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22799EFE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_22799E1BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22799EFE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Ticket.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22799E284 + 4 * byte_2279A6675[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22799E2B8 + 4 * byte_2279A6670[v4]))();
}

uint64_t sub_22799E2B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799E2C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22799E2C8);
  return result;
}

uint64_t sub_22799E2D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22799E2DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22799E2E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799E2E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Ticket.CodingKeys()
{
  return &type metadata for Ticket.CodingKeys;
}

unint64_t sub_22799E308()
{
  unint64_t result;

  result = qword_2559068A0;
  if (!qword_2559068A0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A685C, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068A0);
  }
  return result;
}

unint64_t sub_22799E350()
{
  unint64_t result;

  result = qword_2559068A8;
  if (!qword_2559068A8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A67CC, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068A8);
  }
  return result;
}

unint64_t sub_22799E398()
{
  unint64_t result;

  result = qword_2559068B0;
  if (!qword_2559068B0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A67F4, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068B0);
  }
  return result;
}

uint64_t sub_22799E3DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F646E6576 && a2 == 0xE600000000000000 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6469766F72507369 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t Genre.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Genre.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22799E57C()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x656372756F736572;
}

uint64_t sub_22799E5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22799EDF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22799E5D8()
{
  sub_22799EBB8();
  return sub_22799F52C();
}

uint64_t sub_22799E600()
{
  sub_22799EBB8();
  return sub_22799F538();
}

uint64_t Genre.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_22799F130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22799F130();
  return swift_bridgeObjectRelease();
}

uint64_t Genre.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559068B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v12[1] = v1[3];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799EBB8();
  sub_22799F520();
  v13 = v8;
  v14 = v7;
  v15 = 0;
  sub_2279544C8();
  v10 = v12[3];
  sub_22799F400();
  if (!v10)
  {
    LOBYTE(v13) = 1;
    sub_22799F3D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Genre.hashValue.getter()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t Genre.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2559068C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22799EBB8();
  sub_22799F508();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  sub_227954550();
  sub_22799F3A0();
  v9 = v17;
  v15 = v16;
  LOBYTE(v16) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_22799F370();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v15;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22799E9FC()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_22799EA60()
{
  sub_22799F130();
  return sub_22799F130();
}

uint64_t sub_22799EA9C()
{
  sub_22799F4B4();
  sub_22799F130();
  sub_22799F130();
  return sub_22799F4E4();
}

uint64_t sub_22799EAFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Genre.init(from:)(a1, a2);
}

uint64_t sub_22799EB10(_QWORD *a1)
{
  return Genre.encode(to:)(a1);
}

uint64_t _s12ShazamEvents5GenreV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_22799F430(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_22799F430();
  }
  return result;
}

unint64_t sub_22799EBB8()
{
  unint64_t result;

  result = qword_2559068C0;
  if (!qword_2559068C0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6AA4, &type metadata for Genre.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068C0);
  }
  return result;
}

unint64_t sub_22799EC00()
{
  unint64_t result;

  result = qword_2559068D0;
  if (!qword_2559068D0)
  {
    result = MEMORY[0x22E2A1174](&protocol conformance descriptor for Genre, &type metadata for Genre);
    atomic_store(result, (unint64_t *)&qword_2559068D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Genre()
{
  return &type metadata for Genre;
}

uint64_t storeEnumTagSinglePayload for Genre.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22799ECA0 + 4 * byte_2279A68D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22799ECD4 + 4 * byte_2279A68D4[v4]))();
}

uint64_t sub_22799ECD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799ECDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22799ECE4);
  return result;
}

uint64_t sub_22799ECF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22799ECF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22799ECFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22799ED04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Genre.CodingKeys()
{
  return &type metadata for Genre.CodingKeys;
}

unint64_t sub_22799ED24()
{
  unint64_t result;

  result = qword_2559068D8;
  if (!qword_2559068D8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6A7C, &type metadata for Genre.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068D8);
  }
  return result;
}

unint64_t sub_22799ED6C()
{
  unint64_t result;

  result = qword_2559068E0;
  if (!qword_2559068E0)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A69EC, &type metadata for Genre.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068E0);
  }
  return result;
}

unint64_t sub_22799EDB4()
{
  unint64_t result;

  result = qword_2559068E8;
  if (!qword_2559068E8)
  {
    result = MEMORY[0x22E2A1174](&unk_2279A6A14, &type metadata for Genre.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559068E8);
  }
  return result;
}

uint64_t sub_22799EDF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000004449;
  if (v2 || (sub_22799F430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22799F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22799EEE4()
{
  return MEMORY[0x24BDCB1E0]();
}

uint64_t sub_22799EEF0()
{
  return MEMORY[0x24BDCB1F0]();
}

uint64_t sub_22799EEFC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_22799EF08()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_22799EF14()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_22799EF20()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_22799EF2C()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_22799EF38()
{
  return MEMORY[0x24BDCB820]();
}

uint64_t sub_22799EF44()
{
  return MEMORY[0x24BDCB838]();
}

uint64_t sub_22799EF50()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_22799EF5C()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_22799EF68()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_22799EF74()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_22799EF80()
{
  return MEMORY[0x24BDCBE78]();
}

uint64_t sub_22799EF8C()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_22799EF98()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t _s12ShazamEvents6TicketV2idSSvg_0()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_22799EFB0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_22799EFBC()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_22799EFC8()
{
  return MEMORY[0x24BDCDA50]();
}

uint64_t sub_22799EFD4()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_22799EFE0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22799EFEC()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_22799EFF8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_22799F004()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_22799F010()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_22799F01C()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_22799F028()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_22799F034()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_22799F040()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_22799F04C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_22799F058()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_22799F064()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_22799F070()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_22799F07C()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_22799F088()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_22799F094()
{
  return MEMORY[0x24BDCF490]();
}

uint64_t sub_22799F0A0()
{
  return MEMORY[0x24BDCF4E8]();
}

uint64_t sub_22799F0AC()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_22799F0B8()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22799F0C4()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_22799F0D0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22799F0DC()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_22799F0E8()
{
  return MEMORY[0x24BEE06A0]();
}

uint64_t sub_22799F0F4()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_22799F100()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22799F10C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22799F118()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22799F124()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_22799F130()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_22799F13C()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_22799F148()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22799F154()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_22799F160()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_22799F16C()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_22799F178()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_22799F184()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_22799F190()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_22799F19C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_22799F1A8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_22799F1B4()
{
  return MEMORY[0x24BEE1268]();
}

uint64_t sub_22799F1C0()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t sub_22799F1CC()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_22799F1D8()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_22799F1E4()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22799F1F0()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_22799F1FC()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_22799F208()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_22799F214()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22799F220()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_22799F22C()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_22799F238()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_22799F244()
{
  return MEMORY[0x24BDD0248]();
}

uint64_t sub_22799F250()
{
  return MEMORY[0x24BDD0418]();
}

uint64_t sub_22799F25C()
{
  return MEMORY[0x24BDD0460]();
}

uint64_t sub_22799F268()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22799F274()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_22799F280()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_22799F28C()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_22799F298()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_22799F2A4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_22799F2B0()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22799F2BC()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22799F2C8()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22799F2D4()
{
  return MEMORY[0x24BEE26B0]();
}

uint64_t sub_22799F2E0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_22799F2EC()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_22799F2F8()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_22799F304()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22799F310()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_22799F31C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_22799F328()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_22799F334()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_22799F340()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22799F34C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_22799F358()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_22799F364()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_22799F370()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_22799F37C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_22799F388()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_22799F394()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_22799F3A0()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_22799F3AC()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_22799F3B8()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_22799F3C4()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_22799F3D0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_22799F3DC()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_22799F3E8()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_22799F3F4()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_22799F400()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_22799F40C()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_22799F418()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_22799F424()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22799F430()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22799F43C()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_22799F448()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_22799F454()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_22799F460()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_22799F46C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22799F478()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_22799F484()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_22799F490()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_22799F49C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_22799F4A8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_22799F4B4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22799F4C0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22799F4CC()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_22799F4D8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_22799F4E4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_22799F4F0()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_22799F4FC()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_22799F508()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_22799F514()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_22799F520()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_22799F52C()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_22799F538()
{
  return MEMORY[0x24BEE4A10]();
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x24BDBDA78](space, components);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDBB8](name);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get()
{
  return MEMORY[0x24BEE71A8]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

